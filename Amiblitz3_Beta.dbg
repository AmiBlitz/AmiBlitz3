00000008 <AmiBlitz3.ab3@0> 
00000014 <AmiBlitz3.ab3@43> optimize 5                               ; don't use FPU (opt. 4)
00000076 <AmiBlitz3.ab3@64> !initasm                                 ; some initial mumbo jumbo
000000A0 <AmiBlitz3.ab3@65> !basic
000000AC <AmiBlitz3.ab3@70> cli_verbose = -1
000000B2 <AmiBlitz3.ab3@71> CLIMode     = False
000000C8 <AmiBlitz3.ab3@72> MaxLen cli_tempstr.s = 1024
000000E4 <AmiBlitz3.ab3@73> GetCurrentDirName_ &cli_tempstr,1024  ; get the current dir to restore it on exit
0000010E <AmiBlitz3.ab3@74> cli_path.s = Peek.s(&cli_tempstr)
0000010E <library_offsets.ab3@1> XINCLUDE "/Shared/library_offsets.ab3"   ; needed includes
0000010E <AmiBlitz3.ab3@78> XINCLUDE "/Shared/library_offsets.ab3"   ; needed includes
0000010E <dos.include.ab3@1> XINCLUDE "dos.include.bb2"
0000010E <error.include.bb2@1> XINCLUDE "dos.include.bb2"
00000146 <error.include.bb2@62> XINCLUDE "dos.include.bb2"
0000016E <error.include.bb2@63> XINCLUDE "dos.include.bb2"
00000196 <error.include.bb2@64> XINCLUDE "dos.include.bb2"
000001BE <error.include.bb2@65> XINCLUDE "dos.include.bb2"
000001C4 <error.include.bb2@66> XINCLUDE "dos.include.bb2"
000001F8 <error.include.bb2@67> XINCLUDE "dos.include.bb2"
0000022C <error.include.bb2@68> XINCLUDE "dos.include.bb2"
00000260 <error.include.bb2@69> XINCLUDE "dos.include.bb2"
0000027C <error.include.bb2@73> XINCLUDE "dos.include.bb2"
00000296 <error.include.bb2@99> XINCLUDE "dos.include.bb2"
000002A2 <error.include.bb2@101> XINCLUDE "dos.include.bb2"
000002A6 <error.include.bb2@102> XINCLUDE "dos.include.bb2"
000002B4 <error.include.bb2@104> XINCLUDE "dos.include.bb2"
000002F6 <error.include.bb2@124> XINCLUDE "dos.include.bb2"
0000037A <error.include.bb2@126> XINCLUDE "dos.include.bb2"
000003E6 <error.include.bb2@127> XINCLUDE "dos.include.bb2"
00000400 <error.include.bb2@129> XINCLUDE "dos.include.bb2"
00000438 <error.include.bb2@130> XINCLUDE "dos.include.bb2"
00000498 <error.include.bb2@131> XINCLUDE "dos.include.bb2"
000004A6 <error.include.bb2@133> XINCLUDE "dos.include.bb2"
000004B4 <error.include.bb2@134> XINCLUDE "dos.include.bb2"
000004C2 <error.include.bb2@135> XINCLUDE "dos.include.bb2"
000004D0 <error.include.bb2@136> XINCLUDE "dos.include.bb2"
000004F8 <error.include.bb2@137> XINCLUDE "dos.include.bb2"
00000506 <error.include.bb2@138> XINCLUDE "dos.include.bb2"
0000050E <error.include.bb2@139> XINCLUDE "dos.include.bb2"
00000540 <error.include.bb2@141> XINCLUDE "dos.include.bb2"
0000055A <error.include.bb2@146> XINCLUDE "dos.include.bb2"
00000592 <error.include.bb2@147> XINCLUDE "dos.include.bb2"
00000598 <error.include.bb2@148> XINCLUDE "dos.include.bb2"
000005DC <error.include.bb2@149> XINCLUDE "dos.include.bb2"
00000624 <error.include.bb2@150> XINCLUDE "dos.include.bb2"
0000062E <error.include.bb2@154> XINCLUDE "dos.include.bb2"
00000648 <error.include.bb2@156> XINCLUDE "dos.include.bb2"
00000692 <error.include.bb2@195> XINCLUDE "dos.include.bb2"
0000069A <error.include.bb2@197> XINCLUDE "dos.include.bb2"
00000706 <error.include.bb2@198> XINCLUDE "dos.include.bb2"
00000728 <error.include.bb2@199> XINCLUDE "dos.include.bb2"
00000788 <error.include.bb2@200> XINCLUDE "dos.include.bb2"
00000796 <error.include.bb2@202> XINCLUDE "dos.include.bb2"
000007A4 <error.include.bb2@203> XINCLUDE "dos.include.bb2"
000007B2 <error.include.bb2@204> XINCLUDE "dos.include.bb2"
000007C0 <error.include.bb2@205> XINCLUDE "dos.include.bb2"
00000820 <error.include.bb2@206> XINCLUDE "dos.include.bb2"
0000082E <error.include.bb2@207> XINCLUDE "dos.include.bb2"
00000864 <error.include.bb2@210> XINCLUDE "dos.include.bb2"
0000086E <error.include.bb2@214> XINCLUDE "dos.include.bb2"
0000088A <error.include.bb2@215> XINCLUDE "dos.include.bb2"
0000088A <multilist.include.bb2@1> XINCLUDE "dos.include.bb2"
0000088A <strptr.include.bb2@1> XINCLUDE "dos.include.bb2"
0000088A <useful.include.ab3@1> XINCLUDE "dos.include.bb2"
000008B8 <useful.include.ab3@283> XINCLUDE "dos.include.bb2"
000008C2 <useful.include.ab3@284> XINCLUDE "dos.include.bb2"
000008D6 <useful.include.ab3@285> XINCLUDE "dos.include.bb2"
000008DE <useful.include.ab3@286> XINCLUDE "dos.include.bb2"
00000906 <useful.include.ab3@287> XINCLUDE "dos.include.bb2"
0000092C <useful.include.ab3@288> XINCLUDE "dos.include.bb2"
0000094C <useful.include.ab3@291> XINCLUDE "dos.include.bb2"
0000095A <useful.include.ab3@292> XINCLUDE "dos.include.bb2"
00000980 <useful.include.ab3@293> XINCLUDE "dos.include.bb2"
00000988 <useful.include.ab3@295> XINCLUDE "dos.include.bb2"
00000990 <useful.include.ab3@296> XINCLUDE "dos.include.bb2"
00000996 <useful.include.ab3@297> XINCLUDE "dos.include.bb2"
000009B2 <useful.include.ab3@298> XINCLUDE "dos.include.bb2"
000009D6 <useful.include.ab3@299> XINCLUDE "dos.include.bb2"
000009EA <useful.include.ab3@300> XINCLUDE "dos.include.bb2"
000009F0 <useful.include.ab3@301> XINCLUDE "dos.include.bb2"
00000A3A <useful.include.ab3@302> XINCLUDE "dos.include.bb2"
00000A3C <useful.include.ab3@303> XINCLUDE "dos.include.bb2"
00000A4A <useful.include.ab3@305> XINCLUDE "dos.include.bb2"
00000A6A <useful.include.ab3@307> XINCLUDE "dos.include.bb2"
00000AC8 <useful.include.ab3@308> XINCLUDE "dos.include.bb2"
00000ACE <useful.include.ab3@309> XINCLUDE "dos.include.bb2"
00000ADC <useful.include.ab3@310> XINCLUDE "dos.include.bb2"
00000AF0 <useful.include.ab3@311> XINCLUDE "dos.include.bb2"
00000B02 <useful.include.ab3@312> XINCLUDE "dos.include.bb2"
00000B10 <useful.include.ab3@313> XINCLUDE "dos.include.bb2"
00000B16 <useful.include.ab3@314> XINCLUDE "dos.include.bb2"
00000B22 <useful.include.ab3@315> XINCLUDE "dos.include.bb2"
00000B36 <useful.include.ab3@318> XINCLUDE "dos.include.bb2"
00000B4A <useful.include.ab3@319> XINCLUDE "dos.include.bb2"
00000B5C <useful.include.ab3@320> XINCLUDE "dos.include.bb2"
00000B6A <useful.include.ab3@321> XINCLUDE "dos.include.bb2"
00000B88 <useful.include.ab3@322> XINCLUDE "dos.include.bb2"
00000B8E <useful.include.ab3@323> XINCLUDE "dos.include.bb2"
00000BA2 <useful.include.ab3@327> XINCLUDE "dos.include.bb2"
00000BAC <useful.include.ab3@328> XINCLUDE "dos.include.bb2"
00000BB4 <useful.include.ab3@329> XINCLUDE "dos.include.bb2"
00000BD2 <useful.include.ab3@330> XINCLUDE "dos.include.bb2"
00000BD8 <useful.include.ab3@331> XINCLUDE "dos.include.bb2"
00000C04 <useful.include.ab3@332> XINCLUDE "dos.include.bb2"
00000C0A <useful.include.ab3@334> XINCLUDE "dos.include.bb2"
00000C1C <useful.include.ab3@335> XINCLUDE "dos.include.bb2"
00000C34 <useful.include.ab3@336> XINCLUDE "dos.include.bb2"
00000C4C <useful.include.ab3@337> XINCLUDE "dos.include.bb2"
00000C6A <useful.include.ab3@338> XINCLUDE "dos.include.bb2"
00000C6C <useful.include.ab3@340> XINCLUDE "dos.include.bb2"
00000C7A <useful.include.ab3@341> XINCLUDE "dos.include.bb2"
00000CA0 <useful.include.ab3@342> XINCLUDE "dos.include.bb2"
00000D34 <useful.include.ab3@343> XINCLUDE "dos.include.bb2"
00000D42 <useful.include.ab3@345> XINCLUDE "dos.include.bb2"
00000D48 <useful.include.ab3@346> XINCLUDE "dos.include.bb2"
00000D72 <useful.include.ab3@347> XINCLUDE "dos.include.bb2"
00000D90 <useful.include.ab3@348> XINCLUDE "dos.include.bb2"
00000D90 <strptr.include.bb2@37> XINCLUDE "dos.include.bb2"
00000DAA <strptr.include.bb2@96> XINCLUDE "dos.include.bb2"
00000DB4 <strptr.include.bb2@97> XINCLUDE "dos.include.bb2"
00000DFC <strptr.include.bb2@98> XINCLUDE "dos.include.bb2"
00000E00 <strptr.include.bb2@100> XINCLUDE "dos.include.bb2"
00000E2E <strptr.include.bb2@197> XINCLUDE "dos.include.bb2"
00000E38 <strptr.include.bb2@198> XINCLUDE "dos.include.bb2"
00000E80 <strptr.include.bb2@199> XINCLUDE "dos.include.bb2"
00000E94 <strptr.include.bb2@200> XINCLUDE "dos.include.bb2"
00000EA6 <strptr.include.bb2@201> XINCLUDE "dos.include.bb2"
00000ECA <strptr.include.bb2@205> XINCLUDE "dos.include.bb2"
00000ED4 <strptr.include.bb2@208> XINCLUDE "dos.include.bb2"
00000EE2 <strptr.include.bb2@209> XINCLUDE "dos.include.bb2"
00000EEC <strptr.include.bb2@210> XINCLUDE "dos.include.bb2"
00000F14 <strptr.include.bb2@211> XINCLUDE "dos.include.bb2"
00000F2E <strptr.include.bb2@212> XINCLUDE "dos.include.bb2"
00000F46 <strptr.include.bb2@216> XINCLUDE "dos.include.bb2"
00000F60 <strptr.include.bb2@282> XINCLUDE "dos.include.bb2"
00000F6A <strptr.include.bb2@283> XINCLUDE "dos.include.bb2"
00000F78 <strptr.include.bb2@284> XINCLUDE "dos.include.bb2"
00000FAA <strptr.include.bb2@285> XINCLUDE "dos.include.bb2"
00000FC8 <strptr.include.bb2@287> XINCLUDE "dos.include.bb2"
00000FD2 <strptr.include.bb2@288> XINCLUDE "dos.include.bb2"
00000FD2 <multilist.include.bb2@44> XINCLUDE "dos.include.bb2"
00000FE8 <multilist.include.bb2@61> XINCLUDE "dos.include.bb2"
00001002 <multilist.include.bb2@406> XINCLUDE "dos.include.bb2"
0000100C <multilist.include.bb2@407> XINCLUDE "dos.include.bb2"
0000102E <multilist.include.bb2@408> XINCLUDE "dos.include.bb2"
00001052 <multilist.include.bb2@409> XINCLUDE "dos.include.bb2"
00001064 <multilist.include.bb2@410> XINCLUDE "dos.include.bb2"
0000107C <multilist.include.bb2@411> XINCLUDE "dos.include.bb2"
00001090 <multilist.include.bb2@412> XINCLUDE "dos.include.bb2"
000010A2 <multilist.include.bb2@415> XINCLUDE "dos.include.bb2"
000010B2 <multilist.include.bb2@416> XINCLUDE "dos.include.bb2"
000010B8 <multilist.include.bb2@417> XINCLUDE "dos.include.bb2"
000010C8 <multilist.include.bb2@418> XINCLUDE "dos.include.bb2"
000010D8 <multilist.include.bb2@419> XINCLUDE "dos.include.bb2"
000010F2 <multilist.include.bb2@420> XINCLUDE "dos.include.bb2"
000010F6 <multilist.include.bb2@422> XINCLUDE "dos.include.bb2"
00001110 <multilist.include.bb2@585> XINCLUDE "dos.include.bb2"
00001140 <multilist.include.bb2@586> XINCLUDE "dos.include.bb2"
0000114A <multilist.include.bb2@588> XINCLUDE "dos.include.bb2"
00001154 <multilist.include.bb2@589> XINCLUDE "dos.include.bb2"
00001176 <multilist.include.bb2@590> XINCLUDE "dos.include.bb2"
0000119A <multilist.include.bb2@591> XINCLUDE "dos.include.bb2"
000011AC <multilist.include.bb2@592> XINCLUDE "dos.include.bb2"
000011C4 <multilist.include.bb2@593> XINCLUDE "dos.include.bb2"
000011D8 <multilist.include.bb2@594> XINCLUDE "dos.include.bb2"
000011EA <multilist.include.bb2@597> XINCLUDE "dos.include.bb2"
000011FA <multilist.include.bb2@598> XINCLUDE "dos.include.bb2"
00001200 <multilist.include.bb2@599> XINCLUDE "dos.include.bb2"
00001210 <multilist.include.bb2@600> XINCLUDE "dos.include.bb2"
00001220 <multilist.include.bb2@601> XINCLUDE "dos.include.bb2"
0000123A <multilist.include.bb2@602> XINCLUDE "dos.include.bb2"
00001240 <multilist.include.bb2@603> XINCLUDE "dos.include.bb2"
00001246 <multilist.include.bb2@604> XINCLUDE "dos.include.bb2"
0000124A <multilist.include.bb2@605> XINCLUDE "dos.include.bb2"
00001264 <multilist.include.bb2@713> XINCLUDE "dos.include.bb2"
0000126C <multilist.include.bb2@714> XINCLUDE "dos.include.bb2"
00001276 <multilist.include.bb2@715> XINCLUDE "dos.include.bb2"
0000128C <multilist.include.bb2@716> XINCLUDE "dos.include.bb2"
000012A0 <multilist.include.bb2@717> XINCLUDE "dos.include.bb2"
000012C4 <multilist.include.bb2@718> XINCLUDE "dos.include.bb2"
000012D2 <multilist.include.bb2@721> XINCLUDE "dos.include.bb2"
000012DC <multilist.include.bb2@722> XINCLUDE "dos.include.bb2"
000012E2 <multilist.include.bb2@723> XINCLUDE "dos.include.bb2"
000012EC <multilist.include.bb2@724> XINCLUDE "dos.include.bb2"
000012F2 <multilist.include.bb2@725> XINCLUDE "dos.include.bb2"
00001310 <multilist.include.bb2@742> XINCLUDE "dos.include.bb2"
00001318 <multilist.include.bb2@743> XINCLUDE "dos.include.bb2"
00001322 <multilist.include.bb2@744> XINCLUDE "dos.include.bb2"
00001340 <multilist.include.bb2@745> XINCLUDE "dos.include.bb2"
00001356 <multilist.include.bb2@746> XINCLUDE "dos.include.bb2"
0000136A <multilist.include.bb2@747> XINCLUDE "dos.include.bb2"
0000139E <multilist.include.bb2@748> XINCLUDE "dos.include.bb2"
000013AC <multilist.include.bb2@751> XINCLUDE "dos.include.bb2"
000013B6 <multilist.include.bb2@752> XINCLUDE "dos.include.bb2"
000013BC <multilist.include.bb2@753> XINCLUDE "dos.include.bb2"
000013C6 <multilist.include.bb2@754> XINCLUDE "dos.include.bb2"
000013CA <multilist.include.bb2@756> XINCLUDE "dos.include.bb2"
000013D0 <multilist.include.bb2@757> XINCLUDE "dos.include.bb2"
000013EA <multilist.include.bb2@795> XINCLUDE "dos.include.bb2"
000013F4 <multilist.include.bb2@796> XINCLUDE "dos.include.bb2"
000013FE <multilist.include.bb2@797> XINCLUDE "dos.include.bb2"
00001414 <multilist.include.bb2@798> XINCLUDE "dos.include.bb2"
00001424 <multilist.include.bb2@799> XINCLUDE "dos.include.bb2"
0000142E <multilist.include.bb2@801> XINCLUDE "dos.include.bb2"
00001434 <multilist.include.bb2@802> XINCLUDE "dos.include.bb2"
00001438 <multilist.include.bb2@803> XINCLUDE "dos.include.bb2"
0000145A <multilist.include.bb2@821> XINCLUDE "dos.include.bb2"
00001462 <multilist.include.bb2@822> XINCLUDE "dos.include.bb2"
0000147C <multilist.include.bb2@823> XINCLUDE "dos.include.bb2"
00001486 <multilist.include.bb2@824> XINCLUDE "dos.include.bb2"
0000149C <multilist.include.bb2@825> XINCLUDE "dos.include.bb2"
000014B0 <multilist.include.bb2@826> XINCLUDE "dos.include.bb2"
00001506 <multilist.include.bb2@827> XINCLUDE "dos.include.bb2"
00001540 <multilist.include.bb2@828> XINCLUDE "dos.include.bb2"
00001552 <multilist.include.bb2@829> XINCLUDE "dos.include.bb2"
00001574 <multilist.include.bb2@830> XINCLUDE "dos.include.bb2"
0000157A <multilist.include.bb2@831> XINCLUDE "dos.include.bb2"
000015D0 <multilist.include.bb2@832> XINCLUDE "dos.include.bb2"
0000160A <multilist.include.bb2@833> XINCLUDE "dos.include.bb2"
00001610 <multilist.include.bb2@835> XINCLUDE "dos.include.bb2"
0000164A <multilist.include.bb2@836> XINCLUDE "dos.include.bb2"
00001684 <multilist.include.bb2@837> XINCLUDE "dos.include.bb2"
00001696 <multilist.include.bb2@839> XINCLUDE "dos.include.bb2"
000016A0 <multilist.include.bb2@840> XINCLUDE "dos.include.bb2"
000016A6 <multilist.include.bb2@841> XINCLUDE "dos.include.bb2"
000016B0 <multilist.include.bb2@842> XINCLUDE "dos.include.bb2"
000016C4 <multilist.include.bb2@843> XINCLUDE "dos.include.bb2"
0000170A <multilist.include.bb2@870> XINCLUDE "dos.include.bb2"
00001712 <multilist.include.bb2@871> XINCLUDE "dos.include.bb2"
00001730 <multilist.include.bb2@872> XINCLUDE "dos.include.bb2"
0000175C <multilist.include.bb2@873> XINCLUDE "dos.include.bb2"
0000177A <multilist.include.bb2@874> XINCLUDE "dos.include.bb2"
00001794 <multilist.include.bb2@875> XINCLUDE "dos.include.bb2"
000017AE <multilist.include.bb2@876> XINCLUDE "dos.include.bb2"
00001830 <multilist.include.bb2@877> XINCLUDE "dos.include.bb2"
00001844 <multilist.include.bb2@879> XINCLUDE "dos.include.bb2"
0000185C <multilist.include.bb2@880> XINCLUDE "dos.include.bb2"
00001862 <multilist.include.bb2@881> XINCLUDE "dos.include.bb2"
0000187A <multilist.include.bb2@882> XINCLUDE "dos.include.bb2"
00001890 <multilist.include.bb2@884> XINCLUDE "dos.include.bb2"
000018AA <multilist.include.bb2@886> XINCLUDE "dos.include.bb2"
000018BE <multilist.include.bb2@887> XINCLUDE "dos.include.bb2"
000018CC <multilist.include.bb2@888> XINCLUDE "dos.include.bb2"
00001922 <multilist.include.bb2@889> XINCLUDE "dos.include.bb2"
00001958 <multilist.include.bb2@890> XINCLUDE "dos.include.bb2"
00001988 <multilist.include.bb2@891> XINCLUDE "dos.include.bb2"
00001A10 <multilist.include.bb2@893> XINCLUDE "dos.include.bb2"
00001A16 <multilist.include.bb2@894> XINCLUDE "dos.include.bb2"
00001A24 <multilist.include.bb2@895> XINCLUDE "dos.include.bb2"
00001A7A <multilist.include.bb2@896> XINCLUDE "dos.include.bb2"
00001AB0 <multilist.include.bb2@897> XINCLUDE "dos.include.bb2"
00001AE0 <multilist.include.bb2@898> XINCLUDE "dos.include.bb2"
00001AE6 <multilist.include.bb2@901> XINCLUDE "dos.include.bb2"
00001B00 <multilist.include.bb2@902> XINCLUDE "dos.include.bb2"
00001B0E <multilist.include.bb2@903> XINCLUDE "dos.include.bb2"
00001B48 <multilist.include.bb2@904> XINCLUDE "dos.include.bb2"
00001B7E <multilist.include.bb2@905> XINCLUDE "dos.include.bb2"
00001BAE <multilist.include.bb2@906> XINCLUDE "dos.include.bb2"
00001BBC <multilist.include.bb2@909> XINCLUDE "dos.include.bb2"
00001BC6 <multilist.include.bb2@910> XINCLUDE "dos.include.bb2"
00001BCC <multilist.include.bb2@911> XINCLUDE "dos.include.bb2"
00001BD6 <multilist.include.bb2@912> XINCLUDE "dos.include.bb2"
00001BEA <multilist.include.bb2@913> XINCLUDE "dos.include.bb2"
00001BEA <dos.include.ab3@57> XINCLUDE "dos.include.bb2"
00001BEA <wbstart.include.ab3@1> XINCLUDE "dos.include.bb2"
00001C00 <wbstart.include.ab3@58> XINCLUDE "dos.include.bb2"
00001C0A <wbstart.include.ab3@59> XINCLUDE "dos.include.bb2"
00001C22 <wbstart.include.ab3@61> XINCLUDE "dos.include.bb2"
00001C24 <wbstart.include.ab3@63> XINCLUDE "dos.include.bb2"
00001C52 <wbstart.include.ab3@64> XINCLUDE "dos.include.bb2"
00001C52 <dos.include.ab3@59> XINCLUDE "dos.include.bb2"
00001C68 <dos.include.ab3@61> XINCLUDE "dos.include.bb2"
00001C70 <dos.include.ab3@79> XINCLUDE "dos.include.bb2"
00001C78 <dos.include.ab3@80> XINCLUDE "dos.include.bb2"
00001CA0 <dos.include.ab3@81> XINCLUDE "dos.include.bb2"
00001CA8 <dos.include.ab3@82> XINCLUDE "dos.include.bb2"
00001CD0 <dos.include.ab3@83> XINCLUDE "dos.include.bb2"
00001CF8 <dos.include.ab3@84> XINCLUDE "dos.include.bb2"
00001D20 <dos.include.ab3@85> XINCLUDE "dos.include.bb2"
00001D28 <dos.include.ab3@86> XINCLUDE "dos.include.bb2"
00001D30 <dos.include.ab3@87> XINCLUDE "dos.include.bb2"
00001D38 <dos.include.ab3@88> XINCLUDE "dos.include.bb2"
00001D40 <dos.include.ab3@89> XINCLUDE "dos.include.bb2"
00001D48 <dos.include.ab3@90> XINCLUDE "dos.include.bb2"
00001D50 <dos.include.ab3@91> XINCLUDE "dos.include.bb2"
00001D58 <dos.include.ab3@92> XINCLUDE "dos.include.bb2"
00001D60 <dos.include.ab3@93> XINCLUDE "dos.include.bb2"
00001D68 <dos.include.ab3@94> XINCLUDE "dos.include.bb2"
00001D88 <dos.include.ab3@95> XINCLUDE "dos.include.bb2"
00001D90 <dos.include.ab3@96> XINCLUDE "dos.include.bb2"
00001D98 <dos.include.ab3@97> XINCLUDE "dos.include.bb2"
00001DC0 <dos.include.ab3@99> XINCLUDE "dos.include.bb2"
00001DD6 <dos.include.ab3@130> XINCLUDE "dos.include.bb2"
00001DE2 <dos.include.ab3@131> XINCLUDE "dos.include.bb2"
00001DE6 <dos.include.ab3@132> XINCLUDE "dos.include.bb2"
00001DFC <dos.include.ab3@145> XINCLUDE "dos.include.bb2"
00001E16 <dos.include.ab3@146> XINCLUDE "dos.include.bb2"
00001E2C <dos.include.ab3@147> XINCLUDE "dos.include.bb2"
00001E56 <dos.include.ab3@148> XINCLUDE "dos.include.bb2"
00001E60 <dos.include.ab3@149> XINCLUDE "dos.include.bb2"
00001E66 <dos.include.ab3@150> XINCLUDE "dos.include.bb2"
00001E7C <dos.include.ab3@163> XINCLUDE "dos.include.bb2"
00001E96 <dos.include.ab3@164> XINCLUDE "dos.include.bb2"
00001EAC <dos.include.ab3@165> XINCLUDE "dos.include.bb2"
00001ED6 <dos.include.ab3@166> XINCLUDE "dos.include.bb2"
00001EE0 <dos.include.ab3@167> XINCLUDE "dos.include.bb2"
00001EE6 <dos.include.ab3@168> XINCLUDE "dos.include.bb2"
00001F10 <dos.include.ab3@184> XINCLUDE "dos.include.bb2"
00001F1C <dos.include.ab3@185> XINCLUDE "dos.include.bb2"
00001F3C <dos.include.ab3@186> XINCLUDE "dos.include.bb2"
00001F46 <dos.include.ab3@187> XINCLUDE "dos.include.bb2"
00001F56 <dos.include.ab3@188> XINCLUDE "dos.include.bb2"
00001F66 <dos.include.ab3@189> XINCLUDE "dos.include.bb2"
00001F70 <dos.include.ab3@191> XINCLUDE "dos.include.bb2"
00001F8A <dos.include.ab3@192> XINCLUDE "dos.include.bb2"
00001FA0 <dos.include.ab3@430> XINCLUDE "dos.include.bb2"
00001FB2 <dos.include.ab3@432> XINCLUDE "dos.include.bb2"
0000202C <dos.include.ab3@433> XINCLUDE "dos.include.bb2"
00002056 <dos.include.ab3@434> XINCLUDE "dos.include.bb2"
0000206E <dos.include.ab3@435> XINCLUDE "dos.include.bb2"
00002084 <dos.include.ab3@461> XINCLUDE "dos.include.bb2"
00002096 <dos.include.ab3@462> XINCLUDE "dos.include.bb2"
0000209A <dos.include.ab3@463> XINCLUDE "dos.include.bb2"
000020B0 <dos.include.ab3@479> XINCLUDE "dos.include.bb2"
000020B2 <dos.include.ab3@480> XINCLUDE "dos.include.bb2"
000020EC <dos.include.ab3@541> XINCLUDE "dos.include.bb2"
00002120 <dos.include.ab3@543> XINCLUDE "dos.include.bb2"
00002146 <dos.include.ab3@544> XINCLUDE "dos.include.bb2"
00002166 <dos.include.ab3@545> XINCLUDE "dos.include.bb2"
00002186 <dos.include.ab3@546> XINCLUDE "dos.include.bb2"
000021B0 <dos.include.ab3@661> XINCLUDE "dos.include.bb2"
000021C6 <dos.include.ab3@662> XINCLUDE "dos.include.bb2"
000021D0 <dos.include.ab3@663> XINCLUDE "dos.include.bb2"
000021F8 <dos.include.ab3@664> XINCLUDE "dos.include.bb2"
000021FE <dos.include.ab3@665> XINCLUDE "dos.include.bb2"
00002226 <dos.include.ab3@666> XINCLUDE "dos.include.bb2"
00002250 <dos.include.ab3@668> XINCLUDE "dos.include.bb2"
0000226E <dos.include.ab3@669> XINCLUDE "dos.include.bb2"
00002298 <dos.include.ab3@692> XINCLUDE "dos.include.bb2"
00002308 <dos.include.ab3@693> XINCLUDE "dos.include.bb2"
00002332 <dos.include.ab3@694> XINCLUDE "dos.include.bb2"
00002350 <dos.include.ab3@695> XINCLUDE "dos.include.bb2"
0000237A <dos.include.ab3@730> XINCLUDE "dos.include.bb2"
0000239A <dos.include.ab3@731> XINCLUDE "dos.include.bb2"
000023C6 <dos.include.ab3@732> XINCLUDE "dos.include.bb2"
000023D0 <dos.include.ab3@733> XINCLUDE "dos.include.bb2"
000023EA <dos.include.ab3@734> XINCLUDE "dos.include.bb2"
00002414 <dos.include.ab3@881> XINCLUDE "dos.include.bb2"
000024C2 <dos.include.ab3@882> XINCLUDE "dos.include.bb2"
000024D8 <dos.include.ab3@883> XINCLUDE "dos.include.bb2"
000024E2 <dos.include.ab3@884> XINCLUDE "dos.include.bb2"
0000250A <dos.include.ab3@885> XINCLUDE "dos.include.bb2"
00002514 <dos.include.ab3@886> XINCLUDE "dos.include.bb2"
0000251A <dos.include.ab3@887> XINCLUDE "dos.include.bb2"
00002520 <dos.include.ab3@888> XINCLUDE "dos.include.bb2"
00002526 <dos.include.ab3@889> XINCLUDE "dos.include.bb2"
00002538 <dos.include.ab3@891> XINCLUDE "dos.include.bb2"
00002542 <dos.include.ab3@893> XINCLUDE "dos.include.bb2"
0000255C <dos.include.ab3@894> XINCLUDE "dos.include.bb2"
0000259A <dos.include.ab3@915> XINCLUDE "dos.include.bb2"
000025A2 <dos.include.ab3@916> XINCLUDE "dos.include.bb2"
00002650 <dos.include.ab3@917> XINCLUDE "dos.include.bb2"
00002664 <dos.include.ab3@918> XINCLUDE "dos.include.bb2"
000026A6 <dos.include.ab3@919> XINCLUDE "dos.include.bb2"
000026C6 <dos.include.ab3@921> XINCLUDE "dos.include.bb2"
000026D0 <dos.include.ab3@922> XINCLUDE "dos.include.bb2"
000026EC <dos.include.ab3@923> XINCLUDE "dos.include.bb2"
00002726 <dos.include.ab3@975> XINCLUDE "dos.include.bb2"
0000272E <dos.include.ab3@976> XINCLUDE "dos.include.bb2"
000027DC <dos.include.ab3@977> XINCLUDE "dos.include.bb2"
00002812 <dos.include.ab3@978> XINCLUDE "dos.include.bb2"
00002832 <dos.include.ab3@979> XINCLUDE "dos.include.bb2"
00002850 <dos.include.ab3@980> XINCLUDE "dos.include.bb2"
00002874 <dos.include.ab3@981> XINCLUDE "dos.include.bb2"
0000287E <dos.include.ab3@983> XINCLUDE "dos.include.bb2"
0000289A <dos.include.ab3@984> XINCLUDE "dos.include.bb2"
000028D4 <dos.include.ab3@1001> XINCLUDE "dos.include.bb2"
00002982 <dos.include.ab3@1002> XINCLUDE "dos.include.bb2"
000029BA <dos.include.ab3@1003> XINCLUDE "dos.include.bb2"
000029DA <dos.include.ab3@1004> XINCLUDE "dos.include.bb2"
000029E0 <dos.include.ab3@1005> XINCLUDE "dos.include.bb2"
00002A00 <dos.include.ab3@1006> XINCLUDE "dos.include.bb2"
00002A0A <dos.include.ab3@1007> XINCLUDE "dos.include.bb2"
00002A24 <dos.include.ab3@1008> XINCLUDE "dos.include.bb2"
00002A3C <dos.include.ab3@1009> XINCLUDE "dos.include.bb2"
00002A46 <dos.include.ab3@1012> XINCLUDE "dos.include.bb2"
00002A62 <dos.include.ab3@1013> XINCLUDE "dos.include.bb2"
00002A8C <dos.include.ab3@1148> XINCLUDE "dos.include.bb2"
00002A9A <dos.include.ab3@1150> XINCLUDE "dos.include.bb2"
00002B60 <dos.include.ab3@1151> XINCLUDE "dos.include.bb2"
00002B8A <dos.include.ab3@1152> XINCLUDE "dos.include.bb2"
00002BB2 <dos.include.ab3@1154> XINCLUDE "dos.include.bb2"
00002BDC <dos.include.ab3@1155> XINCLUDE "dos.include.bb2"
00002C06 <dos.include.ab3@1157> XINCLUDE "dos.include.bb2"
00002C24 <dos.include.ab3@1158> XINCLUDE "dos.include.bb2"
00002C4E <dos.include.ab3@1176> XINCLUDE "dos.include.bb2"
00002CBA <dos.include.ab3@1178> XINCLUDE "dos.include.bb2"
00002CE2 <dos.include.ab3@1179> XINCLUDE "dos.include.bb2"
00002CF0 <dos.include.ab3@1180> XINCLUDE "dos.include.bb2"
00002D24 <dos.include.ab3@1181> XINCLUDE "dos.include.bb2"
00002D32 <dos.include.ab3@1184> XINCLUDE "dos.include.bb2"
00002D54 <dos.include.ab3@1190> XINCLUDE "dos.include.bb2"
00002D62 <dos.include.ab3@1194> XINCLUDE "dos.include.bb2"
00002D86 <dos.include.ab3@1195> XINCLUDE "dos.include.bb2"
00002DB0 <dos.include.ab3@1196> XINCLUDE "dos.include.bb2"
00002DDA <dos.include.ab3@1199> XINCLUDE "dos.include.bb2"
00002DF8 <dos.include.ab3@1200> XINCLUDE "dos.include.bb2"
00002E22 <dos.include.ab3@1261> XINCLUDE "dos.include.bb2"
00002E7A <dos.include.ab3@1262> XINCLUDE "dos.include.bb2"
00002EA4 <dos.include.ab3@1263> XINCLUDE "dos.include.bb2"
00002EC2 <dos.include.ab3@1264> XINCLUDE "dos.include.bb2"
00002ED8 <dos.include.ab3@1338> XINCLUDE "dos.include.bb2"
00002EDE <dos.include.ab3@1340> XINCLUDE "dos.include.bb2"
00002EE8 <dos.include.ab3@1341> XINCLUDE "dos.include.bb2"
00002EF2 <dos.include.ab3@1342> XINCLUDE "dos.include.bb2"
00002F10 <dos.include.ab3@1345> XINCLUDE "dos.include.bb2"
00002F16 <dos.include.ab3@1346> XINCLUDE "dos.include.bb2"
00002F1C <dos.include.ab3@1347> XINCLUDE "dos.include.bb2"
00002F2C <dos.include.ab3@1349> XINCLUDE "dos.include.bb2"
00002F32 <dos.include.ab3@1350> XINCLUDE "dos.include.bb2"
00002F3A <dos.include.ab3@1351> XINCLUDE "dos.include.bb2"
00002F62 <dos.include.ab3@1352> XINCLUDE "dos.include.bb2"
00002F6C <dos.include.ab3@1353> XINCLUDE "dos.include.bb2"
00002F76 <dos.include.ab3@1355> XINCLUDE "dos.include.bb2"
00002F8A <dos.include.ab3@1356> XINCLUDE "dos.include.bb2"
00002FA0 <dos.include.ab3@1461> XINCLUDE "dos.include.bb2"
00002FA6 <dos.include.ab3@1467> XINCLUDE "dos.include.bb2"
00002FCA <dos.include.ab3@1468> XINCLUDE "dos.include.bb2"
00002FEE <dos.include.ab3@1469> XINCLUDE "dos.include.bb2"
00003012 <dos.include.ab3@1470> XINCLUDE "dos.include.bb2"
00003018 <dos.include.ab3@1471> XINCLUDE "dos.include.bb2"
00003044 <dos.include.ab3@1472> XINCLUDE "dos.include.bb2"
00003046 <dos.include.ab3@1473> XINCLUDE "dos.include.bb2"
00003074 <dos.include.ab3@1474> XINCLUDE "dos.include.bb2"
0000309E <dos.include.ab3@1490> XINCLUDE "dos.include.bb2"
00003122 <dos.include.ab3@1493> XINCLUDE "dos.include.bb2"
000031EA <dos.include.ab3@1494> XINCLUDE "dos.include.bb2"
000031F4 <dos.include.ab3@1496> XINCLUDE "dos.include.bb2"
0000323E <dos.include.ab3@1497> XINCLUDE "dos.include.bb2"
0000328A <dos.include.ab3@1499> XINCLUDE "dos.include.bb2"
000032C2 <dos.include.ab3@1500> XINCLUDE "dos.include.bb2"
000032D4 <dos.include.ab3@1501> XINCLUDE "dos.include.bb2"
000032EA <dos.include.ab3@1502> XINCLUDE "dos.include.bb2"
000032F0 <dos.include.ab3@1503> XINCLUDE "dos.include.bb2"
00003306 <dos.include.ab3@1504> XINCLUDE "dos.include.bb2"
0000333A <dos.include.ab3@1506> XINCLUDE "dos.include.bb2"
00003340 <dos.include.ab3@1507> XINCLUDE "dos.include.bb2"
0000334A <dos.include.ab3@1509> XINCLUDE "dos.include.bb2"
00003364 <dos.include.ab3@1510> XINCLUDE "dos.include.bb2"
000033AE <dos.include.ab3@1540> XINCLUDE "dos.include.bb2"
000033E4 <dos.include.ab3@1542> XINCLUDE "dos.include.bb2"
00003408 <dos.include.ab3@1543> XINCLUDE "dos.include.bb2"
00003412 <dos.include.ab3@1544> XINCLUDE "dos.include.bb2"
0000343A <dos.include.ab3@1545> XINCLUDE "dos.include.bb2"
00003482 <dos.include.ab3@1548> XINCLUDE "dos.include.bb2"
00003558 <dos.include.ab3@1550> XINCLUDE "dos.include.bb2"
00003582 <dos.include.ab3@1551> XINCLUDE "dos.include.bb2"
000035A2 <dos.include.ab3@1552> XINCLUDE "dos.include.bb2"
000035DC <dos.include.ab3@1571> XINCLUDE "dos.include.bb2"
000035E2 <dos.include.ab3@1573> XINCLUDE "dos.include.bb2"
000035E8 <dos.include.ab3@1574> XINCLUDE "dos.include.bb2"
000035F0 <dos.include.ab3@1575> XINCLUDE "dos.include.bb2"
00003626 <dos.include.ab3@1576> XINCLUDE "dos.include.bb2"
00003634 <dos.include.ab3@1577> XINCLUDE "dos.include.bb2"
0000363E <dos.include.ab3@1578> XINCLUDE "dos.include.bb2"
0000366A <dos.include.ab3@1579> XINCLUDE "dos.include.bb2"
00003678 <dos.include.ab3@1580> XINCLUDE "dos.include.bb2"
00003682 <dos.include.ab3@1581> XINCLUDE "dos.include.bb2"
000036B0 <dos.include.ab3@1583> XINCLUDE "dos.include.bb2"
0000372E <dos.include.ab3@1586> XINCLUDE "dos.include.bb2"
00003780 <dos.include.ab3@1589> XINCLUDE "dos.include.bb2"
00003792 <dos.include.ab3@1590> XINCLUDE "dos.include.bb2"
00003800 <dos.include.ab3@1591> XINCLUDE "dos.include.bb2"
00003806 <dos.include.ab3@1592> XINCLUDE "dos.include.bb2"
00003852 <dos.include.ab3@1593> XINCLUDE "dos.include.bb2"
00003920 <dos.include.ab3@1597> XINCLUDE "dos.include.bb2"
00003A00 <dos.include.ab3@1598> XINCLUDE "dos.include.bb2"
00003A6C <dos.include.ab3@1600> XINCLUDE "dos.include.bb2"
00003A72 <dos.include.ab3@1601> XINCLUDE "dos.include.bb2"
00003A8E <dos.include.ab3@1602> XINCLUDE "dos.include.bb2"
00003A9C <dos.include.ab3@1605> XINCLUDE "dos.include.bb2"
00003AA2 <dos.include.ab3@1606> XINCLUDE "dos.include.bb2"
00003AB4 <dos.include.ab3@1609> XINCLUDE "dos.include.bb2"
00003ACA <dos.include.ab3@1610> XINCLUDE "dos.include.bb2"
00003AD4 <dos.include.ab3@1611> XINCLUDE "dos.include.bb2"
00003AF0 <dos.include.ab3@1612> XINCLUDE "dos.include.bb2"
00003B1A <dos.include.ab3@2208> XINCLUDE "dos.include.bb2"
00003B2E <dos.include.ab3@2209> XINCLUDE "dos.include.bb2"
00003B6C <dos.include.ab3@2210> XINCLUDE "dos.include.bb2"
00003C52 <dos.include.ab3@2211> XINCLUDE "dos.include.bb2"
00003C58 <dos.include.ab3@2212> XINCLUDE "dos.include.bb2"
00003CA8 <dos.include.ab3@2213> XINCLUDE "dos.include.bb2"
00003CD2 <dos.include.ab3@2214> XINCLUDE "dos.include.bb2"
00003CF0 <dos.include.ab3@2215> XINCLUDE "dos.include.bb2"
00003D1A <dos.include.ab3@2239> XINCLUDE "dos.include.bb2"
00003D2E <dos.include.ab3@2240> XINCLUDE "dos.include.bb2"
00003D6C <dos.include.ab3@2241> XINCLUDE "dos.include.bb2"
00003E52 <dos.include.ab3@2242> XINCLUDE "dos.include.bb2"
00003E58 <dos.include.ab3@2243> XINCLUDE "dos.include.bb2"
00003ECA <dos.include.ab3@2244> XINCLUDE "dos.include.bb2"
00003EF4 <dos.include.ab3@2245> XINCLUDE "dos.include.bb2"
00003F12 <dos.include.ab3@2246> XINCLUDE "dos.include.bb2"
00003F4C <dos.include.ab3@2272> XINCLUDE "dos.include.bb2"
00003F84 <dos.include.ab3@2273> XINCLUDE "dos.include.bb2"
00003FDC <dos.include.ab3@2274> XINCLUDE "dos.include.bb2"
00004040 <dos.include.ab3@2275> XINCLUDE "dos.include.bb2"
0000406A <dos.include.ab3@2277> XINCLUDE "dos.include.bb2"
0000408A <dos.include.ab3@2278> XINCLUDE "dos.include.bb2"
000040B4 <dos.include.ab3@2295> XINCLUDE "dos.include.bb2"
000040BA <dos.include.ab3@2296> XINCLUDE "dos.include.bb2"
000040D0 <dos.include.ab3@2297> XINCLUDE "dos.include.bb2"
000040DA <dos.include.ab3@2298> XINCLUDE "dos.include.bb2"
000040E0 <dos.include.ab3@2299> XINCLUDE "dos.include.bb2"
000040F0 <dos.include.ab3@2300> XINCLUDE "dos.include.bb2"
000040FA <dos.include.ab3@2302> XINCLUDE "dos.include.bb2"
00004114 <dos.include.ab3@2303> XINCLUDE "dos.include.bb2"
00004142 <dos.include.ab3@2545> XINCLUDE "dos.include.bb2"
00004164 <dos.include.ab3@2546> XINCLUDE "dos.include.bb2"
0000416C <dos.include.ab3@2547> XINCLUDE "dos.include.bb2"
0000417A <dos.include.ab3@2548> XINCLUDE "dos.include.bb2"
00004194 <dos.include.ab3@2550> XINCLUDE "dos.include.bb2"
000041C2 <dos.include.ab3@2569> XINCLUDE "dos.include.bb2"
000041D6 <dos.include.ab3@2570> XINCLUDE "dos.include.bb2"
0000420A <dos.include.ab3@2571> XINCLUDE "dos.include.bb2"
00004224 <dos.include.ab3@2573> XINCLUDE "dos.include.bb2"
0000422C <dos.include.ab3@2574> XINCLUDE "dos.include.bb2"
0000423A <dos.include.ab3@2575> XINCLUDE "dos.include.bb2"
00004254 <dos.include.ab3@2577> XINCLUDE "dos.include.bb2"
0000427E <dos.include.ab3@2713> XINCLUDE "dos.include.bb2"
0000428A <dos.include.ab3@2715> XINCLUDE "dos.include.bb2"
000042AA <dos.include.ab3@2716> XINCLUDE "dos.include.bb2"
000042D0 <dos.include.ab3@2717> XINCLUDE "dos.include.bb2"
000042FC <dos.include.ab3@2718> XINCLUDE "dos.include.bb2"
00004314 <dos.include.ab3@2719> XINCLUDE "dos.include.bb2"
00004322 <dos.include.ab3@2721> XINCLUDE "dos.include.bb2"
00004328 <dos.include.ab3@2722> XINCLUDE "dos.include.bb2"
00004334 <dos.include.ab3@2723> XINCLUDE "dos.include.bb2"
0000433A <dos.include.ab3@2725> XINCLUDE "dos.include.bb2"
00004346 <dos.include.ab3@2726> XINCLUDE "dos.include.bb2"
00004356 <dos.include.ab3@2728> XINCLUDE "dos.include.bb2"
0000435C <dos.include.ab3@2729> XINCLUDE "dos.include.bb2"
00004368 <dos.include.ab3@2730> XINCLUDE "dos.include.bb2"
00004372 <dos.include.ab3@2732> XINCLUDE "dos.include.bb2"
0000438C <dos.include.ab3@2733> XINCLUDE "dos.include.bb2"
0000438C <AmiBlitz3.ab3@79> XINCLUDE "dos.include.bb2"
0000439A <AmiBlitz3.ab3@81> If dos_FromCLI{}
000043A0 <AmiBlitz3.ab3@82>   CLIMode.l=True
000043AC <AmiBlitz3.ab3@83>   error_SetFlags{#error_stdout}
000043AC <common.ab3@1> XINCLUDE "/Shared/common.ab3"
000043D4 <common.ab3@40> XINCLUDE "/Shared/common.ab3"
000043DA <common.ab3@252> XINCLUDE "/Shared/common.ab3"
000043DC <common.ab3@253> XINCLUDE "/Shared/common.ab3"
0000456C <common.ab3@254> XINCLUDE "/Shared/common.ab3"
00004570 <common.ab3@255> XINCLUDE "/Shared/common.ab3"
00004574 <common.ab3@257> XINCLUDE "/Shared/common.ab3"
00004578 <common.ab3@258> XINCLUDE "/Shared/common.ab3"
0000457C <common.ab3@260> XINCLUDE "/Shared/common.ab3"
00004580 <common.ab3@261> XINCLUDE "/Shared/common.ab3"
00004584 <common.ab3@262> XINCLUDE "/Shared/common.ab3"
00004588 <common.ab3@263> XINCLUDE "/Shared/common.ab3"
0000458C <common.ab3@264> XINCLUDE "/Shared/common.ab3"
00004590 <common.ab3@265> XINCLUDE "/Shared/common.ab3"
00004594 <common.ab3@266> XINCLUDE "/Shared/common.ab3"
00004598 <common.ab3@267> XINCLUDE "/Shared/common.ab3"
0000459C <common.ab3@268> XINCLUDE "/Shared/common.ab3"
000045A0 <common.ab3@270> XINCLUDE "/Shared/common.ab3"
000045A4 <common.ab3@272> XINCLUDE "/Shared/common.ab3"
000045A8 <common.ab3@273> XINCLUDE "/Shared/common.ab3"
000045AC <common.ab3@274> XINCLUDE "/Shared/common.ab3"
000045B0 <common.ab3@275> XINCLUDE "/Shared/common.ab3"
000045B4 <common.ab3@276> XINCLUDE "/Shared/common.ab3"
000045B8 <common.ab3@277> XINCLUDE "/Shared/common.ab3"
000045BC <common.ab3@278> XINCLUDE "/Shared/common.ab3"
000045C0 <common.ab3@279> XINCLUDE "/Shared/common.ab3"
000045C4 <common.ab3@280> XINCLUDE "/Shared/common.ab3"
000045C8 <common.ab3@281> XINCLUDE "/Shared/common.ab3"
000045D0 <common.ab3@284> XINCLUDE "/Shared/common.ab3"
000045D4 <common.ab3@285> XINCLUDE "/Shared/common.ab3"
000045D6 <common.ab3@286> XINCLUDE "/Shared/common.ab3"
000045DA <common.ab3@287> XINCLUDE "/Shared/common.ab3"
000045DC <common.ab3@288> XINCLUDE "/Shared/common.ab3"
000045E0 <common.ab3@289> XINCLUDE "/Shared/common.ab3"
000045E4 <common.ab3@290> XINCLUDE "/Shared/common.ab3"
000045E8 <common.ab3@291> XINCLUDE "/Shared/common.ab3"
000045EC <common.ab3@292> XINCLUDE "/Shared/common.ab3"
000045F0 <common.ab3@293> XINCLUDE "/Shared/common.ab3"
000045F8 <common.ab3@294> XINCLUDE "/Shared/common.ab3"
00004600 <common.ab3@295> XINCLUDE "/Shared/common.ab3"
00004604 <common.ab3@296> XINCLUDE "/Shared/common.ab3"
00004608 <common.ab3@297> XINCLUDE "/Shared/common.ab3"
0000460C <common.ab3@298> XINCLUDE "/Shared/common.ab3"
0000460E <common.ab3@300> XINCLUDE "/Shared/common.ab3"
000046CE <common.ab3@301> XINCLUDE "/Shared/common.ab3"
00004716 <common.ab3@302> XINCLUDE "/Shared/common.ab3"
0000471A <common.ab3@304> XINCLUDE "/Shared/common.ab3"
0000471C <common.ab3@305> XINCLUDE "/Shared/common.ab3"
00004720 <common.ab3@306> XINCLUDE "/Shared/common.ab3"
00004722 <common.ab3@307> XINCLUDE "/Shared/common.ab3"
00004724 <common.ab3@308> XINCLUDE "/Shared/common.ab3"
00004726 <common.ab3@309> XINCLUDE "/Shared/common.ab3"
00004728 <common.ab3@310> XINCLUDE "/Shared/common.ab3"
0000472A <common.ab3@312> XINCLUDE "/Shared/common.ab3"
0000472C <common.ab3@313> XINCLUDE "/Shared/common.ab3"
0000472D <common.ab3@317> XINCLUDE "/Shared/common.ab3"
0000472E <common.ab3@319> XINCLUDE "/Shared/common.ab3"
00004730 <common.ab3@320> XINCLUDE "/Shared/common.ab3"
00004732 <common.ab3@321> XINCLUDE "/Shared/common.ab3"
00004734 <common.ab3@323> XINCLUDE "/Shared/common.ab3"
00004736 <common.ab3@326> XINCLUDE "/Shared/common.ab3"
00004738 <common.ab3@328> XINCLUDE "/Shared/common.ab3"
0000473A <common.ab3@330> XINCLUDE "/Shared/common.ab3"
0000473E <common.ab3@332> XINCLUDE "/Shared/common.ab3"
00004740 <common.ab3@334> XINCLUDE "/Shared/common.ab3"
00004742 <common.ab3@335> XINCLUDE "/Shared/common.ab3"
00004744 <common.ab3@337> XINCLUDE "/Shared/common.ab3"
00004748 <common.ab3@339> XINCLUDE "/Shared/common.ab3"
0000474A <common.ab3@340> XINCLUDE "/Shared/common.ab3"
0000474C <common.ab3@341> XINCLUDE "/Shared/common.ab3"
00004750 <common.ab3@344> XINCLUDE "/Shared/common.ab3"
00004752 <common.ab3@345> XINCLUDE "/Shared/common.ab3"
00004754 <common.ab3@346> XINCLUDE "/Shared/common.ab3"
00004756 <common.ab3@347> XINCLUDE "/Shared/common.ab3"
00004758 <common.ab3@349> XINCLUDE "/Shared/common.ab3"
0000475A <common.ab3@350> XINCLUDE "/Shared/common.ab3"
0000475E <common.ab3@352> XINCLUDE "/Shared/common.ab3"
00004760 <common.ab3@353> XINCLUDE "/Shared/common.ab3"
00004762 <common.ab3@354> XINCLUDE "/Shared/common.ab3"
00004764 <common.ab3@358> XINCLUDE "/Shared/common.ab3"
00004766 <common.ab3@359> XINCLUDE "/Shared/common.ab3"
0000476A <common.ab3@360> XINCLUDE "/Shared/common.ab3"
0000476C <common.ab3@366> XINCLUDE "/Shared/common.ab3"
0000476E <common.ab3@368> XINCLUDE "/Shared/common.ab3"
00004770 <common.ab3@370> XINCLUDE "/Shared/common.ab3"
00004772 <common.ab3@371> XINCLUDE "/Shared/common.ab3"
00004774 <common.ab3@372> XINCLUDE "/Shared/common.ab3"
00004778 <common.ab3@373> XINCLUDE "/Shared/common.ab3"
0000477A <common.ab3@374> XINCLUDE "/Shared/common.ab3"
0000477C <common.ab3@375> XINCLUDE "/Shared/common.ab3"
0000477E <common.ab3@376> XINCLUDE "/Shared/common.ab3"
00004780 <common.ab3@377> XINCLUDE "/Shared/common.ab3"
00004782 <common.ab3@379> XINCLUDE "/Shared/common.ab3"
00004784 <common.ab3@381> XINCLUDE "/Shared/common.ab3"
00004786 <common.ab3@383> XINCLUDE "/Shared/common.ab3"
0000478A <common.ab3@384> XINCLUDE "/Shared/common.ab3"
0000478C <common.ab3@385> XINCLUDE "/Shared/common.ab3"
000047BA <common.ab3@386> XINCLUDE "/Shared/common.ab3"
000047C4 <common.ab3@387> XINCLUDE "/Shared/common.ab3"
000047C8 <common.ab3@388> XINCLUDE "/Shared/common.ab3"
000047CA <common.ab3@390> XINCLUDE "/Shared/common.ab3"
000047CC <common.ab3@391> XINCLUDE "/Shared/common.ab3"
000047D0 <common.ab3@392> XINCLUDE "/Shared/common.ab3"
000047D4 <common.ab3@393> XINCLUDE "/Shared/common.ab3"
000047DD <common.ab3@394> XINCLUDE "/Shared/common.ab3"
000047E0 <common.ab3@395> XINCLUDE "/Shared/common.ab3"
0000480D <common.ab3@396> XINCLUDE "/Shared/common.ab3"
0000484D <common.ab3@397> XINCLUDE "/Shared/common.ab3"
00004859 <common.ab3@398> XINCLUDE "/Shared/common.ab3"
000048A9 <common.ab3@399> XINCLUDE "/Shared/common.ab3"
000048B5 <common.ab3@400> XINCLUDE "/Shared/common.ab3"
00004905 <common.ab3@401> XINCLUDE "/Shared/common.ab3"
00004A01 <common.ab3@402> XINCLUDE "/Shared/common.ab3"
00004A03 <common.ab3@403> XINCLUDE "/Shared/common.ab3"
00004AC3 <common.ab3@404> XINCLUDE "/Shared/common.ab3"
00004B03 <common.ab3@405> XINCLUDE "/Shared/common.ab3"
00004B05 <common.ab3@406> XINCLUDE "/Shared/common.ab3"
00004B06 <common.ab3@407> XINCLUDE "/Shared/common.ab3"
00004B0A <common.ab3@410> XINCLUDE "/Shared/common.ab3"
00004B0E <common.ab3@412> XINCLUDE "/Shared/common.ab3"
00004B12 <common.ab3@413> XINCLUDE "/Shared/common.ab3"
00004B16 <common.ab3@414> XINCLUDE "/Shared/common.ab3"
00004B1A <common.ab3@416> XINCLUDE "/Shared/common.ab3"
00004B1E <common.ab3@418> XINCLUDE "/Shared/common.ab3"
00004B22 <common.ab3@419> XINCLUDE "/Shared/common.ab3"
00004B26 <common.ab3@420> XINCLUDE "/Shared/common.ab3"
00004B2A <common.ab3@421> XINCLUDE "/Shared/common.ab3"
00004B2E <common.ab3@422> XINCLUDE "/Shared/common.ab3"
00004B32 <common.ab3@423> XINCLUDE "/Shared/common.ab3"
00004B36 <common.ab3@424> XINCLUDE "/Shared/common.ab3"
00004B3A <common.ab3@425> XINCLUDE "/Shared/common.ab3"
00004B3E <common.ab3@427> XINCLUDE "/Shared/common.ab3"
00004B42 <common.ab3@429> XINCLUDE "/Shared/common.ab3"
00004B46 <common.ab3@431> XINCLUDE "/Shared/common.ab3"
00004B4A <common.ab3@433> XINCLUDE "/Shared/common.ab3"
00004B4E <common.ab3@434> XINCLUDE "/Shared/common.ab3"
00004B58 <common.ab3@435> XINCLUDE "/Shared/common.ab3"
00004B5C <common.ab3@436> XINCLUDE "/Shared/common.ab3"
00004B60 <common.ab3@439> XINCLUDE "/Shared/common.ab3"
00004B62 <common.ab3@440> XINCLUDE "/Shared/common.ab3"
00004B64 <common.ab3@441> XINCLUDE "/Shared/common.ab3"
00004B82 <common.ab3@442> XINCLUDE "/Shared/common.ab3"
00004B86 <common.ab3@443> XINCLUDE "/Shared/common.ab3"
00004B88 <common.ab3@445> XINCLUDE "/Shared/common.ab3"
00004B8C <common.ab3@446> XINCLUDE "/Shared/common.ab3"
00004BC0 <common.ab3@447> XINCLUDE "/Shared/common.ab3"
00004BC4 <common.ab3@448> XINCLUDE "/Shared/common.ab3"
00004BD2 <common.ab3@450> XINCLUDE "/Shared/common.ab3"
00004BE4 <common.ab3@451> XINCLUDE "/Shared/common.ab3"
00004BE6 <common.ab3@452> XINCLUDE "/Shared/common.ab3"
00004BFA <common.ab3@453> XINCLUDE "/Shared/common.ab3"
00004C10 <common.ab3@454> XINCLUDE "/Shared/common.ab3"
00004C26 <common.ab3@455> XINCLUDE "/Shared/common.ab3"
00004C3C <common.ab3@456> XINCLUDE "/Shared/common.ab3"
00004C52 <common.ab3@457> XINCLUDE "/Shared/common.ab3"
00004C54 <common.ab3@458> XINCLUDE "/Shared/common.ab3"
00004C56 <common.ab3@459> XINCLUDE "/Shared/common.ab3"
00004C5A <common.ab3@461> XINCLUDE "/Shared/common.ab3"
00004C5E <common.ab3@463> XINCLUDE "/Shared/common.ab3"
00004C62 <common.ab3@465> XINCLUDE "/Shared/common.ab3"
00004C66 <common.ab3@466> XINCLUDE "/Shared/common.ab3"
00004C6A <common.ab3@467> XINCLUDE "/Shared/common.ab3"
00004C6E <common.ab3@468> XINCLUDE "/Shared/common.ab3"
00004C72 <common.ab3@469> XINCLUDE "/Shared/common.ab3"
00004C76 <common.ab3@470> XINCLUDE "/Shared/common.ab3"
00004C7A <common.ab3@471> XINCLUDE "/Shared/common.ab3"
00004C7E <common.ab3@472> XINCLUDE "/Shared/common.ab3"
00004C84 <common.ab3@473> XINCLUDE "/Shared/common.ab3"
00004C96 <common.ab3@474> XINCLUDE "/Shared/common.ab3"
00004C98 <common.ab3@478> XINCLUDE "/Shared/common.ab3"
00004C9C <common.ab3@479> XINCLUDE "/Shared/common.ab3"
00004C9E <common.ab3@480> XINCLUDE "/Shared/common.ab3"
00004CA2 <common.ab3@481> XINCLUDE "/Shared/common.ab3"
00004CA4 <common.ab3@482> XINCLUDE "/Shared/common.ab3"
00004CA8 <common.ab3@483> XINCLUDE "/Shared/common.ab3"
00004CAA <common.ab3@484> XINCLUDE "/Shared/common.ab3"
00004CAE <common.ab3@485> XINCLUDE "/Shared/common.ab3"
00004CB0 <common.ab3@486> XINCLUDE "/Shared/common.ab3"
00004CB4 <common.ab3@487> XINCLUDE "/Shared/common.ab3"
00004CB6 <common.ab3@488> XINCLUDE "/Shared/common.ab3"
00004CBA <common.ab3@489> XINCLUDE "/Shared/common.ab3"
00004CBC <common.ab3@490> XINCLUDE "/Shared/common.ab3"
00004CC0 <common.ab3@491> XINCLUDE "/Shared/common.ab3"
00004CC2 <common.ab3@492> XINCLUDE "/Shared/common.ab3"
00004CC6 <common.ab3@493> XINCLUDE "/Shared/common.ab3"
00004CC8 <common.ab3@494> XINCLUDE "/Shared/common.ab3"
00004CCC <common.ab3@495> XINCLUDE "/Shared/common.ab3"
00004CCE <common.ab3@496> XINCLUDE "/Shared/common.ab3"
00004CD2 <common.ab3@497> XINCLUDE "/Shared/common.ab3"
00004CD4 <common.ab3@498> XINCLUDE "/Shared/common.ab3"
00004CD8 <common.ab3@499> XINCLUDE "/Shared/common.ab3"
00004CDA <common.ab3@500> XINCLUDE "/Shared/common.ab3"
00004CDE <common.ab3@501> XINCLUDE "/Shared/common.ab3"
00004CE0 <common.ab3@502> XINCLUDE "/Shared/common.ab3"
00004CE4 <common.ab3@503> XINCLUDE "/Shared/common.ab3"
00004CE6 <common.ab3@504> XINCLUDE "/Shared/common.ab3"
00004CEA <common.ab3@505> XINCLUDE "/Shared/common.ab3"
00004CEC <common.ab3@506> XINCLUDE "/Shared/common.ab3"
00004D00 <common.ab3@510> XINCLUDE "/Shared/common.ab3"
00004D14 <common.ab3@511> XINCLUDE "/Shared/common.ab3"
00004D28 <common.ab3@512> XINCLUDE "/Shared/common.ab3"
00004D2A <common.ab3@513> XINCLUDE "/Shared/common.ab3"
00004D2E <common.ab3@514> XINCLUDE "/Shared/common.ab3"
00004D32 <common.ab3@515> XINCLUDE "/Shared/common.ab3"
00004D36 <common.ab3@516> XINCLUDE "/Shared/common.ab3"
00004D3A <common.ab3@517> XINCLUDE "/Shared/common.ab3"
00004D3E <common.ab3@518> XINCLUDE "/Shared/common.ab3"
00004D42 <common.ab3@519> XINCLUDE "/Shared/common.ab3"
00004D46 <common.ab3@520> XINCLUDE "/Shared/common.ab3"
00004D47 <common.ab3@521> XINCLUDE "/Shared/common.ab3"
00004D48 <common.ab3@522> XINCLUDE "/Shared/common.ab3"
00004D49 <common.ab3@523> XINCLUDE "/Shared/common.ab3"
00004D4C <common.ab3@524> XINCLUDE "/Shared/common.ab3"
00004D50 <common.ab3@525> XINCLUDE "/Shared/common.ab3"
00004D54 <common.ab3@526> XINCLUDE "/Shared/common.ab3"
00004D58 <common.ab3@527> XINCLUDE "/Shared/common.ab3"
00004D5C <common.ab3@528> XINCLUDE "/Shared/common.ab3"
00004D60 <common.ab3@529> XINCLUDE "/Shared/common.ab3"
00004D64 <common.ab3@530> XINCLUDE "/Shared/common.ab3"
00004D65 <common.ab3@531> XINCLUDE "/Shared/common.ab3"
00004D66 <common.ab3@532> XINCLUDE "/Shared/common.ab3"
00004D68 <common.ab3@533> XINCLUDE "/Shared/common.ab3"
00004D6C <common.ab3@534> XINCLUDE "/Shared/common.ab3"
00004D70 <common.ab3@535> XINCLUDE "/Shared/common.ab3"
00004D74 <common.ab3@536> XINCLUDE "/Shared/common.ab3"
00004D78 <common.ab3@538> XINCLUDE "/Shared/common.ab3"
00004D7C <common.ab3@539> XINCLUDE "/Shared/common.ab3"
00004D80 <common.ab3@540> XINCLUDE "/Shared/common.ab3"
00004D84 <common.ab3@541> XINCLUDE "/Shared/common.ab3"
00004D88 <common.ab3@542> XINCLUDE "/Shared/common.ab3"
00004D8C <common.ab3@543> XINCLUDE "/Shared/common.ab3"
00004D90 <common.ab3@544> XINCLUDE "/Shared/common.ab3"
00004D94 <common.ab3@545> XINCLUDE "/Shared/common.ab3"
00004D98 <common.ab3@549> XINCLUDE "/Shared/common.ab3"
00004D9C <common.ab3@550> XINCLUDE "/Shared/common.ab3"
00004DA0 <common.ab3@551> XINCLUDE "/Shared/common.ab3"
00004DA2 <common.ab3@552> XINCLUDE "/Shared/common.ab3"
00004DA3 <common.ab3@553> XINCLUDE "/Shared/common.ab3"
00004DA7 <common.ab3@554> XINCLUDE "/Shared/common.ab3"
00004DAB <common.ab3@555> XINCLUDE "/Shared/common.ab3"
00004DAF <common.ab3@556> XINCLUDE "/Shared/common.ab3"
00004DB3 <common.ab3@557> XINCLUDE "/Shared/common.ab3"
00004DB4 <common.ab3@559> XINCLUDE "/Shared/common.ab3"
00004DB8 <common.ab3@561> XINCLUDE "/Shared/common.ab3"
00004DBC <common.ab3@562> XINCLUDE "/Shared/common.ab3"
00004DC0 <common.ab3@563> XINCLUDE "/Shared/common.ab3"
00004DC4 <common.ab3@564> XINCLUDE "/Shared/common.ab3"
00004DC8 <common.ab3@565> XINCLUDE "/Shared/common.ab3"
00004DC9 <common.ab3@566> XINCLUDE "/Shared/common.ab3"
00004DCA <common.ab3@568> XINCLUDE "/Shared/common.ab3"
00004DCE <common.ab3@570> XINCLUDE "/Shared/common.ab3"
00004DD2 <common.ab3@571> XINCLUDE "/Shared/common.ab3"
00004DD4 <common.ab3@572> XINCLUDE "/Shared/common.ab3"
00004DD6 <common.ab3@573> XINCLUDE "/Shared/common.ab3"
00004DDA <common.ab3@577> XINCLUDE "/Shared/common.ab3"
00004DDE <common.ab3@578> XINCLUDE "/Shared/common.ab3"
00004DE2 <common.ab3@580> XINCLUDE "/Shared/common.ab3"
00004DE6 <common.ab3@581> XINCLUDE "/Shared/common.ab3"
00004DEA <common.ab3@583> XINCLUDE "/Shared/common.ab3"
00004DEE <common.ab3@584> XINCLUDE "/Shared/common.ab3"
00004DF2 <common.ab3@586> XINCLUDE "/Shared/common.ab3"
00004DF6 <common.ab3@587> XINCLUDE "/Shared/common.ab3"
00004DFA <common.ab3@588> XINCLUDE "/Shared/common.ab3"
00004DFE <common.ab3@589> XINCLUDE "/Shared/common.ab3"
00004E02 <common.ab3@590> XINCLUDE "/Shared/common.ab3"
00004E06 <common.ab3@591> XINCLUDE "/Shared/common.ab3"
00004E0A <common.ab3@592> XINCLUDE "/Shared/common.ab3"
00004E0E <common.ab3@593> XINCLUDE "/Shared/common.ab3"
00004E12 <common.ab3@594> XINCLUDE "/Shared/common.ab3"
00004E16 <common.ab3@595> XINCLUDE "/Shared/common.ab3"
00004E1A <common.ab3@596> XINCLUDE "/Shared/common.ab3"
00004E1E <common.ab3@597> XINCLUDE "/Shared/common.ab3"
00004E22 <common.ab3@598> XINCLUDE "/Shared/common.ab3"
00004E26 <common.ab3@599> XINCLUDE "/Shared/common.ab3"
00004E26 <AmiBlitz3.ab3@86> XINCLUDE "/Shared/common.ab3"
00004E26 <preprocessor.include.ab3@1> XINCLUDE "/Shared/preprocessor.include.ab3"
00004E26 <hashmap.include.bb2@1> XINCLUDE "/Shared/preprocessor.include.ab3"
00004E44 <hashmap.include.bb2@36> XINCLUDE "/Shared/preprocessor.include.ab3"
00004E4C <hashmap.include.bb2@38> XINCLUDE "/Shared/preprocessor.include.ab3"
00004E7A <hashmap.include.bb2@39> XINCLUDE "/Shared/preprocessor.include.ab3"
00004EAA <hashmap.include.bb2@40> XINCLUDE "/Shared/preprocessor.include.ab3"
00004EBA <hashmap.include.bb2@41> XINCLUDE "/Shared/preprocessor.include.ab3"
00004EC4 <hashmap.include.bb2@43> XINCLUDE "/Shared/preprocessor.include.ab3"
00004ECA <hashmap.include.bb2@45> XINCLUDE "/Shared/preprocessor.include.ab3"
00004EEC <hashmap.include.bb2@48> XINCLUDE "/Shared/preprocessor.include.ab3"
00004F0A <hashmap.include.bb2@50> XINCLUDE "/Shared/preprocessor.include.ab3"
00004F1C <hashmap.include.bb2@51> XINCLUDE "/Shared/preprocessor.include.ab3"
00004F44 <hashmap.include.bb2@52> XINCLUDE "/Shared/preprocessor.include.ab3"
00004F4A <hashmap.include.bb2@54> XINCLUDE "/Shared/preprocessor.include.ab3"
00004F64 <hashmap.include.bb2@57> XINCLUDE "/Shared/preprocessor.include.ab3"
00004F7C <hashmap.include.bb2@59> XINCLUDE "/Shared/preprocessor.include.ab3"
00004F8E <hashmap.include.bb2@60> XINCLUDE "/Shared/preprocessor.include.ab3"
00004F9C <hashmap.include.bb2@61> XINCLUDE "/Shared/preprocessor.include.ab3"
00004FD0 <hashmap.include.bb2@62> XINCLUDE "/Shared/preprocessor.include.ab3"
00004FDE <hashmap.include.bb2@63> XINCLUDE "/Shared/preprocessor.include.ab3"
00004FE8 <hashmap.include.bb2@64> XINCLUDE "/Shared/preprocessor.include.ab3"
00004FFA <hashmap.include.bb2@65> XINCLUDE "/Shared/preprocessor.include.ab3"
00005034 <hashmap.include.bb2@66> XINCLUDE "/Shared/preprocessor.include.ab3"
00005044 <hashmap.include.bb2@67> XINCLUDE "/Shared/preprocessor.include.ab3"
0000504A <hashmap.include.bb2@69> XINCLUDE "/Shared/preprocessor.include.ab3"
0000505A <hashmap.include.bb2@70> XINCLUDE "/Shared/preprocessor.include.ab3"
0000506A <hashmap.include.bb2@72> XINCLUDE "/Shared/preprocessor.include.ab3"
00005078 <hashmap.include.bb2@74> XINCLUDE "/Shared/preprocessor.include.ab3"
00005088 <hashmap.include.bb2@75> XINCLUDE "/Shared/preprocessor.include.ab3"
000050AC <hashmap.include.bb2@76> XINCLUDE "/Shared/preprocessor.include.ab3"
000050B8 <hashmap.include.bb2@78> XINCLUDE "/Shared/preprocessor.include.ab3"
000050C6 <hashmap.include.bb2@79> XINCLUDE "/Shared/preprocessor.include.ab3"
000050D4 <hashmap.include.bb2@80> XINCLUDE "/Shared/preprocessor.include.ab3"
000050E2 <hashmap.include.bb2@81> XINCLUDE "/Shared/preprocessor.include.ab3"
000050F0 <hashmap.include.bb2@82> XINCLUDE "/Shared/preprocessor.include.ab3"
00005126 <hashmap.include.bb2@83> XINCLUDE "/Shared/preprocessor.include.ab3"
00005134 <hashmap.include.bb2@84> XINCLUDE "/Shared/preprocessor.include.ab3"
00005144 <hashmap.include.bb2@85> XINCLUDE "/Shared/preprocessor.include.ab3"
0000514C <hashmap.include.bb2@86> XINCLUDE "/Shared/preprocessor.include.ab3"
00005150 <hashmap.include.bb2@88> XINCLUDE "/Shared/preprocessor.include.ab3"
0000516A <hashmap.include.bb2@91> XINCLUDE "/Shared/preprocessor.include.ab3"
00005184 <hashmap.include.bb2@93> XINCLUDE "/Shared/preprocessor.include.ab3"
0000519E <hashmap.include.bb2@94> XINCLUDE "/Shared/preprocessor.include.ab3"
000051BE <hashmap.include.bb2@96> XINCLUDE "/Shared/preprocessor.include.ab3"
000051C8 <hashmap.include.bb2@97> XINCLUDE "/Shared/preprocessor.include.ab3"
000051D4 <hashmap.include.bb2@98> XINCLUDE "/Shared/preprocessor.include.ab3"
000051E8 <hashmap.include.bb2@99> XINCLUDE "/Shared/preprocessor.include.ab3"
0000521A <hashmap.include.bb2@100> XINCLUDE "/Shared/preprocessor.include.ab3"
00005232 <hashmap.include.bb2@101> XINCLUDE "/Shared/preprocessor.include.ab3"
0000523E <hashmap.include.bb2@102> XINCLUDE "/Shared/preprocessor.include.ab3"
0000524C <hashmap.include.bb2@103> XINCLUDE "/Shared/preprocessor.include.ab3"
0000525A <hashmap.include.bb2@104> XINCLUDE "/Shared/preprocessor.include.ab3"
00005268 <hashmap.include.bb2@105> XINCLUDE "/Shared/preprocessor.include.ab3"
00005276 <hashmap.include.bb2@106> XINCLUDE "/Shared/preprocessor.include.ab3"
000052A0 <hashmap.include.bb2@107> XINCLUDE "/Shared/preprocessor.include.ab3"
000052AA <hashmap.include.bb2@110> XINCLUDE "/Shared/preprocessor.include.ab3"
000052B0 <hashmap.include.bb2@112> XINCLUDE "/Shared/preprocessor.include.ab3"
000052DE <hashmap.include.bb2@115> XINCLUDE "/Shared/preprocessor.include.ab3"
000052F6 <hashmap.include.bb2@117> XINCLUDE "/Shared/preprocessor.include.ab3"
00005314 <hashmap.include.bb2@118> XINCLUDE "/Shared/preprocessor.include.ab3"
00005328 <hashmap.include.bb2@119> XINCLUDE "/Shared/preprocessor.include.ab3"
00005340 <hashmap.include.bb2@120> XINCLUDE "/Shared/preprocessor.include.ab3"
00005368 <hashmap.include.bb2@121> XINCLUDE "/Shared/preprocessor.include.ab3"
00005380 <hashmap.include.bb2@122> XINCLUDE "/Shared/preprocessor.include.ab3"
0000538E <hashmap.include.bb2@123> XINCLUDE "/Shared/preprocessor.include.ab3"
0000539C <hashmap.include.bb2@124> XINCLUDE "/Shared/preprocessor.include.ab3"
000053AA <hashmap.include.bb2@125> XINCLUDE "/Shared/preprocessor.include.ab3"
000053BE <hashmap.include.bb2@126> XINCLUDE "/Shared/preprocessor.include.ab3"
00005412 <hashmap.include.bb2@127> XINCLUDE "/Shared/preprocessor.include.ab3"
0000543C <hashmap.include.bb2@128> XINCLUDE "/Shared/preprocessor.include.ab3"
00005480 <hashmap.include.bb2@130> XINCLUDE "/Shared/preprocessor.include.ab3"
000054A0 <hashmap.include.bb2@131> XINCLUDE "/Shared/preprocessor.include.ab3"
000054B2 <hashmap.include.bb2@132> XINCLUDE "/Shared/preprocessor.include.ab3"
000054D6 <hashmap.include.bb2@133> XINCLUDE "/Shared/preprocessor.include.ab3"
000054E4 <hashmap.include.bb2@134> XINCLUDE "/Shared/preprocessor.include.ab3"
0000553C <hashmap.include.bb2@135> XINCLUDE "/Shared/preprocessor.include.ab3"
00005582 <hashmap.include.bb2@136> XINCLUDE "/Shared/preprocessor.include.ab3"
00005588 <hashmap.include.bb2@137> XINCLUDE "/Shared/preprocessor.include.ab3"
00005590 <hashmap.include.bb2@138> XINCLUDE "/Shared/preprocessor.include.ab3"
000055B8 <hashmap.include.bb2@140> XINCLUDE "/Shared/preprocessor.include.ab3"
000055CA <hashmap.include.bb2@141> XINCLUDE "/Shared/preprocessor.include.ab3"
000055DC <hashmap.include.bb2@142> XINCLUDE "/Shared/preprocessor.include.ab3"
00005616 <hashmap.include.bb2@143> XINCLUDE "/Shared/preprocessor.include.ab3"
00005626 <hashmap.include.bb2@144> XINCLUDE "/Shared/preprocessor.include.ab3"
0000562C <hashmap.include.bb2@146> XINCLUDE "/Shared/preprocessor.include.ab3"
0000563C <hashmap.include.bb2@147> XINCLUDE "/Shared/preprocessor.include.ab3"
00005642 <hashmap.include.bb2@149> XINCLUDE "/Shared/preprocessor.include.ab3"
00005648 <hashmap.include.bb2@151> XINCLUDE "/Shared/preprocessor.include.ab3"
00005660 <hashmap.include.bb2@153> XINCLUDE "/Shared/preprocessor.include.ab3"
0000569E <hashmap.include.bb2@156> XINCLUDE "/Shared/preprocessor.include.ab3"
000056BC <hashmap.include.bb2@158> XINCLUDE "/Shared/preprocessor.include.ab3"
000056EE <hashmap.include.bb2@159> XINCLUDE "/Shared/preprocessor.include.ab3"
00005702 <hashmap.include.bb2@160> XINCLUDE "/Shared/preprocessor.include.ab3"
00005716 <hashmap.include.bb2@161> XINCLUDE "/Shared/preprocessor.include.ab3"
0000572E <hashmap.include.bb2@162> XINCLUDE "/Shared/preprocessor.include.ab3"
00005756 <hashmap.include.bb2@164> XINCLUDE "/Shared/preprocessor.include.ab3"
00005760 <hashmap.include.bb2@168> XINCLUDE "/Shared/preprocessor.include.ab3"
0000576E <hashmap.include.bb2@169> XINCLUDE "/Shared/preprocessor.include.ab3"
00005786 <hashmap.include.bb2@170> XINCLUDE "/Shared/preprocessor.include.ab3"
0000578C <hashmap.include.bb2@174> XINCLUDE "/Shared/preprocessor.include.ab3"
00005794 <hashmap.include.bb2@175> XINCLUDE "/Shared/preprocessor.include.ab3"
000057B4 <hashmap.include.bb2@178> XINCLUDE "/Shared/preprocessor.include.ab3"
000057DA <hashmap.include.bb2@179> XINCLUDE "/Shared/preprocessor.include.ab3"
000057E4 <hashmap.include.bb2@180> XINCLUDE "/Shared/preprocessor.include.ab3"
000057F2 <hashmap.include.bb2@181> XINCLUDE "/Shared/preprocessor.include.ab3"
000057FC <hashmap.include.bb2@183> XINCLUDE "/Shared/preprocessor.include.ab3"
00005828 <hashmap.include.bb2@184> XINCLUDE "/Shared/preprocessor.include.ab3"
0000583C <hashmap.include.bb2@185> XINCLUDE "/Shared/preprocessor.include.ab3"
00005842 <hashmap.include.bb2@186> XINCLUDE "/Shared/preprocessor.include.ab3"
00005850 <hashmap.include.bb2@187> XINCLUDE "/Shared/preprocessor.include.ab3"
00005886 <hashmap.include.bb2@190> XINCLUDE "/Shared/preprocessor.include.ab3"
000058D4 <hashmap.include.bb2@191> XINCLUDE "/Shared/preprocessor.include.ab3"
000058FC <hashmap.include.bb2@193> XINCLUDE "/Shared/preprocessor.include.ab3"
00005916 <hashmap.include.bb2@194> XINCLUDE "/Shared/preprocessor.include.ab3"
00005928 <hashmap.include.bb2@195> XINCLUDE "/Shared/preprocessor.include.ab3"
00005932 <hashmap.include.bb2@198> XINCLUDE "/Shared/preprocessor.include.ab3"
0000594E <hashmap.include.bb2@200> XINCLUDE "/Shared/preprocessor.include.ab3"
00005978 <hashmap.include.bb2@203> XINCLUDE "/Shared/preprocessor.include.ab3"
00005996 <hashmap.include.bb2@205> XINCLUDE "/Shared/preprocessor.include.ab3"
000059BA <hashmap.include.bb2@206> XINCLUDE "/Shared/preprocessor.include.ab3"
000059E8 <hashmap.include.bb2@207> XINCLUDE "/Shared/preprocessor.include.ab3"
00005A02 <hashmap.include.bb2@208> XINCLUDE "/Shared/preprocessor.include.ab3"
00005A2A <hashmap.include.bb2@209> XINCLUDE "/Shared/preprocessor.include.ab3"
00005A48 <hashmap.include.bb2@210> XINCLUDE "/Shared/preprocessor.include.ab3"
00005A64 <hashmap.include.bb2@211> XINCLUDE "/Shared/preprocessor.include.ab3"
00005A72 <hashmap.include.bb2@212> XINCLUDE "/Shared/preprocessor.include.ab3"
00005A86 <hashmap.include.bb2@214> XINCLUDE "/Shared/preprocessor.include.ab3"
00005AA8 <hashmap.include.bb2@215> XINCLUDE "/Shared/preprocessor.include.ab3"
00005ACA <hashmap.include.bb2@216> XINCLUDE "/Shared/preprocessor.include.ab3"
00005AD8 <hashmap.include.bb2@217> XINCLUDE "/Shared/preprocessor.include.ab3"
00005AF8 <hashmap.include.bb2@218> XINCLUDE "/Shared/preprocessor.include.ab3"
00005B28 <hashmap.include.bb2@219> XINCLUDE "/Shared/preprocessor.include.ab3"
00005B2E <hashmap.include.bb2@220> XINCLUDE "/Shared/preprocessor.include.ab3"
00005B62 <hashmap.include.bb2@221> XINCLUDE "/Shared/preprocessor.include.ab3"
00005BA4 <hashmap.include.bb2@222> XINCLUDE "/Shared/preprocessor.include.ab3"
00005BB4 <hashmap.include.bb2@223> XINCLUDE "/Shared/preprocessor.include.ab3"
00005BBE <hashmap.include.bb2@224> XINCLUDE "/Shared/preprocessor.include.ab3"
00005BCE <hashmap.include.bb2@225> XINCLUDE "/Shared/preprocessor.include.ab3"
00005BD4 <hashmap.include.bb2@229> XINCLUDE "/Shared/preprocessor.include.ab3"
00005BE0 <hashmap.include.bb2@231> XINCLUDE "/Shared/preprocessor.include.ab3"
00005BE6 <hashmap.include.bb2@233> XINCLUDE "/Shared/preprocessor.include.ab3"
00005C14 <hashmap.include.bb2@236> XINCLUDE "/Shared/preprocessor.include.ab3"
00005C44 <hashmap.include.bb2@238> XINCLUDE "/Shared/preprocessor.include.ab3"
00005C7A <hashmap.include.bb2@239> XINCLUDE "/Shared/preprocessor.include.ab3"
00005C8E <hashmap.include.bb2@240> XINCLUDE "/Shared/preprocessor.include.ab3"
00005CA6 <hashmap.include.bb2@241> XINCLUDE "/Shared/preprocessor.include.ab3"
00005CCE <hashmap.include.bb2@242> XINCLUDE "/Shared/preprocessor.include.ab3"
00005CFE <hashmap.include.bb2@243> XINCLUDE "/Shared/preprocessor.include.ab3"
00005D1A <hashmap.include.bb2@244> XINCLUDE "/Shared/preprocessor.include.ab3"
00005D28 <hashmap.include.bb2@245> XINCLUDE "/Shared/preprocessor.include.ab3"
00005D3C <hashmap.include.bb2@246> XINCLUDE "/Shared/preprocessor.include.ab3"
00005D90 <hashmap.include.bb2@247> XINCLUDE "/Shared/preprocessor.include.ab3"
00005DBA <hashmap.include.bb2@248> XINCLUDE "/Shared/preprocessor.include.ab3"
00005DFE <hashmap.include.bb2@249> XINCLUDE "/Shared/preprocessor.include.ab3"
00005E24 <hashmap.include.bb2@250> XINCLUDE "/Shared/preprocessor.include.ab3"
00005E2A <hashmap.include.bb2@252> XINCLUDE "/Shared/preprocessor.include.ab3"
00005E48 <hashmap.include.bb2@254> XINCLUDE "/Shared/preprocessor.include.ab3"
00005E66 <hashmap.include.bb2@256> XINCLUDE "/Shared/preprocessor.include.ab3"
00005E84 <hashmap.include.bb2@290> XINCLUDE "/Shared/preprocessor.include.ab3"
00005E8A <hashmap.include.bb2@292> XINCLUDE "/Shared/preprocessor.include.ab3"
00005EB0 <hashmap.include.bb2@293> XINCLUDE "/Shared/preprocessor.include.ab3"
00005EDE <hashmap.include.bb2@295> XINCLUDE "/Shared/preprocessor.include.ab3"
00005F06 <hashmap.include.bb2@296> XINCLUDE "/Shared/preprocessor.include.ab3"
00005F2A <hashmap.include.bb2@297> XINCLUDE "/Shared/preprocessor.include.ab3"
00005F80 <hashmap.include.bb2@300> XINCLUDE "/Shared/preprocessor.include.ab3"
00005FD2 <hashmap.include.bb2@301> XINCLUDE "/Shared/preprocessor.include.ab3"
00006028 <hashmap.include.bb2@302> XINCLUDE "/Shared/preprocessor.include.ab3"
00006038 <hashmap.include.bb2@305> XINCLUDE "/Shared/preprocessor.include.ab3"
0000608A <hashmap.include.bb2@306> XINCLUDE "/Shared/preprocessor.include.ab3"
000060B2 <hashmap.include.bb2@307> XINCLUDE "/Shared/preprocessor.include.ab3"
000060D8 <hashmap.include.bb2@308> XINCLUDE "/Shared/preprocessor.include.ab3"
000060F2 <hashmap.include.bb2@309> XINCLUDE "/Shared/preprocessor.include.ab3"
000060FA <hashmap.include.bb2@310> XINCLUDE "/Shared/preprocessor.include.ab3"
00006122 <hashmap.include.bb2@311> XINCLUDE "/Shared/preprocessor.include.ab3"
00006150 <hashmap.include.bb2@314> XINCLUDE "/Shared/preprocessor.include.ab3"
00006178 <hashmap.include.bb2@315> XINCLUDE "/Shared/preprocessor.include.ab3"
00006180 <hashmap.include.bb2@316> XINCLUDE "/Shared/preprocessor.include.ab3"
000061A4 <hashmap.include.bb2@317> XINCLUDE "/Shared/preprocessor.include.ab3"
000061D8 <hashmap.include.bb2@319> XINCLUDE "/Shared/preprocessor.include.ab3"
000061F4 <hashmap.include.bb2@320> XINCLUDE "/Shared/preprocessor.include.ab3"
000061FE <hashmap.include.bb2@321> XINCLUDE "/Shared/preprocessor.include.ab3"
00006212 <hashmap.include.bb2@322> XINCLUDE "/Shared/preprocessor.include.ab3"
00006232 <hashmap.include.bb2@323> XINCLUDE "/Shared/preprocessor.include.ab3"
0000624E <hashmap.include.bb2@324> XINCLUDE "/Shared/preprocessor.include.ab3"
0000625C <hashmap.include.bb2@325> XINCLUDE "/Shared/preprocessor.include.ab3"
0000626A <hashmap.include.bb2@326> XINCLUDE "/Shared/preprocessor.include.ab3"
00006270 <hashmap.include.bb2@327> XINCLUDE "/Shared/preprocessor.include.ab3"
00006288 <hashmap.include.bb2@328> XINCLUDE "/Shared/preprocessor.include.ab3"
00006298 <hashmap.include.bb2@330> XINCLUDE "/Shared/preprocessor.include.ab3"
000062C6 <hashmap.include.bb2@331> XINCLUDE "/Shared/preprocessor.include.ab3"
00006322 <hashmap.include.bb2@332> XINCLUDE "/Shared/preprocessor.include.ab3"
0000639A <hashmap.include.bb2@333> XINCLUDE "/Shared/preprocessor.include.ab3"
000063F6 <hashmap.include.bb2@334> XINCLUDE "/Shared/preprocessor.include.ab3"
000063FC <hashmap.include.bb2@335> XINCLUDE "/Shared/preprocessor.include.ab3"
00006406 <hashmap.include.bb2@338> XINCLUDE "/Shared/preprocessor.include.ab3"
0000640C <hashmap.include.bb2@340> XINCLUDE "/Shared/preprocessor.include.ab3"
0000643A <hashmap.include.bb2@343> XINCLUDE "/Shared/preprocessor.include.ab3"
00006440 <hashmap.include.bb2@345> XINCLUDE "/Shared/preprocessor.include.ab3"
00006460 <hashmap.include.bb2@346> XINCLUDE "/Shared/preprocessor.include.ab3"
0000646A <hashmap.include.bb2@347> XINCLUDE "/Shared/preprocessor.include.ab3"
0000647C <hashmap.include.bb2@348> XINCLUDE "/Shared/preprocessor.include.ab3"
0000648C <hashmap.include.bb2@349> XINCLUDE "/Shared/preprocessor.include.ab3"
00006496 <hashmap.include.bb2@352> XINCLUDE "/Shared/preprocessor.include.ab3"
000064B0 <hashmap.include.bb2@354> XINCLUDE "/Shared/preprocessor.include.ab3"
000064CA <hashmap.include.bb2@357> XINCLUDE "/Shared/preprocessor.include.ab3"
000064D2 <hashmap.include.bb2@359> XINCLUDE "/Shared/preprocessor.include.ab3"
000064D8 <hashmap.include.bb2@360> XINCLUDE "/Shared/preprocessor.include.ab3"
000064E2 <hashmap.include.bb2@361> XINCLUDE "/Shared/preprocessor.include.ab3"
000064EA <hashmap.include.bb2@362> XINCLUDE "/Shared/preprocessor.include.ab3"
00006512 <hashmap.include.bb2@363> XINCLUDE "/Shared/preprocessor.include.ab3"
00006518 <hashmap.include.bb2@364> XINCLUDE "/Shared/preprocessor.include.ab3"
0000652C <hashmap.include.bb2@365> XINCLUDE "/Shared/preprocessor.include.ab3"
00006568 <hashmap.include.bb2@367> XINCLUDE "/Shared/preprocessor.include.ab3"
0000658E <hashmap.include.bb2@368> XINCLUDE "/Shared/preprocessor.include.ab3"
0000659C <hashmap.include.bb2@369> XINCLUDE "/Shared/preprocessor.include.ab3"
000065D8 <hashmap.include.bb2@371> XINCLUDE "/Shared/preprocessor.include.ab3"
000065EC <hashmap.include.bb2@372> XINCLUDE "/Shared/preprocessor.include.ab3"
00006628 <hashmap.include.bb2@374> XINCLUDE "/Shared/preprocessor.include.ab3"
0000663E <hashmap.include.bb2@375> XINCLUDE "/Shared/preprocessor.include.ab3"
00006652 <hashmap.include.bb2@377> XINCLUDE "/Shared/preprocessor.include.ab3"
0000665C <hashmap.include.bb2@378> XINCLUDE "/Shared/preprocessor.include.ab3"
00006680 <hashmap.include.bb2@379> XINCLUDE "/Shared/preprocessor.include.ab3"
000066B8 <hashmap.include.bb2@380> XINCLUDE "/Shared/preprocessor.include.ab3"
000066BE <hashmap.include.bb2@381> XINCLUDE "/Shared/preprocessor.include.ab3"
000066CA <hashmap.include.bb2@382> XINCLUDE "/Shared/preprocessor.include.ab3"
000066DE <hashmap.include.bb2@385> XINCLUDE "/Shared/preprocessor.include.ab3"
000066E8 <hashmap.include.bb2@386> XINCLUDE "/Shared/preprocessor.include.ab3"
00006710 <hashmap.include.bb2@387> XINCLUDE "/Shared/preprocessor.include.ab3"
00006738 <hashmap.include.bb2@388> XINCLUDE "/Shared/preprocessor.include.ab3"
0000674A <hashmap.include.bb2@389> XINCLUDE "/Shared/preprocessor.include.ab3"
00006776 <hashmap.include.bb2@390> XINCLUDE "/Shared/preprocessor.include.ab3"
000067AA <hashmap.include.bb2@391> XINCLUDE "/Shared/preprocessor.include.ab3"
000067D6 <hashmap.include.bb2@392> XINCLUDE "/Shared/preprocessor.include.ab3"
00006822 <hashmap.include.bb2@393> XINCLUDE "/Shared/preprocessor.include.ab3"
00006832 <hashmap.include.bb2@395> XINCLUDE "/Shared/preprocessor.include.ab3"
00006838 <hashmap.include.bb2@397> XINCLUDE "/Shared/preprocessor.include.ab3"
00006844 <hashmap.include.bb2@398> XINCLUDE "/Shared/preprocessor.include.ab3"
00006872 <hashmap.include.bb2@401> XINCLUDE "/Shared/preprocessor.include.ab3"
00006874 <hashmap.include.bb2@403> XINCLUDE "/Shared/preprocessor.include.ab3"
0000687A <hashmap.include.bb2@404> XINCLUDE "/Shared/preprocessor.include.ab3"
00006884 <hashmap.include.bb2@406> XINCLUDE "/Shared/preprocessor.include.ab3"
000068AE <hashmap.include.bb2@407> XINCLUDE "/Shared/preprocessor.include.ab3"
000068B8 <hashmap.include.bb2@410> XINCLUDE "/Shared/preprocessor.include.ab3"
000068BE <hashmap.include.bb2@412> XINCLUDE "/Shared/preprocessor.include.ab3"
000068E8 <hashmap.include.bb2@415> XINCLUDE "/Shared/preprocessor.include.ab3"
000068F0 <hashmap.include.bb2@417> XINCLUDE "/Shared/preprocessor.include.ab3"
00006910 <hashmap.include.bb2@418> XINCLUDE "/Shared/preprocessor.include.ab3"
0000691A <hashmap.include.bb2@419> XINCLUDE "/Shared/preprocessor.include.ab3"
00006928 <hashmap.include.bb2@420> XINCLUDE "/Shared/preprocessor.include.ab3"
00006938 <hashmap.include.bb2@421> XINCLUDE "/Shared/preprocessor.include.ab3"
00006942 <hashmap.include.bb2@424> XINCLUDE "/Shared/preprocessor.include.ab3"
0000695C <hashmap.include.bb2@426> XINCLUDE "/Shared/preprocessor.include.ab3"
0000695C <preprocessor.include.ab3@11> XINCLUDE "/Shared/preprocessor.include.ab3"
00006976 <preprocessor.include.ab3@29> XINCLUDE "/Shared/preprocessor.include.ab3"
00006990 <preprocessor.include.ab3@30> XINCLUDE "/Shared/preprocessor.include.ab3"
000069B2 <preprocessor.include.ab3@31> XINCLUDE "/Shared/preprocessor.include.ab3"
000069E4 <preprocessor.include.ab3@32> XINCLUDE "/Shared/preprocessor.include.ab3"
000069E8 <preprocessor.include.ab3@33> XINCLUDE "/Shared/preprocessor.include.ab3"
00006A02 <preprocessor.include.ab3@36> XINCLUDE "/Shared/preprocessor.include.ab3"
00006A1C <preprocessor.include.ab3@37> XINCLUDE "/Shared/preprocessor.include.ab3"
00006A26 <preprocessor.include.ab3@38> XINCLUDE "/Shared/preprocessor.include.ab3"
00006A3C <preprocessor.include.ab3@39> XINCLUDE "/Shared/preprocessor.include.ab3"
00006A40 <preprocessor.include.ab3@40> XINCLUDE "/Shared/preprocessor.include.ab3"
00006A5A <preprocessor.include.ab3@43> XINCLUDE "/Shared/preprocessor.include.ab3"
00006A74 <preprocessor.include.ab3@44> XINCLUDE "/Shared/preprocessor.include.ab3"
00006A8E <preprocessor.include.ab3@45> XINCLUDE "/Shared/preprocessor.include.ab3"
00006AB2 <preprocessor.include.ab3@46> XINCLUDE "/Shared/preprocessor.include.ab3"
00006AB8 <preprocessor.include.ab3@47> XINCLUDE "/Shared/preprocessor.include.ab3"
00006AE2 <preprocessor.include.ab3@48> XINCLUDE "/Shared/preprocessor.include.ab3"
00006AFC <preprocessor.include.ab3@49> XINCLUDE "/Shared/preprocessor.include.ab3"
00006B0C <preprocessor.include.ab3@50> XINCLUDE "/Shared/preprocessor.include.ab3"
00006B16 <preprocessor.include.ab3@53> XINCLUDE "/Shared/preprocessor.include.ab3"
00006B24 <preprocessor.include.ab3@54> XINCLUDE "/Shared/preprocessor.include.ab3"
00006B46 <preprocessor.include.ab3@55> XINCLUDE "/Shared/preprocessor.include.ab3"
00006B7A <preprocessor.include.ab3@56> XINCLUDE "/Shared/preprocessor.include.ab3"
00006B96 <preprocessor.include.ab3@57> XINCLUDE "/Shared/preprocessor.include.ab3"
00006BA0 <preprocessor.include.ab3@58> XINCLUDE "/Shared/preprocessor.include.ab3"
00006BBC <preprocessor.include.ab3@59> XINCLUDE "/Shared/preprocessor.include.ab3"
00006BCA <preprocessor.include.ab3@60> XINCLUDE "/Shared/preprocessor.include.ab3"
00006BDE <preprocessor.include.ab3@61> XINCLUDE "/Shared/preprocessor.include.ab3"
00006C00 <preprocessor.include.ab3@62> XINCLUDE "/Shared/preprocessor.include.ab3"
00006C22 <preprocessor.include.ab3@63> XINCLUDE "/Shared/preprocessor.include.ab3"
00006C40 <preprocessor.include.ab3@64> XINCLUDE "/Shared/preprocessor.include.ab3"
00006C6E <preprocessor.include.ab3@65> XINCLUDE "/Shared/preprocessor.include.ab3"
00006C74 <preprocessor.include.ab3@66> XINCLUDE "/Shared/preprocessor.include.ab3"
00006C84 <preprocessor.include.ab3@68> XINCLUDE "/Shared/preprocessor.include.ab3"
00006C88 <preprocessor.include.ab3@70> XINCLUDE "/Shared/preprocessor.include.ab3"
00006C9E <preprocessor.include.ab3@73> XINCLUDE "/Shared/preprocessor.include.ab3"
00006CBE <preprocessor.include.ab3@74> XINCLUDE "/Shared/preprocessor.include.ab3"
00006CC8 <preprocessor.include.ab3@75> XINCLUDE "/Shared/preprocessor.include.ab3"
00006CF2 <preprocessor.include.ab3@76> XINCLUDE "/Shared/preprocessor.include.ab3"
00006D08 <preprocessor.include.ab3@77> XINCLUDE "/Shared/preprocessor.include.ab3"
00006D18 <preprocessor.include.ab3@78> XINCLUDE "/Shared/preprocessor.include.ab3"
00006D34 <preprocessor.include.ab3@80> XINCLUDE "/Shared/preprocessor.include.ab3"
00006D50 <preprocessor.include.ab3@81> XINCLUDE "/Shared/preprocessor.include.ab3"
00006D6C <preprocessor.include.ab3@82> XINCLUDE "/Shared/preprocessor.include.ab3"
00006D88 <preprocessor.include.ab3@83> XINCLUDE "/Shared/preprocessor.include.ab3"
00006DA4 <preprocessor.include.ab3@84> XINCLUDE "/Shared/preprocessor.include.ab3"
00006DC0 <preprocessor.include.ab3@85> XINCLUDE "/Shared/preprocessor.include.ab3"
00006DDC <preprocessor.include.ab3@86> XINCLUDE "/Shared/preprocessor.include.ab3"
00006DF8 <preprocessor.include.ab3@87> XINCLUDE "/Shared/preprocessor.include.ab3"
00006E14 <preprocessor.include.ab3@88> XINCLUDE "/Shared/preprocessor.include.ab3"
00006E30 <preprocessor.include.ab3@89> XINCLUDE "/Shared/preprocessor.include.ab3"
00006E4C <preprocessor.include.ab3@90> XINCLUDE "/Shared/preprocessor.include.ab3"
00006E68 <preprocessor.include.ab3@91> XINCLUDE "/Shared/preprocessor.include.ab3"
00006E84 <preprocessor.include.ab3@92> XINCLUDE "/Shared/preprocessor.include.ab3"
00006EA0 <preprocessor.include.ab3@93> XINCLUDE "/Shared/preprocessor.include.ab3"
00006EBC <preprocessor.include.ab3@94> XINCLUDE "/Shared/preprocessor.include.ab3"
00006ED8 <preprocessor.include.ab3@95> XINCLUDE "/Shared/preprocessor.include.ab3"
00006EF4 <preprocessor.include.ab3@96> XINCLUDE "/Shared/preprocessor.include.ab3"
00006F10 <preprocessor.include.ab3@97> XINCLUDE "/Shared/preprocessor.include.ab3"
00006F2C <preprocessor.include.ab3@98> XINCLUDE "/Shared/preprocessor.include.ab3"
00006F48 <preprocessor.include.ab3@99> XINCLUDE "/Shared/preprocessor.include.ab3"
00006F64 <preprocessor.include.ab3@100> XINCLUDE "/Shared/preprocessor.include.ab3"
00006F80 <preprocessor.include.ab3@101> XINCLUDE "/Shared/preprocessor.include.ab3"
00006F9C <preprocessor.include.ab3@102> XINCLUDE "/Shared/preprocessor.include.ab3"
00006FB8 <preprocessor.include.ab3@103> XINCLUDE "/Shared/preprocessor.include.ab3"
00006FD4 <preprocessor.include.ab3@104> XINCLUDE "/Shared/preprocessor.include.ab3"
00006FF0 <preprocessor.include.ab3@105> XINCLUDE "/Shared/preprocessor.include.ab3"
0000700C <preprocessor.include.ab3@106> XINCLUDE "/Shared/preprocessor.include.ab3"
00007028 <preprocessor.include.ab3@107> XINCLUDE "/Shared/preprocessor.include.ab3"
00007044 <preprocessor.include.ab3@108> XINCLUDE "/Shared/preprocessor.include.ab3"
00007060 <preprocessor.include.ab3@109> XINCLUDE "/Shared/preprocessor.include.ab3"
0000707C <preprocessor.include.ab3@110> XINCLUDE "/Shared/preprocessor.include.ab3"
00007098 <preprocessor.include.ab3@111> XINCLUDE "/Shared/preprocessor.include.ab3"
000070B4 <preprocessor.include.ab3@112> XINCLUDE "/Shared/preprocessor.include.ab3"
000070D0 <preprocessor.include.ab3@113> XINCLUDE "/Shared/preprocessor.include.ab3"
000070EC <preprocessor.include.ab3@114> XINCLUDE "/Shared/preprocessor.include.ab3"
00007108 <preprocessor.include.ab3@115> XINCLUDE "/Shared/preprocessor.include.ab3"
00007124 <preprocessor.include.ab3@116> XINCLUDE "/Shared/preprocessor.include.ab3"
00007140 <preprocessor.include.ab3@117> XINCLUDE "/Shared/preprocessor.include.ab3"
0000715C <preprocessor.include.ab3@118> XINCLUDE "/Shared/preprocessor.include.ab3"
00007178 <preprocessor.include.ab3@119> XINCLUDE "/Shared/preprocessor.include.ab3"
00007194 <preprocessor.include.ab3@120> XINCLUDE "/Shared/preprocessor.include.ab3"
000071B0 <preprocessor.include.ab3@121> XINCLUDE "/Shared/preprocessor.include.ab3"
000071CC <preprocessor.include.ab3@122> XINCLUDE "/Shared/preprocessor.include.ab3"
000071E8 <preprocessor.include.ab3@123> XINCLUDE "/Shared/preprocessor.include.ab3"
00007204 <preprocessor.include.ab3@124> XINCLUDE "/Shared/preprocessor.include.ab3"
00007220 <preprocessor.include.ab3@125> XINCLUDE "/Shared/preprocessor.include.ab3"
0000723C <preprocessor.include.ab3@126> XINCLUDE "/Shared/preprocessor.include.ab3"
00007258 <preprocessor.include.ab3@127> XINCLUDE "/Shared/preprocessor.include.ab3"
00007274 <preprocessor.include.ab3@128> XINCLUDE "/Shared/preprocessor.include.ab3"
00007290 <preprocessor.include.ab3@129> XINCLUDE "/Shared/preprocessor.include.ab3"
000072AC <preprocessor.include.ab3@130> XINCLUDE "/Shared/preprocessor.include.ab3"
000072C8 <preprocessor.include.ab3@131> XINCLUDE "/Shared/preprocessor.include.ab3"
000072E4 <preprocessor.include.ab3@132> XINCLUDE "/Shared/preprocessor.include.ab3"
00007300 <preprocessor.include.ab3@133> XINCLUDE "/Shared/preprocessor.include.ab3"
0000731C <preprocessor.include.ab3@134> XINCLUDE "/Shared/preprocessor.include.ab3"
00007338 <preprocessor.include.ab3@135> XINCLUDE "/Shared/preprocessor.include.ab3"
00007354 <preprocessor.include.ab3@136> XINCLUDE "/Shared/preprocessor.include.ab3"
00007370 <preprocessor.include.ab3@137> XINCLUDE "/Shared/preprocessor.include.ab3"
0000738C <preprocessor.include.ab3@138> XINCLUDE "/Shared/preprocessor.include.ab3"
000073A8 <preprocessor.include.ab3@139> XINCLUDE "/Shared/preprocessor.include.ab3"
000073C4 <preprocessor.include.ab3@140> XINCLUDE "/Shared/preprocessor.include.ab3"
000073E0 <preprocessor.include.ab3@141> XINCLUDE "/Shared/preprocessor.include.ab3"
000073FC <preprocessor.include.ab3@142> XINCLUDE "/Shared/preprocessor.include.ab3"
00007418 <preprocessor.include.ab3@143> XINCLUDE "/Shared/preprocessor.include.ab3"
00007434 <preprocessor.include.ab3@144> XINCLUDE "/Shared/preprocessor.include.ab3"
00007450 <preprocessor.include.ab3@145> XINCLUDE "/Shared/preprocessor.include.ab3"
0000746C <preprocessor.include.ab3@146> XINCLUDE "/Shared/preprocessor.include.ab3"
00007488 <preprocessor.include.ab3@147> XINCLUDE "/Shared/preprocessor.include.ab3"
000074A4 <preprocessor.include.ab3@148> XINCLUDE "/Shared/preprocessor.include.ab3"
000074C0 <preprocessor.include.ab3@149> XINCLUDE "/Shared/preprocessor.include.ab3"
000074DC <preprocessor.include.ab3@150> XINCLUDE "/Shared/preprocessor.include.ab3"
000074F8 <preprocessor.include.ab3@151> XINCLUDE "/Shared/preprocessor.include.ab3"
00007514 <preprocessor.include.ab3@152> XINCLUDE "/Shared/preprocessor.include.ab3"
00007530 <preprocessor.include.ab3@153> XINCLUDE "/Shared/preprocessor.include.ab3"
0000754C <preprocessor.include.ab3@154> XINCLUDE "/Shared/preprocessor.include.ab3"
00007568 <preprocessor.include.ab3@155> XINCLUDE "/Shared/preprocessor.include.ab3"
00007584 <preprocessor.include.ab3@156> XINCLUDE "/Shared/preprocessor.include.ab3"
000075A0 <preprocessor.include.ab3@157> XINCLUDE "/Shared/preprocessor.include.ab3"
000075BC <preprocessor.include.ab3@158> XINCLUDE "/Shared/preprocessor.include.ab3"
000075D8 <preprocessor.include.ab3@159> XINCLUDE "/Shared/preprocessor.include.ab3"
000075F4 <preprocessor.include.ab3@160> XINCLUDE "/Shared/preprocessor.include.ab3"
00007610 <preprocessor.include.ab3@161> XINCLUDE "/Shared/preprocessor.include.ab3"
0000762C <preprocessor.include.ab3@162> XINCLUDE "/Shared/preprocessor.include.ab3"
00007648 <preprocessor.include.ab3@163> XINCLUDE "/Shared/preprocessor.include.ab3"
00007664 <preprocessor.include.ab3@164> XINCLUDE "/Shared/preprocessor.include.ab3"
00007680 <preprocessor.include.ab3@165> XINCLUDE "/Shared/preprocessor.include.ab3"
0000769C <preprocessor.include.ab3@166> XINCLUDE "/Shared/preprocessor.include.ab3"
000076B8 <preprocessor.include.ab3@167> XINCLUDE "/Shared/preprocessor.include.ab3"
000076D4 <preprocessor.include.ab3@168> XINCLUDE "/Shared/preprocessor.include.ab3"
000076F0 <preprocessor.include.ab3@169> XINCLUDE "/Shared/preprocessor.include.ab3"
0000770C <preprocessor.include.ab3@170> XINCLUDE "/Shared/preprocessor.include.ab3"
00007728 <preprocessor.include.ab3@171> XINCLUDE "/Shared/preprocessor.include.ab3"
00007744 <preprocessor.include.ab3@172> XINCLUDE "/Shared/preprocessor.include.ab3"
00007760 <preprocessor.include.ab3@173> XINCLUDE "/Shared/preprocessor.include.ab3"
0000777C <preprocessor.include.ab3@174> XINCLUDE "/Shared/preprocessor.include.ab3"
00007798 <preprocessor.include.ab3@175> XINCLUDE "/Shared/preprocessor.include.ab3"
000077B4 <preprocessor.include.ab3@176> XINCLUDE "/Shared/preprocessor.include.ab3"
000077D0 <preprocessor.include.ab3@177> XINCLUDE "/Shared/preprocessor.include.ab3"
000077EC <preprocessor.include.ab3@178> XINCLUDE "/Shared/preprocessor.include.ab3"
00007808 <preprocessor.include.ab3@179> XINCLUDE "/Shared/preprocessor.include.ab3"
00007824 <preprocessor.include.ab3@180> XINCLUDE "/Shared/preprocessor.include.ab3"
00007840 <preprocessor.include.ab3@181> XINCLUDE "/Shared/preprocessor.include.ab3"
0000785C <preprocessor.include.ab3@182> XINCLUDE "/Shared/preprocessor.include.ab3"
00007878 <preprocessor.include.ab3@183> XINCLUDE "/Shared/preprocessor.include.ab3"
00007894 <preprocessor.include.ab3@184> XINCLUDE "/Shared/preprocessor.include.ab3"
000078B0 <preprocessor.include.ab3@185> XINCLUDE "/Shared/preprocessor.include.ab3"
000078CC <preprocessor.include.ab3@186> XINCLUDE "/Shared/preprocessor.include.ab3"
000078E8 <preprocessor.include.ab3@187> XINCLUDE "/Shared/preprocessor.include.ab3"
00007904 <preprocessor.include.ab3@188> XINCLUDE "/Shared/preprocessor.include.ab3"
00007920 <preprocessor.include.ab3@189> XINCLUDE "/Shared/preprocessor.include.ab3"
0000793C <preprocessor.include.ab3@190> XINCLUDE "/Shared/preprocessor.include.ab3"
00007958 <preprocessor.include.ab3@191> XINCLUDE "/Shared/preprocessor.include.ab3"
00007974 <preprocessor.include.ab3@192> XINCLUDE "/Shared/preprocessor.include.ab3"
00007990 <preprocessor.include.ab3@193> XINCLUDE "/Shared/preprocessor.include.ab3"
000079AC <preprocessor.include.ab3@194> XINCLUDE "/Shared/preprocessor.include.ab3"
000079C8 <preprocessor.include.ab3@195> XINCLUDE "/Shared/preprocessor.include.ab3"
000079E4 <preprocessor.include.ab3@196> XINCLUDE "/Shared/preprocessor.include.ab3"
00007A00 <preprocessor.include.ab3@197> XINCLUDE "/Shared/preprocessor.include.ab3"
00007A1C <preprocessor.include.ab3@198> XINCLUDE "/Shared/preprocessor.include.ab3"
00007A38 <preprocessor.include.ab3@199> XINCLUDE "/Shared/preprocessor.include.ab3"
00007A54 <preprocessor.include.ab3@200> XINCLUDE "/Shared/preprocessor.include.ab3"
00007A70 <preprocessor.include.ab3@201> XINCLUDE "/Shared/preprocessor.include.ab3"
00007A8C <preprocessor.include.ab3@202> XINCLUDE "/Shared/preprocessor.include.ab3"
00007AA8 <preprocessor.include.ab3@203> XINCLUDE "/Shared/preprocessor.include.ab3"
00007AC4 <preprocessor.include.ab3@204> XINCLUDE "/Shared/preprocessor.include.ab3"
00007AE0 <preprocessor.include.ab3@205> XINCLUDE "/Shared/preprocessor.include.ab3"
00007AFC <preprocessor.include.ab3@206> XINCLUDE "/Shared/preprocessor.include.ab3"
00007B18 <preprocessor.include.ab3@207> XINCLUDE "/Shared/preprocessor.include.ab3"
00007B20 <preprocessor.include.ab3@208> XINCLUDE "/Shared/preprocessor.include.ab3"
00007B2A <preprocessor.include.ab3@209> XINCLUDE "/Shared/preprocessor.include.ab3"
00007B34 <preprocessor.include.ab3@211> XINCLUDE "/Shared/preprocessor.include.ab3"
00007B3A <preprocessor.include.ab3@212> XINCLUDE "/Shared/preprocessor.include.ab3"
00007B68 <preprocessor.include.ab3@247> XINCLUDE "/Shared/preprocessor.include.ab3"
00007B84 <preprocessor.include.ab3@248> XINCLUDE "/Shared/preprocessor.include.ab3"
00007BB6 <preprocessor.include.ab3@249> XINCLUDE "/Shared/preprocessor.include.ab3"
00007BC0 <preprocessor.include.ab3@250> XINCLUDE "/Shared/preprocessor.include.ab3"
00007BE2 <preprocessor.include.ab3@251> XINCLUDE "/Shared/preprocessor.include.ab3"
00007BEC <preprocessor.include.ab3@252> XINCLUDE "/Shared/preprocessor.include.ab3"
00007BF6 <preprocessor.include.ab3@253> XINCLUDE "/Shared/preprocessor.include.ab3"
00007C00 <preprocessor.include.ab3@255> XINCLUDE "/Shared/preprocessor.include.ab3"
00007C1A <preprocessor.include.ab3@256> XINCLUDE "/Shared/preprocessor.include.ab3"
00007C48 <preprocessor.include.ab3@259> XINCLUDE "/Shared/preprocessor.include.ab3"
00007C64 <preprocessor.include.ab3@260> XINCLUDE "/Shared/preprocessor.include.ab3"
00007C72 <preprocessor.include.ab3@261> XINCLUDE "/Shared/preprocessor.include.ab3"
00007CAC <preprocessor.include.ab3@262> XINCLUDE "/Shared/preprocessor.include.ab3"
00007CB4 <preprocessor.include.ab3@264> XINCLUDE "/Shared/preprocessor.include.ab3"
00007CCE <preprocessor.include.ab3@265> XINCLUDE "/Shared/preprocessor.include.ab3"
00007CF4 <preprocessor.include.ab3@272> XINCLUDE "/Shared/preprocessor.include.ab3"
00007D16 <preprocessor.include.ab3@273> XINCLUDE "/Shared/preprocessor.include.ab3"
00007D3A <preprocessor.include.ab3@274> XINCLUDE "/Shared/preprocessor.include.ab3"
00007D40 <preprocessor.include.ab3@275> XINCLUDE "/Shared/preprocessor.include.ab3"
00007D4E <preprocessor.include.ab3@276> XINCLUDE "/Shared/preprocessor.include.ab3"
00007D54 <preprocessor.include.ab3@277> XINCLUDE "/Shared/preprocessor.include.ab3"
00007D5C <preprocessor.include.ab3@278> XINCLUDE "/Shared/preprocessor.include.ab3"
00007D62 <preprocessor.include.ab3@279> XINCLUDE "/Shared/preprocessor.include.ab3"
00007D6A <preprocessor.include.ab3@280> XINCLUDE "/Shared/preprocessor.include.ab3"
00007D7E <preprocessor.include.ab3@282> XINCLUDE "/Shared/preprocessor.include.ab3"
00007DA4 <preprocessor.include.ab3@283> XINCLUDE "/Shared/preprocessor.include.ab3"
00007DCC <preprocessor.include.ab3@284> XINCLUDE "/Shared/preprocessor.include.ab3"
00007DD6 <preprocessor.include.ab3@286> XINCLUDE "/Shared/preprocessor.include.ab3"
00007DEA <preprocessor.include.ab3@287> XINCLUDE "/Shared/preprocessor.include.ab3"
00007DFE <preprocessor.include.ab3@288> XINCLUDE "/Shared/preprocessor.include.ab3"
00007E0E <preprocessor.include.ab3@289> XINCLUDE "/Shared/preprocessor.include.ab3"
00007E28 <preprocessor.include.ab3@290> XINCLUDE "/Shared/preprocessor.include.ab3"
00007E56 <preprocessor.include.ab3@291> XINCLUDE "/Shared/preprocessor.include.ab3"
00007E6A <preprocessor.include.ab3@292> XINCLUDE "/Shared/preprocessor.include.ab3"
00007E92 <preprocessor.include.ab3@293> XINCLUDE "/Shared/preprocessor.include.ab3"
00007E98 <preprocessor.include.ab3@294> XINCLUDE "/Shared/preprocessor.include.ab3"
00007EA0 <preprocessor.include.ab3@295> XINCLUDE "/Shared/preprocessor.include.ab3"
00007EA6 <preprocessor.include.ab3@297> XINCLUDE "/Shared/preprocessor.include.ab3"
00007ECE <preprocessor.include.ab3@298> XINCLUDE "/Shared/preprocessor.include.ab3"
00007ED8 <preprocessor.include.ab3@300> XINCLUDE "/Shared/preprocessor.include.ab3"
00007EE6 <preprocessor.include.ab3@301> XINCLUDE "/Shared/preprocessor.include.ab3"
00007F04 <preprocessor.include.ab3@302> XINCLUDE "/Shared/preprocessor.include.ab3"
00007F12 <preprocessor.include.ab3@303> XINCLUDE "/Shared/preprocessor.include.ab3"
00007F1A <preprocessor.include.ab3@304> XINCLUDE "/Shared/preprocessor.include.ab3"
00007F20 <preprocessor.include.ab3@305> XINCLUDE "/Shared/preprocessor.include.ab3"
00007F34 <preprocessor.include.ab3@309> XINCLUDE "/Shared/preprocessor.include.ab3"
00007F3E <preprocessor.include.ab3@310> XINCLUDE "/Shared/preprocessor.include.ab3"
00007F4C <preprocessor.include.ab3@311> XINCLUDE "/Shared/preprocessor.include.ab3"
00007F66 <preprocessor.include.ab3@312> XINCLUDE "/Shared/preprocessor.include.ab3"
00007F6C <preprocessor.include.ab3@314> XINCLUDE "/Shared/preprocessor.include.ab3"
00007F74 <preprocessor.include.ab3@315> XINCLUDE "/Shared/preprocessor.include.ab3"
00007F7A <preprocessor.include.ab3@317> XINCLUDE "/Shared/preprocessor.include.ab3"
00007F8E <preprocessor.include.ab3@318> XINCLUDE "/Shared/preprocessor.include.ab3"
00007F98 <preprocessor.include.ab3@319> XINCLUDE "/Shared/preprocessor.include.ab3"
00007FA0 <preprocessor.include.ab3@320> XINCLUDE "/Shared/preprocessor.include.ab3"
00007FB4 <preprocessor.include.ab3@321> XINCLUDE "/Shared/preprocessor.include.ab3"
00007FC8 <preprocessor.include.ab3@326> XINCLUDE "/Shared/preprocessor.include.ab3"
00007FDC <preprocessor.include.ab3@327> XINCLUDE "/Shared/preprocessor.include.ab3"
00007FFA <preprocessor.include.ab3@329> XINCLUDE "/Shared/preprocessor.include.ab3"
00008008 <preprocessor.include.ab3@330> XINCLUDE "/Shared/preprocessor.include.ab3"
00008018 <preprocessor.include.ab3@331> XINCLUDE "/Shared/preprocessor.include.ab3"
00008040 <preprocessor.include.ab3@332> XINCLUDE "/Shared/preprocessor.include.ab3"
00008062 <preprocessor.include.ab3@333> XINCLUDE "/Shared/preprocessor.include.ab3"
00008076 <preprocessor.include.ab3@336> XINCLUDE "/Shared/preprocessor.include.ab3"
00008094 <preprocessor.include.ab3@338> XINCLUDE "/Shared/preprocessor.include.ab3"
000080A2 <preprocessor.include.ab3@339> XINCLUDE "/Shared/preprocessor.include.ab3"
000080C8 <preprocessor.include.ab3@340> XINCLUDE "/Shared/preprocessor.include.ab3"
000080F0 <preprocessor.include.ab3@341> XINCLUDE "/Shared/preprocessor.include.ab3"
00008112 <preprocessor.include.ab3@342> XINCLUDE "/Shared/preprocessor.include.ab3"
00008142 <preprocessor.include.ab3@345> XINCLUDE "/Shared/preprocessor.include.ab3"
00008170 <preprocessor.include.ab3@349> XINCLUDE "/Shared/preprocessor.include.ab3"
000081A2 <preprocessor.include.ab3@350> XINCLUDE "/Shared/preprocessor.include.ab3"
000081B0 <preprocessor.include.ab3@352> XINCLUDE "/Shared/preprocessor.include.ab3"
000081B6 <preprocessor.include.ab3@353> XINCLUDE "/Shared/preprocessor.include.ab3"
000081C6 <preprocessor.include.ab3@356> XINCLUDE "/Shared/preprocessor.include.ab3"
000081CC <preprocessor.include.ab3@357> XINCLUDE "/Shared/preprocessor.include.ab3"
000081F2 <preprocessor.include.ab3@360> XINCLUDE "/Shared/preprocessor.include.ab3"
00008214 <preprocessor.include.ab3@361> XINCLUDE "/Shared/preprocessor.include.ab3"
0000823C <preprocessor.include.ab3@362> XINCLUDE "/Shared/preprocessor.include.ab3"
0000825C <preprocessor.include.ab3@363> XINCLUDE "/Shared/preprocessor.include.ab3"
0000827E <preprocessor.include.ab3@364> XINCLUDE "/Shared/preprocessor.include.ab3"
00008284 <preprocessor.include.ab3@365> XINCLUDE "/Shared/preprocessor.include.ab3"
00008292 <preprocessor.include.ab3@366> XINCLUDE "/Shared/preprocessor.include.ab3"
000082A0 <preprocessor.include.ab3@367> XINCLUDE "/Shared/preprocessor.include.ab3"
000082A6 <preprocessor.include.ab3@368> XINCLUDE "/Shared/preprocessor.include.ab3"
000082AE <preprocessor.include.ab3@369> XINCLUDE "/Shared/preprocessor.include.ab3"
000082CC <preprocessor.include.ab3@370> XINCLUDE "/Shared/preprocessor.include.ab3"
000082E0 <preprocessor.include.ab3@371> XINCLUDE "/Shared/preprocessor.include.ab3"
000082F0 <preprocessor.include.ab3@372> XINCLUDE "/Shared/preprocessor.include.ab3"
00008306 <preprocessor.include.ab3@374> XINCLUDE "/Shared/preprocessor.include.ab3"
0000831E <preprocessor.include.ab3@376> XINCLUDE "/Shared/preprocessor.include.ab3"
0000833A <preprocessor.include.ab3@377> XINCLUDE "/Shared/preprocessor.include.ab3"
00008344 <preprocessor.include.ab3@378> XINCLUDE "/Shared/preprocessor.include.ab3"
00008360 <preprocessor.include.ab3@379> XINCLUDE "/Shared/preprocessor.include.ab3"
00008372 <preprocessor.include.ab3@380> XINCLUDE "/Shared/preprocessor.include.ab3"
000083A0 <preprocessor.include.ab3@381> XINCLUDE "/Shared/preprocessor.include.ab3"
000083DC <preprocessor.include.ab3@382> XINCLUDE "/Shared/preprocessor.include.ab3"
000083EC <preprocessor.include.ab3@383> XINCLUDE "/Shared/preprocessor.include.ab3"
000083F2 <preprocessor.include.ab3@384> XINCLUDE "/Shared/preprocessor.include.ab3"
000083F8 <preprocessor.include.ab3@387> XINCLUDE "/Shared/preprocessor.include.ab3"
00008410 <preprocessor.include.ab3@388> XINCLUDE "/Shared/preprocessor.include.ab3"
00008420 <preprocessor.include.ab3@389> XINCLUDE "/Shared/preprocessor.include.ab3"
000084A6 <preprocessor.include.ab3@390> XINCLUDE "/Shared/preprocessor.include.ab3"
000084E0 <preprocessor.include.ab3@391> XINCLUDE "/Shared/preprocessor.include.ab3"
00008516 <preprocessor.include.ab3@392> XINCLUDE "/Shared/preprocessor.include.ab3"
00008526 <preprocessor.include.ab3@393> XINCLUDE "/Shared/preprocessor.include.ab3"
00008534 <preprocessor.include.ab3@395> XINCLUDE "/Shared/preprocessor.include.ab3"
0000853A <preprocessor.include.ab3@396> XINCLUDE "/Shared/preprocessor.include.ab3"
0000854A <preprocessor.include.ab3@397> XINCLUDE "/Shared/preprocessor.include.ab3"
00008574 <preprocessor.include.ab3@398> XINCLUDE "/Shared/preprocessor.include.ab3"
0000857A <preprocessor.include.ab3@399> XINCLUDE "/Shared/preprocessor.include.ab3"
000085A6 <preprocessor.include.ab3@400> XINCLUDE "/Shared/preprocessor.include.ab3"
000085B6 <preprocessor.include.ab3@403> XINCLUDE "/Shared/preprocessor.include.ab3"
000085C6 <preprocessor.include.ab3@405> XINCLUDE "/Shared/preprocessor.include.ab3"
000085E4 <preprocessor.include.ab3@406> XINCLUDE "/Shared/preprocessor.include.ab3"
000085F2 <preprocessor.include.ab3@407> XINCLUDE "/Shared/preprocessor.include.ab3"
00008628 <preprocessor.include.ab3@408> XINCLUDE "/Shared/preprocessor.include.ab3"
0000864C <preprocessor.include.ab3@409> XINCLUDE "/Shared/preprocessor.include.ab3"
00008660 <preprocessor.include.ab3@412> XINCLUDE "/Shared/preprocessor.include.ab3"
00008670 <preprocessor.include.ab3@414> XINCLUDE "/Shared/preprocessor.include.ab3"
0000868E <preprocessor.include.ab3@415> XINCLUDE "/Shared/preprocessor.include.ab3"
0000869C <preprocessor.include.ab3@416> XINCLUDE "/Shared/preprocessor.include.ab3"
000086C0 <preprocessor.include.ab3@417> XINCLUDE "/Shared/preprocessor.include.ab3"
000086E4 <preprocessor.include.ab3@418> XINCLUDE "/Shared/preprocessor.include.ab3"
000086F2 <preprocessor.include.ab3@422> XINCLUDE "/Shared/preprocessor.include.ab3"
00008700 <preprocessor.include.ab3@423> XINCLUDE "/Shared/preprocessor.include.ab3"
00008720 <preprocessor.include.ab3@424> XINCLUDE "/Shared/preprocessor.include.ab3"
0000872E <preprocessor.include.ab3@425> XINCLUDE "/Shared/preprocessor.include.ab3"
00008734 <preprocessor.include.ab3@426> XINCLUDE "/Shared/preprocessor.include.ab3"
0000873A <preprocessor.include.ab3@429> XINCLUDE "/Shared/preprocessor.include.ab3"
00008748 <preprocessor.include.ab3@431> XINCLUDE "/Shared/preprocessor.include.ab3"
00008756 <preprocessor.include.ab3@432> XINCLUDE "/Shared/preprocessor.include.ab3"
00008776 <preprocessor.include.ab3@433> XINCLUDE "/Shared/preprocessor.include.ab3"
00008784 <preprocessor.include.ab3@434> XINCLUDE "/Shared/preprocessor.include.ab3"
0000878A <preprocessor.include.ab3@435> XINCLUDE "/Shared/preprocessor.include.ab3"
0000879A <preprocessor.include.ab3@440> XINCLUDE "/Shared/preprocessor.include.ab3"
000087A4 <preprocessor.include.ab3@442> XINCLUDE "/Shared/preprocessor.include.ab3"
000087B8 <preprocessor.include.ab3@443> XINCLUDE "/Shared/preprocessor.include.ab3"
000087DE <preprocessor.include.ab3@448> XINCLUDE "/Shared/preprocessor.include.ab3"
00008800 <preprocessor.include.ab3@449> XINCLUDE "/Shared/preprocessor.include.ab3"
00008828 <preprocessor.include.ab3@450> XINCLUDE "/Shared/preprocessor.include.ab3"
0000882E <preprocessor.include.ab3@451> XINCLUDE "/Shared/preprocessor.include.ab3"
0000883C <preprocessor.include.ab3@452> XINCLUDE "/Shared/preprocessor.include.ab3"
00008842 <preprocessor.include.ab3@453> XINCLUDE "/Shared/preprocessor.include.ab3"
00008856 <preprocessor.include.ab3@454> XINCLUDE "/Shared/preprocessor.include.ab3"
00008866 <preprocessor.include.ab3@455> XINCLUDE "/Shared/preprocessor.include.ab3"
0000887C <preprocessor.include.ab3@457> XINCLUDE "/Shared/preprocessor.include.ab3"
00008894 <preprocessor.include.ab3@459> XINCLUDE "/Shared/preprocessor.include.ab3"
000088B0 <preprocessor.include.ab3@460> XINCLUDE "/Shared/preprocessor.include.ab3"
000088BA <preprocessor.include.ab3@461> XINCLUDE "/Shared/preprocessor.include.ab3"
000088D6 <preprocessor.include.ab3@462> XINCLUDE "/Shared/preprocessor.include.ab3"
00008904 <preprocessor.include.ab3@463> XINCLUDE "/Shared/preprocessor.include.ab3"
00008940 <preprocessor.include.ab3@464> XINCLUDE "/Shared/preprocessor.include.ab3"
00008950 <preprocessor.include.ab3@465> XINCLUDE "/Shared/preprocessor.include.ab3"
0000895E <preprocessor.include.ab3@467> XINCLUDE "/Shared/preprocessor.include.ab3"
00008964 <preprocessor.include.ab3@468> XINCLUDE "/Shared/preprocessor.include.ab3"
00008974 <preprocessor.include.ab3@469> XINCLUDE "/Shared/preprocessor.include.ab3"
0000899E <preprocessor.include.ab3@470> XINCLUDE "/Shared/preprocessor.include.ab3"
000089A4 <preprocessor.include.ab3@471> XINCLUDE "/Shared/preprocessor.include.ab3"
000089D0 <preprocessor.include.ab3@472> XINCLUDE "/Shared/preprocessor.include.ab3"
000089E0 <preprocessor.include.ab3@474> XINCLUDE "/Shared/preprocessor.include.ab3"
000089F0 <preprocessor.include.ab3@476> XINCLUDE "/Shared/preprocessor.include.ab3"
00008A0E <preprocessor.include.ab3@477> XINCLUDE "/Shared/preprocessor.include.ab3"
00008A1C <preprocessor.include.ab3@478> XINCLUDE "/Shared/preprocessor.include.ab3"
00008A52 <preprocessor.include.ab3@479> XINCLUDE "/Shared/preprocessor.include.ab3"
00008A76 <preprocessor.include.ab3@480> XINCLUDE "/Shared/preprocessor.include.ab3"
00008A8A <preprocessor.include.ab3@483> XINCLUDE "/Shared/preprocessor.include.ab3"
00008A9A <preprocessor.include.ab3@485> XINCLUDE "/Shared/preprocessor.include.ab3"
00008AB8 <preprocessor.include.ab3@486> XINCLUDE "/Shared/preprocessor.include.ab3"
00008AC6 <preprocessor.include.ab3@487> XINCLUDE "/Shared/preprocessor.include.ab3"
00008AEA <preprocessor.include.ab3@488> XINCLUDE "/Shared/preprocessor.include.ab3"
00008B0E <preprocessor.include.ab3@489> XINCLUDE "/Shared/preprocessor.include.ab3"
00008B14 <preprocessor.include.ab3@493> XINCLUDE "/Shared/preprocessor.include.ab3"
00008B24 <preprocessor.include.ab3@494> XINCLUDE "/Shared/preprocessor.include.ab3"
00008B2A <preprocessor.include.ab3@495> XINCLUDE "/Shared/preprocessor.include.ab3"
00008B4C <preprocessor.include.ab3@499> XINCLUDE "/Shared/preprocessor.include.ab3"
00008B54 <preprocessor.include.ab3@500> XINCLUDE "/Shared/preprocessor.include.ab3"
00008B8A <preprocessor.include.ab3@501> XINCLUDE "/Shared/preprocessor.include.ab3"
00008BA6 <preprocessor.include.ab3@502> XINCLUDE "/Shared/preprocessor.include.ab3"
00008BAC <preprocessor.include.ab3@503> XINCLUDE "/Shared/preprocessor.include.ab3"
00008BE2 <preprocessor.include.ab3@507> XINCLUDE "/Shared/preprocessor.include.ab3"
00008BFE <preprocessor.include.ab3@508> XINCLUDE "/Shared/preprocessor.include.ab3"
00008C26 <preprocessor.include.ab3@509> XINCLUDE "/Shared/preprocessor.include.ab3"
00008C44 <preprocessor.include.ab3@510> XINCLUDE "/Shared/preprocessor.include.ab3"
00008C62 <preprocessor.include.ab3@511> XINCLUDE "/Shared/preprocessor.include.ab3"
00008C90 <preprocessor.include.ab3@512> XINCLUDE "/Shared/preprocessor.include.ab3"
00008CF2 <preprocessor.include.ab3@513> XINCLUDE "/Shared/preprocessor.include.ab3"
00008D0C <preprocessor.include.ab3@514> XINCLUDE "/Shared/preprocessor.include.ab3"
00008D26 <preprocessor.include.ab3@518> XINCLUDE "/Shared/preprocessor.include.ab3"
00008D30 <preprocessor.include.ab3@519> XINCLUDE "/Shared/preprocessor.include.ab3"
00008D6E <preprocessor.include.ab3@520> XINCLUDE "/Shared/preprocessor.include.ab3"
00008D72 <preprocessor.include.ab3@521> XINCLUDE "/Shared/preprocessor.include.ab3"
00008D7C <preprocessor.include.ab3@523> XINCLUDE "/Shared/preprocessor.include.ab3"
00008DAA <preprocessor.include.ab3@524> XINCLUDE "/Shared/preprocessor.include.ab3"
00008DCA <preprocessor.include.ab3@525> XINCLUDE "/Shared/preprocessor.include.ab3"
00008DE2 <preprocessor.include.ab3@526> XINCLUDE "/Shared/preprocessor.include.ab3"
00008E40 <preprocessor.include.ab3@527> XINCLUDE "/Shared/preprocessor.include.ab3"
00008E6C <preprocessor.include.ab3@528> XINCLUDE "/Shared/preprocessor.include.ab3"
00008E7E <preprocessor.include.ab3@529> XINCLUDE "/Shared/preprocessor.include.ab3"
00008E8E <preprocessor.include.ab3@530> XINCLUDE "/Shared/preprocessor.include.ab3"
00008EA6 <preprocessor.include.ab3@531> XINCLUDE "/Shared/preprocessor.include.ab3"
00008EAC <preprocessor.include.ab3@533> XINCLUDE "/Shared/preprocessor.include.ab3"
00008EE6 <preprocessor.include.ab3@534> XINCLUDE "/Shared/preprocessor.include.ab3"
00008EF0 <preprocessor.include.ab3@536> XINCLUDE "/Shared/preprocessor.include.ab3"
00008EF6 <preprocessor.include.ab3@537> XINCLUDE "/Shared/preprocessor.include.ab3"
00008F00 <preprocessor.include.ab3@538> XINCLUDE "/Shared/preprocessor.include.ab3"
00008F12 <preprocessor.include.ab3@539> XINCLUDE "/Shared/preprocessor.include.ab3"
00008F12 <AmiBlitz3.ab3@87> XINCLUDE "/Shared/preprocessor.include.ab3"
00008F12 <logging.include.ab3@1> XINCLUDE "PE/logging.include.bb2"
00008F12 <PE_Tools.include.ab3@1> XINCLUDE "PE/logging.include.bb2"
00008F36 <PE_Tools.include.ab3@75> XINCLUDE "PE/logging.include.bb2"
00008F3E <PE_Tools.include.ab3@84> XINCLUDE "PE/logging.include.bb2"
00008F6C <PE_Tools.include.ab3@85> XINCLUDE "PE/logging.include.bb2"
00008F9A <PE_Tools.include.ab3@86> XINCLUDE "PE/logging.include.bb2"
0000900A <PE_Tools.include.ab3@87> XINCLUDE "PE/logging.include.bb2"
00009018 <PE_Tools.include.ab3@88> XINCLUDE "PE/logging.include.bb2"
00009068 <PE_Tools.include.ab3@89> XINCLUDE "PE/logging.include.bb2"
00009068 <logging.include.ab3@11> XINCLUDE "PE/logging.include.bb2"
00009068 <file.include.bb2@1> XINCLUDE "PE/logging.include.bb2"
00009068 <asl.include.ab3@1> XINCLUDE "PE/logging.include.bb2"
0000908C <asl.include.ab3@93> XINCLUDE "PE/logging.include.bb2"
000090B4 <asl.include.ab3@94> XINCLUDE "PE/logging.include.bb2"
000090D8 <asl.include.ab3@95> XINCLUDE "PE/logging.include.bb2"
00009106 <asl.include.ab3@294> XINCLUDE "PE/logging.include.bb2"
00009324 <asl.include.ab3@296> XINCLUDE "PE/logging.include.bb2"
00009352 <asl.include.ab3@298> XINCLUDE "PE/logging.include.bb2"
0000937E <asl.include.ab3@300> XINCLUDE "PE/logging.include.bb2"
000093BA <asl.include.ab3@301> XINCLUDE "PE/logging.include.bb2"
000093E6 <asl.include.ab3@302> XINCLUDE "PE/logging.include.bb2"
00009412 <asl.include.ab3@303> XINCLUDE "PE/logging.include.bb2"
0000943E <asl.include.ab3@304> XINCLUDE "PE/logging.include.bb2"
0000946A <asl.include.ab3@305> XINCLUDE "PE/logging.include.bb2"
00009496 <asl.include.ab3@306> XINCLUDE "PE/logging.include.bb2"
000094C2 <asl.include.ab3@307> XINCLUDE "PE/logging.include.bb2"
000094EE <asl.include.ab3@308> XINCLUDE "PE/logging.include.bb2"
0000951A <asl.include.ab3@309> XINCLUDE "PE/logging.include.bb2"
000095A4 <asl.include.ab3@311> XINCLUDE "PE/logging.include.bb2"
0000962E <asl.include.ab3@312> XINCLUDE "PE/logging.include.bb2"
000096CC <asl.include.ab3@313> XINCLUDE "PE/logging.include.bb2"
00009716 <asl.include.ab3@314> XINCLUDE "PE/logging.include.bb2"
00009756 <asl.include.ab3@315> XINCLUDE "PE/logging.include.bb2"
0000975C <asl.include.ab3@316> XINCLUDE "PE/logging.include.bb2"
000097A6 <asl.include.ab3@319> XINCLUDE "PE/logging.include.bb2"
000097E6 <asl.include.ab3@320> XINCLUDE "PE/logging.include.bb2"
00009810 <asl.include.ab3@321> XINCLUDE "PE/logging.include.bb2"
00009816 <asl.include.ab3@322> XINCLUDE "PE/logging.include.bb2"
00009840 <asl.include.ab3@323> XINCLUDE "PE/logging.include.bb2"
0000986A <asl.include.ab3@325> XINCLUDE "PE/logging.include.bb2"
00009894 <asl.include.ab3@327> XINCLUDE "PE/logging.include.bb2"
0000989E <asl.include.ab3@328> XINCLUDE "PE/logging.include.bb2"
000098BC <asl.include.ab3@329> XINCLUDE "PE/logging.include.bb2"
000098DE <asl.include.ab3@330> XINCLUDE "PE/logging.include.bb2"
0000990C <asl.include.ab3@331> XINCLUDE "PE/logging.include.bb2"
0000993A <asl.include.ab3@332> XINCLUDE "PE/logging.include.bb2"
00009968 <asl.include.ab3@333> XINCLUDE "PE/logging.include.bb2"
000099AE <asl.include.ab3@336> XINCLUDE "PE/logging.include.bb2"
000099F4 <asl.include.ab3@337> XINCLUDE "PE/logging.include.bb2"
00009A3A <asl.include.ab3@338> XINCLUDE "PE/logging.include.bb2"
00009A72 <asl.include.ab3@340> XINCLUDE "PE/logging.include.bb2"
00009B70 <asl.include.ab3@341> XINCLUDE "PE/logging.include.bb2"
00009B8E <asl.include.ab3@343> XINCLUDE "PE/logging.include.bb2"
00009B98 <asl.include.ab3@345> XINCLUDE "PE/logging.include.bb2"
00009BBE <asl.include.ab3@346> XINCLUDE "PE/logging.include.bb2"
00009BD0 <asl.include.ab3@348> XINCLUDE "PE/logging.include.bb2"
00009BFE <asl.include.ab3@349> XINCLUDE "PE/logging.include.bb2"
00009C26 <asl.include.ab3@350> XINCLUDE "PE/logging.include.bb2"
00009C38 <asl.include.ab3@351> XINCLUDE "PE/logging.include.bb2"
00009C8E <asl.include.ab3@352> XINCLUDE "PE/logging.include.bb2"
00009CC4 <asl.include.ab3@353> XINCLUDE "PE/logging.include.bb2"
00009CD4 <asl.include.ab3@355> XINCLUDE "PE/logging.include.bb2"
00009CDA <asl.include.ab3@356> XINCLUDE "PE/logging.include.bb2"
00009CEC <asl.include.ab3@357> XINCLUDE "PE/logging.include.bb2"
00009CF6 <asl.include.ab3@358> XINCLUDE "PE/logging.include.bb2"
00009D30 <asl.include.ab3@359> XINCLUDE "PE/logging.include.bb2"
00009D36 <asl.include.ab3@360> XINCLUDE "PE/logging.include.bb2"
00009D8E <asl.include.ab3@361> XINCLUDE "PE/logging.include.bb2"
00009DAC <asl.include.ab3@363> XINCLUDE "PE/logging.include.bb2"
00009DB2 <asl.include.ab3@366> XINCLUDE "PE/logging.include.bb2"
00009DC2 <asl.include.ab3@369> XINCLUDE "PE/logging.include.bb2"
00009DD2 <asl.include.ab3@370> XINCLUDE "PE/logging.include.bb2"
00009DE2 <asl.include.ab3@371> XINCLUDE "PE/logging.include.bb2"
00009DF2 <asl.include.ab3@372> XINCLUDE "PE/logging.include.bb2"
00009E02 <asl.include.ab3@374> XINCLUDE "PE/logging.include.bb2"
00009E0C <asl.include.ab3@376> XINCLUDE "PE/logging.include.bb2"
00009E20 <asl.include.ab3@377> XINCLUDE "PE/logging.include.bb2"
00009E36 <asl.include.ab3@393> XINCLUDE "PE/logging.include.bb2"
00009E5E <asl.include.ab3@395> XINCLUDE "PE/logging.include.bb2"
00009E68 <asl.include.ab3@396> XINCLUDE "PE/logging.include.bb2"
00009E7A <asl.include.ab3@397> XINCLUDE "PE/logging.include.bb2"
00009EB4 <asl.include.ab3@398> XINCLUDE "PE/logging.include.bb2"
00009EBE <asl.include.ab3@399> XINCLUDE "PE/logging.include.bb2"
00009EE8 <asl.include.ab3@401> XINCLUDE "PE/logging.include.bb2"
00009F00 <asl.include.ab3@402> XINCLUDE "PE/logging.include.bb2"
00009F52 <asl.include.ab3@438> XINCLUDE "PE/logging.include.bb2"
00009F80 <asl.include.ab3@440> XINCLUDE "PE/logging.include.bb2"
0000A012 <asl.include.ab3@441> XINCLUDE "PE/logging.include.bb2"
0000A058 <asl.include.ab3@442> XINCLUDE "PE/logging.include.bb2"
0000A0EA <asl.include.ab3@443> XINCLUDE "PE/logging.include.bb2"
0000A104 <asl.include.ab3@444> XINCLUDE "PE/logging.include.bb2"
0000A104 <file.include.bb2@57> XINCLUDE "PE/logging.include.bb2"
0000A11A <file.include.bb2@66> XINCLUDE "PE/logging.include.bb2"
0000A130 <file.include.bb2@67> XINCLUDE "PE/logging.include.bb2"
0000A146 <file.include.bb2@68> XINCLUDE "PE/logging.include.bb2"
0000A15C <file.include.bb2@70> XINCLUDE "PE/logging.include.bb2"
0000A168 <file.include.bb2@72> XINCLUDE "PE/logging.include.bb2"
0000A174 <file.include.bb2@73> XINCLUDE "PE/logging.include.bb2"
0000A180 <file.include.bb2@74> XINCLUDE "PE/logging.include.bb2"
0000A18C <file.include.bb2@75> XINCLUDE "PE/logging.include.bb2"
0000A1B4 <file.include.bb2@77> XINCLUDE "PE/logging.include.bb2"
0000A1DC <file.include.bb2@78> XINCLUDE "PE/logging.include.bb2"
0000A204 <file.include.bb2@79> XINCLUDE "PE/logging.include.bb2"
0000A228 <file.include.bb2@109> XINCLUDE "PE/logging.include.bb2"
0000A24C <file.include.bb2@110> XINCLUDE "PE/logging.include.bb2"
0000A266 <file.include.bb2@156> XINCLUDE "PE/logging.include.bb2"
0000A276 <file.include.bb2@157> XINCLUDE "PE/logging.include.bb2"
0000A278 <file.include.bb2@158> XINCLUDE "PE/logging.include.bb2"
0000A27A <file.include.bb2@159> XINCLUDE "PE/logging.include.bb2"
0000A27C <file.include.bb2@160> XINCLUDE "PE/logging.include.bb2"
0000A27E <file.include.bb2@161> XINCLUDE "PE/logging.include.bb2"
0000A280 <file.include.bb2@162> XINCLUDE "PE/logging.include.bb2"
0000A284 <file.include.bb2@163> XINCLUDE "PE/logging.include.bb2"
0000A288 <file.include.bb2@164> XINCLUDE "PE/logging.include.bb2"
0000A28C <file.include.bb2@165> XINCLUDE "PE/logging.include.bb2"
0000A28E <file.include.bb2@166> XINCLUDE "PE/logging.include.bb2"
0000A290 <file.include.bb2@167> XINCLUDE "PE/logging.include.bb2"
0000A292 <file.include.bb2@168> XINCLUDE "PE/logging.include.bb2"
0000A294 <file.include.bb2@169> XINCLUDE "PE/logging.include.bb2"
0000A296 <file.include.bb2@170> XINCLUDE "PE/logging.include.bb2"
0000A298 <file.include.bb2@171> XINCLUDE "PE/logging.include.bb2"
0000A29A <file.include.bb2@172> XINCLUDE "PE/logging.include.bb2"
0000A2A4 <file.include.bb2@173> XINCLUDE "PE/logging.include.bb2"
0000A2AA <file.include.bb2@174> XINCLUDE "PE/logging.include.bb2"
0000A2C4 <file.include.bb2@215> XINCLUDE "PE/logging.include.bb2"
0000A2E2 <file.include.bb2@217> XINCLUDE "PE/logging.include.bb2"
0000A2E8 <file.include.bb2@218> XINCLUDE "PE/logging.include.bb2"
0000A302 <file.include.bb2@237> XINCLUDE "PE/logging.include.bb2"
0000A31E <file.include.bb2@239> XINCLUDE "PE/logging.include.bb2"
0000A344 <file.include.bb2@240> XINCLUDE "PE/logging.include.bb2"
0000A364 <file.include.bb2@241> XINCLUDE "PE/logging.include.bb2"
0000A36E <file.include.bb2@242> XINCLUDE "PE/logging.include.bb2"
0000A39A <file.include.bb2@243> XINCLUDE "PE/logging.include.bb2"
0000A3BC <file.include.bb2@244> XINCLUDE "PE/logging.include.bb2"
0000A3D6 <file.include.bb2@245> XINCLUDE "PE/logging.include.bb2"
0000A3DC <file.include.bb2@248> XINCLUDE "PE/logging.include.bb2"
0000A416 <file.include.bb2@249> XINCLUDE "PE/logging.include.bb2"
0000A434 <file.include.bb2@251> XINCLUDE "PE/logging.include.bb2"
0000A43A <file.include.bb2@252> XINCLUDE "PE/logging.include.bb2"
0000A458 <file.include.bb2@271> XINCLUDE "PE/logging.include.bb2"
0000A45E <file.include.bb2@273> XINCLUDE "PE/logging.include.bb2"
0000A480 <file.include.bb2@274> XINCLUDE "PE/logging.include.bb2"
0000A4A0 <file.include.bb2@275> XINCLUDE "PE/logging.include.bb2"
0000A4D8 <file.include.bb2@276> XINCLUDE "PE/logging.include.bb2"
0000A4F4 <file.include.bb2@277> XINCLUDE "PE/logging.include.bb2"
0000A4FA <file.include.bb2@278> XINCLUDE "PE/logging.include.bb2"
0000A500 <file.include.bb2@279> XINCLUDE "PE/logging.include.bb2"
0000A506 <file.include.bb2@281> XINCLUDE "PE/logging.include.bb2"
0000A50C <file.include.bb2@282> XINCLUDE "PE/logging.include.bb2"
0000A528 <file.include.bb2@283> XINCLUDE "PE/logging.include.bb2"
0000A574 <file.include.bb2@285> XINCLUDE "PE/logging.include.bb2"
0000A57A <file.include.bb2@286> XINCLUDE "PE/logging.include.bb2"
0000A5B4 <file.include.bb2@287> XINCLUDE "PE/logging.include.bb2"
0000A5C0 <file.include.bb2@288> XINCLUDE "PE/logging.include.bb2"
0000A5DC <file.include.bb2@289> XINCLUDE "PE/logging.include.bb2"
0000A5E2 <file.include.bb2@291> XINCLUDE "PE/logging.include.bb2"
0000A61C <file.include.bb2@292> XINCLUDE "PE/logging.include.bb2"
0000A626 <file.include.bb2@296> XINCLUDE "PE/logging.include.bb2"
0000A62C <file.include.bb2@297> XINCLUDE "PE/logging.include.bb2"
0000A64A <file.include.bb2@316> XINCLUDE "PE/logging.include.bb2"
0000A678 <file.include.bb2@318> XINCLUDE "PE/logging.include.bb2"
0000A67E <file.include.bb2@319> XINCLUDE "PE/logging.include.bb2"
0000A694 <file.include.bb2@335> XINCLUDE "PE/logging.include.bb2"
0000A69C <file.include.bb2@337> XINCLUDE "PE/logging.include.bb2"
0000A6F8 <file.include.bb2@338> XINCLUDE "PE/logging.include.bb2"
0000A706 <file.include.bb2@339> XINCLUDE "PE/logging.include.bb2"
0000A70C <file.include.bb2@340> XINCLUDE "PE/logging.include.bb2"
0000A73E <file.include.bb2@341> XINCLUDE "PE/logging.include.bb2"
0000A748 <file.include.bb2@342> XINCLUDE "PE/logging.include.bb2"
0000A74E <file.include.bb2@343> XINCLUDE "PE/logging.include.bb2"
0000A768 <file.include.bb2@397> XINCLUDE "PE/logging.include.bb2"
0000A77A <file.include.bb2@399> XINCLUDE "PE/logging.include.bb2"
0000A7D8 <file.include.bb2@400> XINCLUDE "PE/logging.include.bb2"
0000A812 <file.include.bb2@401> XINCLUDE "PE/logging.include.bb2"
0000A84C <file.include.bb2@402> XINCLUDE "PE/logging.include.bb2"
0000A86A <file.include.bb2@403> XINCLUDE "PE/logging.include.bb2"
0000A888 <file.include.bb2@404> XINCLUDE "PE/logging.include.bb2"
0000A89E <file.include.bb2@405> XINCLUDE "PE/logging.include.bb2"
0000A8BA <file.include.bb2@406> XINCLUDE "PE/logging.include.bb2"
0000A8D4 <file.include.bb2@407> XINCLUDE "PE/logging.include.bb2"
0000A952 <file.include.bb2@408> XINCLUDE "PE/logging.include.bb2"
0000A964 <file.include.bb2@410> XINCLUDE "PE/logging.include.bb2"
0000A97A <file.include.bb2@422> XINCLUDE "PE/logging.include.bb2"
0000A9A4 <file.include.bb2@424> XINCLUDE "PE/logging.include.bb2"
0000A9AE <file.include.bb2@425> XINCLUDE "PE/logging.include.bb2"
0000A9BE <file.include.bb2@426> XINCLUDE "PE/logging.include.bb2"
0000A9C2 <file.include.bb2@427> XINCLUDE "PE/logging.include.bb2"
0000A9F0 <file.include.bb2@428> XINCLUDE "PE/logging.include.bb2"
0000AA0A <file.include.bb2@447> XINCLUDE "PE/logging.include.bb2"
0000AA1C <file.include.bb2@449> XINCLUDE "PE/logging.include.bb2"
0000AA3C <file.include.bb2@450> XINCLUDE "PE/logging.include.bb2"
0000AA52 <file.include.bb2@451> XINCLUDE "PE/logging.include.bb2"
0000AA8A <file.include.bb2@452> XINCLUDE "PE/logging.include.bb2"
0000AAB4 <file.include.bb2@453> XINCLUDE "PE/logging.include.bb2"
0000AADE <file.include.bb2@456> XINCLUDE "PE/logging.include.bb2"
0000AAF6 <file.include.bb2@457> XINCLUDE "PE/logging.include.bb2"
0000AB0C <file.include.bb2@525> XINCLUDE "PE/logging.include.bb2"
0000AB54 <file.include.bb2@527> XINCLUDE "PE/logging.include.bb2"
0000AB74 <file.include.bb2@528> XINCLUDE "PE/logging.include.bb2"
0000AB7C <file.include.bb2@529> XINCLUDE "PE/logging.include.bb2"
0000ABBA <file.include.bb2@568> XINCLUDE "PE/logging.include.bb2"
0000ABC6 <file.include.bb2@570> XINCLUDE "PE/logging.include.bb2"
0000ABD0 <file.include.bb2@571> XINCLUDE "PE/logging.include.bb2"
0000ABE2 <file.include.bb2@572> XINCLUDE "PE/logging.include.bb2"
0000ABE8 <file.include.bb2@573> XINCLUDE "PE/logging.include.bb2"
0000ABF6 <file.include.bb2@574> XINCLUDE "PE/logging.include.bb2"
0000AC1E <file.include.bb2@575> XINCLUDE "PE/logging.include.bb2"
0000AC32 <file.include.bb2@576> XINCLUDE "PE/logging.include.bb2"
0000AC5A <file.include.bb2@577> XINCLUDE "PE/logging.include.bb2"
0000AC6E <file.include.bb2@578> XINCLUDE "PE/logging.include.bb2"
0000AC96 <file.include.bb2@579> XINCLUDE "PE/logging.include.bb2"
0000ACAA <file.include.bb2@580> XINCLUDE "PE/logging.include.bb2"
0000ACD2 <file.include.bb2@581> XINCLUDE "PE/logging.include.bb2"
0000ACD4 <file.include.bb2@582> XINCLUDE "PE/logging.include.bb2"
0000ACF8 <file.include.bb2@584> XINCLUDE "PE/logging.include.bb2"
0000AD30 <file.include.bb2@586> XINCLUDE "PE/logging.include.bb2"
0000ADBA <file.include.bb2@587> XINCLUDE "PE/logging.include.bb2"
0000ADE2 <file.include.bb2@588> XINCLUDE "PE/logging.include.bb2"
0000AE12 <file.include.bb2@589> XINCLUDE "PE/logging.include.bb2"
0000AE4A <file.include.bb2@593> XINCLUDE "PE/logging.include.bb2"
0000AEA2 <file.include.bb2@594> XINCLUDE "PE/logging.include.bb2"
0000AEFA <file.include.bb2@595> XINCLUDE "PE/logging.include.bb2"
0000AF7A <file.include.bb2@597> XINCLUDE "PE/logging.include.bb2"
0000AFAE <file.include.bb2@598> XINCLUDE "PE/logging.include.bb2"
0000AFE2 <file.include.bb2@599> XINCLUDE "PE/logging.include.bb2"
0000AFE8 <file.include.bb2@600> XINCLUDE "PE/logging.include.bb2"
0000AFF6 <file.include.bb2@601> XINCLUDE "PE/logging.include.bb2"
0000B02A <file.include.bb2@602> XINCLUDE "PE/logging.include.bb2"
0000B052 <file.include.bb2@603> XINCLUDE "PE/logging.include.bb2"
0000B10A <file.include.bb2@604> XINCLUDE "PE/logging.include.bb2"
0000B18A <file.include.bb2@605> XINCLUDE "PE/logging.include.bb2"
0000B1BE <file.include.bb2@606> XINCLUDE "PE/logging.include.bb2"
0000B1DE <file.include.bb2@608> XINCLUDE "PE/logging.include.bb2"
0000B1E4 <file.include.bb2@609> XINCLUDE "PE/logging.include.bb2"
0000B1EA <file.include.bb2@610> XINCLUDE "PE/logging.include.bb2"
0000B2BA <file.include.bb2@611> XINCLUDE "PE/logging.include.bb2"
0000B2CE <file.include.bb2@614> XINCLUDE "PE/logging.include.bb2"
0000B386 <file.include.bb2@615> XINCLUDE "PE/logging.include.bb2"
0000B406 <file.include.bb2@616> XINCLUDE "PE/logging.include.bb2"
0000B4F6 <file.include.bb2@617> XINCLUDE "PE/logging.include.bb2"
0000B500 <file.include.bb2@618> XINCLUDE "PE/logging.include.bb2"
0000B534 <file.include.bb2@619> XINCLUDE "PE/logging.include.bb2"
0000B554 <file.include.bb2@620> XINCLUDE "PE/logging.include.bb2"
0000B55A <file.include.bb2@621> XINCLUDE "PE/logging.include.bb2"
0000B560 <file.include.bb2@622> XINCLUDE "PE/logging.include.bb2"
0000B630 <file.include.bb2@623> XINCLUDE "PE/logging.include.bb2"
0000B644 <file.include.bb2@627> XINCLUDE "PE/logging.include.bb2"
0000B678 <file.include.bb2@628> XINCLUDE "PE/logging.include.bb2"
0000B6A0 <file.include.bb2@629> XINCLUDE "PE/logging.include.bb2"
0000B758 <file.include.bb2@630> XINCLUDE "PE/logging.include.bb2"
0000B7D8 <file.include.bb2@631> XINCLUDE "PE/logging.include.bb2"
0000B80C <file.include.bb2@632> XINCLUDE "PE/logging.include.bb2"
0000B82C <file.include.bb2@635> XINCLUDE "PE/logging.include.bb2"
0000B832 <file.include.bb2@636> XINCLUDE "PE/logging.include.bb2"
0000B838 <file.include.bb2@637> XINCLUDE "PE/logging.include.bb2"
0000B908 <file.include.bb2@638> XINCLUDE "PE/logging.include.bb2"
0000B91C <file.include.bb2@641> XINCLUDE "PE/logging.include.bb2"
0000B9D4 <file.include.bb2@642> XINCLUDE "PE/logging.include.bb2"
0000BA54 <file.include.bb2@643> XINCLUDE "PE/logging.include.bb2"
0000BA88 <file.include.bb2@644> XINCLUDE "PE/logging.include.bb2"
0000BAA8 <file.include.bb2@645> XINCLUDE "PE/logging.include.bb2"
0000BAAE <file.include.bb2@646> XINCLUDE "PE/logging.include.bb2"
0000BAB4 <file.include.bb2@647> XINCLUDE "PE/logging.include.bb2"
0000BB84 <file.include.bb2@648> XINCLUDE "PE/logging.include.bb2"
0000BB8A <file.include.bb2@651> XINCLUDE "PE/logging.include.bb2"
0000BBC4 <file.include.bb2@652> XINCLUDE "PE/logging.include.bb2"
0000BBC6 <file.include.bb2@653> XINCLUDE "PE/logging.include.bb2"
0000BBCC <file.include.bb2@655> XINCLUDE "PE/logging.include.bb2"
0000BC64 <file.include.bb2@656> XINCLUDE "PE/logging.include.bb2"
0000BC76 <file.include.bb2@659> XINCLUDE "PE/logging.include.bb2"
0000BC8C <file.include.bb2@660> XINCLUDE "PE/logging.include.bb2"
0000BCF6 <file.include.bb2@661> XINCLUDE "PE/logging.include.bb2"
0000BD60 <file.include.bb2@662> XINCLUDE "PE/logging.include.bb2"
0000BD7A <file.include.bb2@663> XINCLUDE "PE/logging.include.bb2"
0000BD96 <file.include.bb2@664> XINCLUDE "PE/logging.include.bb2"
0000BDB4 <file.include.bb2@665> XINCLUDE "PE/logging.include.bb2"
0000BDCE <file.include.bb2@666> XINCLUDE "PE/logging.include.bb2"
0000BDD8 <file.include.bb2@668> XINCLUDE "PE/logging.include.bb2"
0000BDF4 <file.include.bb2@669> XINCLUDE "PE/logging.include.bb2"
0000BE16 <file.include.bb2@805> XINCLUDE "PE/logging.include.bb2"
0000BE1C <file.include.bb2@807> XINCLUDE "PE/logging.include.bb2"
0000BE42 <file.include.bb2@808> XINCLUDE "PE/logging.include.bb2"
0000BE5E <file.include.bb2@809> XINCLUDE "PE/logging.include.bb2"
0000BE70 <file.include.bb2@810> XINCLUDE "PE/logging.include.bb2"
0000BECE <file.include.bb2@811> XINCLUDE "PE/logging.include.bb2"
0000BF06 <file.include.bb2@812> XINCLUDE "PE/logging.include.bb2"
0000BF0C <file.include.bb2@813> XINCLUDE "PE/logging.include.bb2"
0000BF54 <file.include.bb2@814> XINCLUDE "PE/logging.include.bb2"
0000BF6E <file.include.bb2@815> XINCLUDE "PE/logging.include.bb2"
0000BF7C <file.include.bb2@818> XINCLUDE "PE/logging.include.bb2"
0000BF82 <file.include.bb2@819> XINCLUDE "PE/logging.include.bb2"
0000BF88 <file.include.bb2@820> XINCLUDE "PE/logging.include.bb2"
0000BF9A <file.include.bb2@821> XINCLUDE "PE/logging.include.bb2"
0000C086 <file.include.bb2@822> XINCLUDE "PE/logging.include.bb2"
0000C08C <file.include.bb2@823> XINCLUDE "PE/logging.include.bb2"
0000C0D2 <file.include.bb2@824> XINCLUDE "PE/logging.include.bb2"
0000C0DE <file.include.bb2@825> XINCLUDE "PE/logging.include.bb2"
0000C144 <file.include.bb2@826> XINCLUDE "PE/logging.include.bb2"
0000C18A <file.include.bb2@827> XINCLUDE "PE/logging.include.bb2"
0000C1D2 <file.include.bb2@830> XINCLUDE "PE/logging.include.bb2"
0000C23A <file.include.bb2@831> XINCLUDE "PE/logging.include.bb2"
0000C240 <file.include.bb2@832> XINCLUDE "PE/logging.include.bb2"
0000C27A <file.include.bb2@833> XINCLUDE "PE/logging.include.bb2"
0000C280 <file.include.bb2@835> XINCLUDE "PE/logging.include.bb2"
0000C2E2 <file.include.bb2@836> XINCLUDE "PE/logging.include.bb2"
0000C2EC <file.include.bb2@838> XINCLUDE "PE/logging.include.bb2"
0000C300 <file.include.bb2@839> XINCLUDE "PE/logging.include.bb2"
0000C31A <file.include.bb2@841> XINCLUDE "PE/logging.include.bb2"
0000C320 <file.include.bb2@843> XINCLUDE "PE/logging.include.bb2"
0000C346 <file.include.bb2@844> XINCLUDE "PE/logging.include.bb2"
0000C362 <file.include.bb2@845> XINCLUDE "PE/logging.include.bb2"
0000C3C0 <file.include.bb2@846> XINCLUDE "PE/logging.include.bb2"
0000C3C4 <file.include.bb2@849> XINCLUDE "PE/logging.include.bb2"
0000C3E6 <file.include.bb2@867> XINCLUDE "PE/logging.include.bb2"
0000C3EC <file.include.bb2@869> XINCLUDE "PE/logging.include.bb2"
0000C408 <file.include.bb2@870> XINCLUDE "PE/logging.include.bb2"
0000C428 <file.include.bb2@871> XINCLUDE "PE/logging.include.bb2"
0000C466 <file.include.bb2@872> XINCLUDE "PE/logging.include.bb2"
0000C4B4 <file.include.bb2@873> XINCLUDE "PE/logging.include.bb2"
0000C4EA <file.include.bb2@874> XINCLUDE "PE/logging.include.bb2"
0000C4F0 <file.include.bb2@875> XINCLUDE "PE/logging.include.bb2"
0000C4F6 <file.include.bb2@876> XINCLUDE "PE/logging.include.bb2"
0000C526 <file.include.bb2@877> XINCLUDE "PE/logging.include.bb2"
0000C52C <file.include.bb2@878> XINCLUDE "PE/logging.include.bb2"
0000C532 <file.include.bb2@880> XINCLUDE "PE/logging.include.bb2"
0000C544 <file.include.bb2@881> XINCLUDE "PE/logging.include.bb2"
0000C5A2 <file.include.bb2@882> XINCLUDE "PE/logging.include.bb2"
0000C5DA <file.include.bb2@883> XINCLUDE "PE/logging.include.bb2"
0000C5E0 <file.include.bb2@884> XINCLUDE "PE/logging.include.bb2"
0000C628 <file.include.bb2@885> XINCLUDE "PE/logging.include.bb2"
0000C642 <file.include.bb2@886> XINCLUDE "PE/logging.include.bb2"
0000C650 <file.include.bb2@888> XINCLUDE "PE/logging.include.bb2"
0000C656 <file.include.bb2@889> XINCLUDE "PE/logging.include.bb2"
0000C65C <file.include.bb2@890> XINCLUDE "PE/logging.include.bb2"
0000C66E <file.include.bb2@891> XINCLUDE "PE/logging.include.bb2"
0000C674 <file.include.bb2@892> XINCLUDE "PE/logging.include.bb2"
0000C67A <file.include.bb2@893> XINCLUDE "PE/logging.include.bb2"
0000C6D8 <file.include.bb2@894> XINCLUDE "PE/logging.include.bb2"
0000C720 <file.include.bb2@897> XINCLUDE "PE/logging.include.bb2"
0000C72A <file.include.bb2@900> XINCLUDE "PE/logging.include.bb2"
0000C730 <file.include.bb2@901> XINCLUDE "PE/logging.include.bb2"
0000C74A <file.include.bb2@955> XINCLUDE "PE/logging.include.bb2"
0000C750 <file.include.bb2@957> XINCLUDE "PE/logging.include.bb2"
0000C798 <file.include.bb2@958> XINCLUDE "PE/logging.include.bb2"
0000C7D6 <file.include.bb2@959> XINCLUDE "PE/logging.include.bb2"
0000C7E0 <file.include.bb2@960> XINCLUDE "PE/logging.include.bb2"
0000C7E6 <file.include.bb2@961> XINCLUDE "PE/logging.include.bb2"
0000C80C <file.include.bb2@1108> XINCLUDE "PE/logging.include.bb2"
0000C812 <file.include.bb2@1110> XINCLUDE "PE/logging.include.bb2"
0000C838 <file.include.bb2@1111> XINCLUDE "PE/logging.include.bb2"
0000C898 <file.include.bb2@1112> XINCLUDE "PE/logging.include.bb2"
0000C8B2 <file.include.bb2@1113> XINCLUDE "PE/logging.include.bb2"
0000C8BC <file.include.bb2@1114> XINCLUDE "PE/logging.include.bb2"
0000C8D6 <file.include.bb2@1115> XINCLUDE "PE/logging.include.bb2"
0000C8E0 <file.include.bb2@1116> XINCLUDE "PE/logging.include.bb2"
0000C8F8 <file.include.bb2@1117> XINCLUDE "PE/logging.include.bb2"
0000C928 <file.include.bb2@1118> XINCLUDE "PE/logging.include.bb2"
0000C944 <file.include.bb2@1119> XINCLUDE "PE/logging.include.bb2"
0000C952 <file.include.bb2@1120> XINCLUDE "PE/logging.include.bb2"
0000C958 <file.include.bb2@1123> XINCLUDE "PE/logging.include.bb2"
0000C992 <file.include.bb2@1124> XINCLUDE "PE/logging.include.bb2"
0000C99C <file.include.bb2@1126> XINCLUDE "PE/logging.include.bb2"
0000C9A2 <file.include.bb2@1127> XINCLUDE "PE/logging.include.bb2"
0000C9C0 <file.include.bb2@1148> XINCLUDE "PE/logging.include.bb2"
0000C9C6 <file.include.bb2@1150> XINCLUDE "PE/logging.include.bb2"
0000C9D8 <file.include.bb2@1151> XINCLUDE "PE/logging.include.bb2"
0000C9E6 <file.include.bb2@1152> XINCLUDE "PE/logging.include.bb2"
0000CA04 <file.include.bb2@1153> XINCLUDE "PE/logging.include.bb2"
0000CA3A <file.include.bb2@1154> XINCLUDE "PE/logging.include.bb2"
0000CA4C <file.include.bb2@1155> XINCLUDE "PE/logging.include.bb2"
0000CA96 <file.include.bb2@1156> XINCLUDE "PE/logging.include.bb2"
0000CB80 <file.include.bb2@1157> XINCLUDE "PE/logging.include.bb2"
0000CB9E <file.include.bb2@1158> XINCLUDE "PE/logging.include.bb2"
0000CBC4 <file.include.bb2@1160> XINCLUDE "PE/logging.include.bb2"
0000CBE0 <file.include.bb2@1161> XINCLUDE "PE/logging.include.bb2"
0000CC0C <file.include.bb2@1162> XINCLUDE "PE/logging.include.bb2"
0000CC16 <file.include.bb2@1163> XINCLUDE "PE/logging.include.bb2"
0000CC44 <file.include.bb2@1164> XINCLUDE "PE/logging.include.bb2"
0000CC5E <file.include.bb2@1165> XINCLUDE "PE/logging.include.bb2"
0000CC7A <file.include.bb2@1166> XINCLUDE "PE/logging.include.bb2"
0000CC80 <file.include.bb2@1167> XINCLUDE "PE/logging.include.bb2"
0000CCBA <file.include.bb2@1168> XINCLUDE "PE/logging.include.bb2"
0000CCC0 <file.include.bb2@1170> XINCLUDE "PE/logging.include.bb2"
0000CCC6 <file.include.bb2@1171> XINCLUDE "PE/logging.include.bb2"
0000CCCC <file.include.bb2@1173> XINCLUDE "PE/logging.include.bb2"
0000CD6C <file.include.bb2@1174> XINCLUDE "PE/logging.include.bb2"
0000CD72 <file.include.bb2@1176> XINCLUDE "PE/logging.include.bb2"
0000CE14 <file.include.bb2@1177> XINCLUDE "PE/logging.include.bb2"
0000CE1A <file.include.bb2@1179> XINCLUDE "PE/logging.include.bb2"
0000CE54 <file.include.bb2@1180> XINCLUDE "PE/logging.include.bb2"
0000CE5E <file.include.bb2@1182> XINCLUDE "PE/logging.include.bb2"
0000CE64 <file.include.bb2@1183> XINCLUDE "PE/logging.include.bb2"
0000CE7E <file.include.bb2@1245> XINCLUDE "PE/logging.include.bb2"
0000CE9C <file.include.bb2@1247> XINCLUDE "PE/logging.include.bb2"
0000CEA2 <file.include.bb2@1248> XINCLUDE "PE/logging.include.bb2"
0000CEBC <file.include.bb2@1398> XINCLUDE "PE/logging.include.bb2"
0000CEDC <file.include.bb2@1400> XINCLUDE "PE/logging.include.bb2"
0000CF90 <file.include.bb2@1401> XINCLUDE "PE/logging.include.bb2"
0000CF96 <file.include.bb2@1402> XINCLUDE "PE/logging.include.bb2"
0000CF9C <file.include.bb2@1403> XINCLUDE "PE/logging.include.bb2"
0000CFC6 <file.include.bb2@1404> XINCLUDE "PE/logging.include.bb2"
0000CFD2 <file.include.bb2@1406> XINCLUDE "PE/logging.include.bb2"
0000CFD8 <file.include.bb2@1407> XINCLUDE "PE/logging.include.bb2"
0000CFF2 <file.include.bb2@1593> XINCLUDE "PE/logging.include.bb2"
0000CFFA <file.include.bb2@1594> XINCLUDE "PE/logging.include.bb2"
0000D002 <file.include.bb2@1595> XINCLUDE "PE/logging.include.bb2"
0000D018 <file.include.bb2@1596> XINCLUDE "PE/logging.include.bb2"
0000D030 <file.include.bb2@1597> XINCLUDE "PE/logging.include.bb2"
0000D042 <file.include.bb2@1598> XINCLUDE "PE/logging.include.bb2"
0000D04E <file.include.bb2@1599> XINCLUDE "PE/logging.include.bb2"
0000D054 <file.include.bb2@1600> XINCLUDE "PE/logging.include.bb2"
0000D05C <file.include.bb2@1601> XINCLUDE "PE/logging.include.bb2"
0000D094 <file.include.bb2@1602> XINCLUDE "PE/logging.include.bb2"
0000D0A6 <file.include.bb2@1603> XINCLUDE "PE/logging.include.bb2"
0000D0CA <file.include.bb2@1604> XINCLUDE "PE/logging.include.bb2"
0000D0DC <file.include.bb2@1605> XINCLUDE "PE/logging.include.bb2"
0000D0E8 <file.include.bb2@1606> XINCLUDE "PE/logging.include.bb2"
0000D0EE <file.include.bb2@1607> XINCLUDE "PE/logging.include.bb2"
0000D0FE <file.include.bb2@1608> XINCLUDE "PE/logging.include.bb2"
0000D11C <file.include.bb2@1613> XINCLUDE "PE/logging.include.bb2"
0000D12E <file.include.bb2@1616> XINCLUDE "PE/logging.include.bb2"
0000D17A <file.include.bb2@1617> XINCLUDE "PE/logging.include.bb2"
0000D180 <file.include.bb2@1619> XINCLUDE "PE/logging.include.bb2"
0000D1AA <file.include.bb2@1621> XINCLUDE "PE/logging.include.bb2"
0000D1C2 <file.include.bb2@1622> XINCLUDE "PE/logging.include.bb2"
0000D1F0 <file.include.bb2@1706> XINCLUDE "PE/logging.include.bb2"
0000D204 <file.include.bb2@1707> XINCLUDE "PE/logging.include.bb2"
0000D21A <file.include.bb2@1708> XINCLUDE "PE/logging.include.bb2"
0000D23A <file.include.bb2@1709> XINCLUDE "PE/logging.include.bb2"
0000D250 <file.include.bb2@1710> XINCLUDE "PE/logging.include.bb2"
0000D25A <file.include.bb2@1711> XINCLUDE "PE/logging.include.bb2"
0000D274 <file.include.bb2@1712> XINCLUDE "PE/logging.include.bb2"
0000D296 <file.include.bb2@1787> XINCLUDE "PE/logging.include.bb2"
0000D2AE <file.include.bb2@1789> XINCLUDE "PE/logging.include.bb2"
0000D2D0 <file.include.bb2@1790> XINCLUDE "PE/logging.include.bb2"
0000D2D6 <file.include.bb2@1791> XINCLUDE "PE/logging.include.bb2"
0000D308 <file.include.bb2@1811> XINCLUDE "PE/logging.include.bb2"
0000D31C <file.include.bb2@1813> XINCLUDE "PE/logging.include.bb2"
0000D334 <file.include.bb2@1814> XINCLUDE "PE/logging.include.bb2"
0000D34C <file.include.bb2@1815> XINCLUDE "PE/logging.include.bb2"
0000D36C <file.include.bb2@1816> XINCLUDE "PE/logging.include.bb2"
0000D39C <file.include.bb2@1817> XINCLUDE "PE/logging.include.bb2"
0000D3CC <file.include.bb2@1818> XINCLUDE "PE/logging.include.bb2"
0000D3DE <file.include.bb2@1819> XINCLUDE "PE/logging.include.bb2"
0000D3E6 <file.include.bb2@1820> XINCLUDE "PE/logging.include.bb2"
0000D410 <file.include.bb2@1821> XINCLUDE "PE/logging.include.bb2"
0000D41A <file.include.bb2@1823> XINCLUDE "PE/logging.include.bb2"
0000D434 <file.include.bb2@1824> XINCLUDE "PE/logging.include.bb2"
0000D44E <file.include.bb2@1841> XINCLUDE "PE/logging.include.bb2"
0000D46C <file.include.bb2@1843> XINCLUDE "PE/logging.include.bb2"
0000D48C <file.include.bb2@1844> XINCLUDE "PE/logging.include.bb2"
0000D4D6 <file.include.bb2@1845> XINCLUDE "PE/logging.include.bb2"
0000D4F0 <file.include.bb2@1846> XINCLUDE "PE/logging.include.bb2"
0000D502 <file.include.bb2@1847> XINCLUDE "PE/logging.include.bb2"
0000D538 <file.include.bb2@1848> XINCLUDE "PE/logging.include.bb2"
0000D54A <file.include.bb2@1849> XINCLUDE "PE/logging.include.bb2"
0000D552 <file.include.bb2@1850> XINCLUDE "PE/logging.include.bb2"
0000D57A <file.include.bb2@1851> XINCLUDE "PE/logging.include.bb2"
0000D580 <file.include.bb2@1853> XINCLUDE "PE/logging.include.bb2"
0000D5A8 <file.include.bb2@1854> XINCLUDE "PE/logging.include.bb2"
0000D5B8 <file.include.bb2@1856> XINCLUDE "PE/logging.include.bb2"
0000D5CC <file.include.bb2@1857> XINCLUDE "PE/logging.include.bb2"
0000D5E2 <file.include.bb2@1870> XINCLUDE "PE/logging.include.bb2"
0000D5F2 <file.include.bb2@1872> XINCLUDE "PE/logging.include.bb2"
0000D5F6 <file.include.bb2@1873> XINCLUDE "PE/logging.include.bb2"
0000D60C <file.include.bb2@1894> XINCLUDE "PE/logging.include.bb2"
0000D636 <file.include.bb2@1896> XINCLUDE "PE/logging.include.bb2"
0000D63E <file.include.bb2@1897> XINCLUDE "PE/logging.include.bb2"
0000D63E <logging.include.ab3@13> XINCLUDE "PE/logging.include.bb2"
0000D6DC <logging.include.ab3@35> XINCLUDE "PE/logging.include.bb2"
0000D6E2 <logging.include.ab3@36> XINCLUDE "PE/logging.include.bb2"
0000D6E8 <logging.include.ab3@37> XINCLUDE "PE/logging.include.bb2"
0000D6EE <logging.include.ab3@38> XINCLUDE "PE/logging.include.bb2"
0000D728 <logging.include.ab3@129> XINCLUDE "PE/logging.include.bb2"
0000D75A <logging.include.ab3@131> XINCLUDE "PE/logging.include.bb2"
0000D768 <logging.include.ab3@132> XINCLUDE "PE/logging.include.bb2"
0000D798 <logging.include.ab3@133> XINCLUDE "PE/logging.include.bb2"
0000DB08 <logging.include.ab3@134> XINCLUDE "PE/logging.include.bb2"
0000DB16 <logging.include.ab3@135> XINCLUDE "PE/logging.include.bb2"
0000DB1C <logging.include.ab3@136> XINCLUDE "PE/logging.include.bb2"
0000DDAE <logging.include.ab3@137> XINCLUDE "PE/logging.include.bb2"
0000DDC8 <logging.include.ab3@139> XINCLUDE "PE/logging.include.bb2"
0000DE02 <logging.include.ab3@142> XINCLUDE "PE/logging.include.bb2"
0000DE54 <logging.include.ab3@143> XINCLUDE "PE/logging.include.bb2"
0000DE62 <logging.include.ab3@144> XINCLUDE "PE/logging.include.bb2"
0000DEB8 <logging.include.ab3@145> XINCLUDE "PE/logging.include.bb2"
0000DEBE <logging.include.ab3@146> XINCLUDE "PE/logging.include.bb2"
0000DF38 <logging.include.ab3@147> XINCLUDE "PE/logging.include.bb2"
0000DFAC <logging.include.ab3@148> XINCLUDE "PE/logging.include.bb2"
0000DFC6 <logging.include.ab3@150> XINCLUDE "PE/logging.include.bb2"
0000DFC6 <AmiBlitz3.ab3@89> XINCLUDE "PE/logging.include.bb2"
0000DFD2 <AmiBlitz3.ab3@90> optimize 5                               ; added because the include change the optimize and or syntax level  tomsmart1
0000DFD2 <translation.include.bb2@1> XINCLUDE "translation.include.bb2"
0000DFD2 <phrasebook.include.bb2@1> XINCLUDE "translation.include.bb2"
0000DFD2 <prefixtree.include.bb2@1> XINCLUDE "translation.include.bb2"
0000DFD2 <dynamicarray.include.bb2@1> XINCLUDE "translation.include.bb2"
0000DFFA <dynamicarray.include.bb2@42> XINCLUDE "translation.include.bb2"
0000E014 <dynamicarray.include.bb2@55> XINCLUDE "translation.include.bb2"
0000E01E <dynamicarray.include.bb2@56> XINCLUDE "translation.include.bb2"
0000E030 <dynamicarray.include.bb2@57> XINCLUDE "translation.include.bb2"
0000E054 <dynamicarray.include.bb2@58> XINCLUDE "translation.include.bb2"
0000E062 <dynamicarray.include.bb2@60> XINCLUDE "translation.include.bb2"
0000E06E <dynamicarray.include.bb2@61> XINCLUDE "translation.include.bb2"
0000E072 <dynamicarray.include.bb2@63> XINCLUDE "translation.include.bb2"
0000E090 <dynamicarray.include.bb2@99> XINCLUDE "translation.include.bb2"
0000E0AA <dynamicarray.include.bb2@101> XINCLUDE "translation.include.bb2"
0000E0CA <dynamicarray.include.bb2@102> XINCLUDE "translation.include.bb2"
0000E0D4 <dynamicarray.include.bb2@103> XINCLUDE "translation.include.bb2"
0000E0E2 <dynamicarray.include.bb2@104> XINCLUDE "translation.include.bb2"
0000E0EE <dynamicarray.include.bb2@105> XINCLUDE "translation.include.bb2"
0000E0FC <dynamicarray.include.bb2@106> XINCLUDE "translation.include.bb2"
0000E108 <dynamicarray.include.bb2@107> XINCLUDE "translation.include.bb2"
0000E114 <dynamicarray.include.bb2@108> XINCLUDE "translation.include.bb2"
0000E126 <dynamicarray.include.bb2@109> XINCLUDE "translation.include.bb2"
0000E136 <dynamicarray.include.bb2@110> XINCLUDE "translation.include.bb2"
0000E140 <dynamicarray.include.bb2@113> XINCLUDE "translation.include.bb2"
0000E146 <dynamicarray.include.bb2@114> XINCLUDE "translation.include.bb2"
0000E160 <dynamicarray.include.bb2@425> XINCLUDE "translation.include.bb2"
0000E16A <dynamicarray.include.bb2@427> XINCLUDE "translation.include.bb2"
0000E174 <dynamicarray.include.bb2@428> XINCLUDE "translation.include.bb2"
0000E184 <dynamicarray.include.bb2@429> XINCLUDE "translation.include.bb2"
0000E18E <dynamicarray.include.bb2@430> XINCLUDE "translation.include.bb2"
0000E1A0 <dynamicarray.include.bb2@431> XINCLUDE "translation.include.bb2"
0000E1B6 <dynamicarray.include.bb2@432> XINCLUDE "translation.include.bb2"
0000E1C0 <dynamicarray.include.bb2@433> XINCLUDE "translation.include.bb2"
0000E1C6 <dynamicarray.include.bb2@435> XINCLUDE "translation.include.bb2"
0000E1CA <dynamicarray.include.bb2@437> XINCLUDE "translation.include.bb2"
0000E1E0 <dynamicarray.include.bb2@531> XINCLUDE "translation.include.bb2"
0000E1E6 <dynamicarray.include.bb2@533> XINCLUDE "translation.include.bb2"
0000E1F0 <dynamicarray.include.bb2@535> XINCLUDE "translation.include.bb2"
0000E226 <dynamicarray.include.bb2@536> XINCLUDE "translation.include.bb2"
0000E230 <dynamicarray.include.bb2@537> XINCLUDE "translation.include.bb2"
0000E234 <dynamicarray.include.bb2@538> XINCLUDE "translation.include.bb2"
0000E262 <dynamicarray.include.bb2@539> XINCLUDE "translation.include.bb2"
0000E262 <prefixtree.include.bb2@35> XINCLUDE "translation.include.bb2"
0000E27C <prefixtree.include.bb2@100> XINCLUDE "translation.include.bb2"
0000E286 <prefixtree.include.bb2@101> XINCLUDE "translation.include.bb2"
0000E2AE <prefixtree.include.bb2@102> XINCLUDE "translation.include.bb2"
0000E2D0 <prefixtree.include.bb2@103> XINCLUDE "translation.include.bb2"
0000E2EC <prefixtree.include.bb2@104> XINCLUDE "translation.include.bb2"
0000E2FC <prefixtree.include.bb2@105> XINCLUDE "translation.include.bb2"
0000E300 <prefixtree.include.bb2@107> XINCLUDE "translation.include.bb2"
0000E31A <prefixtree.include.bb2@123> XINCLUDE "translation.include.bb2"
0000E33A <prefixtree.include.bb2@124> XINCLUDE "translation.include.bb2"
0000E344 <prefixtree.include.bb2@125> XINCLUDE "translation.include.bb2"
0000E35E <prefixtree.include.bb2@126> XINCLUDE "translation.include.bb2"
0000E36C <prefixtree.include.bb2@127> XINCLUDE "translation.include.bb2"
0000E37A <prefixtree.include.bb2@128> XINCLUDE "translation.include.bb2"
0000E388 <prefixtree.include.bb2@129> XINCLUDE "translation.include.bb2"
0000E396 <prefixtree.include.bb2@130> XINCLUDE "translation.include.bb2"
0000E3A2 <prefixtree.include.bb2@131> XINCLUDE "translation.include.bb2"
0000E3B0 <prefixtree.include.bb2@132> XINCLUDE "translation.include.bb2"
0000E3BE <prefixtree.include.bb2@133> XINCLUDE "translation.include.bb2"
0000E3CC <prefixtree.include.bb2@134> XINCLUDE "translation.include.bb2"
0000E3DA <prefixtree.include.bb2@135> XINCLUDE "translation.include.bb2"
0000E3F4 <prefixtree.include.bb2@136> XINCLUDE "translation.include.bb2"
0000E402 <prefixtree.include.bb2@137> XINCLUDE "translation.include.bb2"
0000E412 <prefixtree.include.bb2@138> XINCLUDE "translation.include.bb2"
0000E422 <prefixtree.include.bb2@139> XINCLUDE "translation.include.bb2"
0000E432 <prefixtree.include.bb2@140> XINCLUDE "translation.include.bb2"
0000E440 <prefixtree.include.bb2@141> XINCLUDE "translation.include.bb2"
0000E44A <prefixtree.include.bb2@143> XINCLUDE "translation.include.bb2"
0000E450 <prefixtree.include.bb2@144> XINCLUDE "translation.include.bb2"
0000E46E <prefixtree.include.bb2@162> XINCLUDE "translation.include.bb2"
0000E474 <prefixtree.include.bb2@163> XINCLUDE "translation.include.bb2"
0000E47E <prefixtree.include.bb2@164> XINCLUDE "translation.include.bb2"
0000E49E <prefixtree.include.bb2@165> XINCLUDE "translation.include.bb2"
0000E4CC <prefixtree.include.bb2@166> XINCLUDE "translation.include.bb2"
0000E4EA <prefixtree.include.bb2@167> XINCLUDE "translation.include.bb2"
0000E4F4 <prefixtree.include.bb2@168> XINCLUDE "translation.include.bb2"
0000E506 <prefixtree.include.bb2@169> XINCLUDE "translation.include.bb2"
0000E532 <prefixtree.include.bb2@170> XINCLUDE "translation.include.bb2"
0000E548 <prefixtree.include.bb2@171> XINCLUDE "translation.include.bb2"
0000E554 <prefixtree.include.bb2@173> XINCLUDE "translation.include.bb2"
0000E560 <prefixtree.include.bb2@174> XINCLUDE "translation.include.bb2"
0000E566 <prefixtree.include.bb2@175> XINCLUDE "translation.include.bb2"
0000E56C <prefixtree.include.bb2@176> XINCLUDE "translation.include.bb2"
0000E572 <prefixtree.include.bb2@177> XINCLUDE "translation.include.bb2"
0000E5AA <prefixtree.include.bb2@178> XINCLUDE "translation.include.bb2"
0000E5B0 <prefixtree.include.bb2@180> XINCLUDE "translation.include.bb2"
0000E5B6 <prefixtree.include.bb2@181> XINCLUDE "translation.include.bb2"
0000E5C0 <prefixtree.include.bb2@184> XINCLUDE "translation.include.bb2"
0000E5C6 <prefixtree.include.bb2@185> XINCLUDE "translation.include.bb2"
0000E5F8 <prefixtree.include.bb2@205> XINCLUDE "translation.include.bb2"
0000E612 <prefixtree.include.bb2@206> XINCLUDE "translation.include.bb2"
0000E62A <prefixtree.include.bb2@207> XINCLUDE "translation.include.bb2"
0000E63E <prefixtree.include.bb2@208> XINCLUDE "translation.include.bb2"
0000E68E <prefixtree.include.bb2@209> XINCLUDE "translation.include.bb2"
0000E6AE <prefixtree.include.bb2@211> XINCLUDE "translation.include.bb2"
0000E6C2 <prefixtree.include.bb2@212> XINCLUDE "translation.include.bb2"
0000E6D0 <prefixtree.include.bb2@213> XINCLUDE "translation.include.bb2"
0000E6DC <prefixtree.include.bb2@214> XINCLUDE "translation.include.bb2"
0000E6E4 <prefixtree.include.bb2@215> XINCLUDE "translation.include.bb2"
0000E6EC <prefixtree.include.bb2@216> XINCLUDE "translation.include.bb2"
0000E6F4 <prefixtree.include.bb2@217> XINCLUDE "translation.include.bb2"
0000E6FC <prefixtree.include.bb2@218> XINCLUDE "translation.include.bb2"
0000E702 <prefixtree.include.bb2@219> XINCLUDE "translation.include.bb2"
0000E710 <prefixtree.include.bb2@220> XINCLUDE "translation.include.bb2"
0000E732 <prefixtree.include.bb2@222> XINCLUDE "translation.include.bb2"
0000E75E <prefixtree.include.bb2@223> XINCLUDE "translation.include.bb2"
0000E770 <prefixtree.include.bb2@225> XINCLUDE "translation.include.bb2"
0000E776 <prefixtree.include.bb2@226> XINCLUDE "translation.include.bb2"
0000E79E <prefixtree.include.bb2@228> XINCLUDE "translation.include.bb2"
0000E7C2 <prefixtree.include.bb2@229> XINCLUDE "translation.include.bb2"
0000E7EA <prefixtree.include.bb2@230> XINCLUDE "translation.include.bb2"
0000E81E <prefixtree.include.bb2@231> XINCLUDE "translation.include.bb2"
0000E82E <prefixtree.include.bb2@232> XINCLUDE "translation.include.bb2"
0000E838 <prefixtree.include.bb2@233> XINCLUDE "translation.include.bb2"
0000E846 <prefixtree.include.bb2@234> XINCLUDE "translation.include.bb2"
0000E85A <prefixtree.include.bb2@235> XINCLUDE "translation.include.bb2"
0000E860 <prefixtree.include.bb2@236> XINCLUDE "translation.include.bb2"
0000E880 <prefixtree.include.bb2@237> XINCLUDE "translation.include.bb2"
0000E886 <prefixtree.include.bb2@238> XINCLUDE "translation.include.bb2"
0000E88E <prefixtree.include.bb2@240> XINCLUDE "translation.include.bb2"
0000E8C8 <prefixtree.include.bb2@242> XINCLUDE "translation.include.bb2"
0000E8EE <prefixtree.include.bb2@243> XINCLUDE "translation.include.bb2"
0000E906 <prefixtree.include.bb2@244> XINCLUDE "translation.include.bb2"
0000E93A <prefixtree.include.bb2@245> XINCLUDE "translation.include.bb2"
0000E942 <prefixtree.include.bb2@246> XINCLUDE "translation.include.bb2"
0000E950 <prefixtree.include.bb2@248> XINCLUDE "translation.include.bb2"
0000E956 <prefixtree.include.bb2@250> XINCLUDE "translation.include.bb2"
0000E96E <prefixtree.include.bb2@251> XINCLUDE "translation.include.bb2"
0000E974 <prefixtree.include.bb2@252> XINCLUDE "translation.include.bb2"
0000E97A <prefixtree.include.bb2@253> XINCLUDE "translation.include.bb2"
0000E994 <prefixtree.include.bb2@254> XINCLUDE "translation.include.bb2"
0000E99A <prefixtree.include.bb2@257> XINCLUDE "translation.include.bb2"
0000E9A0 <prefixtree.include.bb2@259> XINCLUDE "translation.include.bb2"
0000E9A6 <prefixtree.include.bb2@261> XINCLUDE "translation.include.bb2"
0000E9B4 <prefixtree.include.bb2@262> XINCLUDE "translation.include.bb2"
0000E9C2 <prefixtree.include.bb2@263> XINCLUDE "translation.include.bb2"
0000E9FC <prefixtree.include.bb2@265> XINCLUDE "translation.include.bb2"
0000EA22 <prefixtree.include.bb2@266> XINCLUDE "translation.include.bb2"
0000EA3A <prefixtree.include.bb2@267> XINCLUDE "translation.include.bb2"
0000EA46 <prefixtree.include.bb2@270> XINCLUDE "translation.include.bb2"
0000EA52 <prefixtree.include.bb2@271> XINCLUDE "translation.include.bb2"
0000EA5E <prefixtree.include.bb2@272> XINCLUDE "translation.include.bb2"
0000EA6A <prefixtree.include.bb2@273> XINCLUDE "translation.include.bb2"
0000EA76 <prefixtree.include.bb2@274> XINCLUDE "translation.include.bb2"
0000EA80 <prefixtree.include.bb2@275> XINCLUDE "translation.include.bb2"
0000EA88 <prefixtree.include.bb2@277> XINCLUDE "translation.include.bb2"
0000EAA2 <prefixtree.include.bb2@278> XINCLUDE "translation.include.bb2"
0000EAE0 <prefixtree.include.bb2@325> XINCLUDE "translation.include.bb2"
0000EAE6 <prefixtree.include.bb2@326> XINCLUDE "translation.include.bb2"
0000EB26 <prefixtree.include.bb2@327> XINCLUDE "translation.include.bb2"
0000EB7C <prefixtree.include.bb2@328> XINCLUDE "translation.include.bb2"
0000EBEE <prefixtree.include.bb2@329> XINCLUDE "translation.include.bb2"
0000EBFA <prefixtree.include.bb2@331> XINCLUDE "translation.include.bb2"
0000EC08 <prefixtree.include.bb2@332> XINCLUDE "translation.include.bb2"
0000EC4E <prefixtree.include.bb2@333> XINCLUDE "translation.include.bb2"
0000EC98 <prefixtree.include.bb2@334> XINCLUDE "translation.include.bb2"
0000ECD0 <prefixtree.include.bb2@335> XINCLUDE "translation.include.bb2"
0000ED24 <prefixtree.include.bb2@336> XINCLUDE "translation.include.bb2"
0000ED2A <prefixtree.include.bb2@337> XINCLUDE "translation.include.bb2"
0000ED30 <prefixtree.include.bb2@338> XINCLUDE "translation.include.bb2"
0000ED3E <prefixtree.include.bb2@340> XINCLUDE "translation.include.bb2"
0000ED46 <prefixtree.include.bb2@341> XINCLUDE "translation.include.bb2"
0000ED80 <prefixtree.include.bb2@343> XINCLUDE "translation.include.bb2"
0000EDA6 <prefixtree.include.bb2@344> XINCLUDE "translation.include.bb2"
0000EDBE <prefixtree.include.bb2@345> XINCLUDE "translation.include.bb2"
0000EDF4 <prefixtree.include.bb2@346> XINCLUDE "translation.include.bb2"
0000EE0A <prefixtree.include.bb2@347> XINCLUDE "translation.include.bb2"
0000EE18 <prefixtree.include.bb2@349> XINCLUDE "translation.include.bb2"
0000EE30 <prefixtree.include.bb2@350> XINCLUDE "translation.include.bb2"
0000EE68 <prefixtree.include.bb2@351> XINCLUDE "translation.include.bb2"
0000EE8E <prefixtree.include.bb2@352> XINCLUDE "translation.include.bb2"
0000EED6 <prefixtree.include.bb2@353> XINCLUDE "translation.include.bb2"
0000EEDC <prefixtree.include.bb2@354> XINCLUDE "translation.include.bb2"
0000EEF6 <prefixtree.include.bb2@356> XINCLUDE "translation.include.bb2"
0000EF02 <prefixtree.include.bb2@357> XINCLUDE "translation.include.bb2"
0000EF08 <prefixtree.include.bb2@358> XINCLUDE "translation.include.bb2"
0000EF34 <prefixtree.include.bb2@359> XINCLUDE "translation.include.bb2"
0000EF48 <prefixtree.include.bb2@364> XINCLUDE "translation.include.bb2"
0000EF56 <prefixtree.include.bb2@366> XINCLUDE "translation.include.bb2"
0000EF5E <prefixtree.include.bb2@367> XINCLUDE "translation.include.bb2"
0000EF98 <prefixtree.include.bb2@369> XINCLUDE "translation.include.bb2"
0000EFBE <prefixtree.include.bb2@370> XINCLUDE "translation.include.bb2"
0000EFD6 <prefixtree.include.bb2@371> XINCLUDE "translation.include.bb2"
0000F010 <prefixtree.include.bb2@372> XINCLUDE "translation.include.bb2"
0000F03A <prefixtree.include.bb2@373> XINCLUDE "translation.include.bb2"
0000F052 <prefixtree.include.bb2@374> XINCLUDE "translation.include.bb2"
0000F082 <prefixtree.include.bb2@375> XINCLUDE "translation.include.bb2"
0000F0AE <prefixtree.include.bb2@376> XINCLUDE "translation.include.bb2"
0000F0CA <prefixtree.include.bb2@377> XINCLUDE "translation.include.bb2"
0000F0D8 <prefixtree.include.bb2@379> XINCLUDE "translation.include.bb2"
0000F0E6 <prefixtree.include.bb2@380> XINCLUDE "translation.include.bb2"
0000F124 <prefixtree.include.bb2@381> XINCLUDE "translation.include.bb2"
0000F160 <prefixtree.include.bb2@382> XINCLUDE "translation.include.bb2"
0000F1CC <prefixtree.include.bb2@383> XINCLUDE "translation.include.bb2"
0000F1FA <prefixtree.include.bb2@384> XINCLUDE "translation.include.bb2"
0000F228 <prefixtree.include.bb2@385> XINCLUDE "translation.include.bb2"
0000F270 <prefixtree.include.bb2@386> XINCLUDE "translation.include.bb2"
0000F28A <prefixtree.include.bb2@389> XINCLUDE "translation.include.bb2"
0000F2D2 <prefixtree.include.bb2@390> XINCLUDE "translation.include.bb2"
0000F2F0 <prefixtree.include.bb2@391> XINCLUDE "translation.include.bb2"
0000F30E <prefixtree.include.bb2@392> XINCLUDE "translation.include.bb2"
0000F328 <prefixtree.include.bb2@395> XINCLUDE "translation.include.bb2"
0000F334 <prefixtree.include.bb2@396> XINCLUDE "translation.include.bb2"
0000F33A <prefixtree.include.bb2@397> XINCLUDE "translation.include.bb2"
0000F366 <prefixtree.include.bb2@398> XINCLUDE "translation.include.bb2"
0000F37E <prefixtree.include.bb2@400> XINCLUDE "translation.include.bb2"
0000F384 <prefixtree.include.bb2@401> XINCLUDE "translation.include.bb2"
0000F398 <prefixtree.include.bb2@404> XINCLUDE "translation.include.bb2"
0000F3A6 <prefixtree.include.bb2@406> XINCLUDE "translation.include.bb2"
0000F3B4 <prefixtree.include.bb2@407> XINCLUDE "translation.include.bb2"
0000F3C2 <prefixtree.include.bb2@408> XINCLUDE "translation.include.bb2"
0000F3CA <prefixtree.include.bb2@409> XINCLUDE "translation.include.bb2"
0000F3EE <prefixtree.include.bb2@410> XINCLUDE "translation.include.bb2"
0000F416 <prefixtree.include.bb2@411> XINCLUDE "translation.include.bb2"
0000F43E <prefixtree.include.bb2@412> XINCLUDE "translation.include.bb2"
0000F4AA <prefixtree.include.bb2@413> XINCLUDE "translation.include.bb2"
0000F4BA <prefixtree.include.bb2@414> XINCLUDE "translation.include.bb2"
0000F4E6 <prefixtree.include.bb2@415> XINCLUDE "translation.include.bb2"
0000F53C <prefixtree.include.bb2@417> XINCLUDE "translation.include.bb2"
0000F54A <prefixtree.include.bb2@418> XINCLUDE "translation.include.bb2"
0000F558 <prefixtree.include.bb2@419> XINCLUDE "translation.include.bb2"
0000F55E <prefixtree.include.bb2@420> XINCLUDE "translation.include.bb2"
0000F5B2 <prefixtree.include.bb2@422> XINCLUDE "translation.include.bb2"
0000F602 <prefixtree.include.bb2@423> XINCLUDE "translation.include.bb2"
0000F652 <prefixtree.include.bb2@426> XINCLUDE "translation.include.bb2"
0000F6A8 <prefixtree.include.bb2@427> XINCLUDE "translation.include.bb2"
0000F714 <prefixtree.include.bb2@428> XINCLUDE "translation.include.bb2"
0000F71C <prefixtree.include.bb2@432> XINCLUDE "translation.include.bb2"
0000F756 <prefixtree.include.bb2@434> XINCLUDE "translation.include.bb2"
0000F77C <prefixtree.include.bb2@435> XINCLUDE "translation.include.bb2"
0000F794 <prefixtree.include.bb2@436> XINCLUDE "translation.include.bb2"
0000F7CE <prefixtree.include.bb2@437> XINCLUDE "translation.include.bb2"
0000F7F8 <prefixtree.include.bb2@438> XINCLUDE "translation.include.bb2"
0000F810 <prefixtree.include.bb2@439> XINCLUDE "translation.include.bb2"
0000F834 <prefixtree.include.bb2@441> XINCLUDE "translation.include.bb2"
0000F888 <prefixtree.include.bb2@442> XINCLUDE "translation.include.bb2"
0000F890 <prefixtree.include.bb2@443> XINCLUDE "translation.include.bb2"
0000F896 <prefixtree.include.bb2@444> XINCLUDE "translation.include.bb2"
0000F8F8 <prefixtree.include.bb2@445> XINCLUDE "translation.include.bb2"
0000F924 <prefixtree.include.bb2@446> XINCLUDE "translation.include.bb2"
0000F940 <prefixtree.include.bb2@449> XINCLUDE "translation.include.bb2"
0000F94E <prefixtree.include.bb2@451> XINCLUDE "translation.include.bb2"
0000F95C <prefixtree.include.bb2@452> XINCLUDE "translation.include.bb2"
0000F96A <prefixtree.include.bb2@454> XINCLUDE "translation.include.bb2"
0000F978 <prefixtree.include.bb2@455> XINCLUDE "translation.include.bb2"
0000F9BC <prefixtree.include.bb2@456> XINCLUDE "translation.include.bb2"
0000FA28 <prefixtree.include.bb2@457> XINCLUDE "translation.include.bb2"
0000FA56 <prefixtree.include.bb2@458> XINCLUDE "translation.include.bb2"
0000FA6A <prefixtree.include.bb2@459> XINCLUDE "translation.include.bb2"
0000FA9C <prefixtree.include.bb2@460> XINCLUDE "translation.include.bb2"
0000FAE6 <prefixtree.include.bb2@461> XINCLUDE "translation.include.bb2"
0000FAF6 <prefixtree.include.bb2@462> XINCLUDE "translation.include.bb2"
0000FB2A <prefixtree.include.bb2@463> XINCLUDE "translation.include.bb2"
0000FB4C <prefixtree.include.bb2@464> XINCLUDE "translation.include.bb2"
0000FB5C <prefixtree.include.bb2@465> XINCLUDE "translation.include.bb2"
0000FB64 <prefixtree.include.bb2@468> XINCLUDE "translation.include.bb2"
0000FBA8 <prefixtree.include.bb2@469> XINCLUDE "translation.include.bb2"
0000FC14 <prefixtree.include.bb2@470> XINCLUDE "translation.include.bb2"
0000FC42 <prefixtree.include.bb2@471> XINCLUDE "translation.include.bb2"
0000FC66 <prefixtree.include.bb2@473> XINCLUDE "translation.include.bb2"
0000FCAA <prefixtree.include.bb2@474> XINCLUDE "translation.include.bb2"
0000FD16 <prefixtree.include.bb2@475> XINCLUDE "translation.include.bb2"
0000FD44 <prefixtree.include.bb2@476> XINCLUDE "translation.include.bb2"
0000FD72 <prefixtree.include.bb2@477> XINCLUDE "translation.include.bb2"
0000FD7A <prefixtree.include.bb2@478> XINCLUDE "translation.include.bb2"
0000FDA8 <prefixtree.include.bb2@479> XINCLUDE "translation.include.bb2"
0000FE1A <prefixtree.include.bb2@480> XINCLUDE "translation.include.bb2"
0000FE20 <prefixtree.include.bb2@481> XINCLUDE "translation.include.bb2"
0000FE4E <prefixtree.include.bb2@482> XINCLUDE "translation.include.bb2"
0000FEC0 <prefixtree.include.bb2@483> XINCLUDE "translation.include.bb2"
0000FEDE <prefixtree.include.bb2@486> XINCLUDE "translation.include.bb2"
0000FF02 <prefixtree.include.bb2@487> XINCLUDE "translation.include.bb2"
0000FF1A <prefixtree.include.bb2@488> XINCLUDE "translation.include.bb2"
0000FF20 <prefixtree.include.bb2@489> XINCLUDE "translation.include.bb2"
0000FF26 <prefixtree.include.bb2@492> XINCLUDE "translation.include.bb2"
0000FF28 <prefixtree.include.bb2@494> XINCLUDE "translation.include.bb2"
0000FF32 <prefixtree.include.bb2@497> XINCLUDE "translation.include.bb2"
0000FF5E <prefixtree.include.bb2@498> XINCLUDE "translation.include.bb2"
0000FF80 <prefixtree.include.bb2@516> XINCLUDE "translation.include.bb2"
0000FF88 <prefixtree.include.bb2@517> XINCLUDE "translation.include.bb2"
0000FF8E <prefixtree.include.bb2@518> XINCLUDE "translation.include.bb2"
0000FF9C <prefixtree.include.bb2@519> XINCLUDE "translation.include.bb2"
0000FFD6 <prefixtree.include.bb2@521> XINCLUDE "translation.include.bb2"
0000FFFC <prefixtree.include.bb2@522> XINCLUDE "translation.include.bb2"
00010014 <prefixtree.include.bb2@523> XINCLUDE "translation.include.bb2"
0001004E <prefixtree.include.bb2@524> XINCLUDE "translation.include.bb2"
00010078 <prefixtree.include.bb2@525> XINCLUDE "translation.include.bb2"
00010090 <prefixtree.include.bb2@527> XINCLUDE "translation.include.bb2"
000100A8 <prefixtree.include.bb2@528> XINCLUDE "translation.include.bb2"
000100E0 <prefixtree.include.bb2@529> XINCLUDE "translation.include.bb2"
000100E8 <prefixtree.include.bb2@531> XINCLUDE "translation.include.bb2"
00010122 <prefixtree.include.bb2@533> XINCLUDE "translation.include.bb2"
00010134 <prefixtree.include.bb2@535> XINCLUDE "translation.include.bb2"
0001015A <prefixtree.include.bb2@536> XINCLUDE "translation.include.bb2"
00010170 <prefixtree.include.bb2@537> XINCLUDE "translation.include.bb2"
00010196 <prefixtree.include.bb2@538> XINCLUDE "translation.include.bb2"
000101AA <prefixtree.include.bb2@539> XINCLUDE "translation.include.bb2"
000101C2 <prefixtree.include.bb2@541> XINCLUDE "translation.include.bb2"
000101D4 <prefixtree.include.bb2@542> XINCLUDE "translation.include.bb2"
000101DE <prefixtree.include.bb2@543> XINCLUDE "translation.include.bb2"
000101F2 <prefixtree.include.bb2@544> XINCLUDE "translation.include.bb2"
0001020C <prefixtree.include.bb2@561> XINCLUDE "translation.include.bb2"
0001022A <prefixtree.include.bb2@562> XINCLUDE "translation.include.bb2"
0001023C <prefixtree.include.bb2@563> XINCLUDE "translation.include.bb2"
0001025A <prefixtree.include.bb2@564> XINCLUDE "translation.include.bb2"
0001027C <prefixtree.include.bb2@565> XINCLUDE "translation.include.bb2"
00010298 <prefixtree.include.bb2@566> XINCLUDE "translation.include.bb2"
000102B8 <prefixtree.include.bb2@567> XINCLUDE "translation.include.bb2"
000102C2 <prefixtree.include.bb2@568> XINCLUDE "translation.include.bb2"
000102C8 <prefixtree.include.bb2@569> XINCLUDE "translation.include.bb2"
000102D2 <prefixtree.include.bb2@570> XINCLUDE "translation.include.bb2"
000102DE <prefixtree.include.bb2@572> XINCLUDE "translation.include.bb2"
000102E4 <prefixtree.include.bb2@573> XINCLUDE "translation.include.bb2"
00010312 <prefixtree.include.bb2@592> XINCLUDE "translation.include.bb2"
0001033A <prefixtree.include.bb2@593> XINCLUDE "translation.include.bb2"
0001037A <prefixtree.include.bb2@594> XINCLUDE "translation.include.bb2"
00010392 <prefixtree.include.bb2@595> XINCLUDE "translation.include.bb2"
000103D8 <prefixtree.include.bb2@596> XINCLUDE "translation.include.bb2"
00010402 <prefixtree.include.bb2@599> XINCLUDE "translation.include.bb2"
00010430 <prefixtree.include.bb2@600> XINCLUDE "translation.include.bb2"
0001044A <prefixtree.include.bb2@816> XINCLUDE "translation.include.bb2"
00010452 <prefixtree.include.bb2@817> XINCLUDE "translation.include.bb2"
0001046A <prefixtree.include.bb2@818> XINCLUDE "translation.include.bb2"
00010474 <prefixtree.include.bb2@819> XINCLUDE "translation.include.bb2"
00010486 <prefixtree.include.bb2@820> XINCLUDE "translation.include.bb2"
000104BE <prefixtree.include.bb2@821> XINCLUDE "translation.include.bb2"
000104CC <prefixtree.include.bb2@822> XINCLUDE "translation.include.bb2"
000104D8 <prefixtree.include.bb2@823> XINCLUDE "translation.include.bb2"
000104F4 <prefixtree.include.bb2@824> XINCLUDE "translation.include.bb2"
00010516 <prefixtree.include.bb2@825> XINCLUDE "translation.include.bb2"
00010538 <prefixtree.include.bb2@826> XINCLUDE "translation.include.bb2"
0001055A <prefixtree.include.bb2@827> XINCLUDE "translation.include.bb2"
0001057C <prefixtree.include.bb2@828> XINCLUDE "translation.include.bb2"
00010598 <prefixtree.include.bb2@829> XINCLUDE "translation.include.bb2"
000105B6 <prefixtree.include.bb2@830> XINCLUDE "translation.include.bb2"
000105CA <prefixtree.include.bb2@831> XINCLUDE "translation.include.bb2"
000105D0 <prefixtree.include.bb2@833> XINCLUDE "translation.include.bb2"
000105D2 <prefixtree.include.bb2@835> XINCLUDE "translation.include.bb2"
000105D8 <prefixtree.include.bb2@836> XINCLUDE "translation.include.bb2"
000105E2 <prefixtree.include.bb2@838> XINCLUDE "translation.include.bb2"
000105E8 <prefixtree.include.bb2@839> XINCLUDE "translation.include.bb2"
00010606 <prefixtree.include.bb2@857> XINCLUDE "translation.include.bb2"
0001060C <prefixtree.include.bb2@858> XINCLUDE "translation.include.bb2"
00010630 <prefixtree.include.bb2@859> XINCLUDE "translation.include.bb2"
0001064E <prefixtree.include.bb2@860> XINCLUDE "translation.include.bb2"
0001067C <prefixtree.include.bb2@861> XINCLUDE "translation.include.bb2"
000106AA <prefixtree.include.bb2@862> XINCLUDE "translation.include.bb2"
000106D8 <prefixtree.include.bb2@863> XINCLUDE "translation.include.bb2"
00010706 <prefixtree.include.bb2@864> XINCLUDE "translation.include.bb2"
0001073A <prefixtree.include.bb2@865> XINCLUDE "translation.include.bb2"
0001074A <prefixtree.include.bb2@866> XINCLUDE "translation.include.bb2"
00010754 <prefixtree.include.bb2@868> XINCLUDE "translation.include.bb2"
0001075A <prefixtree.include.bb2@869> XINCLUDE "translation.include.bb2"
0001075A <phrasebook.include.bb2@34> XINCLUDE "translation.include.bb2"
000107A4 <phrasebook.include.bb2@58> XINCLUDE "translation.include.bb2"
000107C4 <phrasebook.include.bb2@59> XINCLUDE "translation.include.bb2"
000107CE <phrasebook.include.bb2@60> XINCLUDE "translation.include.bb2"
000107E2 <phrasebook.include.bb2@61> XINCLUDE "translation.include.bb2"
00010828 <phrasebook.include.bb2@62> XINCLUDE "translation.include.bb2"
0001086E <phrasebook.include.bb2@63> XINCLUDE "translation.include.bb2"
000108B4 <phrasebook.include.bb2@64> XINCLUDE "translation.include.bb2"
000108BE <phrasebook.include.bb2@66> XINCLUDE "translation.include.bb2"
000108DA <phrasebook.include.bb2@67> XINCLUDE "translation.include.bb2"
00010904 <phrasebook.include.bb2@70> XINCLUDE "translation.include.bb2"
00010982 <phrasebook.include.bb2@71> XINCLUDE "translation.include.bb2"
00010A00 <phrasebook.include.bb2@72> XINCLUDE "translation.include.bb2"
00010A7E <phrasebook.include.bb2@73> XINCLUDE "translation.include.bb2"
00010AFC <phrasebook.include.bb2@74> XINCLUDE "translation.include.bb2"
00010B7A <phrasebook.include.bb2@75> XINCLUDE "translation.include.bb2"
00010BF8 <phrasebook.include.bb2@76> XINCLUDE "translation.include.bb2"
00010C76 <phrasebook.include.bb2@77> XINCLUDE "translation.include.bb2"
00010CF4 <phrasebook.include.bb2@78> XINCLUDE "translation.include.bb2"
00010D72 <phrasebook.include.bb2@79> XINCLUDE "translation.include.bb2"
00010DF0 <phrasebook.include.bb2@80> XINCLUDE "translation.include.bb2"
00010E74 <phrasebook.include.bb2@81> XINCLUDE "translation.include.bb2"
00010EA4 <phrasebook.include.bb2@82> XINCLUDE "translation.include.bb2"
00010F00 <phrasebook.include.bb2@84> XINCLUDE "translation.include.bb2"
00010F2C <phrasebook.include.bb2@85> XINCLUDE "translation.include.bb2"
00010FF6 <phrasebook.include.bb2@86> XINCLUDE "translation.include.bb2"
00011004 <phrasebook.include.bb2@88> XINCLUDE "translation.include.bb2"
00011042 <phrasebook.include.bb2@89> XINCLUDE "translation.include.bb2"
000110C6 <phrasebook.include.bb2@90> XINCLUDE "translation.include.bb2"
000110F0 <phrasebook.include.bb2@91> XINCLUDE "translation.include.bb2"
0001110E <phrasebook.include.bb2@92> XINCLUDE "translation.include.bb2"
00011128 <phrasebook.include.bb2@106> XINCLUDE "translation.include.bb2"
00011132 <phrasebook.include.bb2@107> XINCLUDE "translation.include.bb2"
0001113E <phrasebook.include.bb2@108> XINCLUDE "translation.include.bb2"
0001114E <phrasebook.include.bb2@109> XINCLUDE "translation.include.bb2"
0001115E <phrasebook.include.bb2@110> XINCLUDE "translation.include.bb2"
0001116E <phrasebook.include.bb2@111> XINCLUDE "translation.include.bb2"
0001117E <phrasebook.include.bb2@112> XINCLUDE "translation.include.bb2"
00011182 <phrasebook.include.bb2@114> XINCLUDE "translation.include.bb2"
000111C0 <phrasebook.include.bb2@131> XINCLUDE "translation.include.bb2"
00011218 <phrasebook.include.bb2@132> XINCLUDE "translation.include.bb2"
00011274 <phrasebook.include.bb2@133> XINCLUDE "translation.include.bb2"
000112FE <phrasebook.include.bb2@134> XINCLUDE "translation.include.bb2"
0001137C <phrasebook.include.bb2@135> XINCLUDE "translation.include.bb2"
00011396 <phrasebook.include.bb2@137> XINCLUDE "translation.include.bb2"
000113C4 <phrasebook.include.bb2@155> XINCLUDE "translation.include.bb2"
00011400 <phrasebook.include.bb2@156> XINCLUDE "translation.include.bb2"
000114CE <phrasebook.include.bb2@158> XINCLUDE "translation.include.bb2"
0001159C <phrasebook.include.bb2@159> XINCLUDE "translation.include.bb2"
000115E8 <phrasebook.include.bb2@161> XINCLUDE "translation.include.bb2"
00011666 <phrasebook.include.bb2@162> XINCLUDE "translation.include.bb2"
000116E4 <phrasebook.include.bb2@163> XINCLUDE "translation.include.bb2"
00011742 <phrasebook.include.bb2@165> XINCLUDE "translation.include.bb2"
000117D8 <phrasebook.include.bb2@166> XINCLUDE "translation.include.bb2"
00011810 <phrasebook.include.bb2@168> XINCLUDE "translation.include.bb2"
0001186E <phrasebook.include.bb2@169> XINCLUDE "translation.include.bb2"
000118F6 <phrasebook.include.bb2@170> XINCLUDE "translation.include.bb2"
000118FE <phrasebook.include.bb2@172> XINCLUDE "translation.include.bb2"
00011968 <phrasebook.include.bb2@174> XINCLUDE "translation.include.bb2"
000119D4 <phrasebook.include.bb2@175> XINCLUDE "translation.include.bb2"
00011A12 <phrasebook.include.bb2@176> XINCLUDE "translation.include.bb2"
00011A9A <phrasebook.include.bb2@177> XINCLUDE "translation.include.bb2"
00011AC6 <phrasebook.include.bb2@187> XINCLUDE "translation.include.bb2"
00011B22 <phrasebook.include.bb2@188> XINCLUDE "translation.include.bb2"
00011BEA <phrasebook.include.bb2@189> XINCLUDE "translation.include.bb2"
00011C4E <phrasebook.include.bb2@190> XINCLUDE "translation.include.bb2"
00011C54 <phrasebook.include.bb2@191> XINCLUDE "translation.include.bb2"
00011C88 <phrasebook.include.bb2@192> XINCLUDE "translation.include.bb2"
00011D56 <phrasebook.include.bb2@196> XINCLUDE "translation.include.bb2"
00011E24 <phrasebook.include.bb2@197> XINCLUDE "translation.include.bb2"
00011E4E <phrasebook.include.bb2@199> XINCLUDE "translation.include.bb2"
00011E6C <phrasebook.include.bb2@200> XINCLUDE "translation.include.bb2"
00011E9A <phrasebook.include.bb2@204> XINCLUDE "translation.include.bb2"
00011ED6 <phrasebook.include.bb2@205> XINCLUDE "translation.include.bb2"
00011F46 <phrasebook.include.bb2@206> XINCLUDE "translation.include.bb2"
00011F4E <phrasebook.include.bb2@207> XINCLUDE "translation.include.bb2"
00011FA0 <phrasebook.include.bb2@208> XINCLUDE "translation.include.bb2"
00011FC8 <phrasebook.include.bb2@209> XINCLUDE "translation.include.bb2"
00011FE0 <phrasebook.include.bb2@210> XINCLUDE "translation.include.bb2"
00012094 <phrasebook.include.bb2@211> XINCLUDE "translation.include.bb2"
000120A2 <phrasebook.include.bb2@212> XINCLUDE "translation.include.bb2"
000120F8 <phrasebook.include.bb2@213> XINCLUDE "translation.include.bb2"
00012156 <phrasebook.include.bb2@214> XINCLUDE "translation.include.bb2"
0001215C <phrasebook.include.bb2@215> XINCLUDE "translation.include.bb2"
000121E0 <phrasebook.include.bb2@216> XINCLUDE "translation.include.bb2"
00012264 <phrasebook.include.bb2@217> XINCLUDE "translation.include.bb2"
000122E8 <phrasebook.include.bb2@218> XINCLUDE "translation.include.bb2"
00012366 <phrasebook.include.bb2@219> XINCLUDE "translation.include.bb2"
000123E4 <phrasebook.include.bb2@220> XINCLUDE "translation.include.bb2"
00012462 <phrasebook.include.bb2@221> XINCLUDE "translation.include.bb2"
000124E0 <phrasebook.include.bb2@222> XINCLUDE "translation.include.bb2"
0001255E <phrasebook.include.bb2@223> XINCLUDE "translation.include.bb2"
000125DC <phrasebook.include.bb2@224> XINCLUDE "translation.include.bb2"
0001265A <phrasebook.include.bb2@225> XINCLUDE "translation.include.bb2"
00012684 <phrasebook.include.bb2@226> XINCLUDE "translation.include.bb2"
000126A2 <phrasebook.include.bb2@227> XINCLUDE "translation.include.bb2"
000126D0 <phrasebook.include.bb2@245> XINCLUDE "translation.include.bb2"
00012714 <phrasebook.include.bb2@246> XINCLUDE "translation.include.bb2"
0001271A <phrasebook.include.bb2@247> XINCLUDE "translation.include.bb2"
00012734 <phrasebook.include.bb2@248> XINCLUDE "translation.include.bb2"
00012750 <phrasebook.include.bb2@249> XINCLUDE "translation.include.bb2"
00012784 <phrasebook.include.bb2@250> XINCLUDE "translation.include.bb2"
000127A8 <phrasebook.include.bb2@251> XINCLUDE "translation.include.bb2"
000127D0 <phrasebook.include.bb2@252> XINCLUDE "translation.include.bb2"
0001283C <phrasebook.include.bb2@253> XINCLUDE "translation.include.bb2"
0001289A <phrasebook.include.bb2@256> XINCLUDE "translation.include.bb2"
000128F8 <phrasebook.include.bb2@257> XINCLUDE "translation.include.bb2"
00012944 <phrasebook.include.bb2@258> XINCLUDE "translation.include.bb2"
0001299E <phrasebook.include.bb2@259> XINCLUDE "translation.include.bb2"
000129A4 <phrasebook.include.bb2@260> XINCLUDE "translation.include.bb2"
000129AA <phrasebook.include.bb2@262> XINCLUDE "translation.include.bb2"
000129B4 <phrasebook.include.bb2@263> XINCLUDE "translation.include.bb2"
000129BE <phrasebook.include.bb2@264> XINCLUDE "translation.include.bb2"
000129D8 <phrasebook.include.bb2@265> XINCLUDE "translation.include.bb2"
00012A06 <phrasebook.include.bb2@282> XINCLUDE "translation.include.bb2"
00012A0C <phrasebook.include.bb2@283> XINCLUDE "translation.include.bb2"
00012A50 <phrasebook.include.bb2@284> XINCLUDE "translation.include.bb2"
00012A6A <phrasebook.include.bb2@285> XINCLUDE "translation.include.bb2"
00012A7A <phrasebook.include.bb2@286> XINCLUDE "translation.include.bb2"
00012A84 <phrasebook.include.bb2@287> XINCLUDE "translation.include.bb2"
00012A90 <phrasebook.include.bb2@288> XINCLUDE "translation.include.bb2"
00012A9A <phrasebook.include.bb2@289> XINCLUDE "translation.include.bb2"
00012ABE <phrasebook.include.bb2@292> XINCLUDE "translation.include.bb2"
00012B06 <phrasebook.include.bb2@293> XINCLUDE "translation.include.bb2"
00012B4E <phrasebook.include.bb2@294> XINCLUDE "translation.include.bb2"
00012B96 <phrasebook.include.bb2@295> XINCLUDE "translation.include.bb2"
00012BAC <phrasebook.include.bb2@296> XINCLUDE "translation.include.bb2"
00012BC0 <phrasebook.include.bb2@297> XINCLUDE "translation.include.bb2"
00012BCA <phrasebook.include.bb2@299> XINCLUDE "translation.include.bb2"
00012BD4 <phrasebook.include.bb2@300> XINCLUDE "translation.include.bb2"
00012BEE <phrasebook.include.bb2@301> XINCLUDE "translation.include.bb2"
00012C18 <phrasebook.include.bb2@317> XINCLUDE "translation.include.bb2"
00012C5C <phrasebook.include.bb2@318> XINCLUDE "translation.include.bb2"
00012C76 <phrasebook.include.bb2@319> XINCLUDE "translation.include.bb2"
00012CD4 <phrasebook.include.bb2@320> XINCLUDE "translation.include.bb2"
00012CEE <phrasebook.include.bb2@321> XINCLUDE "translation.include.bb2"
00012D06 <phrasebook.include.bb2@323> XINCLUDE "translation.include.bb2"
00012D10 <phrasebook.include.bb2@324> XINCLUDE "translation.include.bb2"
00012D2C <phrasebook.include.bb2@325> XINCLUDE "translation.include.bb2"
00012D3A <phrasebook.include.bb2@326> XINCLUDE "translation.include.bb2"
00012D46 <phrasebook.include.bb2@327> XINCLUDE "translation.include.bb2"
00012D92 <phrasebook.include.bb2@328> XINCLUDE "translation.include.bb2"
00012DE4 <phrasebook.include.bb2@329> XINCLUDE "translation.include.bb2"
00012E36 <phrasebook.include.bb2@330> XINCLUDE "translation.include.bb2"
00012E4A <phrasebook.include.bb2@331> XINCLUDE "translation.include.bb2"
00012E5A <phrasebook.include.bb2@332> XINCLUDE "translation.include.bb2"
00012E60 <phrasebook.include.bb2@333> XINCLUDE "translation.include.bb2"
00012E62 <phrasebook.include.bb2@335> XINCLUDE "translation.include.bb2"
00012E68 <phrasebook.include.bb2@336> XINCLUDE "translation.include.bb2"
00012E72 <phrasebook.include.bb2@338> XINCLUDE "translation.include.bb2"
00012E7C <phrasebook.include.bb2@339> XINCLUDE "translation.include.bb2"
00012E96 <phrasebook.include.bb2@340> XINCLUDE "translation.include.bb2"
00012EC0 <phrasebook.include.bb2@379> XINCLUDE "translation.include.bb2"
00012ED6 <phrasebook.include.bb2@380> XINCLUDE "translation.include.bb2"
00012EE0 <phrasebook.include.bb2@381> XINCLUDE "translation.include.bb2"
00012F58 <phrasebook.include.bb2@382> XINCLUDE "translation.include.bb2"
00012F94 <phrasebook.include.bb2@383> XINCLUDE "translation.include.bb2"
00012FA4 <phrasebook.include.bb2@384> XINCLUDE "translation.include.bb2"
00012FC4 <phrasebook.include.bb2@385> XINCLUDE "translation.include.bb2"
00012FE4 <phrasebook.include.bb2@386> XINCLUDE "translation.include.bb2"
00013004 <phrasebook.include.bb2@387> XINCLUDE "translation.include.bb2"
0001303A <phrasebook.include.bb2@388> XINCLUDE "translation.include.bb2"
00013062 <phrasebook.include.bb2@389> XINCLUDE "translation.include.bb2"
0001309A <phrasebook.include.bb2@390> XINCLUDE "translation.include.bb2"
000130FE <phrasebook.include.bb2@391> XINCLUDE "translation.include.bb2"
0001311E <phrasebook.include.bb2@392> XINCLUDE "translation.include.bb2"
0001319A <phrasebook.include.bb2@393> XINCLUDE "translation.include.bb2"
000131D2 <phrasebook.include.bb2@396> XINCLUDE "translation.include.bb2"
00013248 <phrasebook.include.bb2@397> XINCLUDE "translation.include.bb2"
00013268 <phrasebook.include.bb2@398> XINCLUDE "translation.include.bb2"
000132E4 <phrasebook.include.bb2@399> XINCLUDE "translation.include.bb2"
0001331C <phrasebook.include.bb2@402> XINCLUDE "translation.include.bb2"
00013392 <phrasebook.include.bb2@403> XINCLUDE "translation.include.bb2"
000133B2 <phrasebook.include.bb2@404> XINCLUDE "translation.include.bb2"
0001342E <phrasebook.include.bb2@405> XINCLUDE "translation.include.bb2"
0001345A <phrasebook.include.bb2@408> XINCLUDE "translation.include.bb2"
00013462 <phrasebook.include.bb2@409> XINCLUDE "translation.include.bb2"
000134A8 <phrasebook.include.bb2@410> XINCLUDE "translation.include.bb2"
000134C8 <phrasebook.include.bb2@411> XINCLUDE "translation.include.bb2"
000134D2 <phrasebook.include.bb2@412> XINCLUDE "translation.include.bb2"
000134EA <phrasebook.include.bb2@413> XINCLUDE "translation.include.bb2"
000134FA <phrasebook.include.bb2@414> XINCLUDE "translation.include.bb2"
00013532 <phrasebook.include.bb2@415> XINCLUDE "translation.include.bb2"
00013564 <phrasebook.include.bb2@416> XINCLUDE "translation.include.bb2"
00013576 <phrasebook.include.bb2@419> XINCLUDE "translation.include.bb2"
000135F8 <phrasebook.include.bb2@420> XINCLUDE "translation.include.bb2"
00013602 <phrasebook.include.bb2@421> XINCLUDE "translation.include.bb2"
00013634 <phrasebook.include.bb2@422> XINCLUDE "translation.include.bb2"
00013666 <phrasebook.include.bb2@423> XINCLUDE "translation.include.bb2"
00013692 <phrasebook.include.bb2@428> XINCLUDE "translation.include.bb2"
000136BE <phrasebook.include.bb2@429> XINCLUDE "translation.include.bb2"
000136E0 <phrasebook.include.bb2@430> XINCLUDE "translation.include.bb2"
000136EA <phrasebook.include.bb2@432> XINCLUDE "translation.include.bb2"
00013704 <phrasebook.include.bb2@433> XINCLUDE "translation.include.bb2"
00013704 <translation.include.bb2@31> XINCLUDE "translation.include.bb2"
0001371A <translation.include.bb2@43> XINCLUDE "translation.include.bb2"
00013736 <translation.include.bb2@44> XINCLUDE "translation.include.bb2"
00013738 <translation.include.bb2@45> XINCLUDE "translation.include.bb2"
00013766 <translation.include.bb2@46> XINCLUDE "translation.include.bb2"
00013766 <AmiBlitz3.ab3@93> XINCLUDE "translation.include.bb2"
00013766 <ted.include.ab3@1> XINCLUDE "/Shared/ted.include.ab3"
00013780 <ted.include.ab3@161> XINCLUDE "/Shared/ted.include.ab3"
0001378A <ted.include.ab3@162> XINCLUDE "/Shared/ted.include.ab3"
000137AC <ted.include.ab3@163> XINCLUDE "/Shared/ted.include.ab3"
000137C4 <ted.include.ab3@164> XINCLUDE "/Shared/ted.include.ab3"
000137DE <ted.include.ab3@166> XINCLUDE "/Shared/ted.include.ab3"
00013810 <ted.include.ab3@167> XINCLUDE "/Shared/ted.include.ab3"
0001381A <ted.include.ab3@168> XINCLUDE "/Shared/ted.include.ab3"
00013820 <ted.include.ab3@170> XINCLUDE "/Shared/ted.include.ab3"
00013832 <ted.include.ab3@171> XINCLUDE "/Shared/ted.include.ab3"
000138A6 <ted.include.ab3@172> XINCLUDE "/Shared/ted.include.ab3"
000138AC <ted.include.ab3@173> XINCLUDE "/Shared/ted.include.ab3"
000138E6 <ted.include.ab3@174> XINCLUDE "/Shared/ted.include.ab3"
000138F0 <ted.include.ab3@177> XINCLUDE "/Shared/ted.include.ab3"
000138F6 <ted.include.ab3@178> XINCLUDE "/Shared/ted.include.ab3"
0001390C <ted.include.ab3@180> XINCLUDE "/Shared/ted.include.ab3"
00013916 <ted.include.ab3@181> XINCLUDE "/Shared/ted.include.ab3"
0001392E <ted.include.ab3@183> XINCLUDE "/Shared/ted.include.ab3"
00013930 <ted.include.ab3@185> XINCLUDE "/Shared/ted.include.ab3"
0001395E <ted.include.ab3@186> XINCLUDE "/Shared/ted.include.ab3"
00013978 <ted.include.ab3@190> XINCLUDE "/Shared/ted.include.ab3"
0001398E <ted.include.ab3@191> XINCLUDE "/Shared/ted.include.ab3"
000139C2 <ted.include.ab3@192> XINCLUDE "/Shared/ted.include.ab3"
000139C6 <ted.include.ab3@194> XINCLUDE "/Shared/ted.include.ab3"
000139E0 <ted.include.ab3@196> XINCLUDE "/Shared/ted.include.ab3"
000139F6 <ted.include.ab3@197> XINCLUDE "/Shared/ted.include.ab3"
00013A2A <ted.include.ab3@198> XINCLUDE "/Shared/ted.include.ab3"
00013A2E <ted.include.ab3@200> XINCLUDE "/Shared/ted.include.ab3"
00013A48 <ted.include.ab3@216> XINCLUDE "/Shared/ted.include.ab3"
00013A5E <ted.include.ab3@217> XINCLUDE "/Shared/ted.include.ab3"
00013A92 <ted.include.ab3@218> XINCLUDE "/Shared/ted.include.ab3"
00013A96 <ted.include.ab3@220> XINCLUDE "/Shared/ted.include.ab3"
00013AB0 <ted.include.ab3@236> XINCLUDE "/Shared/ted.include.ab3"
00013AC6 <ted.include.ab3@237> XINCLUDE "/Shared/ted.include.ab3"
00013AFA <ted.include.ab3@238> XINCLUDE "/Shared/ted.include.ab3"
00013AFE <ted.include.ab3@240> XINCLUDE "/Shared/ted.include.ab3"
00013B18 <ted.include.ab3@242> XINCLUDE "/Shared/ted.include.ab3"
00013B2E <ted.include.ab3@243> XINCLUDE "/Shared/ted.include.ab3"
00013B62 <ted.include.ab3@244> XINCLUDE "/Shared/ted.include.ab3"
00013B66 <ted.include.ab3@246> XINCLUDE "/Shared/ted.include.ab3"
00013B66 <AmiBlitz3.ab3@94> XINCLUDE "/Shared/ted.include.ab3"
00013B66 <CLIModeSupport.ab3@1> XINCLUDE "CLIModeSupport.ab3"
00013B7C <CLIModeSupport.ab3@4> XINCLUDE "CLIModeSupport.ab3"
00013B92 <CLIModeSupport.ab3@7> XINCLUDE "CLIModeSupport.ab3"
00013BA0 <CLIModeSupport.ab3@8> XINCLUDE "CLIModeSupport.ab3"
00013BAE <CLIModeSupport.ab3@9> XINCLUDE "CLIModeSupport.ab3"
00013BB8 <CLIModeSupport.ab3@11> XINCLUDE "CLIModeSupport.ab3"
00013BCA <CLIModeSupport.ab3@12> XINCLUDE "CLIModeSupport.ab3"
00013BDC <CLIModeSupport.ab3@13> XINCLUDE "CLIModeSupport.ab3"
00013BE2 <CLIModeSupport.ab3@14> XINCLUDE "CLIModeSupport.ab3"
00013C1C <CLIModeSupport.ab3@15> XINCLUDE "CLIModeSupport.ab3"
00013C20 <CLIModeSupport.ab3@18> XINCLUDE "CLIModeSupport.ab3"
00013C36 <CLIModeSupport.ab3@21> XINCLUDE "CLIModeSupport.ab3"
00013C4C <CLIModeSupport.ab3@23> XINCLUDE "CLIModeSupport.ab3"
00013C58 <CLIModeSupport.ab3@24> XINCLUDE "CLIModeSupport.ab3"
00013C64 <CLIModeSupport.ab3@25> XINCLUDE "CLIModeSupport.ab3"
00013C6C <CLIModeSupport.ab3@26> XINCLUDE "CLIModeSupport.ab3"
00013C74 <CLIModeSupport.ab3@27> XINCLUDE "CLIModeSupport.ab3"
00013C78 <CLIModeSupport.ab3@28> XINCLUDE "CLIModeSupport.ab3"
00013CA2 <CLIModeSupport.ab3@47> XINCLUDE "CLIModeSupport.ab3"
00013CCE <CLIModeSupport.ab3@49> XINCLUDE "CLIModeSupport.ab3"
00013CE0 <CLIModeSupport.ab3@50> XINCLUDE "CLIModeSupport.ab3"
00013CF8 <CLIModeSupport.ab3@52> XINCLUDE "CLIModeSupport.ab3"
00013D0E <CLIModeSupport.ab3@56> XINCLUDE "CLIModeSupport.ab3"
00013D14 <CLIModeSupport.ab3@58> XINCLUDE "CLIModeSupport.ab3"
00013D4A <CLIModeSupport.ab3@61> XINCLUDE "CLIModeSupport.ab3"
00013D82 <CLIModeSupport.ab3@62> XINCLUDE "CLIModeSupport.ab3"
00013DBA <CLIModeSupport.ab3@63> XINCLUDE "CLIModeSupport.ab3"
00013DF2 <CLIModeSupport.ab3@64> XINCLUDE "CLIModeSupport.ab3"
00013E2A <CLIModeSupport.ab3@65> XINCLUDE "CLIModeSupport.ab3"
00013E62 <CLIModeSupport.ab3@66> XINCLUDE "CLIModeSupport.ab3"
00013E9A <CLIModeSupport.ab3@67> XINCLUDE "CLIModeSupport.ab3"
00013ED2 <CLIModeSupport.ab3@68> XINCLUDE "CLIModeSupport.ab3"
00013F0A <CLIModeSupport.ab3@69> XINCLUDE "CLIModeSupport.ab3"
00013F42 <CLIModeSupport.ab3@70> XINCLUDE "CLIModeSupport.ab3"
00013F7A <CLIModeSupport.ab3@71> XINCLUDE "CLIModeSupport.ab3"
00013FB2 <CLIModeSupport.ab3@72> XINCLUDE "CLIModeSupport.ab3"
00013FEA <CLIModeSupport.ab3@73> XINCLUDE "CLIModeSupport.ab3"
00013FF4 <CLIModeSupport.ab3@74> XINCLUDE "CLIModeSupport.ab3"
00013FFE <CLIModeSupport.ab3@76> XINCLUDE "CLIModeSupport.ab3"
00014008 <CLIModeSupport.ab3@77> XINCLUDE "CLIModeSupport.ab3"
00014032 <CLIModeSupport.ab3@81> XINCLUDE "CLIModeSupport.ab3"
0001403C <CLIModeSupport.ab3@82> XINCLUDE "CLIModeSupport.ab3"
00014040 <CLIModeSupport.ab3@83> XINCLUDE "CLIModeSupport.ab3"
00014074 <CLIModeSupport.ab3@84> XINCLUDE "CLIModeSupport.ab3"
0001407A <CLIModeSupport.ab3@85> XINCLUDE "CLIModeSupport.ab3"
000140B4 <CLIModeSupport.ab3@86> XINCLUDE "CLIModeSupport.ab3"
000140BA <CLIModeSupport.ab3@87> XINCLUDE "CLIModeSupport.ab3"
000140D0 <CLIModeSupport.ab3@90> XINCLUDE "CLIModeSupport.ab3"
000140DA <CLIModeSupport.ab3@92> XINCLUDE "CLIModeSupport.ab3"
000140E0 <CLIModeSupport.ab3@93> XINCLUDE "CLIModeSupport.ab3"
000140F6 <CLIModeSupport.ab3@97> XINCLUDE "CLIModeSupport.ab3"
000140FC <CLIModeSupport.ab3@98> XINCLUDE "CLIModeSupport.ab3"
0001413A <CLIModeSupport.ab3@100> XINCLUDE "CLIModeSupport.ab3"
0001413E <CLIModeSupport.ab3@101> XINCLUDE "CLIModeSupport.ab3"
00014148 <CLIModeSupport.ab3@102> XINCLUDE "CLIModeSupport.ab3"
0001414A <CLIModeSupport.ab3@103> XINCLUDE "CLIModeSupport.ab3"
0001417E <CLIModeSupport.ab3@104> XINCLUDE "CLIModeSupport.ab3"
0001418E <CLIModeSupport.ab3@105> XINCLUDE "CLIModeSupport.ab3"
00014198 <CLIModeSupport.ab3@108> XINCLUDE "CLIModeSupport.ab3"
0001419E <CLIModeSupport.ab3@109> XINCLUDE "CLIModeSupport.ab3"
000141B4 <CLIModeSupport.ab3@113> XINCLUDE "CLIModeSupport.ab3"
000141F2 <CLIModeSupport.ab3@114> XINCLUDE "CLIModeSupport.ab3"
000141F6 <CLIModeSupport.ab3@115> XINCLUDE "CLIModeSupport.ab3"
000141FE <CLIModeSupport.ab3@116> XINCLUDE "CLIModeSupport.ab3"
0001423C <CLIModeSupport.ab3@117> XINCLUDE "CLIModeSupport.ab3"
0001423E <CLIModeSupport.ab3@118> XINCLUDE "CLIModeSupport.ab3"
00014242 <CLIModeSupport.ab3@119> XINCLUDE "CLIModeSupport.ab3"
00014280 <CLIModeSupport.ab3@121> XINCLUDE "CLIModeSupport.ab3"
00014284 <CLIModeSupport.ab3@122> XINCLUDE "CLIModeSupport.ab3"
000142C2 <CLIModeSupport.ab3@124> XINCLUDE "CLIModeSupport.ab3"
000142C6 <CLIModeSupport.ab3@125> XINCLUDE "CLIModeSupport.ab3"
000142F0 <CLIModeSupport.ab3@127> XINCLUDE "CLIModeSupport.ab3"
000142FA <CLIModeSupport.ab3@128> XINCLUDE "CLIModeSupport.ab3"
0001430E <CLIModeSupport.ab3@129> XINCLUDE "CLIModeSupport.ab3"
00014334 <CLIModeSupport.ab3@130> XINCLUDE "CLIModeSupport.ab3"
0001433A <CLIModeSupport.ab3@131> XINCLUDE "CLIModeSupport.ab3"
00014348 <CLIModeSupport.ab3@132> XINCLUDE "CLIModeSupport.ab3"
0001434E <CLIModeSupport.ab3@133> XINCLUDE "CLIModeSupport.ab3"
00014386 <CLIModeSupport.ab3@135> XINCLUDE "CLIModeSupport.ab3"
0001438A <CLIModeSupport.ab3@138> XINCLUDE "CLIModeSupport.ab3"
000143B4 <CLIModeSupport.ab3@141> XINCLUDE "CLIModeSupport.ab3"
000143BA <CLIModeSupport.ab3@142> XINCLUDE "CLIModeSupport.ab3"
000143DA <CLIModeSupport.ab3@143> XINCLUDE "CLIModeSupport.ab3"
000143E4 <CLIModeSupport.ab3@144> XINCLUDE "CLIModeSupport.ab3"
000143E8 <CLIModeSupport.ab3@145> XINCLUDE "CLIModeSupport.ab3"
000143EA <CLIModeSupport.ab3@146> XINCLUDE "CLIModeSupport.ab3"
00014408 <CLIModeSupport.ab3@147> XINCLUDE "CLIModeSupport.ab3"
0001440A <CLIModeSupport.ab3@148> XINCLUDE "CLIModeSupport.ab3"
00014410 <CLIModeSupport.ab3@149> XINCLUDE "CLIModeSupport.ab3"
00014416 <CLIModeSupport.ab3@150> XINCLUDE "CLIModeSupport.ab3"
00014440 <CLIModeSupport.ab3@152> XINCLUDE "CLIModeSupport.ab3"
00014442 <CLIModeSupport.ab3@153> XINCLUDE "CLIModeSupport.ab3"
00014470 <CLIModeSupport.ab3@154> XINCLUDE "CLIModeSupport.ab3"
00014474 <CLIModeSupport.ab3@155> XINCLUDE "CLIModeSupport.ab3"
000144A2 <CLIModeSupport.ab3@156> XINCLUDE "CLIModeSupport.ab3"
000144A6 <CLIModeSupport.ab3@157> XINCLUDE "CLIModeSupport.ab3"
000144CC <CLIModeSupport.ab3@159> XINCLUDE "CLIModeSupport.ab3"
000144DC <CLIModeSupport.ab3@160> XINCLUDE "CLIModeSupport.ab3"
000144E2 <CLIModeSupport.ab3@161> XINCLUDE "CLIModeSupport.ab3"
000144E8 <CLIModeSupport.ab3@162> XINCLUDE "CLIModeSupport.ab3"
00014522 <CLIModeSupport.ab3@163> XINCLUDE "CLIModeSupport.ab3"
0001452C <CLIModeSupport.ab3@165> XINCLUDE "CLIModeSupport.ab3"
00014546 <CLIModeSupport.ab3@166> XINCLUDE "CLIModeSupport.ab3"
00014564 <CLIModeSupport.ab3@178> XINCLUDE "CLIModeSupport.ab3"
0001456C <CLIModeSupport.ab3@179> XINCLUDE "CLIModeSupport.ab3"
00014572 <CLIModeSupport.ab3@180> XINCLUDE "CLIModeSupport.ab3"
00014578 <CLIModeSupport.ab3@181> XINCLUDE "CLIModeSupport.ab3"
0001459A <CLIModeSupport.ab3@182> XINCLUDE "CLIModeSupport.ab3"
000145B2 <CLIModeSupport.ab3@184> XINCLUDE "CLIModeSupport.ab3"
000145D8 <CLIModeSupport.ab3@185> XINCLUDE "CLIModeSupport.ab3"
00014602 <CLIModeSupport.ab3@186> XINCLUDE "CLIModeSupport.ab3"
00014610 <CLIModeSupport.ab3@187> XINCLUDE "CLIModeSupport.ab3"
00014616 <CLIModeSupport.ab3@188> XINCLUDE "CLIModeSupport.ab3"
0001462A <CLIModeSupport.ab3@189> XINCLUDE "CLIModeSupport.ab3"
00014642 <CLIModeSupport.ab3@191> XINCLUDE "CLIModeSupport.ab3"
00014650 <CLIModeSupport.ab3@192> XINCLUDE "CLIModeSupport.ab3"
00014664 <CLIModeSupport.ab3@193> XINCLUDE "CLIModeSupport.ab3"
0001469A <CLIModeSupport.ab3@194> XINCLUDE "CLIModeSupport.ab3"
000146A8 <CLIModeSupport.ab3@195> XINCLUDE "CLIModeSupport.ab3"
000146D8 <CLIModeSupport.ab3@196> XINCLUDE "CLIModeSupport.ab3"
000146E6 <CLIModeSupport.ab3@197> XINCLUDE "CLIModeSupport.ab3"
000146EC <CLIModeSupport.ab3@198> XINCLUDE "CLIModeSupport.ab3"
000146FA <CLIModeSupport.ab3@199> XINCLUDE "CLIModeSupport.ab3"
00014700 <CLIModeSupport.ab3@200> XINCLUDE "CLIModeSupport.ab3"
00014706 <CLIModeSupport.ab3@202> XINCLUDE "CLIModeSupport.ab3"
00014714 <CLIModeSupport.ab3@203> XINCLUDE "CLIModeSupport.ab3"
00014716 <CLIModeSupport.ab3@204> XINCLUDE "CLIModeSupport.ab3"
0001471C <CLIModeSupport.ab3@206> XINCLUDE "CLIModeSupport.ab3"
00014732 <CLIModeSupport.ab3@208> XINCLUDE "CLIModeSupport.ab3"
0001473C <CLIModeSupport.ab3@209> XINCLUDE "CLIModeSupport.ab3"
00014742 <CLIModeSupport.ab3@210> XINCLUDE "CLIModeSupport.ab3"
0001476C <CLIModeSupport.ab3@214> XINCLUDE "CLIModeSupport.ab3"
000147AA <CLIModeSupport.ab3@215> XINCLUDE "CLIModeSupport.ab3"
000147AE <CLIModeSupport.ab3@216> XINCLUDE "CLIModeSupport.ab3"
000147EC <CLIModeSupport.ab3@217> XINCLUDE "CLIModeSupport.ab3"
000147F0 <CLIModeSupport.ab3@218> XINCLUDE "CLIModeSupport.ab3"
0001482E <CLIModeSupport.ab3@219> XINCLUDE "CLIModeSupport.ab3"
00014832 <CLIModeSupport.ab3@220> XINCLUDE "CLIModeSupport.ab3"
0001483A <CLIModeSupport.ab3@222> XINCLUDE "CLIModeSupport.ab3"
00014842 <CLIModeSupport.ab3@223> XINCLUDE "CLIModeSupport.ab3"
00014886 <CLIModeSupport.ab3@225> XINCLUDE "CLIModeSupport.ab3"
00014898 <CLIModeSupport.ab3@226> XINCLUDE "CLIModeSupport.ab3"
000148A6 <CLIModeSupport.ab3@227> XINCLUDE "CLIModeSupport.ab3"
000148DA <CLIModeSupport.ab3@228> XINCLUDE "CLIModeSupport.ab3"
000148FE <CLIModeSupport.ab3@230> XINCLUDE "CLIModeSupport.ab3"
00014908 <CLIModeSupport.ab3@231> XINCLUDE "CLIModeSupport.ab3"
00014922 <CLIModeSupport.ab3@232> XINCLUDE "CLIModeSupport.ab3"
00014936 <CLIModeSupport.ab3@233> XINCLUDE "CLIModeSupport.ab3"
0001498E <CLIModeSupport.ab3@234> XINCLUDE "CLIModeSupport.ab3"
00014A2E <CLIModeSupport.ab3@235> XINCLUDE "CLIModeSupport.ab3"
00014A36 <CLIModeSupport.ab3@236> XINCLUDE "CLIModeSupport.ab3"
00014A6E <CLIModeSupport.ab3@237> XINCLUDE "CLIModeSupport.ab3"
00014A74 <CLIModeSupport.ab3@238> XINCLUDE "CLIModeSupport.ab3"
00014A84 <CLIModeSupport.ab3@239> XINCLUDE "CLIModeSupport.ab3"
00014AAC <CLIModeSupport.ab3@242> XINCLUDE "CLIModeSupport.ab3"
00014AD4 <CLIModeSupport.ab3@243> XINCLUDE "CLIModeSupport.ab3"
00014ADC <CLIModeSupport.ab3@244> XINCLUDE "CLIModeSupport.ab3"
00014AE2 <CLIModeSupport.ab3@245> XINCLUDE "CLIModeSupport.ab3"
00014AEA <CLIModeSupport.ab3@246> XINCLUDE "CLIModeSupport.ab3"
00014AF2 <CLIModeSupport.ab3@247> XINCLUDE "CLIModeSupport.ab3"
00014B1A <CLIModeSupport.ab3@248> XINCLUDE "CLIModeSupport.ab3"
00014B22 <CLIModeSupport.ab3@249> XINCLUDE "CLIModeSupport.ab3"
00014B2A <CLIModeSupport.ab3@250> XINCLUDE "CLIModeSupport.ab3"
00014B30 <CLIModeSupport.ab3@251> XINCLUDE "CLIModeSupport.ab3"
00014B36 <CLIModeSupport.ab3@252> XINCLUDE "CLIModeSupport.ab3"
00014B3C <CLIModeSupport.ab3@253> XINCLUDE "CLIModeSupport.ab3"
00014B42 <CLIModeSupport.ab3@254> XINCLUDE "CLIModeSupport.ab3"
00014B48 <CLIModeSupport.ab3@255> XINCLUDE "CLIModeSupport.ab3"
00014B4E <CLIModeSupport.ab3@256> XINCLUDE "CLIModeSupport.ab3"
00014B54 <CLIModeSupport.ab3@257> XINCLUDE "CLIModeSupport.ab3"
00014B5A <CLIModeSupport.ab3@258> XINCLUDE "CLIModeSupport.ab3"
00014B62 <CLIModeSupport.ab3@259> XINCLUDE "CLIModeSupport.ab3"
00014B6A <CLIModeSupport.ab3@260> XINCLUDE "CLIModeSupport.ab3"
00014B92 <CLIModeSupport.ab3@261> XINCLUDE "CLIModeSupport.ab3"
00014B98 <CLIModeSupport.ab3@262> XINCLUDE "CLIModeSupport.ab3"
00014B9E <CLIModeSupport.ab3@263> XINCLUDE "CLIModeSupport.ab3"
00014BA6 <CLIModeSupport.ab3@264> XINCLUDE "CLIModeSupport.ab3"
00014BC6 <CLIModeSupport.ab3@268> XINCLUDE "CLIModeSupport.ab3"
00014BD6 <CLIModeSupport.ab3@270> XINCLUDE "CLIModeSupport.ab3"
00014BE6 <CLIModeSupport.ab3@271> XINCLUDE "CLIModeSupport.ab3"
00014BF6 <CLIModeSupport.ab3@273> XINCLUDE "CLIModeSupport.ab3"
00014C06 <CLIModeSupport.ab3@274> XINCLUDE "CLIModeSupport.ab3"
00014C16 <CLIModeSupport.ab3@275> XINCLUDE "CLIModeSupport.ab3"
00014C26 <CLIModeSupport.ab3@276> XINCLUDE "CLIModeSupport.ab3"
00014C36 <CLIModeSupport.ab3@277> XINCLUDE "CLIModeSupport.ab3"
00014C46 <CLIModeSupport.ab3@278> XINCLUDE "CLIModeSupport.ab3"
00014C56 <CLIModeSupport.ab3@279> XINCLUDE "CLIModeSupport.ab3"
00014C66 <CLIModeSupport.ab3@280> XINCLUDE "CLIModeSupport.ab3"
00014C76 <CLIModeSupport.ab3@281> XINCLUDE "CLIModeSupport.ab3"
00014C86 <CLIModeSupport.ab3@282> XINCLUDE "CLIModeSupport.ab3"
00014C96 <CLIModeSupport.ab3@283> XINCLUDE "CLIModeSupport.ab3"
00014CA6 <CLIModeSupport.ab3@284> XINCLUDE "CLIModeSupport.ab3"
00014CB6 <CLIModeSupport.ab3@285> XINCLUDE "CLIModeSupport.ab3"
00014CC6 <CLIModeSupport.ab3@286> XINCLUDE "CLIModeSupport.ab3"
00014CD8 <CLIModeSupport.ab3@288> XINCLUDE "CLIModeSupport.ab3"
00014CEA <CLIModeSupport.ab3@289> XINCLUDE "CLIModeSupport.ab3"
00014CFC <CLIModeSupport.ab3@290> XINCLUDE "CLIModeSupport.ab3"
00014D0E <CLIModeSupport.ab3@291> XINCLUDE "CLIModeSupport.ab3"
00014D20 <CLIModeSupport.ab3@292> XINCLUDE "CLIModeSupport.ab3"
00014D32 <CLIModeSupport.ab3@293> XINCLUDE "CLIModeSupport.ab3"
00014D50 <CLIModeSupport.ab3@295> XINCLUDE "CLIModeSupport.ab3"
00014D56 <CLIModeSupport.ab3@296> XINCLUDE "CLIModeSupport.ab3"
00014D5C <CLIModeSupport.ab3@298> XINCLUDE "CLIModeSupport.ab3"
00014D86 <CLIModeSupport.ab3@299> XINCLUDE "CLIModeSupport.ab3"
00014D98 <CLIModeSupport.ab3@300> XINCLUDE "CLIModeSupport.ab3"
00014DCC <CLIModeSupport.ab3@303> XINCLUDE "CLIModeSupport.ab3"
00014DE4 <CLIModeSupport.ab3@304> XINCLUDE "CLIModeSupport.ab3"
00014E30 <CLIModeSupport.ab3@305> XINCLUDE "CLIModeSupport.ab3"
00014E42 <CLIModeSupport.ab3@306> XINCLUDE "CLIModeSupport.ab3"
00014E98 <CLIModeSupport.ab3@307> XINCLUDE "CLIModeSupport.ab3"
00014F0A <CLIModeSupport.ab3@308> XINCLUDE "CLIModeSupport.ab3"
00014F10 <CLIModeSupport.ab3@309> XINCLUDE "CLIModeSupport.ab3"
00014F44 <CLIModeSupport.ab3@310> XINCLUDE "CLIModeSupport.ab3"
00014F6C <CLIModeSupport.ab3@311> XINCLUDE "CLIModeSupport.ab3"
00014F94 <CLIModeSupport.ab3@313> XINCLUDE "CLIModeSupport.ab3"
00014FCE <CLIModeSupport.ab3@314> XINCLUDE "CLIModeSupport.ab3"
00014FE6 <CLIModeSupport.ab3@315> XINCLUDE "CLIModeSupport.ab3"
0001506A <CLIModeSupport.ab3@316> XINCLUDE "CLIModeSupport.ab3"
00015084 <CLIModeSupport.ab3@317> XINCLUDE "CLIModeSupport.ab3"
000150D2 <CLIModeSupport.ab3@318> XINCLUDE "CLIModeSupport.ab3"
000150E2 <CLIModeSupport.ab3@320> XINCLUDE "CLIModeSupport.ab3"
000150EA <CLIModeSupport.ab3@322> XINCLUDE "CLIModeSupport.ab3"
000150FE <CLIModeSupport.ab3@323> XINCLUDE "CLIModeSupport.ab3"
00015144 <CLIModeSupport.ab3@324> XINCLUDE "CLIModeSupport.ab3"
0001514A <CLIModeSupport.ab3@325> XINCLUDE "CLIModeSupport.ab3"
00015194 <CLIModeSupport.ab3@326> XINCLUDE "CLIModeSupport.ab3"
000151FE <CLIModeSupport.ab3@327> XINCLUDE "CLIModeSupport.ab3"
00015264 <CLIModeSupport.ab3@328> XINCLUDE "CLIModeSupport.ab3"
00015298 <CLIModeSupport.ab3@329> XINCLUDE "CLIModeSupport.ab3"
000152C4 <CLIModeSupport.ab3@331> XINCLUDE "CLIModeSupport.ab3"
00015312 <CLIModeSupport.ab3@332> XINCLUDE "CLIModeSupport.ab3"
00015336 <CLIModeSupport.ab3@333> XINCLUDE "CLIModeSupport.ab3"
0001533C <CLIModeSupport.ab3@334> XINCLUDE "CLIModeSupport.ab3"
0001534A <CLIModeSupport.ab3@336> XINCLUDE "CLIModeSupport.ab3"
000153A8 <CLIModeSupport.ab3@338> XINCLUDE "CLIModeSupport.ab3"
00015406 <CLIModeSupport.ab3@339> XINCLUDE "CLIModeSupport.ab3"
00015430 <CLIModeSupport.ab3@340> XINCLUDE "CLIModeSupport.ab3"
0001543A <CLIModeSupport.ab3@341> XINCLUDE "CLIModeSupport.ab3"
00015442 <CLIModeSupport.ab3@342> XINCLUDE "CLIModeSupport.ab3"
00015480 <CLIModeSupport.ab3@343> XINCLUDE "CLIModeSupport.ab3"
000154CC <CLIModeSupport.ab3@344> XINCLUDE "CLIModeSupport.ab3"
000154DE <CLIModeSupport.ab3@345> XINCLUDE "CLIModeSupport.ab3"
00015534 <CLIModeSupport.ab3@346> XINCLUDE "CLIModeSupport.ab3"
000155AC <CLIModeSupport.ab3@347> XINCLUDE "CLIModeSupport.ab3"
000155B2 <CLIModeSupport.ab3@348> XINCLUDE "CLIModeSupport.ab3"
000155E6 <CLIModeSupport.ab3@349> XINCLUDE "CLIModeSupport.ab3"
0001560E <CLIModeSupport.ab3@350> XINCLUDE "CLIModeSupport.ab3"
00015644 <CLIModeSupport.ab3@353> XINCLUDE "CLIModeSupport.ab3"
00015652 <CLIModeSupport.ab3@354> XINCLUDE "CLIModeSupport.ab3"
00015660 <CLIModeSupport.ab3@355> XINCLUDE "CLIModeSupport.ab3"
000156D4 <CLIModeSupport.ab3@356> XINCLUDE "CLIModeSupport.ab3"
000156DA <CLIModeSupport.ab3@357> XINCLUDE "CLIModeSupport.ab3"
00015724 <CLIModeSupport.ab3@358> XINCLUDE "CLIModeSupport.ab3"
0001576E <CLIModeSupport.ab3@359> XINCLUDE "CLIModeSupport.ab3"
0001579E <CLIModeSupport.ab3@360> XINCLUDE "CLIModeSupport.ab3"
000157CE <CLIModeSupport.ab3@361> XINCLUDE "CLIModeSupport.ab3"
000157F8 <CLIModeSupport.ab3@362> XINCLUDE "CLIModeSupport.ab3"
0001584A <CLIModeSupport.ab3@363> XINCLUDE "CLIModeSupport.ab3"
000158A0 <CLIModeSupport.ab3@364> XINCLUDE "CLIModeSupport.ab3"
000158F0 <CLIModeSupport.ab3@365> XINCLUDE "CLIModeSupport.ab3"
00015956 <CLIModeSupport.ab3@366> XINCLUDE "CLIModeSupport.ab3"
000159C2 <CLIModeSupport.ab3@367> XINCLUDE "CLIModeSupport.ab3"
000159EE <CLIModeSupport.ab3@368> XINCLUDE "CLIModeSupport.ab3"
00015A1E <CLIModeSupport.ab3@369> XINCLUDE "CLIModeSupport.ab3"
00015A9A <CLIModeSupport.ab3@370> XINCLUDE "CLIModeSupport.ab3"
00015ACA <CLIModeSupport.ab3@371> XINCLUDE "CLIModeSupport.ab3"
00015AFA <CLIModeSupport.ab3@372> XINCLUDE "CLIModeSupport.ab3"
00015B2A <CLIModeSupport.ab3@373> XINCLUDE "CLIModeSupport.ab3"
00015B5A <CLIModeSupport.ab3@374> XINCLUDE "CLIModeSupport.ab3"
00015B8A <CLIModeSupport.ab3@375> XINCLUDE "CLIModeSupport.ab3"
00015BBA <CLIModeSupport.ab3@376> XINCLUDE "CLIModeSupport.ab3"
00015BEA <CLIModeSupport.ab3@377> XINCLUDE "CLIModeSupport.ab3"
00015C1A <CLIModeSupport.ab3@378> XINCLUDE "CLIModeSupport.ab3"
00015C4A <CLIModeSupport.ab3@379> XINCLUDE "CLIModeSupport.ab3"
00015C7A <CLIModeSupport.ab3@380> XINCLUDE "CLIModeSupport.ab3"
00015CF6 <CLIModeSupport.ab3@381> XINCLUDE "CLIModeSupport.ab3"
00015D28 <CLIModeSupport.ab3@382> XINCLUDE "CLIModeSupport.ab3"
00015D5A <CLIModeSupport.ab3@383> XINCLUDE "CLIModeSupport.ab3"
00015D8A <CLIModeSupport.ab3@384> XINCLUDE "CLIModeSupport.ab3"
00015D90 <CLIModeSupport.ab3@385> XINCLUDE "CLIModeSupport.ab3"
00015E04 <CLIModeSupport.ab3@386> XINCLUDE "CLIModeSupport.ab3"
00015E70 <CLIModeSupport.ab3@387> XINCLUDE "CLIModeSupport.ab3"
00015E82 <CLIModeSupport.ab3@388> XINCLUDE "CLIModeSupport.ab3"
00015EB0 <CLIModeSupport.ab3@389> XINCLUDE "CLIModeSupport.ab3"
00015ED8 <CLIModeSupport.ab3@390> XINCLUDE "CLIModeSupport.ab3"
00015EEC <CLIModeSupport.ab3@391> XINCLUDE "CLIModeSupport.ab3"
00015F16 <CLIModeSupport.ab3@392> XINCLUDE "CLIModeSupport.ab3"
00015F5A <CLIModeSupport.ab3@393> XINCLUDE "CLIModeSupport.ab3"
00015F6A <CLIModeSupport.ab3@394> XINCLUDE "CLIModeSupport.ab3"
00015F7A <CLIModeSupport.ab3@395> XINCLUDE "CLIModeSupport.ab3"
00015F80 <CLIModeSupport.ab3@396> XINCLUDE "CLIModeSupport.ab3"
00015F90 <CLIModeSupport.ab3@398> XINCLUDE "CLIModeSupport.ab3"
00015F9E <CLIModeSupport.ab3@402> XINCLUDE "CLIModeSupport.ab3"
00015FA8 <CLIModeSupport.ab3@405> XINCLUDE "CLIModeSupport.ab3"
00015FE0 <CLIModeSupport.ab3@408> XINCLUDE "CLIModeSupport.ab3"
00016018 <CLIModeSupport.ab3@409> XINCLUDE "CLIModeSupport.ab3"
00016050 <CLIModeSupport.ab3@410> XINCLUDE "CLIModeSupport.ab3"
00016060 <CLIModeSupport.ab3@411> XINCLUDE "CLIModeSupport.ab3"
000160C8 <CLIModeSupport.ab3@412> XINCLUDE "CLIModeSupport.ab3"
00016100 <CLIModeSupport.ab3@413> XINCLUDE "CLIModeSupport.ab3"
00016110 <CLIModeSupport.ab3@414> XINCLUDE "CLIModeSupport.ab3"
00016120 <CLIModeSupport.ab3@415> XINCLUDE "CLIModeSupport.ab3"
00016188 <CLIModeSupport.ab3@416> XINCLUDE "CLIModeSupport.ab3"
000161F0 <CLIModeSupport.ab3@417> XINCLUDE "CLIModeSupport.ab3"
00016258 <CLIModeSupport.ab3@418> XINCLUDE "CLIModeSupport.ab3"
000162C0 <CLIModeSupport.ab3@419> XINCLUDE "CLIModeSupport.ab3"
00016328 <CLIModeSupport.ab3@420> XINCLUDE "CLIModeSupport.ab3"
00016390 <CLIModeSupport.ab3@421> XINCLUDE "CLIModeSupport.ab3"
000163F8 <CLIModeSupport.ab3@422> XINCLUDE "CLIModeSupport.ab3"
00016460 <CLIModeSupport.ab3@423> XINCLUDE "CLIModeSupport.ab3"
00016470 <CLIModeSupport.ab3@424> XINCLUDE "CLIModeSupport.ab3"
000164A8 <CLIModeSupport.ab3@426> XINCLUDE "CLIModeSupport.ab3"
000164E2 <CLIModeSupport.ab3@427> XINCLUDE "CLIModeSupport.ab3"
0001651C <CLIModeSupport.ab3@428> XINCLUDE "CLIModeSupport.ab3"
00016554 <CLIModeSupport.ab3@429> XINCLUDE "CLIModeSupport.ab3"
00016570 <CLIModeSupport.ab3@430> XINCLUDE "CLIModeSupport.ab3"
000165A8 <CLIModeSupport.ab3@431> XINCLUDE "CLIModeSupport.ab3"
000165CE <CLIModeSupport.ab3@433> XINCLUDE "CLIModeSupport.ab3"
000165D6 <CLIModeSupport.ab3@436> XINCLUDE "CLIModeSupport.ab3"
000165DE <CLIModeSupport.ab3@438> XINCLUDE "CLIModeSupport.ab3"
000165E6 <CLIModeSupport.ab3@439> XINCLUDE "CLIModeSupport.ab3"
000165EE <CLIModeSupport.ab3@441> XINCLUDE "CLIModeSupport.ab3"
00016602 <CLIModeSupport.ab3@442> XINCLUDE "CLIModeSupport.ab3"
00016630 <CLIModeSupport.ab3@443> XINCLUDE "CLIModeSupport.ab3"
0001664A <CLIModeSupport.ab3@444> XINCLUDE "CLIModeSupport.ab3"
00016658 <CLIModeSupport.ab3@445> XINCLUDE "CLIModeSupport.ab3"
000166C4 <CLIModeSupport.ab3@446> XINCLUDE "CLIModeSupport.ab3"
000166EA <CLIModeSupport.ab3@447> XINCLUDE "CLIModeSupport.ab3"
00016706 <CLIModeSupport.ab3@448> XINCLUDE "CLIModeSupport.ab3"
00016710 <CLIModeSupport.ab3@449> XINCLUDE "CLIModeSupport.ab3"
0001671A <CLIModeSupport.ab3@450> XINCLUDE "CLIModeSupport.ab3"
00016726 <CLIModeSupport.ab3@451> XINCLUDE "CLIModeSupport.ab3"
00016734 <CLIModeSupport.ab3@452> XINCLUDE "CLIModeSupport.ab3"
00016740 <CLIModeSupport.ab3@453> XINCLUDE "CLIModeSupport.ab3"
0001677C <CLIModeSupport.ab3@454> XINCLUDE "CLIModeSupport.ab3"
00016796 <CLIModeSupport.ab3@455> XINCLUDE "CLIModeSupport.ab3"
000167A4 <CLIModeSupport.ab3@456> XINCLUDE "CLIModeSupport.ab3"
000167C4 <CLIModeSupport.ab3@457> XINCLUDE "CLIModeSupport.ab3"
000167D2 <CLIModeSupport.ab3@458> XINCLUDE "CLIModeSupport.ab3"
000167E0 <CLIModeSupport.ab3@459> XINCLUDE "CLIModeSupport.ab3"
000167E6 <CLIModeSupport.ab3@461> XINCLUDE "CLIModeSupport.ab3"
000167F6 <CLIModeSupport.ab3@462> XINCLUDE "CLIModeSupport.ab3"
000167FA <CLIModeSupport.ab3@464> XINCLUDE "CLIModeSupport.ab3"
0001682E <CLIModeSupport.ab3@465> XINCLUDE "CLIModeSupport.ab3"
00016862 <CLIModeSupport.ab3@466> XINCLUDE "CLIModeSupport.ab3"
00016866 <CLIModeSupport.ab3@467> XINCLUDE "CLIModeSupport.ab3"
0001689A <CLIModeSupport.ab3@468> XINCLUDE "CLIModeSupport.ab3"
0001689E <CLIModeSupport.ab3@469> XINCLUDE "CLIModeSupport.ab3"
000168D2 <CLIModeSupport.ab3@470> XINCLUDE "CLIModeSupport.ab3"
000168D8 <CLIModeSupport.ab3@471> XINCLUDE "CLIModeSupport.ab3"
0001690E <CLIModeSupport.ab3@473> XINCLUDE "CLIModeSupport.ab3"
00016944 <CLIModeSupport.ab3@474> XINCLUDE "CLIModeSupport.ab3"
0001697A <CLIModeSupport.ab3@475> XINCLUDE "CLIModeSupport.ab3"
000169B2 <CLIModeSupport.ab3@476> XINCLUDE "CLIModeSupport.ab3"
000169EA <CLIModeSupport.ab3@477> XINCLUDE "CLIModeSupport.ab3"
00016A8A <CLIModeSupport.ab3@479> XINCLUDE "CLIModeSupport.ab3"
00016ACA <CLIModeSupport.ab3@480> XINCLUDE "CLIModeSupport.ab3"
00016B00 <CLIModeSupport.ab3@481> XINCLUDE "CLIModeSupport.ab3"
00016B36 <CLIModeSupport.ab3@482> XINCLUDE "CLIModeSupport.ab3"
00016B6E <CLIModeSupport.ab3@485> XINCLUDE "CLIModeSupport.ab3"
00016B8C <CLIModeSupport.ab3@486> XINCLUDE "CLIModeSupport.ab3"
00016B90 <CLIModeSupport.ab3@487> XINCLUDE "CLIModeSupport.ab3"
00016B96 <CLIModeSupport.ab3@488> XINCLUDE "CLIModeSupport.ab3"
00016B9C <CLIModeSupport.ab3@489> XINCLUDE "CLIModeSupport.ab3"
00016BA0 <CLIModeSupport.ab3@490> XINCLUDE "CLIModeSupport.ab3"
00016BCA <CLIModeSupport.ab3@491> XINCLUDE "CLIModeSupport.ab3"
00016BDE <CLIModeSupport.ab3@495> XINCLUDE "CLIModeSupport.ab3"
00016C1C <CLIModeSupport.ab3@496> XINCLUDE "CLIModeSupport.ab3"
00016C50 <CLIModeSupport.ab3@497> XINCLUDE "CLIModeSupport.ab3"
00016C86 <CLIModeSupport.ab3@501> XINCLUDE "CLIModeSupport.ab3"
00016CDE <CLIModeSupport.ab3@503> XINCLUDE "CLIModeSupport.ab3"
00016D0C <CLIModeSupport.ab3@504> XINCLUDE "CLIModeSupport.ab3"
00016D10 <CLIModeSupport.ab3@505> XINCLUDE "CLIModeSupport.ab3"
00016D46 <CLIModeSupport.ab3@506> XINCLUDE "CLIModeSupport.ab3"
00016D74 <CLIModeSupport.ab3@507> XINCLUDE "CLIModeSupport.ab3"
00016DA2 <CLIModeSupport.ab3@509> XINCLUDE "CLIModeSupport.ab3"
00016DA6 <CLIModeSupport.ab3@510> XINCLUDE "CLIModeSupport.ab3"
00016DDC <CLIModeSupport.ab3@511> XINCLUDE "CLIModeSupport.ab3"
00016E0A <CLIModeSupport.ab3@513> XINCLUDE "CLIModeSupport.ab3"
00016E0E <CLIModeSupport.ab3@514> XINCLUDE "CLIModeSupport.ab3"
00016E72 <CLIModeSupport.ab3@515> XINCLUDE "CLIModeSupport.ab3"
00016E78 <CLIModeSupport.ab3@518> XINCLUDE "CLIModeSupport.ab3"
00016EB2 <CLIModeSupport.ab3@519> XINCLUDE "CLIModeSupport.ab3"
00016EBC <CLIModeSupport.ab3@522> XINCLUDE "CLIModeSupport.ab3"
00016EC6 <CLIModeSupport.ab3@524> XINCLUDE "CLIModeSupport.ab3"
00016EE0 <CLIModeSupport.ab3@525> XINCLUDE "CLIModeSupport.ab3"
00016F0A <CLIModeSupport.ab3@528> XINCLUDE "CLIModeSupport.ab3"
00016F10 <CLIModeSupport.ab3@529> XINCLUDE "CLIModeSupport.ab3"
00016F30 <CLIModeSupport.ab3@530> XINCLUDE "CLIModeSupport.ab3"
00016F3A <CLIModeSupport.ab3@531> XINCLUDE "CLIModeSupport.ab3"
00016F3E <CLIModeSupport.ab3@532> XINCLUDE "CLIModeSupport.ab3"
00016F40 <CLIModeSupport.ab3@533> XINCLUDE "CLIModeSupport.ab3"
00016F5E <CLIModeSupport.ab3@534> XINCLUDE "CLIModeSupport.ab3"
00016F60 <CLIModeSupport.ab3@535> XINCLUDE "CLIModeSupport.ab3"
00016F66 <CLIModeSupport.ab3@536> XINCLUDE "CLIModeSupport.ab3"
00016F6C <CLIModeSupport.ab3@538> XINCLUDE "CLIModeSupport.ab3"
00016F96 <CLIModeSupport.ab3@539> XINCLUDE "CLIModeSupport.ab3"
00016F98 <CLIModeSupport.ab3@540> XINCLUDE "CLIModeSupport.ab3"
00016FC6 <CLIModeSupport.ab3@541> XINCLUDE "CLIModeSupport.ab3"
00016FCA <CLIModeSupport.ab3@542> XINCLUDE "CLIModeSupport.ab3"
00016FF8 <CLIModeSupport.ab3@543> XINCLUDE "CLIModeSupport.ab3"
00016FFC <CLIModeSupport.ab3@544> XINCLUDE "CLIModeSupport.ab3"
00017022 <CLIModeSupport.ab3@545> XINCLUDE "CLIModeSupport.ab3"
00017032 <CLIModeSupport.ab3@546> XINCLUDE "CLIModeSupport.ab3"
00017038 <CLIModeSupport.ab3@547> XINCLUDE "CLIModeSupport.ab3"
0001703E <CLIModeSupport.ab3@548> XINCLUDE "CLIModeSupport.ab3"
00017078 <CLIModeSupport.ab3@549> XINCLUDE "CLIModeSupport.ab3"
00017082 <CLIModeSupport.ab3@551> XINCLUDE "CLIModeSupport.ab3"
0001709C <CLIModeSupport.ab3@552> XINCLUDE "CLIModeSupport.ab3"
000170B6 <CLIModeSupport.ab3@555> XINCLUDE "CLIModeSupport.ab3"
000170E0 <CLIModeSupport.ab3@556> XINCLUDE "CLIModeSupport.ab3"
0001710E <CLIModeSupport.ab3@557> XINCLUDE "CLIModeSupport.ab3"
0001719E <CLIModeSupport.ab3@558> XINCLUDE "CLIModeSupport.ab3"
000171A8 <CLIModeSupport.ab3@560> XINCLUDE "CLIModeSupport.ab3"
000171BC <CLIModeSupport.ab3@561> XINCLUDE "CLIModeSupport.ab3"
000171F8 <CLIModeSupport.ab3@562> XINCLUDE "CLIModeSupport.ab3"
00017234 <CLIModeSupport.ab3@563> XINCLUDE "CLIModeSupport.ab3"
00017270 <CLIModeSupport.ab3@564> XINCLUDE "CLIModeSupport.ab3"
000172AC <CLIModeSupport.ab3@565> XINCLUDE "CLIModeSupport.ab3"
000172E8 <CLIModeSupport.ab3@566> XINCLUDE "CLIModeSupport.ab3"
000172EE <CLIModeSupport.ab3@567> XINCLUDE "CLIModeSupport.ab3"
00017328 <CLIModeSupport.ab3@568> XINCLUDE "CLIModeSupport.ab3"
00017334 <CLIModeSupport.ab3@572> XINCLUDE "CLIModeSupport.ab3"
0001734E <CLIModeSupport.ab3@573> XINCLUDE "CLIModeSupport.ab3"
00017350 <CLIModeSupport.ab3@575> XINCLUDE "CLIModeSupport.ab3"
0001736E <CLIModeSupport.ab3@576> XINCLUDE "CLIModeSupport.ab3"
00017374 <CLIModeSupport.ab3@577> XINCLUDE "CLIModeSupport.ab3"
0001739E <CLIModeSupport.ab3@578> XINCLUDE "CLIModeSupport.ab3"
000173A0 <CLIModeSupport.ab3@579> XINCLUDE "CLIModeSupport.ab3"
000173AA <CLIModeSupport.ab3@581> XINCLUDE "CLIModeSupport.ab3"
000173B0 <CLIModeSupport.ab3@582> XINCLUDE "CLIModeSupport.ab3"
000173C2 <CLIModeSupport.ab3@585> XINCLUDE "CLIModeSupport.ab3"
000173F4 <CLIModeSupport.ab3@588> XINCLUDE "CLIModeSupport.ab3"
000173FE <CLIModeSupport.ab3@590> XINCLUDE "CLIModeSupport.ab3"
00017468 <CLIModeSupport.ab3@591> XINCLUDE "CLIModeSupport.ab3"
000174D2 <CLIModeSupport.ab3@592> XINCLUDE "CLIModeSupport.ab3"
000174D8 <CLIModeSupport.ab3@598> XINCLUDE "CLIModeSupport.ab3"
00017542 <CLIModeSupport.ab3@599> XINCLUDE "CLIModeSupport.ab3"
000175AC <CLIModeSupport.ab3@600> XINCLUDE "CLIModeSupport.ab3"
000175B6 <CLIModeSupport.ab3@603> XINCLUDE "CLIModeSupport.ab3"
00017620 <CLIModeSupport.ab3@604> XINCLUDE "CLIModeSupport.ab3"
00017656 <CLIModeSupport.ab3@605> XINCLUDE "CLIModeSupport.ab3"
0001765C <CLIModeSupport.ab3@606> XINCLUDE "CLIModeSupport.ab3"
000176C6 <CLIModeSupport.ab3@608> XINCLUDE "CLIModeSupport.ab3"
000176FC <CLIModeSupport.ab3@609> XINCLUDE "CLIModeSupport.ab3"
00017704 <CLIModeSupport.ab3@612> XINCLUDE "CLIModeSupport.ab3"
00017732 <CLIModeSupport.ab3@614> XINCLUDE "CLIModeSupport.ab3"
00017736 <CLIModeSupport.ab3@615> XINCLUDE "CLIModeSupport.ab3"
0001775E <CLIModeSupport.ab3@616> XINCLUDE "CLIModeSupport.ab3"
00017764 <CLIModeSupport.ab3@619> XINCLUDE "CLIModeSupport.ab3"
0001776A <CLIModeSupport.ab3@622> XINCLUDE "CLIModeSupport.ab3"
00017770 <CLIModeSupport.ab3@623> XINCLUDE "CLIModeSupport.ab3"
00017776 <CLIModeSupport.ab3@624> XINCLUDE "CLIModeSupport.ab3"
0001777C <CLIModeSupport.ab3@625> XINCLUDE "CLIModeSupport.ab3"
00017786 <CLIModeSupport.ab3@626> XINCLUDE "CLIModeSupport.ab3"
00017790 <CLIModeSupport.ab3@627> XINCLUDE "CLIModeSupport.ab3"
000177BE <CLIModeSupport.ab3@629> XINCLUDE "CLIModeSupport.ab3"
000177EA <CLIModeSupport.ab3@631> XINCLUDE "CLIModeSupport.ab3"
000177F2 <CLIModeSupport.ab3@632> XINCLUDE "CLIModeSupport.ab3"
00017826 <CLIModeSupport.ab3@634> XINCLUDE "CLIModeSupport.ab3"
00017838 <CLIModeSupport.ab3@635> XINCLUDE "CLIModeSupport.ab3"
0001789E <CLIModeSupport.ab3@636> XINCLUDE "CLIModeSupport.ab3"
00017904 <CLIModeSupport.ab3@637> XINCLUDE "CLIModeSupport.ab3"
0001790A <CLIModeSupport.ab3@638> XINCLUDE "CLIModeSupport.ab3"
00017912 <CLIModeSupport.ab3@639> XINCLUDE "CLIModeSupport.ab3"
00017914 <CLIModeSupport.ab3@643> XINCLUDE "CLIModeSupport.ab3"
00017932 <CLIModeSupport.ab3@644> XINCLUDE "CLIModeSupport.ab3"
00017970 <CLIModeSupport.ab3@645> XINCLUDE "CLIModeSupport.ab3"
000179AE <CLIModeSupport.ab3@646> XINCLUDE "CLIModeSupport.ab3"
000179B4 <CLIModeSupport.ab3@648> XINCLUDE "CLIModeSupport.ab3"
000179BA <CLIModeSupport.ab3@649> XINCLUDE "CLIModeSupport.ab3"
000179C0 <CLIModeSupport.ab3@650> XINCLUDE "CLIModeSupport.ab3"
000179CA <CLIModeSupport.ab3@653> XINCLUDE "CLIModeSupport.ab3"
000179D0 <CLIModeSupport.ab3@654> XINCLUDE "CLIModeSupport.ab3"
000179D6 <CLIModeSupport.ab3@655> XINCLUDE "CLIModeSupport.ab3"
000179DC <CLIModeSupport.ab3@656> XINCLUDE "CLIModeSupport.ab3"
000179E2 <CLIModeSupport.ab3@657> XINCLUDE "CLIModeSupport.ab3"
000179E6 <CLIModeSupport.ab3@658> XINCLUDE "CLIModeSupport.ab3"
000179F0 <CLIModeSupport.ab3@659> XINCLUDE "CLIModeSupport.ab3"
000179F4 <CLIModeSupport.ab3@660> XINCLUDE "CLIModeSupport.ab3"
00017A1E <CLIModeSupport.ab3@662> XINCLUDE "CLIModeSupport.ab3"
00017A20 <CLIModeSupport.ab3@663> XINCLUDE "CLIModeSupport.ab3"
00017A26 <CLIModeSupport.ab3@665> XINCLUDE "CLIModeSupport.ab3"
00017A2A <CLIModeSupport.ab3@666> XINCLUDE "CLIModeSupport.ab3"
00017A30 <CLIModeSupport.ab3@668> XINCLUDE "CLIModeSupport.ab3"
00017A34 <CLIModeSupport.ab3@669> XINCLUDE "CLIModeSupport.ab3"
00017A44 <CLIModeSupport.ab3@671> XINCLUDE "CLIModeSupport.ab3"
00017A9E <CLIModeSupport.ab3@672> XINCLUDE "CLIModeSupport.ab3"
00017AB0 <CLIModeSupport.ab3@674> XINCLUDE "CLIModeSupport.ab3"
00017B1A <CLIModeSupport.ab3@675> XINCLUDE "CLIModeSupport.ab3"
00017B20 <CLIModeSupport.ab3@676> XINCLUDE "CLIModeSupport.ab3"
00017B6A <CLIModeSupport.ab3@677> XINCLUDE "CLIModeSupport.ab3"
00017B7C <CLIModeSupport.ab3@680> XINCLUDE "CLIModeSupport.ab3"
00017BA8 <CLIModeSupport.ab3@681> XINCLUDE "CLIModeSupport.ab3"
00017C4E <CLIModeSupport.ab3@682> XINCLUDE "CLIModeSupport.ab3"
00017C6C <CLIModeSupport.ab3@683> XINCLUDE "CLIModeSupport.ab3"
00017C72 <CLIModeSupport.ab3@684> XINCLUDE "CLIModeSupport.ab3"
00017C9C <CLIModeSupport.ab3@685> XINCLUDE "CLIModeSupport.ab3"
00017CA6 <CLIModeSupport.ab3@686> XINCLUDE "CLIModeSupport.ab3"
00017CD8 <CLIModeSupport.ab3@687> XINCLUDE "CLIModeSupport.ab3"
00017CF2 <CLIModeSupport.ab3@688> XINCLUDE "CLIModeSupport.ab3"
00017D06 <CLIModeSupport.ab3@693> XINCLUDE "CLIModeSupport.ab3"
00017D12 <CLIModeSupport.ab3@695> XINCLUDE "CLIModeSupport.ab3"
00017D2C <CLIModeSupport.ab3@696> XINCLUDE "CLIModeSupport.ab3"
00017D36 <CLIModeSupport.ab3@698> XINCLUDE "CLIModeSupport.ab3"
00017D50 <CLIModeSupport.ab3@700> XINCLUDE "CLIModeSupport.ab3"
00017D7A <CLIModeSupport.ab3@704> XINCLUDE "CLIModeSupport.ab3"
00017D9E <CLIModeSupport.ab3@705> XINCLUDE "CLIModeSupport.ab3"
00017DDC <CLIModeSupport.ab3@706> XINCLUDE "CLIModeSupport.ab3"
00017DE0 <CLIModeSupport.ab3@707> XINCLUDE "CLIModeSupport.ab3"
00017E1E <CLIModeSupport.ab3@709> XINCLUDE "CLIModeSupport.ab3"
00017E22 <CLIModeSupport.ab3@710> XINCLUDE "CLIModeSupport.ab3"
00017E60 <CLIModeSupport.ab3@713> XINCLUDE "CLIModeSupport.ab3"
00017E9E <CLIModeSupport.ab3@714> XINCLUDE "CLIModeSupport.ab3"
00017EA0 <CLIModeSupport.ab3@715> XINCLUDE "CLIModeSupport.ab3"
00017ED4 <CLIModeSupport.ab3@716> XINCLUDE "CLIModeSupport.ab3"
00017EDA <CLIModeSupport.ab3@718> XINCLUDE "CLIModeSupport.ab3"
00017F1E <CLIModeSupport.ab3@719> XINCLUDE "CLIModeSupport.ab3"
00017F30 <CLIModeSupport.ab3@720> XINCLUDE "CLIModeSupport.ab3"
00017F38 <CLIModeSupport.ab3@722> XINCLUDE "CLIModeSupport.ab3"
00017F3E <CLIModeSupport.ab3@723> XINCLUDE "CLIModeSupport.ab3"
00017F48 <CLIModeSupport.ab3@725> XINCLUDE "CLIModeSupport.ab3"
00017F56 <CLIModeSupport.ab3@726> XINCLUDE "CLIModeSupport.ab3"
00017F5C <CLIModeSupport.ab3@727> XINCLUDE "CLIModeSupport.ab3"
00017F84 <CLIModeSupport.ab3@728> XINCLUDE "CLIModeSupport.ab3"
00017F9E <CLIModeSupport.ab3@729> XINCLUDE "CLIModeSupport.ab3"
00017FA8 <CLIModeSupport.ab3@730> XINCLUDE "CLIModeSupport.ab3"
00017FAE <CLIModeSupport.ab3@731> XINCLUDE "CLIModeSupport.ab3"
00017FCC <CLIModeSupport.ab3@733> XINCLUDE "CLIModeSupport.ab3"
00017FD6 <CLIModeSupport.ab3@734> XINCLUDE "CLIModeSupport.ab3"
00017FDC <CLIModeSupport.ab3@735> XINCLUDE "CLIModeSupport.ab3"
00017FE2 <CLIModeSupport.ab3@736> XINCLUDE "CLIModeSupport.ab3"
00017FEC <CLIModeSupport.ab3@737> XINCLUDE "CLIModeSupport.ab3"
00017FFA <CLIModeSupport.ab3@738> XINCLUDE "CLIModeSupport.ab3"
00018000 <CLIModeSupport.ab3@739> XINCLUDE "CLIModeSupport.ab3"
00018010 <CLIModeSupport.ab3@741> XINCLUDE "CLIModeSupport.ab3"
0001803C <CLIModeSupport.ab3@742> XINCLUDE "CLIModeSupport.ab3"
00018052 <CLIModeSupport.ab3@743> XINCLUDE "CLIModeSupport.ab3"
0001805C <CLIModeSupport.ab3@744> XINCLUDE "CLIModeSupport.ab3"
00018062 <CLIModeSupport.ab3@745> XINCLUDE "CLIModeSupport.ab3"
000180BA <CLIModeSupport.ab3@747> XINCLUDE "CLIModeSupport.ab3"
00018128 <CLIModeSupport.ab3@749> XINCLUDE "CLIModeSupport.ab3"
00018140 <CLIModeSupport.ab3@750> XINCLUDE "CLIModeSupport.ab3"
00018146 <CLIModeSupport.ab3@751> XINCLUDE "CLIModeSupport.ab3"
0001817E <CLIModeSupport.ab3@752> XINCLUDE "CLIModeSupport.ab3"
000181AC <CLIModeSupport.ab3@754> XINCLUDE "CLIModeSupport.ab3"
000181D6 <CLIModeSupport.ab3@755> XINCLUDE "CLIModeSupport.ab3"
000181E0 <CLIModeSupport.ab3@757> XINCLUDE "CLIModeSupport.ab3"
00018208 <CLIModeSupport.ab3@758> XINCLUDE "CLIModeSupport.ab3"
00018232 <CLIModeSupport.ab3@759> XINCLUDE "CLIModeSupport.ab3"
000182D4 <CLIModeSupport.ab3@760> XINCLUDE "CLIModeSupport.ab3"
000182E2 <CLIModeSupport.ab3@761> XINCLUDE "CLIModeSupport.ab3"
00018332 <CLIModeSupport.ab3@762> XINCLUDE "CLIModeSupport.ab3"
00018342 <CLIModeSupport.ab3@763> XINCLUDE "CLIModeSupport.ab3"
0001840A <CLIModeSupport.ab3@764> XINCLUDE "CLIModeSupport.ab3"
0001843E <CLIModeSupport.ab3@766> XINCLUDE "CLIModeSupport.ab3"
00018472 <CLIModeSupport.ab3@767> XINCLUDE "CLIModeSupport.ab3"
000184A6 <CLIModeSupport.ab3@768> XINCLUDE "CLIModeSupport.ab3"
000184DA <CLIModeSupport.ab3@769> XINCLUDE "CLIModeSupport.ab3"
0001850E <CLIModeSupport.ab3@770> XINCLUDE "CLIModeSupport.ab3"
00018542 <CLIModeSupport.ab3@771> XINCLUDE "CLIModeSupport.ab3"
00018576 <CLIModeSupport.ab3@772> XINCLUDE "CLIModeSupport.ab3"
000185AA <CLIModeSupport.ab3@773> XINCLUDE "CLIModeSupport.ab3"
000185AC <CLIModeSupport.ab3@775> XINCLUDE "CLIModeSupport.ab3"
000185EA <CLIModeSupport.ab3@776> XINCLUDE "CLIModeSupport.ab3"
000185EE <CLIModeSupport.ab3@777> XINCLUDE "CLIModeSupport.ab3"
0001862C <CLIModeSupport.ab3@780> XINCLUDE "CLIModeSupport.ab3"
0001866A <CLIModeSupport.ab3@781> XINCLUDE "CLIModeSupport.ab3"
0001866C <CLIModeSupport.ab3@782> XINCLUDE "CLIModeSupport.ab3"
00018672 <CLIModeSupport.ab3@783> XINCLUDE "CLIModeSupport.ab3"
00018676 <CLIModeSupport.ab3@784> XINCLUDE "CLIModeSupport.ab3"
00018678 <CLIModeSupport.ab3@786> XINCLUDE "CLIModeSupport.ab3"
000186B6 <CLIModeSupport.ab3@787> XINCLUDE "CLIModeSupport.ab3"
000186F4 <CLIModeSupport.ab3@788> XINCLUDE "CLIModeSupport.ab3"
000186F6 <CLIModeSupport.ab3@789> XINCLUDE "CLIModeSupport.ab3"
000186F8 <CLIModeSupport.ab3@790> XINCLUDE "CLIModeSupport.ab3"
000186FA <CLIModeSupport.ab3@791> XINCLUDE "CLIModeSupport.ab3"
00018700 <CLIModeSupport.ab3@792> XINCLUDE "CLIModeSupport.ab3"
00018704 <CLIModeSupport.ab3@793> XINCLUDE "CLIModeSupport.ab3"
00018714 <CLIModeSupport.ab3@795> XINCLUDE "CLIModeSupport.ab3"
0001872C <CLIModeSupport.ab3@796> XINCLUDE "CLIModeSupport.ab3"
00018744 <CLIModeSupport.ab3@797> XINCLUDE "CLIModeSupport.ab3"
0001875C <CLIModeSupport.ab3@798> XINCLUDE "CLIModeSupport.ab3"
00018786 <CLIModeSupport.ab3@800> XINCLUDE "CLIModeSupport.ab3"
000187B0 <CLIModeSupport.ab3@801> XINCLUDE "CLIModeSupport.ab3"
000187DE <CLIModeSupport.ab3@803> XINCLUDE "CLIModeSupport.ab3"
000187E2 <CLIModeSupport.ab3@804> XINCLUDE "CLIModeSupport.ab3"
0001880A <CLIModeSupport.ab3@805> XINCLUDE "CLIModeSupport.ab3"
0001880C <CLIModeSupport.ab3@806> XINCLUDE "CLIModeSupport.ab3"
0001884A <CLIModeSupport.ab3@807> XINCLUDE "CLIModeSupport.ab3"
0001884E <CLIModeSupport.ab3@808> XINCLUDE "CLIModeSupport.ab3"
0001888C <CLIModeSupport.ab3@809> XINCLUDE "CLIModeSupport.ab3"
00018890 <CLIModeSupport.ab3@810> XINCLUDE "CLIModeSupport.ab3"
000188CE <CLIModeSupport.ab3@811> XINCLUDE "CLIModeSupport.ab3"
000188D2 <CLIModeSupport.ab3@812> XINCLUDE "CLIModeSupport.ab3"
00018910 <CLIModeSupport.ab3@814> XINCLUDE "CLIModeSupport.ab3"
00018914 <CLIModeSupport.ab3@815> XINCLUDE "CLIModeSupport.ab3"
0001893A <CLIModeSupport.ab3@817> XINCLUDE "CLIModeSupport.ab3"
00018960 <CLIModeSupport.ab3@818> XINCLUDE "CLIModeSupport.ab3"
00018986 <CLIModeSupport.ab3@819> XINCLUDE "CLIModeSupport.ab3"
000189AC <CLIModeSupport.ab3@820> XINCLUDE "CLIModeSupport.ab3"
000189D2 <CLIModeSupport.ab3@821> XINCLUDE "CLIModeSupport.ab3"
00018A28 <CLIModeSupport.ab3@822> XINCLUDE "CLIModeSupport.ab3"
00018A7E <CLIModeSupport.ab3@823> XINCLUDE "CLIModeSupport.ab3"
00018ACC <CLIModeSupport.ab3@824> XINCLUDE "CLIModeSupport.ab3"
00018B22 <CLIModeSupport.ab3@825> XINCLUDE "CLIModeSupport.ab3"
00018B48 <CLIModeSupport.ab3@826> XINCLUDE "CLIModeSupport.ab3"
00018B6E <CLIModeSupport.ab3@827> XINCLUDE "CLIModeSupport.ab3"
00018B94 <CLIModeSupport.ab3@828> XINCLUDE "CLIModeSupport.ab3"
00018BEA <CLIModeSupport.ab3@829> XINCLUDE "CLIModeSupport.ab3"
00018C38 <CLIModeSupport.ab3@830> XINCLUDE "CLIModeSupport.ab3"
00018C86 <CLIModeSupport.ab3@831> XINCLUDE "CLIModeSupport.ab3"
00018D40 <CLIModeSupport.ab3@832> XINCLUDE "CLIModeSupport.ab3"
00018D96 <CLIModeSupport.ab3@833> XINCLUDE "CLIModeSupport.ab3"
00018DBC <CLIModeSupport.ab3@834> XINCLUDE "CLIModeSupport.ab3"
00018DE2 <CLIModeSupport.ab3@835> XINCLUDE "CLIModeSupport.ab3"
00018E08 <CLIModeSupport.ab3@836> XINCLUDE "CLIModeSupport.ab3"
00018E5E <CLIModeSupport.ab3@837> XINCLUDE "CLIModeSupport.ab3"
00018EB4 <CLIModeSupport.ab3@838> XINCLUDE "CLIModeSupport.ab3"
00018F02 <CLIModeSupport.ab3@839> XINCLUDE "CLIModeSupport.ab3"
00018F50 <CLIModeSupport.ab3@840> XINCLUDE "CLIModeSupport.ab3"
00018F9E <CLIModeSupport.ab3@841> XINCLUDE "CLIModeSupport.ab3"
00018FEC <CLIModeSupport.ab3@842> XINCLUDE "CLIModeSupport.ab3"
0001903A <CLIModeSupport.ab3@843> XINCLUDE "CLIModeSupport.ab3"
00019088 <CLIModeSupport.ab3@844> XINCLUDE "CLIModeSupport.ab3"
000190D6 <CLIModeSupport.ab3@845> XINCLUDE "CLIModeSupport.ab3"
000190FC <CLIModeSupport.ab3@846> XINCLUDE "CLIModeSupport.ab3"
00019122 <CLIModeSupport.ab3@847> XINCLUDE "CLIModeSupport.ab3"
00019148 <CLIModeSupport.ab3@848> XINCLUDE "CLIModeSupport.ab3"
00019196 <CLIModeSupport.ab3@849> XINCLUDE "CLIModeSupport.ab3"
000191E4 <CLIModeSupport.ab3@850> XINCLUDE "CLIModeSupport.ab3"
0001923A <CLIModeSupport.ab3@851> XINCLUDE "CLIModeSupport.ab3"
00019288 <CLIModeSupport.ab3@852> XINCLUDE "CLIModeSupport.ab3"
000192D6 <CLIModeSupport.ab3@853> XINCLUDE "CLIModeSupport.ab3"
00019324 <CLIModeSupport.ab3@854> XINCLUDE "CLIModeSupport.ab3"
0001934A <CLIModeSupport.ab3@855> XINCLUDE "CLIModeSupport.ab3"
00019370 <CLIModeSupport.ab3@856> XINCLUDE "CLIModeSupport.ab3"
00019396 <CLIModeSupport.ab3@857> XINCLUDE "CLIModeSupport.ab3"
000193CE <CLIModeSupport.ab3@858> XINCLUDE "CLIModeSupport.ab3"
000193F6 <CLIModeSupport.ab3@859> XINCLUDE "CLIModeSupport.ab3"
0001940A <CLIModeSupport.ab3@860> XINCLUDE "CLIModeSupport.ab3"
0001947E <CLIModeSupport.ab3@861> XINCLUDE "CLIModeSupport.ab3"
000194C4 <CLIModeSupport.ab3@862> XINCLUDE "CLIModeSupport.ab3"
00019572 <CLIModeSupport.ab3@863> XINCLUDE "CLIModeSupport.ab3"
000195DE <CLIModeSupport.ab3@864> XINCLUDE "CLIModeSupport.ab3"
000195EE <CLIModeSupport.ab3@865> XINCLUDE "CLIModeSupport.ab3"
00019614 <CLIModeSupport.ab3@867> XINCLUDE "CLIModeSupport.ab3"
0001961E <CLIModeSupport.ab3@869> XINCLUDE "CLIModeSupport.ab3"
00019648 <CLIModeSupport.ab3@870> XINCLUDE "CLIModeSupport.ab3"
0001964E <CLIModeSupport.ab3@871> XINCLUDE "CLIModeSupport.ab3"
0001965E <CLIModeSupport.ab3@873> XINCLUDE "CLIModeSupport.ab3"
000196FE <CLIModeSupport.ab3@875> XINCLUDE "CLIModeSupport.ab3"
0001973E <CLIModeSupport.ab3@876> XINCLUDE "CLIModeSupport.ab3"
00019744 <CLIModeSupport.ab3@878> XINCLUDE "CLIModeSupport.ab3"
000197A6 <CLIModeSupport.ab3@879> XINCLUDE "CLIModeSupport.ab3"
000197B0 <CLIModeSupport.ab3@881> XINCLUDE "CLIModeSupport.ab3"
000197BA <CLIModeSupport.ab3@883> XINCLUDE "CLIModeSupport.ab3"
000197D4 <CLIModeSupport.ab3@884> XINCLUDE "CLIModeSupport.ab3"
000197F6 <CLIModeSupport.ab3@940> XINCLUDE "CLIModeSupport.ab3"
00019818 <CLIModeSupport.ab3@941> XINCLUDE "CLIModeSupport.ab3"
00019872 <CLIModeSupport.ab3@942> XINCLUDE "CLIModeSupport.ab3"
00019894 <CLIModeSupport.ab3@943> XINCLUDE "CLIModeSupport.ab3"
000198EE <CLIModeSupport.ab3@944> XINCLUDE "CLIModeSupport.ab3"
00019930 <CLIModeSupport.ab3@945> XINCLUDE "CLIModeSupport.ab3"
00019936 <CLIModeSupport.ab3@947> XINCLUDE "CLIModeSupport.ab3"
00019944 <CLIModeSupport.ab3@948> XINCLUDE "CLIModeSupport.ab3"
0001994A <CLIModeSupport.ab3@950> XINCLUDE "CLIModeSupport.ab3"
0001995E <CLIModeSupport.ab3@951> XINCLUDE "CLIModeSupport.ab3"
00019968 <CLIModeSupport.ab3@952> XINCLUDE "CLIModeSupport.ab3"
000199E2 <CLIModeSupport.ab3@953> XINCLUDE "CLIModeSupport.ab3"
000199EC <CLIModeSupport.ab3@954> XINCLUDE "CLIModeSupport.ab3"
000199F2 <CLIModeSupport.ab3@955> XINCLUDE "CLIModeSupport.ab3"
00019A06 <CLIModeSupport.ab3@958> XINCLUDE "CLIModeSupport.ab3"
00019A10 <CLIModeSupport.ab3@959> XINCLUDE "CLIModeSupport.ab3"
00019A90 <CLIModeSupport.ab3@960> XINCLUDE "CLIModeSupport.ab3"
00019A9A <CLIModeSupport.ab3@961> XINCLUDE "CLIModeSupport.ab3"
00019AA0 <CLIModeSupport.ab3@962> XINCLUDE "CLIModeSupport.ab3"
00019AB4 <CLIModeSupport.ab3@965> XINCLUDE "CLIModeSupport.ab3"
00019ABE <CLIModeSupport.ab3@966> XINCLUDE "CLIModeSupport.ab3"
00019B06 <CLIModeSupport.ab3@967> XINCLUDE "CLIModeSupport.ab3"
00019B10 <CLIModeSupport.ab3@969> XINCLUDE "CLIModeSupport.ab3"
00019B16 <CLIModeSupport.ab3@970> XINCLUDE "CLIModeSupport.ab3"
00019B2A <CLIModeSupport.ab3@973> XINCLUDE "CLIModeSupport.ab3"
00019B34 <CLIModeSupport.ab3@974> XINCLUDE "CLIModeSupport.ab3"
00019B7C <CLIModeSupport.ab3@975> XINCLUDE "CLIModeSupport.ab3"
00019B86 <CLIModeSupport.ab3@976> XINCLUDE "CLIModeSupport.ab3"
00019B8C <CLIModeSupport.ab3@977> XINCLUDE "CLIModeSupport.ab3"
00019BA0 <CLIModeSupport.ab3@980> XINCLUDE "CLIModeSupport.ab3"
00019BC6 <CLIModeSupport.ab3@981> XINCLUDE "CLIModeSupport.ab3"
00019BDA <CLIModeSupport.ab3@984> XINCLUDE "CLIModeSupport.ab3"
00019C00 <CLIModeSupport.ab3@985> XINCLUDE "CLIModeSupport.ab3"
00019C14 <CLIModeSupport.ab3@988> XINCLUDE "CLIModeSupport.ab3"
00019C3A <CLIModeSupport.ab3@989> XINCLUDE "CLIModeSupport.ab3"
00019C4E <CLIModeSupport.ab3@992> XINCLUDE "CLIModeSupport.ab3"
00019C58 <CLIModeSupport.ab3@993> XINCLUDE "CLIModeSupport.ab3"
00019C86 <CLIModeSupport.ab3@994> XINCLUDE "CLIModeSupport.ab3"
00019CD6 <CLIModeSupport.ab3@995> XINCLUDE "CLIModeSupport.ab3"
00019CF6 <CLIModeSupport.ab3@996> XINCLUDE "CLIModeSupport.ab3"
00019D0E <CLIModeSupport.ab3@997> XINCLUDE "CLIModeSupport.ab3"
00019DF2 <CLIModeSupport.ab3@998> XINCLUDE "CLIModeSupport.ab3"
00019DFC <CLIModeSupport.ab3@999> XINCLUDE "CLIModeSupport.ab3"
00019E02 <CLIModeSupport.ab3@1000> XINCLUDE "CLIModeSupport.ab3"
00019E04 <CLIModeSupport.ab3@1002> XINCLUDE "CLIModeSupport.ab3"
00019E18 <CLIModeSupport.ab3@1003> XINCLUDE "CLIModeSupport.ab3"
00019E4A <CLIModeSupport.ab3@1006> XINCLUDE "CLIModeSupport.ab3"
00019E50 <CLIModeSupport.ab3@1007> XINCLUDE "CLIModeSupport.ab3"
00019E94 <CLIModeSupport.ab3@1008> XINCLUDE "CLIModeSupport.ab3"
00019EA6 <CLIModeSupport.ab3@1009> XINCLUDE "CLIModeSupport.ab3"
00019EB8 <CLIModeSupport.ab3@1010> XINCLUDE "CLIModeSupport.ab3"
00019EC2 <CLIModeSupport.ab3@1011> XINCLUDE "CLIModeSupport.ab3"
00019EC8 <CLIModeSupport.ab3@1012> XINCLUDE "CLIModeSupport.ab3"
00019ED2 <CLIModeSupport.ab3@1014> XINCLUDE "CLIModeSupport.ab3"
00019EEC <CLIModeSupport.ab3@1015> XINCLUDE "CLIModeSupport.ab3"
00019EEC <AmiBlitz3.ab3@95> XINCLUDE "CLIModeSupport.ab3"
00019F6C <AmiBlitz3.ab3@100> dynassign.s = dos_GetToolString{"ASSIGN",default_assign$}       ; replaced hardcoded path  tomsmart1 2012 03 09
00019FA4 <AmiBlitz3.ab3@101> If dynassign <> ""
00019FBA <AmiBlitz3.ab3@102>     *AssignSema.SignalSemaphore = FindSemaphore_(&dynassign)    ; does it already exist?
00019FC4 <AmiBlitz3.ab3@103>     If *AssignSema
00019FD4 <AmiBlitz3.ab3@104>       ObtainSemaphoreShared_ *AssignSema
00019FDA <AmiBlitz3.ab3@105>     Else                                                        ; no, create one...
00019FFA <AmiBlitz3.ab3@106>       *AssignSema = AllocVec_ (SizeOf.SignalSemaphore,#MEMF_PUBLIC|#MEMF_CLEAR)
0001A004 <AmiBlitz3.ab3@107>       If *AssignSema
0001A014 <AmiBlitz3.ab3@108>         InitSemaphore_ *AssignSema
0001A048 <AmiBlitz3.ab3@110>         *AssignSema\ss_Link\ln_Name = AllocVec_(FLen(dynassign)+1,#MEMF_PUBLIC|#MEMF_CLEAR)
0001A05A <AmiBlitz3.ab3@111>         If *AssignSema\ss_Link\ln_Name
0001A096 <AmiBlitz3.ab3@112>           Poke.s  *AssignSema\ss_Link\ln_Name,dynassign
0001A0A2 <AmiBlitz3.ab3@114>         *AssignSema\ss_Link\ln_Pri  = 1
0001A0AE <AmiBlitz3.ab3@115>         *AssignSema\ss_Link\ln_Type = #NT_SIGNALSEM
0001A0BE <AmiBlitz3.ab3@117>         AddSemaphore_ *AssignSema
0001A0CE <AmiBlitz3.ab3@118>         ObtainSemaphoreShared_ *AssignSema
0001A11A <AmiBlitz3.ab3@124>   mydir.s = dos_GetProgDir{"Sys:"}
0001A17A <AmiBlitz3.ab3@125>   If dos_SetAssign{dynassign,mydir,False}
0001A20E <AmiBlitz3.ab3@126>     dos_AddAssign{"LIBS:",dos_AddPart{dynassign,"Libs"}}
0001A246 <AmiBlitz3.ab3@129>   Poke$ ?str_blitz3assign,dynassign
0001A2C8 <AmiBlitz3.ab3@130>   Poke$ ?str_defaultdbug,dos_AddPart{dynassign,"Debug/DefaultDBug"}
0001A34A <AmiBlitz3.ab3@133>   Poke$ ?str_path_acidlibs,dos_AddPart{dynassign, "BlitzLibs/AcidLibs"}
0001A3CC <AmiBlitz3.ab3@134>   Poke$ ?str_path_deflibs ,dos_AddPart{dynassign, "BlitzLibs/DefLibs" }
0001A44E <AmiBlitz3.ab3@135>   Poke$ ?str_path_userlibs,dos_AddPart{dynassign, "BlitzLibs/UserLibs"}
0001A4D0 <AmiBlitz3.ab3@136>   Poke$ ?str_path_includes,dos_AddPart{dynassign, "Sourcecodes/Includes"}
0001A544 <AmiBlitz3.ab3@137>   my_systemdir$    = dos_AddPart{dynassign, "System"}
0001A5B8 <AmiBlitz3.ab3@138>   my_residentsdir$ = dos_AddPart{dynassign, "BlitzLibs/Residents"}
0001A62C <AmiBlitz3.ab3@139>   my_blitzlibsdir$ = dos_AddPart{dynassign, "BlitzLibs"}
0001A65A <AmiBlitz3.ab3@140>   dos_CreateDir{my_blitzlibsdir$}
0001A67E <AmiBlitz3.ab3@141>   dos_CreateDir{Peek$(?str_path_userlibs)}
0001A6AC <AmiBlitz3.ab3@142>   dos_CreateDir{my_residentsdir$}
0001A6DA <AmiBlitz3.ab3@143>   dos_CreateDir{my_systemdir$}
0001A7A4 <AmiBlitz3.ab3@149> pedfile$ = dos_GetToolString{"EDITOR",dos_AddPart{my_systemdir$,"PED"}}
0001A7DC <AmiBlitz3.ab3@150> Poke.s ?str_pedfile,pedfile$
0001A81A <AmiBlitz3.ab3@152> If dos_GetToolState{"START_WITHOUT_LIBS"} = -1
0001A82A <AmiBlitz3.ab3@153>   Poke.b ?start_without_libs,1
0001A830 <AmiBlitz3.ab3@154> Else
0001A840 <AmiBlitz3.ab3@155>   Poke.b ?start_without_libs,0
0001A866 <AmiBlitz3.ab3@158> !TRANS_INIT{"AmiBlitz3"}     ; init localization via translation.include
0001A872 <AmiBlitz3.ab3@162> dbg_fid.l = -1 ; no debug file id yet!
0001A87C <AmiBlitz3.ab3@164> If CLIMode
0001A882 <AmiBlitz3.ab3@167>   err.l      = False                                       ; indicate that an error has occured
0001A888 <AmiBlitz3.ab3@168>   showhelp.l = False                                       ; show the CLI tool's help
0001A8E0 <AmiBlitz3.ab3@171>   cli_progpath.s     = dos_GetProgDir{default_assign$}     ; replaced hardcoded path  tomsmart1 2012 03 09
0001A908 <AmiBlitz3.ab3@172>   cli_sourcefile.s   = ""
0001A930 <AmiBlitz3.ab3@173>   cli_exefile.s      = ""
0001A958 <AmiBlitz3.ab3@174>   cli_savefile.s     = ""
0001A980 <AmiBlitz3.ab3@175>   cli_dumpfile.s     = ""
0001A9A8 <AmiBlitz3.ab3@176>   cli_includepath.s  = ""
0001A9D0 <AmiBlitz3.ab3@177>   cli_blitzlibpath.s = ""
0001A9D6 <AmiBlitz3.ab3@178>   cli_debuginfo.l    = False
0001A9DC <AmiBlitz3.ab3@179>   cli_run.l          = False
0001A9E4 <AmiBlitz3.ab3@180>   cli_dumpflags.l    = $FFFFFFFF
0001AA0C <AmiBlitz3.ab3@181>   cli_info.s         = ""
0001AA12 <AmiBlitz3.ab3@182>   cli_release.l      = False
0001AA1C <AmiBlitz3.ab3@183>   cli_numargs.l      = dos_GetNumArgs{}
0001AA22 <AmiBlitz3.ab3@184>   cli_gui.l          = False
0001AA2A <AmiBlitz3.ab3@185>   cli_dumpform.l     = 1 ; 0 = bin, 1 = ASCII
0001AA32 <AmiBlitz3.ab3@186>   cli_verbose.l      = 1
0001AA4A <AmiBlitz3.ab3@187>   If cli_numargs=0 Then showhelp=True
0001AA7A <AmiBlitz3.ab3@191>     arg.s = dos_GetNextArg{}                               ; get the next CLI argument
0001AAC6 <AmiBlitz3.ab3@192>     larg.s = LCase$(arg)                                   ; lower case the option string
0001AB8E <AmiBlitz3.ab3@193>     If Left$(larg,1)="-" Then larg = Right$(larg,FLen(larg)-1)
0001ABC4 <AmiBlitz3.ab3@194>     Select larg
0001AC10 <AmiBlitz3.ab3@195>       Case "s" : larg="source"
0001AC62 <AmiBlitz3.ab3@196>       Case "e" : larg="exe"
0001ACB4 <AmiBlitz3.ab3@197>       Case "d" : larg="debug"
0001AD06 <AmiBlitz3.ab3@198>       Case "r" : larg="release"
0001AD58 <AmiBlitz3.ab3@199>       Case "h" : larg="help"
0001ADAA <AmiBlitz3.ab3@200>       Case "v" : larg="verbose"
0001ADB8 <AmiBlitz3.ab3@201>     End Select
0001ADEE <AmiBlitz3.ab3@203>     Select larg
0001AE42 <AmiBlitz3.ab3@204>       Case "exe"      : cli_exefile     = dos_GetNextArg{}
0001AE9C <AmiBlitz3.ab3@205>       Case "source"   : cli_sourcefile  = dos_GetNextArg{}
0001AEF6 <AmiBlitz3.ab3@206>       Case "save"     : cli_savefile    = dos_GetNextArg{}
0001AF26 <AmiBlitz3.ab3@207>       Case "debug"    : cli_debuginfo   = True
0001AF56 <AmiBlitz3.ab3@208>       Case "run"      : cli_run         = True
0001AF86 <AmiBlitz3.ab3@209>       Case "release"  : cli_release     = True
0001AFB6 <AmiBlitz3.ab3@210>       Case "ped"      : cli_gui         = True
0001B010 <AmiBlitz3.ab3@211>       Case "dform"    : cli_dumpform.l  = Vallong(dos_GetNextArg{})
0001B082 <AmiBlitz3.ab3@212>       Case "dump"     : cli_info        = LCase$(dos_GetNextArg{})
0001B0B2 <AmiBlitz3.ab3@213>                         cli_dumpfile    = dos_GetNextArg{}
0001B0BA <AmiBlitz3.ab3@214>                         cli_dumpflags   = $0
0001B11A <AmiBlitz3.ab3@215>                         If Instr(cli_info,"all"  ) Then cli_dumpflags | $FFFFFFFF
0001B17A <AmiBlitz3.ab3@216>                         If Instr(cli_info,"token") Then cli_dumpflags | #DUMPFLG_TOKENS
0001B1DA <AmiBlitz3.ab3@217>                         If Instr(cli_info,"label") Then cli_dumpflags | #DUMPFLG_LABELS
0001B23A <AmiBlitz3.ab3@218>                         If Instr(cli_info,"var"  ) Then cli_dumpflags | #DUMPFLG_VARS
0001B29A <AmiBlitz3.ab3@219>                         If Instr(cli_info,"const") Then cli_dumpflags | #DUMPFLG_CONSTANTS
0001B2FA <AmiBlitz3.ab3@220>                         If Instr(cli_info,"func" ) Then cli_dumpflags | #DUMPFLG_FUNCTIONS
0001B35A <AmiBlitz3.ab3@221>                         If Instr(cli_info,"macro") Then cli_dumpflags | #DUMPFLG_MACROS
0001B3BA <AmiBlitz3.ab3@222>                         If Instr(cli_info,"type" ) Then cli_dumpflags | #DUMPFLG_NEWTYPES
0001B41A <AmiBlitz3.ab3@223>                         If Instr(cli_info,"lib"  ) Then cli_dumpflags | #DUMPFLG_LIBS
0001B42C <AmiBlitz3.ab3@224>                         If cli_dumpflags = $0
0001B432 <AmiBlitz3.ab3@225>                          err=True
0001B4C6 <AmiBlitz3.ab3@226>                          NPrint "\\1b[1m*** ERROR: Invalid flags for dumpfile \\22",cli_info,"\\22 specified!\\1b[0m"
0001B520 <AmiBlitz3.ab3@228>       Case "verbose"  : cli_verbose     = Vallong(dos_GetNextArg{})
0001B550 <AmiBlitz3.ab3@229>       Case "h"        : showhelp        = True             ; show the help and quit
0001B556 <AmiBlitz3.ab3@230>       Default
0001B58E <AmiBlitz3.ab3@231>         If arg><""
0001B622 <AmiBlitz3.ab3@232>           NPrint "\\1b[1m*** ERROR: Unknown option \\22",arg,"\\22 specified!\\1b[0m"
0001B628 <AmiBlitz3.ab3@233>           err = True
0001B636 <AmiBlitz3.ab3@235>     End Select
0001B682 <AmiBlitz3.ab3@236>   Until arg = "" OR err=True          ; until we processed all arguments
0001B6A4 <AmiBlitz3.ab3@239>   If err><False OR showhelp = True
0001B6AE <AmiBlitz3.ab3@240>     If showhelp
0001B710 <AmiBlitz3.ab3@241>     NPrint "AmiBlitz ",Peek.s(?myversion)
0001B748 <AmiBlitz3.ab3@242>     NPrint "\\nSyntax: AmiBlitz3 [options]"
0001B780 <AmiBlitz3.ab3@243>     NPrint "\\nOptions:"
0001B7B8 <AmiBlitz3.ab3@244>     NPrint "  -(s)ource <file>    : input source code filename (bb2, ab2 or ab3)"
0001B7F0 <AmiBlitz3.ab3@245>     NPrint "  -(e)xe <file>       : output executable filename"
0001B828 <AmiBlitz3.ab3@246>     NPrint "  -(d)ebug            : compile with debug info"
0001B860 <AmiBlitz3.ab3@247>     NPrint "  -(r)elease          : create release executable (size optimized)"
0001B898 <AmiBlitz3.ab3@248>     NPrint "  -run                : run compiled program"
0001B8D0 <AmiBlitz3.ab3@249>     NPrint "  -dump <info> <file> : dump compiler internals to file"
0001B908 <AmiBlitz3.ab3@250>     NPrint "                        (info=all|token|label|var|func|const|macro|type|lib)"
0001B940 <AmiBlitz3.ab3@251>     NPrint "  -dform <n>          : format of compiler internals dump (0=bin, 1=ASCII; default=1)"
0001B978 <AmiBlitz3.ab3@252>     NPrint "  -PED                : start AmiBlitz3 IDE (PED)"
0001B9B0 <AmiBlitz3.ab3@253>     NPrint "  -save <file>        : re-save source code (convert format, if needed)"
0001B9E8 <AmiBlitz3.ab3@254>     NPrint "  -(v)erbose <n>      : set verbose level (0, 1 or 2; default=1)"
0001BA20 <AmiBlitz3.ab3@255>     NPrint "  -(h)elp             : show this help"
0001BA58 <AmiBlitz3.ab3@256>     NPrint "\\nExample:"
0001BA90 <AmiBlitz3.ab3@257>     NPrint "  AmiBlitz3 -s \\22DH0:Sourcecodes/MyProgram.ab3\\22 -e RAM:MyProgram.exe"
0001BAC8 <AmiBlitz3.ab3@258>     NPrint "\\nNote: To start the AmiBlitz3 IDE, run from Workbench or with -PED option."
0001BACE <AmiBlitz3.ab3@261>     Goto abnormal_exit
0001BAEA <AmiBlitz3.ab3@264>   If cli_gui        Then CLIMode = False : error_SetFlags{#error_requester}
0001BB4E <AmiBlitz3.ab3@265>   If cli_sourcefile Then Poke.s ?str_tempfilename,cli_sourcefile
0001BB5E <AmiBlitz3.ab3@268> Poke.l ?CLIMode,CLIMode
0001BB82 <AmiBlitz3.ab3@299>   Dim incdim.s (#maxincludes)
0001BBA6 <AmiBlitz3.ab3@300>   Dim incline.l(#maxincludes)
0001BBC0 <AmiBlitz3.ab3@568> Function.s Get_Libinfo{addr_libnum.l}
0001BBCC <AmiBlitz3.ab3@570>   lib_ab2.b = False : lib_os.b = False
0001BBD2 <AmiBlitz3.ab3@571>   addr_counter.l = addr_libnum
0001BBDA <AmiBlitz3.ab3@572>   skip.l = 0
0001BBEC <AmiBlitz3.ab3@573>   If addr_counter=0
0001BC26 <AmiBlitz3.ab3@574>     error{"INTERNAL: \\__THIS_FUNCTION: Invalid pointer!"}
0001BC44 <AmiBlitz3.ab3@575>     Function Return ""
0001BC52 <AmiBlitz3.ab3@580>     mem.l = Peek.l(addr_counter)
0001BC60 <AmiBlitz3.ab3@585>     addr_counter + 2
0001BC80 <AmiBlitz3.ab3@586>     If (mem = $0000ffff) Then lib_ab2= True : skip = 8
0001BC9A <AmiBlitz3.ab3@587>     If (mem LSR 16) = $ffe2
0001BCA0 <AmiBlitz3.ab3@589>       lib_os = True
0001BCA8 <AmiBlitz3.ab3@590>       skip = 10
0001BCEE <AmiBlitz3.ab3@591>       If Peek$(addr_counter+skip) = "" Then skip + 4
0001BD32 <AmiBlitz3.ab3@593>   Until (lib_ab2=True OR lib_os = True) OR (addr_counter>addr_libnum + $400)
0001BD48 <AmiBlitz3.ab3@595>   If (addr_counter>addr_libnum + $400)
0001BD66 <AmiBlitz3.ab3@597>     Function Return ""
0001BD6C <AmiBlitz3.ab3@598>   Else
0001BD90 <AmiBlitz3.ab3@599>     Function Return Peek$(addr_counter + skip)
0001BD9A <AmiBlitz3.ab3@601> End Function
0001BDB8 <AmiBlitz3.ab3@641>   !asm
0001BDBE <AmiBlitz3.ab3@642>   MOVEA.l _execbase,A6
0001BDC2 <AmiBlitz3.ab3@643>   MOVEM.l d0/a0,-(a7)
0001BDC4 <AmiBlitz3.ab3@645>   MOVEQ #127,d0
0001BDCA <AmiBlitz3.ab3@646>   LEA chartab,a0
0001BDD0 <AmiBlitz3.ab3@649>     MOVE.b #1,128(a0)
0001BDD2 <AmiBlitz3.ab3@650>     CLR.b (a0)+
0001BDD6 <AmiBlitz3.ab3@651>   DBF d0,'l12
0001BDDC <AmiBlitz3.ab3@653>   LEA chartab,a0
0001BDE0 <AmiBlitz3.ab3@654>   MOVE.b #1,(a0)
0001BDE6 <AmiBlitz3.ab3@655>   MOVE.b #1,","(a0)
0001BDEC <AmiBlitz3.ab3@656>   MOVE.b #1,";"(a0)
0001BDF2 <AmiBlitz3.ab3@657>   MOVE.b #1,":"(a0)
0001BDF8 <AmiBlitz3.ab3@658>   MOVE.b #1,"("(a0)
0001BDFE <AmiBlitz3.ab3@659>   MOVE.b #1,")"(a0)
0001BE04 <AmiBlitz3.ab3@660>   MOVE.b #1,"="(a0)
0001BE0A <AmiBlitz3.ab3@661>   MOVE.b #1,"+"(a0)
0001BE10 <AmiBlitz3.ab3@662>   MOVE.b #1,"-"(a0)
0001BE16 <AmiBlitz3.ab3@663>   MOVE.b #1,"*"(a0)
0001BE1C <AmiBlitz3.ab3@664>   MOVE.b #1,"/"(a0)
0001BE22 <AmiBlitz3.ab3@665>   MOVE.b #1,"$"(a0)
0001BE28 <AmiBlitz3.ab3@666>   MOVE.b #1,"%"(a0)
0001BE2E <AmiBlitz3.ab3@667>   MOVE.b #1,"."(a0)
0001BE34 <AmiBlitz3.ab3@668>   MOVE.b #1,"["(a0)
0001BE3A <AmiBlitz3.ab3@669>   MOVE.b #1,"]"(a0)
0001BE40 <AmiBlitz3.ab3@670>   MOVE.b #1,"{"(a0)
0001BE46 <AmiBlitz3.ab3@671>   MOVE.b #1,"}"(a0)
0001BE4C <AmiBlitz3.ab3@672>   MOVE.b #1,"\"(a0)
0001BE52 <AmiBlitz3.ab3@673>   MOVE.b #1,">"(a0)
0001BE58 <AmiBlitz3.ab3@674>   MOVE.b #1,"<"(a0)
0001BE5E <AmiBlitz3.ab3@675>   MOVE.b #1,"&"(a0)
0001BE64 <AmiBlitz3.ab3@676>   MOVE.b #1,"|"(a0)
0001BE6A <AmiBlitz3.ab3@677>   MOVE.b #1,"^"(a0)
0001BE70 <AmiBlitz3.ab3@678>   MOVE.b #1,$7e(a0)
0001BE76 <AmiBlitz3.ab3@679>   MOVE.w #$0101,1(a0)
0001BE7C <AmiBlitz3.ab3@681>   LEA instrtab,a0
0001BE82 <AmiBlitz3.ab3@682>   MOVE.l #labelhash-instrtab,d0
0001BE84 <AmiBlitz3.ab3@683>   ASR.l #2,d0
0001BE86 <AmiBlitz3.ab3@684>   SUBQ.l #1,d0
0001BE88 <AmiBlitz3.ab3@687>    CLR.l (a0)+
0001BE8A <AmiBlitz3.ab3@688>    SUBQ.l #1,d0
0001BE8E <AmiBlitz3.ab3@689>   BNE 'l10
0001BE94 <AmiBlitz3.ab3@691>   LEA allowtab,a0
0001BE9A <AmiBlitz3.ab3@692>   MOVE.l #255,d0
0001BE9C <AmiBlitz3.ab3@695>     CLR.b (a0)+
0001BEA0 <AmiBlitz3.ab3@696>   DBF d0,'la1
0001BEA6 <AmiBlitz3.ab3@698>   LEA allowtab,a0
0001BEAC <AmiBlitz3.ab3@699>   MOVE.b #1,$7d(a0)
0001BEB2 <AmiBlitz3.ab3@700>   MOVE.b #1,$7c(a0)
0001BEB8 <AmiBlitz3.ab3@701>   MOVE.b #1,$44(a0)
0001BEBE <AmiBlitz3.ab3@702>   MOVE.b #1,$45(a0)
0001BEC4 <AmiBlitz3.ab3@703>   MOVE.b #1,$b9(a0)
0001BECA <AmiBlitz3.ab3@704>   MOVE.b #1,$89(a0)
0001BED0 <AmiBlitz3.ab3@705>   MOVE.b #1,$ce(a0)
0001BED6 <AmiBlitz3.ab3@706>   MOVE.b #1,$cf(a0)
0001BEDC <AmiBlitz3.ab3@707>   MOVE.b #1,$d0(a0)
0001BEE2 <AmiBlitz3.ab3@708>   MOVE.b #1,$cd(a0)
0001BEE4 <AmiBlitz3.ab3@709>   MOVEQ #0,d0
0001BEEA <AmiBlitz3.ab3@711>   MOVEA.l _execbase,a6
0001BEF0 <AmiBlitz3.ab3@716>   MOVE.l #$10000,d0
0001BEF6 <AmiBlitz3.ab3@717>   MOVE.l #80000,d1
0001BEF8 <AmiBlitz3.ab3@718>   MOVE.l d1,d2
0001BEFC <AmiBlitz3.ab3@719>   JSR _CreatePool(a6)                                      ; alloc memory for own stuff
0001BF02 <AmiBlitz3.ab3@720>   MOVE.l d0,mempool
0001BF06 <AmiBlitz3.ab3@721>   MOVEM.l (a7)+,d0/a0
0001BF0C <AmiBlitz3.ab3@722>   TST.l mempool
0001BF10 <AmiBlitz3.ab3@723>   BEQ shutdown_compiler
0001BF14 <AmiBlitz3.ab3@725>   MOVEA.l $114(A6),A4                                      ; get adress of this.Task-Structure
0001BF1A <AmiBlitz3.ab3@726>   MOVE.l A4,ptr_ThisTask
0001BF1E <AmiBlitz3.ab3@728>   BSR.w open_doslibrary
0001BF22 <AmiBlitz3.ab3@729>   BEQ.w shutdown_compiler
0001BF28 <AmiBlitz3.ab3@731>   MOVE.l D2,stacksize
0001BF2A <AmiBlitz3.ab3@735>   MOVEQ.l #$00,D0
0001BF30 <AmiBlitz3.ab3@736>   LEA tokens,A0
0001BF32 <AmiBlitz3.ab3@739>     ADDQ.w #1,D0
0001BF34 <AmiBlitz3.ab3@740>     MOVE.l (A0),D1
0001BF38 <AmiBlitz3.ab3@741>     BEQ.w JL_0_2D1C
0001BF3A <AmiBlitz3.ab3@742>     MOVEA.l D1,A0
0001BF3E <AmiBlitz3.ab3@743> BRA.w JL_0_2D0E
0001BF44 <AmiBlitz3.ab3@746>   MOVE.l A0,end_of_tokenlist
0001BF48 <AmiBlitz3.ab3@748>   BSR.w makeasmtable
0001BF50 <AmiBlitz3.ab3@749>   MOVE.w #$FFFF,returncode_org                             ;#-1,returncode
0001BF54 <AmiBlitz3.ab3@751>   BSR.w open_mathlibrary
0001BF58 <AmiBlitz3.ab3@752>   BEQ.w freemem_and_quit4
0001BF5E <AmiBlitz3.ab3@754>   MOVE.l constmaxpc,D0
0001BF60 <AmiBlitz3.ab3@755>   MOVEQ.l #$02,D1                                          ;chipmem            ;01 org source
0001BF66 <AmiBlitz3.ab3@756>   MOVEA.l _execbase,A6
0001BF6A <AmiBlitz3.ab3@757>   JSR _AllocMem(A6)                                        ;mem for branch routine
0001BF70 <AmiBlitz3.ab3@758>   MOVE.l D0,constpcat
0001BF74 <AmiBlitz3.ab3@759>   BEQ.w freemem_and_quit3
0001BF7A <AmiBlitz3.ab3@760>   ADD.l constmaxpc,D0
0001BF80 <AmiBlitz3.ab3@761>   MOVE.l D0,constlibat
0001BF86 <AmiBlitz3.ab3@763>   MOVE.l macrobuffer_size,D0
0001BF8C <AmiBlitz3.ab3@764>   CMP.l #40000,d0
0001BF90 <AmiBlitz3.ab3@765>   BGE 'ok
0001BF96 <AmiBlitz3.ab3@766>     MOVE.l #40000,d0
0001BF9C <AmiBlitz3.ab3@767>     MOVE.l d0,macrobuffer_size
0001BF9E <AmiBlitz3.ab3@770>   ADDQ.l #4,d0
0001BFA0 <AmiBlitz3.ab3@771>   MOVEQ.l #$01,D1
0001BFA6 <AmiBlitz3.ab3@772>   MOVEA.l _execbase,A6
0001BFAA <AmiBlitz3.ab3@773>   JSR _AllocMem(A6)                                        ;macro mem
0001BFAC <AmiBlitz3.ab3@774>   MOVE.l d0,a0
0001BFB2 <AmiBlitz3.ab3@775>   MOVE.l macrobuffer_size,(a0)+
0001BFB4 <AmiBlitz3.ab3@776>   MOVE.l a0,d0
0001BFBA <AmiBlitz3.ab3@777>   MOVE.l D0,ptr_macrobuffer_begin
0001BFBE <AmiBlitz3.ab3@778>   BEQ.w freemem_and_quit2
0001BFC4 <AmiBlitz3.ab3@779>   ADD.l macrobuffer_size,D0
0001BFCA <AmiBlitz3.ab3@780>   MOVE.l D0,ptr_macrobuffer_end
0001BFD0 <AmiBlitz3.ab3@782>   TST.l CLIMode
0001BFD4 <AmiBlitz3.ab3@783>   BEQ load_ped
0001BFFE <AmiBlitz3.ab3@786>   !basic
0001C008 <AmiBlitz3.ab3@787>   succ.l = InitEmulatedPED{}
0001C00C <AmiBlitz3.ab3@788>   GetD0 succ
0001C02A <AmiBlitz3.ab3@789>   !asm
0001C02C <AmiBlitz3.ab3@790>   TST.l d0
0001C030 <AmiBlitz3.ab3@791>   BEQ freemem_and_quit
0001C036 <AmiBlitz3.ab3@792> JMP skip_ped
0001C03C <AmiBlitz3.ab3@797>   MOVE.l #str_pedfile,D1                                   ; Load PED
0001C042 <AmiBlitz3.ab3@798>   MOVEA.l _dosbase,A6
0001C046 <AmiBlitz3.ab3@799>   JSR _LoadSeg(A6)
0001C04C <AmiBlitz3.ab3@800>   MOVE.l D0,ptr_seg_ped
0001C050 <AmiBlitz3.ab3@802>   BEQ.w cant_load_PED         ; was freemem_and_quit  added error massage  that we can't load it  tomsmart1  2012 03
0001C052 <AmiBlitz3.ab3@806>   MOVEA.l D0,A2
0001C054 <AmiBlitz3.ab3@807>   ADDA.l A2,A2
0001C056 <AmiBlitz3.ab3@808>   ADDA.l A2,A2
0001C05C <AmiBlitz3.ab3@810>   LEA teddata,a1                                           ;lea edstruct,A1
0001C062 <AmiBlitz3.ab3@811>   MOVE.l #"TEDY",d1
0001C066 <AmiBlitz3.ab3@812>   JSR 4(A2)                                                ; Run PED
0001C06C <AmiBlitz3.ab3@814>   MOVE.l A0,ped_startup_addr                               ; PED returns address of routine "startup_code"
0001C072 <AmiBlitz3.ab3@815>   MOVE.l A1,comdata                                        ; PED returns address of comdata-area in A1
0001C0B0 <AmiBlitz3.ab3@817>   !ComData_GetW{comWord_PEDIsAvailable,D0}                 ; if PED_IsAvailable=0, quit AmiBlitz
0001C0B4 <AmiBlitz3.ab3@818>   BEQ.w unload_ped
0001C0B8 <AmiBlitz3.ab3@819> 
0001C0BC <AmiBlitz3.ab3@820>   BNE old_version_of_PED                                   ; no, than exit
0001C0FA <AmiBlitz3.ab3@826>   !ComData_GetL{comData_Magic,D0}
0001C100 <AmiBlitz3.ab3@827>   CMP.l ##MagicIdentifier_Long,D0                          ;"~::~",D0    ; replace with a constants  tomsmart1 2012 03 09
0001C104 <AmiBlitz3.ab3@828>   BNE unload_ped
0001C13C <AmiBlitz3.ab3@831>   !ComData_SetL{comPtr_Trap15            ,#directTrap15 }
0001C174 <AmiBlitz3.ab3@832>   !ComData_SetL{comPtr_DirectBuffer      ,#directbuffer}
0001C1AC <AmiBlitz3.ab3@833>   !ComData_SetL{comPtr_MacroBase         ,#macrobase}
0001C1E4 <AmiBlitz3.ab3@834>   !ComData_SetL{comPtr_VarBase           ,#varbase }
0001C21C <AmiBlitz3.ab3@835>   !ComData_SetL{comPtr_InstrBase         ,#instrtab}
0001C254 <AmiBlitz3.ab3@836>   !ComData_SetL{comPtr_LibPointer        ,#libpointer}
0001C28C <AmiBlitz3.ab3@837>   !ComData_SetL{comPtr_CompilerVersion   ,#myversion }
0001C2C4 <AmiBlitz3.ab3@838>   !ComData_SetL{comPtr_VersionInformation,#versioninformation}
0001C2FC <AmiBlitz3.ab3@839>   !ComData_SetL{comPtr_NumberOfBuilds    ,#number_of_builds}
0001C334 <AmiBlitz3.ab3@840>   !ComData_SetL{comFunc_SaveSource       ,#ab3_SaveSource}
0001C36C <AmiBlitz3.ab3@841>   !ComData_SetL{comFunc_LoadSource       ,#ab3_LoadSource}
0001C3A4 <AmiBlitz3.ab3@842>   !ComData_SetL{comFunc_ClearSource      ,#ab3_ClearSource}
0001C3DC <AmiBlitz3.ab3@845>   !ComData_SetL{comFunc_CalculatExpression       ,#menu_calculator}
0001C414 <AmiBlitz3.ab3@846>   !ComData_SetL{comPtr_CalculatorExpressionString,#str_calcexpression}
0001C44C <AmiBlitz3.ab3@849>   !ComData_SetL{comFunc_BackupXtraData           ,#BackupXtraData}
0001C484 <AmiBlitz3.ab3@850>   !ComData_SetL{comFunc_RestoreXtraData          ,#RestoreXtraData}
0001C4BC <AmiBlitz3.ab3@852>   !ComData_SetL{comFunc_GetObjectEntry           ,#getobjectentry}
0001C4F4 <AmiBlitz3.ab3@853>   !ComData_SetL{comFunc_StoreMaxObjects          ,#storemaxobjects}
0001C52C <AmiBlitz3.ab3@855>   !ComData_SetL{comFunc_ReloadResidentsForPED    ,#ReloadResidentsForPED}
0001C564 <AmiBlitz3.ab3@856>   !ComData_SetL{comFunc_FreeClearResidentsForPED ,#FreeClearResidentsForPED}    ; add tomsmart1 2012 06 09
0001C59C <AmiBlitz3.ab3@858>   !ComData_SetL{comPtr_Residents_Table           ,#residents_table}
0001C5D4 <AmiBlitz3.ab3@859>   !ComData_SetL{comPtr_StringBuffer_Long         ,#stringbuffer}
0001C60C <AmiBlitz3.ab3@860>   !ComData_SetL{comPtr_Stacksize_Long            ,#stacksize}
0001C644 <AmiBlitz3.ab3@861>   !ComData_SetL{comPtr_Create_IconFile_Byte      ,#create_iconfile}
0001C67C <AmiBlitz3.ab3@862>   !ComData_SetL{comPtr_Make_SmallestCode_Byte    ,#make_smallestcode}
0001C6B4 <AmiBlitz3.ab3@863>   !ComData_SetL{comPtr_Link_DebugInfo_Byte       ,#link_debuginfo}
0001C6EC <AmiBlitz3.ab3@864>   !ComData_SetL{comPtr_Use_Debugger_Byte         ,#use_debugger}
0001C724 <AmiBlitz3.ab3@865>   !ComData_SetL{comPtr_Autorun_Byte              ,#autorun}
0001C75C <AmiBlitz3.ab3@866>   !ComData_SetL{comPtr_InterruptCheck_Byte       ,#interruptcheck}
0001C794 <AmiBlitz3.ab3@867>   !ComData_SetL{comPtr_AssemblerCheck_Byte       ,#assemblercheck}
0001C7CC <AmiBlitz3.ab3@868>   !ComData_SetL{comPtr_OverflowCheck_Byte        ,#overflowcheck}
0001C804 <AmiBlitz3.ab3@869>   !ComData_SetL{comPtr_Number_of_Objects_Word    ,#number_of_objects}
0001C83C <AmiBlitz3.ab3@870>   !ComData_SetL{comPtr_MaxObjects_Value_Word     ,#maxobjects_value}
0001C874 <AmiBlitz3.ab3@871>   !ComData_SetL{comPtr_MaxObject_Pos_Word        ,#maxobject_pos}
0001C8AC <AmiBlitz3.ab3@874>   !ComData_SetL{comPtr_CLIArgumentsString       ,#str_cliarguments}
0001C8B2 <AmiBlitz3.ab3@876>   CLR.w returncode_org
0001C8DC <AmiBlitz3.ab3@878>   !basic
0001C8E6 <AmiBlitz3.ab3@879>   If CLIMode
0001C958 <AmiBlitz3.ab3@880>     If cli_verbose>=3 Then NPrint !TRANS{"Loading BlitzLibs..."}
0001C976 <AmiBlitz3.ab3@882>   !asm
0001C97C <AmiBlitz3.ab3@886>   TST.b start_without_libs
0001C980 <AmiBlitz3.ab3@887>   BNE skip_loading_libs
0001C984 <AmiBlitz3.ab3@888>     BSR.w call_setpointerbusy
0001C98E <AmiBlitz3.ab3@889>     MOVE.l #$FFFFffff,linenumat
0001C992 <AmiBlitz3.ab3@890>     BSR.w get_libraries
0001C998 <AmiBlitz3.ab3@891>     JSR init_libraries
0001C99C <AmiBlitz3.ab3@892>     BSR.w init_buffers
0001C9A0 <AmiBlitz3.ab3@893>     BSR.w call_setpointernormal
0001C9A2 <AmiBlitz3.ab3@898>   MOVEQ.l #-$01,D0
0001C9A8 <AmiBlitz3.ab3@899>   MOVEA.l _execbase,A6
0001C9AC <AmiBlitz3.ab3@900>   JSR _AllocSignal(A6)
0001C9B2 <AmiBlitz3.ab3@901>   MOVE.l D0,signalNum
0001C9B4 <AmiBlitz3.ab3@902>   MOVEQ.l #$00,D1
0001C9B6 <AmiBlitz3.ab3@903>   BSET D0,D1
0001C9BC <AmiBlitz3.ab3@904>   MOVE.l D1,signals
0001C9C2 <AmiBlitz3.ab3@908>   MOVE.l #str_defaultdbug,D1
0001C9C6 <AmiBlitz3.ab3@909>   MOVEA.l _dosbase(PC),A6
0001C9CA <AmiBlitz3.ab3@910>   JSR _LoadSeg(A6)
0001C9D0 <AmiBlitz3.ab3@911>   MOVE.l D0,ptr_seg_debugger
0001C9D2 <AmiBlitz3.ab3@912>   TST.l d0
0001C9D6 <AmiBlitz3.ab3@913>   BNE ok_12
0001CA00 <AmiBlitz3.ab3@914>     !basic
0001CA62 <AmiBlitz3.ab3@915>     error{!TRANS{"The Debugexecutor `Defaultdbug` was not found.\\nDebugging is not possible."}}
0001CA80 <AmiBlitz3.ab3@916>     !asm
0001CA86 <AmiBlitz3.ab3@919>   TST.l CLIMode
0001CA8A <AmiBlitz3.ab3@920>   BEQ run_ped
0001CAB4 <AmiBlitz3.ab3@926>   !basic
0001CABA <AmiBlitz3.ab3@927>   err.l = False
0001CAE6 <AmiBlitz3.ab3@935>   If cli_sourcefile
0001CB06 <AmiBlitz3.ab3@936>     lock.l = Lock_(&cli_sourcefile,#ACCESS_READ)
0001CB10 <AmiBlitz3.ab3@937>     If lock
0001CB34 <AmiBlitz3.ab3@938>       NameFromLock_ lock,&cli_tempstr,1024
0001CB5E <AmiBlitz3.ab3@939>       cli_sourcefile.s = Peek.s(&cli_tempstr)
0001CB6E <AmiBlitz3.ab3@940>       UnLock_ lock
0001CB9A <AmiBlitz3.ab3@943>     If cli_exefile
0001CBEC <AmiBlitz3.ab3@944>       SetCurrentDir{dos_PathPart{cli_sourcefile}}
0001CC44 <AmiBlitz3.ab3@945>       path.s = dos_PathPart{cli_exefile}
0001CC64 <AmiBlitz3.ab3@946>       lock.l = Lock_(&path,#ACCESS_READ)
0001CC6E <AmiBlitz3.ab3@947>       If lock
0001CC92 <AmiBlitz3.ab3@948>         NameFromLock_ lock,&cli_tempstr,1024
0001CCBC <AmiBlitz3.ab3@949>         path.s = Peek.s(&cli_tempstr)
0001CD6A <AmiBlitz3.ab3@950>         cli_exefile = dos_AddPart{path,dos_FilePart{cli_exefile}}
0001CD7A <AmiBlitz3.ab3@951>         UnLock_ lock
0001CDC4 <AmiBlitz3.ab3@962>   If cli_verbose>=3 Then NPrint "Initializing token hashmap..."
0001CE38 <AmiBlitz3.ab3@963> 
0001CE42 <AmiBlitz3.ab3@964>   *PreProcessor.preprocessor = preproc_Create{}
0001CE52 <AmiBlitz3.ab3@965>   Poke.l ?comPtr_PreProcessor,*PreProcessor
0001CE84 <AmiBlitz3.ab3@966>   preproc_LoadTokens{*PreProcessor,TokenHashMapFile}
0001CE98 <AmiBlitz3.ab3@967>   If *PreProcessor\tokens=#NULL
0001CF12 <AmiBlitz3.ab3@968>     If cli_verbose>=1 Then NPrint "No hashmap found (\\22"+TokenHashMapFile+"\\22), will be created..."
0001CF1C <AmiBlitz3.ab3@969>     preproc_QueryTokens{*PreProcessor}
0001CF4E <AmiBlitz3.ab3@970>     preproc_SaveTokens{*PreProcessor,TokenHashMapFile}
0001CF9A <AmiBlitz3.ab3@978>   If cli_sourcefile><"" AND err=False
0001D040 <AmiBlitz3.ab3@979>     If cli_verbose>=3 Then NPrint "Loading sourcecode \\22",cli_sourcefile,"\\22..."
0001D072 <AmiBlitz3.ab3@980>     succ=LoadSource{cli_sourcefile}
0001D07C <AmiBlitz3.ab3@981>     If succ
0001D0B4 <AmiBlitz3.ab3@982> 
0001D12E <AmiBlitz3.ab3@983>         If cli_verbose>=1 Then NPrint "Compiling \\22"+cli_sourcefile+"\\22..."
0001D168 <AmiBlitz3.ab3@984>         comerr.l = CompileSource{cli_exefile,cli_debuginfo,cli_release}
0001D172 <AmiBlitz3.ab3@986>         If comerr
0001D178 <AmiBlitz3.ab3@988>         Else
0001D17E <AmiBlitz3.ab3@992>     Else
0001D1CE <AmiBlitz3.ab3@993>       If cli_verbose>=0 NPrint "\\1b[1m*** ERROR: Unable to read source file!\\1b[0m" : err=True
0001D21A <AmiBlitz3.ab3@997>   If cli_savefile><"" AND err=False
0001D294 <AmiBlitz3.ab3@998>     If cli_verbose>=2 Then NPrint "Saving sourcefiles as "+cli_savefile+"..."
0001D2C2 <AmiBlitz3.ab3@999>     SaveSource{cli_savefile}
0001D30E <AmiBlitz3.ab3@1002>   If cli_dumpfile><"" AND err=False
0001D358 <AmiBlitz3.ab3@1003>     If cli_verbose>=2 Then NPrint "Saving dumpfile..."
0001D38E <AmiBlitz3.ab3@1004>     DumpFile{cli_dumpfile,cli_dumpflags,cli_dumpform}
0001D398 <AmiBlitz3.ab3@1007>   If cli_run
0001D3AC <AmiBlitz3.ab3@1008>     If comerr=False
0001D3D8 <AmiBlitz3.ab3@1009>       If cli_exefile
0001D452 <AmiBlitz3.ab3@1010>         If cli_verbose>=1 Then NPrint "Recompiling "+cli_sourcefile+" for debug..."
0001D480 <AmiBlitz3.ab3@1011>         comerr.l = CompileSource{"",cli_debuginfo,cli_release} ; re-compile for launch!
0001D4CA <AmiBlitz3.ab3@1013>       If cli_verbose>=1 Then NPrint "Running program..."
0001D4D4 <AmiBlitz3.ab3@1014> 
0001D4D6 <AmiBlitz3.ab3@1016>         CLR.l d0
0001D514 <AmiBlitz3.ab3@1017>         !ComData_GetB{comByte_RunningFlag,D0}
0001D518 <AmiBlitz3.ab3@1018>         running.l = PutD0
0001D534 <AmiBlitz3.ab3@1019>         If running Then Delay_ 50
0001D548 <AmiBlitz3.ab3@1021>       Until running=False
0001D55C <AmiBlitz3.ab3@1022>       If Peek.l(?_runerror)
0001D5AC <AmiBlitz3.ab3@1023>         If cli_verbose>=0 Then NPrint "\\1b[1m*** ERROR: Unable to run compiled program!\\1b[0m" : err=True
0001D5BE <AmiBlitz3.ab3@1034>   preproc_Free{*PreProcessor} : *PreProcessor=#NULL
0001D608 <AmiBlitz3.ab3@1035>   If cli_verbose>=3 Then NPrint "Exit AmiBlitz3."
0001D60E <AmiBlitz3.ab3@1036>   DeinitEmulatedPED{}
0001D62C <AmiBlitz3.ab3@1038>   !asm
0001D632 <AmiBlitz3.ab3@1039> JMP terminate_ab3
0001D638 <AmiBlitz3.ab3@1044>   MOVEA.l ped_startup_addr,A1
0001D63E <AmiBlitz3.ab3@1045>   LEA str_tempfilename,A0
0001D640 <AmiBlitz3.ab3@1046>   JSR (A1)
0001D646 <AmiBlitz3.ab3@1053>   MOVE.l signalNum,D0
0001D64C <AmiBlitz3.ab3@1054>   MOVEA.l _execbase,A6
0001D650 <AmiBlitz3.ab3@1055>   JSR _FreeSignal(A6)
0001D656 <AmiBlitz3.ab3@1057>   MOVE.l ptr_seg_debugger,D1
0001D65A <AmiBlitz3.ab3@1058>   BEQ.b skip_unload_debugger
0001D65E <AmiBlitz3.ab3@1059>     MOVEA.l _dosbase(PC),A6
0001D662 <AmiBlitz3.ab3@1060>     JSR _UnLoadSeg(A6)
0001D666 <AmiBlitz3.ab3@1063>   BSR.w Aclearallvars
0001D66A <AmiBlitz3.ab3@1064>   BSR.w free_residents
0001D670 <AmiBlitz3.ab3@1065>   JSR free_blitzlibs
0001D676 <AmiBlitz3.ab3@1068>   MOVE.l ptr_seg_ped,D1
0001D67A <AmiBlitz3.ab3@1069>   BEQ freemem_and_quit
0001D67E <AmiBlitz3.ab3@1070>   MOVEA.l _dosbase(PC),A6
0001D682 <AmiBlitz3.ab3@1071>   JSR _UnLoadSeg(A6)
0001D686 <AmiBlitz3.ab3@1072>   BRA freemem_and_quit     ; added by tomsmart1 for Ped errormessage
0001D6B0 <AmiBlitz3.ab3@1075>   !basic
0001D774 <AmiBlitz3.ab3@1076> 
0001D792 <AmiBlitz3.ab3@1077>   !asm
0001D796 <AmiBlitz3.ab3@1078>   BRA freemem_and_quit
0001D7C0 <AmiBlitz3.ab3@1081>   !basic
0001D884 <AmiBlitz3.ab3@1082>   error{!TRANS{"Can't load the Editor:\n"} + pedfile$ + !TRANS{"\n must quit, sorry!"} }  ; show error message  tomsmart1
0001D8A2 <AmiBlitz3.ab3@1083>   !asm
0001D8A6 <AmiBlitz3.ab3@1087>   BSR.w freeallox
0001D8AC <AmiBlitz3.ab3@1088>   MOVEA.l ptr_macrobuffer_begin,A1
0001D8AE <AmiBlitz3.ab3@1089>   MOVE.l -(a1),D0
0001D8B0 <AmiBlitz3.ab3@1090>   ADDQ.l #4,d0
0001D8B6 <AmiBlitz3.ab3@1091>   MOVEA.l _execbase,A6
0001D8BA <AmiBlitz3.ab3@1092>   JSR _FreeMem(A6)
0001D8C0 <AmiBlitz3.ab3@1095>   MOVEA.l _dosbase,A1
0001D8C6 <AmiBlitz3.ab3@1096>   MOVEA.l _execbase,A6
0001D8CA <AmiBlitz3.ab3@1097>   JSR _CloseLibrary(A6)
0001D8D0 <AmiBlitz3.ab3@1099>   MOVEA.l constpcat,A1
0001D8D6 <AmiBlitz3.ab3@1100>   MOVE.l constmaxpc,D0
0001D8DC <AmiBlitz3.ab3@1101>   MOVEA.l _execbase,A6
0001D8E0 <AmiBlitz3.ab3@1102>   JSR _FreeMem(A6)
0001D8E6 <AmiBlitz3.ab3@1105>   MOVEA.l _mathffpbase,A1
0001D8EC <AmiBlitz3.ab3@1106>   MOVEA.l _execbase,A6
0001D8F0 <AmiBlitz3.ab3@1107>   JSR _CloseLibrary(A6)
0001D8F6 <AmiBlitz3.ab3@1117>     MOVEA.l _execbase,A6
0001D8FC <AmiBlitz3.ab3@1118>     MOVE.l mempool,a0
0001D900 <AmiBlitz3.ab3@1119>     JSR _DeletePool(a6)
0001D906 <AmiBlitz3.ab3@1120>     CLR.l pushat
0001D90C <AmiBlitz3.ab3@1127>   JSR free_unusedfunctions
0001D90E <AmiBlitz3.ab3@1128>   MOVEQ #0,d0
0001D91C <AmiBlitz3.ab3@1131>   !exitasm
0001D954 <AmiBlitz3.ab3@1132>   If dynassign<>""
0001D95E <AmiBlitz3.ab3@1133>     If *AssignSema
0001D96E <AmiBlitz3.ab3@1134>       ReleaseSemaphore_ *AssignSema
0001D986 <AmiBlitz3.ab3@1135>       If (AttemptSemaphore_ (*AssignSema))                 ; we are the exclusive owner of the sema now!
0001DA1A <AmiBlitz3.ab3@1136>         dos_RemAssign{"LIBS:",dos_AddPart{dynassign,"Libs"}}
0001DA54 <AmiBlitz3.ab3@1137>         dos_RemAssign{dynassign}
0001DA64 <AmiBlitz3.ab3@1138>         RemSemaphore_ *AssignSema
0001DA74 <AmiBlitz3.ab3@1139>         ReleaseSemaphore_ *AssignSema
0001DAAA <AmiBlitz3.ab3@1140>         If *AssignSema\ss_Link\ln_Name Then FreeVec_ *AssignSema\ss_Link\ln_Name : *AssignSema\ss_Link\ln_Name = #NULL
0001DABA <AmiBlitz3.ab3@1141>         FreeVec_ *AssignSema
0001DAC2 <AmiBlitz3.ab3@1142>         *AssignSema = #NULL
0001DAF0 <AmiBlitz3.ab3@1146>   SetCurrentDir{cli_path}
0001DB12 <AmiBlitz3.ab3@1147>   !coutclose
0001DB18 <AmiBlitz3.ab3@1148> End
0001DB24 <AmiBlitz3.ab3@1153> str_doslibrary:     Dc.b "dos.library",0 : Even
0001DB28 <AmiBlitz3.ab3@1154> _dosbase:           Ds.l 1
0001DB2E <AmiBlitz3.ab3@1158>   MOVEA.l _execbase,A6
0001DB34 <AmiBlitz3.ab3@1159>   LEA str_doslibrary,A1
0001DB38 <AmiBlitz3.ab3@1160>   JSR _OldOpenLibrary(A6)
0001DB3E <AmiBlitz3.ab3@1161>   MOVE.l D0,_dosbase
0001DB40 <AmiBlitz3.ab3@1162> RTS
0001DB46 <AmiBlitz3.ab3@1166>   MOVEA.l #str_mathffpname,A1
0001DB4C <AmiBlitz3.ab3@1167>   MOVEA.l _execbase,A6
0001DB50 <AmiBlitz3.ab3@1168>   JSR _OldOpenLibrary(A6)
0001DB56 <AmiBlitz3.ab3@1169>   MOVE.l D0,_mathffpbase
0001DB58 <AmiBlitz3.ab3@1170> RTS
0001DB8A <AmiBlitz3.ab3@1178> !ComData_JMP{comFunc_SetNormalPointer}
0001DBBC <AmiBlitz3.ab3@1186> !ComData_JMP{comFunc_SetBusyPointer}
0001DBE6 <AmiBlitz3.ab3@1190>   !basic
0001DBEA <AmiBlitz3.ab3@1191>   ab3save_filenameP.l = PutD0
0001DBF4 <AmiBlitz3.ab3@1192>   If ab3save_filenameP
0001DC1C <AmiBlitz3.ab3@1193>     ab3save_filename.s = Peek.s(ab3save_filenameP)
0001DC4A <AmiBlitz3.ab3@1195>     SaveSource{ab3save_filename}
0001DC50 <AmiBlitz3.ab3@1196>   Else
0001DC8A <AmiBlitz3.ab3@1197>     error{"INTERNAL ERROR: no filename passed in D0 to SaveSource{}!"}
0001DCA8 <AmiBlitz3.ab3@1199>   !asm
0001DCAA <AmiBlitz3.ab3@1200>   RTS
0001DCD4 <AmiBlitz3.ab3@1203>   !basic
0001DCD8 <AmiBlitz3.ab3@1204>   ab3save_filenameP.l = PutD0
0001DCE2 <AmiBlitz3.ab3@1205>   If ab3save_filenameP
0001DD0A <AmiBlitz3.ab3@1206>     ab3save_filename.s = Peek.s(ab3save_filenameP)
0001DD38 <AmiBlitz3.ab3@1207>     LoadSource{ab3save_filename}
0001DD3E <AmiBlitz3.ab3@1208>   Else
0001DD78 <AmiBlitz3.ab3@1209>     error{"INTERNAL ERROR: no filename passed in D0 to LoadSource{}!"}
0001DD96 <AmiBlitz3.ab3@1211>   !asm
0001DD98 <AmiBlitz3.ab3@1212>   RTS
0001DDC2 <AmiBlitz3.ab3@1215>   !basic
0001DDC8 <AmiBlitz3.ab3@1216>   ClearSource{}
0001DDE6 <AmiBlitz3.ab3@1217>   !asm
0001DDE8 <AmiBlitz3.ab3@1218>   RTS
0001DE12 <AmiBlitz3.ab3@1221>   !basic
0001DE18 <AmiBlitz3.ab3@1222>   OpenConsoleFake{}
0001DE36 <AmiBlitz3.ab3@1223>   !asm
0001DE38 <AmiBlitz3.ab3@1224>   RTS
0001DE62 <AmiBlitz3.ab3@1228>   !basic
0001DE68 <AmiBlitz3.ab3@1229>   CloseConsoleFake{}
0001DE86 <AmiBlitz3.ab3@1230>   !asm
0001DE88 <AmiBlitz3.ab3@1231>   RTS
0001DE8E <AmiBlitz3.ab3@1235>   MOVE.w d6,menuitemdebug
0001DEB8 <AmiBlitz3.ab3@1236>   !basic
0001DECA <AmiBlitz3.ab3@1237>   menuitemx.l = Peek.w(?menuitemdebug)
0001DEF0 <AmiBlitz3.ab3@1238>   If menuitemx>16 OR  menuitemx<0
0001DF64 <AmiBlitz3.ab3@1239>     error{"Called invalid AB3 Menuitem #"+Str$(menuitemx)+"!"}
0001DF6C <AmiBlitz3.ab3@1240>     menuitemx=0
0001DF7C <AmiBlitz3.ab3@1242>   Poke.w ?menuitemdebug,menuitemx
0001DF9A <AmiBlitz3.ab3@1243>   !asm
0001DFA0 <AmiBlitz3.ab3@1244>   MOVE.w menuitemdebug,d6
0001DFA6 <AmiBlitz3.ab3@1247>   MOVE.l A5,firstitem_
0001DFAC <AmiBlitz3.ab3@1248>   MOVE.w D7,numlines_org
0001DFB2 <AmiBlitz3.ab3@1249>   MOVE.l d7,numlines
0001DFB4 <AmiBlitz3.ab3@1250>   LSL.w #2,D6
0001DFBA <AmiBlitz3.ab3@1251>   LEA menu_items,A0
0001DFBE <AmiBlitz3.ab3@1252>   MOVEA.l $0(A0,D6.W),A0
0001DFC8 <AmiBlitz3.ab3@1253>   MOVE.l #$FFFFffff,linenumat
0001DFD2 <AmiBlitz3.ab3@1254>   MOVE.l #$FFFFffff,compilelinecounter
0001DFD4 <AmiBlitz3.ab3@1257>   JSR (A0)                              ; jsr to the function for the menuitem
0001DFDA <AmiBlitz3.ab3@1258>   MOVE.l compilelinecounter,D0
0001DFDC <AmiBlitz3.ab3@1259> RTS
0001DFE0 <AmiBlitz3.ab3@1261> menuitemdebug: Dc.l 0
0001DFE4 <AmiBlitz3.ab3@1263> mempool                Dc.l 0
0001DFFA <AmiBlitz3.ab3@1264> str_loaddebugmessage:  Dc.b "Debug module to load",0 : Even
0001E000 <AmiBlitz3.ab3@1265> dloaderr:             JSR handle_compileerror
0001E01C <AmiBlitz3.ab3@1266>                        Dc.b "Can't LoadSeg debug module!",0 : Even
0001E05A <AmiBlitz3.ab3@1274>   !ComData_GetL{comFunc_ASLFileRequest,A3}
0001E060 <AmiBlitz3.ab3@1275>   LEA str_loaddebugmessage,A2
0001E066 <AmiBlitz3.ab3@1276>   LEA str_blitz3assign,A0
0001E06C <AmiBlitz3.ab3@1277>   LEA str_temp_debugmodulename,A1
0001E06E <AmiBlitz3.ab3@1279>   JSR (A3)                                                  ;open ped filerequest
0001E072 <AmiBlitz3.ab3@1281>   BEQ.w menu_loaddebugmodule_noload
0001E078 <AmiBlitz3.ab3@1282>   MOVE.l D0,ptr_temp_debugmodule
0001E07C <AmiBlitz3.ab3@1283>   BSR.w call_setpointerbusy
0001E082 <AmiBlitz3.ab3@1284>   MOVE.l A7,errstack
0001E08C <AmiBlitz3.ab3@1285>   MOVE.l #menu_loaddebugmodule_noload,errcont
0001E092 <AmiBlitz3.ab3@1286>   MOVE.l ptr_temp_debugmodule,D1
0001E096 <AmiBlitz3.ab3@1288>   MOVEA.l _dosbase(PC),A6
0001E09A <AmiBlitz3.ab3@1289>   JSR _LoadSeg(A6)
0001E09C <AmiBlitz3.ab3@1290>   MOVE.l D0,D7
0001E0A0 <AmiBlitz3.ab3@1291>   BEQ.w dloaderr
0001E0A6 <AmiBlitz3.ab3@1292>   MOVE.l ptr_seg_debugger,D1
0001E0AA <AmiBlitz3.ab3@1293>   BEQ.b menu_loaddebugmodule_ndseg
0001E0AE <AmiBlitz3.ab3@1294>   MOVEA.l _dosbase(PC),A6
0001E0B2 <AmiBlitz3.ab3@1295>   JSR _UnLoadSeg(A6)
0001E0B6 <AmiBlitz3.ab3@1296>   BSR.w call_setpointernormal
0001E0BC <AmiBlitz3.ab3@1299>   MOVE.l D7,ptr_seg_debugger
0001E0BE <AmiBlitz3.ab3@1302> RTS
0001E0DC <AmiBlitz3.ab3@1305> str_request_exename:   Dc.b "Name of Executable to Create:",0 : Even                        ;xtext org source
0001E19C <AmiBlitz3.ab3@1306> exepath:               Ds.l 48                             ;Ds.b #MAX_STRINGSIZE ; Ds.l 48  ;xpath  dcb.b 192,0 org source
0001E25C <AmiBlitz3.ab3@1307> exefilename:           Ds.l 48                             ;Ds.b #MAX_STRINGSIZE ; Ds.l 48  ;xname  dcb.b 192,0 org source
0001E260 <AmiBlitz3.ab3@1308> ptr_newexefilename:    Dc.l 0                                                               ;execname org
0001E28A <AmiBlitz3.ab3@1312>   !basic
0001E2B4 <AmiBlitz3.ab3@1313>   exepath.s = Peek.s(?exepath)
0001E2DE <AmiBlitz3.ab3@1314>   exefile.s = Peek.s(?exefilename)
0001E35E <AmiBlitz3.ab3@1315>   exefile.s = dos_AddPart{exepath,exefile}
0001E396 <AmiBlitz3.ab3@1316>   Poke.s ?tempspace,exefile
0001E3B4 <AmiBlitz3.ab3@1317>   !asm
0001E3BA <AmiBlitz3.ab3@1338>   LEA tempspace,a0
0001E3BC <AmiBlitz3.ab3@1339>   MOVE.l a0,d0
0001E3C0 <AmiBlitz3.ab3@1340> BRA newcreate2
0001E3EA <AmiBlitz3.ab3@1346>   !basic
0001E414 <AmiBlitz3.ab3@1347>   request_exename.s = Peek.s(?str_request_exename )
0001E470 <AmiBlitz3.ab3@1348>   request_exename   = !TRANS{request_exename}
0001E476 <AmiBlitz3.ab3@1349>   GetD0 &request_exename
0001E494 <AmiBlitz3.ab3@1350>   !asm
0001E496 <AmiBlitz3.ab3@1351>   MOVE.l D0,A2
0001E4D4 <AmiBlitz3.ab3@1354>   !ComData_GetL{comFunc_ASLFileRequest,A3}
0001E4DA <AmiBlitz3.ab3@1356>   LEA exepath,A0
0001E4E0 <AmiBlitz3.ab3@1357>   LEA exefilename,A1
0001E4E2 <AmiBlitz3.ab3@1359>   JSR (A3)                                                 ;open ped filerequest
0001E4E6 <AmiBlitz3.ab3@1361>   BEQ.w cancel_createexe
0001E4F0 <AmiBlitz3.ab3@1364>   ADD.l #1,number_of_builds
0001E4F6 <AmiBlitz3.ab3@1367>   MOVE.l D0,ptr_newexefilename
0001E4FE <AmiBlitz3.ab3@1368>   MOVE.w #-1,debugversion
0001E504 <AmiBlitz3.ab3@1369>   MOVE.w set_make_smallestcode,-(A7)
0001E50C <AmiBlitz3.ab3@1373>     MOVE.w #1,makeexec
0001E512 <AmiBlitz3.ab3@1374>     JSR ab3_OpenDebugFile
0001E516 <AmiBlitz3.ab3@1375>     BSR.w startcompile
0001E51C <AmiBlitz3.ab3@1376>     JSR ab3_CloseDebugFile
0001E526 <AmiBlitz3.ab3@1377>     CMP.l #"NORE",reqmode
0001E52A <AmiBlitz3.ab3@1378>   BEQ 'l1
0001E530 <AmiBlitz3.ab3@1380>   TST.w anyerrs
0001E534 <AmiBlitz3.ab3@1381>   BNE.b menu_createexecutable__skip
0001E538 <AmiBlitz3.ab3@1382>   BSR.w savefile
0001E53E <AmiBlitz3.ab3@1385>   MOVE.w (A7)+,set_make_smallestcode
0001E540 <AmiBlitz3.ab3@1388> RTS
0001E548 <AmiBlitz3.ab3@1392>   MOVE.w #-1,flag_noPED
0001E54A <AmiBlitz3.ab3@1393> RTS
0001E552 <AmiBlitz3.ab3@1397>   MOVE.w #-1,flag_noCLI
0001E554 <AmiBlitz3.ab3@1398> RTS
0001E57E <AmiBlitz3.ab3@1401>   !basic
0001E5A6 <AmiBlitz3.ab3@1402>     If dbg_fid>=0 Then file_Close{dbg_fid} : dbg_fid = -1
0001E5B6 <AmiBlitz3.ab3@1403>     Poke.w ?word_WriteDebugFileNow,0
0001E5D4 <AmiBlitz3.ab3@1404>   !asm
0001E5D6 <AmiBlitz3.ab3@1405> RTS
0001E600 <AmiBlitz3.ab3@1408>   !basic
0001E610 <AmiBlitz3.ab3@1409>   Poke.w ?word_WriteDebugFileNow,0
0001E622 <AmiBlitz3.ab3@1410>   If dbg_fid>=0
0001E638 <AmiBlitz3.ab3@1411>     file_Close{dbg_fid} : dbg_fid = -1
0001E64A <AmiBlitz3.ab3@1413>   If dbg_fid.l<0
0001E64C <AmiBlitz3.ab3@1414>     CLR.l d0
0001E68A <AmiBlitz3.ab3@1415>     !ComData_GetW{comWord_CreateDebugFile,D0}
0001E68E <AmiBlitz3.ab3@1416>     dbg_Create.l = PutD0
0001E698 <AmiBlitz3.ab3@1417>     If (dbg_Create) ; only when set!
0001E6A8 <AmiBlitz3.ab3@1418>       exefileP.l = Peek.l (?ptr_newexefilename)
0001E6D0 <AmiBlitz3.ab3@1419>       exefile.s = ""
0001E702 <AmiBlitz3.ab3@1420>       If exefileP Then exefile.s = Peek.s(exefileP)
0001E73A <AmiBlitz3.ab3@1421>       If exefile><""
0001E790 <AmiBlitz3.ab3@1422>         dbg_fid = file_Open{exefile+".dbg",#file_forcewrite}
0001E7A2 <AmiBlitz3.ab3@1423>         If dbg_fid>=0
0001E7B4 <AmiBlitz3.ab3@1424>           Poke.w ?word_WriteDebugFileNow,-1
0001E7C0 <AmiBlitz3.ab3@1427>       oldhunkoffset.l = -1
0001E7E8 <AmiBlitz3.ab3@1428>       oldfile.s       = ""
0001E806 <AmiBlitz3.ab3@1431>   !asm
0001E808 <AmiBlitz3.ab3@1432> RTS
0001E80E <AmiBlitz3.ab3@1435> TST.w word_WriteDebugFileNow
0001E812 <AmiBlitz3.ab3@1436> BEQ 'skipdebugfile
0001E83C <AmiBlitz3.ab3@1437> !basic
0001E84E <AmiBlitz3.ab3@1438>   If dbg_fid>=0
0001E860 <AmiBlitz3.ab3@1439>     pass.l          = Peek.w(?pass)
0001E872 <AmiBlitz3.ab3@1440>     makesmallest.b  = Peek.b(?make_smallestcode)               ; get the status of make_smallestcode  tomsmart1
0001E896 <AmiBlitz3.ab3@1441> 
0001E89C <AmiBlitz3.ab3@1442>       oldhunkoffset.l = hunkoffset.l
0001E8D0 <AmiBlitz3.ab3@1443>       oldfile.s       = codefile.s
0001E8EC <AmiBlitz3.ab3@1444>       If Peek.w (?ininclude)>0
0001E8FC <AmiBlitz3.ab3@1445>         codeline.l = Peek.l(?includeline);-1
0001E96C <AmiBlitz3.ab3@1446>         codefile.s = dos_FilePart{incdim(Peek.w(?ininclude)-1)}
0001E972 <AmiBlitz3.ab3@1447>       Else
0001E9A0 <AmiBlitz3.ab3@1448>         !ComData_LEA{comStr_SourceName,A0}
0001E9A2 <AmiBlitz3.ab3@1449>         MOVE.l A0,D0
0001E9A6 <AmiBlitz3.ab3@1450>         sourceP.l = PutD0
0001E9CE <AmiBlitz3.ab3@1451>         codefile.s = Peek.s(sourceP)
0001E9DE <AmiBlitz3.ab3@1452>         codeline.l = Peek.l(?linenumat)
0001EA06 <AmiBlitz3.ab3@1454>       hunkoffset.l = Peek.l(?destpointer)-Peek.l(?destbufferstart)
0001EA5A <AmiBlitz3.ab3@1455>       If oldhunkoffset><hunkoffset OR oldfile><codefile
0001EA6A <AmiBlitz3.ab3@1462>         *sourceLine.SourceLine_t = Peek.l(?sourceline)
0001EA74 <AmiBlitz3.ab3@1463>         If *sourceLine
0001EA8A <AmiBlitz3.ab3@1464>           MaxLen detokenline.s = 65536
0001EACC <AmiBlitz3.ab3@1465>          !ComData_GetL{comPtr_PreProcessor,include_preprocessor}
0001EADC <AmiBlitz3.ab3@1466>          *tn.preprocessor = Peek.l(?include_preprocessor)
0001EB08 <AmiBlitz3.ab3@1467>           written.l = preproc_Detokenize{*tn,&*sourceLine\Text,&detokenline,*sourceLine\CharLength}
0001EB36 <AmiBlitz3.ab3@1468>           If written>0 Then Poke.b &detokenline+written-1,0
0001EB60 <AmiBlitz3.ab3@1469>           sourceLineText.s = Peek.s(&detokenline)
0001EB66 <AmiBlitz3.ab3@1470>         Else
0001EB8E <AmiBlitz3.ab3@1471>           sourceLineText = "NULL"
0001EC56 <AmiBlitz3.ab3@1474>         file_WriteLine{dbg_fid,Hex$(hunkoffset)+" <"+codefile+"@"+Str$(codeline)+"> "+sourceLineText}
0001EC74 <AmiBlitz3.ab3@1480> !asm
0001EC76 <AmiBlitz3.ab3@1482> RTS
0001EC78 <AmiBlitz3.ab3@1484> word_WriteDebugFileNow: Dc.w 0
0001EC7A <AmiBlitz3.ab3@1486> flag_noPED:  Ds.w 1                                        ;closeed org source
0001EC7C <AmiBlitz3.ab3@1487> flag_noCLI:  Ds.w 1                                        ;nocli org source
0001EC80 <AmiBlitz3.ab3@1491>   MOVEM.l D0-D1/A0-A1/A6,-(A7)
0001EC86 <AmiBlitz3.ab3@1492>   MOVEA.l _execbase,A6
0001EC8A <AmiBlitz3.ab3@1493>   JSR _CacheClearU(A6)
0001EC8E <AmiBlitz3.ab3@1494>   MOVEM.l (A7)+,D0-D1/A0-A1/A6
0001EC90 <AmiBlitz3.ab3@1495> RTS
0001EC94 <AmiBlitz3.ab3@1498>   MOVEM.l A2-A3,-(A7)
0001EC9A <AmiBlitz3.ab3@1499>   CLR.b doublepeek
0001ECA0 <AmiBlitz3.ab3@1500>   MOVE.l A5,lastsourcepos
0001ECA6 <AmiBlitz3.ab3@1501>    JSR getchar
0001ECAA <AmiBlitz3.ab3@1502>   CMP.w #$2E,D0
0001ECAE <AmiBlitz3.ab3@1503>    BEQ.w JL_0_49B4b
0001ECB4 <AmiBlitz3.ab3@1504>   MOVEA.l defaulttype,A2
0001ECB8 <AmiBlitz3.ab3@1505>   CMP.w #$24,D0
0001ECBC <AmiBlitz3.ab3@1506>    BNE.w JL_0_49CAb
0001ECBE <AmiBlitz3.ab3@1507>   MOVEQ.l #$07,D1
0001ECC2 <AmiBlitz3.ab3@1508> BRA.w JL_0_49DEb
0001ECC8 <AmiBlitz3.ab3@1511>   JSR getparameter2
0001ECCC <AmiBlitz3.ab3@1512>   BEQ.w syntaxerrb
0001ECD2 <AmiBlitz3.ab3@1513>   LEA newtypebase,A2
0001ECD8 <AmiBlitz3.ab3@1514>   JSR findtype
0001ECDC <AmiBlitz3.ab3@1515>   BNE.w notypeerrb
0001ECE6 <AmiBlitz3.ab3@1520>   MOVE.w oldqflag,instringon
0001ECEC <AmiBlitz3.ab3@1521>   MOVEA.l lastsourcepos,A5
0001ECF2 <AmiBlitz3.ab3@1523>   MOVE.l a2,functionreturntype
0001ECFA <AmiBlitz3.ab3@1524>   CMPI.l #$100,$4(A2)
0001ECFE <AmiBlitz3.ab3@1525>   BLE.w 'isvar
0001ED00 <AmiBlitz3.ab3@1529>   MOVEQ #3,d1
0001ED04 <AmiBlitz3.ab3@1530>   BRA JL_0_49DEb
0001ED08 <AmiBlitz3.ab3@1537>   MOVE.w $6(A2),D1
0001ED0E <AmiBlitz3.ab3@1538>   CMP.w #8,8(a2)
0001ED12 <AmiBlitz3.ab3@1539>   BNE 'l1
0001ED1A <AmiBlitz3.ab3@1540>   MOVE.b #1,doublepeek
0001ED20 <AmiBlitz3.ab3@1544>   MOVE.w D1,convsize
0001ED24 <AmiBlitz3.ab3@1545>   MOVEM.l (A7)+,A2-A3
0001ED26 <AmiBlitz3.ab3@1546> RTS
0001ED2C <AmiBlitz3.ab3@1548> notypeerrb JMP notypeerr
0001ED32 <AmiBlitz3.ab3@1549> illtypeerrb JMP illtypeerr
0001ED38 <AmiBlitz3.ab3@1550> syntaxerrb JMP syntaxerr
0001ED42 <AmiBlitz3.ab3@1595>   ADD.l #1,number_of_builds
0001ED48 <AmiBlitz3.ab3@1597>   CLR.w debugversion
0001ED4E <AmiBlitz3.ab3@1598>   CLR.w flag_noPED
0001ED54 <AmiBlitz3.ab3@1599>   CLR.w flag_noCLI
0001ED5C <AmiBlitz3.ab3@1602>     MOVE.w #0,makeexec                                     ;MOVE.w #$FFFF,debugversion
0001ED60 <AmiBlitz3.ab3@1603>     BSR.w startcompile
0001ED6A <AmiBlitz3.ab3@1604>     CMP.l #"NORE",reqmode
0001ED6E <AmiBlitz3.ab3@1605>   BEQ 'l1
0001ED74 <AmiBlitz3.ab3@1608>   TST.w anyerrs
0001ED78 <AmiBlitz3.ab3@1609>    BNE.w JL_0_3482
0001ED7C <AmiBlitz3.ab3@1611>   MOVE.w flag_noPED(PC),D1
0001ED80 <AmiBlitz3.ab3@1612>    BEQ.w skip_closingGUI
0001EDB2 <AmiBlitz3.ab3@1617>   !ComData_JSR{comFunc_CloseGUI}
0001EDB6 <AmiBlitz3.ab3@1618> BRA.b runprogram
0001EDBA <AmiBlitz3.ab3@1622>   BSR.w compilerequester
0001EDC0 <AmiBlitz3.ab3@1625>   MOVEA.l _dosbase,A6
0001EDC6 <AmiBlitz3.ab3@1626>   LEA exepath,a0
0001EDC8 <AmiBlitz3.ab3@1627>   MOVE.l a0,d1
0001EDCA <AmiBlitz3.ab3@1628>   MOVEQ #-2,d2
0001EDCE <AmiBlitz3.ab3@1629>   JSR _Lock(a6)                                            ;lock
0001EDD4 <AmiBlitz3.ab3@1630>   MOVE.l d0,exelock
0001EDDA <AmiBlitz3.ab3@1631>   MOVE.l #0,d1
0001EDDE <AmiBlitz3.ab3@1632>   JSR _CurrentDir(A6)
0001EDE4 <AmiBlitz3.ab3@1633>   MOVE.l D0,lock_currentdir
0001EDE6 <AmiBlitz3.ab3@1634>   MOVE.l D0,D1
0001EDEA <AmiBlitz3.ab3@1635>   JSR _CurrentDir(A6)
0001EDF0 <AmiBlitz3.ab3@1636>   CLR.l ptr_exetask
0001EDF6 <AmiBlitz3.ab3@1645>   MOVE.l #str_process_name,D1
0001EDF8 <AmiBlitz3.ab3@1646>   MOVEQ.l #$00,D2
0001EDFE <AmiBlitz3.ab3@1647>   MOVE.l #proc_seglist,D3
0001EE00 <AmiBlitz3.ab3@1648>   LSR.l #2,D3
0001EE06 <AmiBlitz3.ab3@1649>   MOVE.l stacksize,D4
0001EE0C <AmiBlitz3.ab3@1650>   MOVEA.l _dosbase,A6
0001EE10 <AmiBlitz3.ab3@1651>   JSR _CreateProc(A6)                                      ;runtask
0001EE12 <AmiBlitz3.ab3@1652>   TST.l D0
0001EE16 <AmiBlitz3.ab3@1653>    BEQ ErrorRunningProg
0001EE4C <AmiBlitz3.ab3@1655>   !ComData_SetB{comByte_RunningFlag,#1}   ; this should be done here, straigt after it is clear that
0001EE52 <AmiBlitz3.ab3@1657>   TST.w flag_noPED
0001EE56 <AmiBlitz3.ab3@1658>    BNE.b JL_0_344E
0001EE5A <AmiBlitz3.ab3@1659>   BSR.w close_compilewin
0001EE60 <AmiBlitz3.ab3@1662>   CLR.l firstlocal
0001EE66 <AmiBlitz3.ab3@1663>   CLR.l firstglob
0001EE6A <AmiBlitz3.ab3@1664>   MOVE.w flag_noPED(PC),D1
0001EE6E <AmiBlitz3.ab3@1665>   BEQ.w skip_openGUI
0001EEA0 <AmiBlitz3.ab3@1669>   !ComData_JSR{comFunc_CreateGUI}
0001EEA2 <AmiBlitz3.ab3@1679> RTS
0001EEAC <AmiBlitz3.ab3@1682> MOVE.l #1,_runerror
0001EEB0 <AmiBlitz3.ab3@1683> BRA JL_0_344E
0001EEB4 <AmiBlitz3.ab3@1685> _runerror: Dc.l 0
0001EEB8 <AmiBlitz3.ab3@1686> lock_currentdir:    Ds.l 1                                          ;tasklock org source
0001EEBC <AmiBlitz3.ab3@1687> ptr_exetask:        Ds.l 1                                          ;panictask org source
0001EEC0 <AmiBlitz3.ab3@1688> signalNum:          Ds.l 1                                          ;panicbit org source
0001EEC4 <AmiBlitz3.ab3@1689> signals:            Ds.l 1                                          ;panicmask org source
0001EEDA <AmiBlitz3.ab3@1691> str_process_name:   Dc.b "Blitz ][ Program Proc",0 : Even           ;procname org source
0001EEDF <AmiBlitz3.ab3@1692>                     Ds.b 5                                          ;cnop 0,4 :dc.l 0   ;length org source
0001EEE0 <AmiBlitz3.ab3@1693> Even4
0001EEE4 <AmiBlitz3.ab3@1695> ptr_ThisTask:       Ds.l 1                                          ;length
0001EEE8 <AmiBlitz3.ab3@1696> .proc_seglist:      Ds.l 1                                          ;procstart org source ;next
0001EEEE <AmiBlitz3.ab3@1700>   MOVEA.l $4,A0
0001EEF6 <AmiBlitz3.ab3@1701>   MOVE.l  $114(A0),ptr_exetask
0001EEFC <AmiBlitz3.ab3@1703>   MOVEA.l _dosbase,A6
0001EF02 <AmiBlitz3.ab3@1704>   MOVE.l exelock,D1
0001EF06 <AmiBlitz3.ab3@1705>   JSR _CurrentDir(A6)
0001EF3C <AmiBlitz3.ab3@1710>   !ComData_SetB{comByte_RunningFlag,#1}
0001EF40 <AmiBlitz3.ab3@1716>   MOVE.w flag_noCLI(PC),D1
0001EF44 <AmiBlitz3.ab3@1717>    BNE.b skip_openconsole
0001EF76 <AmiBlitz3.ab3@1721>   !ComData_JSR{comFunc_OpenConsole}
0001EF7A <AmiBlitz3.ab3@1724>   BSR.w calcvbr
0001EF80 <AmiBlitz3.ab3@1725>   MOVEA.l vbr,A0
0001EF86 <AmiBlitz3.ab3@1730>   CLR.w dirmode
0001EF8C <AmiBlitz3.ab3@1731>   CLR.l firstglob
0001EF92 <AmiBlitz3.ab3@1732>   CLR.l firstlocal
0001EF98 <AmiBlitz3.ab3@1734>   MOVE.l stacksize,D2
0001EF9E <AmiBlitz3.ab3@1735>   MOVE.l #$624C745A,D7                                      ;#'bLtZ',d7 org source ;force cli-type run
0001EFA4 <AmiBlitz3.ab3@1736>   LEA str_cliarguments,A0                                   ;cli arguement
0001EFAA <AmiBlitz3.ab3@1737>   MOVEA.l destbufferstart,A1
0001EFAE <AmiBlitz3.ab3@1738>   BSR.w Aclearcache
0001EFB0 <AmiBlitz3.ab3@1741>   JSR (A1)                                                 ; execute compiled code  ;Run the thing!
0001EFB6 <AmiBlitz3.ab3@1743>   MOVEA.l vbr,A0
0001EFBC <AmiBlitz3.ab3@1745>   CLR.l firstglob
0001EFC2 <AmiBlitz3.ab3@1746>   CLR.l firstlocal
0001EFC8 <AmiBlitz3.ab3@1747>   MOVEA.l _dosbase,A6
0001EFCE <AmiBlitz3.ab3@1748>   MOVE.l exelock,d1
0001EFD2 <AmiBlitz3.ab3@1749>   BEQ 'nolock
0001EFD6 <AmiBlitz3.ab3@1750>   JSR _UnLock(a6)
0001F00C <AmiBlitz3.ab3@1755>   !ComData_SetB{comByte_RunningFlag,#0}
0001F010 <AmiBlitz3.ab3@1758>   MOVE.w flag_noCLI(PC),D1
0001F014 <AmiBlitz3.ab3@1759>    BNE.b skip_closeconsole
0001F046 <AmiBlitz3.ab3@1763>   !ComData_JSR{comFunc_CloseConsole}
0001F04E <AmiBlitz3.ab3@1766>   MOVE.w #$0001,stopit
0001F052 <AmiBlitz3.ab3@1767>   MOVE.l signals(PC),D0
0001F058 <AmiBlitz3.ab3@1768>   MOVEA.l ptr_ThisTask,A1
0001F05E <AmiBlitz3.ab3@1769>   MOVEA.l _execbase,A6
0001F062 <AmiBlitz3.ab3@1770>   JSR _Signal(A6)
0001F064 <AmiBlitz3.ab3@1771> RTS
0001F06A <AmiBlitz3.ab3@1775>   MOVEA.l _execbase,A6
0001F06E <AmiBlitz3.ab3@1776>   MOVE.w $128(A6),D0
0001F070 <AmiBlitz3.ab3@1777>   MOVEQ.l #$00,D1
0001F074 <AmiBlitz3.ab3@1778>   ANDI.w #$F,D0
0001F078 <AmiBlitz3.ab3@1781>     BEQ.b calcvbr__skip
0001F07A <AmiBlitz3.ab3@1782>     ADDQ.w #1,D1
0001F07C <AmiBlitz3.ab3@1783>     LSR.w #1,D0
0001F080 <AmiBlitz3.ab3@1784> BRA.b calcvbr_loop
0001F082 <AmiBlitz3.ab3@1787>   MOVEQ.l #$00,D2
0001F086 <AmiBlitz3.ab3@1788>   CMP.w #$2,D1
0001F08A <AmiBlitz3.ab3@1789>    BCS.b calcvbr__skip2
0001F090 <AmiBlitz3.ab3@1790>   MOVEA.l _execbase,A6
0001F094 <AmiBlitz3.ab3@1791>   JSR _SuperState(A6)
0001F098 <AmiBlitz3.ab3@1792>   Dc.l $4E7A2801                                           ;movec vbr,D2
0001F09C <AmiBlitz3.ab3@1793>   JSR _UserState(A6)
0001F0A2 <AmiBlitz3.ab3@1796>   MOVE.l D2,vbr
0001F0A4 <AmiBlitz3.ab3@1797> RTS
0001F0AA <AmiBlitz3.ab3@1801>   LEA instrtab,a0
0001F0B0 <AmiBlitz3.ab3@1802>   MOVE.l #labelhash-instrtab,d0
0001F0B2 <AmiBlitz3.ab3@1803>   ASR.l #2,d0
0001F0B4 <AmiBlitz3.ab3@1804>   SUBQ.l #1,d0
0001F0B6 <AmiBlitz3.ab3@1807>   CLR.l (a0)+
0001F0B8 <AmiBlitz3.ab3@1808>   SUBQ.l #1,d0
0001F0BC <AmiBlitz3.ab3@1809>   BNE 'l10
0001F0C0 <AmiBlitz3.ab3@1810>   BSR.w call_setpointerbusy
0001F0C4 <AmiBlitz3.ab3@1811>   BSR.w free_userlibs
0001F0C8 <AmiBlitz3.ab3@1812>   BSR.w scan_for_userlibs
0001F0CC <AmiBlitz3.ab3@1813>   BSR.w JL_0_7082
0001F0D0 <AmiBlitz3.ab3@1814> BRA.w call_setpointernormal
0001F0FA <AmiBlitz3.ab3@1820>   !basic
0001F134 <AmiBlitz3.ab3@1821>   Poke.l ?size_acidlibs, dos_GetFileSize{Peek$(?str_path_acidlibs)}
0001F144 <AmiBlitz3.ab3@1823>   deflibNameP.l = Peek.l(?deflib)
0001F14E <AmiBlitz3.ab3@1824>   If deflibNameP
0001F180 <AmiBlitz3.ab3@1825>     If Peek.s(deflibNameP)<>""
0001F1CA <AmiBlitz3.ab3@1826>       Poke.l ?size_deflibs, dos_GetFileSize{Peek.s(Peek.l(?deflib))}
0001F1D0 <AmiBlitz3.ab3@1827>     Else
0001F20A <AmiBlitz3.ab3@1828>       Poke.l ?size_deflibs, dos_GetFileSize{Peek.s(?str_path_deflibs)}
0001F210 <AmiBlitz3.ab3@1830>   Else
0001F24A <AmiBlitz3.ab3@1831>     Poke.l ?size_deflibs, dos_GetFileSize{Peek.s(?str_path_deflibs)}
0001F284 <AmiBlitz3.ab3@1832>     error{"INTERNAL: Invalid deflib name pointer!"}
0001F2A2 <AmiBlitz3.ab3@1834>   !asm
0001F2A8 <AmiBlitz3.ab3@1839>   MOVE.l #str_path_userlibs,D1
0001F2AA <AmiBlitz3.ab3@1840>   MOVEQ.l #-$02,D2
0001F2B0 <AmiBlitz3.ab3@1841>   MOVEA.l _dosbase,A6
0001F2B4 <AmiBlitz3.ab3@1842>   JSR _Lock(A6)
0001F2B6 <AmiBlitz3.ab3@1843>   MOVE.l D0,D7
0001F2BA <AmiBlitz3.ab3@1844>    BEQ.w exit_get_libraries
0001F2BC <AmiBlitz3.ab3@1845>   MOVE.l D7,D1
0001F2C2 <AmiBlitz3.ab3@1846>   MOVE.l #ptr_parameterstore,D2
0001F2C6 <AmiBlitz3.ab3@1847>   JSR _Examine(A6)
0001F2C8 <AmiBlitz3.ab3@1848>   TST.l D0
0001F2CC <AmiBlitz3.ab3@1849>   BEQ.w unlock_and_exit_get_libraries
0001F2D2 <AmiBlitz3.ab3@1850>   MOVE.l fib_DirEntryType,D0
0001F2D6 <AmiBlitz3.ab3@1851>   BMI.w unlock_and_exit_get_libraries
0001F2D8 <AmiBlitz3.ab3@1856>     MOVE.l D7,D1
0001F2DE <AmiBlitz3.ab3@1857>     MOVE.l #ptr_parameterstore,D2
0001F2E4 <AmiBlitz3.ab3@1858>     MOVEA.l _dosbase,A6
0001F2E8 <AmiBlitz3.ab3@1859>     JSR _ExNext(A6)
0001F2EA <AmiBlitz3.ab3@1860>     TST.l D0
0001F2EE <AmiBlitz3.ab3@1861>      BEQ.w exit_scan_libsdrawer                            ; kein weiteres File
0001F2F4 <AmiBlitz3.ab3@1863>     MOVE.l fib_DirEntryType,D0                             ; positive for directoies, negative for files
0001F2F8 <AmiBlitz3.ab3@1864>     BPL.w scan_libsdrawer                                  ; skip directories
0001F2FE <AmiBlitz3.ab3@1866>     LEA fib_FileName,A0                                    ; pruefen ob infofile
0001F302 <AmiBlitz3.ab3@1867>     BSR.w check_for_infoextention
0001F306 <AmiBlitz3.ab3@1868>     BEQ.w scan_libsdrawer
0001F30C <AmiBlitz3.ab3@1870>     MOVEA.l _execbase,A6                                   ; allocate $26 = 38 bytes fuer listeneintrag
0001F30E <AmiBlitz3.ab3@1871>     MOVEQ.l #$26,D0
0001F310 <AmiBlitz3.ab3@1872>     MOVEQ.l #$01,D1
0001F316 <AmiBlitz3.ab3@1873>     MOVE.l mempool,a0
0001F31A <AmiBlitz3.ab3@1874>     JSR _AllocPooled(a6)
0001F320 <AmiBlitz3.ab3@1876>     MOVEA.l _dosbase,A6
0001F322 <AmiBlitz3.ab3@1877>     MOVE.l D0,D6                                           ; sichere speicheradresse in D6
0001F328 <AmiBlitz3.ab3@1880>     LEA ptr_userlibs_list,A0                               ; pruefe liste
0001F32A <AmiBlitz3.ab3@1883>     MOVE.l (A0),D5
0001F32E <AmiBlitz3.ab3@1884>      BEQ.w JL_0_3722                                       ; kein pointer da? kann springe weiter
0001F330 <AmiBlitz3.ab3@1885>     MOVEA.l D5,A2
0001F332 <AmiBlitz3.ab3@1886>     ADDQ.w #6,A2                                           ; 6 bytes weiter gehen, um dateinamen zu speichern
0001F338 <AmiBlitz3.ab3@1889>     LEA fib_FileName,A1                                    ; vergleich, ob Dateiname schon in der liste ist
0001F33A <AmiBlitz3.ab3@1892>       MOVEQ.l #$00,D0
0001F33C <AmiBlitz3.ab3@1893>       MOVE.b (A1)+,D0
0001F340 <AmiBlitz3.ab3@1894>        BEQ.w JL_0_3722                                     ; dateiname komplett, dann weiter
0001F342 <AmiBlitz3.ab3@1895>       MOVEQ.l #$00,D1
0001F344 <AmiBlitz3.ab3@1896>       MOVE.b (A2)+,D1
0001F348 <AmiBlitz3.ab3@1897>        BEQ.w JL_0_371C
0001F36A <AmiBlitz3.ab3@1898>       !compare1                                            ;bsr.w tstalpha
0001F36E <AmiBlitz3.ab3@1899>       BNE.w JL_0_3702
0001F372 <AmiBlitz3.ab3@1900>       ANDI.w #$DF,D0
0001F374 <AmiBlitz3.ab3@1903>       EXG.l D0,D1
0001F396 <AmiBlitz3.ab3@1904>       !compare1                                            ;bsr.w tstalpha
0001F39A <AmiBlitz3.ab3@1905>       BNE.w JL_0_3710
0001F39E <AmiBlitz3.ab3@1906>       ANDI.w #$DF,D0
0001F3A0 <AmiBlitz3.ab3@1909>       EXG.l D0,D1
0001F3A2 <AmiBlitz3.ab3@1910>       CMP.b D1,D0
0001F3A6 <AmiBlitz3.ab3@1911>     BEQ.w JL_0_36E6
0001F3AA <AmiBlitz3.ab3@1912>     BCS.w JL_0_3722
0001F3AC <AmiBlitz3.ab3@1915>     MOVEA.l D5,A0
0001F3B0 <AmiBlitz3.ab3@1916> BRA.w JL_0_36D6
0001F3B2 <AmiBlitz3.ab3@1919>     MOVEA.l D6,A1                                          ; hier war die adresse des allokierten Speicers drin
0001F3B4 <AmiBlitz3.ab3@1920>     MOVE.l (A0),(A1)
0001F3B6 <AmiBlitz3.ab3@1921>     MOVE.l A1,(A0)
0001F3B8 <AmiBlitz3.ab3@1922>     ADDQ.w #4,A1                                           ; pointer zum naechsten namen ueberspringen
0001F3BC <AmiBlitz3.ab3@1923>     MOVE.w #$FFFF,(A1)+                                    ; $FFFF schreiben
0001F3C2 <AmiBlitz3.ab3@1924>     MOVEA.l #fib_FileName,A0                               ; dateinamen in die liste kopieren
0001F3C4 <AmiBlitz3.ab3@1927>       MOVE.b (A0)+,(A1)+
0001F3C8 <AmiBlitz3.ab3@1928>     BNE.w JL_0_3734
0001F3CC <AmiBlitz3.ab3@1929> BRA.w scan_libsdrawer
0001F3CE <AmiBlitz3.ab3@1932>   MOVE.l D7,D1
0001F3D4 <AmiBlitz3.ab3@1933>   MOVEA.l _dosbase,A6
0001F3D8 <AmiBlitz3.ab3@1934>   JSR _UnLock(A6)
0001F3DA <AmiBlitz3.ab3@1935>   MOVEQ.l #-$01,D0
0001F3DC <AmiBlitz3.ab3@1938> RTS
0001F3DE <AmiBlitz3.ab3@1941>   MOVE.l D7,D1
0001F3E4 <AmiBlitz3.ab3@1942>   MOVEA.l _dosbase,A6
0001F3E8 <AmiBlitz3.ab3@1943>   JSR _UnLock(A6)
0001F3EA <AmiBlitz3.ab3@1944>   MOVEQ.l #$00,D0
0001F3EC <AmiBlitz3.ab3@1945> RTS
0001F3F2 <AmiBlitz3.ab3@1949>   MOVEA.l _execbase,A6
0001F3F8 <AmiBlitz3.ab3@1950>   MOVEA.l ptr_userlibs_list,A2
0001F3FE <AmiBlitz3.ab3@1951>   CLR.l ptr_userlibs_list
0001F402 <AmiBlitz3.ab3@1954>     CMPA.w #$0,A2
0001F406 <AmiBlitz3.ab3@1955>     BEQ.w exit_free_userlib
0001F408 <AmiBlitz3.ab3@1956>       MOVEA.l A2,A1
0001F40A <AmiBlitz3.ab3@1957>       MOVEQ.l #$26,D0
0001F40C <AmiBlitz3.ab3@1958>       MOVEA.l (A2),A2
0001F412 <AmiBlitz3.ab3@1959>       MOVE.l mempool,a0
0001F418 <AmiBlitz3.ab3@1960>       MOVEA.l _execbase,A6
0001F41C <AmiBlitz3.ab3@1961>       JSR _FreePooled(A6)
0001F420 <AmiBlitz3.ab3@1962> BRA.w loop_free_userlib
0001F422 <AmiBlitz3.ab3@1965> RTS
0001F424 <AmiBlitz3.ab3@1968> pass:  Dc.w 0                                             ; smallpass org source
0001F426 <AmiBlitz3.ab3@1969> compiler_job: Dc.w 0                                      ; added by thilo: what the compiler is doing at the moment
0001F42C <AmiBlitz3.ab3@1973>   MOVE.l A7,errstack                                      ;startcompile
0001F432 <AmiBlitz3.ab3@1982>   CLR.l reqmode
0001F43C <AmiBlitz3.ab3@1984>   MOVE.l #Aclearallvars,errcont
0001F446 <AmiBlitz3.ab3@1985>   MOVE.l #concomstack,concomsp
0001F44A <AmiBlitz3.ab3@1993>   MOVE.w #1450,D0
0001F44C <AmiBlitz3.ab3@1994>   LSR.w #3,D0
0001F44E <AmiBlitz3.ab3@1995>   SUBQ.w #7,D0                                             ; 173
0001F454 <AmiBlitz3.ab3@1996>   MOVE.w D0,progressbar_width
0001F456 <AmiBlitz3.ab3@1997>   SWAP D0
0001F458 <AmiBlitz3.ab3@1998>   CLR.w D0
0001F45E <AmiBlitz3.ab3@1999>   MOVE.l numlines,d1
0001F462 <AmiBlitz3.ab3@2000>   DIVU.l d1,d0                                             ; progressbar_width / numlines
0001F464 <AmiBlitz3.ab3@2002>   TST.w D0
0001F468 <AmiBlitz3.ab3@2003>   BNE.w JL_0_37C0
0001F46A <AmiBlitz3.ab3@2004>   MOVEQ.l #-$01,D0
0001F470 <AmiBlitz3.ab3@2007>   MOVE.w D0,progress_per_line
0001F478 <AmiBlitz3.ab3@2016>   BTST #$7,use_debugger
0001F47C <AmiBlitz3.ab3@2018>   BNE 'debugon
0001F482 <AmiBlitz3.ab3@2019>   CLR.w debugmode
0001F486 <AmiBlitz3.ab3@2020> BRA.b 'debugoff
0001F48C <AmiBlitz3.ab3@2023>   SNE debugmode
0001F4C4 <AmiBlitz3.ab3@2031>   !ComData_SetB{comByte_DebugMode,debugmode}
0001F4CA <AmiBlitz3.ab3@2034>   CLR.w dirmode                                            ;direct mode flag
0001F4D0 <AmiBlitz3.ab3@2035>   CLR.w ezerr                                              ;quiet error
0001F4D6 <AmiBlitz3.ab3@2036>   CLR.l currentfunction
0001F4DC <AmiBlitz3.ab3@2037>   CLR.w connest
0001F4E2 <AmiBlitz3.ab3@2038>   CLR.w varmode
0001F4E8 <AmiBlitz3.ab3@2039>   CLR.w proceduremode
0001F4EE <AmiBlitz3.ab3@2040>   CLR.w ininclude
0001F4F4 <AmiBlitz3.ab3@2041>   CLR.w intstring
0001F4FA <AmiBlitz3.ab3@2042>   CLR.w pass
0001F502 <AmiBlitz3.ab3@2043>   MOVE.w #0,compiler_job
0001F508 <AmiBlitz3.ab3@2044>   CLR.l funcscanon
0001F50E <AmiBlitz3.ab3@2053>   CLR.l funcscanon
0001F512 <AmiBlitz3.ab3@2054>   BSR.w compileall
0001F518 <AmiBlitz3.ab3@2055> 
0001F51E <AmiBlitz3.ab3@2056>   TST.l errorcounter
0001F522 <AmiBlitz3.ab3@2057>   BEQ _skiperrorstop
0001F524 <AmiBlitz3.ab3@2058>   RTS
0001F52A <AmiBlitz3.ab3@2061>   MOVE.w dontwrite,d0
0001F52E <AmiBlitz3.ab3@2062>   CMP.w #1,d0
0001F532 <AmiBlitz3.ab3@2063>   BNE 'l3
0001F538 <AmiBlitz3.ab3@2064>   TST.l errorcounter
0001F53C <AmiBlitz3.ab3@2065>   BNE 'l3
0001F542 <AmiBlitz3.ab3@2066>   CLR.w dontwrite
0001F546 <AmiBlitz3.ab3@2067>   BSR compileall                                           ;if a function is not found
0001F54C <AmiBlitz3.ab3@2068>   ADDQ.w #1,pass
0001F58A <AmiBlitz3.ab3@2073>   !ComData_GetB{comByte_FuncOptimize,D0}  ; now its in the xtra file and can be put to GUI settings ; Wanderer
0001F58E <AmiBlitz3.ab3@2074>   BEQ 'out  ; only if func optimize is set >< 0; Wanderer
0001F594 <AmiBlitz3.ab3@2075>   LEA firstproc,a0
0001F59A <AmiBlitz3.ab3@2076>   CLR.l savefuncspace
0001F59C <AmiBlitz3.ab3@2077>   MOVE.l (a0),d0
0001F59E <AmiBlitz3.ab3@2081>     MOVE.l d0,a0
0001F5A2 <AmiBlitz3.ab3@2082>     BEQ 'out
0001F5A6 <AmiBlitz3.ab3@2083>     TST.b isfunc(a0)
0001F5AA <AmiBlitz3.ab3@2084>     BNE 'nex
0001F5AE <AmiBlitz3.ab3@2085>     MOVEM.l d2/a6/a0,-(a7)
0001F5B0 <AmiBlitz3.ab3@2087>     MOVEQ #0,d0
0001F5B4 <AmiBlitz3.ab3@2088>     MOVE.b $21+#funcentry_extend-1(a0),d0
0001F5B8 <AmiBlitz3.ab3@2089>     SUB.w #$21+#funcentry_extend,d0
0001F5BC <AmiBlitz3.ab3@2090>     ADD.w #16,d0
0001F5C2 <AmiBlitz3.ab3@2091>     MOVE.l #$10000,d1
0001F5C4 <AmiBlitz3.ab3@2092>     MOVE.l d0,d2
0001F5CA <AmiBlitz3.ab3@2093>     MOVEA.l _execbase,A6
0001F5CE <AmiBlitz3.ab3@2094>     JSR _AllocMem(a6)         ; thilo: not 100% sure about this!
0001F5D0 <AmiBlitz3.ab3@2095>     MOVE.l d0,a1
0001F5D4 <AmiBlitz3.ab3@2096>     MOVE.l d2,4(a1)
0001F5DA <AmiBlitz3.ab3@2097>     MOVE.l unusedfunc,(a1)
0001F5E0 <AmiBlitz3.ab3@2098>     MOVE.l d0,unusedfunc
0001F5E4 <AmiBlitz3.ab3@2099>     MOVEM.l (a7)+,a6/a0/d2
0001F5E8 <AmiBlitz3.ab3@2100>     MOVE.l isfunc+1(a0),d0
0001F5EA <AmiBlitz3.ab3@2101>     ADDQ.l #6,d0
0001F5F0 <AmiBlitz3.ab3@2102>     ADD.l d0,savefuncspace
0001F5F4 <AmiBlitz3.ab3@2105>     MOVE.l d0,8(a1)
0001F5F8 <AmiBlitz3.ab3@2106>     LEA 12(a1),a1
0001F5FA <AmiBlitz3.ab3@2107>     MOVE.l a0,-(a7)
0001F5FE <AmiBlitz3.ab3@2108>     LEA $21+#funcentry_extend(a0),a0
0001F600 <AmiBlitz3.ab3@2111>       MOVE.b (a0)+,(a1)+
0001F604 <AmiBlitz3.ab3@2112>     BNE 'l1
0001F606 <AmiBlitz3.ab3@2113>     MOVE.l (a7)+,a0
0001F608 <AmiBlitz3.ab3@2116>     MOVE.l (a0),d0
0001F60C <AmiBlitz3.ab3@2117> BRA 'lr1
0001F614 <AmiBlitz3.ab3@2120>   BTST #$7,make_smallestcode
0001F618 <AmiBlitz3.ab3@2121>   BEQ.b JL_0_3844                                           ;optimize for executable
0001F61E <AmiBlitz3.ab3@2122>   CLR.l morememadd
0001F622 <AmiBlitz3.ab3@2124>   BSR.w alloxadj
0001F626 <AmiBlitz3.ab3@2125>   BEQ.w JL_0_388A
0001F62A <AmiBlitz3.ab3@2128>   BSR.w compileall
0001F630 <AmiBlitz3.ab3@2129>   ADDQ.w #1,pass
0001F636 <AmiBlitz3.ab3@2132>   MOVE.w dontwrite,D1
0001F63A <AmiBlitz3.ab3@2133>   BEQ.w JL_0_38A2
0001F63E <AmiBlitz3.ab3@2153> BRA.w JL_0_3896
0001F646 <AmiBlitz3.ab3@2164>   MOVE.w #$FFFF,anyerrs
0001F64A <AmiBlitz3.ab3@2165> BRA.w JL_0_38A2
0001F64E <AmiBlitz3.ab3@2168>   BSR.w alloxinc                                          ;increase all by 50%
0001F652 <AmiBlitz3.ab3@2169>   BEQ.w Aclearallvars
0001F656 <AmiBlitz3.ab3@2170> BRA.w JL_0_3824
0001F65A <AmiBlitz3.ab3@2182> BRA.w JL_0_38A6                                            ;???????
0001F660 <AmiBlitz3.ab3@2186>   JSR freereps
0001F666 <AmiBlitz3.ab3@2187>   JSR freesels
0001F66C <AmiBlitz3.ab3@2188>   JSR AJL_0_6DF2
0001F672 <AmiBlitz3.ab3@2189>   JSR freepends
0001F678 <AmiBlitz3.ab3@2190>   JSR freeifs
0001F67E <AmiBlitz3.ab3@2191>   JSR AJL_0_C188
0001F684 <AmiBlitz3.ab3@2192>   JSR AJL_0_C15C
0001F68A <AmiBlitz3.ab3@2193>   JSR AJL_0_D9BC
0001F690 <AmiBlitz3.ab3@2196> JMP cleartemplabel
0001F694 <AmiBlitz3.ab3@2199> mempool2:  Dc.l 0
0001F69A <AmiBlitz3.ab3@2203>   JSR Aclearcache
0001F6A2 <AmiBlitz3.ab3@2205>   BTST #$7,use_debugger
0001F6A6 <AmiBlitz3.ab3@2207>   BNE 'debugon
0001F6AC <AmiBlitz3.ab3@2208>   CLR.w debugmode
0001F6B0 <AmiBlitz3.ab3@2209> BRA.b 'debugoff
0001F6B6 <AmiBlitz3.ab3@2212>   SNE debugmode
0001F6EE <AmiBlitz3.ab3@2217>   !ComData_SetB{comByte_DebugMode,debugmode}
0001F6F4 <AmiBlitz3.ab3@2219>   LEA regtable,a0
0001F6F6 <AmiBlitz3.ab3@2220>   MOVEQ #10,d0
0001F6F8 <AmiBlitz3.ab3@2223>     CLR.l (a0)+
0001F6FC <AmiBlitz3.ab3@2224>   DBF d0,'l1
0001F702 <AmiBlitz3.ab3@2226>   LEA includetemp2,a0
0001F704 <AmiBlitz3.ab3@2227>   CLR.b (a0)
0001F70E <AmiBlitz3.ab3@2228>   MOVE.l #7,maxregs
0001F714 <AmiBlitz3.ab3@2229>   CLR.w debugnest
0001F71A <AmiBlitz3.ab3@2230>   CLR.b funcparloop
0001F720 <AmiBlitz3.ab3@2231>   CLR.b nostringopt
0001F726 <AmiBlitz3.ab3@2232>   CLR.b firsttime
0001F72C <AmiBlitz3.ab3@2233>   CLR.l lastdestpointer
0001F732 <AmiBlitz3.ab3@2234>   CLR.l lastwritedat
0001F738 <AmiBlitz3.ab3@2235>   CLR.l prevwritedat
0001F73E <AmiBlitz3.ab3@2236>   CLR.l includeline
0001F744 <AmiBlitz3.ab3@2237>   CLR.b incnif
0001F74A <AmiBlitz3.ab3@2238>   CLR.b formode
0001F750 <AmiBlitz3.ab3@2239>   CLR.b funccall
0001F756 <AmiBlitz3.ab3@2240>   CLR.w objectcount
0001F75C <AmiBlitz3.ab3@2241>   CLR.b resdisable
0001F762 <AmiBlitz3.ab3@2242>   CLR.b developobject
0001F768 <AmiBlitz3.ab3@2243>   CLR.b optistring
0001F76E <AmiBlitz3.ab3@2244>   CLR.b optistring2
0001F774 <AmiBlitz3.ab3@2245>   CLR.b optiarray
0001F77A <AmiBlitz3.ab3@2246>   CLR.b quickadd
0001F780 <AmiBlitz3.ab3@2247>   CLR.w newmode
0001F786 <AmiBlitz3.ab3@2248>   CLR.w mode
0001F78C <AmiBlitz3.ab3@2249>   CLR.w string1
0001F792 <AmiBlitz3.ab3@2250>   CLR.b fastfunc
0001F798 <AmiBlitz3.ab3@2251>   CLR.w load_var_size
0001F79E <AmiBlitz3.ab3@2252>   CLR.w load_var_reg
0001F7A4 <AmiBlitz3.ab3@2253>   CLR.l load_var_addr
0001F7AA <AmiBlitz3.ab3@2254>   CLR.w imm_size
0001F7B0 <AmiBlitz3.ab3@2255>   CLR.w imm_reg
0001F7B6 <AmiBlitz3.ab3@2256>   CLR.l imm_addr
0001F7BC <AmiBlitz3.ab3@2257>   CLR.b _dcb
0001F7C2 <AmiBlitz3.ab3@2258>   CLR.l nohunkoffset
0001F7C8 <AmiBlitz3.ab3@2259>   CLR.b peekaddrsize
0001F7CE <AmiBlitz3.ab3@2260>   CLR.b typecheck
0001F7D4 <AmiBlitz3.ab3@2261>   CLR.b declare2
0001F7DA <AmiBlitz3.ab3@2262>   CLR.b declare
0001F7E0 <AmiBlitz3.ab3@2263>   CLR.l myoline                                          ;check
0001F7E6 <AmiBlitz3.ab3@2264>   CLR.l myline                                          ;check
0001F7EC <AmiBlitz3.ab3@2265>   CLR.b newvariable
0001F7F2 <AmiBlitz3.ab3@2266>   CLR.b saved0
0001F7F8 <AmiBlitz3.ab3@2267>   CLR.l bsssize
0001F7FE <AmiBlitz3.ab3@2268>   CLR.l chipsize
0001F804 <AmiBlitz3.ab3@2269>   CLR.b infunctioncode
0001F80A <AmiBlitz3.ab3@2270>   CLR.l errorcounter
0001F814 <AmiBlitz3.ab3@2271>   MOVE.l #-1,bssstart
0001F81E <AmiBlitz3.ab3@2272>   MOVE.l #-1,bssend
0001F828 <AmiBlitz3.ab3@2273>   MOVE.l #-1,chipstart
0001F832 <AmiBlitz3.ab3@2274>   MOVE.l #-1,chipend
0001F83A <AmiBlitz3.ab3@2275>   MOVE.w #0,bssmode
0001F840 <AmiBlitz3.ab3@2276>   CLR.w a2offset
0001F846 <AmiBlitz3.ab3@2277>   CLR.w fast
0001F84C <AmiBlitz3.ab3@2278>   CLR.w fpu
0001F852 <AmiBlitz3.ab3@2279>   CLR.b iee
0001F858 <AmiBlitz3.ab3@2280>   CLR.w newsyntax
0001F85C <AmiBlitz3.ab3@2281>   BSR.w JL_0_38A6
0001F862 <AmiBlitz3.ab3@2282>   JSR AJL_0_7962
0001F868 <AmiBlitz3.ab3@2283>   JSR frallvars
0001F86E <AmiBlitz3.ab3@2284>   JSR fralltypes
0001F874 <AmiBlitz3.ab3@2285>   JSR freemacs
0001F87A <AmiBlitz3.ab3@2286>   JSR clearfunctionlist
0001F880 <AmiBlitz3.ab3@2287>   TST.w pass
0001F886 <AmiBlitz3.ab3@2289>   JSR clearlabels
0001F88C <AmiBlitz3.ab3@2290>   JSR clearhash
0001F892 <AmiBlitz3.ab3@2293>   LEA devo,a0
0001F896 <AmiBlitz3.ab3@2294>   MOVEM.l a0-a6/d0-d7,-(a7)
0001F89C <AmiBlitz3.ab3@2295>   LEA ptr_parameterstore,a1
0001F89E <AmiBlitz3.ab3@2298>     MOVE.b (a0)+,(a1)+
0001F8A2 <AmiBlitz3.ab3@2299>   BNE 'l1b
0001F8A4 <AmiBlitz3.ab3@2300>   MOVEQ #13,d2
0001F8AA <AmiBlitz3.ab3@2301>   JSR findlabel2
0001F8AE <AmiBlitz3.ab3@2302>   BNE 'd
0001F8B2 <AmiBlitz3.ab3@2303>   CLR.l 8(a2)
0001F8B6 <AmiBlitz3.ab3@2306>   MOVEM.l (a7)+,a0-a6/d0-d7
0001F8E0 <AmiBlitz3.ab3@2307>   !basic
0001F954 <AmiBlitz3.ab3@2308>   dos_Delete{dos_AddPart{my_systemdir$,"ab_compileerror.txt"}}
0001F972 <AmiBlitz3.ab3@2309>   !asm
0001F978 <AmiBlitz3.ab3@2310>   CLR.b returncode
0001F97E <AmiBlitz3.ab3@2311> JMP freeprocvs
0001F984 <AmiBlitz3.ab3@2315>   MOVE.l #bssstore-labelhash,d0
0001F986 <AmiBlitz3.ab3@2316>   ASR.l #2,d0
0001F98C <AmiBlitz3.ab3@2317>   LEA labelhash,a0
0001F98E <AmiBlitz3.ab3@2320>     CLR.l (a0)+
0001F990 <AmiBlitz3.ab3@2321>     SUBQ.l #1,d0
0001F994 <AmiBlitz3.ab3@2322>   BNE.s 'l10
0001F99A <AmiBlitz3.ab3@2324>   LEA labelbase,a1
0001F99C <AmiBlitz3.ab3@2325>   MOVE.l (a1),d0
0001F9A0 <AmiBlitz3.ab3@2326>   BEQ 'l11
0001F9A2 <AmiBlitz3.ab3@2329>     MOVE.l d0,a1
0001F9A6 <AmiBlitz3.ab3@2330>     TST.l 4(a1)
0001F9AA <AmiBlitz3.ab3@2331>     BEQ 'l29
0001F9AE <AmiBlitz3.ab3@2332>     LEA $13(a1),a0
0001F9B0 <AmiBlitz3.ab3@2333>     MOVEQ #0,d0
0001F9B2 <AmiBlitz3.ab3@2334>     MOVEQ #0,d1
0001F9B4 <AmiBlitz3.ab3@2337>       MOVE.b (a0)+,d1
0001F9B8 <AmiBlitz3.ab3@2338>       BEQ 'l12
0001F9BE <AmiBlitz3.ab3@2339>       !hashalgo
0001F9C2 <AmiBlitz3.ab3@2340> BRA 'l13
0001F9C8 <AmiBlitz3.ab3@2343>     LEA labelhash,a0
0001F9CE <AmiBlitz3.ab3@2344>     AND.l #hashsize,d0
0001F9D0 <AmiBlitz3.ab3@2345>      ASL.l #2,d0
0001F9D4 <AmiBlitz3.ab3@2346>     MOVE.l 0(a0,d0),d1                                     ;*4
0001F9D8 <AmiBlitz3.ab3@2347>     MOVE.l d1,$c(a1)
0001F9DC <AmiBlitz3.ab3@2348>     MOVE.l a1,0(a0,d0)
0001F9DE <AmiBlitz3.ab3@2351>     MOVE.l (a1),d0
0001F9E2 <AmiBlitz3.ab3@2352>   BNE 'l21
0001F9E4 <AmiBlitz3.ab3@2355> RTS
0001F9EA <AmiBlitz3.ab3@2359>   MOVEA.l lastrestype,A0
0001F9EC <AmiBlitz3.ab3@2360>   MOVEA.l (A0),A2
0001F9EE <AmiBlitz3.ab3@2361>   CLR.l (A0)
0001F9F4 <AmiBlitz3.ab3@2362> JMP freetypes
0001F9FA <AmiBlitz3.ab3@2366>   MOVEA.l varbase,A3
0001FA00 <AmiBlitz3.ab3@2367>   CLR.l varbase
0001FA04 <AmiBlitz3.ab3@2370>   CMPA.w #$0,A3
0001FA08 <AmiBlitz3.ab3@2371>   BEQ.w 'l20
0001FA0A <AmiBlitz3.ab3@2372>   MOVEA.l A3,A1
0001FA0C <AmiBlitz3.ab3@2373>   MOVEA.l (A3),A3
0001FA0E <AmiBlitz3.ab3@2374>   MOVEQ.l #$00,D0
0001FA12 <AmiBlitz3.ab3@2375>   MOVE.b $E+4(A1),D0
0001FA18 <AmiBlitz3.ab3@2376>   MOVEA.l _execbase,A6
0001FA1E <AmiBlitz3.ab3@2377>   MOVE.l mempool2,a0
0001FA22 <AmiBlitz3.ab3@2378>   JSR _FreePooled(A6)
0001FA26 <AmiBlitz3.ab3@2379> BRA.w 'l10
0001FA28 <AmiBlitz3.ab3@2382> RTS
0001FA2E <AmiBlitz3.ab3@2387>   LEA firstiff,A2
0001FA30 <AmiBlitz3.ab3@2388>   MOVEQ.l #$0E,D2
0001FA36 <AmiBlitz3.ab3@2389> JMP freeslist
0001FA38 <AmiBlitz3.ab3@2395> progressbar_width:   Dc.w 100                              ;riteend org source ;right end of include strip
0001FA3A <AmiBlitz3.ab3@2396> inmacro:             Ds.w 1                                ;macmask org source ;macro found
0001FA40 <AmiBlitz3.ab3@2400>   CLR.w inmacro
0001FA46 <AmiBlitz3.ab3@2401>   ADDQ.l #1,globallinecount
0001FA4C <AmiBlitz3.ab3@2402>   CLR.b nostringopt
0001FA50 <AmiBlitz3.ab3@2403>   BSR.w JL_0_3CA4
0001FA56 <AmiBlitz3.ab3@2404>   CLR.w instringon
0001FA5C <AmiBlitz3.ab3@2407>   TST.w ininclude
0001FA60 <AmiBlitz3.ab3@2408>   BEQ.w JL_0_39B0
0001FA66 <AmiBlitz3.ab3@2409>   ADDQ.l #1,includeline
0001FA6C <AmiBlitz3.ab3@2410>     JSR ab3_WriteDebugFile
0001FA72 <AmiBlitz3.ab3@2411>   JSR AJL_0_C09E
0001FA76 <AmiBlitz3.ab3@2412>   BEQ.w JL_0_39B0
0001FA7C <AmiBlitz3.ab3@2413>   MOVE.w ininclude,D0
0001FA80 <AmiBlitz3.ab3@2414>   CMP.w #$4,D0
0001FA84 <AmiBlitz3.ab3@2415>   BCC.w JL_0_39AC
0001FA86 <AmiBlitz3.ab3@2416>   ADD.w D0,D0
0001FA8C <AmiBlitz3.ab3@2417>   LEA progress_per_line,A0
0001FA90 <AmiBlitz3.ab3@2418>   MOVE.w $0(A0,D0.W),D2
0001FA94 <AmiBlitz3.ab3@2419>   CMP.w progressbar_width(PC),D2
0001FA98 <AmiBlitz3.ab3@2420>   BCC.w JL_0_39AC
0001FA9C <AmiBlitz3.ab3@2421>   ADDQ.w #1,$0(A0,D0.W)
0001FA9E <AmiBlitz3.ab3@2422>   LSR.w #1,D0
0001FAA0 <AmiBlitz3.ab3@2423>   MOVE.l d0,d1
0001FAA2 <AmiBlitz3.ab3@2424>   EXT.l d1
0001FAA4 <AmiBlitz3.ab3@2425>   MOVE.l d2,d0
0001FAA6 <AmiBlitz3.ab3@2426>   EXT.l d0                                                 ;d0=x,d1=y
0001FAAC <AmiBlitz3.ab3@2428>   JSR update_progressbar
0001FAAE <AmiBlitz3.ab3@2431>   MOVEQ.l #-$01,D0
0001FAB0 <AmiBlitz3.ab3@2432> RTS
0001FAB6 <AmiBlitz3.ab3@2436>   MOVE.l titleat,D0
0001FAB8 <AmiBlitz3.ab3@2437>   MOVEQ.l #$00,D1
0001FABE <AmiBlitz3.ab3@2438>   MOVE.w progress_per_line,D1
0001FAC0 <AmiBlitz3.ab3@2439>   ADD.l D1,D0
0001FAC2 <AmiBlitz3.ab3@2440>   MOVE.l D0,D1
0001FAC4 <AmiBlitz3.ab3@2441>   SWAP D0
0001FACA <AmiBlitz3.ab3@2442>   CMP.w titleat,D0
0001FACE <AmiBlitz3.ab3@2443>    BEQ.w JL_0_39E4
0001FAD0 <AmiBlitz3.ab3@2447>   EXT.l d0
0001FAD2 <AmiBlitz3.ab3@2448>   MOVE.l d1,-(a7)
0001FADA <AmiBlitz3.ab3@2451>   MOVE.w #1,compiler_job                                    ; set to compiler job 1 (=build executable)
0001FAE0 <AmiBlitz3.ab3@2452>   JSR update_progressbar
0001FAE8 <AmiBlitz3.ab3@2453>   MOVE.w #0,compiler_job                                    ; set to compiler job 0 (=compile source)
0001FAEA <AmiBlitz3.ab3@2457>   MOVE.l (a7)+,d1
0001FAF0 <AmiBlitz3.ab3@2460>   MOVE.l D1,titleat
0001FAF6 <AmiBlitz3.ab3@2461>   ADDQ.l #1,linenumat
0001FAFC <AmiBlitz3.ab3@2462>   CLR.w linedone
0001FB02 <AmiBlitz3.ab3@2463>   JSR ab3_WriteDebugFile  ; write to DebugFile every main source line
0001FB08 <AmiBlitz3.ab3@2465>   SUBQ.l #1,numlines2
0001FB0C <AmiBlitz3.ab3@2466>    BEQ.w JL_0_3A12
0001FB12 <AmiBlitz3.ab3@2467>   MOVEA.l sourceline,A0
0001FB14 <AmiBlitz3.ab3@2468>   MOVEA.l (A0),A0
0001FB1A <AmiBlitz3.ab3@2469>   MOVE.l A0,sourceline
0001FB1E <AmiBlitz3.ab3@2470>   LEA $9(A0),A5
0001FB20 <AmiBlitz3.ab3@2473> RTS
0001FB22 <AmiBlitz3.ab3@2477>   MOVE.w D0,-(A7)
0001FB24 <AmiBlitz3.ab3@2478>   MOVEQ.l #$03,D0
0001FB26 <AmiBlitz3.ab3@2481>     MOVE.w D1,D2
0001FB2A <AmiBlitz3.ab3@2482>     ANDI.w #$F,D2
0001FB2E <AmiBlitz3.ab3@2483>     ADDI.w #$30,D2
0001FB32 <AmiBlitz3.ab3@2484>     CMP.w #$3A,D2
0001FB36 <AmiBlitz3.ab3@2485>      BCS.w JL_0_3A2C
0001FB38 <AmiBlitz3.ab3@2486>     ADDQ.w #7,D2
0001FB3C <AmiBlitz3.ab3@2489>     MOVE.b D2,$0(A0,D0.W)
0001FB3E <AmiBlitz3.ab3@2490>     LSR.w #4,D1
0001FB42 <AmiBlitz3.ab3@2491>   DBF D0,JL_0_3A18
0001FB44 <AmiBlitz3.ab3@2493>   MOVE.w (A7)+,D0
0001FB46 <AmiBlitz3.ab3@2494> RTS
0001FB4C <AmiBlitz3.ab3@2504>   MOVE.w skipcode,D1
0001FB50 <AmiBlitz3.ab3@2505>   BNE.w JL_0_3A46
0001FB52 <AmiBlitz3.ab3@2506> RTS
0001FB54 <AmiBlitz3.ab3@2509>   MOVE.l A5,-(A7)
0001FB56 <AmiBlitz3.ab3@2510>   MOVEQ.l #$3A,D1                                          ;':'
0001FB58 <AmiBlitz3.ab3@2511>   MOVEQ.l #$21,D2                                          ;'!'
0001FB5A <AmiBlitz3.ab3@2512>   MOVEQ.l #$3B,D3                                          ;';'
0001FB5C <AmiBlitz3.ab3@2513>   MOVEQ.l #$22,D4                                          ;'"'
0001FB5E <AmiBlitz3.ab3@2516>   MOVE.b (A5)+,D0
0001FB62 <AmiBlitz3.ab3@2517>    BEQ.w JL_0_3CA0
0001FB66 <AmiBlitz3.ab3@2518>    BPL.w JL_0_3A60
0001FB68 <AmiBlitz3.ab3@2519>   MOVE.b (A5)+,D0
0001FB6C <AmiBlitz3.ab3@2520> BRA.w JL_0_3A50
0001FB6E <AmiBlitz3.ab3@2523>   CMP.b D4,D0
0001FB72 <AmiBlitz3.ab3@2524>    BNE.w JL_0_3A82
0001FB74 <AmiBlitz3.ab3@2527>   MOVE.b (A5)+,D0
0001FB78 <AmiBlitz3.ab3@2528>    BEQ.w notqerr
0001FB7C <AmiBlitz3.ab3@2534>   CMP.b #$22,D0
0001FB80 <AmiBlitz3.ab3@2535>    BNE.w JL_0_3A66
0001FB84 <AmiBlitz3.ab3@2536> BRA.w JL_0_3A50
0001FB86 <AmiBlitz3.ab3@2539>   CMP.b D1,D0
0001FB8A <AmiBlitz3.ab3@2540>    BEQ.w JL_0_3CA0
0001FB8C <AmiBlitz3.ab3@2541>   CMP.b D3,D0
0001FB90 <AmiBlitz3.ab3@2542>    BEQ.w JL_0_3CA0
0001FB92 <AmiBlitz3.ab3@2545>   CMP.b D2,D0
0001FB96 <AmiBlitz3.ab3@2546>    BNE.w JL_0_3A50
0001FB9E <AmiBlitz3.ab3@2547>   MOVE.w #$FFFF,inmacro                                    ; no runtimecheck in macros
0001FBA0 <AmiBlitz3.ab3@2548>   MOVEA.l A5,A3
0001FBA6 <AmiBlitz3.ab3@2549>    JSR getparameter2
0001FBAA <AmiBlitz3.ab3@2550>    BNE.w JL_0_3AAC
0001FBB0 <AmiBlitz3.ab3@2551> JMP syntaxerr
0001FBBA <AmiBlitz3.ab3@2556>    MOVE.w oldqflag,instringon
0001FBC0 <AmiBlitz3.ab3@2557>   MOVEA.l lastsourcepos,A5
0001FBC6 <AmiBlitz3.ab3@2558>    JSR findmac                                             ;find macro
0001FBCA <AmiBlitz3.ab3@2559>    BEQ.w JL_0_3ABE
0001FBD0 <AmiBlitz3.ab3@2560> JMP nomacerr
0001FBD6 <AmiBlitz3.ab3@2563>   TST.b debugmode
0001FBDA <AmiBlitz3.ab3@2564>   BEQ 'sk1
0001FBDE <AmiBlitz3.ab3@2565>   MOVE.w #$4e71,d1
0001FBE4 <AmiBlitz3.ab3@2566>   JSR writeword
0001FBE6 <AmiBlitz3.ab3@2567>   MOVE.l a5,-(a7)
0001FBE8 <AmiBlitz3.ab3@2568>   MOVE.l a3,a5
0001FBEA <AmiBlitz3.ab3@2569>   SUBQ.l #1,a5
0001FBF2 <AmiBlitz3.ab3@2570>   MOVE.w #$0,inmacro
0001FBF6 <AmiBlitz3.ab3@2571>   BSR debugstuffa
0001FBFE <AmiBlitz3.ab3@2572>   MOVE.w #$FFFF,inmacro
0001FC00 <AmiBlitz3.ab3@2573>   MOVE.l (a7)+,a5
0001FC04 <AmiBlitz3.ab3@2574>   MOVE.w #$4e71,d1
0001FC0A <AmiBlitz3.ab3@2575>   JSR writeword
0001FC0C <AmiBlitz3.ab3@2578>   MOVEA.l A5,A4
0001FC10 <AmiBlitz3.ab3@2581>    CMP.b #" ",(a4)+
0001FC14 <AmiBlitz3.ab3@2582>     BEQ 'l5a
0001FC16 <AmiBlitz3.ab3@2583>      SUBQ.l#1,a4
0001FC1A <AmiBlitz3.ab3@2584>      CMP.b #",",(a4)
0001FC1E <AmiBlitz3.ab3@2585>     BEQ JL_0_3AEA
0001FC20 <AmiBlitz3.ab3@2588>   MOVEQ.l #$00,D4
0001FC26 <AmiBlitz3.ab3@2589>   TST.b newsyntax
0001FC2A <AmiBlitz3.ab3@2590>   BEQ 'l10b
0001FC2E <AmiBlitz3.ab3@2591>   MOVEM.l a0/d0,-(a7)
0001FC32 <AmiBlitz3.ab3@2592>   MOVE.l 4(a2),a0
0001FC36 <AmiBlitz3.ab3@2593>   MOVE.w 8(a2),d0
0001FC3A <AmiBlitz3.ab3@2596>   CMP.b #"`",(a0)+
0001FC3E <AmiBlitz3.ab3@2597>   BEQ 'x1
0001FC40 <AmiBlitz3.ab3@2598>   SUBQ.w #1,d0
0001FC44 <AmiBlitz3.ab3@2599>   BNE 'x2
0001FC48 <AmiBlitz3.ab3@2600> BRA 'x3
0001FC4C <AmiBlitz3.ab3@2603>   MOVEM.l (a7)+,a0/d0
0001FC50 <AmiBlitz3.ab3@2604> BRA 'l10
0001FC54 <AmiBlitz3.ab3@2607>   MOVEM.l (a7)+,a0/d0
0001FC58 <AmiBlitz3.ab3@2608> BRA JL_0_3AEA
0001FC5C <AmiBlitz3.ab3@2611>   CMPI.b #"{",(A4)
0001FC60 <AmiBlitz3.ab3@2612>    BNE.w JL_0_3AEA
0001FC62 <AmiBlitz3.ab3@2616>   ADDQ.l #1,a4
0001FC66 <AmiBlitz3.ab3@2619>     CMP.b #" ",(a4)
0001FC6A <AmiBlitz3.ab3@2620>     BEQ 'l5
0001FC6E <AmiBlitz3.ab3@2621>     MOVEM.l a0/d0,-(a7)
0001FC74 <AmiBlitz3.ab3@2622>     CLR.b exmac
0001FC7A <AmiBlitz3.ab3@2623>     LEA chartab,a0
0001FC7C <AmiBlitz3.ab3@2624>     MOVEQ #0,d0
0001FC7E <AmiBlitz3.ab3@2625>     MOVE.b (a4),d0
0001FC82 <AmiBlitz3.ab3@2626>     BMI 'm1
0001FC86 <AmiBlitz3.ab3@2627>     TST.b 0(a0,d0)
0001FC8A <AmiBlitz3.ab3@2628>     BEQ 'm1
0001FC90 <AmiBlitz3.ab3@2629>     TST.b newsyntax
0001FC94 <AmiBlitz3.ab3@2630>     BEQ 'ns1
0001FC98 <AmiBlitz3.ab3@2631>     CMP.b #"#",d0
0001FC9C <AmiBlitz3.ab3@2632>     BEQ 'm1
0001FCA0 <AmiBlitz3.ab3@2633>     CMP.b #"$",d0
0001FCA4 <AmiBlitz3.ab3@2634>     BEQ 'm1
0001FCA8 <AmiBlitz3.ab3@2635>     CMP.b #"-",d0
0001FCAC <AmiBlitz3.ab3@2636>     BEQ 'm1
0001FCB0 <AmiBlitz3.ab3@2639>   CMP.b #",",d0
0001FCB4 <AmiBlitz3.ab3@2640>     BEQ 'm1
0001FCB8 <AmiBlitz3.ab3@2641>     CMP.b #"{",d0
0001FCBC <AmiBlitz3.ab3@2642>     BNE 'm1b
0001FCBE <AmiBlitz3.ab3@2643>     ADDQ.l #1,a4
0001FCC2 <AmiBlitz3.ab3@2644> BRA 'm1
0001FCC8 <AmiBlitz3.ab3@2647>   TST.b newsyntax
0001FCCC <AmiBlitz3.ab3@2648>     BEQ 'm1
0001FCD4 <AmiBlitz3.ab3@2649>     MOVE.b #1,exmac
0001FCD8 <AmiBlitz3.ab3@2652>   MOVEM.l (a7)+,a0/d0
0001FCDE <AmiBlitz3.ab3@2653>     TST.b exmac
0001FCE2 <AmiBlitz3.ab3@2654>     BNE JL_0_3AEA
0001FCE4 <AmiBlitz3.ab3@2661>   TST.b (a4)
0001FCE8 <AmiBlitz3.ab3@2662>   BEQ JL_0_3AEA
0001FCEE <AmiBlitz3.ab3@2665>   MOVEA.l ptr_macrobuffer_begin,A0
0001FCF0 <AmiBlitz3.ab3@2668>   ADDQ.w #1,D4
0001FCF2 <AmiBlitz3.ab3@2669>   MOVE.l A4,(A0)
0001FCF6 <AmiBlitz3.ab3@2670>   CLR.w 4(a0)
0001FCFA <AmiBlitz3.ab3@2671>    BSR.w JL_0_3CC6
0001FCFC <AmiBlitz3.ab3@2673>   ADDQ.l #4,a0
0001FCFE <AmiBlitz3.ab3@2677>   SUBQ.w #1,(a0)+
0001FD02 <AmiBlitz3.ab3@2678>   CMP.b #$7D,D0
0001FD06 <AmiBlitz3.ab3@2679>   BEQ 'l10
0001FD08 <AmiBlitz3.ab3@2680>   TST.b d0
0001FD0C <AmiBlitz3.ab3@2681>   BEQ 'l10
0001FD10 <AmiBlitz3.ab3@2682> BRA JL_0_3AD0
0001FD16 <AmiBlitz3.ab3@2686>   CLR.l sourceline3
0001FD18 <AmiBlitz3.ab3@2687>   MOVEA.l A4,A5
0001FD1E <AmiBlitz3.ab3@2690>   MOVE.w D4,numarg
0001FD24 <AmiBlitz3.ab3@2697>   MOVE.l #$01,D1
0001FD2A <AmiBlitz3.ab3@2698>   MOVEA.l _execbase,A6
0001FD30 <AmiBlitz3.ab3@2699>   MOVE.l mempool,a0
0001FD36 <AmiBlitz3.ab3@2700>   MOVE.l macrobuffer_size,D0
0001FD3C <AmiBlitz3.ab3@2701>   CMP.l #40000,d0
0001FD40 <AmiBlitz3.ab3@2702>   BGE 'l1m
0001FD46 <AmiBlitz3.ab3@2703>   MOVE.l #40000,d0
0001FD4C <AmiBlitz3.ab3@2704>   MOVE.l d0,macrobuffer_size
0001FD50 <AmiBlitz3.ab3@2707>   JSR _AllocPooled(a6)
0001FD5A <AmiBlitz3.ab3@2709>   MOVE.l myline,myoline
0001FD5C <AmiBlitz3.ab3@2712>   ADDQ.l #1,d0
0001FD62 <AmiBlitz3.ab3@2713>   MOVE.l D0,myline
0001FD64 <AmiBlitz3.ab3@2714>   MOVEA.l D0,A1
0001FD6A <AmiBlitz3.ab3@2715>   MOVE.b #":",-1(a1)
0001FD6C <AmiBlitz3.ab3@2716>   MOVEA.l A1,A6
0001FD72 <AmiBlitz3.ab3@2717>   ADDA.l macrobuffer_size,A6
0001FD74 <AmiBlitz3.ab3@2718>   MOVEA.l (A7)+,A0
0001FD76 <AmiBlitz3.ab3@2721>   CMPA.l A6,A1
0001FD7A <AmiBlitz3.ab3@2722>    BCC.w mbovererr
0001FD7C <AmiBlitz3.ab3@2723>   MOVE.b (A0)+,(a1)+
0001FD7E <AmiBlitz3.ab3@2724>   CMPA.l A3,A0
0001FD82 <AmiBlitz3.ab3@2725>    BCS.w JL_0_3B1E
0001FD84 <AmiBlitz3.ab3@2726>   SUBQ.w #1,A1
0001FD88 <AmiBlitz3.ab3@2727>   MOVE.w $8(A2),D1
0001FD8C <AmiBlitz3.ab3@2728>    BEQ.w JL_0_3C70
0001FD94 <AmiBlitz3.ab3@2729>   MOVE.w $A(A2),macnum
0001FD98 <AmiBlitz3.ab3@2730>   ADDQ.w #1,$A(A2)
0001FD9C <AmiBlitz3.ab3@2731>   MOVEA.l $4(A2),A2
0001FD9E <AmiBlitz3.ab3@2732>   SUBQ.w #1,D1
0001FDA4 <AmiBlitz3.ab3@2733>   CLR.b firstmline
0001FDA6 <AmiBlitz3.ab3@2736>     MOVEQ.l #$00,D0
0001FDA8 <AmiBlitz3.ab3@2737>     MOVE.b (A2)+,D0
0001FDAE <AmiBlitz3.ab3@2738>     TST.b firstmline
0001FDB2 <AmiBlitz3.ab3@2739>     BNE 'c1
0001FDB6 <AmiBlitz3.ab3@2740>     CMP.b #$22,d0
0001FDBA <AmiBlitz3.ab3@2741>     BNE 's1
0001FDC2 <AmiBlitz3.ab3@2742>     MOVE.b #1,firstmline
0001FDC6 <AmiBlitz3.ab3@2745>     CMP.b #":",d0
0001FDCA <AmiBlitz3.ab3@2746>     BNE 'm1
0001FDD2 <AmiBlitz3.ab3@2747>     MOVE.b #1,firstmline
0001FDD6 <AmiBlitz3.ab3@2750>     CMP.b #";",d0
0001FDDA <AmiBlitz3.ab3@2751>     BNE 'c1
0001FDDC <AmiBlitz3.ab3@2754>     SUBQ.w #1,d1                                           ;filter out comment
0001FDDE <AmiBlitz3.ab3@2755>     MOVE.b (a2)+,d0
0001FDE4 <AmiBlitz3.ab3@2756>     CMP.w #":@",-1(a2)
0001FDE8 <AmiBlitz3.ab3@2757>     BEQ 'c2
0001FDEA <AmiBlitz3.ab3@2758>     TST.w d1
0001FDEE <AmiBlitz3.ab3@2759>     BNE 'l1
0001FDF2 <AmiBlitz3.ab3@2760>   BRA JL_0_3C6C
0001FDF8 <AmiBlitz3.ab3@2763>     CMP.b #":",1(a2)
0001FDFC <AmiBlitz3.ab3@2764>       BNE 'l1
0001FDFE <AmiBlitz3.ab3@2765>       ADDQ #2,a2
0001FE00 <AmiBlitz3.ab3@2766>       SUBQ #3,d1
0001FE02 <AmiBlitz3.ab3@2767>       MOVE.b (a2)+,d0
0001FE0A <AmiBlitz3.ab3@2768>       MOVE.b #1,firstmline
0001FE0E <AmiBlitz3.ab3@2771>     CMP.b #"`",D0
0001FE12 <AmiBlitz3.ab3@2772>      BNE.w JL_0_3C56
0001FE14 <AmiBlitz3.ab3@2773>     SUBQ.w #1,D1
0001FE16 <AmiBlitz3.ab3@2774>     MOVE.b (A2)+,D0
0001FE1A <AmiBlitz3.ab3@2775>     CMP.w #$7B,D0
0001FE1E <AmiBlitz3.ab3@2776>      BEQ.w JL_0_3BB6
0001FE22 <AmiBlitz3.ab3@2777>     CMP.w #$40,D0
0001FE26 <AmiBlitz3.ab3@2778>      BNE.w JL_0_3B82
0001FE28 <AmiBlitz3.ab3@2779>     MOVEQ.l #$00,D2
0001FE2E <AmiBlitz3.ab3@2780>     MOVE.w macnum,D2
0001FE30 <AmiBlitz3.ab3@2781>     MOVEA.l A1,A0
0001FE32 <AmiBlitz3.ab3@2782>     MOVE.w D1,-(A7)
0001FE38 <AmiBlitz3.ab3@2783>      JSR makelong
0001FE3A <AmiBlitz3.ab3@2784>     MOVEA.l A0,A1
0001FE3C <AmiBlitz3.ab3@2785>     MOVE.w (A7)+,D1
0001FE40 <AmiBlitz3.ab3@2786>   BRA.w JL_0_3C6C
0001FE44 <AmiBlitz3.ab3@2789>     ORI.w #$20,D0
0001FE48 <AmiBlitz3.ab3@2790>     CMP.w #$7A,D0
0001FE4C <AmiBlitz3.ab3@2791>      BCS.w JL_0_3B94
0001FE52 <AmiBlitz3.ab3@2792>   JMP ilconsterr
0001FE56 <AmiBlitz3.ab3@2795>     SUBI.w #$30,D0
0001FE5A <AmiBlitz3.ab3@2796>     CMP.w #$A,D0
0001FE5E <AmiBlitz3.ab3@2797>      BCS.w JL_0_3BF2
0001FE62 <AmiBlitz3.ab3@2798>     SUBI.w #$27,D0
0001FE66 <AmiBlitz3.ab3@2799>     CMP.w #$A,D0
0001FE6A <AmiBlitz3.ab3@2800>      BCC.w JL_0_3BB2
0001FE70 <AmiBlitz3.ab3@2801>   JMP ilconsterr
0001FE74 <AmiBlitz3.ab3@2804>   BRA.w JL_0_3BF2
0001FE76 <AmiBlitz3.ab3@2807>     MOVE.l A5,-(A7)
0001FE7A <AmiBlitz3.ab3@2808>     MOVEM.l D1/A1-A2/A6,-(A7)
0001FE7C <AmiBlitz3.ab3@2809>     MOVEA.l A2,A5
0001FE82 <AmiBlitz3.ab3@2810>      JSR AJL_0_BF6E
0001FE86 <AmiBlitz3.ab3@2811>     CMP.w #$7D,D0
0001FE8A <AmiBlitz3.ab3@2812>      BEQ.w JL_0_3BD2
0001FE90 <AmiBlitz3.ab3@2813>   JMP syntaxerr
0001FE94 <AmiBlitz3.ab3@2816>     MOVEM.l (A7)+,D1/A1-A2/A6
0001FE96 <AmiBlitz3.ab3@2817>     MOVE.l A5,D2
0001FE98 <AmiBlitz3.ab3@2818>     SUB.l A2,D2
0001FE9A <AmiBlitz3.ab3@2819>     SUB.w D2,D1
0001FE9C <AmiBlitz3.ab3@2820>     MOVEA.l A5,A2
0001FEA2 <AmiBlitz3.ab3@2821>     CLR.w instringon
0001FEA4 <AmiBlitz3.ab3@2822>     MOVEA.l (A7)+,A5
0001FEA6 <AmiBlitz3.ab3@2823>     MOVE.l D3,D0
0001FEAA <AmiBlitz3.ab3@2824>     BPL.w JL_0_3BF2
0001FEB0 <AmiBlitz3.ab3@2825>   JMP ilconsterr
0001FEB2 <AmiBlitz3.ab3@2828>     SUBQ.w #1,D0
0001FEB6 <AmiBlitz3.ab3@2829>      BPL.w JL_0_3C20
0001FEBC <AmiBlitz3.ab3@2833>     MOVE.w numarg,D0
0001FEC0 <AmiBlitz3.ab3@2834>     DIVU #$A,D0
0001FEC4 <AmiBlitz3.ab3@2835>     ADDI.w #$30,D0
0001FEC6 <AmiBlitz3.ab3@2836>     CMPA.l A6,A1
0001FECA <AmiBlitz3.ab3@2837>      BCC.w mbovererr
0001FECC <AmiBlitz3.ab3@2838>     MOVE.b D0,(A1)+
0001FECE <AmiBlitz3.ab3@2839>     SWAP D0
0001FED2 <AmiBlitz3.ab3@2840>     ADDI.w #$30,D0
0001FED4 <AmiBlitz3.ab3@2841>     CMPA.l A6,A1
0001FED8 <AmiBlitz3.ab3@2842>      BCC.w mbovererr
0001FEDA <AmiBlitz3.ab3@2843>     MOVE.b D0,(A1)+
0001FEDE <AmiBlitz3.ab3@2844>   BRA.w JL_0_3C6C
0001FEE4 <AmiBlitz3.ab3@2850>     CMP.w numarg,D0
0001FEE8 <AmiBlitz3.ab3@2851>      BCC.w JL_0_3C6C
0001FEEA <AmiBlitz3.ab3@2852>     LSL.w #1,D0
0001FEEC <AmiBlitz3.ab3@2853>     MOVE.w D0,D4
0001FEEE <AmiBlitz3.ab3@2854>     LSL.w #1,D0
0001FEF0 <AmiBlitz3.ab3@2855>     ADD.w D4,D0
0001FEF6 <AmiBlitz3.ab3@2856>     MOVEA.l ptr_macrobuffer_begin,A0
0001FEF8 <AmiBlitz3.ab3@2857>     ADDA.w D0,A0
0001FEFC <AmiBlitz3.ab3@2858>     MOVE.w $4(A0),D4
0001FF00 <AmiBlitz3.ab3@2859>      BEQ.w JL_0_3C6C
0001FF02 <AmiBlitz3.ab3@2860>     MOVEA.l (A0),A0
0001FF04 <AmiBlitz3.ab3@2861>     SUBQ.w #1,D4
0001FF06 <AmiBlitz3.ab3@2864>       CMPA.l A6,A1
0001FF0A <AmiBlitz3.ab3@2865>        BCC.w mbovererr
0001FF0E <AmiBlitz3.ab3@2866>       CMP.w #"@@",(a0)
0001FF12 <AmiBlitz3.ab3@2867>        BNE 'l10
0001FF18 <AmiBlitz3.ab3@2868>       TST.w ininclude
0001FF1C <AmiBlitz3.ab3@2869>        BNE errorjoin
0001FF22 <AmiBlitz3.ab3@2872>       MOVE.l sourceline,a0
0001FF24 <AmiBlitz3.ab3@2873>       MOVE.l (a0),a0
0001FF2A <AmiBlitz3.ab3@2874>       CMP.l #0,a0
0001FF2E <AmiBlitz3.ab3@2875>       BNE 'l11
0001FF30 <AmiBlitz3.ab3@2876>       MOVEQ #0,d0
0001FF36 <AmiBlitz3.ab3@2877>       JSR error
0001FF3C <AmiBlitz3.ab3@2880>       MOVE.l a0,sourceline
0001FF42 <AmiBlitz3.ab3@2881>       ADDQ.l #1,linenumat
0001FF46 <AmiBlitz3.ab3@2882>       LEA 9(a0),a0
0001FF48 <AmiBlitz3.ab3@2883>       MOVE.l a0,-(a7)
0001FF4C <AmiBlitz3.ab3@2886>       CMP.b #" ",(a0)+
0001FF50 <AmiBlitz3.ab3@2887>        BEQ 'l110
0001FF56 <AmiBlitz3.ab3@2888>       CMP.b #";",-1(a0)
0001FF58 <AmiBlitz3.ab3@2889>       MOVE.l (a7)+,a0
0001FF5C <AmiBlitz3.ab3@2890>        BEQ 'l111
0001FF5E <AmiBlitz3.ab3@2891>       SUBQ.l #1,d4
0001FF60 <AmiBlitz3.ab3@2894>       MOVE.b (A0)+,(A1)+
0001FF64 <AmiBlitz3.ab3@2895>     DBF D4,JL_0_3C46
0001FF68 <AmiBlitz3.ab3@2897>   BRA.w JL_0_3C6C
0001FF6A <AmiBlitz3.ab3@2900>     CMPA.l A6,A1
0001FF6E <AmiBlitz3.ab3@2901>      BCC.w mbovererr
0001FF70 <AmiBlitz3.ab3@2902>     MOVE.b D0,(A1)+
0001FF74 <AmiBlitz3.ab3@2903>      BPL.w JL_0_3C6C
0001FF76 <AmiBlitz3.ab3@2904>     CMPA.l A6,A1
0001FF7A <AmiBlitz3.ab3@2905>      BCC.w mbovererr
0001FF7C <AmiBlitz3.ab3@2906>     MOVE.b (A2)+,(A1)+
0001FF7E <AmiBlitz3.ab3@2907>     SUBQ.w #1,D1
0001FF82 <AmiBlitz3.ab3@2910>   DBF D1,JL_0_3B48
0001FF84 <AmiBlitz3.ab3@2920>   CMPA.l A6,A1
0001FF88 <AmiBlitz3.ab3@2921>    BCC.w mbovererr
0001FF8A <AmiBlitz3.ab3@2922>   MOVE.b (A5)+,(A1)+
0001FF8E <AmiBlitz3.ab3@2923>    BNE.w JL_0_3C70
0001FF94 <AmiBlitz3.ab3@2924>   MOVEA.l myline,A5
0001FF9A <AmiBlitz3.ab3@2925>   MOVE.l myoline,D0
0001FF9E <AmiBlitz3.ab3@2926>    BEQ.w JL_0_3C9C
0001FFA0 <AmiBlitz3.ab3@2927>   SUBQ.l #1,d0
0001FFA2 <AmiBlitz3.ab3@2928>   MOVEA.l D0,A1
0001FFA8 <AmiBlitz3.ab3@2929>   MOVE.l macrobuffer_size,D0
0001FFAE <AmiBlitz3.ab3@2930>   MOVEA.l _execbase,A6
0001FFB4 <AmiBlitz3.ab3@2931>   MOVE.l mempool,a0
0001FFB8 <AmiBlitz3.ab3@2932>   JSR _FreePooled(A6)
0001FFBC <AmiBlitz3.ab3@2935> BRA.w JL_0_3A46
0001FFBE <AmiBlitz3.ab3@2938>   MOVEA.l (A7)+,A5
0001FFC0 <AmiBlitz3.ab3@2939> RTS
0001FFC6 <AmiBlitz3.ab3@2943>   MOVE.l myline,D0
0001FFCA <AmiBlitz3.ab3@2944>   BEQ.w JL_0_3CC4
0001FFCC <AmiBlitz3.ab3@2945>   SUBQ.l #1,d0
0001FFD2 <AmiBlitz3.ab3@2946>   CLR.l myline
0001FFD4 <AmiBlitz3.ab3@2947>   MOVEA.l D0,A1
0001FFDA <AmiBlitz3.ab3@2948>   MOVE.l macrobuffer_size,D0
0001FFE0 <AmiBlitz3.ab3@2949>   MOVEA.l _execbase,A6
0001FFE6 <AmiBlitz3.ab3@2950>   MOVE.l mempool,a0
0001FFEA <AmiBlitz3.ab3@2951> JMP _FreePooled(A6)
0001FFEC <AmiBlitz3.ab3@2954> RTS
0001FFEE <AmiBlitz3.ab3@2958>   MOVEQ.l #$00,D2
0001FFF2 <AmiBlitz3.ab3@2961>   ADDQ.w #1,4(a0)
0001FFF4 <AmiBlitz3.ab3@2962>    MOVE.b (A4)+,D0
0001FFF8 <AmiBlitz3.ab3@2964>    BEQ exit1
0001FFFC <AmiBlitz3.ab3@2965>    BPL.w JL_0_3CD8
00020000 <AmiBlitz3.ab3@2966>   ADDQ.w #1,4(a0)
00020002 <AmiBlitz3.ab3@2967>   ADDQ.w #1,A4
00020006 <AmiBlitz3.ab3@2968> BRA.w JL_0_3CC8
0002000C <AmiBlitz3.ab3@2971>    TST.w instringon
00020010 <AmiBlitz3.ab3@2972>    BNE 'lnom
00020014 <AmiBlitz3.ab3@2973>    CMP.b #";",d0
00020018 <AmiBlitz3.ab3@2974>    BEQ exit2
0002001C <AmiBlitz3.ab3@2975>    CMP.b #":",d0
00020020 <AmiBlitz3.ab3@2976>    BEQ exit2
00020024 <AmiBlitz3.ab3@2979>   CMP.b #$22,D0
00020028 <AmiBlitz3.ab3@2980>    BNE.w JL_0_3CEA
0002002E <AmiBlitz3.ab3@2981>   NOT.w instringon
00020032 <AmiBlitz3.ab3@2982> BRA.w JL_0_3CC8
00020038 <AmiBlitz3.ab3@2986>   TST.w instringon
0002003C <AmiBlitz3.ab3@2987>    BNE.w JL_0_3CC8
00020040 <AmiBlitz3.ab3@2988>    CMP.b #"@",d0
00020044 <AmiBlitz3.ab3@2989>    BNE 'l10
00020048 <AmiBlitz3.ab3@2990>    CMP.b #"@",(a4)
0002004C <AmiBlitz3.ab3@2991>    BNE 'l10
00020052 <AmiBlitz3.ab3@2992>    TST.w ininclude
00020056 <AmiBlitz3.ab3@2993>    BNE errorjoin
0002005C <AmiBlitz3.ab3@2994>    MOVE.l sourceline3,a4
00020062 <AmiBlitz3.ab3@2995>    CMP.l #0,a4
00020066 <AmiBlitz3.ab3@2996>    BNE 'l11
0002006C <AmiBlitz3.ab3@2997>    MOVE.l sourceline,a4
0002006E <AmiBlitz3.ab3@3000>   MOVE.l (a4),a4
00020074 <AmiBlitz3.ab3@3001>       CMP.l #0,a4
00020078 <AmiBlitz3.ab3@3002>       BNE 'l12
0002007A <AmiBlitz3.ab3@3003>       MOVEQ #0,d0
00020080 <AmiBlitz3.ab3@3004>       JSR error
00020086 <AmiBlitz3.ab3@3007>    MOVE.l a4,sourceline3
0002008A <AmiBlitz3.ab3@3008>    LEA 9(a4),a4
0002008C <AmiBlitz3.ab3@3009>    MOVEQ #",",d0
00020090 <AmiBlitz3.ab3@3012>   CMP.b #$2C,D0
00020094 <AmiBlitz3.ab3@3013>    BNE.w JL_0_3D06
00020096 <AmiBlitz3.ab3@3014>   TST.w D2
0002009A <AmiBlitz3.ab3@3015>    BEQ.w JL_0_3D30
0002009E <AmiBlitz3.ab3@3016> BRA.w JL_0_3CC8
000200A2 <AmiBlitz3.ab3@3020>    CMP.b #$7B,D0                                           ;"{"
000200A6 <AmiBlitz3.ab3@3021>    BEQ.w 'l10
000200AA <AmiBlitz3.ab3@3022>   CMP.b #$28,D0                                            ;"("
000200AE <AmiBlitz3.ab3@3025>    BNE.w JL_0_3D14
000200B0 <AmiBlitz3.ab3@3026>   ADDQ.w #1,D2
000200B4 <AmiBlitz3.ab3@3027> BRA.w JL_0_3CC8
000200B8 <AmiBlitz3.ab3@3030>   CMP.b #$7D,D0                                           ;"}"
000200BC <AmiBlitz3.ab3@3031>    BNE.w JL_0_3D22
000200BE <AmiBlitz3.ab3@3032>  TST.w D2
000200C2 <AmiBlitz3.ab3@3033>    BEQ.w JL_0_3D30
000200C6 <AmiBlitz3.ab3@3037>    CMP.b #$7D,D0                                           ;"}"
000200CA <AmiBlitz3.ab3@3038>    BEQ.w 'l10
000200CE <AmiBlitz3.ab3@3039>   CMP.b #$29,D0                                            ;")"
000200D2 <AmiBlitz3.ab3@3042>    BNE.w JL_0_3CC8
000200D4 <AmiBlitz3.ab3@3043>   SUBQ.w #1,D2
000200D8 <AmiBlitz3.ab3@3044> BRA.w JL_0_3CC8
000200DA <AmiBlitz3.ab3@3047> RTS
000200DC <AmiBlitz3.ab3@3051>       SUBQ.l #1,a4
000200E2 <AmiBlitz3.ab3@3052>       CLR.l sourceline3
000200E4 <AmiBlitz3.ab3@3053> RTS
000200E6 <AmiBlitz3.ab3@3057>       MOVEQ #0,d0
000200E8 <AmiBlitz3.ab3@3058>       SUBQ.l #1,a4
000200EE <AmiBlitz3.ab3@3059>       CLR.l sourceline3
000200F0 <AmiBlitz3.ab3@3060> RTS
000200F4 <AmiBlitz3.ab3@3064>   CMP.b #$7B,D0                                            ;"{"
000200F8 <AmiBlitz3.ab3@3065>   BEQ.w JL_0_3D3E
000200FC <AmiBlitz3.ab3@3066>   CMP.b #$28,D0                                            ;"("
000200FE <AmiBlitz3.ab3@3069> RTS
00020102 <AmiBlitz3.ab3@3073>   CMP.b #$7D,D0                                            ;"}"
00020106 <AmiBlitz3.ab3@3074>   BEQ.w JL_0_3D4C
0002010A <AmiBlitz3.ab3@3075>   CMP.b #$29,D0                                            ;")"
0002010C <AmiBlitz3.ab3@3078> RTS
0002010E <AmiBlitz3.ab3@3082> stopit:     Ds.w 1
00020110 <AmiBlitz3.ab3@3083> clrreq:     Ds.w 1
00020114 <AmiBlitz3.ab3@3104>   MOVE.w clrreq(PC),D0
00020118 <AmiBlitz3.ab3@3105>    BEQ.w close_compilewin__skip
0002014A <AmiBlitz3.ab3@3107> 
00020150 <AmiBlitz3.ab3@3109>   LEA clrreq,a0
00020152 <AmiBlitz3.ab3@3110>   NOT.w (a0)                                               ;reass
00020158 <AmiBlitz3.ab3@3111>   MOVEA.l ptr_ThisTask,A0
0002015C <AmiBlitz3.ab3@3112>   CLR.l $1E(A0)
00020160 <AmiBlitz3.ab3@3113>   CLR.l $2A(A0)
00020162 <AmiBlitz3.ab3@3116> RTS
00020164 <AmiBlitz3.ab3@3119> intsused:  Ds.w 1
0002016C <AmiBlitz3.ab3@3123>   MOVE.w #-1,blitzoff
00020172 <AmiBlitz3.ab3@3124>   CLR.w intsused
00020178 <AmiBlitz3.ab3@3125>   CLR.w anyerrs
0002017E <AmiBlitz3.ab3@3126>   CLR.w blitzmode
00020184 <AmiBlitz3.ab3@3127>   CLR.w dontwrite                                              ;nomemleft
0002018A <AmiBlitz3.ab3@3128>   CLR.w constmode
00020190 <AmiBlitz3.ab3@3129>   CLR.w cmake
00020196 <AmiBlitz3.ab3@3130>   CLR.w cfetchmode
0002019C <AmiBlitz3.ab3@3131>   CLR.l intdata1
000201A2 <AmiBlitz3.ab3@3132>   CLR.w fuckpos
000201A8 <AmiBlitz3.ab3@3133>   CLR.w procnum
000201AE <AmiBlitz3.ab3@3134>   CLR.w procnum2
000201B4 <AmiBlitz3.ab3@3135>   CLR.w dfetch
000201BA <AmiBlitz3.ab3@3136>   CLR.l titleat
000201C0 <AmiBlitz3.ab3@3137>   CLR.b usedpath
000201C6 <AmiBlitz3.ab3@3138>   CLR.b path2
000201CC <AmiBlitz3.ab3@3139>   CLR.w inerr
000201D2 <AmiBlitz3.ab3@3140>   CLR.w intlevel
000201D8 <AmiBlitz3.ab3@3141>   CLR.l cont_pc
000201DE <AmiBlitz3.ab3@3142>   CLR.l cont_pc2
000201E4 <AmiBlitz3.ab3@3143>   CLR.l lastcontlink
000201EE <AmiBlitz3.ab3@3144>   MOVE.l destbufferstart,destpointer
000201F8 <AmiBlitz3.ab3@3145>   MOVE.l destbufferstart,bigpc
00020202 <AmiBlitz3.ab3@3146>   MOVE.l destbufferend,libend
0002020C <AmiBlitz3.ab3@3147>   MOVE.l data1start,data1
00020216 <AmiBlitz3.ab3@3148>   MOVE.l data2at,data2
0002021E <AmiBlitz3.ab3@3149>   MOVE.w #-1,skipcode                                      ;#-1,comflag org source
00020226 <AmiBlitz3.ab3@3150>   MOVE.w #-1,linemode                                      ;#-1,linemode org soruce
0002022C <AmiBlitz3.ab3@3151>   CLR.w oldvcodelen
00020232 <AmiBlitz3.ab3@3152>   CLR.b lastgloballabel                                    ;lastbiglab org source
00020234 <AmiBlitz3.ab3@3153> RTS
00020236 <AmiBlitz3.ab3@3156> debugmode:  Ds.w 1                                         ;debugga org source ;debugger enabled?
0002023C <AmiBlitz3.ab3@3160>   LEA  clrreq,a1
00020240 <AmiBlitz3.ab3@3161>   MOVE.w #2000,(a1)
0002026A <AmiBlitz3.ab3@3162>   !basic
00020280 <AmiBlitz3.ab3@3163> 
000202D0 <AmiBlitz3.ab3@3164>   comstatusstr   = !TRANS{"Initializing Compiler..."} ;default settings
000202D8 <AmiBlitz3.ab3@3165>   calcpro.l      = 0
000202E0 <AmiBlitz3.ab3@3166>   calcpro_old.l  = 0
000202EC <AmiBlitz3.ab3@3167>   typ_old.l      = -1
000202F8 <AmiBlitz3.ab3@3168>   pass_old.l     = -1
000202FE <AmiBlitz3.ab3@3169>   update_comstatus_gui.b = True ; for the first
00020338 <AmiBlitz3.ab3@3171>   GetD0 &comstatusstr : !ComData_SetL{comPtr_CompileStatusString,d0}  ; set pointer of status string for gui tomsmart1 2012 05 12
00020372 <AmiBlitz3.ab3@3172>   GetD0 &calcpro      : !ComData_SetL{comPtr_CompileCalcProLong ,d0}  ; set pointer of calcpro long for gui tomsmart1 2012 05 12
00020390 <AmiBlitz3.ab3@3173>   !asm
000203C2 <AmiBlitz3.ab3@3174> 
000203C8 <AmiBlitz3.ab3@3176>   CLR.w stopit
000203CA <AmiBlitz3.ab3@3177> RTS
000203D0 <AmiBlitz3.ab3@3181>   CLR.w storedebugmode
000203D6 <AmiBlitz3.ab3@3182>   CLR.b iserror
000203DA <AmiBlitz3.ab3@3183>   BSR.w compilerequester
000203E4 <AmiBlitz3.ab3@3185>   MOVE.l #0,globallinecount
000203EA <AmiBlitz3.ab3@3186>   JSR check_of_same_source
000203EE <AmiBlitz3.ab3@3187>   BSR.w call_setpointerbusy
000203F2 <AmiBlitz3.ab3@3188>   BSR.w setcvars
000203FA <AmiBlitz3.ab3@3189>   MOVE.w #$8000,globalvarpointer
00020404 <AmiBlitz3.ab3@3190>   MOVE.l #newtype_quick,defaulttype
0002040A <AmiBlitz3.ab3@3191>   MOVE.l A7,passstack
00020414 <AmiBlitz3.ab3@3192>   MOVE.l #firstitem_,sourceline
0002041E <AmiBlitz3.ab3@3193>   MOVE.w numlines_org,linesleft
00020428 <AmiBlitz3.ab3@3194>   MOVE.l numlines,numlines2
0002042E <AmiBlitz3.ab3@3195>   ADDQ.w #1,linesleft
00020434 <AmiBlitz3.ab3@3196>   ADDQ.l #1,numlines2
0002043E <AmiBlitz3.ab3@3197>   MOVE.l #-1,linenumat
00020442 <AmiBlitz3.ab3@3198>   BSR.w resetlibs
00020446 <AmiBlitz3.ab3@3199>   BSR.w Aclearallvars
0002044C <AmiBlitz3.ab3@3200>   LEA progress_per_line+2,A0
0002044E <AmiBlitz3.ab3@3201>   MOVEQ.l #$03,D0
00020450 <AmiBlitz3.ab3@3204>     CLR.w (A0)+
00020454 <AmiBlitz3.ab3@3205>   DBF D0,JL_0_40EC
0002045A <AmiBlitz3.ab3@3208>   LEA _include,a0
0002045E <AmiBlitz3.ab3@3209>   MOVEM.l a0-a6/d0-d7,-(a7)
00020464 <AmiBlitz3.ab3@3210>   LEA ptr_parameterstore,a1
00020466 <AmiBlitz3.ab3@3213>     MOVE.b (a0)+,(a1)+
0002046A <AmiBlitz3.ab3@3214>   BNE 'l1b
0002046C <AmiBlitz3.ab3@3216>   MOVEQ #9,d2
00020472 <AmiBlitz3.ab3@3217>   JSR findlabel2
00020476 <AmiBlitz3.ab3@3218>   BNE 'd
0002047E <AmiBlitz3.ab3@3219>   MOVE.l #0,8(a2)
00020482 <AmiBlitz3.ab3@3220>   MOVEM.l (a7)+,a0-a6/d0-d7
00020486 <AmiBlitz3.ab3@3221> BRA 'd2
0002048C <AmiBlitz3.ab3@3224>   JSR addlabelhash
00020494 <AmiBlitz3.ab3@3225>   MOVE.l #$1,$4(A2)
0002049C <AmiBlitz3.ab3@3226>   MOVE.l #0,8(a2)
000204A0 <AmiBlitz3.ab3@3227>   MOVEM.l (a7)+,a0-a6/d0-d7
000204A6 <AmiBlitz3.ab3@3230>   LEA _debug,a0
000204AA <AmiBlitz3.ab3@3231>   MOVEM.l a0-a6/d0-d7,-(a7)
000204B0 <AmiBlitz3.ab3@3232>   LEA ptr_parameterstore,a1
000204B2 <AmiBlitz3.ab3@3235>     MOVE.b (a0)+,(a1)+
000204B6 <AmiBlitz3.ab3@3236>   BNE 'l9b
000204B8 <AmiBlitz3.ab3@3238>   MOVEQ #7,d2
000204BE <AmiBlitz3.ab3@3239>   JSR findlabel2
000204C2 <AmiBlitz3.ab3@3240>   BNE 'd9
000204C6 <AmiBlitz3.ab3@3241>   MOVE.b debugmode(PC),D0
000204C8 <AmiBlitz3.ab3@3242>   EXT.w d0
000204CA <AmiBlitz3.ab3@3243>   EXT.l d0
000204CE <AmiBlitz3.ab3@3244>   MOVE.l d0,8(a2)
000204D2 <AmiBlitz3.ab3@3245>   MOVEM.l (a7)+,a0-a6/d0-d7
000204D6 <AmiBlitz3.ab3@3246> BRA 'd9b
000204DC <AmiBlitz3.ab3@3249>   JSR addlabelhash
000204E4 <AmiBlitz3.ab3@3250>   MOVE.l #$1,$4(A2)
000204E8 <AmiBlitz3.ab3@3251>   MOVE.b debugmode(PC),D0
000204EA <AmiBlitz3.ab3@3252>   EXT.w d0
000204EC <AmiBlitz3.ab3@3253>   EXT.l d0
000204F0 <AmiBlitz3.ab3@3254>   MOVE.l d0,8(a2)
000204F4 <AmiBlitz3.ab3@3255>   MOVEM.l (a7)+,a0-a6/d0-d7
000204FA <AmiBlitz3.ab3@3258>   MOVE.l #firstitem_,a0
000204FC <AmiBlitz3.ab3@3259>   MOVE.l (a0),a0
00020500 <AmiBlitz3.ab3@3260>   LEA 9(a0),a0
00020508 <AmiBlitz3.ab3@3261>   MOVE.w #0,exdebug
0002050E <AmiBlitz3.ab3@3262>   TST.b debugmode
00020512 <AmiBlitz3.ab3@3263>    BEQ 'l10
00020514 <AmiBlitz3.ab3@3266>   MOVE.b (a0)+,d0
00020518 <AmiBlitz3.ab3@3267>    BEQ 'l10
0002051C <AmiBlitz3.ab3@3268>   CMP.b #$20,d0
00020520 <AmiBlitz3.ab3@3269>    BEQ 'l2
00020522 <AmiBlitz3.ab3@3270>   SUBQ.l #1,a0
00020528 <AmiBlitz3.ab3@3271>   CMP.l #"DEBU",(a0)
0002052C <AmiBlitz3.ab3@3272>    BNE 'l10
00020532 <AmiBlitz3.ab3@3273>   CMP.b #"G",4(a0)
00020536 <AmiBlitz3.ab3@3274>    BNE 'l10
0002053E <AmiBlitz3.ab3@3275>   MOVE.w #$0,debugversion
00020546 <AmiBlitz3.ab3@3276>   MOVE.b #1,exdebug
0002054C <AmiBlitz3.ab3@3279>   LEA nops4,A0
00020552 <AmiBlitz3.ab3@3280>   LEA dataget,A1
00020558 <AmiBlitz3.ab3@3281>   JSR pokecode2                                            ;write intro nops
0002055E <AmiBlitz3.ab3@3282>   MOVE.l #$01010101,d1
00020564 <AmiBlitz3.ab3@3283>   JSR writedatalong                                        ;for the 4 tempregs
0002056A <AmiBlitz3.ab3@3284>   JSR writedatalong
00020570 <AmiBlitz3.ab3@3285>   JSR writedatalong
00020576 <AmiBlitz3.ab3@3286>   JSR writedatalong
0002057C <AmiBlitz3.ab3@3287>   TST.b saved0
00020580 <AmiBlitz3.ab3@3288>    BEQ 'l1
00020586 <AmiBlitz3.ab3@3289>   MOVE.l #$4e714e71,d1
0002058C <AmiBlitz3.ab3@3290>   JSR writelong                                            ;add 2 nops
00020592 <AmiBlitz3.ab3@3291>   MOVE.l #$4e714e71,d1
00020598 <AmiBlitz3.ab3@3292>   JSR writelong                                            ;add 2 nops
0002059E <AmiBlitz3.ab3@3293>   MOVE.l #$4e714e71,d1
000205A4 <AmiBlitz3.ab3@3294>   JSR writelong                                            ;add 2 nops
000205AA <AmiBlitz3.ab3@3295>    MOVE.l #$4e714e71,d1
000205B0 <AmiBlitz3.ab3@3296>   JSR writelong                                            ;add 2 nops
000205B4 <AmiBlitz3.ab3@3299>   MOVE.b debugmode(PC),D1
000205B8 <AmiBlitz3.ab3@3300>    BEQ.b JL_0_4132
000205C2 <AmiBlitz3.ab3@3301>   MOVE.b debugmode,storedebugmode
000205C6 <AmiBlitz3.ab3@3302>   MOVE.w #$FFDC,D1
000205CA <AmiBlitz3.ab3@3303>    BSR.w uselib
000205D0 <AmiBlitz3.ab3@3304>   TST.w debugversion                                       ;make a version for debugger
000205D4 <AmiBlitz3.ab3@3305>    BNE.b JL_0_412A
000205D8 <AmiBlitz3.ab3@3309>   MOVE.w #$FA3C,D1
000205DC <AmiBlitz3.ab3@3310>    BSR.w uselib
000205E0 <AmiBlitz3.ab3@3311>   MOVE.w #$0001,D1
000205E4 <AmiBlitz3.ab3@3312>    BSR.w uselib
000205E8 <AmiBlitz3.ab3@3313> BRA.b JL_0_4132
000205EC <AmiBlitz3.ab3@3316>   MOVE.w #$FA32,D1
000205F0 <AmiBlitz3.ab3@3317>   BSR.w uselib
000205F4 <AmiBlitz3.ab3@3320>   BSR.w nextline
000205FA <AmiBlitz3.ab3@3321>   CLR.l linenum
00020600 <AmiBlitz3.ab3@3322>   CLR.l stacktrack
00020606 <AmiBlitz3.ab3@3325>   ADDQ.l #1,linenum
00020610 <AmiBlitz3.ab3@3326>   MOVE.l destpointer,destpointer2
00020616 <AmiBlitz3.ab3@3327>   MOVE.l a5,sourceline2
0002061A <AmiBlitz3.ab3@3328>   BSR.w compile_line                                        ;compile pass
0002061E <AmiBlitz3.ab3@3331>   BSR.w nextline
00020622 <AmiBlitz3.ab3@3332>    BNE.w JL_0_4136
00020626 <AmiBlitz3.ab3@3333>   BSR.w JUMP_do_runerrson
0002062A <AmiBlitz3.ab3@3334>   BSR.w pointchk
00020630 <AmiBlitz3.ab3@3335>   TST.b objectcount
00020634 <AmiBlitz3.ab3@3336>    BNE macenderr
0002063A <AmiBlitz3.ab3@3337>   CLR.l linenumat
0002063E <AmiBlitz3.ab3@3338>   BSR.w errchx2
00020648 <AmiBlitz3.ab3@3339>   CMP.l #-1,bssend
0002064C <AmiBlitz3.ab3@3340>    BNE 'l30
00020656 <AmiBlitz3.ab3@3341>   MOVE.l destpointer,bssend                                ;compile end
0002065C <AmiBlitz3.ab3@3344>   MOVE.l destpointer,d0
00020666 <AmiBlitz3.ab3@3345>   CMP.l #-1,bssstart
0002066A <AmiBlitz3.ab3@3346>   BNE 'lnf6
00020674 <AmiBlitz3.ab3@3347>   CMP.l #-1,chipstart
00020678 <AmiBlitz3.ab3@3348>   BNE 'lnf6
0002067C <AmiBlitz3.ab3@3349> BRA 'leven4
00020682 <AmiBlitz3.ab3@3352>   MOVE.l destpointer,d1
00020684 <AmiBlitz3.ab3@3353>   ADDQ.l #3,d1
0002068A <AmiBlitz3.ab3@3354>   AND.l #$fffffffc,d1                                      ;bug ?
00020690 <AmiBlitz3.ab3@3355>   MOVE.l d1,destpointer
0002069A <AmiBlitz3.ab3@3358>   MOVE.l destpointer,codeend
000206A4 <AmiBlitz3.ab3@3359>   CMP.l #-1,chipend
000206A8 <AmiBlitz3.ab3@3360>   BNE 'l31
000206B2 <AmiBlitz3.ab3@3361>   MOVE.l destpointer,chipend
000206B8 <AmiBlitz3.ab3@3364>   MOVE.l destpointer,d1
000206BA <AmiBlitz3.ab3@3365>   ADDQ.l #1,d1
000206C0 <AmiBlitz3.ab3@3366>   AND.l #$fffffffe,d1                                     ;new evenexit
000206C6 <AmiBlitz3.ab3@3367>   MOVE.l d1,destpointer
000206CA <AmiBlitz3.ab3@3368>   MOVE.b debugmode(PC),D1
000206CE <AmiBlitz3.ab3@3369>    BEQ.b JL_0_4180
000206D2 <AmiBlitz3.ab3@3370>    BSR.w debugstuff
000206D6 <AmiBlitz3.ab3@3371>   MOVE.w #$C300,D1
000206DC <AmiBlitz3.ab3@3372>    JSR Atokejsr
000206E0 <AmiBlitz3.ab3@3373>    BSR.w debugstuff
000206E4 <AmiBlitz3.ab3@3374>   MOVE.l eopcode(PC),D1
000206EA <AmiBlitz3.ab3@3375>    JSR writelong
000206EE <AmiBlitz3.ab3@3376>   MOVE.l lastcontlink(PC),D1
000206F2 <AmiBlitz3.ab3@3377>    BEQ.b JL_0_4180
000206F4 <AmiBlitz3.ab3@3378>   MOVEA.l D1,A0
000206F8 <AmiBlitz3.ab3@3379>   CLR.w $6(A0)
00020702 <AmiBlitz3.ab3@3385>   MOVE.l destpointer,endop                                ;where end goes...
00020708 <AmiBlitz3.ab3@3387>   TST.w blitzmode
0002070C <AmiBlitz3.ab3@3388>   BEQ.w JL_0_4198
00020710 <AmiBlitz3.ab3@3389>   BSR.w do_AMIGA                                          ;back to amiga if in blitz!
00020716 <AmiBlitz3.ab3@3392>   TST.w intsused
0002071A <AmiBlitz3.ab3@3393>   BEQ.b JL_0_41AA
0002071E <AmiBlitz3.ab3@3394>   MOVE.w #$C105,D1                                        ;interupts off!
00020724 <AmiBlitz3.ab3@3395>   JSR tokejsr2
00020728 <AmiBlitz3.ab3@3398>   BSR.w calcstatic
0002072E <AmiBlitz3.ab3@3399>   MOVE.w D4,numstatic
00020734 <AmiBlitz3.ab3@3400>   MOVE.l D3,staticdata
00020738 <AmiBlitz3.ab3@3401>    BSR.w calcmaxs
0002073E <AmiBlitz3.ab3@3403>   TST.l tokeslist
00020742 <AmiBlitz3.ab3@3404>    BEQ.b JL_0_41F8
00020748 <AmiBlitz3.ab3@3405>   MOVE.w gotocode,D1                                       ;jmp!
0002074E <AmiBlitz3.ab3@3406>    JSR writeword
00020758 <AmiBlitz3.ab3@3407>   MOVE.l destpointer,endjmpat
0002075C <AmiBlitz3.ab3@3408>    BSR.w addoff
00020762 <AmiBlitz3.ab3@3409>    JSR writelong                                           
00020766 <AmiBlitz3.ab3@3411>    BSR.w JL_0_6C76                                         ;has to be done before finits!
0002076C <AmiBlitz3.ab3@3415>   TST.w dontwrite
00020770 <AmiBlitz3.ab3@3416>    BNE.b JL_0_41F8
00020774 <AmiBlitz3.ab3@3417>   MOVEA.l endjmpat(PC),A4
0002077A <AmiBlitz3.ab3@3418>   MOVE.l destpointer,(A4)
00020780 <AmiBlitz3.ab3@3421>   TST.b returncode
00020784 <AmiBlitz3.ab3@3422>   BEQ 'l2
00020788 <AmiBlitz3.ab3@3423>   MOVE.w #$2e80,d1
0002078E <AmiBlitz3.ab3@3424>   JSR writeword
00020794 <AmiBlitz3.ab3@3427>   JSR JL_0_B98A
0002079A <AmiBlitz3.ab3@3428>   TST.b returncode
0002079E <AmiBlitz3.ab3@3429>   BEQ 'l3
000207A2 <AmiBlitz3.ab3@3430>   MOVE.w #$4e75,d1
000207A8 <AmiBlitz3.ab3@3431>   JSR writeword
000207AC <AmiBlitz3.ab3@3432> BRA 'l1
000207B2 <AmiBlitz3.ab3@3435>   MOVE.l #$70004E75,D1
000207B8 <AmiBlitz3.ab3@3436>   JSR writelong                                            ;write moveq #0,d0:rts
000207BE <AmiBlitz3.ab3@3439>   JSR JL_0_B73E
000207C2 <AmiBlitz3.ab3@3440>   BSR.w asmfixer
000207C6 <AmiBlitz3.ab3@3441>   BSR.w close_compilewin
000207CA <AmiBlitz3.ab3@3442> BRA.w call_setpointernormal
000207D0 <AmiBlitz3.ab3@3446> JMP do_runerrson
000207D2 <AmiBlitz3.ab3@3450> eopcode:    Dc.b $70,$03                                   ;MOVEQ #$03,D0
000207D4 <AmiBlitz3.ab3@3451>             Dc.b $4E,$40                                   ;TRAP  #00
000207D8 <AmiBlitz3.ab3@3453> endjmpat:   Ds.l 1
000207DE <AmiBlitz3.ab3@3457>   MOVEA.l newtype_string,A2
000207E4 <AmiBlitz3.ab3@3458>   MOVE.l #MaxByte,D0                                       ;move.l #$ff,d0 org source
000207E8 <AmiBlitz3.ab3@3461>     CMPA.w #$0,A2
000207EC <AmiBlitz3.ab3@3462>      BEQ.w pointchk_done
000207F0 <AmiBlitz3.ab3@3463>     CMP.l $4(A2),D0
000207F4 <AmiBlitz3.ab3@3464>      BNE.w pointchk_next
000207FC <AmiBlitz3.ab3@3465>     MOVE.w $8(A2),linenumat+2                              ;type not found  ;move 8(a2),linenumat org source
00020800 <AmiBlitz3.ab3@3466> BRA.w notypeerr
00020802 <AmiBlitz3.ab3@3469>     MOVEA.l (A2),A2
00020806 <AmiBlitz3.ab3@3470> BRA.w pointchk_loop
00020808 <AmiBlitz3.ab3@3473> RTS
0002080E <AmiBlitz3.ab3@3477>   LEA labelbase,A2
00020810 <AmiBlitz3.ab3@3481>   MOVE.l (A2),D0                                           ;testlabels
00020814 <AmiBlitz3.ab3@3482>    BEQ.w errchx2_done
00020816 <AmiBlitz3.ab3@3483>   MOVEA.l D0,A2
0002081A <AmiBlitz3.ab3@3484>   MOVE.l $4(A2),D0
0002081E <AmiBlitz3.ab3@3485>   BTST #$0,D0
00020822 <AmiBlitz3.ab3@3486>    BNE.w errchx2_loop
00020826 <AmiBlitz3.ab3@3487>   MOVE.l $8(A2),D0
0002082A <AmiBlitz3.ab3@3488>    BNE.w errchx2_loop
00020832 <AmiBlitz3.ab3@3489>   MOVE.w $10(A2),linenumat+2
00020834 <AmiBlitz3.ab3@3490>   MOVEQ #0,d0
00020838 <AmiBlitz3.ab3@3491>   MOVE.b $12(a2),d0
00020840 <AmiBlitz3.ab3@3492>   MOVE.w 0(a2,d0),linenumat
00020846 <AmiBlitz3.ab3@3493> JMP nolaberr                                               ;label not found
0002084C <AmiBlitz3.ab3@3496>   MOVE.l concomsp,D0
00020852 <AmiBlitz3.ab3@3497>   CMP.l #concomstack,D0
00020856 <AmiBlitz3.ab3@3498>    BNE.w chxerr4
0002085C <AmiBlitz3.ab3@3499>   MOVE.w connest,D1
00020860 <AmiBlitz3.ab3@3500>    BNE.w chxerr4
00020862 <AmiBlitz3.ab3@3503>   MOVE.l D1,-(A7)
00020868 <AmiBlitz3.ab3@3504>   MOVE.l firstsel,D1
0002086C <AmiBlitz3.ab3@3505>    BNE.w errchx_err1
00020872 <AmiBlitz3.ab3@3506>   MOVE.l firstrep,D1
00020876 <AmiBlitz3.ab3@3507>    BNE.w errchx_err2
0002087C <AmiBlitz3.ab3@3508>   MOVE.w intstring,D1
00020880 <AmiBlitz3.ab3@3509>    BNE.w errchx_err3
00020884 <AmiBlitz3.ab3@3510>   MOVE.l 4(a7),d1
0002088A <AmiBlitz3.ab3@3511>   MOVE.w proceduremode,D1
0002088E <AmiBlitz3.ab3@3512>    BNE.w errchx_err6
00020894 <AmiBlitz3.ab3@3513>   MOVE.l firstiff,d1
00020898 <AmiBlitz3.ab3@3514>    BNE errchx_err5
0002089E <AmiBlitz3.ab3@3515>   MOVE.l firstfor,D1
000208A2 <AmiBlitz3.ab3@3516>    BNE.w errchx_err7
000208A4 <AmiBlitz3.ab3@3517>   MOVE.l (A7)+,D1
000208A6 <AmiBlitz3.ab3@3518> RTS
000208B0 <AmiBlitz3.ab3@3522>   MOVE.l sellineat,linenumat
000208B6 <AmiBlitz3.ab3@3523> JMP selerrz
000208C0 <AmiBlitz3.ab3@3526>   MOVE.l replineat,linenumat
000208C6 <AmiBlitz3.ab3@3527> JMP unterr3
000208D0 <AmiBlitz3.ab3@3530>   MOVE.l intlineat,linenumat
000208D6 <AmiBlitz3.ab3@3531> JMP interr2
000208E0 <AmiBlitz3.ab3@3534>   MOVE.l iflineat,linenumat
000208E6 <AmiBlitz3.ab3@3535> JMP noenderr
000208F0 <AmiBlitz3.ab3@3538>   MOVE.l prolineat,linenumat
000208F6 <AmiBlitz3.ab3@3539> JMP nopenderr
00020900 <AmiBlitz3.ab3@3542>   MOVE.l forlineat,linenumat
00020906 <AmiBlitz3.ab3@3543> JMP nonexterr
00020910 <AmiBlitz3.ab3@3546>   MOVE.l ciflineat,linenumat
00020916 <AmiBlitz3.ab3@3547> JMP nocenderr
00020920 <AmiBlitz3.ab3@3551>   MOVE.l data1,maxsat
00020922 <AmiBlitz3.ab3@3552>   MOVEQ.l #$00,D4
00020928 <AmiBlitz3.ab3@3553>   MOVEA.l libpointer,A2
0002092C <AmiBlitz3.ab3@3556>     CMPA.w #$0,A2
00020930 <AmiBlitz3.ab3@3557>      BEQ.w calcmaxs_done
00020934 <AmiBlitz3.ab3@3558>     TST.w $C(A2)
00020938 <AmiBlitz3.ab3@3559>      BPL.w calcmaxs_next
0002093C <AmiBlitz3.ab3@3560>     MOVE.l $12(A2),D0
00020940 <AmiBlitz3.ab3@3561>     TST.w -$2(A2,D0.L)
00020944 <AmiBlitz3.ab3@3562>      BEQ.w calcmaxs_next
00020946 <AmiBlitz3.ab3@3563>     ADDQ.w #1,D4
0002094A <AmiBlitz3.ab3@3564>     MOVE.w -$6(A2,D0.L),D1
0002094E <AmiBlitz3.ab3@3565>     BSR.w pokedata1
00020950 <AmiBlitz3.ab3@3566>     MOVEQ.l #$01,D1
00020954 <AmiBlitz3.ab3@3567>     MOVE.w -$2(A2,D0.L),D2
00020956 <AmiBlitz3.ab3@3568>     LSL.w D2,D1
0002095A <AmiBlitz3.ab3@3569>     MULU -$4(A2,D0.L),D1                                   ;write objectspacesize
0002095E <AmiBlitz3.ab3@3570>     BSR.w writedatalong
00020960 <AmiBlitz3.ab3@3573>     MOVEA.l (A2),A2
00020964 <AmiBlitz3.ab3@3574> BRA.w calcmaxs_loop
0002096A <AmiBlitz3.ab3@3577>   MOVE.w D4,maxsused
0002096E <AmiBlitz3.ab3@3578>    BEQ.w calcmaxs_done2
00020972 <AmiBlitz3.ab3@3579>   MOVE.w #$FFFA,D1                                         ;;use memlib
00020976 <AmiBlitz3.ab3@3580> BRA.w uselib
00020978 <AmiBlitz3.ab3@3583> RTS
0002097E <AmiBlitz3.ab3@3587>    MOVE.l a7,stackaddr
00020982 <AmiBlitz3.ab3@3588>    BSR.w compile_term
00020986 <AmiBlitz3.ab3@3589>    BSR.w reget
0002098A <AmiBlitz3.ab3@3590>    BNE.w illeolerr
00020990 <AmiBlitz3.ab3@3591>    TST.w dontwrite
00020994 <AmiBlitz3.ab3@3592>    BNE 'l1
0002099A <AmiBlitz3.ab3@3593>    TST.l stacktrack
0002099E <AmiBlitz3.ab3@3594>    BNE errormsg_stack
000209A2 <AmiBlitz3.ab3@3597>    CMP.w #-$7FDE,D0
000209A6 <AmiBlitz3.ab3@3598>    BNE.w compile_line_notelse
000209AC <AmiBlitz3.ab3@3599>    JSR do_else2
000209B0 <AmiBlitz3.ab3@3600> BRA.w compile_line
000209B2 <AmiBlitz3.ab3@3603>   TST.w D0
000209B6 <AmiBlitz3.ab3@3604>   BNE.w compile_line
000209BC <AmiBlitz3.ab3@3609>   MOVE.l firstiff,D0
000209C0 <AmiBlitz3.ab3@3610>    BEQ.w compile_line_done
000209C2 <AmiBlitz3.ab3@3611>   MOVEA.l D0,A0
000209C6 <AmiBlitz3.ab3@3612>   MOVE.w $C(A0),D1
000209CA <AmiBlitz3.ab3@3613>    BPL.w compile_line_done
000209CE <AmiBlitz3.ab3@3617>   BCLR #$F,D1
000209D4 <AmiBlitz3.ab3@3618>    JSR AJL_0_D7B8
000209DA <AmiBlitz3.ab3@3619>    JSR AJL_0_D81C
000209DE <AmiBlitz3.ab3@3620> BRA.w compile_line_unthen
000209E0 <AmiBlitz3.ab3@3623> RTS
000209E6 <AmiBlitz3.ab3@3627>   LEA lastgloballabel,A0
000209E8 <AmiBlitz3.ab3@3628>   TST.b (A0)
000209EC <AmiBlitz3.ab3@3629>   BEQ.w nolocerr
000209F2 <AmiBlitz3.ab3@3630>   LEA ptr_parameterstore,A1
000209F4 <AmiBlitz3.ab3@3631>   MOVEQ.l #$00,D2
000209F6 <AmiBlitz3.ab3@3634>   ADDQ.w #1,D2
000209F8 <AmiBlitz3.ab3@3635>   MOVE.b (A0)+,(A1)+
000209FC <AmiBlitz3.ab3@3636>    BNE.w createlab_loop
00020A02 <AmiBlitz3.ab3@3637>   MOVE.b #$27,-$1(A1)
00020A04 <AmiBlitz3.ab3@3638>   MOVE.w D2,-(A7)
00020A0A <AmiBlitz3.ab3@3639>    JSR makename4
00020A0C <AmiBlitz3.ab3@3640>   CMP.w (A7)+,D2
00020A10 <AmiBlitz3.ab3@3641>    BEQ.w syntaxerr
00020A12 <AmiBlitz3.ab3@3642>    TST.w d0
00020A16 <AmiBlitz3.ab3@3643>    BPL createlab_done
00020A1E <AmiBlitz3.ab3@3644>    MOVE.w #$3a,lastchar
00020A20 <AmiBlitz3.ab3@3645>    SUBQ.l #2,a5
00020A22 <AmiBlitz3.ab3@3648> RTS
00020A2C <AmiBlitz3.ab3@3652>   MOVE.l #forthstack,forthsp
00020A36 <AmiBlitz3.ab3@3653>   MOVE.l #precstack,precsp
00020A38 <AmiBlitz3.ab3@3654> RTS
00020A3A <AmiBlitz3.ab3@3661>   MOVEQ.l #$00,D4
00020A64 <AmiBlitz3.ab3@3664>   !basic
00020AA6 <AmiBlitz3.ab3@3665> 
00020AB6 <AmiBlitz3.ab3@3667>   If (c_abort = 1)           ; check if set
00020AB8 <AmiBlitz3.ab3@3668>     MOVEQ.l #-$01,d4
00020ABE <AmiBlitz3.ab3@3669>     MOVE.w D4,stopit
00020ADC <AmiBlitz3.ab3@3670>     !asm
00020AE0 <AmiBlitz3.ab3@3671>     BRA chkrealstop__skip
00020AFE <AmiBlitz3.ab3@3673>   !asm
00020B00 <AmiBlitz3.ab3@3674>   MOVEQ.l #$00,D6
00020B02 <AmiBlitz3.ab3@3675>   MOVEQ.l #$00,D7                                          ; clr Z-Flag for beq.b in chkstop_chk
00020B04 <AmiBlitz3.ab3@3679> RTS
00020B08 <AmiBlitz3.ab3@3683>   MOVE.w stopit(PC),D0
00020B0C <AmiBlitz3.ab3@3684>   BEQ chkstop__chk
00020B12 <AmiBlitz3.ab3@3685>   SUBQ.w #1,stopit
00020B14 <AmiBlitz3.ab3@3689> RTS
00020B1C <AmiBlitz3.ab3@3692>   MOVE.w #2000,stopit
00020B20 <AmiBlitz3.ab3@3693>   BSR.w chkrealstop
00020B24 <AmiBlitz3.ab3@3694>   BEQ.b chkstop__rts
00020B28 <AmiBlitz3.ab3@3696>   BSR.w close_compilewin
00020B2C <AmiBlitz3.ab3@3697>   BSR.w call_setpointernormal
00020B32 <AmiBlitz3.ab3@3699>   MOVEA.l errstack,A7
00020B38 <AmiBlitz3.ab3@3700>   MOVEA.l errcont,A0
00020B40 <AmiBlitz3.ab3@3701>   MOVE.w #-1,anyerrs
00020B42 <AmiBlitz3.ab3@3702> JMP (A0)
00020B46 <AmiBlitz3.ab3@3705> d_pc:           Ds.l 1
00020B4A <AmiBlitz3.ab3@3706> d_bigpc:        Ds.l 1
00020B4C <AmiBlitz3.ab3@3707> d_nomemleft:    Ds.w 1
00020B50 <AmiBlitz3.ab3@3708> cont_pc:        Ds.l 1
00020B54 <AmiBlitz3.ab3@3709> cont_pc2:       Ds.l 1
00020B58 <AmiBlitz3.ab3@3710> lastcontlink:   Ds.l 1
00020B5C <AmiBlitz3.ab3@3714>   ORI.w #$4E40,D1
00020B60 <AmiBlitz3.ab3@3715> BRA.w JUMP_writeword
00020B66 <AmiBlitz3.ab3@3719>   TST.b debugmode
00020B6A <AmiBlitz3.ab3@3720>   BEQ.w debugstuff__rts
00020B70 <AmiBlitz3.ab3@3727>   TST.w dirmode                                            ;or while in direct mode...
00020B74 <AmiBlitz3.ab3@3728>    BNE debugstuff__rts
00020B7E <AmiBlitz3.ab3@3729>   MOVE.l destpointer,d_pc
00020B88 <AmiBlitz3.ab3@3730>   MOVE.l bigpc,d_bigpc
00020B92 <AmiBlitz3.ab3@3731>   MOVE.w dontwrite,d_nomemleft
00020B96 <AmiBlitz3.ab3@3732>   MOVEM.l D0-D1,-(A7)
00020B98 <AmiBlitz3.ab3@3733>   MOVEQ.l #$01,D1
00020B9C <AmiBlitz3.ab3@3734>    BSR.w writetrap                                         ;write the adress to sourceline
00020BA2 <AmiBlitz3.ab3@3738>    MOVE.l destpointer,D0
00020BA8 <AmiBlitz3.ab3@3739>   MOVE.l cont_pc,D1
00020BAE <AmiBlitz3.ab3@3740>   MOVE.l D0,cont_pc
00020BB4 <AmiBlitz3.ab3@3741>   MOVE.l D1,cont_pc2
00020BB8 <AmiBlitz3.ab3@3742>    BEQ.b debugstuff__skip
00020BBE <AmiBlitz3.ab3@3743>   TST.w dontwrite
00020BC2 <AmiBlitz3.ab3@3744>    BNE.b debugstuff__skip
00020BC4 <AmiBlitz3.ab3@3745>   MOVEA.l D1,A4
00020BC6 <AmiBlitz3.ab3@3746>   SUB.l A4,D0
00020BCA <AmiBlitz3.ab3@3747>   MOVE.w D0,$6(A4)
00020BD0 <AmiBlitz3.ab3@3748>   MOVE.l A4,lastcontlink
00020BD6 <AmiBlitz3.ab3@3751>   TST.w ininclude
00020BDC <AmiBlitz3.ab3@3753>   TST.w makeexec
00020BE0 <AmiBlitz3.ab3@3754>   BEQ 'l1
00020BE6 <AmiBlitz3.ab3@3755>   TST.w exdebug
00020BEA <AmiBlitz3.ab3@3756>   BEQ 'noinc
00020BEE <AmiBlitz3.ab3@3759>   MOVEM.l a0-a1/d2/d3,-(a7)                                ;write source for includes
00020BF4 <AmiBlitz3.ab3@3760>   MOVE.l data1,d1
00020BFA <AmiBlitz3.ab3@3761>   TST.b firsttime
00020BFE <AmiBlitz3.ab3@3762>   BNE 'nofirst
00020C06 <AmiBlitz3.ab3@3763>   MOVE.b #1,firsttime
00020C0C <AmiBlitz3.ab3@3764>   MOVE.l #"DuCk",d1                                        ; to found from debugger the code start
00020C12 <AmiBlitz3.ab3@3765>   JSR writedatalong
00020C18 <AmiBlitz3.ab3@3766>   MOVE.l #"AmiB",d1
00020C1E <AmiBlitz3.ab3@3767>   JSR writedatalong
00020C24 <AmiBlitz3.ab3@3768>   MOVE.l destbufferstart,d1
00020C2A <AmiBlitz3.ab3@3769>   JSR writedatalong
00020C30 <AmiBlitz3.ab3@3770>   TST.w dontwrite
00020C34 <AmiBlitz3.ab3@3771>   BNE 'nohunk
00020C3A <AmiBlitz3.ab3@3772>   MOVE.l data1,d1
00020C3C <AmiBlitz3.ab3@3773>   SUBQ.l #4,d1
00020C42 <AmiBlitz3.ab3@3774>   SUB.l destbufferstart,d1
00020C44 <AmiBlitz3.ab3@3775>   MOVE.l d1,d2
00020C4A <AmiBlitz3.ab3@3776>   JSR addhunkoffset
00020C50 <AmiBlitz3.ab3@3779>   MOVE.l destpointer,d2
00020C56 <AmiBlitz3.ab3@3780>   MOVE.l data1,d1
00020C5C <AmiBlitz3.ab3@3783>   MOVE.l destpointer,d2
00020C5E <AmiBlitz3.ab3@3784>   MOVE.l d1,d3
00020C64 <AmiBlitz3.ab3@3785>   SUB.l destbufferstart,d1
00020C6A <AmiBlitz3.ab3@3786>   OR.l #$80000000,d1
00020C70 <AmiBlitz3.ab3@3787>   JSR writelong
00020C76 <AmiBlitz3.ab3@3788>   TST.w inmacro
00020C7A <AmiBlitz3.ab3@3789>   BEQ 'sc1
00020C80 <AmiBlitz3.ab3@3790>   MOVE.l myline,a0
00020C84 <AmiBlitz3.ab3@3792> BRA 'inc2
00020C8A <AmiBlitz3.ab3@3794>  'sc1  TST.w ininclude
00020C8E <AmiBlitz3.ab3@3795>   BEQ 'inc
00020C94 <AmiBlitz3.ab3@3796>   MOVE.l includesourceline,a0
00020C98 <AmiBlitz3.ab3@3797> BRA 'inc2
00020C9E <AmiBlitz3.ab3@3800>   MOVE.l sourceline,a0
00020CA2 <AmiBlitz3.ab3@3801>   LEA 9(a0),a0
00020CA4 <AmiBlitz3.ab3@3804>   MOVE.l d1,d2
00020CA6 <AmiBlitz3.ab3@3805>   MOVE.l A5,D1
00020CA8 <AmiBlitz3.ab3@3806>   SUB.l a0,D1
00020CAE <AmiBlitz3.ab3@3807>   ADD.l #9,d1
00020CB2 <AmiBlitz3.ab3@3808>   BSR.w JUMP_writeword
00020CB8 <AmiBlitz3.ab3@3809>   CMP.l #9,d1
00020CBC <AmiBlitz3.ab3@3810>   BEQ 'pos1
00020CC2 <AmiBlitz3.ab3@3811>   TST.w dontwrite
00020CC6 <AmiBlitz3.ab3@3812>   BNE 'nopad
00020CCC <AmiBlitz3.ab3@3813>   MOVE.l lastsourceline,d1
00020CD0 <AmiBlitz3.ab3@3814>   MOVE.l d1,-6(a4)
00020CD4 <AmiBlitz3.ab3@3815> BRA 'nopad
00020CDA <AmiBlitz3.ab3@3818>   MOVE.l d2,lastsourceline
00020CE4 <AmiBlitz3.ab3@3819>    MOVE.l destpointer,lastdestpointer
00020CE6 <AmiBlitz3.ab3@3820>    MOVEQ #0,d1
00020CEC <AmiBlitz3.ab3@3821>   MOVE.l data1,d2
00020CF2 <AmiBlitz3.ab3@3822>   SUB.l destbufferstart,d2
00020CF8 <AmiBlitz3.ab3@3823>   JSR writedatalong
00020CFE <AmiBlitz3.ab3@3824>   TST.w dontwrite
00020D02 <AmiBlitz3.ab3@3825>   BNE 'no2
00020D08 <AmiBlitz3.ab3@3826>   JSR addhunkoffset
00020D0E <AmiBlitz3.ab3@3829>   MOVE.l data1,d2
00020D14 <AmiBlitz3.ab3@3830>   SUB.l destbufferstart,d2
00020D1A <AmiBlitz3.ab3@3831>   JSR writedatalong
00020D20 <AmiBlitz3.ab3@3832>   TST.w dontwrite
00020D24 <AmiBlitz3.ab3@3833>   BNE 'no
00020D2A <AmiBlitz3.ab3@3834>   JSR addhunkoffset
00020D30 <AmiBlitz3.ab3@3835>   MOVE.l lastwritedat,a1
00020D36 <AmiBlitz3.ab3@3836>   CMP.l #0,a1
00020D3A <AmiBlitz3.ab3@3837>   BEQ 'no
00020D3C <AmiBlitz3.ab3@3838>   MOVE.l d3,(a1)
00020D44 <AmiBlitz3.ab3@3839>   MOVE.l prevwritedat,4(a1)
00020D4E <AmiBlitz3.ab3@3840>   MOVE.l lastwritedat,prevwritedat
00020D54 <AmiBlitz3.ab3@3843>   MOVE.l d3,lastwritedat
00020D56 <AmiBlitz3.ab3@3844>   MOVEQ #4,d1
00020D5A <AmiBlitz3.ab3@3845>   BSR pokedata1b
00020D5C <AmiBlitz3.ab3@3848>   MOVE.b (a0)+,d1
00020D60 <AmiBlitz3.ab3@3849>   BEQ 'done
00020D64 <AmiBlitz3.ab3@3850>   BSR pokedata1b
00020D68 <AmiBlitz3.ab3@3851> BRA 'loop
00020D6A <AmiBlitz3.ab3@3854>   MOVEQ #0,d1
00020D6E <AmiBlitz3.ab3@3855>   BSR pokedata1b
00020D74 <AmiBlitz3.ab3@3856>   MOVE.l data1,d1
00020D78 <AmiBlitz3.ab3@3857>   BTST #0,d1
00020D7C <AmiBlitz3.ab3@3858>   BEQ 'nopad
00020D7E <AmiBlitz3.ab3@3859>   MOVEQ #0,d1
00020D82 <AmiBlitz3.ab3@3860>   BSR pokedata1b
00020D86 <AmiBlitz3.ab3@3863>   MOVEM.l (a7)+,a0-a1/d2/d3
00020D8A <AmiBlitz3.ab3@3864> BRA 'noinc2
00020D90 <AmiBlitz3.ab3@3867>   MOVE.l sourceline,D1
00020D96 <AmiBlitz3.ab3@3869>   JSR writelong
00020D98 <AmiBlitz3.ab3@3870>   MOVE.l A5,D1
00020D9E <AmiBlitz3.ab3@3871>   SUB.l sourceline,D1
00020DA4 <AmiBlitz3.ab3@3873>   JSR writeword
00020DA6 <AmiBlitz3.ab3@3876>   MOVEQ.l #$00,D1
00020DAC <AmiBlitz3.ab3@3877>   JSR writeword                                            ; was: BSR.w writeword
00020DB0 <AmiBlitz3.ab3@3878>   MOVEM.l (A7)+,D0-D1
00020DB2 <AmiBlitz3.ab3@3881> RTS
00020DB8 <AmiBlitz3.ab3@3885>   TST.b debugmode                                          ;extern debug
00020DBC <AmiBlitz3.ab3@3886>    BEQ.b undodebug__rts
00020DC2 <AmiBlitz3.ab3@3887>   TST.b dirmode
00020DC6 <AmiBlitz3.ab3@3888>   BNE undodebug__rts
00020DD0 <AmiBlitz3.ab3@3893>   MOVE.w d_nomemleft,dontwrite
00020DDA <AmiBlitz3.ab3@3894>   MOVE.l d_bigpc,bigpc
00020DE4 <AmiBlitz3.ab3@3895>   MOVE.l d_pc,destpointer
00020DEE <AmiBlitz3.ab3@3896>   MOVE.l cont_pc2,cont_pc
00020DF0 <AmiBlitz3.ab3@3899> RTS
00020DFA <AmiBlitz3.ab3@3903>   MOVE.l #forthstack,forthsp
00020E04 <AmiBlitz3.ab3@3904>   MOVE.l #precstack,precsp
00020E0A <AmiBlitz3.ab3@3905>   CLR.w regnum
00020E10 <AmiBlitz3.ab3@3906>   CLR.w nonew
00020E16 <AmiBlitz3.ab3@3907>   CLR.w sbasegot
00020E20 <AmiBlitz3.ab3@3908>   MOVE.w varcodelen,oldvcodelen
00020E26 <AmiBlitz3.ab3@3909>   CLR.w varcodelen
00020E2E <AmiBlitz3.ab3@3910>   MOVE.w #-1,lasta6
00020E30 <AmiBlitz3.ab3@3911> RTS
00020E36 <AmiBlitz3.ab3@3915>   TST.w linemode
00020E3A <AmiBlitz3.ab3@3916>   BMI.b smode__skip
00020E3E <AmiBlitz3.ab3@3917>   BSR.w undodebug
00020E44 <AmiBlitz3.ab3@3918>   MOVE.w linemode,D1
00020E46 <AmiBlitz3.ab3@3919>   ADDQ.w #4,A7
00020E48 <AmiBlitz3.ab3@3920>   LSL.w #2,D1
00020E4E <AmiBlitz3.ab3@3921>   LEA modetable,A0
00020E52 <AmiBlitz3.ab3@3922>   MOVEA.l $0(A0,D1.W),A0
00020E56 <AmiBlitz3.ab3@3923>   BSR.w reget
00020E58 <AmiBlitz3.ab3@3926> JMP (A0)                                                   ;jumptokenroutine
00020E5A <AmiBlitz3.ab3@3929> RTS
00020E62 <AmiBlitz3.ab3@3934>   MOVE.w #0,leaa0a0+2
00020E68 <AmiBlitz3.ab3@3935>   CLR.b nowdeclare
00020E6E <AmiBlitz3.ab3@3936>   CLR.b notypecheck
00020E74 <AmiBlitz3.ab3@3937>   CLR.l lasttoken
00020E7A <AmiBlitz3.ab3@3938>   CLR.b doimmediate
00020E80 <AmiBlitz3.ab3@3939>   CLR.w vartype
00020E86 <AmiBlitz3.ab3@3940>   CLR.w regnumfunc
00020E8C <AmiBlitz3.ab3@3941>   CLR.b optistring
00020E92 <AmiBlitz3.ab3@3942>   CLR.b iniffcommand
00020E98 <AmiBlitz3.ab3@3943>   CLR.w instringon  ; new
00020E9E <AmiBlitz3.ab3@3944>   CLR.b funccall
00020EA4 <AmiBlitz3.ab3@3945>   CLR.l currentfunccall
00020EAA <AmiBlitz3.ab3@3946>   CLR.l leftsidetype
00020EB0 <AmiBlitz3.ab3@3947>   CLR.l rightsidetype
00020EB6 <AmiBlitz3.ab3@3948>   CLR.b peekaddrsize
00020EBC <AmiBlitz3.ab3@3949>   CLR.b blitzparloop
00020EC2 <AmiBlitz3.ab3@3950>   CLR.b funcparloop
00020EC8 <AmiBlitz3.ab3@3951>   TST.b debugmode
00020ECC <AmiBlitz3.ab3@3952>    BEQ 'fpu
00020ED6 <AmiBlitz3.ab3@3958>   MOVE.b fpu,iee
00020EDA <AmiBlitz3.ab3@3959>   MOVE.w stopit(PC),D0
00020EDE <AmiBlitz3.ab3@3960>   BNE chkstop_chkb
00020EE2 <AmiBlitz3.ab3@3961>   BSR.w chkstop                                          ; message here
00020EE8 <AmiBlitz3.ab3@3964>   SUBQ.w #1,stopit
00020EEC <AmiBlitz3.ab3@3967>   BSR.w findmacro                                          ;macro
00020EF2 <AmiBlitz3.ab3@4021>   TST.b debugmode
00020EF6 <AmiBlitz3.ab3@4022>    BEQ.s 'l10
00020EFC <AmiBlitz3.ab3@4023>   TST.b exdebug
00020F00 <AmiBlitz3.ab3@4024>   BEQ 'l10a
00020F02 <AmiBlitz3.ab3@4025>   MOVE.w (a5),d0
00020F06 <AmiBlitz3.ab3@4026>   CMP.w #$8025,d0
00020F0A <AmiBlitz3.ab3@4027>    BEQ 'l10
00020F0E <AmiBlitz3.ab3@4030>   BSR.w debugstuffa                                         ;insert runtimecode debugcode
00020F12 <AmiBlitz3.ab3@4034>   BSR.w get1bytemain                                       ;gettokenmain
00020F16 <AmiBlitz3.ab3@4035>    BEQ.w undodebug
00020F1A <AmiBlitz3.ab3@4036>   CMP.w #$002b,d0                                            ;check for + cast sign
00020F1E <AmiBlitz3.ab3@4037>     BNE 'lb2
00020F22 <AmiBlitz3.ab3@4038>     BSR.w get1bytemain
00020F2A <AmiBlitz3.ab3@4039>     MOVE.b #1,notypecheck
00020F34 <AmiBlitz3.ab3@4047>   MOVE.l #forthstack,forthsp
00020F3E <AmiBlitz3.ab3@4048>   MOVE.l #precstack,precsp
00020F44 <AmiBlitz3.ab3@4049>   CLR.w regnum
00020F4A <AmiBlitz3.ab3@4050>   CLR.w nonew
00020F50 <AmiBlitz3.ab3@4051>   CLR.w sbasegot
00020F5A <AmiBlitz3.ab3@4052>   MOVE.w varcodelen,oldvcodelen
00020F60 <AmiBlitz3.ab3@4054>   CLR.w varcodelen
00020F68 <AmiBlitz3.ab3@4055>   MOVE.w #$FFFF,lasta6
00020F6C <AmiBlitz3.ab3@4057>   BSR.w smode
00020F6E <AmiBlitz3.ab3@4058>   TST.w D0
00020F72 <AmiBlitz3.ab3@4059>   BMI.w get_tokencode
00020F76 <AmiBlitz3.ab3@4060>   CMP.w #$2E,D0
00020F7A <AmiBlitz3.ab3@4061>    BEQ.w JL_0_4644                                         ;shortlist
00020F7E <AmiBlitz3.ab3@4062>   CMP.w #"#",D0
00020F82 <AmiBlitz3.ab3@4063>    BEQ.w JL_0_4718                                         ;constant found
00020F86 <AmiBlitz3.ab3@4064>   CMP.w #$27,D0
00020F8A <AmiBlitz3.ab3@4065>    BEQ.w JL_0_4638                                         ;local label
00020F90 <AmiBlitz3.ab3@4066>   MOVE.l A5,letstart
00020F96 <AmiBlitz3.ab3@4067>   JSR getparameter
00020F9A <AmiBlitz3.ab3@4068>   BSR.w reget
00020F9E <AmiBlitz3.ab3@4069>    BEQ.w JL_0_4658                                         ;label found
00020FA2 <AmiBlitz3.ab3@4070>   CMP.w #$7B,D0
00020FA6 <AmiBlitz3.ab3@4071>    BEQ.w JL_0_475C
00020FA8 <AmiBlitz3.ab3@4072>   TST.w d0
00020FAC <AmiBlitz3.ab3@4073>    BPL 'll1
00020FB2 <AmiBlitz3.ab3@4074>   TST.b newsyntax
00020FB6 <AmiBlitz3.ab3@4075>    BEQ 'll1
00020FBC <AmiBlitz3.ab3@4076>   LEA allowtab,a0
00020FBE <AmiBlitz3.ab3@4077>   MOVEQ #0,d1
00020FC0 <AmiBlitz3.ab3@4078>   MOVE.b d0,d1
00020FC4 <AmiBlitz3.ab3@4079>   TST.b 0(a0,d1.w)
00020FC8 <AmiBlitz3.ab3@4080>    BNE 'll1
00020FCA <AmiBlitz3.ab3@4081>   SUBQ.l #2,a5
00020FD2 <AmiBlitz3.ab3@4082>   MOVE.w #":",lastchar                                     ;no doublepoint
00020FD6 <AmiBlitz3.ab3@4083> BRA JL_0_4658
00020FDE <AmiBlitz3.ab3@4086>   CMP.l #"equ ",-1(a5)
00020FE2 <AmiBlitz3.ab3@4087>    BEQ 'll4
00020FEA <AmiBlitz3.ab3@4088>   CMP.l #"EQU ",-1(a5)
00020FEE <AmiBlitz3.ab3@4089>    BNE 'll2
00020FF0 <AmiBlitz3.ab3@4092>   ADDQ.l #2,a5
00020FF4 <AmiBlitz3.ab3@4093>   BSR.w findlabel2
00020FF8 <AmiBlitz3.ab3@4094>   BEQ.w 'lf1
00020FFC <AmiBlitz3.ab3@4095>   BSR.w addlabelhash
00021004 <AmiBlitz3.ab3@4096>   MOVE.l #$1,$4(A2)
0002100C <AmiBlitz3.ab3@4099>   CMPI.l #$1,$4(A2)
00021010 <AmiBlitz3.ab3@4100>    BNE.w illconerr
00021014 <AmiBlitz3.ab3@4101>   BSR get1bytemain
00021016 <AmiBlitz3.ab3@4102>   MOVE.l A2,-(A7)
00021018 <AmiBlitz3.ab3@4113>   SUBQ.l #1,a5
0002101A <AmiBlitz3.ab3@4116>   SUBQ.l #1,a5
00021020 <AmiBlitz3.ab3@4117>   JSR AJL_0_BF6E
00021022 <AmiBlitz3.ab3@4118>   MOVEA.l (A7)+,A2
00021026 <AmiBlitz3.ab3@4119>   MOVE.l D3,$8(A2)
00021028 <AmiBlitz3.ab3@4120>   RTS
0002102C <AmiBlitz3.ab3@4121>   BSR get1bytemain
00021034 <AmiBlitz3.ab3@4124>   CMP.l #"SET ",-1(a5)
00021038 <AmiBlitz3.ab3@4125>   BNE 'll3
0002103C <AmiBlitz3.ab3@4126> BRA 'll4
00021042 <AmiBlitz3.ab3@4129> JMP AJL_0_DEA6
00021046 <AmiBlitz3.ab3@4132>   CMP.w #-$7FDE,D0
0002104A <AmiBlitz3.ab3@4133>   BEQ.w get_tokencode
0002104E <AmiBlitz3.ab3@4134> BRA.w undodebug
00021052 <AmiBlitz3.ab3@4137>   BSR.w undodebug
00021056 <AmiBlitz3.ab3@4138>   BSR.w createlab
0002105A <AmiBlitz3.ab3@4139> BRA.w JL_0_466E
0002105E <AmiBlitz3.ab3@4142>   BSR.w get1bytemain
00021062 <AmiBlitz3.ab3@4143>    BEQ.w JL_0_462C
00021066 <AmiBlitz3.ab3@4144>   CMP.w #"'",D0
0002106A <AmiBlitz3.ab3@4145>    BEQ.w JL_0_4638
0002106E <AmiBlitz3.ab3@4146>    BSR.w makename2
00021070 <AmiBlitz3.ab3@4147>    TST.w d0
00021074 <AmiBlitz3.ab3@4148>    BPL 'll1
00021076 <AmiBlitz3.ab3@4149>    SUBQ.l #2,a5
0002107E <AmiBlitz3.ab3@4150>    MOVE.w #":",lastchar
00021082 <AmiBlitz3.ab3@4151> BRA JL_0_4658                                              ;????
00021086 <AmiBlitz3.ab3@4155>   BSR.w undodebug
0002108C <AmiBlitz3.ab3@4156>   LEA ptr_parameterstore,A0
00021092 <AmiBlitz3.ab3@4157>   LEA lastgloballabel,A1
00021094 <AmiBlitz3.ab3@4160>   MOVE.b (A0)+,(A1)+
00021098 <AmiBlitz3.ab3@4161>    BNE.w JL_0_4668
0002109C <AmiBlitz3.ab3@4164>   BSR.w findlabel2
000210A0 <AmiBlitz3.ab3@4165>    BEQ.w JL_0_4698
000210A4 <AmiBlitz3.ab3@4166>    BSR.w addlabelhash
000210A8 <AmiBlitz3.ab3@4169>   CLR.l $4(A2)
000210B0 <AmiBlitz3.ab3@4170>   MOVE.l destpointer,$8(A2)
000210B8 <AmiBlitz3.ab3@4173>   MOVE.w procnum,$10(A2)
000210BA <AmiBlitz3.ab3@4174> RTS
000210BE <AmiBlitz3.ab3@4178>   MOVE.l $4(A2),D0
000210C2 <AmiBlitz3.ab3@4179>   BTST #$0,D0
000210C6 <AmiBlitz3.ab3@4180>    BNE.w illlaberr
000210CC <AmiBlitz3.ab3@4181>   TST.w pass
000210D0 <AmiBlitz3.ab3@4183>   MOVE.l $8(A2),D0
000210D4 <AmiBlitz3.ab3@4184>    BNE.w duplaberr
000210DC <AmiBlitz3.ab3@4185>   MOVE.w procnum,$10(A2)
000210E0 <AmiBlitz3.ab3@4186>   MOVEA.l $4(A2),A3
000210E6 <AmiBlitz3.ab3@4187>   MOVEA.l _execbase,A6
000210EA <AmiBlitz3.ab3@4190>   CMPA.w #$0,A3
000210EE <AmiBlitz3.ab3@4191>    BEQ.w JL_0_467A
000210F2 <AmiBlitz3.ab3@4192>     MOVE.l $4(A2),D1
000210F6 <AmiBlitz3.ab3@4193>     BTST #$0,D1
000210FA <AmiBlitz3.ab3@4194>     BNE.w illlaberr
000210FE <AmiBlitz3.ab3@4195>   MOVE.w $8(A3),D1
00021102 <AmiBlitz3.ab3@4196>   CMP.w $10(A2),D1
00021106 <AmiBlitz3.ab3@4197>    BEQ.w JL_0_46DC
0002110C <AmiBlitz3.ab3@4198>    TST.b newsyntax
00021110 <AmiBlitz3.ab3@4199>    BEQ 'l1
00021114 <AmiBlitz3.ab3@4200> BRA.w JL_0_46DC                                            ;label context out of range fix
0002111C <AmiBlitz3.ab3@4205>   MOVE.w $A(A3),linenumat+2                                ;move 10(a3),linenumat org source
00021120 <AmiBlitz3.ab3@4206> BRA.w referr
00021126 <AmiBlitz3.ab3@4209>   MOVE.w dontwrite,D1
0002112A <AmiBlitz3.ab3@4210>    BNE.w JL_0_4706
0002112E <AmiBlitz3.ab3@4211>   MOVEA.l $4(A3),A1
00021134 <AmiBlitz3.ab3@4212>   BTST #$0,$7(A3)
00021138 <AmiBlitz3.ab3@4213>    BEQ.w JL_0_4700
0002113A <AmiBlitz3.ab3@4214>   SUBQ.w #1,A1
00021140 <AmiBlitz3.ab3@4215>   MOVE.l data2,(A1)
00021144 <AmiBlitz3.ab3@4216> BRA.w JL_0_4706
0002114A <AmiBlitz3.ab3@4219>   MOVE.l destpointer,(A1)
0002114C <AmiBlitz3.ab3@4222>   MOVEA.l A3,A1
0002114E <AmiBlitz3.ab3@4223>   MOVEA.l (A3),A3
00021152 <AmiBlitz3.ab3@4224>   MOVE.l A3,$4(A2)
00021154 <AmiBlitz3.ab3@4225>   MOVEQ.l #$0C+2,D0
0002115A <AmiBlitz3.ab3@4226>   MOVE.l mempool,a0
00021160 <AmiBlitz3.ab3@4227>   MOVEA.l _execbase,A6
00021164 <AmiBlitz3.ab3@4228>   JSR _FreePooled(A6)
00021168 <AmiBlitz3.ab3@4229> BRA.w JL_0_46BC
00021172 <AmiBlitz3.ab3@4234>    MOVE.l #forthstack,forthsp
0002117C <AmiBlitz3.ab3@4235>   MOVE.l #precstack,precsp
00021180 <AmiBlitz3.ab3@4236>    BSR.w getparameter2
00021184 <AmiBlitz3.ab3@4239>   BSR.w findlabel2
00021188 <AmiBlitz3.ab3@4240>    BEQ.w JL_0_4738
0002118C <AmiBlitz3.ab3@4241>    BSR.w addlabelhash
00021194 <AmiBlitz3.ab3@4242>   MOVE.l #$1,$4(A2)
00021198 <AmiBlitz3.ab3@4243> BRA.w JL_0_4744
000211A0 <AmiBlitz3.ab3@4246>   CMPI.l #$1,$4(A2)
000211A4 <AmiBlitz3.ab3@4247>    BNE.w illconerr
000211A8 <AmiBlitz3.ab3@4256>   CMP.w #$3D,D0
000211AC <AmiBlitz3.ab3@4257>   BEQ.w JL_0_474E
000211AE <AmiBlitz3.ab3@4258> RTS
000211B0 <AmiBlitz3.ab3@4262>   MOVE.l A2,-(A7)
000211B6 <AmiBlitz3.ab3@4263>   JSR AJL_0_BF6E
000211B8 <AmiBlitz3.ab3@4264>   MOVEA.l (A7)+,A2
000211BC <AmiBlitz3.ab3@4265>   MOVE.l D3,$8(A2)                                         ;store constant
000211C4 <AmiBlitz3.ab3@4266>   CMP.w #$0a,lastchar
000211C8 <AmiBlitz3.ab3@4267>   BNE 'l1
000211D0 <AmiBlitz3.ab3@4268>   MOVE.w #":",lastchar                                     ;hack to read wizard include files
000211D2 <AmiBlitz3.ab3@4271> RTS
000211D6 <AmiBlitz3.ab3@4274>   BSR.w findproc                                           ;write statement call
000211DA <AmiBlitz3.ab3@4275>   BEQ _state
000211E0 <AmiBlitz3.ab3@4276>   TST.l unusedfunc
000211E4 <AmiBlitz3.ab3@4277>   BEQ noprocerr
000211EA <AmiBlitz3.ab3@4279>   JSR gotoendsource
000211EE <AmiBlitz3.ab3@4282>   TST.b $5(A2)
000211F4 <AmiBlitz3.ab3@4284>   MOVE.l a2,currentfunccall
000211FC <AmiBlitz3.ab3@4285>   MOVE.b #1,funccall
00021202 <AmiBlitz3.ab3@4286>   MOVE.b #1,isfunc(a2)
00021206 <AmiBlitz3.ab3@4287>   MOVE.l $E(A2),-(A7)
00021208 <AmiBlitz3.ab3@4288>   MOVEQ.l #$00,D0
0002120C <AmiBlitz3.ab3@4289>   MOVE.b $4(A2),D0
00021212 <AmiBlitz3.ab3@4290>   MOVE.l d0,parnumtemp
00021216 <AmiBlitz3.ab3@4291>   BEQ.w JL_0_4786
0002121A <AmiBlitz3.ab3@4292>   TST.b $20(a2)                                            ;increase if morepar
0002121E <AmiBlitz3.ab3@4293>   BNE 'no0par
00021220 <AmiBlitz3.ab3@4294>   MOVE.l a5,a4
00021224 <AmiBlitz3.ab3@4297>   CMP.b #$20,(a4)+
00021228 <AmiBlitz3.ab3@4298>   BEQ 'l1
0002122E <AmiBlitz3.ab3@4299>   CMP.b #"}",-1(a4)
00021232 <AmiBlitz3.ab3@4300>   BNE  'no0par                                             ;statementcall pars
00021234 <AmiBlitz3.ab3@4301>   MOVEQ #0,d0
00021238 <AmiBlitz3.ab3@4304>   LEA $16(A2),A1
0002123A <AmiBlitz3.ab3@4307>   MOVE.l d1,-(a7)
0002123C <AmiBlitz3.ab3@4308>   MOVE.b (a1),d2
0002123E <AmiBlitz3.ab3@4309>   MOVE.l d0,d1
00021242 <AmiBlitz3.ab3@4310>   CMP.w #4,d2
00021246 <AmiBlitz3.ab3@4311>   BNE 'l1b
0002124C <AmiBlitz3.ab3@4312>   ADD.l #$203c,d1
00021252 <AmiBlitz3.ab3@4314>   JSR writeword
00021258 <AmiBlitz3.ab3@4315>   MOVE.l #$ffff0000,d1
0002125E <AmiBlitz3.ab3@4317>   JSR writelong
00021262 <AmiBlitz3.ab3@4318> BRA 'l2b
00021268 <AmiBlitz3.ab3@4321>   TST.b fpu
0002126C <AmiBlitz3.ab3@4322>   BNE 'l1c
00021270 <AmiBlitz3.ab3@4323>   CMP.w #5,d2
00021274 <AmiBlitz3.ab3@4324>   BNE 'l1c
0002127A <AmiBlitz3.ab3@4325>   ADD.l #$203c,d1
00021280 <AmiBlitz3.ab3@4327>   JSR writeword
00021286 <AmiBlitz3.ab3@4328>   MOVE.l #$800000c1,d1
0002128C <AmiBlitz3.ab3@4330>   JSR writelong
00021290 <AmiBlitz3.ab3@4331> BRA 'l2b
00021296 <AmiBlitz3.ab3@4334>   ADD.l #$70ff,d1
0002129C <AmiBlitz3.ab3@4336>   JSR writeword
000212A2 <AmiBlitz3.ab3@4337>   MOVE.l #$f23c5000,d1
000212A4 <AmiBlitz3.ab3@4338>   MOVE.l d0,d2
000212A6 <AmiBlitz3.ab3@4339>   ASR.l #2,d2
000212A8 <AmiBlitz3.ab3@4340>   ADD.l d2,d1
000212AE <AmiBlitz3.ab3@4342>   JSR writelong
000212B2 <AmiBlitz3.ab3@4343>   MOVE.w #$ffff,d1
000212B8 <AmiBlitz3.ab3@4345>   JSR writeword
000212BA <AmiBlitz3.ab3@4348>   MOVE.l (a7)+,d1
000212BC <AmiBlitz3.ab3@4349>   ADDQ.l #1,a1
000212C2 <AmiBlitz3.ab3@4350>   ADD.l #$0200,d0
000212C8 <AmiBlitz3.ab3@4351>   CMP.l #$0e00,d0
000212CC <AmiBlitz3.ab3@4352>    BEQ syntaxerr
000212CE <AmiBlitz3.ab3@4353>   TST.b (a1)
000212D2 <AmiBlitz3.ab3@4354>    BNE 'again
000212D6 <AmiBlitz3.ab3@4355> BRA JL_0_4786
000212E0 <AmiBlitz3.ab3@4358>   MOVE.w a2offset,a2offset2
000212E4 <AmiBlitz3.ab3@4359>   LEA $16(A2),A2
000212EA <AmiBlitz3.ab3@4360>   MOVE.b funcparloop,-(a7)
000212F2 <AmiBlitz3.ab3@4361>   MOVE.b #1,funcparloop
000212F8 <AmiBlitz3.ab3@4362>   MOVE.b blitzparloop,-(a7)
000212FE <AmiBlitz3.ab3@4363>   CLR.b blitzparloop
00021302 <AmiBlitz3.ab3@4364>   BSR.w fetchpees2
00021308 <AmiBlitz3.ab3@4365>   MOVE.b (a7)+,blitzparloop
0002130E <AmiBlitz3.ab3@4366>   MOVE.b (a7)+,funcparloop
00021312 <AmiBlitz3.ab3@4367> BRA.w JL_0_478A
00021316 <AmiBlitz3.ab3@4370>   BSR.w get1bytemain
0002131A <AmiBlitz3.ab3@4373>   CMP.w #$7D,D0
0002131E <AmiBlitz3.ab3@4374>    BNE.w morepar_                                          ;syntax error morepar
00021324 <AmiBlitz3.ab3@4375>    JSR chkstak
00021326 <AmiBlitz3.ab3@4376>   MOVE.l (A7)+,D1
0002132C <AmiBlitz3.ab3@4392>    JSR JL_0_AFCA
00021332 <AmiBlitz3.ab3@4414>   CLR.b funccall
00021336 <AmiBlitz3.ab3@4415> BRA.w get1bytemain
0002133C <AmiBlitz3.ab3@4419>   MOVE.l d0,lasttoken
00021340 <AmiBlitz3.ab3@4420>   CMP.w #$c09f,d0                                          ;hack to use getregd0 instead of getd0
00021344 <AmiBlitz3.ab3@4421>   BNE 'l2
00021348 <AmiBlitz3.ab3@4422>    MOVE.w #$dd05,d0
0002134C <AmiBlitz3.ab3@4425>   CMP.w #$c0a0,d0                                          ;hack to use getregd0 instead of getd0
00021350 <AmiBlitz3.ab3@4426>   BNE 'l3
00021354 <AmiBlitz3.ab3@4427>    MOVE.w #$dd06,d0
00021358 <AmiBlitz3.ab3@4430>   CMP.w #-$7FC4,D0
0002135C <AmiBlitz3.ab3@4431>   BCS.w JL_0_47C4
00021360 <AmiBlitz3.ab3@4432>     CMP.w #-$7F4D,D0
00021364 <AmiBlitz3.ab3@4433>     BCC.w JL_0_47C4
0002136C <AmiBlitz3.ab3@4434>       BTST #$7,assemblercheck                              ;inline Assembler checking
00021370 <AmiBlitz3.ab3@4435>       BNE.b JL_0_47C0
00021376 <AmiBlitz3.ab3@4436>         TST.b debugmode
0002137A <AmiBlitz3.ab3@4437>         BEQ.b 'l10
00021384 <AmiBlitz3.ab3@4442>           MOVE.w d_nomemleft,dontwrite
0002138E <AmiBlitz3.ab3@4443>           MOVE.l d_bigpc,bigpc
00021398 <AmiBlitz3.ab3@4444>           MOVE.l d_pc,destpointer
000213A2 <AmiBlitz3.ab3@4445>           MOVE.l cont_pc2,cont_pc
000213A6 <AmiBlitz3.ab3@4451> BRA.w JL_0_612C
000213AA <AmiBlitz3.ab3@4454>   BCLR #$F,D0
000213AC <AmiBlitz3.ab3@4455>   MOVE.w D0,D1
000213B0 <AmiBlitz3.ab3@4456>   ANDI.w #$7F00,D1
000213B4 <AmiBlitz3.ab3@4457>   BNE.w JL_0_4856
000213B8 <AmiBlitz3.ab3@4458>     CMP.w #$B3,D0                                          ;intern Instructions
000213BC <AmiBlitz3.ab3@4459>     BCS.w JL_0_47F2
000213C0 <AmiBlitz3.ab3@4460>       SUBI.w #$77,D0
000213C4 <AmiBlitz3.ab3@4461>       CMP.w #$4B,D0
000213C8 <AmiBlitz3.ab3@4462>       BEQ.w JL_0_4830
000213CC <AmiBlitz3.ab3@4463>         CMP.w #$46,D0
000213D0 <AmiBlitz3.ab3@4464>         BEQ.w JL_0_4830
000213D4 <AmiBlitz3.ab3@4465> BRA.w JL_0_4834                                            ; change tokennum
000213D8 <AmiBlitz3.ab3@4468>     CMP.w #$38,D0
000213DC <AmiBlitz3.ab3@4469>      BEQ.w JL_0_4830
000213E0 <AmiBlitz3.ab3@4470>     CMP.w #$39,D0
000213E4 <AmiBlitz3.ab3@4471>      BEQ.w JL_0_4830
000213E8 <AmiBlitz3.ab3@4472>     CMP.w #$D,D0
000213EC <AmiBlitz3.ab3@4473>      BEQ.w JL_0_4830
000213F0 <AmiBlitz3.ab3@4474>     CMP.w #$12,D0
000213F4 <AmiBlitz3.ab3@4475>      BEQ.w JL_0_4830
000213F8 <AmiBlitz3.ab3@4476>     CMP.w #$13,D0
000213FC <AmiBlitz3.ab3@4477>      BEQ.w JL_0_4830
00021400 <AmiBlitz3.ab3@4478>     CMP.w #$1A,D0
00021404 <AmiBlitz3.ab3@4479>      BEQ.w JL_0_4830
00021408 <AmiBlitz3.ab3@4480>     CMP.w #$2A,D0
0002140C <AmiBlitz3.ab3@4481>      BHI.w JL_0_4834
00021410 <AmiBlitz3.ab3@4482>     CMP.w #$23,D0
00021414 <AmiBlitz3.ab3@4483>      BCS.b JL_0_4834
00021418 <AmiBlitz3.ab3@4486>   BSR.w undodebug
0002141A <AmiBlitz3.ab3@4489>   SUBQ.w #1,D0
0002141C <AmiBlitz3.ab3@4490>   LSL.w #2,D0
00021422 <AmiBlitz3.ab3@4497>   LEA instructionbase,A0
00021426 <AmiBlitz3.ab3@4498>   MOVEA.l $0(A0,D0.W),A0
00021428 <AmiBlitz3.ab3@4499>   MOVE.l A0,-(A7)
0002142C <AmiBlitz3.ab3@4500> BRA.w get1bytemain
0002142E <AmiBlitz3.ab3@4506>   MOVE.w D0,D1
00021432 <AmiBlitz3.ab3@4507>    BSR.w searchinstr
00021438 <AmiBlitz3.ab3@4508>    TST.b newmode
0002143C <AmiBlitz3.ab3@4509>    BNE compile_term
00021442 <AmiBlitz3.ab3@4510>   BTST #$2,$1(A3)                                          ;a3 = pointer to instr ;toke stuff in a3
00021446 <AmiBlitz3.ab3@4511>    BNE.w stamigalib
0002144C <AmiBlitz3.ab3@4512>   BTST #$0,$1(A3)
00021450 <AmiBlitz3.ab3@4513>    BEQ.w needreturn_                                       ;syntax err need return   ;check it's a statement
00021454 <AmiBlitz3.ab3@4514>    BSR.w JL_0_49EA                                         ;does it need a size specifier?
00021458 <AmiBlitz3.ab3@4515>    BSR.w JL_0_66F6
0002145E <AmiBlitz3.ab3@4521>   MOVE.w numreps,-(A7)
00021464 <AmiBlitz3.ab3@4522>   MOVE.w userp,-(A7)
0002146A <AmiBlitz3.ab3@4523>   MOVE.w a2offset,-(A7)
0002146C <AmiBlitz3.ab3@4524>   MOVE.l A2,-(A7)                                          ;recurs.
00021476 <AmiBlitz3.ab3@4525>   MOVE.w convsize,userp
0002147A <AmiBlitz3.ab3@4526>   LEA $6(A3),A1
0002147C <AmiBlitz3.ab3@4530>    MOVE.w (A1),D2
00021480 <AmiBlitz3.ab3@4531>    BMI.w SERR                                              ;statement syntax error
00021484 <AmiBlitz3.ab3@4532>   ANDI.w #$FF,D2
00021486 <AmiBlitz3.ab3@4533>   CMP.w D2,D1
0002148A <AmiBlitz3.ab3@4534>    BEQ.w JL_0_48E0
0002148E <AmiBlitz3.ab3@4535>    BCS.w JL_0_48CC
00021490 <AmiBlitz3.ab3@4536>   MOVE.b (A1),D3
00021494 <AmiBlitz3.ab3@4537>   ANDI.w #$7,D3
00021498 <AmiBlitz3.ab3@4538>    BEQ.w JL_0_48CC
0002149A <AmiBlitz3.ab3@4539>   MOVE.w D2,D4
0002149C <AmiBlitz3.ab3@4540>   SUB.w D3,D4
0002149E <AmiBlitz3.ab3@4541>   MOVEQ.l #$00,D5
000214A0 <AmiBlitz3.ab3@4542>   MOVE.w D1,D5
000214A2 <AmiBlitz3.ab3@4543>   SUB.w D4,D5
000214A4 <AmiBlitz3.ab3@4544>   DIVU D3,D5
000214A6 <AmiBlitz3.ab3@4545>   SWAP D5
000214A8 <AmiBlitz3.ab3@4546>   TST.w D5
000214AC <AmiBlitz3.ab3@4547>    BEQ.w JL_0_48E0
000214AE <AmiBlitz3.ab3@4550>   ADDQ.w #2,A1
000214B0 <AmiBlitz3.ab3@4551>   ADDA.w D2,A1
000214B4 <AmiBlitz3.ab3@4552>    BSR.w aligna1
000214B8 <AmiBlitz3.ab3@4553>    BSR.w skiplibreg
000214BC <AmiBlitz3.ab3@4554>   LEA $C(A1),A1
000214C0 <AmiBlitz3.ab3@4555> BRA.w JL_0_489A
000214C2 <AmiBlitz3.ab3@4558>   MOVE.w (a3),d2
000214C6 <AmiBlitz3.ab3@4559>   BTST #1,d2
000214CA <AmiBlitz3.ab3@4560>   BEQ statement_
000214CE <AmiBlitz3.ab3@4561>   CMP.w #1,d1
000214D2 <AmiBlitz3.ab3@4562>   BEQ statement_
000214D6 <AmiBlitz3.ab3@4565>   CMP.b #$20,(a5)+
000214DA <AmiBlitz3.ab3@4566>   BEQ 'l2
000214E0 <AmiBlitz3.ab3@4567>   CMP.b #"(",-2(a5)
000214E4 <AmiBlitz3.ab3@4568>   BNE 'l1
000214E8 <AmiBlitz3.ab3@4569> BRA parameter_
000214EC <AmiBlitz3.ab3@4572> BRA inbrackets_
000214EE <AmiBlitz3.ab3@4575>   MOVE.b (A1),D2
000214F0 <AmiBlitz3.ab3@4576>   LSL.w #8,D2
000214F2 <AmiBlitz3.ab3@4577>   OR.w D2,D1
000214F4 <AmiBlitz3.ab3@4578>   MOVE.l A1,-(A7)
000214FA <AmiBlitz3.ab3@4579>   CLR.w a2offset
000214FC <AmiBlitz3.ab3@4580>   TST.w D1
00021500 <AmiBlitz3.ab3@4581>    BEQ.w JL_0_4900
00021504 <AmiBlitz3.ab3@4582>   LEA $2(A1),A2
0002150A <AmiBlitz3.ab3@4584>   MOVE.l lasttoken,-(a7)
00021510 <AmiBlitz3.ab3@4585>   CLR.l lasttoken
00021514 <AmiBlitz3.ab3@4586>   BSR.w fetchlibps
0002151A <AmiBlitz3.ab3@4587>   MOVE.l (a7)+,lasttoken
0002151E <AmiBlitz3.ab3@4588> BRA.w JL_0_4904
00021522 <AmiBlitz3.ab3@4591>   BSR.w get1bytemain
00021524 <AmiBlitz3.ab3@4594>   MOVEA.l (A7)+,A1
00021526 <AmiBlitz3.ab3@4595>   MOVEA.l (A7)+,A2
0002152C <AmiBlitz3.ab3@4596>   MOVE.w a2offset,D1
00021530 <AmiBlitz3.ab3@4597>    BEQ.w JL_0_493A
00021536 <AmiBlitz3.ab3@4598>   MOVE.w D1,preplibst+2
0002153C <AmiBlitz3.ab3@4599>   MOVE.l preplibst,D1
00021542 <AmiBlitz3.ab3@4600>    JSR writelong                                           ;write array offset stack correct
0002154C <AmiBlitz3.ab3@4601>   MOVE.w numreps,movenumrep+2
00021550 <AmiBlitz3.ab3@4602>    BEQ.w JL_0_493A
00021556 <AmiBlitz3.ab3@4603>   MOVE.l movenumrep,D1
0002155C <AmiBlitz3.ab3@4604>    JSR writelong
00021562 <AmiBlitz3.ab3@4608>   JSR userjsr
00021568 <AmiBlitz3.ab3@4611>   MOVE.w a2offset,D1
0002156C <AmiBlitz3.ab3@4612>    BEQ.w JL_0_4974
00021570 <AmiBlitz3.ab3@4613>   CMP.w #$8,D1
00021574 <AmiBlitz3.ab3@4614>    BHI.w JL_0_4964
00021578 <AmiBlitz3.ab3@4615>   ANDI.w #$7,D1
0002157A <AmiBlitz3.ab3@4616>   LSL.w #8,D1
0002157C <AmiBlitz3.ab3@4617>   LSL.w #1,D1
00021580 <AmiBlitz3.ab3@4618>   ORI.w #$504F,D1
00021586 <AmiBlitz3.ab3@4620>   JSR writeword
0002158A <AmiBlitz3.ab3@4621> BRA.w JL_0_4974
00021590 <AmiBlitz3.ab3@4624>   MOVE.w D1,fixlibst+2
00021596 <AmiBlitz3.ab3@4625>   MOVE.l fixlibst,D1
0002159C <AmiBlitz3.ab3@4626>   JSR writelong
000215A2 <AmiBlitz3.ab3@4629>   MOVE.w (A7)+,a2offset
000215A8 <AmiBlitz3.ab3@4630>   MOVE.w (A7)+,userp
000215AE <AmiBlitz3.ab3@4631>   MOVE.w (A7)+,numreps
000215B2 <AmiBlitz3.ab3@4632> BRA.w reget
000215B6 <AmiBlitz3.ab3@4636>   MOVEM.l A2-A3,-(A7)
000215BC <AmiBlitz3.ab3@4637>   CLR.b doublepeek
000215C2 <AmiBlitz3.ab3@4638>   MOVE.l A5,lastsourcepos
000215C6 <AmiBlitz3.ab3@4639>    BSR.w getchar
000215CA <AmiBlitz3.ab3@4640>   CMP.w #$2E,D0
000215CE <AmiBlitz3.ab3@4641>    BEQ.w JL_0_49B4
000215D4 <AmiBlitz3.ab3@4642>   MOVEA.l defaulttype,A2
000215D8 <AmiBlitz3.ab3@4643>   CMP.w #$24,D0
000215DC <AmiBlitz3.ab3@4644>    BNE.w JL_0_49CA
000215DE <AmiBlitz3.ab3@4645>   MOVEQ.l #$07,D1
000215E2 <AmiBlitz3.ab3@4646> BRA.w JL_0_49DE
000215E6 <AmiBlitz3.ab3@4649>   BSR.w getparameter2
000215EA <AmiBlitz3.ab3@4650>   BEQ.w syntaxerr
000215F0 <AmiBlitz3.ab3@4651>   LEA newtypebase,A2
000215F4 <AmiBlitz3.ab3@4652>   BSR.w findtype
000215F8 <AmiBlitz3.ab3@4653>   BNE.w notypeerr
00021602 <AmiBlitz3.ab3@4657>   MOVE.w oldqflag,instringon
00021608 <AmiBlitz3.ab3@4658>   MOVEA.l lastsourcepos,A5
0002160C <AmiBlitz3.ab3@4663>   MOVE.w $6(A2),D1
00021612 <AmiBlitz3.ab3@4664>   CMP.w #8,8(a2)
00021616 <AmiBlitz3.ab3@4665>   BNE 'l1
0002161E <AmiBlitz3.ab3@4666>   MOVE.b #1,doublepeek
00021624 <AmiBlitz3.ab3@4670>   MOVE.w D1,convsize
00021628 <AmiBlitz3.ab3@4671>   MOVEM.l (A7)+,A2-A3
0002162A <AmiBlitz3.ab3@4672> RTS
00021630 <AmiBlitz3.ab3@4677>   BTST #$3,$1(A3)
00021634 <AmiBlitz3.ab3@4678>   BEQ.w JL_0_4A06
00021638 <AmiBlitz3.ab3@4679>   BSR.w AJL_0_498A                                         ;read peek/poke size
0002163C <AmiBlitz3.ab3@4681>   ORI.w #$7000,D1
00021642 <AmiBlitz3.ab3@4682>   JSR writeword
00021648 <AmiBlitz3.ab3@4683>   ADDQ.w #1,regnum
0002164A <AmiBlitz3.ab3@4686> RTS
0002164C <AmiBlitz3.ab3@4692>             Dc.b $10,$12                                   ;MOVE.B  (A2),D0
0002164E <AmiBlitz3.ab3@4693>             Dc.b $14,$91                                   ;MOVE.B  (A1),(A2)
00021650 <AmiBlitz3.ab3@4694>             Dc.b $12,$80                                   ;MOVE.B  D0,(A1)
00021652 <AmiBlitz3.ab3@4698> swapw:      Dc.b $30,$12                                   ;MOVE.W  (A2),D0
00021654 <AmiBlitz3.ab3@4699>             Dc.b $34,$91                                   ;MOVE.W  (A1),(A2)
00021656 <AmiBlitz3.ab3@4700>             Dc.b $32,$80                                   ;MOVE.W  D0,(A1)
00021658 <AmiBlitz3.ab3@4704> swapl:      Dc.b $20,$12                                   ;MOVE.L  (A2),D0
0002165A <AmiBlitz3.ab3@4705>             Dc.b $24,$91                                   ;MOVE.L  (A1),(A2)
0002165C <AmiBlitz3.ab3@4706>             Dc.b $22,$80                                   ;MOVE.L  D0,(A1)
0002165E <AmiBlitz3.ab3@4710> pulla1:     Dc.b $22,$5F                                   ;MOVEA.L (A7)+,A1
00021660 <AmiBlitz3.ab3@4713> srctype:    Ds.w 1
00021664 <AmiBlitz3.ab3@4718>   BSR.w excget
00021668 <AmiBlitz3.ab3@4719>   CMP.w #$2C,D0
0002166C <AmiBlitz3.ab3@4720>    BNE.w syntaxerr
00021672 <AmiBlitz3.ab3@4721>   MOVE.b D2,srctype
00021678 <AmiBlitz3.ab3@4722>   MOVE.w pusha2,D1
0002167E <AmiBlitz3.ab3@4723>   JSR writeword
00021682 <AmiBlitz3.ab3@4724>   BSR.w get1bytemain
00021686 <AmiBlitz3.ab3@4725>   BSR.w excget
0002168C <AmiBlitz3.ab3@4726>   CMP.b srctype,D2
00021690 <AmiBlitz3.ab3@4727>    BNE.w excerr2
00021696 <AmiBlitz3.ab3@4728>   MOVE.w pulla1,D1
0002169C <AmiBlitz3.ab3@4729>    JSR writeword
000216A0 <AmiBlitz3.ab3@4730>   CMP.b #$2,D2
000216A4 <AmiBlitz3.ab3@4731>    BCS.w JL_0_4B2A
000216A8 <AmiBlitz3.ab3@4732>    BEQ.w JL_0_4B1E
000216AC <AmiBlitz3.ab3@4733>   LEA swapl(PC),A0
000216B0 <AmiBlitz3.ab3@4734>   LEA swaplf(PC),A1
000216B6 <AmiBlitz3.ab3@4735> JMP pokecode
000216BA <AmiBlitz3.ab3@4738>   LEA swapw(PC),A0
000216BE <AmiBlitz3.ab3@4739>   LEA swapwf(PC),A1
000216C4 <AmiBlitz3.ab3@4740> JMP pokecode
000216C8 <AmiBlitz3.ab3@4743>   LEA swapb(PC),A0
000216CC <AmiBlitz3.ab3@4744>   LEA swapbf(PC),A1
000216D2 <AmiBlitz3.ab3@4745> JMP pokecode
000216D8 <AmiBlitz3.ab3@4749>   JSR getparameter
000216DC <AmiBlitz3.ab3@4750>   BSR.w JL_0_8E3C
000216E0 <AmiBlitz3.ab3@4751>   BSR.w calcvar
000216E4 <AmiBlitz3.ab3@4752>   BTST #$E,D2
000216E8 <AmiBlitz3.ab3@4753>    BEQ.w JL_0_4B4E
000216EC <AmiBlitz3.ab3@4754>   MOVE.b #$4,D2
000216EE <AmiBlitz3.ab3@4757>   TST.b D2
000216F2 <AmiBlitz3.ab3@4758>    BEQ.w excerr
000216F6 <AmiBlitz3.ab3@4759>   BTST #$F,D2
000216FA <AmiBlitz3.ab3@4760>    BNE.w JL_0_4B6A
00021700 <AmiBlitz3.ab3@4761>   MOVE.w leaamp,D1
00021706 <AmiBlitz3.ab3@4762>    JSR pokewda5s
00021708 <AmiBlitz3.ab3@4763>   MOVE.w D3,D1
0002170E <AmiBlitz3.ab3@4764> JMP writeword
00021710 <AmiBlitz3.ab3@4767> RTS
00021716 <AmiBlitz3.ab3@4777>   MOVE.l mempool,a0
0002171C <AmiBlitz3.ab3@4778>   MOVEA.l _execbase,A6
00021720 <AmiBlitz3.ab3@4779> JMP _AllocPooled(a6)
00021724 <AmiBlitz3.ab3@4783>   MOVE.w #$BF00,D1
0002172A <AmiBlitz3.ab3@4784> JMP Atokejsr
0002172E <AmiBlitz3.ab3@4788>   CMP.w #-$7FFA,D0
00021732 <AmiBlitz3.ab3@4789>    BEQ.w popreturn
00021736 <AmiBlitz3.ab3@4790>   CMP.w #-$7FEA,D0
0002173A <AmiBlitz3.ab3@4791>    BEQ.w popnext2
0002173E <AmiBlitz3.ab3@4792>   CMP.w #-$7FF2,D0
00021742 <AmiBlitz3.ab3@4793>    BEQ.w popselect2
00021746 <AmiBlitz3.ab3@4794>   CMP.w #-$7FF5,D0
0002174A <AmiBlitz3.ab3@4795>    BEQ.w get1bytemain
0002174E <AmiBlitz3.ab3@4796>   CMP.w #-$7FF4,D0
00021752 <AmiBlitz3.ab3@4797>    BEQ.w get1bytemain
00021756 <AmiBlitz3.ab3@4798>   CMP.w #-$7FEC,D0
0002175A <AmiBlitz3.ab3@4799>    BEQ.w get1bytemain
0002175E <AmiBlitz3.ab3@4800>   CMP.w #-$7F45,D0
00021762 <AmiBlitz3.ab3@4801>    BEQ.w get1bytemain
00021766 <AmiBlitz3.ab3@4802> BRA.w syntaxerr
0002176C <AmiBlitz3.ab3@4805>   TST.b debugmode
00021770 <AmiBlitz3.ab3@4806>    BEQ.w popreturn__norerr
00021774 <AmiBlitz3.ab3@4807>   LEA popreturn__rfix(PC),A0
00021778 <AmiBlitz3.ab3@4808>   LEA popreturn__rfixf(PC),A1
0002177E <AmiBlitz3.ab3@4809>    JSR pokecode
00021782 <AmiBlitz3.ab3@4810>   MOVE.w #$C305,D1
00021788 <AmiBlitz3.ab3@4811>    JSR Atokejsr
0002178C <AmiBlitz3.ab3@4812>   MOVE.w popreturn__rfix2(PC),D1
00021792 <AmiBlitz3.ab3@4814>    JSR writeword
00021796 <AmiBlitz3.ab3@4815> BRA.w get1bytemain
0002179C <AmiBlitz3.ab3@4819>   CMPI.w #$6753,$4(A7)                                     ;#"gS",4(A7)
000217A0 <AmiBlitz3.ab3@4820>   BEQ.w popreturn__rfix2
000217A6 <AmiBlitz3.ab3@4823>   JSR $20000                                               ;reass
000217A8 <AmiBlitz3.ab3@4826>   ADDQ.w #6,A7
000217AC <AmiBlitz3.ab3@4830>   MOVE.w popreturn__sfix(PC),D1
000217B2 <AmiBlitz3.ab3@4831>   JSR writeword
000217B6 <AmiBlitz3.ab3@4832> BRA.w get1bytemain
000217B8 <AmiBlitz3.ab3@4837>   Dc.b $58,$4F                                             ;ADDQ.W  #4,A7
000217BE <AmiBlitz3.ab3@4842>   MOVE.l firstfor,D0
000217C2 <AmiBlitz3.ab3@4843>    BEQ.w noforerr
000217C4 <AmiBlitz3.ab3@4844>   MOVEA.l D0,A2
000217C8 <AmiBlitz3.ab3@4845>    BSR.w get1bytemain
000217CC <AmiBlitz3.ab3@4846>   BSR.w popnext
000217D2 <AmiBlitz3.ab3@4849>   TST.b debugmode
000217D6 <AmiBlitz3.ab3@4850>    BEQ.w popnext3__ner
000217DC <AmiBlitz3.ab3@4851>   MOVE.l nextfixw2,D1
000217E2 <AmiBlitz3.ab3@4852>   CMPI.w #$3,$C(A2)
000217E6 <AmiBlitz3.ab3@4853>    BCS.w writelong2
000217EC <AmiBlitz3.ab3@4854>   MOVE.l nextfixl2,D1
000217F2 <AmiBlitz3.ab3@4855> writelong2 JMP  writelong
000217F8 <AmiBlitz3.ab3@4858>   CMPI.w #$3,$C(A2)
000217FC <AmiBlitz3.ab3@4859>    BCS.w popnext3__skip2
00021802 <AmiBlitz3.ab3@4860>   MOVE.l nextfixl,D1
00021808 <AmiBlitz3.ab3@4861>   JMP writelong
0002180E <AmiBlitz3.ab3@4864>   MOVE.w nextfixw,D1
00021814 <AmiBlitz3.ab3@4865> JMP writeword
00021818 <AmiBlitz3.ab3@4869>   MOVE.w $C(A2),D0
0002181E <AmiBlitz3.ab3@4870>   TST.b debugmode
00021822 <AmiBlitz3.ab3@4871>    BEQ.w popnext__norunerr
00021826 <AmiBlitz3.ab3@4872>   MOVE.w #$C306,D1
0002182A <AmiBlitz3.ab3@4873>   CMP.w #$3,D0
0002182E <AmiBlitz3.ab3@4874>    BCS.w popnext__oktc
00021830 <AmiBlitz3.ab3@4875>   ADDQ.w #1,D1
00021832 <AmiBlitz3.ab3@4878>   MOVE.l A2,-(A7)
00021838 <AmiBlitz3.ab3@4879>   JSR Atokejsr
0002183A <AmiBlitz3.ab3@4880>   MOVEA.l (A7)+,A2
0002183C <AmiBlitz3.ab3@4883> RTS
00021842 <AmiBlitz3.ab3@4887>   MOVE.l firstsel,D0
00021846 <AmiBlitz3.ab3@4888>    BEQ.w eselerr
00021848 <AmiBlitz3.ab3@4889>   MOVEA.l D0,A2
0002184C <AmiBlitz3.ab3@4890>    BSR.w get1bytemain
00021850 <AmiBlitz3.ab3@4893>   MOVE.w $C(A2),D2
00021856 <AmiBlitz3.ab3@4894>   TST.b debugmode
0002185A <AmiBlitz3.ab3@4895>    BEQ.w popselect__norerr
0002185E <AmiBlitz3.ab3@4896>   MOVE.w #$C313,D1
00021862 <AmiBlitz3.ab3@4897>   CMP.w #$3,D2
00021866 <AmiBlitz3.ab3@4898>    BCS.w popselect__chkit
00021868 <AmiBlitz3.ab3@4899>   ADDQ.w #1,D1
0002186E <AmiBlitz3.ab3@4902>   JSR Atokejsr                                             ;make sure next thing on stack
00021870 <AmiBlitz3.ab3@4906>   MOVEQ.l #$02,D1
00021874 <AmiBlitz3.ab3@4907>   CMP.w #$3,D2
00021878 <AmiBlitz3.ab3@4908>    BCS.w popselect__doit
0002187A <AmiBlitz3.ab3@4909>   MOVEQ.l #$04,D1
0002187E <AmiBlitz3.ab3@4910>   CMP.w #$7,D2
00021882 <AmiBlitz3.ab3@4911>    BCS.w popselect__doit
00021888 <AmiBlitz3.ab3@4912>   LEA endselstr,A0
0002188E <AmiBlitz3.ab3@4913>   LEA endselstrf,A1
00021894 <AmiBlitz3.ab3@4914>   TST.b debugmode
00021898 <AmiBlitz3.ab3@4915>    BEQ.w popselect__norerr3
0002189E <AmiBlitz3.ab3@4916>   LEA endselstrf2,A1
000218A4 <AmiBlitz3.ab3@4919>   JSR pokecode
000218A8 <AmiBlitz3.ab3@4920>   MOVE.w #$C003,D1                                         ;global freemem
000218AE <AmiBlitz3.ab3@4921> JMP Atokejsr
000218B4 <AmiBlitz3.ab3@4924>   TST.b debugmode
000218B8 <AmiBlitz3.ab3@4925>    BEQ.w popselect__norerr2
000218BA <AmiBlitz3.ab3@4926>   ADDQ.w #2,D1                                             ;for the "sE"
000218BC <AmiBlitz3.ab3@4929>   LSL.w #8,D1
000218BE <AmiBlitz3.ab3@4930>   LSL.w #1,D1
000218C4 <AmiBlitz3.ab3@4931>   OR.w endsel,D1
000218CA <AmiBlitz3.ab3@4932> JMP writeword
000218CE <AmiBlitz3.ab3@4935> firstrep:    Ds.l 1
000218D2 <AmiBlitz3.ab3@4936> replineat:   Ds.l 1
000218D8 <AmiBlitz3.ab3@4945>   CLR.l fp0addr
000218E2 <AmiBlitz3.ab3@4946>   MOVE.l linenumat,replineat
000218E4 <AmiBlitz3.ab3@4947>   MOVEQ.l #$08,D0
000218EA <AmiBlitz3.ab3@4948>   MOVEA.l _execbase,A6
000218F0 <AmiBlitz3.ab3@4949>   MOVE.l mempool,a0
000218F4 <AmiBlitz3.ab3@4950>   JSR _AllocPooled(a6)
000218F6 <AmiBlitz3.ab3@4952>   MOVEA.l D0,A0
000218FA <AmiBlitz3.ab3@4953>   MOVE.l firstrep(PC),(A0)
00021900 <AmiBlitz3.ab3@4954>   MOVE.l A0,firstrep
00021908 <AmiBlitz3.ab3@4955>   MOVE.l destpointer,$4(A0)
0002190A <AmiBlitz3.ab3@4956> RTS
00021910 <AmiBlitz3.ab3@4959> str_temp:  Ds.w 3                                            ;infochk  ds.b 6 org source
00021914 <AmiBlitz3.ab3@4962>   LEA str_temp(PC),A1
00021916 <AmiBlitz3.ab3@4963>   CLR.w (A1)
0002191A <AmiBlitz3.ab3@4964>   CLR.l $2(A1)
0002191C <AmiBlitz3.ab3@4967>   MOVEQ.l #$04,D0
00021920 <AmiBlitz3.ab3@4970>     MOVE.b $1(A1),(A1)+
00021924 <AmiBlitz3.ab3@4971>   DBF D0,check_for_infoextention__loop
00021928 <AmiBlitz3.ab3@4976>   LEA str_temp(PC),A1
0002192A <AmiBlitz3.ab3@4977>   MOVE.b (A0),D0
0002192E <AmiBlitz3.ab3@4978>   ORI.b #$20,D0
00021932 <AmiBlitz3.ab3@4979>   MOVE.b D0,$5(A1)
00021934 <AmiBlitz3.ab3@4980>   TST.b (A0)+
00021938 <AmiBlitz3.ab3@4981>    BNE.w check_for_infoextention__loop2
0002193C <AmiBlitz3.ab3@4982>   CMPI.w #$2E69,(A1)+                                      ;".i"
00021940 <AmiBlitz3.ab3@4983>    BNE.w check_for_infoextention__no
00021946 <AmiBlitz3.ab3@4984>   CMPI.l #$6E666F20,(A1)                                   ;"nfo "
00021948 <AmiBlitz3.ab3@4987> RTS
0002194C <AmiBlitz3.ab3@4991>   BPL.w gettokeps__evaltoke
0002194E <AmiBlitz3.ab3@4992>   MOVE.w D0,D1
00021952 <AmiBlitz3.ab3@4993>   ANDI.w #$7F80,D1
00021956 <AmiBlitz3.ab3@4994>    BEQ.w tokeerr
0002195A <AmiBlitz3.ab3@4995>   BCLR #$F,D0
0002195C <AmiBlitz3.ab3@4996>   MOVE.w D0,D4                                             ;got toke number
00021960 <AmiBlitz3.ab3@4997>   BSR.w get1bytemain
00021964 <AmiBlitz3.ab3@4998> BRA.w gettokeps__gotnum
0002196A <AmiBlitz3.ab3@5001>   JSR JL_0_BF6A
00021970 <AmiBlitz3.ab3@5002>   CMP.l #MaxWord,D3
00021974 <AmiBlitz3.ab3@5003>    BHI.w tokeerr
00021976 <AmiBlitz3.ab3@5004>   TST.w D6
0002197A <AmiBlitz3.ab3@5005>    BNE.w tokeerr
0002197C <AmiBlitz3.ab3@5006>   MOVE.w D3,D4
0002197E <AmiBlitz3.ab3@5009>   MOVEQ.l #$00,D5
00021982 <AmiBlitz3.ab3@5010>   CMP.w #$2C,D0
00021986 <AmiBlitz3.ab3@5011>    BNE.w gettokeps__gotfrom
00021988 <AmiBlitz3.ab3@5012>   MOVE.w D4,-(A7)
0002198E <AmiBlitz3.ab3@5013>    JSR AJL_0_BF6E
00021994 <AmiBlitz3.ab3@5014>   CMP.l #MaxWord,D3
00021998 <AmiBlitz3.ab3@5015>    BHI.w tokeerr
0002199A <AmiBlitz3.ab3@5016>   TST.w D6
0002199E <AmiBlitz3.ab3@5017>    BNE.w tokeerr
000219A0 <AmiBlitz3.ab3@5018>   MOVE.w D3,D5
000219A2 <AmiBlitz3.ab3@5019>   MOVE.w (A7)+,D4
000219A4 <AmiBlitz3.ab3@5022> RTS                                                        ;d4=toke, d5=form
000219A6 <AmiBlitz3.ab3@5026>   TST.w D0
000219AA <AmiBlitz3.ab3@5027>    BSR.w gettokeps
000219AE <AmiBlitz3.ab3@5028>   MOVE.w #$4EB9,D1
000219B4 <AmiBlitz3.ab3@5029>   JSR writeword
000219B8 <AmiBlitz3.ab3@5030>   BSR.w addoff
000219BA <AmiBlitz3.ab3@5031>   MOVE.w D5,D1
000219BE <AmiBlitz3.ab3@5032>   ORI.w #$8000,D1                                          ;Toke of Amiga type.
000219C0 <AmiBlitz3.ab3@5033>   SWAP D1
000219C2 <AmiBlitz3.ab3@5034>   MOVE.w D4,D1
000219C8 <AmiBlitz3.ab3@5035> JMP writelong
000219CA <AmiBlitz3.ab3@5039>   TST.w D0
000219CE <AmiBlitz3.ab3@5040>    BSR.w gettokeps
000219D2 <AmiBlitz3.ab3@5041>   MOVE.w #$4EB9,D1
000219D8 <AmiBlitz3.ab3@5042>   JSR writeword
000219DC <AmiBlitz3.ab3@5043>   BSR.w addoff
000219DE <AmiBlitz3.ab3@5044>   MOVE.w D5,D1
000219E2 <AmiBlitz3.ab3@5045>   ORI.w #$C000,D1                                          ;Toke of Blitz type.
000219E4 <AmiBlitz3.ab3@5046>   SWAP D1
000219E6 <AmiBlitz3.ab3@5047>   MOVE.w D4,D1
000219EC <AmiBlitz3.ab3@5048>   JMP writelong
000219F2 <AmiBlitz3.ab3@5052>   JSR JL_0_BF6A
000219F8 <AmiBlitz3.ab3@5053>   CMP.l #$10000,D3
000219FC <AmiBlitz3.ab3@5054>    BCC.w tokeerr
000219FE <AmiBlitz3.ab3@5055>   MOVE.w D3,D1
00021A04 <AmiBlitz3.ab3@5056> JMP Atokejsr
00021A08 <AmiBlitz3.ab3@5060>   BSR.w gettokeps
00021A0C <AmiBlitz3.ab3@5061>   MOVE.w #$4EB9,D1
00021A12 <AmiBlitz3.ab3@5062>   JSR writeword
00021A18 <AmiBlitz3.ab3@5063>   MOVE.l destpointer,D3
00021A20 <AmiBlitz3.ab3@5064>   BTST #$7,blitzmode
00021A24 <AmiBlitz3.ab3@5065>    BEQ.w do_TokeJsr__inamiga
00021A28 <AmiBlitz3.ab3@5066>   BSET #$E,D5
00021A2C <AmiBlitz3.ab3@5069>   BSR.w JL_0_6E86
00021A30 <AmiBlitz3.ab3@5070>   BSR.w addoff
00021A36 <AmiBlitz3.ab3@5071>   JMP writelong
00021A3A <AmiBlitz3.ab3@5075>   BEQ.w do_VWait__zero
00021A3C <AmiBlitz3.ab3@5076>   MOVEQ.l #$02,D2                                          ;get a word
00021A42 <AmiBlitz3.ab3@5078>   JSR bakeval
00021A46 <AmiBlitz3.ab3@5079>   MOVE.w fvwait(PC),D1
00021A4A <AmiBlitz3.ab3@5080> BRA.w do_VWait__vcont
00021A4E <AmiBlitz3.ab3@5083>   MOVE.w #$7000,D1                                         ;moveq #0,d0
00021A54 <AmiBlitz3.ab3@5086>   JSR writeword
00021A58 <AmiBlitz3.ab3@5087>   MOVE.w #$C104,D1
00021A5E <AmiBlitz3.ab3@5088> JMP Atokejsr
00021A60 <AmiBlitz3.ab3@5092>   SUBQ.w #1,D0
00021A66 <AmiBlitz3.ab3@5095>   Dc.w $3b7c,$ffff,0                                       ;move.w #$FFFF,$0(A5) ;noopt
00021A6A <AmiBlitz3.ab3@5098>   Dc.l $426d0001                                           ;clr.w $0(A5)
00021A6E <AmiBlitz3.ab3@5102>   MOVE.b debugmode(PC),D1
00021A72 <AmiBlitz3.ab3@5103>   BEQ.b debugmode_codelabel__skip
00021A76 <AmiBlitz3.ab3@5104>   MOVE.w #$D500,D1
00021A7C <AmiBlitz3.ab3@5105> JMP Atokejsr
00021A7E <AmiBlitz3.ab3@5108> RTS
00021A86 <AmiBlitz3.ab3@5112>   BSET #$0,blitzmode
00021A8E <AmiBlitz3.ab3@5113>   BSET #$7,blitzmode
00021A92 <AmiBlitz3.ab3@5114>   MOVE.w #$C200,D1
00021A98 <AmiBlitz3.ab3@5115>   JSR Atokejsr
00021A9E <AmiBlitz3.ab3@5116>   TST.b debugmode
00021AA2 <AmiBlitz3.ab3@5117>    BEQ.w do_BLITZ__done
00021AA6 <AmiBlitz3.ab3@5118>   MOVE.w cgoblitz(PC),D1
00021AAC <AmiBlitz3.ab3@5119>   JSR writeword
00021AAE <AmiBlitz3.ab3@5120>   MOVEQ.l #-$01,D1
00021AB4 <AmiBlitz3.ab3@5121>   JSR writeword
00021ABA <AmiBlitz3.ab3@5122>   JSR getbbase
00021AC0 <AmiBlitz3.ab3@5123>   JSR writeword
00021AC4 <AmiBlitz3.ab3@5126> BRA.w debugmode_codelabel
00021AC8 <AmiBlitz3.ab3@5130>   MOVE.w #$C201,D1
00021ACC <AmiBlitz3.ab3@5131> BRA.w do_AMIGA__toamode
00021AD0 <AmiBlitz3.ab3@5135>   MOVE.W  #$C202,D1
00021AD8 <AmiBlitz3.ab3@5138>   BSET #$0,blitzmode
00021AE0 <AmiBlitz3.ab3@5139>   BCLR #$7,blitzmode
00021AE6 <AmiBlitz3.ab3@5140>   JSR Atokejsr
00021AEC <AmiBlitz3.ab3@5141>   TST.b debugmode
00021AF0 <AmiBlitz3.ab3@5142>    BEQ.w do_AMIGA__done
00021AF4 <AmiBlitz3.ab3@5143>   MOVE.w cgoamiga(PC),D1
00021AFA <AmiBlitz3.ab3@5144>   JSR writeword
00021B00 <AmiBlitz3.ab3@5145>   JSR getbbase
00021B06 <AmiBlitz3.ab3@5146>   JSR writeword
00021B0A <AmiBlitz3.ab3@5149> BRA.w debugmode_codelabel
00021B0E <AmiBlitz3.ab3@5153>   MOVEM.l D2-D7/A2-A4,-(A7)
00021B12 <AmiBlitz3.ab3@5156>   MOVEM.l (A7)+,D2-D7/A2-A4
00021B18 <AmiBlitz3.ab3@5160>   JSR JL_0_BF6A
00021B1E <AmiBlitz3.ab3@5161>   CMP.l #$E,D3
00021B22 <AmiBlitz3.ab3@5162>    BCC.w interr4
00021B26 <AmiBlitz3.ab3@5163>   MOVE.w #$7000,D1
00021B28 <AmiBlitz3.ab3@5164>   OR.w D3,D1
00021B2E <AmiBlitz3.ab3@5165>   JSR writeword
00021B32 <AmiBlitz3.ab3@5166>   MOVE.w #$C101,D1
00021B38 <AmiBlitz3.ab3@5167> JMP Atokejsr                                               ;clear the interupt
00021B3A <AmiBlitz3.ab3@5170> inerr:       Ds.w 1                                        ;flag - in error trap mode
00021B3E <AmiBlitz3.ab3@5171> errjmp:      Ds.l 1                                        ;where err jump is
00021B42 <AmiBlitz3.ab3@5172> errcode:     Ds.l 1
00021B46 <AmiBlitz3.ab3@5176>   MOVE.W  #$D202,D1
00021B4C <AmiBlitz3.ab3@5177> JMP Atokejsr                                               ;BRA.W Atokejsr
00021B50 <AmiBlitz3.ab3@5181>   MOVE.w inerr(PC),D1
00021B54 <AmiBlitz3.ab3@5182>    BEQ.w errerr3
00021B5A <AmiBlitz3.ab3@5183>   CLR.w inerr
00021B60 <AmiBlitz3.ab3@5184>   MOVE.w dontwrite,D1
00021B64 <AmiBlitz3.ab3@5185>    BNE.w doendseterr__skip
00021B68 <AmiBlitz3.ab3@5186>   MOVEA.l errjmp(PC),A0
00021B6E <AmiBlitz3.ab3@5187>   MOVE.l destpointer,(A0)
00021B72 <AmiBlitz3.ab3@5190> BRA.w get1bytemain
00021B76 <AmiBlitz3.ab3@5194>   MOVE.w #$D205,D1
00021B7C <AmiBlitz3.ab3@5195> JMP Atokejsr
00021B82 <AmiBlitz3.ab3@5199>   MOVE.w proceduremode,D1
00021B86 <AmiBlitz3.ab3@5200>    BNE.w errerr1
00021B8A <AmiBlitz3.ab3@5201>   MOVE.w inerr(PC),D1
00021B8E <AmiBlitz3.ab3@5202>    BNE.w errerr2
00021B94 <AmiBlitz3.ab3@5203>   LEA inerr,a0
00021B96 <AmiBlitz3.ab3@5204>   NOT.w (a0)                                               ;reass
00021B9A <AmiBlitz3.ab3@5205>   MOVE.w #$203C,D1                                         ;move.l #x,d0
00021BA0 <AmiBlitz3.ab3@5206>   JSR writeword
00021BAA <AmiBlitz3.ab3@5207>   MOVE.l destpointer,errcode
00021BAE <AmiBlitz3.ab3@5208>   BSR.w addoff
00021BB2 <AmiBlitz3.ab3@5209>   BSR.w writelong
00021BB6 <AmiBlitz3.ab3@5210>   MOVE.w #$D201,D1
00021BBC <AmiBlitz3.ab3@5211>   JSR Atokejsr
00021BC0 <AmiBlitz3.ab3@5212>   MOVE.w #$4EF9,D1                                         ;JMP
00021BC4 <AmiBlitz3.ab3@5213>   BSR.w writeword
00021BCE <AmiBlitz3.ab3@5214>   MOVE.l destpointer,errjmp
00021BD2 <AmiBlitz3.ab3@5215>   BSR.w addoff
00021BD6 <AmiBlitz3.ab3@5216>   BSR.w writelong
00021BDC <AmiBlitz3.ab3@5217>   MOVE.w dontwrite,D1
00021BE0 <AmiBlitz3.ab3@5218>    BNE.w do_SetErr__skip
00021BE4 <AmiBlitz3.ab3@5219>   MOVEA.l errcode(PC),A0
00021BEA <AmiBlitz3.ab3@5220>   MOVE.l destpointer,(A0)
00021BEC <AmiBlitz3.ab3@5223> RTS
00021BF0 <AmiBlitz3.ab3@5226> intlineat:  Ds.l 1
00021BF2 <AmiBlitz3.ab3@5230>   MOVEQ.l #-$01,D1                                        ;type - need new string space
00021BF6 <AmiBlitz3.ab3@5231>   BSR.w errchx
00021BFC <AmiBlitz3.ab3@5232>   MOVE.w D1,intstring
00021C06 <AmiBlitz3.ab3@5233>   MOVE.l linenumat,intlineat
00021C0C <AmiBlitz3.ab3@5234>   JSR JL_0_BF6A                                           ;get constant - int level
00021C12 <AmiBlitz3.ab3@5235>   CMP.l #$E,D3
00021C16 <AmiBlitz3.ab3@5236>    BCC.w interr4
00021C1C <AmiBlitz3.ab3@5237>   ST intsused
00021C22 <AmiBlitz3.ab3@5238>   MOVE.w D3,intlevel
00021C26 <AmiBlitz3.ab3@5239>   MOVE.w #$7000,D1
00021C28 <AmiBlitz3.ab3@5240>   OR.w D3,D1                                              
00021C2C <AmiBlitz3.ab3@5241>   BSR.w writeword                                         ;moveq #x,d0
00021C30 <AmiBlitz3.ab3@5242>   MOVE.w #$223C,D1                                        ;move.l #x,d1
00021C34 <AmiBlitz3.ab3@5243>   BSR.w writeword
00021C38 <AmiBlitz3.ab3@5244>   BSR.w addoff
00021C3E <AmiBlitz3.ab3@5245>   MOVE.l destpointer,-(A7)
00021C42 <AmiBlitz3.ab3@5246>   BSR.w writelong
00021C46 <AmiBlitz3.ab3@5247>   MOVE.w #$C100,D1
00021C4C <AmiBlitz3.ab3@5248>   JSR Atokejsr
00021C50 <AmiBlitz3.ab3@5249>   MOVE.w #$4EF9,D1                                        ;jmp
00021C54 <AmiBlitz3.ab3@5250>   BSR.w writeword
00021C58 <AmiBlitz3.ab3@5251>   BSR.w addoff
00021C62 <AmiBlitz3.ab3@5252>   MOVE.l destpointer,intjmpat
00021C66 <AmiBlitz3.ab3@5253>   BSR.w writelong
00021C68 <AmiBlitz3.ab3@5254>   MOVEA.l (A7)+,A0
00021C6E <AmiBlitz3.ab3@5255>   MOVE.w dontwrite,D1
00021C72 <AmiBlitz3.ab3@5256>   BNE.w do_SetInt__dontpoke
00021C78 <AmiBlitz3.ab3@5257>   MOVE.l destpointer,(A0)
00021C7C <AmiBlitz3.ab3@5260>   MOVE.l intstart0(PC),D1
00021C80 <AmiBlitz3.ab3@5261>   BSR.w writelong
00021C86 <AmiBlitz3.ab3@5262>   TST.b debugmode
00021C8A <AmiBlitz3.ab3@5263>    BEQ.w do_SetInt__norerr
00021C8C <AmiBlitz3.ab3@5267>   MOVEQ.l #$02,D1
00021C90 <AmiBlitz3.ab3@5268>   BSR.w writetrap
00021C94 <AmiBlitz3.ab3@5269>   BSR.w addoff
00021C9E <AmiBlitz3.ab3@5270>   MOVE.l destpointer,intcleanat
00021CA2 <AmiBlitz3.ab3@5271>   BSR.w writelong
00021CA8 <AmiBlitz3.ab3@5272>   MOVE.w intlevel,D1
00021CAC <AmiBlitz3.ab3@5273>   BSR.w writeword
00021CB0 <AmiBlitz3.ab3@5274>   MOVE.w #$C30B,D1                                         ;disable stack checks
00021CB6 <AmiBlitz3.ab3@5275>   JSR Atokejsr
00021CBA <AmiBlitz3.ab3@5278>   MOVE.w #$FED3,D1
00021CBE <AmiBlitz3.ab3@5279>   BSR.w uselib
00021CC2 <AmiBlitz3.ab3@5280>   MOVE.w #$C102,D1
00021CC8 <AmiBlitz3.ab3@5281>   JSR Atokejsr
00021CD0 <AmiBlitz3.ab3@5282>   MOVE.w #-1,lasta6
00021CDA <AmiBlitz3.ab3@5283>   MOVE.l linenumat,intline
00021CDC <AmiBlitz3.ab3@5284> RTS
00021CDE <AmiBlitz3.ab3@5288>             Ds.w 1                                         ;??looks like obsolved data??
00021CE2 <AmiBlitz3.ab3@5290> intdata1:   Ds.l 1                                         ;where in data1 a5 is being kept
00021CE6 <AmiBlitz3.ab3@5292> intjmpat:   Ds.l 1
00021CEA <AmiBlitz3.ab3@5293> intline:    Ds.l 1
00021CEC <AmiBlitz3.ab3@5294> intstring:  Ds.w 1                                         ;flag 0 = no setint
00021CEE <AmiBlitz3.ab3@5297> intlevel:   Ds.w 1
00021CF2 <AmiBlitz3.ab3@5298> intcleanat: Ds.l 1
00021CF6 <AmiBlitz3.ab3@5299> ret15add:   Ds.l 1
00021CF8 <AmiBlitz3.ab3@5300> ret15cc:    Ds.w 1
00021D00 <AmiBlitz3.ab3@5304>   ADDI.l #$12,$2(A7)
00021D08 <AmiBlitz3.ab3@5305>   MOVE.l $2(A7),ret15add
00021D0E <AmiBlitz3.ab3@5306>   MOVE.w (A7),ret15cc
00021D16 <AmiBlitz3.ab3@5307>   MOVE.l #directdo,$2(A7)
00021D18 <AmiBlitz3.ab3@5308> RTE
00021D1C <AmiBlitz3.ab3@5317>   MOVE.l ret15add(PC),-(A7)
00021D20 <AmiBlitz3.ab3@5318>   MOVE.w ret15cc(PC),-(A7)                                 ;15*4
00021D24 <AmiBlitz3.ab3@5319>   MOVEM.l D0-D7/A0-A6,-(A7)
00021D2E <AmiBlitz3.ab3@5320>   MOVE.l destbufferend,trap15temp                          ;store high buff addr
00021D38 <AmiBlitz3.ab3@5321>   MOVE.l destbufferstart,trap15temp2
00021D42 <AmiBlitz3.ab3@5322>   MOVE.l libend,templibend
00021D4C <AmiBlitz3.ab3@5323>   MOVE.l data1start,tempdata1start
00021D52 <AmiBlitz3.ab3@5324>   CLR.l hunkoffsetcounter
00021D58 <AmiBlitz3.ab3@5326>   MOVE.l directbuffer,a0
00021D5E <AmiBlitz3.ab3@5330>   MOVE.l a0,destbufferstart
00021D64 <AmiBlitz3.ab3@5331>   ADD.l #3900,a0
00021D6A <AmiBlitz3.ab3@5332>   MOVE.l a0,destbufferend
00021D70 <AmiBlitz3.ab3@5333>   TST.b exdebug
00021D74 <AmiBlitz3.ab3@5334>   BEQ 'l1
00021D7A <AmiBlitz3.ab3@5335>   MOVE.l a0,libend
00021D80 <AmiBlitz3.ab3@5336>   ADD.l #4000,a0
00021D86 <AmiBlitz3.ab3@5337>   MOVE.l a0,data1start
00021D90 <AmiBlitz3.ab3@5340>   MOVE.l #dircont,errcont
00021D96 <AmiBlitz3.ab3@5341>   MOVE.l A7,errstack
00021D9E <AmiBlitz3.ab3@5342>   MOVE.w #$FFFF,dirmode
00021DA2 <AmiBlitz3.ab3@5344>     MOVEA.l ret15add(PC),A1
00021DA8 <AmiBlitz3.ab3@5345>     MOVE.w -(A1),blitzmode
00021DAA <AmiBlitz3.ab3@5346>     CLR.l -(A1)
00021DB0 <AmiBlitz3.ab3@5347>     MOVE.l -(A1),firstglob
00021DB6 <AmiBlitz3.ab3@5348>     MOVE.l -(A1),firstlocal
00021DBC <AmiBlitz3.ab3@5350>   CLR.w proceduremode
00021DC2 <AmiBlitz3.ab3@5351>   MOVE.l firstglob,D0
00021DC8 <AmiBlitz3.ab3@5352>   OR.l firstlocal,D0
00021DCC <AmiBlitz3.ab3@5353>   BEQ.b directdo__skip
00021DD2 <AmiBlitz3.ab3@5354>   NOT.w proceduremode
00021DD4 <AmiBlitz3.ab3@5357>   MOVEA.l -(A1),A0                                         ;address of string
00021DD6 <AmiBlitz3.ab3@5361>   MOVE.l A0,-(A7)
00021E14 <AmiBlitz3.ab3@5364>   !ComData_GetL{comFunc_DebugTrap,A1}
00021E16 <AmiBlitz3.ab3@5366>   JSR (A1)                                                 ;tokenise line.....
00021E18 <AmiBlitz3.ab3@5368>   MOVEA.l (A7)+,A5
00021E22 <AmiBlitz3.ab3@5369>   MOVE.l directbuffer,destpointer
00021E28 <AmiBlitz3.ab3@5370>   TST.b exdebug
00021E2C <AmiBlitz3.ab3@5371>   BEQ 'noexdebug
00021E2E <AmiBlitz3.ab3@5372>   MOVE.l a5,a0
00021E34 <AmiBlitz3.ab3@5373>   MOVE.l #200,d0
00021E3A <AmiBlitz3.ab3@5376>     MOVE.b 0(a0,d0.l),8(a0,d0.l)
00021E3E <AmiBlitz3.ab3@5377>   DBF d0,'l1
00021E44 <AmiBlitz3.ab3@5382>   MOVE.l destpointer,a0
00021E48 <AmiBlitz3.ab3@5383>   MOVE.w #$207c,(a0)+
00021E4A <AmiBlitz3.ab3@5384>   MOVE.l a5,d0
00021E50 <AmiBlitz3.ab3@5385>   ADD.l #$206,d0                                           ;constant from debuglib
00021E52 <AmiBlitz3.ab3@5386>   MOVE.l d0,(a0)+
00021E58 <AmiBlitz3.ab3@5387>   MOVE.l a0,destpointer
00021E5A <AmiBlitz3.ab3@5388>   MOVE.l a5,a0
00021E5E <AmiBlitz3.ab3@5389>   MOVE.w #$8039,(a0)+                                      ;TokeJsr 164 (inputoutputlib) LSL 7+4
00021E64 <AmiBlitz3.ab3@5390>   MOVE.l #"$520",(a0)+
00021E68 <AmiBlitz3.ab3@5391>   MOVE.w #"4:",(a0)+
00021E6E <AmiBlitz3.ab3@5394>   CLR.w dontwrite
00021E76 <AmiBlitz3.ab3@5395>   MOVE.w #$FFFF,lasta6
00021E7A <AmiBlitz3.ab3@5396>   BSR.w compile_line                                        ;.....compile it
00021E80 <AmiBlitz3.ab3@5397>   TST.b exdebug
00021E84 <AmiBlitz3.ab3@5398>   BEQ 'noexdebug2
00021E8A <AmiBlitz3.ab3@5399>   JSR JL_0_6C76
00021E90 <AmiBlitz3.ab3@5402>   CLR.w proceduremode
00021E94 <AmiBlitz3.ab3@5403>   BSR.w errchx
00021E98 <AmiBlitz3.ab3@5404>   MOVE.w #$4EF9,D1
00021E9C <AmiBlitz3.ab3@5405>   BSR.w writeword                                          ;JMP
00021EA0 <AmiBlitz3.ab3@5406>   MOVE.l ret15add(PC),D1
00021EA4 <AmiBlitz3.ab3@5407>   BSR.w writelong                                          ;jmp to done
00021EAA <AmiBlitz3.ab3@5408>   MOVE.w dontwrite,D0
00021EAE <AmiBlitz3.ab3@5409>    BNE.w nodirmem
00021EB6 <AmiBlitz3.ab3@5410>   MOVE.l directbuffer,$3E(A7)                              ;install code address
00021EBC <AmiBlitz3.ab3@5413>   CLR.w dirmode
00021EC2 <AmiBlitz3.ab3@5414>   MOVE.w ret15cc(PC),$3C(A7)
00021ECC <AmiBlitz3.ab3@5415>   MOVE.l trap15temp,destbufferend
00021ED6 <AmiBlitz3.ab3@5416>   MOVE.l trap15temp2,destbufferstart
00021EE0 <AmiBlitz3.ab3@5417>   MOVE.l tempdata1start,data1start
00021EEA <AmiBlitz3.ab3@5418>   MOVE.l templibend,libend
00021EEE <AmiBlitz3.ab3@5419>   MOVEM.l (A7)+,D0-D7/A0-A6
00021EF2 <AmiBlitz3.ab3@5420>   BSR.w Aclearcache                                        ;selden used
00021EF4 <AmiBlitz3.ab3@5421> RTR
00021EF8 <AmiBlitz3.ab3@5424>   MOVEA.l ret15add(PC),A0
00021EFA <AmiBlitz3.ab3@5425>   SUBQ.w #2,A0
00021EFC <AmiBlitz3.ab3@5426>   MOVE.l D0,-(A0)
00021F00 <AmiBlitz3.ab3@5427> BRA.w direxit
00021F04 <AmiBlitz3.ab3@5431>   MOVE.w $6(A3),D1
00021F08 <AmiBlitz3.ab3@5432>   BSR.w uselib                                             ;get lib for base address
00021F0C <AmiBlitz3.ab3@5433>   MOVE.w $A(A1),-(A7)                                      ;libbase reg
00021F0E <AmiBlitz3.ab3@5434>   ADDQ.w #8,A3
00021F10 <AmiBlitz3.ab3@5435>   MOVE.w (A3)+,-(A7)                                       ;get offset for lib
00021F12 <AmiBlitz3.ab3@5436>   MOVE.l A3,-(A7)
00021F14 <AmiBlitz3.ab3@5440>   MOVEQ.l #$00,D3
00021F1A <AmiBlitz3.ab3@5441>   JSR checka4a5
00021F1C <AmiBlitz3.ab3@5443>   MOVE.b (A3)+,D1
00021F20 <AmiBlitz3.ab3@5444>    BMI.w stamigalib__done
00021F22 <AmiBlitz3.ab3@5445>   MOVEQ.l #$03,D2
00021F24 <AmiBlitz3.ab3@5446>   ADDQ.w #1,D3
00021F28 <AmiBlitz3.ab3@5447>   MOVEM.l D3/A3,-(A7)
00021F2E <AmiBlitz3.ab3@5448>   MOVE.b funcparloop,-(a7)
00021F36 <AmiBlitz3.ab3@5449>   MOVE.b #0,funcparloop
00021F3C <AmiBlitz3.ab3@5450>   MOVE.l leftsidetype,-(a7)
00021F42 <AmiBlitz3.ab3@5451>   MOVE.l rightsidetype,-(a7)
00021F48 <AmiBlitz3.ab3@5452>   CLR.l leftsidetype
00021F4E <AmiBlitz3.ab3@5453>   CLR.l rightsidetype
00021F54 <AmiBlitz3.ab3@5454>   MOVE.b blitzparloop,-(a7)
00021F5C <AmiBlitz3.ab3@5455>   MOVE.b #1,blitzparloop                                 ;write the parameter to stack
00021F62 <AmiBlitz3.ab3@5456>   JSR peval
00021F68 <AmiBlitz3.ab3@5457>   MOVE.b (a7)+,blitzparloop
00021F6E <AmiBlitz3.ab3@5458>   MOVE.l (a7)+,rightsidetype
00021F74 <AmiBlitz3.ab3@5459>   MOVE.l (a7)+,leftsidetype
00021F7A <AmiBlitz3.ab3@5460>   MOVE.b (a7)+,funcparloop
00021F7E <AmiBlitz3.ab3@5461>   MOVEM.l (A7)+,D3/A3
00021F82 <AmiBlitz3.ab3@5462>   CMP.w #$2C,D0
00021F86 <AmiBlitz3.ab3@5463>    BEQ.w stamigalib__loop
00021F88 <AmiBlitz3.ab3@5464>   TST.b (A3)
00021F8C <AmiBlitz3.ab3@5465>    BPL.w syntaxerr
00021F8E <AmiBlitz3.ab3@5468>   MOVEA.l (A7)+,A3
00021F90 <AmiBlitz3.ab3@5469>   SUBQ.w #1,D3
00021F94 <AmiBlitz3.ab3@5470>    BPL.w stamigalib__toend
00021F98 <AmiBlitz3.ab3@5471>    BSR.w get1bytemain                                      ;no pars - get :
00021F9C <AmiBlitz3.ab3@5472> BRA.w stamigalib__nopars
00021F9E <AmiBlitz3.ab3@5475>   TST.b (A3)+                                              ;go to end of params
00021FA2 <AmiBlitz3.ab3@5476>    BPL.w stamigalib__toend
00021FA4 <AmiBlitz3.ab3@5477>   SUBQ.w #1,A3
00021FA6 <AmiBlitz3.ab3@5480>    MOVEQ.l #$00,D1
00021FA8 <AmiBlitz3.ab3@5481>    MOVE.b -(A3),D1
00021FAC <AmiBlitz3.ab3@5482>    BTST #$4,D1
00021FB0 <AmiBlitz3.ab3@5483>     BNE.w stamigalib__addreg
00021FB2 <AmiBlitz3.ab3@5484>    LSL.w #8,D1
00021FB4 <AmiBlitz3.ab3@5485>    LSL.w #1,D1
00021FB8 <AmiBlitz3.ab3@5486>    ORI.w #$201F,D1
00021FBC <AmiBlitz3.ab3@5487>  BRA.w stamigalib__gotit
00021FC0 <AmiBlitz3.ab3@5490>    ANDI.w #$7,D1
00021FC2 <AmiBlitz3.ab3@5491>    LSL.w #8,D1
00021FC4 <AmiBlitz3.ab3@5492>    LSL.w #1,D1
00021FC8 <AmiBlitz3.ab3@5493>    ORI.w #$205F,D1
00021FCC <AmiBlitz3.ab3@5496>     BSR.w writeword
00021FD0 <AmiBlitz3.ab3@5497>   DBF D3,stamigalib__loop2
00021FD6 <AmiBlitz3.ab3@5500>   MOVE.w (A7)+,libjsr+2
00021FDC <AmiBlitz3.ab3@5501>   MOVE.w (A7)+,libbase+2
00021FE2 <AmiBlitz3.ab3@5502>   MOVE.l libbase,D1
00021FE6 <AmiBlitz3.ab3@5503>    BSR.w writelong
00021FEC <AmiBlitz3.ab3@5504>   MOVE.l libjsr,D1
00021FF2 <AmiBlitz3.ab3@5505>   JSR writelong
00021FF8 <AmiBlitz3.ab3@5506>   JSR restorea4a5
00021FFA <AmiBlitz3.ab3@5507>   RTS
00022000 <AmiBlitz3.ab3@5510>   MOVE.l data1,D4
00022006 <AmiBlitz3.ab3@5511>   SUB.l data1start,D4
0002200C <AmiBlitz3.ab3@5512>   ADD.l #10000,d4
00022012 <AmiBlitz3.ab3@5513>   MOVE.l libend,D3
00022018 <AmiBlitz3.ab3@5514>   SUB.l destbufferend,D3
0002201E <AmiBlitz3.ab3@5515>   ADD.l #40000,d3
00022024 <AmiBlitz3.ab3@5516>   MOVE.l bigpc,D2
0002202A <AmiBlitz3.ab3@5517>   SUB.l destbufferstart,D2
00022030 <AmiBlitz3.ab3@5518>   ADD.l #20000,d2
00022036 <AmiBlitz3.ab3@5519>   MOVE.l databuffer,D5
0002203C <AmiBlitz3.ab3@5520>   ADD.l #10000,D5
00022040 <AmiBlitz3.ab3@5521> BRA newallox
00022046 <AmiBlitz3.ab3@5525>   MOVE.l objectbuffer,D2
00022048 <AmiBlitz3.ab3@5526>   LSR.l #1,D2
0002204E <AmiBlitz3.ab3@5527>   ADD.l objectbuffer,D2
00022054 <AmiBlitz3.ab3@5528>   MOVE.l libsbuffer,D3
00022056 <AmiBlitz3.ab3@5529>   LSR.l #1,D3
0002205C <AmiBlitz3.ab3@5530>   ADD.l libsbuffer,D3
00022062 <AmiBlitz3.ab3@5531>   MOVE.l systembuffer,D4
00022064 <AmiBlitz3.ab3@5532>   LSR.l #1,D4
0002206A <AmiBlitz3.ab3@5533>   ADD.l systembuffer,D4
00022070 <AmiBlitz3.ab3@5534>   MOVE.l databuffer,D5
00022072 <AmiBlitz3.ab3@5535>   LSR.l #1,D5
00022078 <AmiBlitz3.ab3@5536>   ADD.l databuffer,D5
0002207C <AmiBlitz3.ab3@5537> BRA.w newallox
00022082 <AmiBlitz3.ab3@5541>   MOVE.l bigpc,D2
00022088 <AmiBlitz3.ab3@5542>   SUB.l destbufferstart,D2                                     ;size of object buffer
0002208E <AmiBlitz3.ab3@5543>   SUB.l savefuncspace,d2
00022094 <AmiBlitz3.ab3@5545>   TST.w debugversion
00022098 <AmiBlitz3.ab3@5546>    BNE.b alloxadj__skip
0002209E <AmiBlitz3.ab3@5547>   ADDI.l #$800,D2
000220A4 <AmiBlitz3.ab3@5550>   MOVE.l libend,D3
000220AA <AmiBlitz3.ab3@5551>   SUB.l destbufferend,D3
000220B0 <AmiBlitz3.ab3@5553>   MOVE.l data1,D4
000220B6 <AmiBlitz3.ab3@5554>   SUB.l data1start,D4
000220BC <AmiBlitz3.ab3@5556>   MOVE.l data2,D5
000220C2 <AmiBlitz3.ab3@5557>   SUB.l data2at,D5
000220C8 <AmiBlitz3.ab3@5559>   CLR.l morememadd
000220CC <AmiBlitz3.ab3@5562>   BSR.w makeallox
000220D0 <AmiBlitz3.ab3@5563>   BNE.w newallox__done
000220D4 <AmiBlitz3.ab3@5564> BRA.w init_buffers
000220D6 <AmiBlitz3.ab3@5567> RTS
000220DC <AmiBlitz3.ab3@5571>   MOVEA.l _execbase,A6
000220E2 <AmiBlitz3.ab3@5572>   MOVE.l objlen,D0
000220E6 <AmiBlitz3.ab3@5573>   BEQ.w freeallox__skip
000220EC <AmiBlitz3.ab3@5574>   CLR.l objlen
000220F2 <AmiBlitz3.ab3@5575>   MOVEA.l destbufferstart,A1
000220F8 <AmiBlitz3.ab3@5576>   MOVE.l mempool,a0
000220FC <AmiBlitz3.ab3@5577> JMP _FreeVec(A6)
000220FE <AmiBlitz3.ab3@5580> RTS
00022104 <AmiBlitz3.ab3@5584>   MOVE.l objectbuffer,D2
0002210A <AmiBlitz3.ab3@5585>   MOVE.l libsbuffer,D3
00022110 <AmiBlitz3.ab3@5586>   MOVE.l systembuffer,D4
00022116 <AmiBlitz3.ab3@5587>   MOVE.l databuffer,D5
0002211E <AmiBlitz3.ab3@5590>   MOVE.w #$FFFF,anyerrs
00022122 <AmiBlitz3.ab3@5591>   BSR.w freeallox
00022124 <AmiBlitz3.ab3@5595>   ADDQ.l #1,D2
00022128 <AmiBlitz3.ab3@5596>   BCLR #$0,D2
0002212A <AmiBlitz3.ab3@5597>   ADDQ.l #1,D3
0002212E <AmiBlitz3.ab3@5598>   BCLR #$0,D3
00022130 <AmiBlitz3.ab3@5599>   ADDQ.l #1,D4
00022134 <AmiBlitz3.ab3@5600>   BCLR #$0,D4
00022136 <AmiBlitz3.ab3@5601>   TST.l d5
0002213A <AmiBlitz3.ab3@5602>   BNE 'l1
0002213C <AmiBlitz3.ab3@5605>   ADDQ.l #1,D5
00022140 <AmiBlitz3.ab3@5606>   BCLR #$0,D5
00022142 <AmiBlitz3.ab3@5607>   MOVE.l D2,D0
00022144 <AmiBlitz3.ab3@5608>   ADD.l D3,D0
00022146 <AmiBlitz3.ab3@5609>   ADD.l D4,D0
00022148 <AmiBlitz3.ab3@5610>   ADD.l D5,D0
0002214E <AmiBlitz3.ab3@5611>   ADD.l #moremem,d0
00022150 <AmiBlitz3.ab3@5612>   MOVE.l D0,D6
00022156 <AmiBlitz3.ab3@5613>   MOVE.l #MemfPublic_MemfClear,D1
0002215C <AmiBlitz3.ab3@5614>   MOVE.l mempool,a0
00022162 <AmiBlitz3.ab3@5615>   MOVEA.l _execbase,A6
00022166 <AmiBlitz3.ab3@5616>   JSR _AllocVec(a6)                                        ;alloc mem for objectbuffer
00022168 <AmiBlitz3.ab3@5618>   TST.l D0
0002216C <AmiBlitz3.ab3@5619>   BEQ.w exit_initbuffers
00022172 <AmiBlitz3.ab3@5620>   MOVE.l D6,objlen
00022178 <AmiBlitz3.ab3@5621>   MOVE.l D2,objectbuffer
0002217E <AmiBlitz3.ab3@5622>   MOVE.l D3,libsbuffer
00022184 <AmiBlitz3.ab3@5623>   MOVE.l D4,systembuffer
0002218A <AmiBlitz3.ab3@5624>   MOVE.l D5,databuffer
00022190 <AmiBlitz3.ab3@5625>   MOVE.l D0,destbufferstart
000221C4 <AmiBlitz3.ab3@5628>   !ComData_SetL{comPtr_DestBufferStart,D0}
000221C6 <AmiBlitz3.ab3@5629>   ADD.l D2,D0
000221CC <AmiBlitz3.ab3@5630>   MOVE.l D0,destbufferend
000221CE <AmiBlitz3.ab3@5631>   ADD.l D3,D0
000221D4 <AmiBlitz3.ab3@5632>   MOVE.l D0,data1start
000221D6 <AmiBlitz3.ab3@5633>   ADD.l D4,D0
000221DC <AmiBlitz3.ab3@5634>   MOVE.l D0,data2at
000221DE <AmiBlitz3.ab3@5635>   ADD.l D5,D0
000221E4 <AmiBlitz3.ab3@5636>   MOVE.l D0,allat
000221E6 <AmiBlitz3.ab3@5639> RTS
000221EA <AmiBlitz3.ab3@5643>   Dc.b $00,$00,$00,$01                                     ;         1
000221EE <AmiBlitz3.ab3@5644>   Dc.b $00,$00,$00,$0A                                     ;        10
000221F2 <AmiBlitz3.ab3@5645>   Dc.b $00,$00,$00,$64                                     ;       100
000221F6 <AmiBlitz3.ab3@5646>   Dc.b $00,$00,$03,$E8                                     ;      1000
000221FA <AmiBlitz3.ab3@5647>   Dc.b $00,$00,$27,$10                                     ;     10000
000221FE <AmiBlitz3.ab3@5648>   Dc.b $00,$01,$86,$A0                                     ;    100000
00022202 <AmiBlitz3.ab3@5649>   Dc.b $00,$0F,$42,$40                                     ;   1000000
00022206 <AmiBlitz3.ab3@5650>   Dc.b $00,$98,$96,$80                                     ;  10000000
0002220A <AmiBlitz3.ab3@5651>   Dc.b $05,$F5,$E1,$00                                     ; 100000000
0002220E <AmiBlitz3.ab3@5652>   Dc.b $3B,$9A,$CA,$00                                     ;1000000000
00022210 <AmiBlitz3.ab3@5656>   MOVEQ.l #$00,D1                                          ;no zero printed
00022212 <AmiBlitz3.ab3@5657>   MOVEQ.l #$24,D3                                          ; "$"
00022214 <AmiBlitz3.ab3@5660>   MOVEQ.l #$30,D4                                          ; "0"
00022218 <AmiBlitz3.ab3@5663>     CMP.l divisors(PC,D3.W),D2
0002221C <AmiBlitz3.ab3@5664>     BCS.w makelong__skip
00022220 <AmiBlitz3.ab3@5665>     SUB.l divisors(PC,D3.W),D2
00022222 <AmiBlitz3.ab3@5666>     ADDQ.w #1,D4
00022226 <AmiBlitz3.ab3@5667> BRA.w makelong__loop2
0002222A <AmiBlitz3.ab3@5670>   CMP.b #"0",D4
0002222E <AmiBlitz3.ab3@5671>   BNE.w makelong__doit
00022230 <AmiBlitz3.ab3@5672>   TST.w D1
00022234 <AmiBlitz3.ab3@5673>   BEQ.w makelong__skip2
00022236 <AmiBlitz3.ab3@5676>   MOVE.b D4,(A0)+
00022238 <AmiBlitz3.ab3@5677>   MOVEQ.l #$01,D1
0002223A <AmiBlitz3.ab3@5680>   SUBQ.w #4,D3
0002223E <AmiBlitz3.ab3@5681>   BPL.w makelong__loop
00022240 <AmiBlitz3.ab3@5682>   TST.w D1
00022244 <AmiBlitz3.ab3@5683>   BNE.w makelong__skip3
00022248 <AmiBlitz3.ab3@5684>   MOVE.b #"0",(A0)+
0002224A <AmiBlitz3.ab3@5687>   CLR.b (A0)
0002224C <AmiBlitz3.ab3@5688> RTS
0002226C <AmiBlitz3.ab3@5691> str_residentrequester:  Dc.b "Name of Resident File to Create",0 : Even        ;restext org source
0002232C <AmiBlitz3.ab3@5692> str_residentpath:       Ds.l 48                                                ;respath org source
000223EC <AmiBlitz3.ab3@5693> str_residentname:       Ds.l 48                                                ;resname org source
000223F2 <AmiBlitz3.ab3@5697>   MOVE.l macrobase,D0
000223F6 <AmiBlitz3.ab3@5698>    BNE.w create_residentfile
000223FC <AmiBlitz3.ab3@5699>   MOVE.l newtype_string,D0
00022400 <AmiBlitz3.ab3@5700>    BNE.w create_residentfile
00022406 <AmiBlitz3.ab3@5701>   MOVEA.l labelbase,A2
0002240A <AmiBlitz3.ab3@5704>     CMPA.w #$0,A2
0002240E <AmiBlitz3.ab3@5705>      BEQ.w menu_createresidentfile__err
00022416 <AmiBlitz3.ab3@5706>     CMPI.l #$1,$4(A2)
0002241A <AmiBlitz3.ab3@5707>      BEQ.w create_residentfile
0002241C <AmiBlitz3.ab3@5708>     MOVEA.l (A2),A2
00022420 <AmiBlitz3.ab3@5709> BRA.w menu_createresidentfile__loop
0002244A <AmiBlitz3.ab3@5712>   !basic
000224AC <AmiBlitz3.ab3@5713> 
000224CA <AmiBlitz3.ab3@5714>   !asm
000224CC <AmiBlitz3.ab3@5715> RTS
0002250A <AmiBlitz3.ab3@5721>   !ComData_GetL{comFunc_ASLFileRequest,A3}
00022510 <AmiBlitz3.ab3@5722>   LEA str_residentrequester,A2
00022516 <AmiBlitz3.ab3@5723>   LEA str_residentpath,A0
0002251C <AmiBlitz3.ab3@5724>   LEA str_residentname,A1
00022546 <AmiBlitz3.ab3@5725>   !basic
0002257E <AmiBlitz3.ab3@5726>     Poke$ ?str_residentpath,my_residentsdir$
000225AA <AmiBlitz3.ab3@5727>     Poke$ ?str_residentname,".res"
000225C8 <AmiBlitz3.ab3@5728>   !asm
000225CA <AmiBlitz3.ab3@5730>   JSR (A3)                                                 ;open ped filerequest
000225CE <AmiBlitz3.ab3@5732>   BEQ.w menu_createresidentfile__err
000225D0 <AmiBlitz3.ab3@5735>   MOVE.l D0,D1
000225D6 <AmiBlitz3.ab3@5736>   MOVE.l #HUNK_RELOC_8__MODE_NEWFILE,D2
000225DA <AmiBlitz3.ab3@5737>   MOVEA.l _dosbase(PC),A6
000225DE <AmiBlitz3.ab3@5738>   JSR _Open(A6)
000225E0 <AmiBlitz3.ab3@5739>   MOVE.l D0,D7                                             ;handle
000225E4 <AmiBlitz3.ab3@5740>   BEQ.w menu_createresidentfile__err
000225E8 <AmiBlitz3.ab3@5741>   MOVEM.l d2-d7/a0-a6,-(a7)
000225EE <AmiBlitz3.ab3@5742>   LEA devo,a0
000225F4 <AmiBlitz3.ab3@5743>   LEA ptr_parameterstore,a1
000225F6 <AmiBlitz3.ab3@5746>     MOVE.b (a0)+,(a1)+
000225FA <AmiBlitz3.ab3@5747>   BNE 'l1
000225FC <AmiBlitz3.ab3@5748>   MOVEQ #13,d2
00022602 <AmiBlitz3.ab3@5749>   JSR findlabel2
00022606 <AmiBlitz3.ab3@5750>   BNE 'd
0002260A <AmiBlitz3.ab3@5751>   TST.l 8(a2)
0002260E <AmiBlitz3.ab3@5752>   BEQ 'd2
00022638 <AmiBlitz3.ab3@5753>   !basic
0002269A <AmiBlitz3.ab3@5754>     error{!TRANS{"Cannot create Resident with develope debug 1"}}
000226B8 <AmiBlitz3.ab3@5755>   !asm
000226BC <AmiBlitz3.ab3@5756>   MOVEM.l (a7)+,d2-d7/a0-a6
000226C0 <AmiBlitz3.ab3@5757>   MOVEA.l _dosbase(PC),A6
000226C2 <AmiBlitz3.ab3@5758>   MOVE.l d7,d1
000226C6 <AmiBlitz3.ab3@5759>   JSR _Close(a6)
000226CA <AmiBlitz3.ab3@5760> BRA menu_createresidentfile__err
000226CE <AmiBlitz3.ab3@5764>   MOVEM.l (a7)+,d2-d7/a0-a6
000226D2 <AmiBlitz3.ab3@5765>   BSR.w call_setpointerbusy
000226D6 <AmiBlitz3.ab3@5767>   BSR.w AJL_0_7962
000226D8 <AmiBlitz3.ab3@5768>   MOVE.l D7,D1
000226DE <AmiBlitz3.ab3@5769>   MOVE.l #tsthead,D2                                       ;header
000226E0 <AmiBlitz3.ab3@5770>   MOVEQ.l #$20,D3
000226E4 <AmiBlitz3.ab3@5771>   MOVEA.l _dosbase(PC),A6
000226E8 <AmiBlitz3.ab3@5772>   JSR _Write(A6)
000226EA <AmiBlitz3.ab3@5773>   MOVEQ.l #$00,D6                                          ;offset from start of file!
000226EE <AmiBlitz3.ab3@5774>   BSR.w restypes
000226F2 <AmiBlitz3.ab3@5775>   BSR.w resmacs
000226F6 <AmiBlitz3.ab3@5776>   BSR.w resconsts
000226F8 <AmiBlitz3.ab3@5777>   MOVE.l D6,D3
000226FA <AmiBlitz3.ab3@5778>   ADDQ.l #3,D3
00022700 <AmiBlitz3.ab3@5779>   ANDI.l #$FFFFFFFC,D3                                    ;long word align
00022702 <AmiBlitz3.ab3@5780>   MOVE.l D3,-(A7)
00022704 <AmiBlitz3.ab3@5781>   SUB.l D6,D3
00022708 <AmiBlitz3.ab3@5782>   BEQ.w menu_createresidentfile__noalign
0002270E <AmiBlitz3.ab3@5783>   MOVE.l #writelist,D2
00022710 <AmiBlitz3.ab3@5784>   MOVE.l D7,D1
00022716 <AmiBlitz3.ab3@5785>   MOVEA.l _dosbase,A6
0002271A <AmiBlitz3.ab3@5786>   JSR _Write(A6)
00022724 <AmiBlitz3.ab3@5789>    MOVE.l hunkoffsetcounter,tstsize3
00022728 <AmiBlitz3.ab3@5790>    BEQ.w menu_createresidentfile__skip2a
0002272A <AmiBlitz3.ab3@5791>   MOVE.l D7,D1
00022730 <AmiBlitz3.ab3@5792>   MOVE.l #tstend,D2
00022732 <AmiBlitz3.ab3@5793>   MOVEQ.l #$0C,D3
00022738 <AmiBlitz3.ab3@5794>   MOVEA.l _dosbase,A6
0002273C <AmiBlitz3.ab3@5795>    JSR _Write(A6)
00022742 <AmiBlitz3.ab3@5799>   MOVEA.l hunkoffsetbase,A2
00022746 <AmiBlitz3.ab3@5802>   CMPA.w #$0,A2
0002274A <AmiBlitz3.ab3@5803>    BEQ.w menu_createresidentfile__skip2
0002274E <AmiBlitz3.ab3@5804>   LEA $4(A2),A1
00022750 <AmiBlitz3.ab3@5805>   MOVE.l D7,D1
00022752 <AmiBlitz3.ab3@5806>   MOVE.l A1,D2
00022754 <AmiBlitz3.ab3@5807>   MOVEQ.l #$04,D3
0002275A <AmiBlitz3.ab3@5808>   MOVEA.l _dosbase,A6
0002275E <AmiBlitz3.ab3@5809>    JSR _Write(A6)
00022760 <AmiBlitz3.ab3@5810>   MOVEA.l (A2),A2
00022764 <AmiBlitz3.ab3@5811> BRA.w menu_createresidentfile__oloop
00022766 <AmiBlitz3.ab3@5814>   MOVE.l D7,D1
0002276C <AmiBlitz3.ab3@5815>   MOVE.l #zero,D2
0002276E <AmiBlitz3.ab3@5816>   MOVEQ.l #$04,D3
00022774 <AmiBlitz3.ab3@5817>   MOVEA.l _dosbase,A6
00022778 <AmiBlitz3.ab3@5818>   JSR _Write(A6)
0002277A <AmiBlitz3.ab3@5821>   MOVE.l D7,D1
00022780 <AmiBlitz3.ab3@5822>   MOVE.l #tstdone,D2
00022782 <AmiBlitz3.ab3@5823>   MOVEQ.l #$04,D3
00022788 <AmiBlitz3.ab3@5824>   MOVEA.l _dosbase,A6
0002278C <AmiBlitz3.ab3@5825>    JSR _Write(A6)
0002278E <AmiBlitz3.ab3@5826>   MOVE.l (A7)+,D0
00022790 <AmiBlitz3.ab3@5827>   LSR.l #2,D0
00022796 <AmiBlitz3.ab3@5828>   MOVE.l D0,temp1
00022798 <AmiBlitz3.ab3@5829>   MOVE.l D7,D1
0002279A <AmiBlitz3.ab3@5830>   MOVEQ.l #$14,D2
0002279C <AmiBlitz3.ab3@5831>   MOVEQ.l #-$01,D3
000227A0 <AmiBlitz3.ab3@5832>   JSR _Seek(A6)
000227A2 <AmiBlitz3.ab3@5833>   MOVE.l D7,D1
000227A8 <AmiBlitz3.ab3@5834>   MOVE.l #temp1,D2
000227AA <AmiBlitz3.ab3@5835>   MOVEQ.l #$04,D3
000227AE <AmiBlitz3.ab3@5836>    JSR _Write(A6)
000227B0 <AmiBlitz3.ab3@5837>   MOVE.l D7,D1
000227B2 <AmiBlitz3.ab3@5838>   MOVEQ.l #$1C,D2
000227B4 <AmiBlitz3.ab3@5839>   MOVEQ.l #-$01,D3
000227B8 <AmiBlitz3.ab3@5840>    JSR _Seek(A6)
000227BA <AmiBlitz3.ab3@5841>   MOVE.l D7,D1
000227C0 <AmiBlitz3.ab3@5842>   MOVE.l #temp1,D2
000227C2 <AmiBlitz3.ab3@5843>   MOVEQ.l #$04,D3
000227C6 <AmiBlitz3.ab3@5844>    JSR _Write(A6)
000227C8 <AmiBlitz3.ab3@5845>   MOVE.l D7,D1
000227CC <AmiBlitz3.ab3@5846>    JSR _Close(A6)
000227D0 <AmiBlitz3.ab3@5847> BRA.w call_setpointernormal
000227D2 <AmiBlitz3.ab3@5851>   ADDQ.w #5,D1
000227D4 <AmiBlitz3.ab3@5852>   ADDQ.b #8,D0
000227D8 <AmiBlitz3.ab3@5855>     CMPA.w #$0,A2
000227DC <AmiBlitz3.ab3@5856>     BEQ.w writelist__done
000227E0 <AmiBlitz3.ab3@5857>      BSR.w writeitem
000227E2 <AmiBlitz3.ab3@5858>     MOVEA.l (A2),A2
000227E6 <AmiBlitz3.ab3@5859> BRA.w writelist__loop
000227E8 <AmiBlitz3.ab3@5862> RTS
000227EA <AmiBlitz3.ab3@5865>   MOVEQ.l #$00,D3
000227EE <AmiBlitz3.ab3@5866>   MOVE.b $0(A2,D5.W),D3
000227F0 <AmiBlitz3.ab3@5867>   ADDQ.w #1,D3
000227F4 <AmiBlitz3.ab3@5868>   BCLR #$0,D3                                              ;word align
000227F6 <AmiBlitz3.ab3@5869>   MOVE.l (A2),-(A7)
000227FA <AmiBlitz3.ab3@5870>    BEQ.w writeitem__skip
000227FE <AmiBlitz3.ab3@5871>    BSR.w resoff
00022800 <AmiBlitz3.ab3@5872>   ADD.l D3,D6
00022802 <AmiBlitz3.ab3@5873>   MOVE.l D6,(A2)
00022804 <AmiBlitz3.ab3@5874>   SUB.l D3,D6
00022806 <AmiBlitz3.ab3@5877>    ADD.l D3,D6
00022808 <AmiBlitz3.ab3@5878>   MOVE.l A2,D2
0002280A <AmiBlitz3.ab3@5879>   MOVE.l D7,D1
00022810 <AmiBlitz3.ab3@5880>   MOVEA.l _dosbase,A6
00022814 <AmiBlitz3.ab3@5881>    JSR _Write(A6)
00022816 <AmiBlitz3.ab3@5882>   MOVE.l (A7)+,(A2)
00022818 <AmiBlitz3.ab3@5883> RTS
0002281A <AmiBlitz3.ab3@5886>   MOVE.l D6,D2
0002281E <AmiBlitz3.ab3@5887> BRA.w addhunkoffset
00022822 <AmiBlitz3.ab3@5891>     CMPA.w #$0,A2
00022826 <AmiBlitz3.ab3@5892>      BEQ.w writeoffs__done
0002282C <AmiBlitz3.ab3@5893>     MOVEA.l newtypebase,A1
0002282E <AmiBlitz3.ab3@5894>     MOVEQ.l #$00,D1
00022832 <AmiBlitz3.ab3@5897>       CMPA.w #$0,A1
00022836 <AmiBlitz3.ab3@5898>       BEQ.w writeoffs__found
0002283A <AmiBlitz3.ab3@5899>       CMPA.l $A(A2),A1
0002283E <AmiBlitz3.ab3@5900>        BEQ.w writeoffs__found
00022840 <AmiBlitz3.ab3@5901>       ADDQ.w #1,D1
00022842 <AmiBlitz3.ab3@5902>       MOVEA.l (A1),A1
00022846 <AmiBlitz3.ab3@5903> BRA.w writeoffs__loop2
0002284A <AmiBlitz3.ab3@5906>     MOVE.w $A(A2),-(A7)
0002284E <AmiBlitz3.ab3@5907>     MOVE.w D1,$A(A2)
00022852 <AmiBlitz3.ab3@5908>      BSR.w writeitem
00022856 <AmiBlitz3.ab3@5909>     MOVE.w (A7)+,$A(A2)
00022858 <AmiBlitz3.ab3@5910>     MOVEA.l (A2),A2
0002285C <AmiBlitz3.ab3@5911> BRA.w writeoffs
0002285E <AmiBlitz3.ab3@5914> RTS
00022860 <AmiBlitz3.ab3@5918>   MOVEQ.l #$00,D0
00022864 <AmiBlitz3.ab3@5921>   CMPA.w #$0,A2
00022868 <AmiBlitz3.ab3@5922>    BEQ.w countem__done
0002286A <AmiBlitz3.ab3@5923>   ADDQ.w #1,D0
0002286C <AmiBlitz3.ab3@5924>   MOVEA.l (A2),A2
00022870 <AmiBlitz3.ab3@5925> BRA.w countem__loop
00022876 <AmiBlitz3.ab3@5928>   MOVE.w D0,temp1
00022878 <AmiBlitz3.ab3@5929>   MOVE.l D7,D1
0002287E <AmiBlitz3.ab3@5930>   MOVE.l #temp1,D2
00022880 <AmiBlitz3.ab3@5931>   MOVEQ.l #$02,D3
00022882 <AmiBlitz3.ab3@5932>   ADDQ.l #2,D6
00022888 <AmiBlitz3.ab3@5933>   MOVEA.l _dosbase,A6
0002288C <AmiBlitz3.ab3@5934> JMP _Write(A6)
00022892 <AmiBlitz3.ab3@5938>    TST.b resdisable
00022896 <AmiBlitz3.ab3@5939>    BEQ resmacs__l1
0002289C <AmiBlitz3.ab3@5940>    MOVE.l currentmacroaddr,a3
000228A2 <AmiBlitz3.ab3@5941>    CMP.l #0,a3
000228A6 <AmiBlitz3.ab3@5942>    BEQ resmacs__l1
000228A8 <AmiBlitz3.ab3@5943>    MOVE.l (a3),a3
000228AC <AmiBlitz3.ab3@5944> BRA resmacs__l2
000228B2 <AmiBlitz3.ab3@5947>   MOVEA.l macrobase,A3                                     ;??begin org code??
000228B4 <AmiBlitz3.ab3@5950>   MOVEA.l A3,A2
000228B8 <AmiBlitz3.ab3@5951>   BSR.w countem
000228BC <AmiBlitz3.ab3@5954>    CMPA.w #$0,A3
000228C0 <AmiBlitz3.ab3@5955>    BEQ.w resmacs__done
000228C2 <AmiBlitz3.ab3@5956>   MOVE.l D6,D5
000228C4 <AmiBlitz3.ab3@5957>   MOVE.l (A3),-(A7)
000228C8 <AmiBlitz3.ab3@5958>   MOVE.l $4(A3),-(A7)
000228CA <AmiBlitz3.ab3@5959>   MOVEQ.l #$00,D3
000228CE <AmiBlitz3.ab3@5960>   MOVE.b $C(A3),D3
000228D0 <AmiBlitz3.ab3@5961>   ADDQ.w #1,D3
000228D4 <AmiBlitz3.ab3@5962>   BCLR #$0,D3
000228D6 <AmiBlitz3.ab3@5963>   ADD.l D3,D6                                              ;add len of struct
000228DA <AmiBlitz3.ab3@5964>   TST.w $8(A3)
000228DE <AmiBlitz3.ab3@5965>    BEQ.w resmacs__notext
000228E2 <AmiBlitz3.ab3@5966>   MOVE.l D6,$4(A3)
000228E4 <AmiBlitz3.ab3@5967>   MOVE.l D5,D2
000228E6 <AmiBlitz3.ab3@5968>   ADDQ.l #4,D2
000228EA <AmiBlitz3.ab3@5969>    BSR.w addhunkoffset
000228EC <AmiBlitz3.ab3@5972>   MOVEQ.l #$00,D4
000228F0 <AmiBlitz3.ab3@5973>   MOVE.w $8(A3),D4
000228F2 <AmiBlitz3.ab3@5974>   ADDQ.w #1,D4
000228F6 <AmiBlitz3.ab3@5975>   BCLR #$0,D4
000228F8 <AmiBlitz3.ab3@5976>   ADD.l D4,D6
000228FA <AmiBlitz3.ab3@5977>   TST.l (A3)
000228FE <AmiBlitz3.ab3@5978>    BEQ.w resmacs__nomore
00022900 <AmiBlitz3.ab3@5979>   MOVE.l D6,(A3)
00022902 <AmiBlitz3.ab3@5980>   MOVE.l D5,D2
00022906 <AmiBlitz3.ab3@5981>    BSR.w addhunkoffset
00022908 <AmiBlitz3.ab3@5984>   MOVE.l A3,D2
0002290A <AmiBlitz3.ab3@5985>   MOVE.l D7,D1
00022910 <AmiBlitz3.ab3@5987>    MOVEA.l _dosbase,A6
00022914 <AmiBlitz3.ab3@5988>    JSR _Write(a6)
00022916 <AmiBlitz3.ab3@5989>   TST.l D4
0002291A <AmiBlitz3.ab3@5990>    BEQ.w resmacs__skip
0002291C <AmiBlitz3.ab3@5991>   MOVE.l (A7),D2
0002291E <AmiBlitz3.ab3@5992>   MOVE.l D4,D3
00022920 <AmiBlitz3.ab3@5993>   MOVE.l D7,D1
00022926 <AmiBlitz3.ab3@5995>     MOVEA.l _dosbase,A6
0002292A <AmiBlitz3.ab3@5996>    JSR _Write(A6)
0002292E <AmiBlitz3.ab3@5999>   MOVE.l (A7)+,$4(A3)
00022930 <AmiBlitz3.ab3@6000>   MOVE.l (A7)+,(A3)
00022932 <AmiBlitz3.ab3@6001>   MOVEA.l (A3),A3
00022936 <AmiBlitz3.ab3@6002> BRA.w resmacs__loop
00022938 <AmiBlitz3.ab3@6005> RTS
0002293E <AmiBlitz3.ab3@6009>   TST.b resdisable
00022942 <AmiBlitz3.ab3@6010>   BEQ restypes__l1
00022948 <AmiBlitz3.ab3@6011>   MOVE.l lastrestype,a3
0002294E <AmiBlitz3.ab3@6012>   CMP.l #0,a3
00022952 <AmiBlitz3.ab3@6013>   BEQ restypes__l1
00022954 <AmiBlitz3.ab3@6014>   MOVE.l (a3),a3
00022958 <AmiBlitz3.ab3@6015> BRA restypes__l2
0002295E <AmiBlitz3.ab3@6018>   MOVEA.l newtype_string,A3
00022960 <AmiBlitz3.ab3@6021>   MOVEA.l A3,A2
00022964 <AmiBlitz3.ab3@6022>    BSR.w countem
00022968 <AmiBlitz3.ab3@6025>    CMPA.w #$0,A3
0002296C <AmiBlitz3.ab3@6026>    BEQ.w restypes__done
0002296E <AmiBlitz3.ab3@6027>   MOVE.l D6,-(A7)
00022972 <AmiBlitz3.ab3@6028>   MOVEA.l $4(A3),A2
00022974 <AmiBlitz3.ab3@6029>   MOVEQ.l #$0E,D5
00022978 <AmiBlitz3.ab3@6030>    BSR.w writeoffs
0002297A <AmiBlitz3.ab3@6031>   MOVE.l (A7)+,D0
0002297E <AmiBlitz3.ab3@6032>   MOVE.l $4(A3),-(A7)
00022982 <AmiBlitz3.ab3@6033>   MOVE.l D0,$4(A3)
00022984 <AmiBlitz3.ab3@6034>   MOVE.l D6,D2
00022986 <AmiBlitz3.ab3@6035>   ADDQ.l #4,D2
0002298A <AmiBlitz3.ab3@6036>    BSR.w addhunkoffset
0002298C <AmiBlitz3.ab3@6037>   MOVEQ.l #$00,D3
00022990 <AmiBlitz3.ab3@6038>   MOVE.b $A(A3),D3
00022992 <AmiBlitz3.ab3@6039>   ADDQ.w #1,D3
00022996 <AmiBlitz3.ab3@6040>   BCLR #$0,D3
00022998 <AmiBlitz3.ab3@6041>   ADD.l D3,D6
0002299A <AmiBlitz3.ab3@6042>   MOVE.l A3,D2
0002299C <AmiBlitz3.ab3@6043>   MOVE.l D7,D1
000229A2 <AmiBlitz3.ab3@6045>     MOVEA.l _dosbase,A6
000229A6 <AmiBlitz3.ab3@6046>     JSR _Write(A6)
000229AA <AmiBlitz3.ab3@6047>   MOVE.l (A7)+,$4(A3)
000229AC <AmiBlitz3.ab3@6048>   MOVEA.l (A3),A3
000229B0 <AmiBlitz3.ab3@6049> BRA.w restypes__loop
000229B2 <AmiBlitz3.ab3@6052> RTS
000229B8 <AmiBlitz3.ab3@6056>    TST.b resdisable
000229BC <AmiBlitz3.ab3@6057>    BEQ resconsts__l1
000229C2 <AmiBlitz3.ab3@6058>    MOVE.l currentlabeladdr,a2
000229C8 <AmiBlitz3.ab3@6059>    CMP.l #0,a2
000229CC <AmiBlitz3.ab3@6060>    BEQ resconsts__l1
000229CE <AmiBlitz3.ab3@6061>    MOVE.l (a2),a2
000229D2 <AmiBlitz3.ab3@6062> BRA resconsts__l2
000229D8 <AmiBlitz3.ab3@6065>    MOVEA.l labelbase,A2
000229DA <AmiBlitz3.ab3@6068>    MOVEQ.l #$00,D0
000229DE <AmiBlitz3.ab3@6071>    CMPA.w #$0,A2
000229E2 <AmiBlitz3.ab3@6072>    BEQ.w resconsts__done
000229EA <AmiBlitz3.ab3@6073>   CMPI.l #$1,$4(A2)
000229EE <AmiBlitz3.ab3@6074>    BNE.w resconsts__next
000229F0 <AmiBlitz3.ab3@6075>   ADDQ.w #1,D0
000229F2 <AmiBlitz3.ab3@6078>   MOVEA.l (A2),A2
000229F6 <AmiBlitz3.ab3@6079> BRA.w resconsts__loop
000229FC <AmiBlitz3.ab3@6082>   MOVE.w D0,temp1
000229FE <AmiBlitz3.ab3@6083>   MOVE.l D7,D1
00022A04 <AmiBlitz3.ab3@6084>   MOVE.l #temp1,D2
00022A06 <AmiBlitz3.ab3@6085>   MOVEQ.l #$02,D3
00022A08 <AmiBlitz3.ab3@6086>   ADDQ.l #2,D6
00022A0E <AmiBlitz3.ab3@6088>     MOVEA.l _dosbase,A6
00022A12 <AmiBlitz3.ab3@6089>     JSR _Write(A6)
00022A18 <AmiBlitz3.ab3@6090>    TST.b resdisable
00022A1C <AmiBlitz3.ab3@6091>    BEQ resconsts__done_l1
00022A22 <AmiBlitz3.ab3@6092>    MOVE.l currentlabeladdr,a2
00022A28 <AmiBlitz3.ab3@6093>    CMP.l #0,a2
00022A2C <AmiBlitz3.ab3@6094>    BEQ resconsts__done_l1
00022A2E <AmiBlitz3.ab3@6095>    MOVE.l (a2),a2
00022A32 <AmiBlitz3.ab3@6096> BRA resconsts__loop2
00022A38 <AmiBlitz3.ab3@6099>    MOVEA.l labelbase,A2                                    ;write resident labels
00022A3C <AmiBlitz3.ab3@6102>    CMPA.w #$0,A2
00022A40 <AmiBlitz3.ab3@6103>    BEQ.w resconsts__done2
00022A48 <AmiBlitz3.ab3@6104>   CMPI.l #$1,$4(A2)
00022A4C <AmiBlitz3.ab3@6105>    BNE.w resconsts__next2
00022A4E <AmiBlitz3.ab3@6106>    MOVEQ.l #$00,D3
00022A52 <AmiBlitz3.ab3@6107>   MOVE.b $12(A2),D3                                        ;length
00022A54 <AmiBlitz3.ab3@6108>   ADDQ.w #1,D3
00022A58 <AmiBlitz3.ab3@6109>   BCLR #$0,D3
00022A5A <AmiBlitz3.ab3@6110>   MOVE.l D6,D2
00022A5C <AmiBlitz3.ab3@6111>   ADD.l D3,D6
00022A5E <AmiBlitz3.ab3@6114>   MOVE.l (A2),-(A7)
00022A60 <AmiBlitz3.ab3@6115>   TST.l (A2)
00022A64 <AmiBlitz3.ab3@6116>    BEQ.w resconsts__nonext
00022A66 <AmiBlitz3.ab3@6117>   MOVE.l D6,(A2)
00022A6A <AmiBlitz3.ab3@6118>    BSR.w addhunkoffset
00022A6C <AmiBlitz3.ab3@6121>   MOVE.l A2,D2
00022A6E <AmiBlitz3.ab3@6122>   MOVE.l D7,D1
00022A74 <AmiBlitz3.ab3@6124>     MOVEA.l _dosbase,A6
00022A78 <AmiBlitz3.ab3@6125>     JSR _Write(A6)
00022A7A <AmiBlitz3.ab3@6126>   MOVE.l (A7)+,(A2)
00022A7C <AmiBlitz3.ab3@6129>   MOVEA.l (A2),A2
00022A80 <AmiBlitz3.ab3@6130> BRA.w resconsts__loop2
00022A82 <AmiBlitz3.ab3@6133> RTS
00022AAC <AmiBlitz3.ab3@6137>    !basic
00022AB2 <AmiBlitz3.ab3@6138>     MOVE.l ptr_resfile,d0
00022AC2 <AmiBlitz3.ab3@6139>     resfileP.l = Peek.l(?ptr_resfile)
00022ACC <AmiBlitz3.ab3@6140>     If resfileP
00022AF4 <AmiBlitz3.ab3@6141>       resfile$ = Peek.s(resfileP)
00022B40 <AmiBlitz3.ab3@6142>       tests.b = Instr(resfile$,"/")
00022B8C <AmiBlitz3.ab3@6143>       testc.b = Instr(resfile$,":")
00022BAE <AmiBlitz3.ab3@6144>       If tests=0 AND testc=0
00022C2E <AmiBlitz3.ab3@6145>         resfile$ = dos_AddPart{my_residentsdir$,resfile$}
00022C40 <AmiBlitz3.ab3@6146>         Poke.l ?ptr_resfile,&resfile$
00022C46 <AmiBlitz3.ab3@6148>     Else
00022C80 <AmiBlitz3.ab3@6149>       error{"INTERNAL: Invalid pointer in ptr_resfile!"}
00022C9E <AmiBlitz3.ab3@6151>    !asm
00022CA0 <AmiBlitz3.ab3@6152> RTS
00022CA6 <AmiBlitz3.ab3@6156> 
00022CAC <AmiBlitz3.ab3@6157>   MOVE.l A7,errstack
00022CB6 <AmiBlitz3.ab3@6160>   MOVE.l #next_resentry,errcont
00022CBE <AmiBlitz3.ab3@6161>   MOVE.w #$FFFF,ezerr
00022CC2 <AmiBlitz3.ab3@6162>   BSR.w Aclearallvars
00022CC6 <AmiBlitz3.ab3@6163>   BSR.w free_residents
00022CCC <AmiBlitz3.ab3@6165>   LEA residents_table,A5
00022CCE <AmiBlitz3.ab3@6166>   MOVEQ.l #$07,D6
00022CD0 <AmiBlitz3.ab3@6169>     TST.b (A5)
00022CD4 <AmiBlitz3.ab3@6170>     BEQ.w next_resentry
00022CDA <AmiBlitz3.ab3@6171>     MOVE.l A5,ptr_resfile
00022CDE <AmiBlitz3.ab3@6172>     BSR check_residentpath
00022CE4 <AmiBlitz3.ab3@6173>     MOVE.l ptr_resfile,d1
00022CEA <AmiBlitz3.ab3@6174>     MOVEA.l _dosbase,A6
00022CEE <AmiBlitz3.ab3@6175>     JSR _LoadSeg(A6)
00022CF2 <AmiBlitz3.ab3@6176>     MOVE.l D0,$40(A5)
00022CF6 <AmiBlitz3.ab3@6177>     BNE.w reloadresident__yeah
00022CFA <AmiBlitz3.ab3@6178>     BSR.w reserr
00022CFC <AmiBlitz3.ab3@6181>     MOVEA.l D0,A3
00022CFE <AmiBlitz3.ab3@6182>     ADDA.l A3,A3
00022D00 <AmiBlitz3.ab3@6183>     ADDA.l A3,A3
00022D02 <AmiBlitz3.ab3@6184>     ADDQ.w #4,A3                                           ;start of res
00022D06 <AmiBlitz3.ab3@6185>     BSR.w JL_0_5A9E
00022D0A <AmiBlitz3.ab3@6186>     BSR.w JL_0_5A62                                        ;add macros to list
00022D0E <AmiBlitz3.ab3@6187>     BSR.w JL_0_5A32                                        ;read labels
00022D12 <AmiBlitz3.ab3@6190>     LEA ResidentEntryStep(A5),A5       ;$44
00022D16 <AmiBlitz3.ab3@6191>   DBF D6,reloadresident__loop
00022D20 <AmiBlitz3.ab3@6196>   MOVE.l #free_residents,errcont
00022D26 <AmiBlitz3.ab3@6198>   MOVEA.l newtype_string,A3
00022D28 <AmiBlitz3.ab3@6199>   MOVEQ.l #$0B,D7
00022D2C <AmiBlitz3.ab3@6200>   BSR.w checkclash
00022D32 <AmiBlitz3.ab3@6202>   MOVEA.l macrobase,A3
00022D34 <AmiBlitz3.ab3@6203>   MOVEQ.l #$d,D7
00022D38 <AmiBlitz3.ab3@6204>   BSR.w checkclash
00022D3E <AmiBlitz3.ab3@6206>   MOVEA.l firstconst,A3
00022D40 <AmiBlitz3.ab3@6207>   MOVEQ.l #$19,D7
00022D44 <AmiBlitz3.ab3@6208>   BSR.w checkclash
00022D46 <AmiBlitz3.ab3@6211> RTS
00022D48 <AmiBlitz3.ab3@6215>   MOVEA.l A3,A4
00022D4C <AmiBlitz3.ab3@6218>     CMPA.w #$0,A4
00022D50 <AmiBlitz3.ab3@6219>     BEQ.w checkclash__done
00022D56 <AmiBlitz3.ab3@6221>     LEA ptr_parameterstore,A0
00022D5A <AmiBlitz3.ab3@6222>     LEA $0(A4,D7.W),A1
00022D5C <AmiBlitz3.ab3@6223>     MOVEQ.l #-$01,D2
00022D5E <AmiBlitz3.ab3@6226>       ADDQ.w #1,D2
00022D60 <AmiBlitz3.ab3@6227>       MOVE.b (A1)+,(A0)+
00022D64 <AmiBlitz3.ab3@6228>     BNE.w checkclash__loop2
00022D66 <AmiBlitz3.ab3@6229>     MOVEA.l A3,A2
00022D6A <AmiBlitz3.ab3@6232>     BSR.w findlab
00022D6E <AmiBlitz3.ab3@6233>     BNE.w checkclash__next                                  ;not found
00022D70 <AmiBlitz3.ab3@6234>     CMPA.l A2,A4
00022D74 <AmiBlitz3.ab3@6235>     BEQ.w checkclash__l1
00022D76 <AmiBlitz3.ab3@6236>     MOVE.l a1,a5
00022D7A <AmiBlitz3.ab3@6237> BRA clasherr
00022D7E <AmiBlitz3.ab3@6240> BRA.w checkclash__more
00022D80 <AmiBlitz3.ab3@6243>     MOVEA.l (A4),A4
00022D84 <AmiBlitz3.ab3@6244> BRA.w checkclash__loop
00022D86 <AmiBlitz3.ab3@6247> RTS
00022D8C <AmiBlitz3.ab3@6251>   MOVEA.l _dosbase,A6
00022D92 <AmiBlitz3.ab3@6253>   LEA newtype_string,A0
00022D98 <AmiBlitz3.ab3@6254>   MOVE.l A0,lastrestype
00022D9A <AmiBlitz3.ab3@6255>   CLR.l (A0)
00022DA0 <AmiBlitz3.ab3@6257>   LEA macrobase,A0
00022DA6 <AmiBlitz3.ab3@6258>   MOVE.l A0,currentmacroaddr
00022DA8 <AmiBlitz3.ab3@6259>   CLR.l (A0)
00022DAE <AmiBlitz3.ab3@6261>   LEA labelbase,A0
00022DB4 <AmiBlitz3.ab3@6262>   MOVE.l A0,currentlabeladdr
00022DB6 <AmiBlitz3.ab3@6263>   CLR.l (A0)
00022DBC <AmiBlitz3.ab3@6264>   CLR.w rescnt
00022DF4 <AmiBlitz3.ab3@6268>   !ComData_SetB{comByte_DebugMode,debugmode}
00022DFA <AmiBlitz3.ab3@6271>   LEA residents_table,A2
00022DFC <AmiBlitz3.ab3@6272>   MOVEQ.l #$07,D2
00022E00 <AmiBlitz3.ab3@6275>      MOVE.l $40(A2),D1
00022E04 <AmiBlitz3.ab3@6276>      BEQ.w free_residents__next
00022E08 <AmiBlitz3.ab3@6277>       CLR.l $40(A2)
00022E0E <AmiBlitz3.ab3@6278>       MOVEA.l _dosbase,A6
00022E12 <AmiBlitz3.ab3@6279>       JSR _UnLoadSeg(A6)
00022E16 <AmiBlitz3.ab3@6282>      LEA ResidentEntryStep(A2),A2   ; $44
00022E1A <AmiBlitz3.ab3@6283>    DBF D2,free_residents__loop
00022E1C <AmiBlitz3.ab3@6285> RTS
00022E1E <AmiBlitz3.ab3@6289>   MOVE.w (A3)+,D1
00022E22 <AmiBlitz3.ab3@6290>   BEQ.w JL_0_5A60
00022E28 <AmiBlitz3.ab3@6291>   MOVEA.l currentlabeladdr,A2
00022E2A <AmiBlitz3.ab3@6292>   MOVE.l A3,(A2)
00022E2C <AmiBlitz3.ab3@6293>   SUBQ.w #1,D1
00022E2E <AmiBlitz3.ab3@6296>     MOVEA.l A3,A2
00022E30 <AmiBlitz3.ab3@6297>     MOVEA.l (A3),A3
00022E34 <AmiBlitz3.ab3@6298>   DBF D1,JL_0_5A42
00022E36 <AmiBlitz3.ab3@6300>   CLR.l (a2)                                               ;bugfix for object
00022E3C <AmiBlitz3.ab3@6301>   MOVE.l A2,currentlabeladdr
00022E3E <AmiBlitz3.ab3@6302>   MOVEA.l A2,A3
00022E40 <AmiBlitz3.ab3@6303>   MOVEQ.l #$00,D0
00022E44 <AmiBlitz3.ab3@6304>   MOVE.b $12(A3),D0
00022E46 <AmiBlitz3.ab3@6305>   ADDQ.w #1,D0
00022E4A <AmiBlitz3.ab3@6306>   BCLR #$0,D0
00022E4C <AmiBlitz3.ab3@6307>   ADDA.w D0,A3
00022E4E <AmiBlitz3.ab3@6310> RTS
00022E50 <AmiBlitz3.ab3@6314>   MOVE.w (A3)+,D1
00022E54 <AmiBlitz3.ab3@6315>   BEQ.w JL_0_5A9C
00022E5A <AmiBlitz3.ab3@6317>   MOVEA.l currentmacroaddr,A2
00022E5C <AmiBlitz3.ab3@6318>   MOVE.l A3,(A2)
00022E5E <AmiBlitz3.ab3@6319>   SUBQ.w #1,D1
00022E60 <AmiBlitz3.ab3@6322>     MOVEA.l A3,A2
00022E62 <AmiBlitz3.ab3@6323>     MOVEA.l (A3),A3
00022E66 <AmiBlitz3.ab3@6324>   DBF D1,JL_0_5A72
00022E6C <AmiBlitz3.ab3@6326>   MOVE.l A2,currentmacroaddr
00022E6E <AmiBlitz3.ab3@6327>   MOVEA.l A2,A3
00022E70 <AmiBlitz3.ab3@6328>   MOVEQ.l #$00,D0
00022E74 <AmiBlitz3.ab3@6329>   MOVE.b $C(A3),D0
00022E76 <AmiBlitz3.ab3@6330>   ADDQ.w #1,D0
00022E7A <AmiBlitz3.ab3@6331>   BCLR #$0,D0
00022E7E <AmiBlitz3.ab3@6332>   MOVE.w $8(A3),D1
00022E80 <AmiBlitz3.ab3@6333>   ADDQ.w #1,D1
00022E84 <AmiBlitz3.ab3@6334>   BCLR #$0,D1
00022E86 <AmiBlitz3.ab3@6335>   ADDA.w D0,A3
00022E88 <AmiBlitz3.ab3@6336>   ADDA.w D1,A3
00022E8A <AmiBlitz3.ab3@6339> RTS
00022E8C <AmiBlitz3.ab3@6343>   MOVE.w (A3)+,D1
00022E90 <AmiBlitz3.ab3@6344>   BEQ.w JL_0_5B38
00022E92 <AmiBlitz3.ab3@6345>   MOVE.w D1,-(A7)
00022E94 <AmiBlitz3.ab3@6346>   SUBQ.w #1,D1
00022E9A <AmiBlitz3.ab3@6347>   MOVEA.l lastrestype,A2
00022E9C <AmiBlitz3.ab3@6348>   MOVE.l A2,-(A7)
00022E9E <AmiBlitz3.ab3@6351>       MOVE.l (A3),D0
00022EA2 <AmiBlitz3.ab3@6352>       BEQ.w JL_0_5ABC
00022EA4 <AmiBlitz3.ab3@6353>       MOVEA.l D0,A3
00022EA8 <AmiBlitz3.ab3@6354> BRA.w JL_0_5AB0
00022EAC <AmiBlitz3.ab3@6357>       MOVE.b $E(A3),D0
00022EAE <AmiBlitz3.ab3@6358>       ADDQ.w #1,D0
00022EB2 <AmiBlitz3.ab3@6359>       BCLR #$0,D0
00022EB4 <AmiBlitz3.ab3@6360>       ADDA.w D0,A3
00022EB6 <AmiBlitz3.ab3@6361>       MOVE.l A3,(A2)
00022EB8 <AmiBlitz3.ab3@6362>       MOVEA.l A3,A2
00022EBA <AmiBlitz3.ab3@6363>       MOVEQ.l #$00,D0
00022EBE <AmiBlitz3.ab3@6364>       MOVE.b $A(A3),D0
00022EC0 <AmiBlitz3.ab3@6365>       ADDQ.w #1,D0
00022EC4 <AmiBlitz3.ab3@6366>       BCLR #$0,D0
00022EC6 <AmiBlitz3.ab3@6367>       ADDA.w D0,A3
00022ECA <AmiBlitz3.ab3@6368>   DBF D1,JL_0_5AB0
00022ECC <AmiBlitz3.ab3@6370>   MOVEA.l (A7)+,A0
00022ECE <AmiBlitz3.ab3@6371>   MOVEA.l (A0),A0
00022ED2 <AmiBlitz3.ab3@6374>     CMPA.w #$0,A0
00022ED6 <AmiBlitz3.ab3@6375>     BEQ.w JL_0_5B2A
00022EDA <AmiBlitz3.ab3@6376>     MOVEA.l $4(A0),A1
00022EDE <AmiBlitz3.ab3@6379>     CMPA.w #$0,A1
00022EE2 <AmiBlitz3.ab3@6380>     BEQ.w JL_0_5B24
00022EE6 <AmiBlitz3.ab3@6381>     MOVE.w $A(A1),D0
00022EEC <AmiBlitz3.ab3@6382>     MOVEA.l newtypebase,A4
00022EF0 <AmiBlitz3.ab3@6383>     CMP.w #$7,D0
00022EF4 <AmiBlitz3.ab3@6384>     BCS.w JL_0_5B0E
00022EFA <AmiBlitz3.ab3@6385>     SUB.w rescnt,D0
00022EFC <AmiBlitz3.ab3@6388>     SUBQ.w #1,D0
00022F00 <AmiBlitz3.ab3@6389>     BMI.w JL_0_5B1A
00022F02 <AmiBlitz3.ab3@6392>        MOVEA.l (A4),A4
00022F06 <AmiBlitz3.ab3@6393>   DBF D0,JL_0_5B14
00022F0A <AmiBlitz3.ab3@6396>     MOVE.l A4,$A(A1)
00022F0C <AmiBlitz3.ab3@6397>     MOVEA.l (A1),A1
00022F10 <AmiBlitz3.ab3@6398> BRA.w JL_0_5AEE
00022F12 <AmiBlitz3.ab3@6401>     MOVEA.l (A0),A0
00022F16 <AmiBlitz3.ab3@6402> BRA.w JL_0_5AE2
00022F18 <AmiBlitz3.ab3@6405>   MOVE.w (A7)+,D0
00022F1E <AmiBlitz3.ab3@6406>   ADD.w D0,rescnt
00022F24 <AmiBlitz3.ab3@6407>   MOVE.l A2,lastrestype
00022F26 <AmiBlitz3.ab3@6410> RTS
00022F2C <AmiBlitz3.ab3@6414>   LEA tokens,A0
00022F30 <AmiBlitz3.ab3@6415>   MOVE.w #$003A,D0                                         ; $003A : 58 dec
00022F32 <AmiBlitz3.ab3@6418>     MOVEA.l (A0),A0
00022F36 <AmiBlitz3.ab3@6419>   DBF D0,JL_0_5BD0
00022F3C <AmiBlitz3.ab3@6421>   MOVEA.l #asmpnts,A1                                      ;create tokentab
00022F40 <AmiBlitz3.ab3@6422>   MOVE.w #$0076,D0                                         ; $0076 : 118 dec
00022F44 <AmiBlitz3.ab3@6425>       LEA $6(A0),A2
00022F46 <AmiBlitz3.ab3@6428>         TST.b (A2)+
00022F4A <AmiBlitz3.ab3@6429>       BNE.w JL_0_5BE4
00022F4C <AmiBlitz3.ab3@6432>         TST.b (A2)+
00022F50 <AmiBlitz3.ab3@6433>       BNE.w JL_0_5BEA
00022F52 <AmiBlitz3.ab3@6435>       ADDQ.w #1,A2
00022F54 <AmiBlitz3.ab3@6436>       EXG.l D1,A2
00022F58 <AmiBlitz3.ab3@6437>       BCLR #$0,D1
00022F5A <AmiBlitz3.ab3@6438>       EXG.l D1,A2
00022F5C <AmiBlitz3.ab3@6439>       MOVE.l A2,(A1)+
00022F5E <AmiBlitz3.ab3@6440>       MOVEA.l (A0),A0
00022F62 <AmiBlitz3.ab3@6441>   DBF D0,JL_0_5BE0
00022F64 <AmiBlitz3.ab3@6442> RTS
00022F68 <AmiBlitz3.ab3@6446>   BSR.w asmconst
00022F6A <AmiBlitz3.ab3@6447>   MOVEQ.l #$0B,D5
00022F6C <AmiBlitz3.ab3@6448> RTS
00022F6E <AmiBlitz3.ab3@6451> unmove:  Ds.w 1
00022F72 <AmiBlitz3.ab3@6455>   MOVE.w #$48E7,D1
00022F76 <AmiBlitz3.ab3@6456>   BSR.w writeword                                          ;movem.l -(a7)
00022F7A <AmiBlitz3.ab3@6457>   MOVE.w #$000F,D2
00022F7C <AmiBlitz3.ab3@6458>   SUB.w D4,D2
00022F7E <AmiBlitz3.ab3@6459>   MOVEQ.l #-$01,D1
00022F80 <AmiBlitz3.ab3@6460>   BCLR D2,D1
00022F84 <AmiBlitz3.ab3@6461>   BSR.w writeword
00022F86 <AmiBlitz3.ab3@6462>   MOVEQ.l #-$01,D1
00022F88 <AmiBlitz3.ab3@6463>   BCLR D4,D1
00022F8E <AmiBlitz3.ab3@6464>   MOVE.w D1,unmove
00022F90 <AmiBlitz3.ab3@6465> RTS
00022F94 <AmiBlitz3.ab3@6469>   MOVE.w #$4CDF,D1
00022F98 <AmiBlitz3.ab3@6470>   BSR.w writeword
00022F9C <AmiBlitz3.ab3@6471>   MOVE.w unmove(PC),D1
00022FA0 <AmiBlitz3.ab3@6472> BRA.w writeword
00022FA4 <AmiBlitz3.ab3@6485>   BSR.w JL_0_5D22
00022FA8 <AmiBlitz3.ab3@6486>   CMP.w #$2C,D0                                            ;#','
00022FAC <AmiBlitz3.ab3@6487>    BNE.w syntaxerr
00022FB2 <AmiBlitz3.ab3@6488>   MOVE.l #$48E7FFFE,D1                                     ;movem to stack
00022FB6 <AmiBlitz3.ab3@6489>    BSR.w writelong
00022FB8 <AmiBlitz3.ab3@6490>   MOVE.w D4,D1
00022FBC <AmiBlitz3.ab3@6491>   ORI.w #$2F00,D1
00022FC0 <AmiBlitz3.ab3@6492>    BSR.w writeword
00022FC4 <AmiBlitz3.ab3@6493>    BSR.w get1bytemain
00022FC8 <AmiBlitz3.ab3@6494>    BSR.w getparameter
00022FCC <AmiBlitz3.ab3@6495>    BSR.w JL_0_8E3C
00022FD0 <AmiBlitz3.ab3@6496>    BSR.w calcvar
00022FD4 <AmiBlitz3.ab3@6497>    BTST #$E,D2
00022FD8 <AmiBlitz3.ab3@6498>    BEQ.w JL_0_5C80
00022FDC <AmiBlitz3.ab3@6501>    MOVE.b #$3,D2
00022FE0 <AmiBlitz3.ab3@6502> BRA.w JL_0_5C8E
00022FE2 <AmiBlitz3.ab3@6505>   TST.b D2
00022FE6 <AmiBlitz3.ab3@6506>    BEQ.w JL_0_5C78
00022FEA <AmiBlitz3.ab3@6507>   CMP.b #$7,D2
00022FEE <AmiBlitz3.ab3@6508>    BEQ.w JL_0_5C78
00022FF2 <AmiBlitz3.ab3@6511>   BTST #$F,D2
00022FF6 <AmiBlitz3.ab3@6512>    BNE.w JL_0_5CA4
00022FFA <AmiBlitz3.ab3@6513>   MOVE.w #$45ED,D1                                         ;lea x(a5),a2
00022FFE <AmiBlitz3.ab3@6514>    BSR.w writeword
00023000 <AmiBlitz3.ab3@6515>   MOVE.w D3,D1
00023004 <AmiBlitz3.ab3@6516>    BSR.w writeword
00023008 <AmiBlitz3.ab3@6519>   MOVE.w #$201F,D1                                         ;move.l (a7)+,d0
0002300C <AmiBlitz3.ab3@6520>    BSR.w writeword
00023010 <AmiBlitz3.ab3@6521>   MOVE.w #$1480,D1
00023014 <AmiBlitz3.ab3@6522>   CMP.b #$1,D2
00023018 <AmiBlitz3.ab3@6523>    BEQ.w JL_0_5CC8
0002301C <AmiBlitz3.ab3@6524>   EORI.w #$3000,D1
00023020 <AmiBlitz3.ab3@6525>   CMP.b #$2,D2
00023024 <AmiBlitz3.ab3@6526>    BNE.w JL_0_5CC8
00023028 <AmiBlitz3.ab3@6527>   ORI.w #$1000,D1
0002302C <AmiBlitz3.ab3@6530>   BSR.w writeword
00023032 <AmiBlitz3.ab3@6531>   MOVE.l #$4CDF7FFF,D1
00023036 <AmiBlitz3.ab3@6532> BRA.w writelong
0002303A <AmiBlitz3.ab3@6536>   BSR.w JL_0_5D22
0002303E <AmiBlitz3.ab3@6537>   CMP.w #$2C,D0
00023042 <AmiBlitz3.ab3@6538>    BNE.w syntaxerr
00023046 <AmiBlitz3.ab3@6539>    BSR.w regmovems
00023048 <AmiBlitz3.ab3@6540>   MOVE.w D4,-(A7)
0002304A <AmiBlitz3.ab3@6541>   MOVEQ.l #$03,D2
0002304E <AmiBlitz3.ab3@6542>    BSR.w eval
00023050 <AmiBlitz3.ab3@6543>   MOVE.w (A7)+,D1
00023054 <AmiBlitz3.ab3@6544>    BEQ.w JL_0_5D1A
00023058 <AmiBlitz3.ab3@6545>   CMP.w #$8,D1
0002305C <AmiBlitz3.ab3@6546>    BCC.w JL_0_5D0C
0002305E <AmiBlitz3.ab3@6547>   LSL.w #8,D1
00023060 <AmiBlitz3.ab3@6548>   LSL.w #1,D1
00023064 <AmiBlitz3.ab3@6549>   ORI.w #$2000,D1
00023068 <AmiBlitz3.ab3@6550>    BSR.w writeword
0002306C <AmiBlitz3.ab3@6551> BRA.w JL_0_5D1A
0002306E <AmiBlitz3.ab3@6554>   SUBQ.w #8,D1
00023070 <AmiBlitz3.ab3@6555>   LSL.w #8,D1
00023072 <AmiBlitz3.ab3@6556>   LSL.w #1,D1
00023076 <AmiBlitz3.ab3@6557>   ORI.w #$2040,D1
0002307A <AmiBlitz3.ab3@6558>   BSR.w writeword
0002307E <AmiBlitz3.ab3@6561> BRA.w dounmove
00023082 <AmiBlitz3.ab3@6565>   BSR.w get1bytemain
00023086 <AmiBlitz3.ab3@6568>   ORI.w #$20,D0
0002308A <AmiBlitz3.ab3@6569>   CMP.w #$64,D0
0002308E <AmiBlitz3.ab3@6570>    BEQ.w JL_0_5D4E
00023092 <AmiBlitz3.ab3@6571>   CMP.w #$61,D0
00023096 <AmiBlitz3.ab3@6572>    BNE.w syntaxerr
0002309A <AmiBlitz3.ab3@6573>    BSR.w JL_0_5D4E
0002309C <AmiBlitz3.ab3@6574>   ADDQ.w #8,D4
0002309E <AmiBlitz3.ab3@6575> RTS
000230CA <AmiBlitz3.ab3@6579>   !fget                                                   ;bsr.w get1bytemain
000230CE <AmiBlitz3.ab3@6581>   ORI.w #$20,D0
000230D2 <AmiBlitz3.ab3@6584>   CMP.w #$61,D0
000230D6 <AmiBlitz3.ab3@6585>   BNE.w syntaxerr
00023102 <AmiBlitz3.ab3@6588>   !fget                                                    ;bsr.w get1bytemain
00023106 <AmiBlitz3.ab3@6589>   SUBI.w #$30,D0
0002310A <AmiBlitz3.ab3@6590>    BMI.w syntaxerr
0002310E <AmiBlitz3.ab3@6591>   CMP.w #$7,D0
00023112 <AmiBlitz3.ab3@6592>    BHI.w syntaxerr
00023114 <AmiBlitz3.ab3@6593>   MOVE.w D0,D4
00023140 <AmiBlitz3.ab3@6594>   !fget
00023142 <AmiBlitz3.ab3@6595> RTS                                                        ;bra.w get1bytemain
00023144 <AmiBlitz3.ab3@6599>   ADDQ.w #8,D4
00023146 <AmiBlitz3.ab3@6602>   MOVEQ.l #$00,D5
0002314A <AmiBlitz3.ab3@6603>   SUBI.w #$30,D4
0002314E <AmiBlitz3.ab3@6606>   CMP.w #$2D,D0
00023152 <AmiBlitz3.ab3@6607>    BEQ.w JL_0_5D9E
00023156 <AmiBlitz3.ab3@6608>   CMP.w #$2F,D0
0002315A <AmiBlitz3.ab3@6609>    BEQ.w JL_0_5D8C
0002315E <AmiBlitz3.ab3@6610> BRA.w syntaxerr
00023160 <AmiBlitz3.ab3@6613>   BSET D4,D5
00023162 <AmiBlitz3.ab3@6616>   MOVE.w D5,D4
00023164 <AmiBlitz3.ab3@6617>   MOVEQ.l #$0F,D5
00023166 <AmiBlitz3.ab3@6618> RTS
00023168 <AmiBlitz3.ab3@6621>   BSET D4,D5
0002316C <AmiBlitz3.ab3@6622>   BSR.w JL_0_5D1E
0002317E <AmiBlitz3.ab3@6623>   !compare3                                                ;bsr.w JL_0_5FC0
00023182 <AmiBlitz3.ab3@6624>   BNE.w JL_0_5D70
00023186 <AmiBlitz3.ab3@6625> BRA.w JL_0_5D84
00023188 <AmiBlitz3.ab3@6628>   MOVE.w D4,D1
0002318C <AmiBlitz3.ab3@6629>    BSR.w JL_0_5D1E
0002318E <AmiBlitz3.ab3@6630>   CMP.w D4,D1
00023192 <AmiBlitz3.ab3@6631>    BLS.w JL_0_5DAC
00023194 <AmiBlitz3.ab3@6632>   EXG.l D4,D1
00023196 <AmiBlitz3.ab3@6635>   BSET D1,D5
00023198 <AmiBlitz3.ab3@6636>   ADDQ.w #1,D1
0002319A <AmiBlitz3.ab3@6637>   CMP.w D4,D1
0002319E <AmiBlitz3.ab3@6638>    BLS.w JL_0_5DAC
000231B0 <AmiBlitz3.ab3@6639>   !compare3                                                ;bsr.w JL_0_5FC0
000231B4 <AmiBlitz3.ab3@6640>   BNE.w JL_0_5D70
000231B8 <AmiBlitz3.ab3@6641> BRA.w JL_0_5D86
000231BA <AmiBlitz3.ab3@6644>   MOVEA.l A5,A4                                            ;bsr.w get1bytemain
000231E6 <AmiBlitz3.ab3@6645>    !fget
000231EA <AmiBlitz3.ab3@6646>   CMP.w #$23,D0
000231EE <AmiBlitz3.ab3@6647>    BEQ.w getimm
000231F2 <AmiBlitz3.ab3@6648>   CMP.w #$28,D0
000231F6 <AmiBlitz3.ab3@6649>    BEQ.w JL_0_5DFE
000231FA <AmiBlitz3.ab3@6650>   CMP.w #$2D,D0
000231FE <AmiBlitz3.ab3@6651>    BNE.w JL_0_5E20
0002322A <AmiBlitz3.ab3@6652>    !fget                                                   ;bsr.w get1bytemain       -(
0002322E <AmiBlitz3.ab3@6653>   CMP.w #$28,D0
00023232 <AmiBlitz3.ab3@6654>    BNE.w JL_0_5F4E
00023236 <AmiBlitz3.ab3@6655>    BSR.w JL_0_5D3E
0002323A <AmiBlitz3.ab3@6656>   CMP.w #$29,D0
0002323E <AmiBlitz3.ab3@6657>    BNE.w syntaxerr
00023240 <AmiBlitz3.ab3@6658>   MOVEQ.l #$04,D5
0002326C <AmiBlitz3.ab3@6659>   !fget                                                    ;bsr.w get1bytemain
0002326E <AmiBlitz3.ab3@6660> RTS
00023272 <AmiBlitz3.ab3@6664>   BSR.w JL_0_5D3E
00023276 <AmiBlitz3.ab3@6665>   CMP.w #$29,D0
0002327A <AmiBlitz3.ab3@6666>    BNE.w syntaxerr
000232A6 <AmiBlitz3.ab3@6667>   !fget                                                    ;bsr.w get1bytemain
000232AA <AmiBlitz3.ab3@6668>   CMP.w #$2B,D0
000232AE <AmiBlitz3.ab3@6669>    BEQ.w JL_0_5E1A
000232B0 <AmiBlitz3.ab3@6670>   MOVEQ.l #$02,D5
000232B2 <AmiBlitz3.ab3@6671> RTS
000232B4 <AmiBlitz3.ab3@6675>   MOVEQ.l #$03,D5
000232E0 <AmiBlitz3.ab3@6676>   !fget                                                    ;bra.w get1bytemain
000232E2 <AmiBlitz3.ab3@6677> RTS
000232E6 <AmiBlitz3.ab3@6681>   ORI.w #$20,D0
000232E8 <AmiBlitz3.ab3@6682>   MOVE.w D0,D1                                            
00023314 <AmiBlitz3.ab3@6683>    !fget                                                   ;bsr.w get1bytemain
00023318 <AmiBlitz3.ab3@6684>   CMP.w #$64,D1
0002331C <AmiBlitz3.ab3@6685>    BNE.w JL_0_5E6C
00023320 <AmiBlitz3.ab3@6686>   CMP.w #$30,D0
00023324 <AmiBlitz3.ab3@6687>    BCS.w JL_0_5EAE
00023328 <AmiBlitz3.ab3@6688>   CMP.w #$37,D0
0002332C <AmiBlitz3.ab3@6689>    BHI.w JL_0_5EAE
0002332E <AmiBlitz3.ab3@6690>   MOVE.w D0,D4
0002335A <AmiBlitz3.ab3@6691>    !fget                                                   ;bsr.w get1bytemain
0002336C <AmiBlitz3.ab3@6692>    !compare3                                               ;bsr.w JL_0_5FC0
00023370 <AmiBlitz3.ab3@6693>    BEQ.w JL_0_5E64
00023374 <AmiBlitz3.ab3@6694>   CMP.w #$2D,D0
00023378 <AmiBlitz3.ab3@6695>    BEQ.w JL_0_5D6A
0002337C <AmiBlitz3.ab3@6696>   CMP.w #$2F,D0
00023380 <AmiBlitz3.ab3@6697>    BEQ.w JL_0_5D6A
00023384 <AmiBlitz3.ab3@6698> BRA.w JL_0_5EB8
00023386 <AmiBlitz3.ab3@6701>   MOVEQ.l #$00,D5
0002338A <AmiBlitz3.ab3@6702>   SUBI.w #$30,D4
0002338C <AmiBlitz3.ab3@6703> RTS
00023390 <AmiBlitz3.ab3@6706>    CMP.w #$61,D1
00023394 <AmiBlitz3.ab3@6707>    BNE.w JL_0_5EAE
00023398 <AmiBlitz3.ab3@6708>   CMP.w #$30,D0
0002339C <AmiBlitz3.ab3@6709>    BCS.w JL_0_5EAE
000233A0 <AmiBlitz3.ab3@6710>   CMP.w #$37,D0
000233A4 <AmiBlitz3.ab3@6711>    BHI.w JL_0_5EAE
000233A6 <AmiBlitz3.ab3@6712>   MOVE.w D0,D4
000233D2 <AmiBlitz3.ab3@6713>    !fget                                                   ;bsr.w get1bytemain
000233E4 <AmiBlitz3.ab3@6714>    !compare3                                               ;bsr.w JL_0_5FC0
000233E8 <AmiBlitz3.ab3@6715>    BEQ.w JL_0_5EA6
000233EC <AmiBlitz3.ab3@6716>   CMP.w #$2D,D0
000233F0 <AmiBlitz3.ab3@6717>    BEQ.w JL_0_5D68                                         ;movem
000233F4 <AmiBlitz3.ab3@6718>   CMP.w #$2F,D0
000233F8 <AmiBlitz3.ab3@6719>    BEQ.w JL_0_5D68
000233FC <AmiBlitz3.ab3@6720> BRA.w JL_0_5EB8
000233FE <AmiBlitz3.ab3@6723>   MOVEQ.l #1,d5
00023402 <AmiBlitz3.ab3@6724>   SUBI.w #$30,D4
00023406 <AmiBlitz3.ab3@6726> BRA 'l10
00023408 <AmiBlitz3.ab3@6727>   ADDQ.w #8,d4
0002340A <AmiBlitz3.ab3@6728>   MOVEQ #0,d5
0002340C <AmiBlitz3.ab3@6729>   BSET d4,d5
0002340E <AmiBlitz3.ab3@6730>   MOVE.w d5,d4
00023410 <AmiBlitz3.ab3@6731>   MOVEQ.l #$0f,D5                                          ;01
00023412 <AmiBlitz3.ab3@6734> RTS
00023416 <AmiBlitz3.ab3@6738>   ORI.w #$20,D0
00023418 <AmiBlitz3.ab3@6739>   MOVE.w D0,D4
00023444 <AmiBlitz3.ab3@6740>    !fget                                                   ;bsr.w get1bytemain
00023456 <AmiBlitz3.ab3@6743>   !compare3                                                ;bsr.w JL_0_5FC0
0002345A <AmiBlitz3.ab3@6744>    BNE.w JL_0_5EF2
0002345E <AmiBlitz3.ab3@6745>   CMP.w #$73,D1
00023462 <AmiBlitz3.ab3@6746>    BNE.w JL_0_5EF2
00023466 <AmiBlitz3.ab3@6747>   CMP.w #$70,D4
0002346A <AmiBlitz3.ab3@6748>    BNE.w JL_0_5EDE
0002347C <AmiBlitz3.ab3@6749>    !compare3                                               ;bsr.w JL_0_5FC0
00023480 <AmiBlitz3.ab3@6750>    BNE.w JL_0_5F4E
00023482 <AmiBlitz3.ab3@6751>   MOVEQ.l #$07,D4
00023484 <AmiBlitz3.ab3@6752>   MOVEQ.l #$01,D5
00023486 <AmiBlitz3.ab3@6753> RTS
0002348A <AmiBlitz3.ab3@6757>   CMP.w #$72,D4
0002348E <AmiBlitz3.ab3@6758>    BNE.w JL_0_5F4E
000234A0 <AmiBlitz3.ab3@6759>    !compare3                                               ;bsr.w JL_0_5FC0
000234A4 <AmiBlitz3.ab3@6760>    BNE.w JL_0_5F4E
000234A6 <AmiBlitz3.ab3@6761>   MOVEQ.l #$0D,D5
000234A8 <AmiBlitz3.ab3@6762> RTS
000234AC <AmiBlitz3.ab3@6766>   ORI.w #$20,D0
000234B0 <AmiBlitz3.ab3@6767>   CMP.w #$63,D1
000234B4 <AmiBlitz3.ab3@6768>    BNE.w JL_0_5F22
000234B8 <AmiBlitz3.ab3@6769>   CMP.w #$63,D4
000234BC <AmiBlitz3.ab3@6770>    BNE.w JL_0_5F4E
000234C0 <AmiBlitz3.ab3@6771>   CMP.w #$72,D0
000234C4 <AmiBlitz3.ab3@6772>    BNE.w JL_0_5F4E
000234C8 <AmiBlitz3.ab3@6773>    BSR.w get1bytemain                                      ;??wy not !fget
000234CC <AmiBlitz3.ab3@6774>    BEQ.w JL_0_5F1E
000234D0 <AmiBlitz3.ab3@6775>   CMP.w #$2C,D0
000234D4 <AmiBlitz3.ab3@6776>    BNE.w JL_0_5F4E
000234D6 <AmiBlitz3.ab3@6779>   MOVEQ.l #$0C,D5
000234D8 <AmiBlitz3.ab3@6780> RTS
000234DC <AmiBlitz3.ab3@6784>   CMP.w #$75,D1
000234E0 <AmiBlitz3.ab3@6785>    BNE.w JL_0_5F4E
000234E4 <AmiBlitz3.ab3@6786>   CMP.w #$73,D4
000234E8 <AmiBlitz3.ab3@6787>    BNE.w JL_0_5F4E
000234EC <AmiBlitz3.ab3@6788>   CMP.w #$70,D0
000234F0 <AmiBlitz3.ab3@6789>    BNE.w JL_0_5F4E
000234F4 <AmiBlitz3.ab3@6790>    BSR.w get1bytemain                                      ;??wy not !fget
000234F8 <AmiBlitz3.ab3@6791>    BEQ.w JL_0_5F4A
000234FC <AmiBlitz3.ab3@6792>   CMP.w #$2C,D0
00023500 <AmiBlitz3.ab3@6793>    BNE.w JL_0_5F4E
00023502 <AmiBlitz3.ab3@6796>   MOVEQ.l #$0E,D5
00023504 <AmiBlitz3.ab3@6797> RTS
00023506 <AmiBlitz3.ab3@6801>   MOVEA.l A4,A5
0002350A <AmiBlitz3.ab3@6802>    BSR.w asmconst
0002351C <AmiBlitz3.ab3@6803>    !compare3                                               ;bsr.w JL_0_5FC0
00023520 <AmiBlitz3.ab3@6804>    BEQ.w JL_0_5FB8
00023524 <AmiBlitz3.ab3@6805>   CMP.w #$2E,D0
00023528 <AmiBlitz3.ab3@6806>    BEQ.w JL_0_5FA0
0002352C <AmiBlitz3.ab3@6807>   CMP.w #$28,D0
00023530 <AmiBlitz3.ab3@6808>    BNE.w syntaxerr
00023534 <AmiBlitz3.ab3@6809>    BSR.w get1bytemain                                      ;??wy not !fget
00023538 <AmiBlitz3.ab3@6810>   ORI.w #$20,D0
0002353C <AmiBlitz3.ab3@6811>   CMP.w #$70,D0
00023540 <AmiBlitz3.ab3@6812>    BNE.w JL_0_5F98
00023544 <AmiBlitz3.ab3@6813>    BSR.w get1bytemain                                      ;??wy not !fget
00023548 <AmiBlitz3.ab3@6814>   ORI.w #$20,D0
0002354C <AmiBlitz3.ab3@6815>   CMP.w #$63,D0
00023550 <AmiBlitz3.ab3@6816>    BNE.w syntaxerr
00023554 <AmiBlitz3.ab3@6817>    BSR.w get1bytemain                                      ;??wy not !fget
00023558 <AmiBlitz3.ab3@6818>    BSR.w JL_0_5FD4
0002355A <AmiBlitz3.ab3@6819>   ADDQ.w #4,D5
0002355C <AmiBlitz3.ab3@6820> RTS
00023560 <AmiBlitz3.ab3@6824>   BSR.w JL_0_5D46
00023564 <AmiBlitz3.ab3@6825> BRA.w JL_0_5FD4
00023568 <AmiBlitz3.ab3@6829>    BSR.w get1bytemain                                     ;??wy not !fget
0002356C <AmiBlitz3.ab3@6830>   ORI.w #$20,D0
00023570 <AmiBlitz3.ab3@6831>   CMP.w #$77,D0
00023574 <AmiBlitz3.ab3@6832>    BEQ.w JL_0_5FBC
00023578 <AmiBlitz3.ab3@6833>   CMP.w #$6C,D0
0002357C <AmiBlitz3.ab3@6834>    BNE.w syntaxerr
0002357E <AmiBlitz3.ab3@6837>   MOVEQ.l #$08,D5
00023580 <AmiBlitz3.ab3@6838> RTS
00023582 <AmiBlitz3.ab3@6842>   MOVEQ.l #$07,D5
00023584 <AmiBlitz3.ab3@6843> RTS
00023586 <AmiBlitz3.ab3@6847>   TST.w D0
0002358A <AmiBlitz3.ab3@6848>    BEQ.w JL_0_5FD2
0002358E <AmiBlitz3.ab3@6849>   CMP.w #$3A,D0
00023592 <AmiBlitz3.ab3@6850>    BEQ.w JL_0_5FD2
00023596 <AmiBlitz3.ab3@6851>   CMP.w #$2C,D0
00023598 <AmiBlitz3.ab3@6854> RTS
0002359C <AmiBlitz3.ab3@6858>   CMP.w #$2C,D0
000235A0 <AmiBlitz3.ab3@6859>    BNE.w JL_0_6054
000235A4 <AmiBlitz3.ab3@6860>    BSR.w get1bytemain                                      ;??wy not !fget
000235A8 <AmiBlitz3.ab3@6861>   ORI.w #$20,D0
000235AA <AmiBlitz3.ab3@6862>   MOVEQ.l #$00,D1
000235AE <AmiBlitz3.ab3@6863>   CMP.w #$64,D0
000235B2 <AmiBlitz3.ab3@6864>    BEQ.w JL_0_5FFA
000235B6 <AmiBlitz3.ab3@6865>   CMP.w #$61,D0
000235BA <AmiBlitz3.ab3@6866>    BNE.w syntaxerr
000235BE <AmiBlitz3.ab3@6867>   BSET #$F,D1
000235C2 <AmiBlitz3.ab3@6870>    BSR.w get1bytemain                                      ;??wy not !fget
000235C6 <AmiBlitz3.ab3@6871>   SUBI.w #$30,D0
000235CA <AmiBlitz3.ab3@6872>    BMI.w syntaxerr
000235CE <AmiBlitz3.ab3@6873>   CMP.w #$7,D0
000235D2 <AmiBlitz3.ab3@6874>    BHI.w syntaxerr
000235D4 <AmiBlitz3.ab3@6875>   LSL.w #8,D0
000235D6 <AmiBlitz3.ab3@6876>   LSL.w #4,D0
000235D8 <AmiBlitz3.ab3@6877>   OR.w D0,D1
000235DC <AmiBlitz3.ab3@6878>    BSR.w get1bytemain                                      ;??wy not !fget
000235E0 <AmiBlitz3.ab3@6879>   CMP.w #$2E,D0
000235E4 <AmiBlitz3.ab3@6880>    BNE.w JL_0_6040
000235E8 <AmiBlitz3.ab3@6881>    BSR.w get1bytemain                                      ;??wy not !fget
000235EC <AmiBlitz3.ab3@6882>   ORI.w #$20,D0
000235F0 <AmiBlitz3.ab3@6883>   CMP.w #$77,D0
000235F4 <AmiBlitz3.ab3@6884>    BEQ.w JL_0_603C
000235F8 <AmiBlitz3.ab3@6885>   CMP.w #$6C,D0
000235FC <AmiBlitz3.ab3@6886>    BNE.w syntaxerr
00023600 <AmiBlitz3.ab3@6887>   BSET #$B,D1
00023604 <AmiBlitz3.ab3@6890>    BSR.w get1bytemain                                      ;??wy not !fget
00023608 <AmiBlitz3.ab3@6893>    CMP.b #"*",d0                                           ;020 * Mode
0002360C <AmiBlitz3.ab3@6894>             BNE 'l1
00023610 <AmiBlitz3.ab3@6895>             BSR.w get1bytemain                             ;??wy not !fget
00023614 <AmiBlitz3.ab3@6896>             CMP.b #"2",d0
00023618 <AmiBlitz3.ab3@6897>             BNE 'l2
0002361C <AmiBlitz3.ab3@6898>             OR.w #$200,d1
00023620 <AmiBlitz3.ab3@6899> BRA 'l1b
00023624 <AmiBlitz3.ab3@6902>             CMP.b #"4",d0
00023628 <AmiBlitz3.ab3@6903>             BNE 'l3
0002362C <AmiBlitz3.ab3@6904>             OR.w #$400,d1
00023630 <AmiBlitz3.ab3@6905> BRA 'l1b
00023634 <AmiBlitz3.ab3@6908>             CMP.b #"8",d0
00023638 <AmiBlitz3.ab3@6909>             BNE syntaxerr
0002363C <AmiBlitz3.ab3@6910>             OR.w #$600,d1
00023640 <AmiBlitz3.ab3@6913>         BSR.w get1bytemain                                 ;??wy not !fget
00023644 <AmiBlitz3.ab3@6916>   CMP.w #$29,D0
00023648 <AmiBlitz3.ab3@6917>    BNE.w syntaxerr
0002364E <AmiBlitz3.ab3@6918>   MOVE.w D1,extraword
00023650 <AmiBlitz3.ab3@6919>   MOVEQ.l #$06,D5
00023654 <AmiBlitz3.ab3@6920> BRA.w get1bytemain                                         ;??wy not !fget
00023658 <AmiBlitz3.ab3@6924>   CMP.w #")",D0                                            ;")"
0002365C <AmiBlitz3.ab3@6925>    BNE.w errorbracketmiss                                  ; was syntax error
0002365E <AmiBlitz3.ab3@6926>   MOVEQ.l #$05,D5
00023662 <AmiBlitz3.ab3@6927> BRA.w get1bytemain                                         ;??wy not !fget
00023668 <AmiBlitz3.ab3@6934>   MOVEA.l asmbuff,A0
0002366E <AmiBlitz3.ab3@6935>   MOVE.w ininclude,D1
00023674 <AmiBlitz3.ab3@6936>   OR.w inmacro,D1
00023676 <AmiBlitz3.ab3@6937>   MOVE.w D1,(A0)+                                          ;flag!
0002367A <AmiBlitz3.ab3@6938>    BNE.w copyconst
0002367C <AmiBlitz3.ab3@6939>   MOVE.l A5,-(A7)
00023680 <AmiBlitz3.ab3@6940>    BSR.w copyconst
00023686 <AmiBlitz3.ab3@6941>   MOVEA.l asmbuff,A0
0002368A <AmiBlitz3.ab3@6942>   CMP.w #$4,D1
0002368E <AmiBlitz3.ab3@6943>    BLS.w asmconst__leave
00023694 <AmiBlitz3.ab3@6944>   TST.w lc
00023698 <AmiBlitz3.ab3@6945>    BNE.w asmconst__leave
0002369A <AmiBlitz3.ab3@6946>   ADDQ.w #2,A0
0002369C <AmiBlitz3.ab3@6947>   MOVE.l (A7)+,(A0)+
0002369E <AmiBlitz3.ab3@6948>   CLR.b (A0)
000236A6 <AmiBlitz3.ab3@6949>   MOVE.w #$0004,asmlen2                                    ;pointer + 0
000236A8 <AmiBlitz3.ab3@6950> RTS
000236AA <AmiBlitz3.ab3@6954>   NOT.w (A0)
000236AC <AmiBlitz3.ab3@6955>   ADDQ.w #4,A7
000236AE <AmiBlitz3.ab3@6956> RTS
000236B0 <AmiBlitz3.ab3@6959> lc:  Ds.w 1
000236B6 <AmiBlitz3.ab3@6963>   CLR.w lc
000236B8 <AmiBlitz3.ab3@6964>   MOVEQ.l #$00,D1
000236BA <AmiBlitz3.ab3@6967>    ADDQ.w #1,D1                                            ;label name
000236E6 <AmiBlitz3.ab3@6968>    !fget                                                   ;bsr.w get1bytemain
000236EA <AmiBlitz3.ab3@6969>    BEQ.w copyconst__done
000236EE <AmiBlitz3.ab3@6970>    CMP.w #$22,d0
000236F2 <AmiBlitz3.ab3@6971>    BNE.s copyconst__loop_l10
000236F8 <AmiBlitz3.ab3@6972>    NOT.w instringon
000236FC <AmiBlitz3.ab3@6975>    CMP.w #":",d0
00023700 <AmiBlitz3.ab3@6976>    BNE.s copyconst__loop_l11
00023706 <AmiBlitz3.ab3@6977>    TST.w instringon
0002370A <AmiBlitz3.ab3@6978>    BEQ copyconst__done
0002370C <AmiBlitz3.ab3@6981>   TST.w D0
00023710 <AmiBlitz3.ab3@6982>   BPL.w copyconst__notmi
00023712 <AmiBlitz3.ab3@6983>   MOVE.w D0,-(A7)
00023714 <AmiBlitz3.ab3@6984>   LSR.w #8,D0
00023716 <AmiBlitz3.ab3@6985>   MOVE.b D0,(A0)+
00023718 <AmiBlitz3.ab3@6986>   MOVE.w (A7)+,D0
0002371A <AmiBlitz3.ab3@6987>   MOVE.b D0,(A0)+
0002371C <AmiBlitz3.ab3@6988>   ADDQ.w #1,D1
00023720 <AmiBlitz3.ab3@6989> BRA.s copyconst__loop
00023726 <AmiBlitz3.ab3@6992>    TST.w instringon
0002372A <AmiBlitz3.ab3@6993>    BNE.w copyconst__putbyte
00023730 <AmiBlitz3.ab3@6994>    TST.b _dcb
00023734 <AmiBlitz3.ab3@6995>    BNE copyconst__notmi_l10
00023738 <AmiBlitz3.ab3@6996>    CMP.w #$28,D0
0002373C <AmiBlitz3.ab3@6997>    BEQ.w copyconst__done
00023740 <AmiBlitz3.ab3@7000>    CMP.w #$2C,D0
00023744 <AmiBlitz3.ab3@7001>    BEQ.w copyconst__done
00023748 <AmiBlitz3.ab3@7002>    CMP.b #"'",D0
0002374C <AmiBlitz3.ab3@7003>    BNE.w copyconst__putbyte
00023752 <AmiBlitz3.ab3@7004>    MOVE.w D0,lc                                     ;locallabels
00023754 <AmiBlitz3.ab3@7005>    MOVE.l A1,-(A7)
0002375A <AmiBlitz3.ab3@7006>    LEA lastgloballabel,A1
0002375C <AmiBlitz3.ab3@7007>    TST.b (A1)
00023760 <AmiBlitz3.ab3@7008>    BEQ.w nolocerr
00023762 <AmiBlitz3.ab3@7011>   ADDQ.w #1,D1
00023764 <AmiBlitz3.ab3@7012>   MOVE.b (A1)+,(A0)+
00023768 <AmiBlitz3.ab3@7013>    BNE.w copyconst__cloop
0002376A <AmiBlitz3.ab3@7014>   SUBQ.w #1,D1
0002376C <AmiBlitz3.ab3@7015>   SUBQ.w #1,A0
0002376E <AmiBlitz3.ab3@7016>   MOVEA.l (A7)+,A1
00023770 <AmiBlitz3.ab3@7019>   MOVE.b D0,(A0)+
00023774 <AmiBlitz3.ab3@7020> BRA.w copyconst__loop
00023776 <AmiBlitz3.ab3@7023>   CLR.b (A0)
0002377C <AmiBlitz3.ab3@7024>   MOVE.w D1,asmlen2
0002377E <AmiBlitz3.ab3@7025> RTS
00023784 <AmiBlitz3.ab3@7030>   CMP.l #$80ad,d0
00023788 <AmiBlitz3.ab3@7031>   BNE.s 'l12
0002378E <AmiBlitz3.ab3@7032> JMP bssseg
00023794 <AmiBlitz3.ab3@7035>   CMP.l #$807f,d0
00023798 <AmiBlitz3.ab3@7036>     BNE.s 'l13
0002379E <AmiBlitz3.ab3@7037> JMP chipseg
000237A4 <AmiBlitz3.ab3@7040>   ADDQ.l #1,destpointer                                    ;even
000237AC <AmiBlitz3.ab3@7041>   BCLR #$0,destpointer+3
000237B0 <AmiBlitz3.ab3@7042>   SUBI.w #$803C,D0
000237B2 <AmiBlitz3.ab3@7043>   LSL.w #2,D0
000237B8 <AmiBlitz3.ab3@7044>   MOVEA.l #asmpnts,A0
000237BC <AmiBlitz3.ab3@7045>   MOVEA.l $0(A0,D0.W),A0                                   ;begin inline assembler
000237C2 <AmiBlitz3.ab3@7046>   MOVE.w D0,temp1
000237C4 <AmiBlitz3.ab3@7047>   MOVE.l A0,-(A7)
000237C6 <AmiBlitz3.ab3@7048>   MOVEQ.l #$01,D1
000237F2 <AmiBlitz3.ab3@7049>    !fget                                                   ;bsr.w get1bytemain
000237F6 <AmiBlitz3.ab3@7050>   CMP.w #$2E,D0
000237FA <AmiBlitz3.ab3@7051>    BNE.w JL_0_6184
00023826 <AmiBlitz3.ab3@7052>   !fget                                                    ;bsr.w get1bytemain
0002382A <AmiBlitz3.ab3@7053>   ORI.w #$20,D0
0002382E <AmiBlitz3.ab3@7054>   CMP.w #$77,D0                                            ;long
00023832 <AmiBlitz3.ab3@7055>    BEQ.w JL_0_618A
00023836 <AmiBlitz3.ab3@7056>   CMP.w #$62,D0                                            ;byte
0002383A <AmiBlitz3.ab3@7057>    BEQ.w JL_0_617A
0002383E <AmiBlitz3.ab3@7058>   CMP.w #$6C,D0                                            ;word
00023842 <AmiBlitz3.ab3@7059>    BEQ.w JL_0_6196
00023846 <AmiBlitz3.ab3@7060>   CMP.w #"s",d0
0002384A <AmiBlitz3.ab3@7061>   BNE syntaxerr
0002384E <AmiBlitz3.ab3@7062> BRA.w JL_0_617A
00023850 <AmiBlitz3.ab3@7065>   MOVEQ.l #$00,D1
00023854 <AmiBlitz3.ab3@7066>   MOVE.w $8(A0),D0
00023858 <AmiBlitz3.ab3@7067> BRA.w JL_0_619E
0002385A <AmiBlitz3.ab3@7070>   MOVEQ.l #$04,D1
0002385E <AmiBlitz3.ab3@7071> BRA.w JL_0_61AE
00023860 <AmiBlitz3.ab3@7074>   MOVEQ.l #$04,D1
00023864 <AmiBlitz3.ab3@7075>   MOVE.w $8(A0),D0
00023866 <AmiBlitz3.ab3@7076>   LSR.w #4,D0
0002386A <AmiBlitz3.ab3@7077> BRA.w JL_0_619E
0002386C <AmiBlitz3.ab3@7080>   MOVEQ.l #$08,D1
00023870 <AmiBlitz3.ab3@7081>   MOVE.w $8(A0),D0
00023872 <AmiBlitz3.ab3@7082>   LSR.w #8,D0
00023876 <AmiBlitz3.ab3@7085>    ANDI.w #$F,D0
0002387A <AmiBlitz3.ab3@7086>   CMP.w #$F,D0
0002387E <AmiBlitz3.ab3@7087>    BNE.w 'cl60
00023886 <AmiBlitz3.ab3@7090>    CMP.l #"MULS",-6(a0)
0002388A <AmiBlitz3.ab3@7091>    BNE 'c20
00023890 <AmiBlitz3.ab3@7092>    MOVE.l #$4c000800,d1
00023896 <AmiBlitz3.ab3@7093> JMP do32
0002389E <AmiBlitz3.ab3@7096>    CMP.l #"MULU",-6(a0)
000238A2 <AmiBlitz3.ab3@7097>    BNE 'c30
000238A8 <AmiBlitz3.ab3@7098>    MOVE.l #$4c000000,d1
000238AE <AmiBlitz3.ab3@7099> JMP do32
000238B6 <AmiBlitz3.ab3@7102>    CMP.l #"DIVS",-6(a0)
000238BA <AmiBlitz3.ab3@7103>    BNE 'c40
000238C0 <AmiBlitz3.ab3@7104>    MOVE.l #$4c400800,d1
000238C6 <AmiBlitz3.ab3@7105> JMP do32
000238CE <AmiBlitz3.ab3@7108>    CMP.l #"DIVU",-6(a0)
000238D2 <AmiBlitz3.ab3@7109>    BNE 'c50
000238D8 <AmiBlitz3.ab3@7110>    MOVE.l #$4c400000,d1
000238DE <AmiBlitz3.ab3@7111> JMP do32
000238E2 <AmiBlitz3.ab3@7114> BRA illsizeerr
0002390E <AmiBlitz3.ab3@7117>   !fget                                                    ;bsr.w get1bytemain
00023914 <AmiBlitz3.ab3@7120>   MOVE.w D1,asmsize
00023916 <AmiBlitz3.ab3@7121>   MOVEQ.l #-$01,D3
0002391A <AmiBlitz3.ab3@7122>    BSR.w reget
0002391E <AmiBlitz3.ab3@7123>    BEQ.w JL_0_6200
00023928 <AmiBlitz3.ab3@7124>   MOVE.l #ptr_parameterstore,asmbuff
00023932 <AmiBlitz3.ab3@7126>    MOVE.w oldqflag,instringon
00023938 <AmiBlitz3.ab3@7127>   MOVEA.l lastsourcepos,A5
0002393C <AmiBlitz3.ab3@7128>    BSR.w JL_0_5DC2
0002393E <AmiBlitz3.ab3@7129>   MOVE.l D4,D2                                             ;to src
00023940 <AmiBlitz3.ab3@7130>   MOVE.l D5,D3
0002394A <AmiBlitz3.ab3@7131>   MOVE.w asmlen2,asmlen
0002394C <AmiBlitz3.ab3@7132>   MOVEQ.l #-$01,D5
00023956 <AmiBlitz3.ab3@7133>   MOVE.w extraword,extraword2
0002395A <AmiBlitz3.ab3@7134>   CMP.w #$2C,D0                                            ;','
0002395E <AmiBlitz3.ab3@7135>    BNE.w JL_0_6200
00023968 <AmiBlitz3.ab3@7136>   MOVE.l #namebuff2,asmbuff
0002396C <AmiBlitz3.ab3@7137>    BSR.w JL_0_5DC2                                         ;dest
0002396E <AmiBlitz3.ab3@7140>   MOVEA.l (A7)+,A0
00023974 <AmiBlitz3.ab3@7141>   MOVEA.l destpointer,A1
00023976 <AmiBlitz3.ab3@7142>   MOVEA.l A1,A4
00023978 <AmiBlitz3.ab3@7143>   ADDQ.w #2,A1
0002397A <AmiBlitz3.ab3@7144>   MOVE.w (A0),D1
0002397C <AmiBlitz3.ab3@7145>   TST.w D3
00023980 <AmiBlitz3.ab3@7146>    BMI.w JL_0_639E
00023984 <AmiBlitz3.ab3@7147>   MOVE.w $E(A0),D0
00023988 <AmiBlitz3.ab3@7148>    BPL.w JL_0_6264
0002398C <AmiBlitz3.ab3@7149>   BTST #$0,D0
00023990 <AmiBlitz3.ab3@7150>    BEQ.w JL_0_6240
00023994 <AmiBlitz3.ab3@7151>   CMP.w #$1,D5
00023998 <AmiBlitz3.ab3@7152>    BNE.w JL_0_6240
0002399C <AmiBlitz3.ab3@7153>   CMP.w #$E,D3
000239A0 <AmiBlitz3.ab3@7154>    BEQ.w JL_0_6264
000239A6 <AmiBlitz3.ab3@7155>   MOVE.w temp1,D0
000239A8 <AmiBlitz3.ab3@7156>   ADDQ.w #4,D0
000239AC <AmiBlitz3.ab3@7157> BRA.w JL_0_6256
000239B0 <AmiBlitz3.ab3@7160>   BTST #$1,D0
000239B4 <AmiBlitz3.ab3@7161>    BEQ.w JL_0_6264
000239B8 <AmiBlitz3.ab3@7162>   CMP.w #$B,D3
000239BC <AmiBlitz3.ab3@7163>    BNE.w JL_0_6264
000239C2 <AmiBlitz3.ab3@7164>   MOVE.w temp1,D0
000239C4 <AmiBlitz3.ab3@7167>   ADDQ.w #4,D0
000239CA <AmiBlitz3.ab3@7168>   MOVEA.l #asmpnts,A0
000239CE <AmiBlitz3.ab3@7169>   MOVEA.l $0(A0,D0.W),A0
000239D0 <AmiBlitz3.ab3@7170>   MOVE.w (A0),D1
000239DA <AmiBlitz3.ab3@7173>   MOVE.l #ptr_parameterstore,buff1
000239E4 <AmiBlitz3.ab3@7174>   MOVE.l #namebuff2,buff2
000239E8 <AmiBlitz3.ab3@7175>   MOVE.l $A(A0),D0
000239EC <AmiBlitz3.ab3@7176>    BEQ.w JL_0_62DC
000239EE <AmiBlitz3.ab3@7177>   MOVEA.l D0,A3
000239F4 <AmiBlitz3.ab3@7178>   MOVE.w asmsize,D6
000239F6 <AmiBlitz3.ab3@7181>    JSR (A3)
000239FA <AmiBlitz3.ab3@7182>    BPL.w JL_0_629A
000239FE <AmiBlitz3.ab3@7183>   CMP.w #-$2,D0
00023A02 <AmiBlitz3.ab3@7184>    BEQ.w illsizeerr
00023A06 <AmiBlitz3.ab3@7185> BRA.w illeaerr
00023A0A <AmiBlitz3.ab3@7188>   BEQ.w JL_0_62DC
00023A0C <AmiBlitz3.ab3@7189>   EXG.l D2,D4
00023A0E <AmiBlitz3.ab3@7190>   EXG.l D3,D5
00023A14 <AmiBlitz3.ab3@7191>   MOVE.l extraword,D6
00023A16 <AmiBlitz3.ab3@7192>   SWAP D6
00023A1C <AmiBlitz3.ab3@7193>   MOVE.l D6,extraword
00023A26 <AmiBlitz3.ab3@7194>   MOVE.l #namebuff2,buff1
00023A30 <AmiBlitz3.ab3@7195>   MOVE.l #ptr_parameterstore,buff2
00023A36 <AmiBlitz3.ab3@7196>   MOVE.w asmlen,D6
00023A3C <AmiBlitz3.ab3@7197>   MOVE.w asmlen2,D7
00023A42 <AmiBlitz3.ab3@7198>   MOVE.w D6,asmlen2
00023A48 <AmiBlitz3.ab3@7199>   MOVE.w D7,asmlen
00023A52 <AmiBlitz3.ab3@7202>   MOVE.l buff1,asmbuff
00023A56 <AmiBlitz3.ab3@7203>   MOVE.w $E(A0),D0
00023A5A <AmiBlitz3.ab3@7204>    BEQ.w JL_0_6348
00023A5E <AmiBlitz3.ab3@7205>    BMI.w JL_0_6348
00023A62 <AmiBlitz3.ab3@7206>    CMP.w #$7000,d1
00023A66 <AmiBlitz3.ab3@7207>    BNE 'skip
00023A6A <AmiBlitz3.ab3@7208>    CMP.w #$b,d3
00023A6E <AmiBlitz3.ab3@7209>    BNE illeaerr
00023A72 <AmiBlitz3.ab3@7212>    CMP.w #$1,D0
00023A76 <AmiBlitz3.ab3@7213>    BNE.w JL_0_630E
00023A7A <AmiBlitz3.ab3@7214>    CMP.w #$B,D3
00023A7E <AmiBlitz3.ab3@7215>    BNE.w JL_0_6348
00023A82 <AmiBlitz3.ab3@7218>    BSR.w insasm
00023A84 <AmiBlitz3.ab3@7219>   MOVE.w D4,D2
00023A86 <AmiBlitz3.ab3@7220>   MOVE.w D5,D3
00023A8A <AmiBlitz3.ab3@7221> BRA.w JL_0_6364
00023A8E <AmiBlitz3.ab3@7224>    CMP.w #$2,D0
00023A92 <AmiBlitz3.ab3@7225>    BNE.w JL_0_6324
00023A96 <AmiBlitz3.ab3@7226>   CMP.w #$8,D3
00023A9A <AmiBlitz3.ab3@7227>    BNE.w illeaerr
00023A9C <AmiBlitz3.ab3@7228>   MOVEQ.l #$09,D3
00023AA0 <AmiBlitz3.ab3@7229> BRA.w JL_0_6348
00023AA4 <AmiBlitz3.ab3@7232>    CMP.w #$3,D0
00023AA8 <AmiBlitz3.ab3@7233>    BEQ.w JL_0_6302
00023AAC <AmiBlitz3.ab3@7234>   CMP.w #$4,D0
00023AB0 <AmiBlitz3.ab3@7235>    BEQ.w JL_0_6302
00023AB4 <AmiBlitz3.ab3@7236>   CMP.w #$5,D0
00023AB8 <AmiBlitz3.ab3@7237>    BNE.w JL_0_6348
00023ABC <AmiBlitz3.ab3@7238>   CMP.w #$8,D5
00023AC0 <AmiBlitz3.ab3@7239>    BNE.w illeaerr
00023AC2 <AmiBlitz3.ab3@7240>   OR.w D2,D1
00023AC4 <AmiBlitz3.ab3@7241>   MOVEQ.l #$09,D5
00023AC8 <AmiBlitz3.ab3@7244>   MOVE.w $2(A0),D6
00023ACC <AmiBlitz3.ab3@7245>   MOVE.b $6(A0),D7
00023AD0 <AmiBlitz3.ab3@7246>   MOVEM.l D4-D5,-(A7)
00023AD6 <AmiBlitz3.ab3@7247>   MOVE.w extraword2,D4
00023ADA <AmiBlitz3.ab3@7248>    BSR.w doea
00023ADE <AmiBlitz3.ab3@7249>   MOVEM.l (A7)+,D2-D3
00023AE0 <AmiBlitz3.ab3@7250>   TST.w D3
00023AE4 <AmiBlitz3.ab3@7253>     BMI.w JL_0_6392
00023AEA <AmiBlitz3.ab3@7254>   MOVE.w extraword,D4
00023AEE <AmiBlitz3.ab3@7255>   MOVE.w $4(A0),D6
00023AF2 <AmiBlitz3.ab3@7256>   MOVE.b $7(A0),D7
00023AFC <AmiBlitz3.ab3@7257>   MOVE.l buff2,asmbuff
00023B06 <AmiBlitz3.ab3@7258>   MOVE.w asmlen2,asmlen
00023B0A <AmiBlitz3.ab3@7259>    BSR.w doea
00023B0E <AmiBlitz3.ab3@7260> BRA.w JL_0_63AA
00023B12 <AmiBlitz3.ab3@7263>   MOVE.w $4(A0),D0
00023B16 <AmiBlitz3.ab3@7264>    BNE.w illeaerr
00023B1A <AmiBlitz3.ab3@7265> BRA.w JL_0_63AA
00023B1E <AmiBlitz3.ab3@7269>   MOVE.w $2(A0),D0
00023B22 <AmiBlitz3.ab3@7270>   OR.w $4(A0),D0
00023B26 <AmiBlitz3.ab3@7271>    BNE.w illeaerr
00023B2A <AmiBlitz3.ab3@7274>   MOVE.w $8(A0),D0
00023B2E <AmiBlitz3.ab3@7275>   ANDI.w #$F000,D0
00023B32 <AmiBlitz3.ab3@7276>   CMP.w #-$1000,D0
00023B36 <AmiBlitz3.ab3@7277>    BEQ.w JL_0_63D2
00023B38 <AmiBlitz3.ab3@7278>   LSR.w #8,D0
00023B3A <AmiBlitz3.ab3@7279>   LSR.w #4,D0
00023B3E <AmiBlitz3.ab3@7280>   MOVE.w $8(A0),D2
00023B44 <AmiBlitz3.ab3@7281>   MOVE.w asmsize,D3
00023B46 <AmiBlitz3.ab3@7282>   LSR.w D3,D2
00023B4A <AmiBlitz3.ab3@7283>   ANDI.w #$F,D2
00023B4C <AmiBlitz3.ab3@7284>   LSL.w D0,D2
00023B4E <AmiBlitz3.ab3@7285>   OR.w D2,D1
00023B54 <AmiBlitz3.ab3@7288>   CMPA.l destbufferend,A4
00023B58 <AmiBlitz3.ab3@7289>    BCS.w JL_0_63E8
00023B60 <AmiBlitz3.ab3@7291>   MOVE.w #$FFFF,dontwrite
00023B64 <AmiBlitz3.ab3@7292> BRA.w JL_0_63EA
00023B66 <AmiBlitz3.ab3@7295>   MOVE.w D1,(A4)
00023B6C <AmiBlitz3.ab3@7298>   MOVE.l A1,destpointer
00023B6E <AmiBlitz3.ab3@7299> RTS
00023B74 <AmiBlitz3.ab3@7303>   MOVE.l destpointer,-(A7)
00023B7A <AmiBlitz3.ab3@7304>   MOVE.l A1,destpointer
00023B7E <AmiBlitz3.ab3@7305>    BSR.w addoff
00023B84 <AmiBlitz3.ab3@7306>   MOVEA.l destpointer,A1
00023B8A <AmiBlitz3.ab3@7307>   MOVE.l (A7)+,destpointer
00023B8C <AmiBlitz3.ab3@7308> RTS
00023B90 <AmiBlitz3.ab3@7312>   MOVEM.l d2-d6,-(a7)
00023B96 <AmiBlitz3.ab3@7313>   JSR stripspaces
00023B9A <AmiBlitz3.ab3@7314>   CMP.b #"d",(a5)+
00023B9E <AmiBlitz3.ab3@7315>   BNE noreg
00023BA0 <AmiBlitz3.ab3@7316>   MOVE.b (a5)+,d0
00023BA4 <AmiBlitz3.ab3@7317>   CMP.b #$30,d0
00023BA8 <AmiBlitz3.ab3@7318>   BLT noreg
00023BAC <AmiBlitz3.ab3@7319>   CMP.b #$37,d0
00023BB0 <AmiBlitz3.ab3@7320>   BGT noreg
00023BB4 <AmiBlitz3.ab3@7321>   SUB.b #$30,d0
00023BB6 <AmiBlitz3.ab3@7322>   MOVEQ #0,d3
00023BB8 <AmiBlitz3.ab3@7323>   MOVE.b d0,d3                                             ;reg1
00023BBA <AmiBlitz3.ab3@7324>   ASL.l #8,d3
00023BBC <AmiBlitz3.ab3@7325>   ASL.l #8,d3
00023BC2 <AmiBlitz3.ab3@7326>   JSR stripspaces
00023BC6 <AmiBlitz3.ab3@7327>   CMP.b #",",(a5)+
00023BCA <AmiBlitz3.ab3@7328>   BNE noreg
00023BD0 <AmiBlitz3.ab3@7329>   JSR stripspaces
00023BD4 <AmiBlitz3.ab3@7330>   CMP.b #"d",(a5)+
00023BD8 <AmiBlitz3.ab3@7331>   BNE noreg
00023BDA <AmiBlitz3.ab3@7332>   MOVE.b (a5)+,d0
00023BDE <AmiBlitz3.ab3@7333>   CMP.b #$30,d0
00023BE2 <AmiBlitz3.ab3@7334>   BLT noreg
00023BE6 <AmiBlitz3.ab3@7335>   CMP.b #$37,d0
00023BEA <AmiBlitz3.ab3@7336>   BGT noreg
00023BEE <AmiBlitz3.ab3@7337>   SUB.b #$30,d0
00023BF0 <AmiBlitz3.ab3@7338>   MOVEQ #0,d4
00023BF2 <AmiBlitz3.ab3@7339>   MOVE.b d0,d4                                             ;reg2
00023BF4 <AmiBlitz3.ab3@7340>   ASL.l #8,d4
00023BF6 <AmiBlitz3.ab3@7341>   ASL.l #4,d4
00023BF8 <AmiBlitz3.ab3@7342>   OR.b d0,d1
00023BFA <AmiBlitz3.ab3@7343>   OR.l d3,d1
00023BFC <AmiBlitz3.ab3@7344>   OR.l d4,d1
00023C02 <AmiBlitz3.ab3@7345>   JSR writelong
00023C06 <AmiBlitz3.ab3@7346>   MOVEM.l (a7)+,d2-d6
00023C0A <AmiBlitz3.ab3@7347>   MOVEM.l d1/a1-a3,-(a7)
00023C0E <AmiBlitz3.ab3@7348> BRA exit
00023C12 <AmiBlitz3.ab3@7352>   MOVEM.l (a7)+,d2-d6
00023C18 <AmiBlitz3.ab3@7353>   LEA errtext,a0
00023C1A <AmiBlitz3.ab3@7354>   MOVE.l a0,-(a7)
00023C20 <AmiBlitz3.ab3@7355> JMP handle_compileerror
00023C26 <AmiBlitz3.ab3@7364>   MOVE.w dontwrite,D1
00023C2A <AmiBlitz3.ab3@7365>    BNE.w asmfixer__done
00023C32 <AmiBlitz3.ab3@7366>   BTST #$7,make_smallestcode
00023C36 <AmiBlitz3.ab3@7367>    BEQ.w asmfixer__go
00023C3A <AmiBlitz3.ab3@7368>   MOVE.w pass(PC),D1
00023C3E <AmiBlitz3.ab3@7369>    BEQ.w asmfixer__done
00023C44 <AmiBlitz3.ab3@7372>   MOVEA.l templabel,A2                                     ;insert labels in Code
00023C4C <AmiBlitz3.ab3@7373>   MOVE.b #1,curtemplabel
00023C54 <AmiBlitz3.ab3@7374>   MOVE.w #$FFFF,constmode
00023C5A <AmiBlitz3.ab3@7375>   CLR.w regnum
00023C64 <AmiBlitz3.ab3@7376>           MOVE.l #forthstack,forthsp
00023C6E <AmiBlitz3.ab3@7377>           MOVE.l #precstack,precsp
00023C72 <AmiBlitz3.ab3@7378>    BSR.w prepstack
00023C74 <AmiBlitz3.ab3@7381>   MOVE.l A2,-(A7)
00023C78 <AmiBlitz3.ab3@7382>    BSR.w chkstop
00023C7A <AmiBlitz3.ab3@7383>   MOVEA.l (A7)+,A2
00023C7E <AmiBlitz3.ab3@7384>   CMPA.w #$0,A2
00023C82 <AmiBlitz3.ab3@7385>    BEQ.w asmfixer__done2
00023C88 <AmiBlitz3.ab3@7386>    CLR.b iee
00023C8E <AmiBlitz3.ab3@7387>   MOVE.l A2,asmbuff
00023C92 <AmiBlitz3.ab3@7388>   LEA $10(A2),A5
00023C96 <AmiBlitz3.ab3@7389>   TST.b $F(A2)
00023C9A <AmiBlitz3.ab3@7390>    BNE.w asmfixer__skipo
00023C9C <AmiBlitz3.ab3@7391>   MOVEA.l (A5),A5                                          ;pointer to real text
00023CA2 <AmiBlitz3.ab3@7394>    CLR.w asmtype
00023CA6 <AmiBlitz3.ab3@7395>    CMP.b #".",(a5)
00023CAA <AmiBlitz3.ab3@7396>    BNE.s asmfixer__skipo_l10
00023CAC <AmiBlitz3.ab3@7397>    MOVE.l a2,-(a7)
00023CAE <AmiBlitz3.ab3@7398>    ADDQ.l #1,a5
00023CB4 <AmiBlitz3.ab3@7399>    LEA newtypebase,a2
00023CB8 <AmiBlitz3.ab3@7400>    BSR getparameter2
00023CBC <AmiBlitz3.ab3@7401>    BEQ.w syntaxerr
00023CC0 <AmiBlitz3.ab3@7402>    BSR findtype
00023CC4 <AmiBlitz3.ab3@7403>    BNE.w notypeerr
00023CC8 <AmiBlitz3.ab3@7404>    LEA $4(a2),a2
00023CCC <AmiBlitz3.ab3@7405>    BSR getparameter2
00023CD0 <AmiBlitz3.ab3@7406>    BEQ.w syntaxerr
00023CD4 <AmiBlitz3.ab3@7407>    BSR.w findvariable2
00023CD8 <AmiBlitz3.ab3@7408>    BNE.w notypeerr
00023CDC <AmiBlitz3.ab3@7409>    MOVE.w $4(a2),d3
00023CDE <AmiBlitz3.ab3@7410>    EXT.l d3
00023CE2 <AmiBlitz3.ab3@7411> BRA asmfixer__skipo_l30b
00023CE6 <AmiBlitz3.ab3@7414>   CMP.b #"\",(a5)
00023CEA <AmiBlitz3.ab3@7415>     BNE asmfixer__skipo_l20
00023CEC <AmiBlitz3.ab3@7416>     ADDQ.l #1,a5
00023CEE <AmiBlitz3.ab3@7417>    MOVE.l a2,-(a7)
00023CF0 <AmiBlitz3.ab3@7418>    MOVE.l a5,a4
00023CF6 <AmiBlitz3.ab3@7419>    LEA usedpath,a5
00023CFA <AmiBlitz3.ab3@7420>    CMP.b #"*",(a5)
00023CFE <AmiBlitz3.ab3@7421>    BNE asmfixer__skipo_lm1
00023D00 <AmiBlitz3.ab3@7422>    ADDQ.l #1,a5
00023D04 <AmiBlitz3.ab3@7425>    BSR.w getparameter2
00023D08 <AmiBlitz3.ab3@7426>    BEQ.w syntaxerr
00023D0E <AmiBlitz3.ab3@7427>    LEA varbase,A2
00023D16 <AmiBlitz3.ab3@7428>    MOVE.b #1,newvariable
00023D1A <AmiBlitz3.ab3@7429>    BSR.w findvariable
00023D20 <AmiBlitz3.ab3@7430>    CLR.b newvariable
00023D26 <AmiBlitz3.ab3@7431>    CMP.l #-1,d0
00023D2A <AmiBlitz3.ab3@7432>    BEQ.w notypeerr
00023D2C <AmiBlitz3.ab3@7433>    MOVE.l a4,a5
00023D30 <AmiBlitz3.ab3@7434>    MOVE.l $a(a2),a2
00023D34 <AmiBlitz3.ab3@7435>    LEA $4(a2),a2
00023D38 <AmiBlitz3.ab3@7436>    BSR getparameter2
00023D3C <AmiBlitz3.ab3@7437>    BEQ.w syntaxerr
00023D40 <AmiBlitz3.ab3@7438>    BSR.w findvariable2
00023D44 <AmiBlitz3.ab3@7439>    BNE.w notypeerr
00023D48 <AmiBlitz3.ab3@7440>   MOVE.w $4(A2),D3
00023D4A <AmiBlitz3.ab3@7441>   EXT.l D3
00023D50 <AmiBlitz3.ab3@7444>    CMP.b #"[",-1(a5)
00023D54 <AmiBlitz3.ab3@7445>    BNE asmfixer__skipo_l30c
00023D56 <AmiBlitz3.ab3@7446>    MOVEQ #0,d0
00023D58 <AmiBlitz3.ab3@7447>    MOVE.b (a5)+,d0
00023D5A <AmiBlitz3.ab3@7448>    MOVE.l d3,-(a7)
00023D5C <AmiBlitz3.ab3@7449>    MOVEQ #0,d3
00023D62 <AmiBlitz3.ab3@7450>    JSR atoi
00023D64 <AmiBlitz3.ab3@7451>    MOVE.l (a7)+,d1
00023D68 <AmiBlitz3.ab3@7452>    MOVE.l $a(a2),a2
00023D6C <AmiBlitz3.ab3@7453>    MOVE.w 8(a2),d0
00023D6E <AmiBlitz3.ab3@7454>    MULS d0,d3
00023D70 <AmiBlitz3.ab3@7455>    ADD.l d1,d3
00023D72 <AmiBlitz3.ab3@7458>   MOVE.l (a7)+,a2
00023D76 <AmiBlitz3.ab3@7459> BRA asmfixer__oko
00023D7C <AmiBlitz3.ab3@7462>   CMP.w #$c,$8(a2)
00023D80 <AmiBlitz3.ab3@7463>      BEQ asmfixer__skipo_lf1
00023D86 <AmiBlitz3.ab3@7464>      CMP.w #$d,$8(a2)
00023D8A <AmiBlitz3.ab3@7465>      BEQ asmfixer__skipo_lf1
00023D90 <AmiBlitz3.ab3@7468>   JSR AJL_0_BF6E
00023D96 <AmiBlitz3.ab3@7471>   MOVEA.l asmbuff,A2
00023D9A <AmiBlitz3.ab3@7472>    BEQ.w asmfixer__oko
00023D9E <AmiBlitz3.ab3@7473>   CMP.w #$28,D0
00023DA2 <AmiBlitz3.ab3@7474>    BEQ.w asmfixer__oko
00023DA6 <AmiBlitz3.ab3@7475>   CMP.w #$2C,D0
00023DAA <AmiBlitz3.ab3@7476>    BEQ.w asmfixer__oko
00023DAE <AmiBlitz3.ab3@7477> BRA.w syntaxerr
00023DB6 <AmiBlitz3.ab3@7480>   MOVE.b #1,iee
00023DBA <AmiBlitz3.ab3@7481> BRA asmfixer__skipo_lf2
00023DBE <AmiBlitz3.ab3@7484>   MOVEA.l $4(A2),A1
00023DC2 <AmiBlitz3.ab3@7486>   MOVE.w $8(A2),D1                                         ;labelmode
00023DC6 <AmiBlitz3.ab3@7487>   CMP.w #$5,D1
00023DCA <AmiBlitz3.ab3@7488>    BNE.w asmfixer__notdan
00023DCE <AmiBlitz3.ab3@7491>    BSR.w chkword                                         ;word
00023DD0 <AmiBlitz3.ab3@7494>   MOVE.w D3,(A1)
00023DD4 <AmiBlitz3.ab3@7495> BRA.w asmfixer__next
00023DD8 <AmiBlitz3.ab3@7498>   CMP.w #$6,D1
00023DDC <AmiBlitz3.ab3@7499>    BNE.w asmfixer__notdanxi
00023DE0 <AmiBlitz3.ab3@7502>    BSR.w chkbyte                                         ;byte
00023DE4 <AmiBlitz3.ab3@7505>   MOVE.b D3,$1(A1)
00023DE8 <AmiBlitz3.ab3@7506> BRA.w asmfixer__next
00023DEC <AmiBlitz3.ab3@7509>    CMP.w #$11,D1                                           ;byte
00023DF0 <AmiBlitz3.ab3@7510>    BEQ.w asmfixer__isbyte2
00023DF4 <AmiBlitz3.ab3@7511>    CMP.w #$c,d1
00023DF8 <AmiBlitz3.ab3@7512>    BEQ asmfixer__single1
00023DFC <AmiBlitz3.ab3@7513>    CMP.w #$d,d1
00023E00 <AmiBlitz3.ab3@7514>    BEQ asmfixer__double1
00023E04 <AmiBlitz3.ab3@7515>   CMP.w #$7,D1
00023E08 <AmiBlitz3.ab3@7516>    BEQ.w asmfixer__word                                    ;word
00023E0C <AmiBlitz3.ab3@7517>   CMP.w #$8,D1
00023E10 <AmiBlitz3.ab3@7518>    BNE.w asmfixer__notabsl
00023E16 <AmiBlitz3.ab3@7521>   MOVE.w asmtype,D1                                        ;long
00023E1A <AmiBlitz3.ab3@7522>    BEQ.w asmfixer__notpcrel
00023E1E <AmiBlitz3.ab3@7523>      BSR.w asmoff
00023E20 <AmiBlitz3.ab3@7526>   MOVE.l D3,(A1)
00023E24 <AmiBlitz3.ab3@7527> BRA.w asmfixer__next
00023E2A <AmiBlitz3.ab3@7531>   fmove.s fp0,0(a1)
00023E2E <AmiBlitz3.ab3@7532> BRA.w asmfixer__next
00023E34 <AmiBlitz3.ab3@7536>   fmove.d fp0,0(a1)
00023E38 <AmiBlitz3.ab3@7537> BRA.w asmfixer__next
00023E3C <AmiBlitz3.ab3@7541>   CMP.w #$9,D1
00023E40 <AmiBlitz3.ab3@7542>    BNE.w asmfixer__notdpc
00023E42 <AmiBlitz3.ab3@7543>   SUB.l A1,D3                                              ;branchword
00023E46 <AmiBlitz3.ab3@7544>    BSR.w chkword
00023E48 <AmiBlitz3.ab3@7545>   MOVE.w D3,(A1)
00023E4C <AmiBlitz3.ab3@7546> BRA.w asmfixer__next
00023E50 <AmiBlitz3.ab3@7550>   CMP.w #$A,D1
00023E54 <AmiBlitz3.ab3@7551>    BNE.w asmfixer__imm
00023E56 <AmiBlitz3.ab3@7552>   SUB.l A1,D3                                              ;branchbyte
00023E5A <AmiBlitz3.ab3@7553> BRA.w asmfixer__isbyte
00023E5E <AmiBlitz3.ab3@7557>   CMP.w #$11,d1
00023E62 <AmiBlitz3.ab3@7558>   BLE asmfixer__imm_org
00023E64 <AmiBlitz3.ab3@7559>   MOVE.l a3,-(a7)
00023E6A <AmiBlitz3.ab3@7560>   LEA pluginbase,a3
00023E6E <AmiBlitz3.ab3@7561>   MOVE.l 8(a2),a0
00023E70 <AmiBlitz3.ab3@7562>   JSR (a0)                                                 ;hook
00023E72 <AmiBlitz3.ab3@7563>   MOVE.l (a7)+,a3
00023E76 <AmiBlitz3.ab3@7564> BRA asmfixer__next
00023E7A <AmiBlitz3.ab3@7567>   MOVE.w $A(A2),D0
00023E7E <AmiBlitz3.ab3@7568>    BEQ.w asmfixer__noflag
00023E82 <AmiBlitz3.ab3@7569>   CMP.w #$1,D0
00023E86 <AmiBlitz3.ab3@7570>    BEQ.w asmfixer__tocount
00023E8A <AmiBlitz3.ab3@7571>   CMP.w #$3,D0
00023E8E <AmiBlitz3.ab3@7572>    BEQ.w asmfixer__tomoveq
00023E92 <AmiBlitz3.ab3@7573>   CMP.w #$4,D0
00023E96 <AmiBlitz3.ab3@7574>    BEQ.w asmfixer__totrap
00023E9A <AmiBlitz3.ab3@7577>   CMP.w #$B,D1                                             ;long
00023E9E <AmiBlitz3.ab3@7578>    BEQ.w asmfixer__isabsl
00023EA2 <AmiBlitz3.ab3@7579> BRA asmfixer__word2                                              ;word
00023EA8 <AmiBlitz3.ab3@7582>   CMP.l #$F,D3
00023EAC <AmiBlitz3.ab3@7583>    BHI.w illtraperr
00023EAE <AmiBlitz3.ab3@7584>   OR.b D3,-(A1)
00023EB2 <AmiBlitz3.ab3@7585> BRA.w asmfixer__next
00023EB8 <AmiBlitz3.ab3@7588>   CMP.l #$8,D3
00023EBC <AmiBlitz3.ab3@7589>    BHI.w illimmerr
00023EBE <AmiBlitz3.ab3@7590>   TST.l D3
00023EC2 <AmiBlitz3.ab3@7591>    BEQ.w illimmerr
00023EC6 <AmiBlitz3.ab3@7592>   ANDI.w #$7,D3
00023EC8 <AmiBlitz3.ab3@7593>   LSL.w #8,D3
00023ECA <AmiBlitz3.ab3@7594>   LSL.w #1,D3
00023ECC <AmiBlitz3.ab3@7595>   OR.w D3,-(A1)
00023ED0 <AmiBlitz3.ab3@7596> BRA.w asmfixer__next
00023ED4 <AmiBlitz3.ab3@7599>    BSR.w chkbyte
00023ED6 <AmiBlitz3.ab3@7600>   MOVE.b D3,-(A1)
00023ED8 <AmiBlitz3.ab3@7603>   MOVEA.l (A2),A2
00023EDC <AmiBlitz3.ab3@7604> BRA.w asmfixer__loop
00023EE2 <AmiBlitz3.ab3@7607>   CLR.w constmode
00023EE8 <AmiBlitz3.ab3@7610>   CLR.b curtemplabel
00023EEA <AmiBlitz3.ab3@7611> RTS
00023EEC <AmiBlitz3.ab3@7620>   BTST D3,D6
00023EF0 <AmiBlitz3.ab3@7621>    BEQ.w illeaerr
00023EF4 <AmiBlitz3.ab3@7622>    BSR.w makemode
00023EF8 <AmiBlitz3.ab3@7623>   CMP.w #$7,D3
00023EFC <AmiBlitz3.ab3@7624>    BCS.w doea__skip
00023EFE <AmiBlitz3.ab3@7625>   MOVE.w D3,D2
00023F00 <AmiBlitz3.ab3@7626>   SUBQ.w #7,D2
00023F04 <AmiBlitz3.ab3@7627>   CMP.w #$5,D2
00023F08 <AmiBlitz3.ab3@7628>    BCS.w doea__skip0
00023F0A <AmiBlitz3.ab3@7629>   MOVEQ.l #$04,D2
00023F0C <AmiBlitz3.ab3@7632>   MOVEQ.l #$07,D3
00023F0E <AmiBlitz3.ab3@7635>   MOVE.b D7,D0
00023F12 <AmiBlitz3.ab3@7636>   ANDI.w #$F,D0
00023F16 <AmiBlitz3.ab3@7637>   CMP.w #$F,D0
00023F1A <AmiBlitz3.ab3@7638>    BEQ.w doea__skip2
00023F1C <AmiBlitz3.ab3@7639>   LSL.w D0,D3
00023F1E <AmiBlitz3.ab3@7640>   OR.w D3,D1
00023F20 <AmiBlitz3.ab3@7643>   LSR.w #4,D7
00023F24 <AmiBlitz3.ab3@7644>   ANDI.w #$F,D7
00023F28 <AmiBlitz3.ab3@7645>   CMP.w #$F,D7
00023F2C <AmiBlitz3.ab3@7646>    BEQ.w doea__skip3
00023F2E <AmiBlitz3.ab3@7647>   LSL.w D7,D2
00023F30 <AmiBlitz3.ab3@7648>   OR.w D2,D1
00023F32 <AmiBlitz3.ab3@7651> RTS
00023F38 <AmiBlitz3.ab3@7655>   CMP.l #$7F,D3
00023F3C <AmiBlitz3.ab3@7656>    BGT.w illdiserr
00023F42 <AmiBlitz3.ab3@7657>   CMP.l #$FFFFFF80,D3                                      ;#-128,d3 org source
00023F46 <AmiBlitz3.ab3@7658>    BLT.w illdiserr
00023F48 <AmiBlitz3.ab3@7659> RTS
00023F4E <AmiBlitz3.ab3@7663>   CMP.l #$7fff,D3
00023F52 <AmiBlitz3.ab3@7664>    BGT.w illdiserr
00023F58 <AmiBlitz3.ab3@7665>   CMP.l #$FFFF8000,D3                                      ;#-32768,d3 org source
00023F5C <AmiBlitz3.ab3@7666>    BLT.w illdiserr
00023F5E <AmiBlitz3.ab3@7667> RTS
00023F60 <AmiBlitz3.ab3@7672>   MOVE.b (a5)+,d0
00023F62 <AmiBlitz3.ab3@7673>   CMP.b d1,d0
00023F66 <AmiBlitz3.ab3@7674>   BEQ 'll10
00023F68 <AmiBlitz3.ab3@7675>   TST.b d0
00023F6C <AmiBlitz3.ab3@7676>   BNE 'll20
00023F6E <AmiBlitz3.ab3@7679>   SUBQ #1,a5
00023F70 <AmiBlitz3.ab3@7680> RTS
00023F72 <AmiBlitz3.ab3@7685>   MOVE.b (a5)+,d0
00023F76 <AmiBlitz3.ab3@7686>   CMP.b #",",d0
00023F7A <AmiBlitz3.ab3@7687>   BEQ 'll10
00023F7E <AmiBlitz3.ab3@7688>   CMP.b #";",d0
00023F82 <AmiBlitz3.ab3@7689>   BEQ 'll10
00023F86 <AmiBlitz3.ab3@7690>  CMP.b #":",d0
00023F8A <AmiBlitz3.ab3@7691>   BEQ 'll10
00023F8C <AmiBlitz3.ab3@7694>   TST.b d0
00023F90 <AmiBlitz3.ab3@7695>   BNE 'll20
00023F92 <AmiBlitz3.ab3@7698>   SUBQ #1,a5
00023F94 <AmiBlitz3.ab3@7699> RTS
00023F96 <AmiBlitz3.ab3@7703>   ADD.l a2,d1
00023F9C <AmiBlitz3.ab3@7704>   LEA tempspace,a1
00023F9E <AmiBlitz3.ab3@7705>   MOVE.l d1,a0
00023FA0 <AmiBlitz3.ab3@7708>   MOVE.b (a0)+,(a1)+
00023FA4 <AmiBlitz3.ab3@7709>   BNE.s 'l10
00023FA6 <AmiBlitz3.ab3@7710>   SUBQ.l #1,a0
00023FA8 <AmiBlitz3.ab3@7711>   SUBQ.l #1,a1
00023FAA <AmiBlitz3.ab3@7714>   MOVE.b (a5)+,(a1)+
00023FAE <AmiBlitz3.ab3@7715>   BNE.s 'l20
00023FB0 <AmiBlitz3.ab3@7716>   CLR.b (a1)
00023FB6 <AmiBlitz3.ab3@7717>   LEA tempspace,a5
00023FB8 <AmiBlitz3.ab3@7718> RTS
00023FBC <AmiBlitz3.ab3@7722>   MOVEM.l D1-D2/A0,-(A7)
00023FBE <AmiBlitz3.ab3@7723>   MOVE.l d0,d2
00023FC0 <AmiBlitz3.ab3@7724>   MOVEQ #0,d1
00023FC2 <AmiBlitz3.ab3@7725>   MOVE.l a5,a4
00023FC4 <AmiBlitz3.ab3@7728>   ADDQ.l #1,d1
00023FC6 <AmiBlitz3.ab3@7729>   MOVE.b (a5)+,d0
00023FCA <AmiBlitz3.ab3@7730>   CMP.b #",",d0
00023FCE <AmiBlitz3.ab3@7731>   BEQ 'll10
00023FD2 <AmiBlitz3.ab3@7732>   CMP.b #";",d0
00023FD6 <AmiBlitz3.ab3@7733>   BEQ 'll10
00023FDA <AmiBlitz3.ab3@7734>   CMP.b #":",d0
00023FDE <AmiBlitz3.ab3@7735>   BEQ 'll10
00023FE2 <AmiBlitz3.ab3@7736>   CMP.b #"(",d0
00023FE6 <AmiBlitz3.ab3@7737>   BEQ 'll10
00023FE8 <AmiBlitz3.ab3@7738>   TST.b d0
00023FEC <AmiBlitz3.ab3@7739>   BNE 'll20
00023FEE <AmiBlitz3.ab3@7742>   SUBQ #1,a5
00023FF2 <AmiBlitz3.ab3@7743>   CMP.b #"'",(a4)
00023FF6 <AmiBlitz3.ab3@7744>   BEQ 'llocal
00023FFC <AmiBlitz3.ab3@7745>   TST.w inmacro
00024000 <AmiBlitz3.ab3@7746>   BNE 'lmacro
00024002 <AmiBlitz3.ab3@7747>   MOVEQ.l #$14+4,D0
00024004 <AmiBlitz3.ab3@7748>   ADD.l d1,d0
00024006 <AmiBlitz3.ab3@7749>   MOVE.l d1,-(a7)
00024008 <AmiBlitz3.ab3@7750>   MOVEQ.l #$01,D1
0002400E <AmiBlitz3.ab3@7751>   MOVEA.l _execbase,A6
00024014 <AmiBlitz3.ab3@7752>   MOVE.l mempool2,a0
00024018 <AmiBlitz3.ab3@7753>   JSR _AllocPooled(a6)
0002401A <AmiBlitz3.ab3@7755>   MOVE.l (a7)+,d1
0002401C <AmiBlitz3.ab3@7756>   TST.l d0
00024020 <AmiBlitz3.ab3@7757>   BEQ nomemory
00024022 <AmiBlitz3.ab3@7758>   MOVEA.l D0,A0
0002402A <AmiBlitz3.ab3@7760>   MOVE.w linenumat+2,$A(A0)
00024030 <AmiBlitz3.ab3@7762>   MOVE.l templabel,(A0)
00024036 <AmiBlitz3.ab3@7763>   MOVE.l A0,templabel
0002403E <AmiBlitz3.ab3@7764>   MOVE.l destpointer,$4(A0)
00024042 <AmiBlitz3.ab3@7765>   MOVE.l d2,$8(A0)
00024046 <AmiBlitz3.ab3@7766>   LEA $E(A0),A0
0002404A <AmiBlitz3.ab3@7767>   MOVE.b #$14,(A0)+
0002404C <AmiBlitz3.ab3@7768>   CLR.b (a0)+
0002404E <AmiBlitz3.ab3@7770>   MOVE.l a0,d2
00024050 <AmiBlitz3.ab3@7771>   ADDQ.l #4,d2
00024052 <AmiBlitz3.ab3@7772>   MOVE.l d2,(a0)+
00024054 <AmiBlitz3.ab3@7775>   MOVE.b (a4)+,(a0)+
00024056 <AmiBlitz3.ab3@7776>   SUBQ.l #1,d1
0002405A <AmiBlitz3.ab3@7777>   BNE 'lc1
0002405C <AmiBlitz3.ab3@7778>   CLR.b (a0)+
00024062 <AmiBlitz3.ab3@7779>   MOVE.w linenumat,(a0)
00024066 <AmiBlitz3.ab3@7780>   MOVEM.l (A7)+,D1-D2/A0
00024068 <AmiBlitz3.ab3@7781> RTS
0002406A <AmiBlitz3.ab3@7784>   MOVEQ.l #$10+2,D0
0002406C <AmiBlitz3.ab3@7785>   ADD.l d1,d0
00024070 <AmiBlitz3.ab3@7786>   MOVEM.l a4/d3,-(a7)
00024072 <AmiBlitz3.ab3@7787>   MOVE.l d1,d3
00024074 <AmiBlitz3.ab3@7788>   MOVEQ.l #$01,D1
0002407A <AmiBlitz3.ab3@7789>   MOVEA.l _execbase,A6
00024080 <AmiBlitz3.ab3@7790>   MOVE.l mempool2,a0
00024084 <AmiBlitz3.ab3@7791>   JSR _AllocPooled(a6)
00024086 <AmiBlitz3.ab3@7793>   TST.l d0
0002408A <AmiBlitz3.ab3@7794>   BEQ nomemory
0002408C <AmiBlitz3.ab3@7795>   MOVEA.l D0,A0
00024094 <AmiBlitz3.ab3@7798>   MOVE.w linenumat+2,$C(A0)
0002409A <AmiBlitz3.ab3@7799>   MOVE.l templabel,(A0)
000240A0 <AmiBlitz3.ab3@7800>   MOVE.l A0,templabel
000240A8 <AmiBlitz3.ab3@7801>   MOVE.l destpointer,$4(A0)
000240AC <AmiBlitz3.ab3@7802>   MOVE.l d2,$8(A0)
000240B0 <AmiBlitz3.ab3@7803>   LEA $E(A0),A0
000240B2 <AmiBlitz3.ab3@7804>   MOVE.b d3,(A0)+
000240B8 <AmiBlitz3.ab3@7805>   ADD.b #$10,-1(a0)
000240BC <AmiBlitz3.ab3@7806>   MOVE.b #$1,(a0)+
000240BE <AmiBlitz3.ab3@7807>   SUBQ.w #1,d3
000240C0 <AmiBlitz3.ab3@7810>   MOVE.b (a4)+,(a0)+
000240C2 <AmiBlitz3.ab3@7811>   SUBQ.l #1,d3
000240C6 <AmiBlitz3.ab3@7812>   BNE.s 'lm2
000240C8 <AmiBlitz3.ab3@7813>   CLR.b (a0)+
000240CE <AmiBlitz3.ab3@7814>   MOVE.w linenumat,(a0)
000240D2 <AmiBlitz3.ab3@7815>   MOVEM.l (a7)+,d3/a4
000240D6 <AmiBlitz3.ab3@7816>   MOVEM.l (A7)+,D1-D2/A0
000240D8 <AmiBlitz3.ab3@7817> RTS
000240DE <AmiBlitz3.ab3@7820>   LEA lastgloballabel,a1
000240E0 <AmiBlitz3.ab3@7823>   ADDQ.l #1,d1
000240E2 <AmiBlitz3.ab3@7824>   TST.b (a1)+
000240E6 <AmiBlitz3.ab3@7825>   BNE.s 'll11
000240E8 <AmiBlitz3.ab3@7826>   MOVEQ.l #$10+2,D0
000240EA <AmiBlitz3.ab3@7827>   ADD.l d1,d0
000240EE <AmiBlitz3.ab3@7828>   MOVEM.l a4/d3,-(a7)
000240F0 <AmiBlitz3.ab3@7829>   MOVE.l d1,d3
000240F2 <AmiBlitz3.ab3@7830>   MOVEQ.l #$01,D1
000240F8 <AmiBlitz3.ab3@7831>   MOVEA.l _execbase,A6
000240FE <AmiBlitz3.ab3@7832>   MOVE.l mempool2,a0
00024102 <AmiBlitz3.ab3@7833>   JSR _AllocPooled(a6)
00024104 <AmiBlitz3.ab3@7835>   TST.l d0
00024108 <AmiBlitz3.ab3@7836>   BEQ nomemory
0002410A <AmiBlitz3.ab3@7837>   MOVEA.l D0,A0
00024112 <AmiBlitz3.ab3@7840>   MOVE.w linenumat+2,$C(A0)
00024118 <AmiBlitz3.ab3@7841>   MOVE.l templabel,(A0)
0002411E <AmiBlitz3.ab3@7842>   MOVE.l A0,templabel
00024126 <AmiBlitz3.ab3@7843>   MOVE.l destpointer,$4(A0)
0002412A <AmiBlitz3.ab3@7844>   MOVE.l d2,$8(A0)
0002412E <AmiBlitz3.ab3@7845>   LEA $E(A0),A0
00024130 <AmiBlitz3.ab3@7846>   MOVE.b d3,(A0)+
00024136 <AmiBlitz3.ab3@7847>   ADD.b #$10,-1(a0)
0002413A <AmiBlitz3.ab3@7848>   MOVE.b #$1,(a0)+
0002413C <AmiBlitz3.ab3@7849>   SUBQ.w #1,d3
00024142 <AmiBlitz3.ab3@7850>   LEA lastgloballabel,a1
00024144 <AmiBlitz3.ab3@7853>   SUBQ.l #1,d3
00024146 <AmiBlitz3.ab3@7854>   MOVE.b (a1)+,(a0)+
0002414A <AmiBlitz3.ab3@7855>   BNE.s 'lm3
0002414C <AmiBlitz3.ab3@7856>   SUBQ.l #1,a0
0002414E <AmiBlitz3.ab3@7859>   MOVE.b (a4)+,(a0)+
00024150 <AmiBlitz3.ab3@7860>   SUBQ.l #1,d3
00024154 <AmiBlitz3.ab3@7861>   BNE.s 'lm1
00024156 <AmiBlitz3.ab3@7862>   CLR.b (a0)+
0002415C <AmiBlitz3.ab3@7863>   MOVE.w linenumat,(a0)
00024160 <AmiBlitz3.ab3@7864>   MOVEM.l (a7)+,d3/a4
00024164 <AmiBlitz3.ab3@7865>   MOVEM.l (A7)+,D1-D2/A0
00024166 <AmiBlitz3.ab3@7866> RTS
00024190 <AmiBlitz3.ab3@7870>   !basic
000241F2 <AmiBlitz3.ab3@7871>   error{!TRANS{"No memory available!!!\\nAB3 will terminate due to low memory!"}}
00024204 <AmiBlitz3.ab3@7872>   loop Delay_ 1
0002420A <AmiBlitz3.ab3@7873> Goto loop
0002420E <AmiBlitz3.ab3@7877>   MOVEM.l D0-D2/A0,-(A7)
00024212 <AmiBlitz3.ab3@7878>   MOVE.w $E(A0),-(A7)
00024216 <AmiBlitz3.ab3@7879>    BPL.w insasm__ok
00024218 <AmiBlitz3.ab3@7880>   CLR.w (A7)
0002421A <AmiBlitz3.ab3@7883>   MOVE.l A1,-(A7)
0002421C <AmiBlitz3.ab3@7884>   MOVEQ.l #$10+2,D0
00024222 <AmiBlitz3.ab3@7885>   ADD.w asmlen,D0
00024224 <AmiBlitz3.ab3@7886>   MOVE.w D0,D2
00024226 <AmiBlitz3.ab3@7887>   MOVEQ.l #$01,D1
0002422C <AmiBlitz3.ab3@7888>   MOVEA.l _execbase,A6
00024232 <AmiBlitz3.ab3@7889>   MOVE.l mempool2,a0
00024236 <AmiBlitz3.ab3@7890>   JSR _AllocPooled(a6)
00024238 <AmiBlitz3.ab3@7892>   MOVEA.l D0,A0
00024240 <AmiBlitz3.ab3@7895>   MOVE.w linenumat+2,$C(A0)
00024246 <AmiBlitz3.ab3@7896>   MOVE.l templabel,(A0)
0002424C <AmiBlitz3.ab3@7897>   MOVE.l A0,templabel
00024250 <AmiBlitz3.ab3@7898>   MOVE.l (A7),$4(A0)
00024254 <AmiBlitz3.ab3@7899>   MOVE.w d3,$8(A0)
0002425A <AmiBlitz3.ab3@7900>   MOVE.w $4(A7),$A(A0)
0002425E <AmiBlitz3.ab3@7901>   LEA $E(A0),A0
00024260 <AmiBlitz3.ab3@7902>   MOVE.b D2,(A0)+                                           ;length
00024266 <AmiBlitz3.ab3@7903>   MOVEA.l asmbuff,A1
00024268 <AmiBlitz3.ab3@7904>   ADDQ.w #1,A1
0002426A <AmiBlitz3.ab3@7905>   MOVE.b (A1)+,(A0)+                                        ;type - 0 = indirect,else direct
0002426E <AmiBlitz3.ab3@7906>    BNE.w insasm__loop
00024270 <AmiBlitz3.ab3@7907>   MOVE.l (A1)+,(A0)+
00024276 <AmiBlitz3.ab3@7908>   MOVE.w linenumat,(a0)
0002427A <AmiBlitz3.ab3@7909> BRA.w insasm__loopdone
0002427C <AmiBlitz3.ab3@7912>    MOVE.b (A1)+,(A0)+
00024280 <AmiBlitz3.ab3@7913>    BNE.w insasm__loop
00024286 <AmiBlitz3.ab3@7914>    MOVE.w linenumat,(a0)
00024288 <AmiBlitz3.ab3@7917>   MOVEA.l (A7)+,A1
0002428A <AmiBlitz3.ab3@7918>   ADDQ.w #2,A7
0002428E <AmiBlitz3.ab3@7919>   MOVEM.l (A7)+,D0-D2/A0
00024290 <AmiBlitz3.ab3@7920> RTS
00024294 <AmiBlitz3.ab3@7924>   CMP.w #$5,D3
00024298 <AmiBlitz3.ab3@7925>    BCS.w makemode__done
0002429C <AmiBlitz3.ab3@7926>   CMP.w #$B,D3
000242A0 <AmiBlitz3.ab3@7927>    BHI.w makemode__done2
000242A4 <AmiBlitz3.ab3@7928>    BEQ.w makemode__imm
000242A8 <AmiBlitz3.ab3@7929>    BSR.w insasm
000242AC <AmiBlitz3.ab3@7930>   CMP.w #$5,D3
000242B0 <AmiBlitz3.ab3@7931>    BEQ.w makemode__word
000242B4 <AmiBlitz3.ab3@7932>   CMP.w #$6,D3
000242B8 <AmiBlitz3.ab3@7933>    BEQ.w makemode__dxi
000242BC <AmiBlitz3.ab3@7934>   CMP.w #$7,D3
000242C0 <AmiBlitz3.ab3@7935>    BEQ.w makemode__word
000242C4 <AmiBlitz3.ab3@7936>   CMP.w #$8,D3
000242C8 <AmiBlitz3.ab3@7937>    BEQ.w makemode__long
000242CC <AmiBlitz3.ab3@7938>   CMP.w #$9,D3
000242D0 <AmiBlitz3.ab3@7939>    BEQ.w makemode__word
000242D6 <AmiBlitz3.ab3@7943>   CMPA.l destbufferend,A1
000242DA <AmiBlitz3.ab3@7944>    BCS.w makemode__ok7
000242DC <AmiBlitz3.ab3@7945>   ADDQ.w #2,A1
000242DE <AmiBlitz3.ab3@7946> RTS
000242E0 <AmiBlitz3.ab3@7949>   MOVE.w D4,(A1)+
000242E2 <AmiBlitz3.ab3@7950> RTS
000242EA <AmiBlitz3.ab3@7953>   CMPI.w #$8,asmsize
000242EE <AmiBlitz3.ab3@7954>    BCC.w makemode__immlong
000242F0 <AmiBlitz3.ab3@7955>   MOVEQ.l #$10,D3
000242F4 <AmiBlitz3.ab3@7956>    BSR.w insasm
000242F6 <AmiBlitz3.ab3@7957>   MOVEQ.l #$0B,D3
000242FA <AmiBlitz3.ab3@7958> BRA.w makemode__word
000242FE <AmiBlitz3.ab3@7961>   BSR.w insasm
00024300 <AmiBlitz3.ab3@7964>   ADDQ.w #2,A1
00024302 <AmiBlitz3.ab3@7967>   ADDQ.w #2,A1
00024304 <AmiBlitz3.ab3@7968> RTS
00024308 <AmiBlitz3.ab3@7971>   CMP.w #$F,D3
0002430C <AmiBlitz3.ab3@7972>    BNE.w makemode__done
00024312 <AmiBlitz3.ab3@7973>   CMPA.l destbufferend,A1
00024316 <AmiBlitz3.ab3@7974>    BCS.w makemode__ok3
00024318 <AmiBlitz3.ab3@7975>   ADDQ.w #2,A1
0002431A <AmiBlitz3.ab3@7976>   ADDQ.w #4,A7
0002431C <AmiBlitz3.ab3@7977> RTS
0002431E <AmiBlitz3.ab3@7980>   MOVE.w D2,(A1)+
00024320 <AmiBlitz3.ab3@7981>   ADDQ.w #4,A7
00024322 <AmiBlitz3.ab3@7984> RTS
00024326 <AmiBlitz3.ab3@7988>   BSR.w storeloc
00024330 <AmiBlitz3.ab3@7989>   MOVE.l linenumat,oldline
00024332 <AmiBlitz3.ab3@7990>   MOVEQ.l #$00,D1
00024336 <AmiBlitz3.ab3@7991>    BSR.w get1bytemain
0002433A <AmiBlitz3.ab3@7992>    BEQ.w JL_0_676E
0002433C <AmiBlitz3.ab3@7993>   MOVEQ.l #$00,D3
00024340 <AmiBlitz3.ab3@7994> BRA.w JL_0_6726
00024344 <AmiBlitz3.ab3@7997>    BSR.w get1bytemain
00024348 <AmiBlitz3.ab3@7998>    BNE.w JL_0_671C
0002434A <AmiBlitz3.ab3@8001>   TST.w D3
0002434E <AmiBlitz3.ab3@8002>    BNE.w brackets_                                         ;syntax error brackets
00024352 <AmiBlitz3.ab3@8003> BRA.w JL_0_676C
00024358 <AmiBlitz3.ab3@8006>    MOVE.w instringon,D4
0002435C <AmiBlitz3.ab3@8008>      BEQ JL_0_6726
0002435E <AmiBlitz3.ab3@8011>     MOVEQ #0,d0
00024360 <AmiBlitz3.ab3@8012>      MOVE.b (a5)+,d0                                       ;fix "ue"
00024366 <AmiBlitz3.ab3@8013>      MOVE.w d0,lastchar
0002436A <AmiBlitz3.ab3@8014>      BEQ ready
0002436E <AmiBlitz3.ab3@8015>      CMP.b #$22,d0
00024372 <AmiBlitz3.ab3@8016>      BNE 'l1
00024378 <AmiBlitz3.ab3@8017>      NOT.w instringon
0002437C <AmiBlitz3.ab3@8018> BRA JL_0_670A
00024380 <AmiBlitz3.ab3@8021>            CMP.b #"@",d0                                   ;expand line @@ 1. for parameter
00024384 <AmiBlitz3.ab3@8022>            BNE 'l10
00024388 <AmiBlitz3.ab3@8023>            CMP.b #"@",(a5)
0002438C <AmiBlitz3.ab3@8024>            BNE 'l10
00024392 <AmiBlitz3.ab3@8027>            TST.w ininclude
00024396 <AmiBlitz3.ab3@8028>            BNE 'inc
0002439C <AmiBlitz3.ab3@8029>            MOVE.l sourceline3,a5
000243A2 <AmiBlitz3.ab3@8030>            CMP.l #0,a5
000243A6 <AmiBlitz3.ab3@8031>            BNE 'l11t
000243AC <AmiBlitz3.ab3@8032>            MOVEA.l sourceline,A5
000243AE <AmiBlitz3.ab3@8035>            MOVEA.l (A5),A5
000243B4 <AmiBlitz3.ab3@8036>            CMP.l #0,a5
000243B8 <AmiBlitz3.ab3@8037>            BEQ JL_0_676C
000243BE <AmiBlitz3.ab3@8038>            MOVE.l a5,sourceline3
000243C2 <AmiBlitz3.ab3@8039>            LEA $9(A5),A5
000243C6 <AmiBlitz3.ab3@8040> BRA 'l11
000243C8 <AmiBlitz3.ab3@8043>            ADDQ.l #1,a5
000243CA <AmiBlitz3.ab3@8044>            TST.b (a5)
000243CE <AmiBlitz3.ab3@8045>            BNE 'inc
000243D0 <AmiBlitz3.ab3@8049>            ADDQ.l #1,a5
000243D2 <AmiBlitz3.ab3@8050>            TST.b (a5)
000243D6 <AmiBlitz3.ab3@8051>            BEQ illeolerr
000243D8 <AmiBlitz3.ab3@8052>            MOVE.l a5,-(a7)
000243DC <AmiBlitz3.ab3@8055>       CMP.b #" ",(a5)+
000243E0 <AmiBlitz3.ab3@8056>       BEQ 'l110
000243E6 <AmiBlitz3.ab3@8057>        CMP.b #";",-1(a5)
000243E8 <AmiBlitz3.ab3@8058>        MOVE.l (a7)+,a5
000243EC <AmiBlitz3.ab3@8059>        BEQ 'l111
000243F0 <AmiBlitz3.ab3@8060> BRA JL_0_670A
000243F4 <AmiBlitz3.ab3@8063>    CMP.w #$29,D0
000243F8 <AmiBlitz3.ab3@8064>    BNE.w JL_0_673A
000243FA <AmiBlitz3.ab3@8065>   TST.w D3
000243FE <AmiBlitz3.ab3@8066>    BEQ.w JL_0_676C
00024400 <AmiBlitz3.ab3@8069>   SUBQ.w #1,D3
00024404 <AmiBlitz3.ab3@8070> BRA.w JL_0_670A
00024408 <AmiBlitz3.ab3@8073>    CMP.w #$7D,D0
0002440C <AmiBlitz3.ab3@8074>    BEQ.w JL_0_6734
00024410 <AmiBlitz3.ab3@8075>   CMP.w #$28,D0
00024414 <AmiBlitz3.ab3@8076>    BNE.w JL_0_6750
00024416 <AmiBlitz3.ab3@8079>    ADDQ.w #1,D3
0002441A <AmiBlitz3.ab3@8080> BRA.w JL_0_670A
0002441E <AmiBlitz3.ab3@8083>   CMP.w #$7B,D0
00024422 <AmiBlitz3.ab3@8084>    BEQ.w JL_0_674A
00024426 <AmiBlitz3.ab3@8085>   CMP.w #$2C,D0
0002442A <AmiBlitz3.ab3@8086>    BNE.w JL_0_670A
0002442C <AmiBlitz3.ab3@8087>   TST.w D3
00024430 <AmiBlitz3.ab3@8088>    BNE.w JL_0_670A
00024432 <AmiBlitz3.ab3@8089>   ADDQ.w #1,D1
00024436 <AmiBlitz3.ab3@8090> BRA.w JL_0_670A
00024438 <AmiBlitz3.ab3@8093>   ADDQ.w #1,D1
0002443E <AmiBlitz3.ab3@8096>   CLR.l sourceline3
00024448 <AmiBlitz3.ab3@8097>   MOVE.l oldline,linenumat
0002444C <AmiBlitz3.ab3@8098> BRA.w resloc
00024452 <AmiBlitz3.ab3@8102>    CLR.w numreps
00024454 <AmiBlitz3.ab3@8103>   MOVE.w D1,D0
00024458 <AmiBlitz3.ab3@8104>   ANDI.w #$FF00,D0
0002445C <AmiBlitz3.ab3@8105>    BEQ.w fetchlibps__noreps
0002445E <AmiBlitz3.ab3@8106>   LSR.w #8,D0
00024460 <AmiBlitz3.ab3@8107>   LSR.w #4,D0
00024464 <AmiBlitz3.ab3@8108>    BEQ.w fetchlibps__skip
00024466 <AmiBlitz3.ab3@8109>   SUB.b D0,D1
00024470 <AmiBlitz3.ab3@8110>    MOVE.w regnum,regnumfunc
00024476 <AmiBlitz3.ab3@8111>    MOVE.b funcparloop,-(a7)
0002447E <AmiBlitz3.ab3@8112>    MOVE.b #0,funcparloop
00024484 <AmiBlitz3.ab3@8113>    MOVE.l leftsidetype,-(a7)
0002448A <AmiBlitz3.ab3@8114>    MOVE.l rightsidetype,-(a7)
00024490 <AmiBlitz3.ab3@8115>    CLR.l leftsidetype
00024496 <AmiBlitz3.ab3@8116>    CLR.l rightsidetype
0002449C <AmiBlitz3.ab3@8117>    MOVE.b blitzparloop,-(a7)
000244A4 <AmiBlitz3.ab3@8118>    MOVE.b #1,blitzparloop
000244A8 <AmiBlitz3.ab3@8119>    BSR.w fetchpees2
000244AE <AmiBlitz3.ab3@8120>    MOVE.b (a7)+,blitzparloop
000244B4 <AmiBlitz3.ab3@8121>    MOVE.l (a7)+,rightsidetype
000244BA <AmiBlitz3.ab3@8122>    MOVE.l (a7)+,leftsidetype
000244C0 <AmiBlitz3.ab3@8123>    MOVE.b (a7)+,funcparloop
000244C4 <AmiBlitz3.ab3@8124>   CMP.w #$2C,D0
000244C8 <AmiBlitz3.ab3@8125>    BNE.w syntaxerr
000244CA <AmiBlitz3.ab3@8128>   MOVE.w D1,D2
000244CC <AmiBlitz3.ab3@8129>   LSR.w #8,D2
000244D0 <AmiBlitz3.ab3@8130>   ANDI.w #$7,D2
000244D2 <AmiBlitz3.ab3@8133>    CMP.b D2,D1
000244D6 <AmiBlitz3.ab3@8134>    BCS.w fetchlibps__repsdone
000244D8 <AmiBlitz3.ab3@8135>   SUB.b D2,D1
000244DC <AmiBlitz3.ab3@8136>   MOVEM.l D2/A2,-(A7)
000244DE <AmiBlitz3.ab3@8137>   MOVE.w D2,D0
000244E4 <AmiBlitz3.ab3@8138>   MOVE.b funcparloop,-(a7)
000244EC <AmiBlitz3.ab3@8139>   MOVE.b #0,funcparloop
000244F2 <AmiBlitz3.ab3@8140>   MOVE.l leftsidetype,-(a7)
000244F8 <AmiBlitz3.ab3@8141>   MOVE.l rightsidetype,-(a7)
000244FE <AmiBlitz3.ab3@8142>   CLR.l leftsidetype
00024504 <AmiBlitz3.ab3@8143>   CLR.l rightsidetype
0002450A <AmiBlitz3.ab3@8144>   MOVE.b blitzparloop,-(a7)
00024512 <AmiBlitz3.ab3@8145>   MOVE.b #1,blitzparloop
00024516 <AmiBlitz3.ab3@8146>   BSR.w fetchpees4
0002451C <AmiBlitz3.ab3@8147>   MOVE.b (a7)+,blitzparloop
00024522 <AmiBlitz3.ab3@8148>   MOVE.l (a7)+,rightsidetype
00024528 <AmiBlitz3.ab3@8149>   MOVE.l (a7)+,leftsidetype
0002452E <AmiBlitz3.ab3@8150>   MOVE.b (a7)+,funcparloop
00024532 <AmiBlitz3.ab3@8151>   MOVEM.l (A7)+,D2/A2
00024538 <AmiBlitz3.ab3@8152>   ADDQ.w #1,numreps
0002453C <AmiBlitz3.ab3@8153> BRA.w fetchlibps__rloop
00024542 <AmiBlitz3.ab3@8156>    MOVE.w numreps,D3
00024546 <AmiBlitz3.ab3@8157>    BEQ.w syntaxerr
00024548 <AmiBlitz3.ab3@8158>   ADDA.w D2,A2
0002454C <AmiBlitz3.ab3@8159>   ANDI.w #$FF,D1
00024550 <AmiBlitz3.ab3@8160>    BEQ.w fetchlibps__done
00024554 <AmiBlitz3.ab3@8161>   CMP.w #$2C,D0
00024558 <AmiBlitz3.ab3@8162>    BNE.w syntaxerr
0002455A <AmiBlitz3.ab3@8165>    MOVE.w D1,D0
0002455E <AmiBlitz3.ab3@8166>    BNE.w fetchpees2b
00024560 <AmiBlitz3.ab3@8169> RTS
00024566 <AmiBlitz3.ab3@8172>   MOVE.b funcparloop,-(a7)
0002456C <AmiBlitz3.ab3@8173>   MOVE.l leftsidetype,-(a7)
00024572 <AmiBlitz3.ab3@8174>   MOVE.l rightsidetype,-(a7)
00024578 <AmiBlitz3.ab3@8175>   CLR.l leftsidetype
0002457E <AmiBlitz3.ab3@8176>   CLR.l rightsidetype
00024586 <AmiBlitz3.ab3@8177>   MOVE.b #0,funcparloop
0002458C <AmiBlitz3.ab3@8178>   MOVE.b blitzparloop,-(a7)
00024594 <AmiBlitz3.ab3@8179>   MOVE.b #1,blitzparloop
00024598 <AmiBlitz3.ab3@8180>   BSR.w fetchpees2
0002459E <AmiBlitz3.ab3@8181>   MOVE.b (a7)+,blitzparloop
000245A4 <AmiBlitz3.ab3@8182>   MOVE.l (a7)+,rightsidetype
000245AA <AmiBlitz3.ab3@8183>   MOVE.l (a7)+,leftsidetype
000245B0 <AmiBlitz3.ab3@8184>   MOVE.b (a7)+,funcparloop
000245B2 <AmiBlitz3.ab3@8185> RTS
000245B6 <AmiBlitz3.ab3@8189> ptype:    Dc.b $3F,$3C,$00,$00                             ;MOVE.W  #$0000,-(A7)
000245B8 <AmiBlitz3.ab3@8192> partostack:  Ds.w 1                                        ;pmode org source
000245BA <AmiBlitz3.ab3@8196>   MOVEQ.l #$01,D2
000245BE <AmiBlitz3.ab3@8197> BRA.w fetchpees3
000245C0 <AmiBlitz3.ab3@8200>   MOVEQ.l #$00,D2
000245C4 <AmiBlitz3.ab3@8203>   ANDI.w #$F,D0
000245CA <AmiBlitz3.ab3@8211>   CLR.w parnum
000245CC <AmiBlitz3.ab3@8212>   MOVE.w D1,-(A7)
000245D0 <AmiBlitz3.ab3@8213>   MOVE.w partostack(PC),-(A7)                              ;in case of recursion
000245D6 <AmiBlitz3.ab3@8214>   MOVE.w D2,partostack
000245D8 <AmiBlitz3.ab3@8215>   MOVE.w D0,-(A7)
000245DC <AmiBlitz3.ab3@8216>   CMP.w #"@@",(a5)                                         ;was l15
000245E0 <AmiBlitz3.ab3@8217>   BNE fetchpees__loop
000245E6 <AmiBlitz3.ab3@8218>   TST.w ininclude                                          ;merge macrolines
000245EA <AmiBlitz3.ab3@8219>   BNE errorjoin
000245F0 <AmiBlitz3.ab3@8220>        MOVEA.l sourceline,A5
000245F2 <AmiBlitz3.ab3@8223>            MOVEA.l (A5),A5
000245F8 <AmiBlitz3.ab3@8224>            MOVE.l a5,sourceline
000245FC <AmiBlitz3.ab3@8225>            LEA $9(A5),A5
00024602 <AmiBlitz3.ab3@8226>            ADDQ.l #1,linenumat
00024604 <AmiBlitz3.ab3@8230>   MOVE.b (A2)+,D2                                          ;parameterloop   d2=vartype
00024608 <AmiBlitz3.ab3@8231>    BNE.w fetchpees__skip0
0002460E <AmiBlitz3.ab3@8232>   MOVE.w userp,D2                                          ;user selected type
00024610 <AmiBlitz3.ab3@8234>    MOVE.l A2,-(A7)
00024616 <AmiBlitz3.ab3@8235>    ADDQ.w #1,parnum
0002461C <AmiBlitz3.ab3@8236>    TST.b funccall
00024620 <AmiBlitz3.ab3@8237>    BEQ fetchpees__skip0_l1
00024628 <AmiBlitz3.ab3@8238>    CMP.w #6,parnum
0002462C <AmiBlitz3.ab3@8239>    BLE fetchpees__skip0_l1
00024630 <AmiBlitz3.ab3@8240>    CMP.w #7,d2
00024636 <AmiBlitz3.ab3@8246>    TST.b fpu
0002463A <AmiBlitz3.ab3@8247>    BEQ fetchpees__skip0_old
00024640 <AmiBlitz3.ab3@8248>    TST.w regnumfunc
00024644 <AmiBlitz3.ab3@8249>    BEQ fetchpees__skip0_old
0002464A <AmiBlitz3.ab3@8250>    CMP.w #$48e7,-4(a4)
0002464E <AmiBlitz3.ab3@8251>    BNE fetchpees__skip0_old
00024650 <AmiBlitz3.ab3@8252>    MOVEQ #0,d1
00024656 <AmiBlitz3.ab3@8253>    MOVE.w regnum,d1
0002465C <AmiBlitz3.ab3@8254>    CMP regnumfunc,d1                                       ;fpu reg function save
00024660 <AmiBlitz3.ab3@8255>    BGE fetchpees__skip0_old
00024662 <AmiBlitz3.ab3@8256>    ASL.w #7,d1
00024664 <AmiBlitz3.ab3@8257>    MOVE.l d0,-(a7)
0002466A <AmiBlitz3.ab3@8258>    MOVE.w regnumfunc,d0
00024670 <AmiBlitz3.ab3@8259>    CLR.w regmask
00024676 <AmiBlitz3.ab3@8261>    BSET d0,regmask
00024678 <AmiBlitz3.ab3@8262>    SUBQ #1,d0
0002467C <AmiBlitz3.ab3@8263>    BNE fetchpees__skip0_loop
0002467E <AmiBlitz3.ab3@8264>     MOVEQ #0,d0
00024684 <AmiBlitz3.ab3@8267>       BTST d0,regmask
00024688 <AmiBlitz3.ab3@8268>       BEQ fetchpees__skip0_noa7
0002468A <AmiBlitz3.ab3@8269>       MOVEQ #0,d1
0002468C <AmiBlitz3.ab3@8270>       MOVE.w d0,d1
0002468E <AmiBlitz3.ab3@8271>       SUBQ.w #1,d1
00024690 <AmiBlitz3.ab3@8272>       ASL #7,d1
00024696 <AmiBlitz3.ab3@8273>       OR.l #$f2277400,d1                                   ;fmove.d
0002469A <AmiBlitz3.ab3@8275>       BSR writelong
000246A0 <AmiBlitz3.ab3@8277>       ADDQ.l #2,stacktrack
000246A6 <AmiBlitz3.ab3@8278>       MOVE.l stacktrack,d1
000246AC <AmiBlitz3.ab3@8279>       CMP.l #180,d1
000246B0 <AmiBlitz3.ab3@8280>       BGT conmemerr                                        ;formel too complex
000246B2 <AmiBlitz3.ab3@8281>       MOVE.l a0,-(a7)
000246B8 <AmiBlitz3.ab3@8282>       LEA fpustackbase,a0
000246C0 <AmiBlitz3.ab3@8283>       MOVE.w regmask,0(a0,d1)
000246C2 <AmiBlitz3.ab3@8284>       MOVE.l (a7)+,a0
000246C4 <AmiBlitz3.ab3@8287>       ADDQ.w #1,d0
000246CA <AmiBlitz3.ab3@8288>       CMP.w regnumfunc,d0
000246CE <AmiBlitz3.ab3@8289>       BLE fetchpees__skip0_loop2
000246D0 <AmiBlitz3.ab3@8292>       MOVE.l (a7)+,d0
000246D6 <AmiBlitz3.ab3@8295>      MOVE.l currentfunccall,-(a7)
000246DC <AmiBlitz3.ab3@8296>      MOVE.w parnum,-(a7)
000246E2 <AmiBlitz3.ab3@8297>      TST.l rightsidetype
000246E6 <AmiBlitz3.ab3@8298>      BSR.w JL_0_6836
000246EC <AmiBlitz3.ab3@8299>      MOVE.w (a7)+,parnum
000246F2 <AmiBlitz3.ab3@8301>    MOVE.l (a7)+,currentfunccall
000246F8 <AmiBlitz3.ab3@8303>    TST.b typecheck                            ;typecheck for function call
000246FC <AmiBlitz3.ab3@8304>    BEQ 'notypecheck
00024702 <AmiBlitz3.ab3@8305>    TST.b notypecheck
00024706 <AmiBlitz3.ab3@8306>    BNE 'notypecheck
0002470C <AmiBlitz3.ab3@8307>    TST.b blitzparloop
00024710 <AmiBlitz3.ab3@8308>    BNE 'isblitzlibcall                                    ;no typecheck for blitzlibs currently
0002471A <AmiBlitz3.ab3@8309>    CMP.l #0,currentfunccall
0002471E <AmiBlitz3.ab3@8310>    BEQ 'isblitzlibcall
00024722 <AmiBlitz3.ab3@8311>    MOVEM.l a0/a1,-(a7)
00024728 <AmiBlitz3.ab3@8312>    MOVE.l currentfunccall,a0
0002472E <AmiBlitz3.ab3@8313>    MOVE.w parnum,d1
00024734 <AmiBlitz3.ab3@8314>    TST.b isconstantvalue
00024738 <AmiBlitz3.ab3@8315>    BEQ 'noconstant
00024742 <AmiBlitz3.ab3@8316>    CMP.l #0,lastconstantvalue
00024746 <AmiBlitz3.ab3@8317>    BEQ 'isnull
0002474A <AmiBlitz3.ab3@8319>    MOVE.l funcstruct_parametertype-4(a0,d1*4),a0
00024750 <AmiBlitz3.ab3@8320>    CMP.l #0,a0
00024754 <AmiBlitz3.ab3@8321>    BEQ 'notype
0002475C <AmiBlitz3.ab3@8322>    CMP.l #$100,4(a0)
00024760 <AmiBlitz3.ab3@8323>    BLE 'notype
00024766 <AmiBlitz3.ab3@8324>    MOVE.l lasttoken,d1
0002476A <AmiBlitz3.ab3@8325>    CMP.w #$b581,d1                   ; ok, when token for null
0002476E <AmiBlitz3.ab3@8326>    BEQ 'isnull
00024774 <AmiBlitz3.ab3@8327>    TST.l typetocast
00024778 <AmiBlitz3.ab3@8328>    BEQ 'nocast
0002477E <AmiBlitz3.ab3@8329>    MOVE.l typetocast,a1
00024782 <AmiBlitz3.ab3@8330>    BRA 'typecheck
00024788 <AmiBlitz3.ab3@8332>    MOVE.l rightsidetype,a1
0002478E <AmiBlitz3.ab3@8333>    CMP.l #0,a1
00024792 <AmiBlitz3.ab3@8334>    BEQ 'notype
0002479A <AmiBlitz3.ab3@8335> 'typecheck   CMP.l #$100,4(a1)
0002479C <AmiBlitz3.ab3@8337>    CMP.l a0,a1
000247A0 <AmiBlitz3.ab3@8338>    BEQ 'ok
000247A8 <AmiBlitz3.ab3@8340>    CMP.l #$100,4(a1)                 ; is a type here
000247AC <AmiBlitz3.ab3@8341>    BLE 'error
000247B0 <AmiBlitz3.ab3@8342>    MOVE.l 4(a1),a1                   ; load the address of type.
000247B4 <AmiBlitz3.ab3@8343>    CMP.l $a(a1),a0                   ; check if the bigger type contain in first place same type as the function need
000247B8 <AmiBlitz3.ab3@8344>    BEQ 'ok
000247BE <AmiBlitz3.ab3@8345> 'error: JMP   error_convert_types    ; for syntax 4
000247C4 <AmiBlitz3.ab3@8349>    CLR.l typetocast
000247C8 <AmiBlitz3.ab3@8350>    MOVEM.l (a7)+,a0/a1
000247CE <AmiBlitz3.ab3@8354>    CLR.l lastfunction
000247D4 <AmiBlitz3.ab3@8355>    TST.b fpu
000247D8 <AmiBlitz3.ab3@8356>    BEQ fetchpees__skip0_noprint
000247DA <AmiBlitz3.ab3@8357>   MOVE.l (a7),a2
000247DC <AmiBlitz3.ab3@8358>   ADDQ.l #1,a2
000247E0 <AmiBlitz3.ab3@8359>    CMP.b #5,d2
000247E4 <AmiBlitz3.ab3@8360>   BNE fetchpees__skip0_noprint
000247EA <AmiBlitz3.ab3@8361>   CMP.b #$5d,24(a2)
000247EE <AmiBlitz3.ab3@8362>   BNE fetchpees__skip0_noprint
000247F4 <AmiBlitz3.ab3@8363>   CMP.b #$81,25(a2)
000247F8 <AmiBlitz3.ab3@8364>   BLT fetchpees__skip0_noprint
000247FE <AmiBlitz3.ab3@8365>   CMP.b #$86,25(a2)
00024802 <AmiBlitz3.ab3@8366>   BEQ fetchpees__skip0_ok
00024808 <AmiBlitz3.ab3@8367>   CMP.b #$87,25(a2)
0002480C <AmiBlitz3.ab3@8368>   BEQ fetchpees__skip0_ok
00024812 <AmiBlitz3.ab3@8369>   CMP.b #$88,25(a2)
00024816 <AmiBlitz3.ab3@8370>   BEQ fetchpees__skip0_ok
0002481C <AmiBlitz3.ab3@8371>   CMP.b #$83,25(a2)
00024820 <AmiBlitz3.ab3@8372>   BGT fetchpees__skip0_noprint
00024826 <AmiBlitz3.ab3@8375>   MOVE.l destpointer,a4
0002482C <AmiBlitz3.ab3@8376>   CMP.w #$2f00,-2(a4)
00024830 <AmiBlitz3.ab3@8377>   BNE fetchpees__skip0_noprint
00024836 <AmiBlitz3.ab3@8378>   SUBQ.l #2,destpointer
0002483C <AmiBlitz3.ab3@8380>   MOVE.l #$f2277400,d1
00024840 <AmiBlitz3.ab3@8381>   BSR writelong                                            ;fmove.d fp0,-(a7)
00024846 <AmiBlitz3.ab3@8382>   ADDQ #4,a2offset
0002484C <AmiBlitz3.ab3@8400>   CLR.b optistring
0002484E <AmiBlitz3.ab3@8401>   MOVEA.l (A7)+,A2
00024852 <AmiBlitz3.ab3@8402>    CMP.w #"@",d0
00024856 <AmiBlitz3.ab3@8403>   BNE fetchpees__skip0_l10
0002485A <AmiBlitz3.ab3@8404>    CMP.b #"@",(a5)
0002485E <AmiBlitz3.ab3@8405>   BNE fetchpees__skip0_l10
00024864 <AmiBlitz3.ab3@8406>   TST.w ininclude
00024868 <AmiBlitz3.ab3@8407>   BNE errorjoin
0002486E <AmiBlitz3.ab3@8408>   MOVEA.l sourceline,A5
00024870 <AmiBlitz3.ab3@8409>            MOVEA.l (A5),A5
00024876 <AmiBlitz3.ab3@8410>            MOVE.l a5,sourceline
0002487C <AmiBlitz3.ab3@8411>            ADDQ.l #1,linenumat
00024880 <AmiBlitz3.ab3@8412>            LEA $9(A5),A5
00024882 <AmiBlitz3.ab3@8413>            MOVEQ #0,d0
00024886 <AmiBlitz3.ab3@8414>            BSR get1bytemain
0002488A <AmiBlitz3.ab3@8417>    CMP.b #32,(a5)+ ;for space after a ,
0002488E <AmiBlitz3.ab3@8418>    BEQ fetchpees__skip0_l10:
00024890 <AmiBlitz3.ab3@8419>    SUBQ.l #1,a5
00024894 <AmiBlitz3.ab3@8421>    CMP.w #"@@",(a5)                                        ;if merge
00024898 <AmiBlitz3.ab3@8422>    BNE fetchpees__skip0_l15
0002489C <AmiBlitz3.ab3@8423>    MOVEM.l d0-d7/a0-a4/a6,-(a7)
000248A2 <AmiBlitz3.ab3@8424>    JSR mergeline
000248A6 <AmiBlitz3.ab3@8425>    MOVEM.l (a7)+,d0-d7/a0-a4/a6
000248A8 <AmiBlitz3.ab3@8445>       SUBQ.w #1,(A7)
000248AC <AmiBlitz3.ab3@8446>    BEQ.w fetchpees__done
000248B0 <AmiBlitz3.ab3@8448>     CMP.w #$2C,D0
000248B4 <AmiBlitz3.ab3@8450>    BNE overloadfunc
000248B8 <AmiBlitz3.ab3@8451> BRA.w fetchpees__loop
000248BA <AmiBlitz3.ab3@8454>   ADDQ.w #2,A7
000248C0 <AmiBlitz3.ab3@8455>   MOVE.w (A7)+,partostack
000248C2 <AmiBlitz3.ab3@8456>   MOVE.w (A7)+,D1
000248C8 <AmiBlitz3.ab3@8457>   CLR.b isconstantvalue
000248D2 <AmiBlitz3.ab3@8458>   MOVE.l currentfunccall,lastfunction
000248D8 <AmiBlitz3.ab3@8459>   CLR.b funccall
000248DE <AmiBlitz3.ab3@8460>   CLR.l currentfunccall
000248E0 <AmiBlitz3.ab3@8461> RTS
000248E6 <AmiBlitz3.ab3@8465>   CLR.b funccall
000248EC <AmiBlitz3.ab3@8466>   MOVE.w regnum,d1
000248F2 <AmiBlitz3.ab3@8467>   MOVE.l currentfunccall,a4
000248F6 <AmiBlitz3.ab3@8468>   CMP.b $20(a4),d1                                         ;increase if more pars
000248FA <AmiBlitz3.ab3@8469>   BLT notparerr
000248FC <AmiBlitz3.ab3@8472>   MOVE.b (a2)+,d2
00024904 <AmiBlitz3.ab3@8473>   ADD.w #1,parnum
0002490A <AmiBlitz3.ab3@8474>   TST.b fpu
0002490E <AmiBlitz3.ab3@8475>   BEQ 'nofpu
00024912 <AmiBlitz3.ab3@8476>   CMP.b #5,d2
00024916 <AmiBlitz3.ab3@8477>   BNE 'nofpu
00024918 <AmiBlitz3.ab3@8478>   MOVEQ #0,d1
0002491E <AmiBlitz3.ab3@8479>   MOVE.w regnum,d1
00024926 <AmiBlitz3.ab3@8480>   CMP.w #6,regnum
0002492A <AmiBlitz3.ab3@8481>   BLT 'nostack2
0002492E <AmiBlitz3.ab3@8486>   MOVE.w #$2c3c,d1
00024932 <AmiBlitz3.ab3@8487>   BSR writeword
00024938 <AmiBlitz3.ab3@8488>   MOVE.l #$bf800000,d1
0002493C <AmiBlitz3.ab3@8489>   BSR writelong
00024940 <AmiBlitz3.ab3@8490>   MOVE.w #$c4ff,d1                                         ;savetemp+regnum
00024946 <AmiBlitz3.ab3@8491>   ADD.w parnum,d1
0002494C <AmiBlitz3.ab3@8492>   JSR Atokejsr
00024952 <AmiBlitz3.ab3@8493>   TST.w dontwrite
00024956 <AmiBlitz3.ab3@8494>   BNE 'l1
0002495C <AmiBlitz3.ab3@8495>   MOVE.l data1start,d1
00024962 <AmiBlitz3.ab3@8496>   MOVE.l destpointer,a4
00024966 <AmiBlitz3.ab3@8497>   ADD.l d1,-4(a4)
0002496C <AmiBlitz3.ab3@8498>   MOVE.l destpointer,d1
0002496E <AmiBlitz3.ab3@8499>   SUBQ.l #4,d1
00024974 <AmiBlitz3.ab3@8500>   SUB.l destbufferstart,d1
00024976 <AmiBlitz3.ab3@8501>   MOVE.l d2,-(a7)
00024978 <AmiBlitz3.ab3@8502>   MOVE.l d1,d2
0002497E <AmiBlitz3.ab3@8503>   JSR addhunkoffset
00024980 <AmiBlitz3.ab3@8504>   MOVE.l (a7)+,d2
00024984 <AmiBlitz3.ab3@8505> BRA 'l1
00024986 <AmiBlitz3.ab3@8508>   ASL.l #7,d1
0002498C <AmiBlitz3.ab3@8509>   OR.l #$F23C5000,d1                                       ;fmove.w #-1,fpx
00024990 <AmiBlitz3.ab3@8510>   BSR writelong
00024992 <AmiBlitz3.ab3@8511>   MOVEQ #-1,d1                                             ;-1
00024996 <AmiBlitz3.ab3@8512>   BSR writeword
0002499A <AmiBlitz3.ab3@8513> BRA 'l1
000249A0 <AmiBlitz3.ab3@8516>   MOVE.w regnum,d1
000249A8 <AmiBlitz3.ab3@8517>   CMP.w #6,regnum
000249AC <AmiBlitz3.ab3@8518>   BLT 'nostack
000249B0 <AmiBlitz3.ab3@8523>   CMP.b #2,d2
000249B4 <AmiBlitz3.ab3@8524>   BGT 'nw
000249B8 <AmiBlitz3.ab3@8525> BRA 'nos
000249BC <AmiBlitz3.ab3@8534>   CMP.w #7,d2
000249C0 <AmiBlitz3.ab3@8535>   BNE 'nos
000249C6 <AmiBlitz3.ab3@8536>   ADDQ #4,a2offset
000249CC <AmiBlitz3.ab3@8538>     MOVE.l #$48780000,d1
000249D0 <AmiBlitz3.ab3@8539>     BSR writelong
000249D6 <AmiBlitz3.ab3@8540>     ADDQ.w #4,a2offset
000249DA <AmiBlitz3.ab3@8541>     MOVE.w #$2f3c,d1
000249DE <AmiBlitz3.ab3@8542>     BSR writeword
000249E4 <AmiBlitz3.ab3@8543>     MOVE.l #-1,d1
000249E8 <AmiBlitz3.ab3@8544>     BSR writelong
000249EC <AmiBlitz3.ab3@8545>   BRA 'l1
000249F0 <AmiBlitz3.ab3@8549>   CMP.b #4,d2
000249F4 <AmiBlitz3.ab3@8550>       BNE 'noq
000249F8 <AmiBlitz3.ab3@8551>       MOVE.w #$2c3c,d1
000249FC <AmiBlitz3.ab3@8552>       BSR writeword
00024A02 <AmiBlitz3.ab3@8553>       MOVE.l #$ffff0000,d1
00024A06 <AmiBlitz3.ab3@8554>       BSR writelong
00024A0A <AmiBlitz3.ab3@8555> BRA 'noq2
00024A0E <AmiBlitz3.ab3@8558>      CMP.b #5,d2
00024A12 <AmiBlitz3.ab3@8559>      BNE 'nof
00024A16 <AmiBlitz3.ab3@8560>       MOVE.w #$2c3c,d1
00024A1A <AmiBlitz3.ab3@8561>       BSR writeword
00024A20 <AmiBlitz3.ab3@8562>       MOVE.l #$800000c1,d1
00024A24 <AmiBlitz3.ab3@8563>       BSR writelong
00024A28 <AmiBlitz3.ab3@8564> BRA 'noq2
00024A2C <AmiBlitz3.ab3@8567>   MOVE.w #$7cff,d1
00024A30 <AmiBlitz3.ab3@8568>   BSR writeword
00024A34 <AmiBlitz3.ab3@8571>   MOVE.w #$c4ff,d1                                         ;savetemp+regnum
00024A3A <AmiBlitz3.ab3@8572>   ADD.w parnum,d1
00024A40 <AmiBlitz3.ab3@8573>   JSR Atokejsr
00024A46 <AmiBlitz3.ab3@8574>    TST.w dontwrite
00024A4A <AmiBlitz3.ab3@8575>    BNE 'l1
00024A50 <AmiBlitz3.ab3@8576>    MOVE.l data1start,d1
00024A56 <AmiBlitz3.ab3@8577>    MOVE.l destpointer,a4
00024A5A <AmiBlitz3.ab3@8578>    ADD.l d1,-4(a4)
00024A60 <AmiBlitz3.ab3@8579>    MOVE.l destpointer,d1
00024A62 <AmiBlitz3.ab3@8580>    SUBQ.l #4,d1
00024A68 <AmiBlitz3.ab3@8581>    SUB.l destbufferstart,d1
00024A6A <AmiBlitz3.ab3@8582>    MOVE.l d2,-(a7)
00024A6C <AmiBlitz3.ab3@8583>    MOVE.l d1,d2
00024A72 <AmiBlitz3.ab3@8584>    JSR addhunkoffset
00024A74 <AmiBlitz3.ab3@8585>    MOVE.l (a7)+,d2
00024A78 <AmiBlitz3.ab3@8586> BRA 'l1
00024A7A <AmiBlitz3.ab3@8589>   ASL.l #8,d1
00024A7C <AmiBlitz3.ab3@8590>   ASL.l #1,d1
00024A82 <AmiBlitz3.ab3@8591>   OR.l #$203c,d1                                           ;-1
00024A86 <AmiBlitz3.ab3@8592>   BSR writeword
00024A8C <AmiBlitz3.ab3@8593>   MOVE.l #-1,d1
00024A90 <AmiBlitz3.ab3@8594>   CMP.b #4,d2
00024A94 <AmiBlitz3.ab3@8595>   BNE 'nq1
00024A9A <AmiBlitz3.ab3@8596>   MOVE.l #$ffff0000,d1
00024A9E <AmiBlitz3.ab3@8599>   CMP.b #5,d2
00024AA2 <AmiBlitz3.ab3@8600>   BNE 'nof2
00024AA8 <AmiBlitz3.ab3@8601>   TST.b fpu
00024AAC <AmiBlitz3.ab3@8602>   BNE 'nof2
00024AB2 <AmiBlitz3.ab3@8603>   MOVE.l #$800000c1,d1
00024AB6 <AmiBlitz3.ab3@8606>    BSR writelong
00024ABA <AmiBlitz3.ab3@8607>    CMP.b #7,d2
00024ABE <AmiBlitz3.ab3@8608>    BNE 'l1
00024AC4 <AmiBlitz3.ab3@8610>      MOVE.l #$48780000,d1
00024AC8 <AmiBlitz3.ab3@8611>      BSR writelong
00024ACE <AmiBlitz3.ab3@8613>    ADDQ.w #4,a2offset                                      ; bug fix for string parameters
00024AD4 <AmiBlitz3.ab3@8614>    MOVE.l #$594f,d1                                        ; subq #4,a7
00024AD8 <AmiBlitz3.ab3@8615>    BSR writeword
00024ADA <AmiBlitz3.ab3@8618>    SUBQ.w #1,(A7)
00024ADE <AmiBlitz3.ab3@8619>    BEQ.w fetchpees__done
00024AE4 <AmiBlitz3.ab3@8620>    ADDQ.w #1,regnum
00024AE8 <AmiBlitz3.ab3@8621> BRA 'ol2
00024AEA <AmiBlitz3.ab3@8624>    MOVE.w D2,D1
00024AEE <AmiBlitz3.ab3@8625>    ANDI.w #$40,D1
00024AF4 <AmiBlitz3.ab3@8626>    MOVE.b D1,partostack
00024AF6 <AmiBlitz3.ab3@8627>    TST.b D2
00024AFA <AmiBlitz3.ab3@8628>     BMI.w handlevara
00024AFE <AmiBlitz3.ab3@8629>    BTST #$5,D2
00024B02 <AmiBlitz3.ab3@8630>     BNE.w handlearr
00024B08 <AmiBlitz3.ab3@8631>     MOVE.w regnumstore,-(a7)
00024B0E <AmiBlitz3.ab3@8632>     MOVE.w tempregnum,-(a7)
00024B14 <AmiBlitz3.ab3@8633>     MOVE.w parnum,-(a7)
00024B18 <AmiBlitz3.ab3@8634>     BSR.w getap                                        ;recursive entry
00024B1E <AmiBlitz3.ab3@8635>     MOVE.w (a7)+,parnum
00024B24 <AmiBlitz3.ab3@8636>     MOVE.w (a7)+,tempregnum
00024B2A <AmiBlitz3.ab3@8637>     MOVE.w (a7)+,regnumstore
00024B2E <AmiBlitz3.ab3@8640>     MOVE.w partostack(PC),D1
00024B32 <AmiBlitz3.ab3@8641>     BEQ.w JL_0_6886
00024B38 <AmiBlitz3.ab3@8644>    ADDQ.w #4,a2offset
00024B3E <AmiBlitz3.ab3@8647>    MOVE.w pushdn,D1
00024B44 <AmiBlitz3.ab3@8648>    OR.w regnum,D1
00024B48 <AmiBlitz3.ab3@8649>    CMP.w #$3,D2
00024B4C <AmiBlitz3.ab3@8650>     BCC.w JL_0_6880
00024B52 <AmiBlitz3.ab3@8651>    SUBQ.w #2,a2offset
00024B56 <AmiBlitz3.ab3@8652>    ORI.w #$1000,D1
00024B5A <AmiBlitz3.ab3@8653>    BSR.w writeword
00024B5C <AmiBlitz3.ab3@8654> RTS
00024B60 <AmiBlitz3.ab3@8657>   CMP.b #7,d2
00024B64 <AmiBlitz3.ab3@8658>    BNE 'l10
00024B6C <AmiBlitz3.ab3@8659>    CMP.b #2,optistring
00024B72 <AmiBlitz3.ab3@8663>   TST.b iee
00024B76 <AmiBlitz3.ab3@8664>   BEQ 'old
00024B7A <AmiBlitz3.ab3@8665>   CMP.b #5,d2
00024B7E <AmiBlitz3.ab3@8666>   BNE 'old
00024B82 <AmiBlitz3.ab3@8669>   BSR.w writeword                                          ;write val to stack
00024B84 <AmiBlitz3.ab3@8670> RTS
00024B8A <AmiBlitz3.ab3@8673>   SUBQ.w #4,a2offset
00024B8C <AmiBlitz3.ab3@8674> RTS
00024B92 <AmiBlitz3.ab3@8677>   ADDQ.w #1,regnum
00024B94 <AmiBlitz3.ab3@8678> RTS
00024B96 <AmiBlitz3.ab3@8682>   MOVEQ.l #$03,D2
00024B9A <AmiBlitz3.ab3@8683> BRA.w JL_0_6854
00024B9E <AmiBlitz3.ab3@8687>   ANDI.w #$7,D2
00024BA0 <AmiBlitz3.ab3@8688>   MOVE.w D2,-(A7)
00024BA4 <AmiBlitz3.ab3@8689>    BSR.w JL_0_A916
00024BA8 <AmiBlitz3.ab3@8690>   CMP.b #$7,D2                                             ;ignore pnt to $
00024BAC <AmiBlitz3.ab3@8691>    BEQ.w JL_0_68C0
00024BB0 <AmiBlitz3.ab3@8692>   BTST #$E,D2
00024BB4 <AmiBlitz3.ab3@8693>    BEQ.w JL_0_68B6
00024BB8 <AmiBlitz3.ab3@8694>   MOVE.b #$3,D2                                            ;pointer to long
00024BBC <AmiBlitz3.ab3@8695> BRA.w JL_0_68C0
00024BBE <AmiBlitz3.ab3@8698>    TST.b D2
00024BC2 <AmiBlitz3.ab3@8699>    BNE.w JL_0_68C0
00024BC6 <AmiBlitz3.ab3@8700>   MOVE.b #$3,D2
00024BC8 <AmiBlitz3.ab3@8703>   MOVE.w (A7)+,D3
00024BCA <AmiBlitz3.ab3@8704>   TST.b D3
00024BCE <AmiBlitz3.ab3@8705>    BEQ.w JL_0_68D2
00024BD0 <AmiBlitz3.ab3@8706>   CMP.b D2,D3
00024BD4 <AmiBlitz3.ab3@8707>    BEQ.w putalp
00024BD8 <AmiBlitz3.ab3@8708> BRA.w mismatcherr
00024BDE <AmiBlitz3.ab3@8711>   ADDQ.w #2,a2offset
00024BE2 <AmiBlitz3.ab3@8712>   MOVE.w ptype(PC),D1
00024BE6 <AmiBlitz3.ab3@8713>    BSR.w writeword
00024BE8 <AmiBlitz3.ab3@8714>   MOVEQ.l #$00,D1
00024BEA <AmiBlitz3.ab3@8715>   MOVE.b D2,D1
00024BEE <AmiBlitz3.ab3@8716>    BSR.w writeword
00024BF2 <AmiBlitz3.ab3@8717> BRA.w putalp
00024BF4 <AmiBlitz3.ab3@8720>    MOVE.w D2,-(A7)
00024BF8 <AmiBlitz3.ab3@8721>    BSR.w JL_0_694E
00024BFE <AmiBlitz3.ab3@8722>   BTST #$4,$1(A7)
00024C02 <AmiBlitz3.ab3@8723>    BEQ.w JL_0_6900
00024C06 <AmiBlitz3.ab3@8724>    BSR.w JL_0_699A
00024C0C <AmiBlitz3.ab3@8727>    BTST #$3,$1(A7)
00024C10 <AmiBlitz3.ab3@8728>    BEQ.w JL_0_690E
00024C14 <AmiBlitz3.ab3@8729>    BSR.w sendtype
00024C16 <AmiBlitz3.ab3@8732>    MOVE.w (A7)+,D2
00024C1A <AmiBlitz3.ab3@8733> BRA.w get1bytemain
00024C20 <AmiBlitz3.ab3@8736>   MOVE.w regnum,D1
00024C22 <AmiBlitz3.ab3@8737>   LSL.w #8,D1
00024C24 <AmiBlitz3.ab3@8738>   LSL.w #1,D1
00024C28 <AmiBlitz3.ab3@8739>   ORI.w #$7000,D1
00024C2E <AmiBlitz3.ab3@8740>   BTST #$0,$7(A3)
00024C32 <AmiBlitz3.ab3@8741>    BNE.w JL_0_6946                                         ;A Pointer
00024C3A <AmiBlitz3.ab3@8742>   CMPI.l #$100,$4(A2)
00024C3E <AmiBlitz3.ab3@8743>    BCC.w arrerr1                                           ;illegal type to send
00024C42 <AmiBlitz3.ab3@8744>   MOVE.b $7(A2),D1
00024C46 <AmiBlitz3.ab3@8747>   BSR.w writeword                                          ;moveq #type,d regat
00024C48 <AmiBlitz3.ab3@8748>   MOVEQ.l #$02,D2                                          ;just a word.
00024C4C <AmiBlitz3.ab3@8749> BRA.w JL_0_685C
00024C50 <AmiBlitz3.ab3@8752>   MOVE.b #$3,D1
00024C54 <AmiBlitz3.ab3@8753> BRA.w JL_0_693C
00024C58 <AmiBlitz3.ab3@8757>    BSR.w get1bytemain                                      ;write array paramter code
00024C5C <AmiBlitz3.ab3@8758>    BSR.w getparameter
00024C64 <AmiBlitz3.ab3@8759>   BTST #$1,flagmask+1
00024C68 <AmiBlitz3.ab3@8760>    BEQ.w syntaxerr
00024C6C <AmiBlitz3.ab3@8761>    BSR.w JL_0_8E3C
00024C70 <AmiBlitz3.ab3@8762>    BSR.w get1bytemain
00024C74 <AmiBlitz3.ab3@8763>   CMP.w #$29,D0                                            ;we just want a() or whatever
00024C78 <AmiBlitz3.ab3@8764>    BNE.w syntaxerr
00024C7E <AmiBlitz3.ab3@8765>   MOVE.w notshared,D1
00024C82 <AmiBlitz3.ab3@8766>    BNE.w noarrayerr
00024C88 <AmiBlitz3.ab3@8767>   MOVE.w regnum,D1
00024C8A <AmiBlitz3.ab3@8768>   LSL.w #8,D1
00024C8C <AmiBlitz3.ab3@8769>   LSL.w #1,D1
00024C90 <AmiBlitz3.ab3@8770>   OR.w fbase(PC),D1
00024C96 <AmiBlitz3.ab3@8771>    TST.b varmode
00024C9A <AmiBlitz3.ab3@8772>    BEQ 'l1
00024C9E <AmiBlitz3.ab3@8773>    BCLR #0,d1
00024CA2 <AmiBlitz3.ab3@8776>    BSR.w writeword
00024CA6 <AmiBlitz3.ab3@8777>   MOVE.w $4(A3),D1
00024CAA <AmiBlitz3.ab3@8778>    BSR.w writeword
00024CAE <AmiBlitz3.ab3@8779> BRA.w putalp
00024CB4 <AmiBlitz3.ab3@8783>   MOVE.w regnum,D1
00024CB6 <AmiBlitz3.ab3@8784>   LSL.w #8,D1
00024CB8 <AmiBlitz3.ab3@8785>   LSL.w #1,D1
00024CBC <AmiBlitz3.ab3@8786>   OR.w fbase(PC),D1
00024CC2 <AmiBlitz3.ab3@8787>    TST.b varmode
00024CC6 <AmiBlitz3.ab3@8788>    BEQ 'l1
00024CCA <AmiBlitz3.ab3@8789>    BCLR #0,d1
00024CCE <AmiBlitz3.ab3@8792>    BSR.w writeword
00024CD2 <AmiBlitz3.ab3@8793>   MOVE.w $8(A3),D1
00024CD4 <AmiBlitz3.ab3@8794>   LSL.w #2,D1
00024CDA <AmiBlitz3.ab3@8795>   MOVE.w varmode,D2
00024CDE <AmiBlitz3.ab3@8796>    BEQ.w JL_0_69BE
00024CE0 <AmiBlitz3.ab3@8797>   NEG.w D1
00024CE4 <AmiBlitz3.ab3@8800>    ADD.w $4(A3),D1
00024CE8 <AmiBlitz3.ab3@8801>    BSR.w writeword
00024CEE <AmiBlitz3.ab3@8802>   MOVE.w regnum,D1
00024CF0 <AmiBlitz3.ab3@8803>   LSL.w #8,D1
00024CF2 <AmiBlitz3.ab3@8804>   LSL.w #1,D1
00024CF6 <AmiBlitz3.ab3@8805>   MOVE.w partostack(PC),D2
00024CFA <AmiBlitz3.ab3@8806>    BNE.w JL_0_69F4
00024D02 <AmiBlitz3.ab3@8807>   CMPI.w #$7,regnum
00024D06 <AmiBlitz3.ab3@8808>    BCC.w JL_0_69F4
00024D0A <AmiBlitz3.ab3@8809>   OR.w pushlast(PC),D1
00024D10 <AmiBlitz3.ab3@8810>   MOVE.w regnum,D2
00024D12 <AmiBlitz3.ab3@8811>   SUBQ.w #1,D2
00024D14 <AmiBlitz3.ab3@8812>   OR.w D2,D1
00024D18 <AmiBlitz3.ab3@8813> BRA.w JL_0_69F8
00024D1C <AmiBlitz3.ab3@8816>   OR.w pushadd(PC),D1
00024D20 <AmiBlitz3.ab3@8819>   BSR.w writeword
00024D28 <AmiBlitz3.ab3@8820>   MOVE.b #$1,partostack
00024D2C <AmiBlitz3.ab3@8821> BRA.w putalp
00024D30 <AmiBlitz3.ab3@8825> fbase:       Dc.b $20,$2D,$00,$00                           ;MOVE.L  $0000(A5),D0
00024D32 <AmiBlitz3.ab3@8826> pushadd:     Dc.b $D0,$97                                   ;ADD.L (A7),D0
00024D34 <AmiBlitz3.ab3@8827> pushlast:    Dc.b $D0,$80                                   ;ADD.L D0,D0
00024D38 <AmiBlitz3.ab3@8832>   ANDI.w #$7,D2                                            ;0-7 (unknown to string)
00024D3C <AmiBlitz3.ab3@8833>    BEQ.w evalu2
00024D40 <AmiBlitz3.ab3@8834> BRA.w eval
00024D46 <AmiBlitz3.ab3@8838>   MOVEA.l libpointer,A1
00024D4A <AmiBlitz3.ab3@8841>    CMPA.w #$0,A1
00024D4E <AmiBlitz3.ab3@8842>    BEQ.w resetlibs__done
00024D54 <AmiBlitz3.ab3@8843>   MOVE.w #-1,$A(A1)
00024D5A <AmiBlitz3.ab3@8844>   BCLR #$7,$C(A1)
00024D5C <AmiBlitz3.ab3@8845>   MOVEA.l (A1),A1
00024D60 <AmiBlitz3.ab3@8846> BRA.w resetlibs__loop
00024D62 <AmiBlitz3.ab3@8849> RTS
00024D66 <AmiBlitz3.ab3@8853>   MOVE.w #$FFFE,D1
00024D6A <AmiBlitz3.ab3@8856>    BSR.w JL_0_6F38
00024D70 <AmiBlitz3.ab3@8859>   TST.w cfetchmode
00024D74 <AmiBlitz3.ab3@8860>    BEQ.w uselib3__noconst
00024D7A <AmiBlitz3.ab3@8861>   BTST #$6,$C(A1)
00024D7E <AmiBlitz3.ab3@8862>    BNE.w uselib3__constok
00024D82 <AmiBlitz3.ab3@8863> BRA.w badconerr                                            ;Can't use this Library!
00024D84 <AmiBlitz3.ab3@8866> RTS
00024D8A <AmiBlitz3.ab3@8869>    BSET #$7,$C(A1)
00024D8E <AmiBlitz3.ab3@8870>    BNE.w JL_0_6C74                                         ;already done....
00024D94 <AmiBlitz3.ab3@8871>    CMPI.w #-1,$A(A1)
00024D98 <AmiBlitz3.ab3@8872>    BNE.w JL_0_6C74                                         ;something already here
00024D9E <AmiBlitz3.ab3@8876>    TST.w dirmode
00024DA2 <AmiBlitz3.ab3@8877>    BEQ.b JL_0_6A86
00024DA8 <AmiBlitz3.ab3@8878>    TST.b exdebug
00024DAC <AmiBlitz3.ab3@8879>    BEQ 'l1
00024DB0 <AmiBlitz3.ab3@8880> BRA.b JL_0_6A86
00024DB6 <AmiBlitz3.ab3@8883>   BCLR #$7,$C(A1)
00024DBA <AmiBlitz3.ab3@8884> BRA.w dirliberr
00024DC0 <AmiBlitz3.ab3@8887>   MOVE.b debugmode,-(a7)
00024DC4 <AmiBlitz3.ab3@8888>   MOVEM.l D1/A0/A2,-(A7)
00024DCC <AmiBlitz3.ab3@8894>   BTST #$7,use_debugger
00024DD0 <AmiBlitz3.ab3@8895>   BNE 'debugon
00024DD2 <AmiBlitz3.ab3@8896>   CLR.w D1
00024DD6 <AmiBlitz3.ab3@8897> BRA.b 'debugoff
00024DD8 <AmiBlitz3.ab3@8900>   SNE D1
00024DDE <AmiBlitz3.ab3@8903>   MOVE.b d1,debugmode
00024DE0 <AmiBlitz3.ab3@8907>   MOVEA.l A1,A0
00024DE4 <AmiBlitz3.ab3@8908>   ADDA.l $12(A1),A0
00024DE8 <AmiBlitz3.ab3@8909>   TST.w -$2(A0)
00024DEC <AmiBlitz3.ab3@8910>    BEQ.w JL_0_6AD2
00024DF0 <AmiBlitz3.ab3@8911>   MOVEM.l A0-A1,-(A7)
00024DF4 <AmiBlitz3.ab3@8912>   MOVE.w #$FB4F,D1
00024DF8 <AmiBlitz3.ab3@8913>    BSR.w uselib
00024DFC <AmiBlitz3.ab3@8914>   MOVEM.l (A7)+,A0-A1
00024E02 <AmiBlitz3.ab3@8915>   ADDQ.w #1,globalvarpointer
00024E0A <AmiBlitz3.ab3@8916>   BCLR #$0,globalvarpointer+1
00024E12 <AmiBlitz3.ab3@8917>   MOVE.w globalvarpointer,-$6(A0)
00024E18 <AmiBlitz3.ab3@8918>   ADDQ.w #4,globalvarpointer
00024E1C <AmiBlitz3.ab3@8919>   TST.l -$E(A0)
00024E20 <AmiBlitz3.ab3@8920>    BEQ.w JL_0_6AD2
00024E26 <AmiBlitz3.ab3@8921>   ADDQ.w #4,globalvarpointer
00024E2E <AmiBlitz3.ab3@8924>   MOVE.l libend,$28(A1)
00024E30 <AmiBlitz3.ab3@8925>   MOVEA.l A1,A0
00024E34 <AmiBlitz3.ab3@8926>   ADDA.l $12(A1),A0
00024E36 <AmiBlitz3.ab3@8927>   MOVE.l A1,D1
00024E3A <AmiBlitz3.ab3@8928>   ADD.l $6(A1),D1
00024E3E <AmiBlitz3.ab3@8929>   TST.l $2C(A1)
00024E42 <AmiBlitz3.ab3@8930>    BEQ.w JL_0_6AFE
00024E48 <AmiBlitz3.ab3@8932>   TST.b debugmode
00024E4C <AmiBlitz3.ab3@8933>    BNE.w JL_0_6AFE
00024E4E <AmiBlitz3.ab3@8934>   MOVE.l A1,D1
00024E52 <AmiBlitz3.ab3@8935>   ADD.l $2C(A1),D1
00024E58 <AmiBlitz3.ab3@8938>   MOVEA.l libend,A2
00024E5E <AmiBlitz3.ab3@8941>   CMPA.l data1start,A2
00024E62 <AmiBlitz3.ab3@8942>    BCS.w JL_0_6B24
00024E6A <AmiBlitz3.ab3@8943>   MOVE.w #$FFFF,dontwrite
00024E6C <AmiBlitz3.ab3@8946>   ADDQ.w #2,A0
00024E6E <AmiBlitz3.ab3@8947>   ADDQ.w #2,A2
00024E70 <AmiBlitz3.ab3@8948>   CMPA.l D1,A0
00024E74 <AmiBlitz3.ab3@8949>    BCS.w JL_0_6B16
00024E78 <AmiBlitz3.ab3@8950> BRA.w JL_0_6B2C
00024E7A <AmiBlitz3.ab3@8953>   MOVE.w (A0)+,(A2)+                                       ;copylibcode
00024E7C <AmiBlitz3.ab3@8954>   CMPA.l D1,A0
00024E80 <AmiBlitz3.ab3@8955>    BCS.w JL_0_6B04
00024E86 <AmiBlitz3.ab3@8958>   MOVE.l A2,libend
00024E8A <AmiBlitz3.ab3@8959>   MOVE.l $20(A1),D1
00024E8E <AmiBlitz3.ab3@8960>    BEQ.w JL_0_6BB8
00024E92 <AmiBlitz3.ab3@8961>   MOVEM.l D0/D2-D3,-(A7)
00024E96 <AmiBlitz3.ab3@8962>   MOVEA.l $24(A1),A0
00024E98 <AmiBlitz3.ab3@8963>   MOVEQ.l #$00,D3
00024E9A <AmiBlitz3.ab3@8966>   MOVE.l (A0)+,D2
00024E9E <AmiBlitz3.ab3@8967>   TST.l $2C(A1)
00024EA2 <AmiBlitz3.ab3@8968>    BEQ.w JL_0_6B60
00024EA8 <AmiBlitz3.ab3@8969>   TST.b debugmode
00024EAC <AmiBlitz3.ab3@8970>    BNE.w JL_0_6B60
00024EB0 <AmiBlitz3.ab3@8971>   CMP.l $2C(A1),D2
00024EB4 <AmiBlitz3.ab3@8972>    BCC.w JL_0_6BA0
00024EB8 <AmiBlitz3.ab3@8975>   TST.w $0(A1,D2.L)
00024EBC <AmiBlitz3.ab3@8976>    BPL.w JL_0_6B72
00024EBE <AmiBlitz3.ab3@8977>   TST.l D3
00024EC2 <AmiBlitz3.ab3@8978>    BNE.w JL_0_6B72
00024EC4 <AmiBlitz3.ab3@8979>   MOVE.l A0,D0
00024EC6 <AmiBlitz3.ab3@8980>   MOVE.l D1,D3
00024ECA <AmiBlitz3.ab3@8983>   SUB.l $12(A1),D2
00024ECE <AmiBlitz3.ab3@8984>    BMI.w JL_0_6BA0
00024ED2 <AmiBlitz3.ab3@8985>   ADD.l $28(A1),D2
00024ED4 <AmiBlitz3.ab3@8986>   MOVE.l D2,-(A7)
00024EDA <AmiBlitz3.ab3@8987>   SUB.l destbufferstart,D2
00024EDE <AmiBlitz3.ab3@8988>    BSR.w addhunkoffset
00024EE0 <AmiBlitz3.ab3@8989>   MOVEA.l (A7)+,A2
00024EE6 <AmiBlitz3.ab3@8990>   TST.w dontwrite
00024EEA <AmiBlitz3.ab3@8991>    BNE.w JL_0_6BA0
00024EEE <AmiBlitz3.ab3@8992>   MOVE.l $28(A1),D2
00024EF2 <AmiBlitz3.ab3@8993>   SUB.l $12(A1),D2
00024EF4 <AmiBlitz3.ab3@8994>   ADD.l D2,(A2)
00024EF6 <AmiBlitz3.ab3@8997>    SUBQ.l #1,D1
00024EFA <AmiBlitz3.ab3@8998>    BNE.w JL_0_6B44
00024EFC <AmiBlitz3.ab3@8999>   MOVE.l D3,D2
00024F00 <AmiBlitz3.ab3@9000>    BEQ.w JL_0_6BB4
00024F02 <AmiBlitz3.ab3@9001>   MOVEA.l D0,A2
00024F04 <AmiBlitz3.ab3@9002>   SUBQ.w #4,A2
00024F08 <AmiBlitz3.ab3@9003>    BSR.w JL_0_6E34
00024F0C <AmiBlitz3.ab3@9006>    MOVEM.l (A7)+,D0/D2-D3
00024F10 <AmiBlitz3.ab3@9009>    MOVEM.l (A7)+,D1/A0/A2
00024F14 <AmiBlitz3.ab3@9010>   MOVEM.l D1-D2,-(A7)
00024F18 <AmiBlitz3.ab3@9011>   TST.w $1A(A1)
00024F1C <AmiBlitz3.ab3@9012>    BNE.w JL_0_6BD0
00024F20 <AmiBlitz3.ab3@9013>   CLR.w $A(A1)
00024F24 <AmiBlitz3.ab3@9014> BRA.w JL_0_6C5E
00024F2A <AmiBlitz3.ab3@9017>   ADDQ.w #1,globalvarpointer
00024F32 <AmiBlitz3.ab3@9018>   BCLR #$0,globalvarpointer+1
00024F3A <AmiBlitz3.ab3@9019>   MOVE.w globalvarpointer,$A(A1)
00024F3E <AmiBlitz3.ab3@9020>   CMP.w #-$12D,D1
00024F42 <AmiBlitz3.ab3@9021>    BNE.w JL_0_6C16
00024F4A <AmiBlitz3.ab3@9022>   MOVE.w $A(A1),movestdn+2
00024F52 <AmiBlitz3.ab3@9023>   MOVE.w $A(A1),pusha3+2
00024F5A <AmiBlitz3.ab3@9024>   MOVE.w $A(A1),pusha32+2
00024F62 <AmiBlitz3.ab3@9025>   MOVE.w $A(A1),pulla3+2
00024F6A <AmiBlitz3.ab3@9026>   MOVE.w $A(A1),geta3+2
00024F6E <AmiBlitz3.ab3@9029>    CMP.w #-$3E9,D1
00024F72 <AmiBlitz3.ab3@9030>    BNE.w JL_0_6C3E
00024F7A <AmiBlitz3.ab3@9031>   MOVE.w $A(A1),dataget+2
00024F82 <AmiBlitz3.ab3@9032>   MOVE.w $A(A1),dataput+2
00024F8A <AmiBlitz3.ab3@9033>   MOVE.w $A(A1),rescode+6
00024F92 <AmiBlitz3.ab3@9034>   MOVE.w $A(A1),rescode2+2
00024F98 <AmiBlitz3.ab3@9037>   ADDQ.w #2,globalvarpointer
00024F9C <AmiBlitz3.ab3@9038>   TST.w $1A(A1)
00024FA0 <AmiBlitz3.ab3@9039>    BMI.w JL_0_6C52
00024FA6 <AmiBlitz3.ab3@9040>   ADDQ.w #2,globalvarpointer
00024FAA <AmiBlitz3.ab3@9043>   MOVEM.l D1/A1,-(A7)
00024FAE <AmiBlitz3.ab3@9044>   BSR.w uselib2
00024FB2 <AmiBlitz3.ab3@9045>   MOVEM.l (A7)+,D1/A1
00024FB4 <AmiBlitz3.ab3@9048>   MOVE.w D1,D2
00024FB8 <AmiBlitz3.ab3@9049>   MOVE.l $16(A1),D1
00024FBC <AmiBlitz3.ab3@9050>    BSR.w uselib2_org
00024FC0 <AmiBlitz3.ab3@9051>   MOVE.l $1C(A1),D1
00024FC4 <AmiBlitz3.ab3@9052>    BSR.w uselib2_org
00024FC8 <AmiBlitz3.ab3@9053>   MOVEM.l (A7)+,D1-D2
00024FCE <AmiBlitz3.ab3@9055>   MOVE.b (a7)+,debugmode
00024FD0 <AmiBlitz3.ab3@9058> RTS
00024FD2 <AmiBlitz3.ab3@9062>   MOVEQ.l #$00,D2
00024FD8 <AmiBlitz3.ab3@9065>   MOVEA.l tokeslist,A2
00024FDA <AmiBlitz3.ab3@9066>   CMPA.l D2,A2
00024FDE <AmiBlitz3.ab3@9067>    BEQ.w JL_0_6CE0
00024FE0 <AmiBlitz3.ab3@9068>   MOVE.l A2,-(A7)
00024FE2 <AmiBlitz3.ab3@9071>   MOVEQ.l #$00,D3
00024FE6 <AmiBlitz3.ab3@9074>   MOVEA.l $8(A2),A3
00024FE8 <AmiBlitz3.ab3@9075>   CMPA.l D3,A3
00024FEC <AmiBlitz3.ab3@9076>    BEQ.w JL_0_6CD2
00024FEE <AmiBlitz3.ab3@9077>   MOVE.l A3,-(A7)
00024FF2 <AmiBlitz3.ab3@9078>   MOVEM.l D2-D3/A2-A3,-(A7)
00024FF6 <AmiBlitz3.ab3@9079>   MOVE.w $4(A2),D1
00024FFA <AmiBlitz3.ab3@9080>   MOVE.w $6(A2),D2
00024FFE <AmiBlitz3.ab3@9081>    BSR.w JL_0_6CE2
00025002 <AmiBlitz3.ab3@9082>   MOVEM.l (A7)+,D2-D3/A2-A3
00025008 <AmiBlitz3.ab3@9083>   MOVE.w dontwrite,D0
0002500C <AmiBlitz3.ab3@9084>    BEQ.w JL_0_6CBE
0002500E <AmiBlitz3.ab3@9087>   MOVEA.l (A3),A3
00025010 <AmiBlitz3.ab3@9088>   CMPA.l D3,A3
00025014 <AmiBlitz3.ab3@9089>    BNE.w JL_0_6CB2
00025018 <AmiBlitz3.ab3@9090> BRA.w JL_0_6CCC
0002501C <AmiBlitz3.ab3@9093>   MOVEA.l $4(A3),A0
0002501E <AmiBlitz3.ab3@9094>   MOVE.l D7,(A0)
00025020 <AmiBlitz3.ab3@9095>   MOVEA.l (A3),A3
00025022 <AmiBlitz3.ab3@9096>   CMPA.l D3,A3
00025026 <AmiBlitz3.ab3@9097>    BNE.w JL_0_6CBE
00025028 <AmiBlitz3.ab3@9100>   MOVE.l (A7)+,D3
0002502C <AmiBlitz3.ab3@9101> BRA.w JL_0_6C88
0002502E <AmiBlitz3.ab3@9104>    MOVEA.l (A2),A2
00025030 <AmiBlitz3.ab3@9105>   CMPA.l D2,A2
00025034 <AmiBlitz3.ab3@9106>    BNE.w JL_0_6C86
00025036 <AmiBlitz3.ab3@9107>   MOVE.l (A7)+,D2
0002503A <AmiBlitz3.ab3@9108> BRA.w JL_0_6C78
0002503C <AmiBlitz3.ab3@9111> RTS
0002503E <AmiBlitz3.ab3@9115>   MOVE.w D2,-(A7)
00025042 <AmiBlitz3.ab3@9116>    BSR.w searchinstr
00025044 <AmiBlitz3.ab3@9117>   MOVE.w (A7)+,D2
0002504C <AmiBlitz3.ab3@9118>   BCLR #$7,blitzmode
00025050 <AmiBlitz3.ab3@9119>   BCLR #$E,D2
00025054 <AmiBlitz3.ab3@9120>    BEQ.w JL_0_6D02
0002505C <AmiBlitz3.ab3@9121>   BSET #$7,blitzmode
0002505E <AmiBlitz3.ab3@9124>   TST.w (A3)
00025062 <AmiBlitz3.ab3@9125>    BEQ.w JL_0_6DAC
00025068 <AmiBlitz3.ab3@9126>   BTST #$2,$1(A3)
0002506C <AmiBlitz3.ab3@9127>    BNE.w tokeerr
00025072 <AmiBlitz3.ab3@9128>   BTST #$3,$1(A3)
00025076 <AmiBlitz3.ab3@9129>    BNE.w tokeerr
0002507A <AmiBlitz3.ab3@9130>   LEA $6(A3),A3
0002507C <AmiBlitz3.ab3@9133>   MOVE.w (A3)+,D0
00025080 <AmiBlitz3.ab3@9134>    BMI.w tokeerr
00025084 <AmiBlitz3.ab3@9135>   ANDI.w #$FF,D0
00025086 <AmiBlitz3.ab3@9136>   ADDA.w D0,A3
00025088 <AmiBlitz3.ab3@9137>   ADDQ.w #1,A3
0002508A <AmiBlitz3.ab3@9138>   EXG.l D0,A3
0002508E <AmiBlitz3.ab3@9139>   BCLR #$0,D0
00025090 <AmiBlitz3.ab3@9140>   EXG.l D0,A3
00025092 <AmiBlitz3.ab3@9141>   SUBQ.w #1,D2
00025096 <AmiBlitz3.ab3@9142>    BPL.w JL_0_6D98
00025098 <AmiBlitz3.ab3@9143>   TST.w (A3)
0002509C <AmiBlitz3.ab3@9144>    BNE.w JL_0_6D76
000250A0 <AmiBlitz3.ab3@9145>   MOVE.l $2(A3),D0
000250A4 <AmiBlitz3.ab3@9146>   OR.l $A(A3),D0
000250A8 <AmiBlitz3.ab3@9147>    BNE.w JL_0_6D76
000250AE <AmiBlitz3.ab3@9148>   BTST #$0,$9(A3)
000250B2 <AmiBlitz3.ab3@9149>    BNE.w JL_0_6D76
000250B6 <AmiBlitz3.ab3@9150>   MOVE.l $6(A3),D7
000250BA <AmiBlitz3.ab3@9151>   MOVE.w $0(A2,D7.L),D0
000250BE <AmiBlitz3.ab3@9152>   ANDI.w #$F000,D0
000250C2 <AmiBlitz3.ab3@9153>   CMP.w #-$6000,D0
000250C6 <AmiBlitz3.ab3@9154>    BEQ.w JL_0_6D76
000250CA <AmiBlitz3.ab3@9157>   SUB.l $12(A2),D7
000250CE <AmiBlitz3.ab3@9158>   ADD.l $28(A2),D7
000250D0 <AmiBlitz3.ab3@9159> RTS
000250D6 <AmiBlitz3.ab3@9163>   LEA cutejsr,A0
000250DC <AmiBlitz3.ab3@9166>   MOVE.l destpointer,-(A7)
000250E4 <AmiBlitz3.ab3@9167>   MOVE.w #$FFFF,lasta6
000250E6 <AmiBlitz3.ab3@9170>    JSR (A0)
000250EA <AmiBlitz3.ab3@9171>   MOVE.w #$4E75,D1
000250EE <AmiBlitz3.ab3@9172>    BSR.w writeword
000250F0 <AmiBlitz3.ab3@9173>   MOVE.l (A7)+,D7
000250F2 <AmiBlitz3.ab3@9174> RTS
000250F4 <AmiBlitz3.ab3@9178>   TST.w (A3)+
000250F8 <AmiBlitz3.ab3@9179>    BEQ.w JL_0_6DA4
000250FA <AmiBlitz3.ab3@9180>   ADDQ.w #2,A3
000250FE <AmiBlitz3.ab3@9181> BRA.w JL_0_6D98
00025102 <AmiBlitz3.ab3@9184>   LEA $C(A3),A3
00025106 <AmiBlitz3.ab3@9185> BRA.w JL_0_6D20
00025108 <AmiBlitz3.ab3@9189>   TST.w D2
0002510C <AmiBlitz3.ab3@9190>    BNE.w tokeerr
00025110 <AmiBlitz3.ab3@9191>   TST.w $6(A3)
00025114 <AmiBlitz3.ab3@9192>    BNE.w JL_0_6DE4
00025118 <AmiBlitz3.ab3@9193>   MOVE.l $8(A3),D0
0002511C <AmiBlitz3.ab3@9194>   OR.l $10(A3),D0
00025120 <AmiBlitz3.ab3@9195>    BNE.w JL_0_6DE4
00025126 <AmiBlitz3.ab3@9196>   BTST #$0,$F(A3)
0002512A <AmiBlitz3.ab3@9197>    BNE.w JL_0_6DE4
0002512E <AmiBlitz3.ab3@9198>   MOVE.l $C(A3),D7
00025132 <AmiBlitz3.ab3@9199>   MOVE.w $0(A2,D7.L),D0
00025136 <AmiBlitz3.ab3@9200>   ANDI.w #$F000,D0
0002513A <AmiBlitz3.ab3@9201>   CMP.w #-$6000,D0
0002513E <AmiBlitz3.ab3@9202>    BNE.w JL_0_6D6C
00025140 <AmiBlitz3.ab3@9205>   MOVE.l A3,D1
00025142 <AmiBlitz3.ab3@9206>   SUB.l A2,D1
00025148 <AmiBlitz3.ab3@9207>   LEA Amakelibsub,A0
0002514C <AmiBlitz3.ab3@9208> BRA.w JL_0_6D7C
00025152 <AmiBlitz3.ab3@9212>   MOVEA.l _execbase,A6
00025158 <AmiBlitz3.ab3@9213>   MOVEA.l tokeslist,A2
0002515E <AmiBlitz3.ab3@9214>   CLR.l tokeslist
00025162 <AmiBlitz3.ab3@9217>     CMPA.w #$0,A2
00025166 <AmiBlitz3.ab3@9218>      BEQ.w JL_0_6E32
0002516A <AmiBlitz3.ab3@9219>     MOVEA.l $8(A2),A3
0002516E <AmiBlitz3.ab3@9222>       CMPA.w #$0,A3
00025172 <AmiBlitz3.ab3@9223>        BEQ.w JL_0_6E24
00025174 <AmiBlitz3.ab3@9224>       MOVEA.l A3,A1
00025176 <AmiBlitz3.ab3@9225>       MOVEA.l (A3),A3
00025178 <AmiBlitz3.ab3@9226>       MOVEQ.l #$08,D0
0002517E <AmiBlitz3.ab3@9227>       MOVE.l mempool,a0
00025184 <AmiBlitz3.ab3@9228>       MOVEA.l _execbase,A6
00025188 <AmiBlitz3.ab3@9229>       JSR _FreePooled(A6)
0002518C <AmiBlitz3.ab3@9230> BRA.w JL_0_6E0E
0002518E <AmiBlitz3.ab3@9233>     MOVEA.l A2,A1
00025190 <AmiBlitz3.ab3@9234>     MOVEA.l (A2),A2
00025192 <AmiBlitz3.ab3@9235>     MOVEQ.l #$0C,D0
00025198 <AmiBlitz3.ab3@9236>     MOVE.l mempool,a0
0002519E <AmiBlitz3.ab3@9237>     MOVEA.l _execbase,A6
000251A2 <AmiBlitz3.ab3@9238>     JSR _FreePooled(A6)
000251A6 <AmiBlitz3.ab3@9239> BRA.w JL_0_6E02
000251A8 <AmiBlitz3.ab3@9242> RTS
000251AC <AmiBlitz3.ab3@9246>   MOVEM.l D3-D5/A1-A6,-(A7)
000251AE <AmiBlitz3.ab3@9247>   MOVEA.l A1,A4
000251B0 <AmiBlitz3.ab3@9250>   MOVE.l (A2)+,D3
000251B4 <AmiBlitz3.ab3@9251>   MOVE.w $0(A4,D3.L),D5
000251B8 <AmiBlitz3.ab3@9252>    BPL.w JL_0_6E7A
000251BC <AmiBlitz3.ab3@9253>   TST.l $2C(A4)
000251C0 <AmiBlitz3.ab3@9254>    BEQ.w JL_0_6E5E
000251C6 <AmiBlitz3.ab3@9255>   TST.b debugmode
000251CA <AmiBlitz3.ab3@9256>    BNE.w JL_0_6E5E
000251CE <AmiBlitz3.ab3@9257>   CMP.l $2C(A4),D3
000251D2 <AmiBlitz3.ab3@9258>    BCC.w JL_0_6E7A
000251D6 <AmiBlitz3.ab3@9261>   BCLR #$F,D5
000251DA <AmiBlitz3.ab3@9262>   MOVE.w $2(A4,D3.L),D4
000251DE <AmiBlitz3.ab3@9263>   SUB.l $12(A4),D3
000251E2 <AmiBlitz3.ab3@9264>   ADD.l $28(A4),D3
000251E6 <AmiBlitz3.ab3@9265>   MOVEM.l D2/A2/A4,-(A7)
000251EA <AmiBlitz3.ab3@9266>    BSR.w JL_0_6E86
000251EE <AmiBlitz3.ab3@9267>   MOVEM.l (A7)+,D2/A2/A4
000251F0 <AmiBlitz3.ab3@9270>   SUBQ.l #1,D2
000251F4 <AmiBlitz3.ab3@9271>    BNE.w JL_0_6E3A
000251F8 <AmiBlitz3.ab3@9272>   MOVEM.l (A7)+,D3-D5/A1-A6
000251FA <AmiBlitz3.ab3@9273> RTS
00025200 <AmiBlitz3.ab3@9277>   LEA tokeslist,A3
00025206 <AmiBlitz3.ab3@9278>   MOVEA.l _execbase,A6
00025208 <AmiBlitz3.ab3@9281>   MOVE.l (A3),D0
0002520C <AmiBlitz3.ab3@9282>    BEQ.w JL_0_6EAC
0002520E <AmiBlitz3.ab3@9283>   MOVEA.l D0,A3
00025212 <AmiBlitz3.ab3@9284>   CMP.w $4(A3),D4
00025216 <AmiBlitz3.ab3@9285>    BNE.w JL_0_6E90
0002521A <AmiBlitz3.ab3@9286>   CMP.w $6(A3),D5
0002521E <AmiBlitz3.ab3@9287>    BNE.w JL_0_6E90
00025222 <AmiBlitz3.ab3@9288> BRA.w JL_0_6ED0
00025224 <AmiBlitz3.ab3@9291>   MOVEQ.l #$0C,D0
00025226 <AmiBlitz3.ab3@9292>   MOVEQ.l #$01,D1
0002522C <AmiBlitz3.ab3@9293>   MOVE.l mempool,a0
00025230 <AmiBlitz3.ab3@9294>   JSR _AllocPooled(a6)
00025232 <AmiBlitz3.ab3@9296>   MOVEA.l D0,A3
00025238 <AmiBlitz3.ab3@9297>   MOVE.l tokeslist,(A3)
0002523E <AmiBlitz3.ab3@9298>   MOVE.l A3,tokeslist
00025242 <AmiBlitz3.ab3@9299>   MOVE.w D4,$4(A3)
00025246 <AmiBlitz3.ab3@9300>   MOVE.w D5,$6(A3)
0002524A <AmiBlitz3.ab3@9301>   CLR.l $8(A3)
0002524C <AmiBlitz3.ab3@9304>   MOVEQ.l #$08,D0
0002524E <AmiBlitz3.ab3@9305>   MOVEQ.l #$01,D1
00025254 <AmiBlitz3.ab3@9306>   MOVE.l mempool,a0
00025258 <AmiBlitz3.ab3@9307>   JSR _AllocPooled(a6)
0002525A <AmiBlitz3.ab3@9309>   MOVEA.l D0,A0
0002525E <AmiBlitz3.ab3@9310>   MOVE.l D3,$4(A0)
00025262 <AmiBlitz3.ab3@9311>   MOVE.l $8(A3),(A0)
00025266 <AmiBlitz3.ab3@9312>   MOVE.l A0,$8(A3)
00025268 <AmiBlitz3.ab3@9313>   MOVE.w D4,D1
0002526C <AmiBlitz3.ab3@9314> BRA.w searchinstr
00025270 <AmiBlitz3.ab3@9317> tokeslist: Ds.l 1
00025274 <AmiBlitz3.ab3@9330>   BEQ.w uselib2_org__skip
00025276 <AmiBlitz3.ab3@9331>   MOVE.l A1,-(A7)
00025278 <AmiBlitz3.ab3@9332>   ADDA.l D1,A1
0002527A <AmiBlitz3.ab3@9333>   ADDQ.w #6,A1
0002527C <AmiBlitz3.ab3@9336>     MOVE.w (A1)+,D1
00025280 <AmiBlitz3.ab3@9337>     BEQ.w uselib2_org__done
00025282 <AmiBlitz3.ab3@9338>     CMP.w D2,D1
00025286 <AmiBlitz3.ab3@9339>     BEQ.w uselib2_org__skip2
00025288 <AmiBlitz3.ab3@9340>     MOVE.l A1,-(A7)
0002528C <AmiBlitz3.ab3@9341>     BSR.w uselib
0002528E <AmiBlitz3.ab3@9342>     MOVEA.l (A7)+,A1
00025290 <AmiBlitz3.ab3@9345>     ADDQ.w #2,A1
00025294 <AmiBlitz3.ab3@9346> BRA.w uselib2_org__loop
00025296 <AmiBlitz3.ab3@9349>   MOVEA.l (A7)+,A1
00025298 <AmiBlitz3.ab3@9352> RTS
0002529E <AmiBlitz3.ab3@9356>   MOVEA.l libpointer,A1
000252A2 <AmiBlitz3.ab3@9359>   CMPA.w #$0,A1
000252A6 <AmiBlitz3.ab3@9360>    BEQ.b JL_0_6F36
000252AA <AmiBlitz3.ab3@9361>   CMP.w $4(A1),D1
000252AE <AmiBlitz3.ab3@9362>    BEQ.w JL_0_6F34
000252B0 <AmiBlitz3.ab3@9363>   MOVEA.l (A1),A1
000252B4 <AmiBlitz3.ab3@9364> BRA.w JL_0_6F20
000252B6 <AmiBlitz3.ab3@9367>   MOVEQ.l #-$01,D1
000252B8 <AmiBlitz3.ab3@9370> RTS
000252BC <AmiBlitz3.ab3@9374>   MOVEM.l d0/a2,-(a7)
000252BE <AmiBlitz3.ab3@9375>   MOVEQ #0,d0
000252C4 <AmiBlitz3.ab3@9376>   LEA instrtab+4,a2
000252C6 <AmiBlitz3.ab3@9377>   MOVE.w d1,d0
000252C8 <AmiBlitz3.ab3@9378>   ASL.l #3,d0
000252CC <AmiBlitz3.ab3@9379>   MOVE.l 0(a2,d0.l),a1                                     ;*8
000252D2 <AmiBlitz3.ab3@9380>   CMP.l #0,a1
000252D6 <AmiBlitz3.ab3@9381>   BNE JL_0_6F54b
000252DC <AmiBlitz3.ab3@9383>   MOVEA.l libpointer,A1
000252E0 <AmiBlitz3.ab3@9386>     CMPA.w #$0,A1
000252E4 <AmiBlitz3.ab3@9387>     BEQ.w noliberr
000252E8 <AmiBlitz3.ab3@9388>     CMP.w $4(A1),D1
000252EC <AmiBlitz3.ab3@9389>     BEQ.w JL_0_6F54
000252EE <AmiBlitz3.ab3@9390>    MOVEA.l (A1),A1
000252F2 <AmiBlitz3.ab3@9391> BRA.w JL_0_6F3E
000252F6 <AmiBlitz3.ab3@9394>   MOVE.l a1,0(a2,d0.l)
000252FA <AmiBlitz3.ab3@9397>   MOVEM.l (a7)+,d0/a2
000252FC <AmiBlitz3.ab3@9398> RTS
00025300 <AmiBlitz3.ab3@9401>   MOVEM.l d0-d1/a1,-(a7)
00025302 <AmiBlitz3.ab3@9402>   MOVEQ #0,d0
00025308 <AmiBlitz3.ab3@9403>   LEA instrtab,a1
0002530A <AmiBlitz3.ab3@9404>   MOVE.w d1,d0
0002530C <AmiBlitz3.ab3@9405>   ASL.l #3,d0
00025310 <AmiBlitz3.ab3@9406>   MOVE.l 0(a1,d0.l),a3
00025314 <AmiBlitz3.ab3@9407>   MOVE.l 4(a1,d0.l),a2
0002531A <AmiBlitz3.ab3@9408>   CMP.l #0,a3
0002531E <AmiBlitz3.ab3@9409>   BNE JL_0_6F92b
00025324 <AmiBlitz3.ab3@9411>   MOVEA.l libpointer,A2
00025328 <AmiBlitz3.ab3@9414>   CMPA.w #$0,A2
0002532C <AmiBlitz3.ab3@9415>   BEQ.w notokerr
00025330 <AmiBlitz3.ab3@9416>   CMP.w $E(A2),D1
00025334 <AmiBlitz3.ab3@9417>   BCS.w JL_0_6FB8
00025338 <AmiBlitz3.ab3@9418>   CMP.w $10(A2),D1
0002533C <AmiBlitz3.ab3@9419>   BCC.w JL_0_6FB8
00025340 <AmiBlitz3.ab3@9420>   LEA $30(A2),A3
00025344 <AmiBlitz3.ab3@9421>   TST.w $4(A2)
00025348 <AmiBlitz3.ab3@9422>   BPL.w JL_0_6FA6
0002534C <AmiBlitz3.ab3@9425>     CMP.w $E(A2),D1
00025350 <AmiBlitz3.ab3@9426>     BEQ.w JL_0_6F92
00025352 <AmiBlitz3.ab3@9427>     SUBQ.w #1,D1
00025356 <AmiBlitz3.ab3@9428>     MOVEA.l $2(A3),A3
0002535A <AmiBlitz3.ab3@9429> BRA.w JL_0_6F80
0002535E <AmiBlitz3.ab3@9432>   MOVE.l a3,0(a1,d0.l)
00025362 <AmiBlitz3.ab3@9433>   MOVE.l a2,4(a1,d0.l)
00025366 <AmiBlitz3.ab3@9436>   MOVEM.l (a7)+,d0-d1/a1
0002536A <AmiBlitz3.ab3@9437>   MOVEM.l D1/A1-a3,-(A7)
0002536E <AmiBlitz3.ab3@9438>   CMP.w #1,(a3)
00025372 <AmiBlitz3.ab3@9439>   BNE.s ex10
0002537A <AmiBlitz3.ab3@9440>   CMP.l #$12345678,$e(a3)
0002537E <AmiBlitz3.ab3@9441>   BNE.s ex10
00025384 <AmiBlitz3.ab3@9442>   CMP.w #$ffff,$16(a3)
00025388 <AmiBlitz3.ab3@9443>   BNE.s ex10
0002538C <AmiBlitz3.ab3@9444>   MOVE.l $12(a3),d1
00025390 <AmiBlitz3.ab3@9445>   BEQ.s ex10
00025396 <AmiBlitz3.ab3@9446>   LEA pluginbase,a3
0002539A <AmiBlitz3.ab3@9448> JMP 0(a2,d1.l)                                             ;plugin
0002539E <AmiBlitz3.ab3@9451>   MOVEM.l (A7)+,D1/A1-a3
000253A4 <AmiBlitz3.ab3@9452>   JSR stripspaces
000253A6 <AmiBlitz3.ab3@9453>   MOVEQ #0,d0
000253A8 <AmiBlitz3.ab3@9454>   MOVE.b (a5)+,d0
000253AE <AmiBlitz3.ab3@9455>   MOVE.w d0,lastchar
000253B0 <AmiBlitz3.ab3@9456>   ADDQ.l #4,a7
000253B2 <AmiBlitz3.ab3@9457> RTS
000253B4 <AmiBlitz3.ab3@9461>   MOVEA.l A2,A1
000253BA <AmiBlitz3.ab3@9462>   CLR.b newmode
000253BE <AmiBlitz3.ab3@9463>   MOVE.w $4(A1),D1
000253C2 <AmiBlitz3.ab3@9466>   BSR.w uselib3
000253C6 <AmiBlitz3.ab3@9467>   MOVEM.l (A7)+,D1/A1-a3
000253C8 <AmiBlitz3.ab3@9468> RTS
000253CE <AmiBlitz3.ab3@9471>   MOVE.w globalvarpointer,-(a7)
000253D6 <AmiBlitz3.ab3@9472>   MOVE.w #$8004,globalvarpointer
000253DA <AmiBlitz3.ab3@9473>   BSR.w uselib3
000253E0 <AmiBlitz3.ab3@9474>   MOVE.w (a7)+,globalvarpointer
000253E4 <AmiBlitz3.ab3@9475>   MOVEM.l (A7)+,D1/A1-a3
000253E6 <AmiBlitz3.ab3@9476> RTS
000253EA <AmiBlitz3.ab3@9479>     CMP.w $E(A2),D1
000253EE <AmiBlitz3.ab3@9480>     BEQ.w JL_0_6F92
000253F0 <AmiBlitz3.ab3@9481>     SUBQ.w #1,D1
000253F4 <AmiBlitz3.ab3@9482>     MOVEA.l $2(A3),A3
000253F8 <AmiBlitz3.ab3@9483> BRA.w JL_0_6FA6
000253FA <AmiBlitz3.ab3@9486>   MOVEA.l (A2),A2
000253FE <AmiBlitz3.ab3@9487> BRA.w JL_0_6F5C
00025404 <AmiBlitz3.ab3@9490> JMP writeword
00025408 <AmiBlitz3.ab3@9493> ptr_acidlibs:   Ds.l 1                                     ;deflibsat org source
0002540C <AmiBlitz3.ab3@9494> ptr_deflibs:    Ds.l 1                                     ;acidlibsat org source
00025410 <AmiBlitz3.ab3@9495> ptr_userlibs:   Ds.l 1                                     ;blitzlibsat org source  ;;start of blitzlibs list!
00025412 <AmiBlitz3.ab3@9501>   TST.l D0
00025416 <AmiBlitz3.ab3@9502>   BEQ.w exit_loadlibsfile
00025418 <AmiBlitz3.ab3@9503>     MOVE.l D0,D6                                           ;d6=len
0002541E <AmiBlitz3.ab3@9504>     MOVEA.l _dosbase,A6
00025424 <AmiBlitz3.ab3@9505>     MOVE.l #HUNK_RELOC_16__MODE_OLDFILE,D2
00025428 <AmiBlitz3.ab3@9506>     JSR _Open(A6)
0002542A <AmiBlitz3.ab3@9507>     MOVE.l D0,D7
0002542E <AmiBlitz3.ab3@9508>     BEQ.w exit_loadlibsfile
00025430 <AmiBlitz3.ab3@9509>       MOVE.l D6,D0
00025432 <AmiBlitz3.ab3@9510>       MOVEQ.l #$01,D1
00025438 <AmiBlitz3.ab3@9511>       MOVEA.l _execbase,A6
0002543E <AmiBlitz3.ab3@9512>       MOVE.l mempool,a0
00025442 <AmiBlitz3.ab3@9513>       JSR _AllocPooled(a6)
00025444 <AmiBlitz3.ab3@9514>       MOVE.l D0,D5                                         ;start address
00025446 <AmiBlitz3.ab3@9516>       MOVE.l D7,D1                                         ; handle
00025448 <AmiBlitz3.ab3@9517>       MOVE.l D5,D2                                         ; buffer addr
0002544A <AmiBlitz3.ab3@9518>       MOVE.l D6,D3                                         ; size
00025450 <AmiBlitz3.ab3@9519>       MOVEA.l _dosbase,A6
00025454 <AmiBlitz3.ab3@9520>       JSR _Read(A6)
00025456 <AmiBlitz3.ab3@9521>       MOVE.l D7,D1
0002545A <AmiBlitz3.ab3@9522>       JSR _Close(A6)
0002545C <AmiBlitz3.ab3@9524>       MOVEA.l D5,A0                                        ; buffer addr
0002545E <AmiBlitz3.ab3@9530>         MOVE.l (A0)+,D0                                    ; naechster Longwert nach DO
00025462 <AmiBlitz3.ab3@9531>         BEQ.b JL_0_7044                                    ; wenn <> 0, dann
00025466 <AmiBlitz3.ab3@9532>           LEA $20(A0),A1                                   ;   lade inhalt von D0+40bytes nach A1
00025468 <AmiBlitz3.ab3@9533>           MOVE.l A1,(A3)                                   ;   kopiere Adresse in A1 zum libpointer
0002546A <AmiBlitz3.ab3@9534>           MOVEA.l A1,A3                                    ;   kopiere A1 nach A3
0002546C <AmiBlitz3.ab3@9535>           ADDA.l D0,A0                                     ;   addiere inhalt von D0 zu A0 hinzu
00025470 <AmiBlitz3.ab3@9536>           MOVE.l -$4(A1),D0                                ;   hole die 4bytes vor nach D0
00025472 <AmiBlitz3.ab3@9537>           ADD.l D0,D0                                      ;   verdoppele D0
00025474 <AmiBlitz3.ab3@9538>           ADD.l D0,D0                                      ;   verdoppele D0 nochmal
00025478 <AmiBlitz3.ab3@9539>           MOVE.l D0,$6(A1)                                 ;   schreibe D0 6bytes nach A1
0002547C <AmiBlitz3.ab3@9540>           CLR.l $20(A1)                                    ;   loesche D0+40bytes
00025480 <AmiBlitz3.ab3@9541>           LEA $C(A1,D0.L),A2                               ;   lade inhalt von (A1)+D0+$C nach A2
00025482 <AmiBlitz3.ab3@9542>           CMPA.l A0,A2
00025486 <AmiBlitz3.ab3@9543>           BCC.b JL_0_7010                                  ; wenn A0=>A2
0002548C <AmiBlitz3.ab3@9544>             MOVE.l -$8(A2),$20(A1)                         ;
00025490 <AmiBlitz3.ab3@9545>             MOVE.l A2,$24(A1)                              ;
00025494 <AmiBlitz3.ab3@9546> BRA.w JL_0_7010
00025496 <AmiBlitz3.ab3@9549>       MOVE.l D5,D0
00025498 <AmiBlitz3.ab3@9552> RTS
000254C2 <AmiBlitz3.ab3@9556>   !basic
00025536 <AmiBlitz3.ab3@9557>    tempmapping$ = dos_AddPart{my_systemdir$,"token_mapping_userlibs.txt"}
0002556A <AmiBlitz3.ab3@9558>    dos_Delete{tempmapping$}
000255AE <AmiBlitz3.ab3@9559>    fid.l = file_Open{tempmapping$,#file_forcewrite}
000255CC <AmiBlitz3.ab3@9560>   !asm
000255D2 <AmiBlitz3.ab3@9562>   LEA libpointer,A3
000255D8 <AmiBlitz3.ab3@9566>   MOVE.l size_deflibs,D0
000255DE <AmiBlitz3.ab3@9567>   MOVE.l deflib,d1
000255E2 <AmiBlitz3.ab3@9568>   BEQ 'l1
000255E6 <AmiBlitz3.ab3@9569> BRA 'l2
000255EC <AmiBlitz3.ab3@9572>   MOVE.l #str_path_deflibs,D1
000255F0 <AmiBlitz3.ab3@9575>   BSR.w load_libsfile
000255F6 <AmiBlitz3.ab3@9576>   MOVE.l D0,ptr_deflibs
000255FC <AmiBlitz3.ab3@9579>   MOVE.l size_acidlibs,D0
00025602 <AmiBlitz3.ab3@9580>   MOVE.l #str_path_acidlibs,D1
00025606 <AmiBlitz3.ab3@9581>   BSR.w load_libsfile
0002560C <AmiBlitz3.ab3@9582>   MOVE.l D0,ptr_acidlibs
0002560E <AmiBlitz3.ab3@9586>   CLR.l (A3)
00025614 <AmiBlitz3.ab3@9587>   MOVE.l A3,ptr_userlibs
0002561A <AmiBlitz3.ab3@9592>   LEA str_libfilename,A0
00025620 <AmiBlitz3.ab3@9593>   LEA str_path_userlibs,A1
00025622 <AmiBlitz3.ab3@9596>     MOVE.b (A1)+,(A0)+
00025626 <AmiBlitz3.ab3@9597>   BNE.b JL_0_708E
00025628 <AmiBlitz3.ab3@9599>   SUBQ.w #1,A0
0002562C <AmiBlitz3.ab3@9600>   MOVE.b #$2F,(A0)+
0002562E <AmiBlitz3.ab3@9603>   MOVE.l A0,-(A7)                                          ; -- store str_path_userlibs in A7
00025634 <AmiBlitz3.ab3@9605>   LEA ptr_userlibs_list,A2
0002563A <AmiBlitz3.ab3@9606>   MOVEA.l ptr_userlibs,A3
00025640 <AmiBlitz3.ab3@9607>   MOVEA.l _dosbase,A6
00025642 <AmiBlitz3.ab3@9612>       MOVE.l (A2),D0                                       ; addresse aus liste nach D0
00025646 <AmiBlitz3.ab3@9613>       BNE.b JL_0_70C6                                      ; wenn nix drin, processing ueberspringen
00025648 <AmiBlitz3.ab3@9615>       CLR.l (A3)
0002564A <AmiBlitz3.ab3@9616>       ADDQ.w #4,A7
00025674 <AmiBlitz3.ab3@9617>       !basic
00025688 <AmiBlitz3.ab3@9618>       If fid<>-1
00025692 <AmiBlitz3.ab3@9619>         file_Close{fid}
0002569E <AmiBlitz3.ab3@9620>         fid = -1
000256BC <AmiBlitz3.ab3@9622>       !asm
000256C0 <AmiBlitz3.ab3@9623> BRA.w process_libraries
000256C2 <AmiBlitz3.ab3@9626>       MOVEA.l D0,A2                                        ; addresse zureuck nach A2
000256C6 <AmiBlitz3.ab3@9627>       TST.w $4(A2)                                         ; naechste addresse pruefen
000256CA <AmiBlitz3.ab3@9628>     BEQ.b JL_0_70BA
000256CE <AmiBlitz3.ab3@9630>     LEA $6(A2),A1
000256D0 <AmiBlitz3.ab3@9631>     MOVEA.l (A7),A0
000256D2 <AmiBlitz3.ab3@9634>       MOVE.b (A1)+,(A0)+
000256D6 <AmiBlitz3.ab3@9635>     BNE.w JL_0_70D4
000256D8 <AmiBlitz3.ab3@9639>     MOVE.l A0,-(A7)
000256DE <AmiBlitz3.ab3@9640>     MOVE.l #str_libfilename,D1
000256E0 <AmiBlitz3.ab3@9641>     MOVEQ.l #-$02,D2
000256E6 <AmiBlitz3.ab3@9642>     MOVEA.l _dosbase,A6
000256EA <AmiBlitz3.ab3@9643>      JSR _Lock(A6)
000256EC <AmiBlitz3.ab3@9644>     MOVE.l D0,D1
000256F0 <AmiBlitz3.ab3@9645>      BEQ.w JL_0_7156
000256F2 <AmiBlitz3.ab3@9646>     MOVEA.l (A7),A0
000256F8 <AmiBlitz3.ab3@9647>     MOVE.b #$2F,-$1(A0)
000256FA <AmiBlitz3.ab3@9650>     MOVE.l D1,-(A7)
00025700 <AmiBlitz3.ab3@9651>     MOVE.l #ptr_parameterstore,D2
00025706 <AmiBlitz3.ab3@9652>     MOVEA.l _dosbase,A6
0002570A <AmiBlitz3.ab3@9653>     JSR _Examine(A6)
0002570C <AmiBlitz3.ab3@9654>     TST.l D0
00025710 <AmiBlitz3.ab3@9655>      BEQ.w JL_0_7150
00025716 <AmiBlitz3.ab3@9658>     LEA fib_FileName,A0
0002571A <AmiBlitz3.ab3@9659>     BSR.w check_for_infoextention
0002571E <AmiBlitz3.ab3@9660>     BEQ.w JL_0_7150
00025748 <AmiBlitz3.ab3@9663>     !basic
000257CC <AmiBlitz3.ab3@9664>       Poke$ ?str_libfilename,dos_AddPart{Peek$(?str_path_userlibs),Peek$(?fib_FileName)}
000257EA <AmiBlitz3.ab3@9665>     !asm
000257F0 <AmiBlitz3.ab3@9666>     MOVE.l #str_libfilename,D1
000257F4 <AmiBlitz3.ab3@9667>     BSR.w open_userlibfile
000257F6 <AmiBlitz3.ab3@9670>     MOVE.l (A7)+,D1
000257FC <AmiBlitz3.ab3@9671>     MOVEA.l _dosbase,A6
00025800 <AmiBlitz3.ab3@9672>     JSR _UnLock(A6)
00025802 <AmiBlitz3.ab3@9675>     ADDQ.w #4,A7
00025806 <AmiBlitz3.ab3@9676> BRA.w JL_0_70BA
0002580C <AmiBlitz3.ab3@9679>   MOVE.l #HUNK_RELOC_16__MODE_OLDFILE,D2
00025812 <AmiBlitz3.ab3@9680>   MOVEA.l _dosbase,A6
00025816 <AmiBlitz3.ab3@9681>    JSR _Open(A6)
00025818 <AmiBlitz3.ab3@9682>   MOVE.l D0,D7
0002581C <AmiBlitz3.ab3@9683>    BEQ.w exit_userlibfile
0002581E <AmiBlitz3.ab3@9686>   MOVE.l D7,D1                                             ; filehandle
00025824 <AmiBlitz3.ab3@9687>   MOVE.l #optstuff,D2                                     ; buffer
0002582A <AmiBlitz3.ab3@9688>   MOVEA.l _dosbase,A6
0002582C <AmiBlitz3.ab3@9689>   MOVEQ.l #$20,D3                                          ; size
00025830 <AmiBlitz3.ab3@9690>   JSR _Read(A6)
00025836 <AmiBlitz3.ab3@9693>   MOVE.l optstuff+28,D6
00025838 <AmiBlitz3.ab3@9694>   LSL.l #2,D6
0002583A <AmiBlitz3.ab3@9695>   MOVE.l D6,D0
0002583C <AmiBlitz3.ab3@9696>   MOVEQ.l #$01,D1
00025842 <AmiBlitz3.ab3@9697>   MOVEA.l _execbase,A6
00025848 <AmiBlitz3.ab3@9698>   MOVE.l mempool,a0
0002584C <AmiBlitz3.ab3@9699>   JSR _AllocPooled(a6)
0002584E <AmiBlitz3.ab3@9700>   MOVEA.l D0,A5
00025854 <AmiBlitz3.ab3@9703>   MOVEA.l _dosbase,A6
00025856 <AmiBlitz3.ab3@9704>   MOVE.l D7,D1                                             ; filehandle
00025858 <AmiBlitz3.ab3@9705>   MOVE.l A5,D2                                             ; buffer
0002585A <AmiBlitz3.ab3@9706>   MOVE.l D6,D3                                             ; size
0002585E <AmiBlitz3.ab3@9707>    JSR _Read(A6)
00025860 <AmiBlitz3.ab3@9708>   MOVE.l A5,(A3)
00025862 <AmiBlitz3.ab3@9710>   MOVE.l A5,d0
00025864 <AmiBlitz3.ab3@9712>   MOVEA.l A5,A3
00025868 <AmiBlitz3.ab3@9713>   MOVE.l D6,$6(A5)
0002586C <AmiBlitz3.ab3@9714>   CLR.l $20(A5)
00025896 <AmiBlitz3.ab3@9716>   !basic
000258A0 <AmiBlitz3.ab3@9718>   addr_libnum.l = PutD0 + 4
000258B4 <AmiBlitz3.ab3@9719>   If fid<>-1
00025954 <AmiBlitz3.ab3@9720>     currentlib$ = LSet$(Peek.s(?fib_FileName),30)+";"+LSet$(Get_Libinfo{addr_libnum},30) ;+";"+Str$(Peek.w(addr_libnum))
00025986 <AmiBlitz3.ab3@9721>     file_WriteLine{fid,currentlib$}
000259A4 <AmiBlitz3.ab3@9723>   !asm
000259A6 <AmiBlitz3.ab3@9726>   MOVE.l D7,D1                                             ; filehandle
000259AC <AmiBlitz3.ab3@9727>   MOVE.l #optstuff,D2                                     ; buffer
000259AE <AmiBlitz3.ab3@9728>   MOVEQ.l #$0C,D3                                          ; size
000259B4 <AmiBlitz3.ab3@9729>   MOVEA.l _dosbase,A6
000259B8 <AmiBlitz3.ab3@9730>    JSR _Read(A6)
000259BE <AmiBlitz3.ab3@9732>   CMP.l #$C,D0
000259C2 <AmiBlitz3.ab3@9733>    BCS.w close_and_exit_userlibfile
000259C8 <AmiBlitz3.ab3@9736>   MOVE.l optstuff+4,D0
000259CC <AmiBlitz3.ab3@9737>   MOVE.l D0,$20(A5)
000259CE <AmiBlitz3.ab3@9738>   LSL.l #2,D0
000259D0 <AmiBlitz3.ab3@9739>   MOVE.l D0,D5
000259D2 <AmiBlitz3.ab3@9740>   MOVEQ.l #$01,D1
000259D8 <AmiBlitz3.ab3@9741>   MOVEA.l _execbase,A6
000259DE <AmiBlitz3.ab3@9742>   MOVE.l mempool,a0
000259E2 <AmiBlitz3.ab3@9743>   JSR _AllocPooled(a6)
000259E8 <AmiBlitz3.ab3@9745>   MOVEA.l _dosbase,A6
000259EC <AmiBlitz3.ab3@9746>   MOVE.l D0,$24(A5)
000259EE <AmiBlitz3.ab3@9747>   MOVE.l D7,D1
000259F0 <AmiBlitz3.ab3@9748>   MOVE.l D0,D2
000259F2 <AmiBlitz3.ab3@9749>   MOVE.l D5,D3
000259F6 <AmiBlitz3.ab3@9750>   JSR _Read(A6)
000259F8 <AmiBlitz3.ab3@9753>   MOVE.l D7,D1
000259FE <AmiBlitz3.ab3@9754>   MOVEA.l _dosbase,A6
00025A02 <AmiBlitz3.ab3@9755> JMP _Close(A6)
00025A04 <AmiBlitz3.ab3@9758> RTS
00025A0A <AmiBlitz3.ab3@9764>   CLR.w number_of_objects
00025A10 <AmiBlitz3.ab3@9765>   MOVEA.l end_of_tokenlist,A3
00025A16 <AmiBlitz3.ab3@9766>   MOVEA.l libpointer,A2
00025A1A <AmiBlitz3.ab3@9769>     CMPA.w #$0,A2
00025A1E <AmiBlitz3.ab3@9770>     BEQ.w JL_0_72D8                                        ; <-- abbruch mit RTS
00025A22 <AmiBlitz3.ab3@9772>     MOVE.w $4(A2),D7                                       ; <-- get tokennumber
00025A26 <AmiBlitz3.ab3@9773>     BMI.w JL_0_7226
00025A28 <AmiBlitz3.ab3@9774>       LSL.w #7,D7
00025A2A <AmiBlitz3.ab3@9775>       ADDQ.w #1,D7
00025A2E <AmiBlitz3.ab3@9776>       MOVE.w D7,$E(A2)
00025A32 <AmiBlitz3.ab3@9779>     LEA $30(A2),A1
00025A38 <AmiBlitz3.ab3@9780>     LEA temp1,A4
00025A3A <AmiBlitz3.ab3@9783>       MOVE.w (A1),D0
00025A3E <AmiBlitz3.ab3@9784>       BMI.w JL_0_72AE
00025A40 <AmiBlitz3.ab3@9785>       MOVE.l A1,(A4)
00025A42 <AmiBlitz3.ab3@9786>       MOVEA.l A1,A4
00025A44 <AmiBlitz3.ab3@9787>       ADDQ.w #2,A4
00025A46 <AmiBlitz3.ab3@9788>       ADDQ.w #6,A1
00025A4A <AmiBlitz3.ab3@9789>       CMP.w #$8,D0
00025A4E <AmiBlitz3.ab3@9790>       BEQ.w JL_0_7290
00025A52 <AmiBlitz3.ab3@9791>         ANDI.w #$F,D0
00025A56 <AmiBlitz3.ab3@9792>         BNE.w JL_0_725C
00025A5A <AmiBlitz3.ab3@9793>           BSR.w skiplibreg
00025A5E <AmiBlitz3.ab3@9794>           LEA $C(A1),A1
00025A60 <AmiBlitz3.ab3@9795>           ADDQ.w #1,D7
00025A64 <AmiBlitz3.ab3@9796> BRA.w JL_0_7230
00025A68 <AmiBlitz3.ab3@9799>     BTST #$2,D0
00025A6C <AmiBlitz3.ab3@9800>     BEQ.w JL_0_7274
00025A6E <AmiBlitz3.ab3@9801>       ADDQ.w #4,A1
00025A70 <AmiBlitz3.ab3@9804>         TST.b (A1)+
00025A74 <AmiBlitz3.ab3@9805>       BPL.w JL_0_7266
00025A78 <AmiBlitz3.ab3@9806>       BSR.w aligna1
00025A7C <AmiBlitz3.ab3@9807> BRA.w JL_0_7290
00025A7E <AmiBlitz3.ab3@9810>       MOVE.w (A1)+,D0
00025A82 <AmiBlitz3.ab3@9811>       BMI.w JL_0_7290
00025A86 <AmiBlitz3.ab3@9812>       ANDI.w #$FF,D0
00025A88 <AmiBlitz3.ab3@9813>       ADDA.w D0,A1
00025A8C <AmiBlitz3.ab3@9814>       BSR.w aligna1
00025A90 <AmiBlitz3.ab3@9815>       BSR.w skiplibreg
00025A94 <AmiBlitz3.ab3@9816>       LEA $C(A1),A1
00025A98 <AmiBlitz3.ab3@9817> BRA.w JL_0_7274
00025A9A <AmiBlitz3.ab3@9820>     MOVE.l A1,(A3)
00025A9C <AmiBlitz3.ab3@9821>     MOVEA.l A1,A3
00025A9E <AmiBlitz3.ab3@9822>     ADDQ.w #4,A1
00025AA0 <AmiBlitz3.ab3@9823>     MOVE.w D7,(A1)+
00025AA2 <AmiBlitz3.ab3@9826>       TST.b (A1)+
00025AA6 <AmiBlitz3.ab3@9827>     BNE.w JL_0_7298
00025AA8 <AmiBlitz3.ab3@9830>       TST.b (A1)+
00025AAC <AmiBlitz3.ab3@9831>     BNE.w JL_0_729E
00025AB0 <AmiBlitz3.ab3@9833>     BSR.w aligna1
00025AB2 <AmiBlitz3.ab3@9834>     ADDQ.w #1,D7
00025AB6 <AmiBlitz3.ab3@9835> BRA.w JL_0_7230
00025ABA <AmiBlitz3.ab3@9838>     TST.w $4(A2)
00025ABE <AmiBlitz3.ab3@9839>      BMI.w JL_0_72BA
00025AC2 <AmiBlitz3.ab3@9840>     MOVE.w D7,$10(A2)
00025AC4 <AmiBlitz3.ab3@9843>     ADDQ.w #2,A1
00025AC6 <AmiBlitz3.ab3@9844>     TST.l (A1)+
00025ACA <AmiBlitz3.ab3@9845>      BEQ.w JL_0_72CC
00025AD0 <AmiBlitz3.ab3@9846>     ADDQ.w #1,number_of_objects
00025AD4 <AmiBlitz3.ab3@9847>     LEA $16(A1),A1
00025AD6 <AmiBlitz3.ab3@9850>     SUBA.l A2,A1
00025ADA <AmiBlitz3.ab3@9851>     MOVE.l A1,$12(A2)
00025ADC <AmiBlitz3.ab3@9852>     MOVEA.l (A2),A2
00025AE0 <AmiBlitz3.ab3@9853> BRA.w JL_0_720E
00025AE2 <AmiBlitz3.ab3@9856>   CLR.l (A3)
00025AE8 <AmiBlitz3.ab3@9857>   MOVE.l A7,errstack
00025AF2 <AmiBlitz3.ab3@9858>   MOVE.l #AL_0_730E,errcont
00025AFA <AmiBlitz3.ab3@9859>   MOVE.w #$FFFF,ezerr
00025AFE <AmiBlitz3.ab3@9860>   MOVE.w #$FFFA,D1
00025B02 <AmiBlitz3.ab3@9861>    BSR.w JL_0_6F38
00025B08 <AmiBlitz3.ab3@9862>   MOVE.l A1,tempvm
00025B0C <AmiBlitz3.ab3@9863>   MOVE.w #$FDA7,D1
00025B10 <AmiBlitz3.ab3@9864>    BSR.w JL_0_6F38
00025B16 <AmiBlitz3.ab3@9865>   MOVE.l A1,ffplib
00025B18 <AmiBlitz3.ab3@9868> RTS
00025B1C <AmiBlitz3.ab3@9871> ffplib:  Ds.l 1
00025B1E <AmiBlitz3.ab3@9875>     TST.w (A1)+
00025B22 <AmiBlitz3.ab3@9876>     BEQ.w JL_0_7320
00025B24 <AmiBlitz3.ab3@9877>     ADDQ.w #2,A1
00025B28 <AmiBlitz3.ab3@9878> BRA.w skiplibreg
00025B2A <AmiBlitz3.ab3@9881> RTS
00025B2C <AmiBlitz3.ab3@9885>   EXG.l A1,A0
00025B30 <AmiBlitz3.ab3@9886>   BSR.w aligna1
00025B32 <AmiBlitz3.ab3@9887>   EXG.l A1,A0
00025B34 <AmiBlitz3.ab3@9888> RTS
00025B36 <AmiBlitz3.ab3@9891>   EXG.l D0,A1
00025B38 <AmiBlitz3.ab3@9892>   ADDQ.l #1,D0
00025B3C <AmiBlitz3.ab3@9893>   BCLR #$0,D0
00025B3E <AmiBlitz3.ab3@9894>   EXG.l D0,A1
00025B40 <AmiBlitz3.ab3@9895> RTS
00025B46 <AmiBlitz3.ab3@9899>   MOVEA.l _execbase,A6
00025B4C <AmiBlitz3.ab3@9900>   MOVEA.l ptr_userlibs,A2
00025B4E <AmiBlitz3.ab3@9901>   MOVE.l (A2),D0
00025B50 <AmiBlitz3.ab3@9902>   CLR.l (A2)
00025B52 <AmiBlitz3.ab3@9903>   MOVEA.l D0,A2
00025B56 <AmiBlitz3.ab3@9906>     CMPA.w #$0,A2
00025B5A <AmiBlitz3.ab3@9907>     BEQ.w free_userlib
00025B5E <AmiBlitz3.ab3@9909>     MOVE.l $20(A2),D0
00025B62 <AmiBlitz3.ab3@9910>     BEQ.b JL_0_7360
00025B64 <AmiBlitz3.ab3@9911>       LSL.l #2,D0
00025B6A <AmiBlitz3.ab3@9912>       MOVE.l mempool,a0
00025B6E <AmiBlitz3.ab3@9913>       MOVEA.l $24(A2),A1
00025B72 <AmiBlitz3.ab3@9914>       JSR _FreePooled(A6)
00025B74 <AmiBlitz3.ab3@9917>     MOVEA.l A2,A1
00025B78 <AmiBlitz3.ab3@9918>     MOVE.l $6(A1),D0
00025B7E <AmiBlitz3.ab3@9919>     MOVE.l mempool,a0
00025B80 <AmiBlitz3.ab3@9920>     MOVEA.l (A2),A2
00025B86 <AmiBlitz3.ab3@9921>     MOVEA.l _execbase,A6
00025B8A <AmiBlitz3.ab3@9922>     JSR _FreePooled(A6)
00025B8E <AmiBlitz3.ab3@9923> BRA.w JL_0_7348
00025B92 <AmiBlitz3.ab3@9927>   BSR.w free_userlibs
00025B98 <AmiBlitz3.ab3@9928>   MOVEA.l _execbase,A6
00025B9E <AmiBlitz3.ab3@9929>   CLR.l libpointer
00025BA4 <AmiBlitz3.ab3@9930>   MOVEA.l end_of_tokenlist,A0
00025BA6 <AmiBlitz3.ab3@9931>   CLR.l (A0)
00025BAC <AmiBlitz3.ab3@9933>   MOVE.l size_acidlibs,D0
00025BB0 <AmiBlitz3.ab3@9934>   BEQ.b JL_0_73A2
00025BB6 <AmiBlitz3.ab3@9935>     MOVE.l ptr_acidlibs,D1
00025BBA <AmiBlitz3.ab3@9936>     BEQ.b JL_0_73A2
00025BC0 <AmiBlitz3.ab3@9937>       CLR.l ptr_acidlibs
00025BC2 <AmiBlitz3.ab3@9938>       MOVEA.l D1,A1
00025BC8 <AmiBlitz3.ab3@9939>       MOVE.l mempool,a0
00025BCE <AmiBlitz3.ab3@9940>       MOVEA.l _execbase,A6
00025BD2 <AmiBlitz3.ab3@9941>       JSR _FreePooled(A6)                                 ; free acidlibs
00025BD8 <AmiBlitz3.ab3@9944>   MOVE.l size_deflibs,D0
00025BDC <AmiBlitz3.ab3@9945>   BEQ.b JL_0_73BE
00025BE2 <AmiBlitz3.ab3@9946>     MOVE.l ptr_deflibs,D1
00025BE6 <AmiBlitz3.ab3@9947>     BEQ.b JL_0_73BE
00025BEC <AmiBlitz3.ab3@9948>       CLR.l ptr_deflibs                                    ; d0: memorySize
00025BEE <AmiBlitz3.ab3@9949>       MOVEA.l D1,A1                                        ; a1: memory
00025BF4 <AmiBlitz3.ab3@9950>       MOVE.l mempool,a0                                    ; a0: poolHeader
00025BFA <AmiBlitz3.ab3@9951>       MOVEA.l _execbase,A6
00025BFE <AmiBlitz3.ab3@9952>       JSR _FreePooled(A6)                                  ; free deflibs
00025C00 <AmiBlitz3.ab3@9955> RTS
00025C06 <AmiBlitz3.ab3@9959>   MOVEA.l currentmacroaddr,A0
00025C08 <AmiBlitz3.ab3@9960>   MOVEA.l (A0),A2
00025C0A <AmiBlitz3.ab3@9961>   CLR.l (A0)
00025C10 <AmiBlitz3.ab3@9962>   MOVEA.l _execbase,A6
00025C14 <AmiBlitz3.ab3@9965>     CMPA.w #$0,A2
00025C18 <AmiBlitz3.ab3@9966>     BEQ.w JL_0_73FA
00025C1A <AmiBlitz3.ab3@9967>     MOVEQ.l #$00,D0
00025C1E <AmiBlitz3.ab3@9968>     MOVE.w $8(A2),D0
00025C22 <AmiBlitz3.ab3@9969>     BEQ.w JL_0_73E8
00025C26 <AmiBlitz3.ab3@9970>     MOVEA.l $4(A2),A1
00025C2C <AmiBlitz3.ab3@9971>     MOVE.l mempool,a0
00025C30 <AmiBlitz3.ab3@9972>     JSR _FreePooled(A6)
00025C32 <AmiBlitz3.ab3@9975>     MOVEA.l A2,A1
00025C34 <AmiBlitz3.ab3@9976>     MOVEA.l (A2),A2
00025C36 <AmiBlitz3.ab3@9977>     MOVEQ.l #$00,D0
00025C3A <AmiBlitz3.ab3@9978>     MOVE.b $C(A1),D0
00025C40 <AmiBlitz3.ab3@9979>     MOVE.l mempool2,a0
00025C44 <AmiBlitz3.ab3@9980>     JSR _FreePooled(A6)
00025C48 <AmiBlitz3.ab3@9981> BRA.w JL_0_73CE
00025C4A <AmiBlitz3.ab3@9984> RTS
00025C50 <AmiBlitz3.ab3@9988>   MOVEA.l templabel,A2
00025C56 <AmiBlitz3.ab3@9989>   CLR.l templabel
00025C58 <AmiBlitz3.ab3@9990> RTS
00025C5E <AmiBlitz3.ab3@9993>   MOVEA.l _execbase,A6                                     ;??looks like dead code?
00025C62 <AmiBlitz3.ab3@9996>     CMPA.w #$0,A2
00025C66 <AmiBlitz3.ab3@9997>     BEQ.w JL_0_7426
00025C68 <AmiBlitz3.ab3@9998>     MOVEQ.l #$00,D0
00025C6C <AmiBlitz3.ab3@9999>     MOVE.b $E(A2),D0                                       ;labeltemp
00025C6E <AmiBlitz3.ab3@10000>     MOVEA.l A2,A1
00025C70 <AmiBlitz3.ab3@10001>     MOVEA.l (A2),A2
00025C76 <AmiBlitz3.ab3@10002>     MOVE.l mempool2,a0
00025C7A <AmiBlitz3.ab3@10004> BRA.w JL_0_740C
00025C7C <AmiBlitz3.ab3@10007> RTS
00025C82 <AmiBlitz3.ab3@10011>   MOVEA.l data1,A4
00025C88 <AmiBlitz3.ab3@10012>   CMPA.l data2at,A4
00025C8C <AmiBlitz3.ab3@10013>   BCC.w JL_0_7442
00025C8E <AmiBlitz3.ab3@10014>     MOVE.b D1,(A4)+
00025C94 <AmiBlitz3.ab3@10015>     MOVE.l A4,data1
00025C96 <AmiBlitz3.ab3@10016> RTS
00025C9E <AmiBlitz3.ab3@10019>   MOVE.w #$FFFF,dontwrite                                  ;move #-1, org source
00025CA4 <AmiBlitz3.ab3@10020>   ADDQ.l #1,data1
00025CA6 <AmiBlitz3.ab3@10021> RTS
00025CA8 <AmiBlitz3.ab3@10025>   SWAP D1
00025CAC <AmiBlitz3.ab3@10026>   BSR.w pokedata1
00025CAE <AmiBlitz3.ab3@10027>   SWAP D1
00025CB4 <AmiBlitz3.ab3@10030>   MOVEA.l data1,A4
00025CBA <AmiBlitz3.ab3@10031>   CMPA.l data2at,A4
00025CBE <AmiBlitz3.ab3@10032>    BCC.w JL_0_7474
00025CC0 <AmiBlitz3.ab3@10033>   MOVE.w D1,(A4)+
00025CC6 <AmiBlitz3.ab3@10034>   MOVE.l A4,data1
00025CC8 <AmiBlitz3.ab3@10035> RTS
00025CD0 <AmiBlitz3.ab3@10038>   MOVE.w #$FFFF,dontwrite
00025CD6 <AmiBlitz3.ab3@10039>   ADDQ.l #2,data1
00025CD8 <AmiBlitz3.ab3@10040> RTS
00025CDE <AmiBlitz3.ab3@10044>   MOVE.l data1,D3                                      ;write local string/type allocs
00025CE0 <AmiBlitz3.ab3@10045>   MOVEQ.l #$00,D4
00025CE4 <AmiBlitz3.ab3@10048>   CMPA.w #$0,A2
00025CE8 <AmiBlitz3.ab3@10049>    BEQ.w JL_0_74CAc
00025CEC <AmiBlitz3.ab3@10050>   TST.w $6(A2)
00025CF0 <AmiBlitz3.ab3@10051>    BNE.w JL_0_74C4c
00025CF4 <AmiBlitz3.ab3@10052>   MOVEA.l $A(A2),A3
00025CFC <AmiBlitz3.ab3@10053>   CMPI.l #$100,$4(A3)
00025D00 <AmiBlitz3.ab3@10054>    BCS.w JL_0_74C4c
00025D04 <AmiBlitz3.ab3@10055>   MOVE.w $4(A2),D1
00025D08 <AmiBlitz3.ab3@10056>    BSR.w pokedata1
00025D0C <AmiBlitz3.ab3@10057>   MOVE.w $8(A3),D1
00025D10 <AmiBlitz3.ab3@10058>    BSR.w pokedata1
00025D12 <AmiBlitz3.ab3@10059>   ADDQ.w #1,D4
00025D14 <AmiBlitz3.ab3@10062>    MOVEA.l (A2),A2
00025D18 <AmiBlitz3.ab3@10063> BRA.w JL_0_7492c
00025D1A <AmiBlitz3.ab3@10066>    TST.w D4
00025D1E <AmiBlitz3.ab3@10067>    BEQ.w JL_0_74E0
00025D22 <AmiBlitz3.ab3@10068>   MOVE.w #$FF37,D1
00025D26 <AmiBlitz3.ab3@10069>    BSR.w uselib
00025D2A <AmiBlitz3.ab3@10070>   MOVE.w #$FFFA,D1
00025D2E <AmiBlitz3.ab3@10071> BRA.w uselib
00025D34 <AmiBlitz3.ab3@10079>   MOVEA.l varbase,A2                                       ;add alloc mem for types/strings global
00025D3A <AmiBlitz3.ab3@10082>   MOVE.l data1,D3
00025D3C <AmiBlitz3.ab3@10083>   MOVEQ.l #$00,D4
00025D42 <AmiBlitz3.ab3@10084>   TST.b iserror
00025D46 <AmiBlitz3.ab3@10085>   BEQ JL_0_7492
00025D48 <AmiBlitz3.ab3@10086>   RTS
00025D4C <AmiBlitz3.ab3@10088>    CMPA.w #$0,A2
00025D50 <AmiBlitz3.ab3@10089>    BEQ.w JL_0_74CA
00025D54 <AmiBlitz3.ab3@10090>   TST.w $6(A2)
00025D58 <AmiBlitz3.ab3@10091>    BNE.w JL_0_74C4
00025D5C <AmiBlitz3.ab3@10092>   MOVEA.l $A(A2),A3
00025D64 <AmiBlitz3.ab3@10093>   CMPI.l #$100,$4(A3)
00025D68 <AmiBlitz3.ab3@10094>    BCS.w JL_0_74C4
00025D6C <AmiBlitz3.ab3@10095>   MOVE.w $4(A2),D1
00025D70 <AmiBlitz3.ab3@10096>    BSR.w pokedata1
00025D74 <AmiBlitz3.ab3@10097>   MOVE.w $8(A3),D1
00025D78 <AmiBlitz3.ab3@10098>    BSR.w pokedata1
00025D7A <AmiBlitz3.ab3@10099>   ADDQ.w #1,D4
00025D7C <AmiBlitz3.ab3@10102>   MOVEA.l (A2),A2
00025D80 <AmiBlitz3.ab3@10103> BRA.w JL_0_7492
00025D86 <AmiBlitz3.ab3@10107>   MOVEA.l sharebase,A2
00025D8A <AmiBlitz3.ab3@10110>   CMPA.w #$0,A2
00025D8E <AmiBlitz3.ab3@10111>    BEQ.w JL_0_74CAb
00025D92 <AmiBlitz3.ab3@10113>   TST.w $6(A2)
00025D96 <AmiBlitz3.ab3@10114>    BNE.w JL_0_74C4b
00025D9A <AmiBlitz3.ab3@10115>   MOVEA.l $A(A2),A3
00025DA2 <AmiBlitz3.ab3@10116>   CMPI.l #$100,$4(A3)
00025DA6 <AmiBlitz3.ab3@10117>    BCS.w JL_0_74C4b
00025DAA <AmiBlitz3.ab3@10118>   MOVE.w $4(A2),D1
00025DAE <AmiBlitz3.ab3@10119>    BSR.w pokedata1
00025DB2 <AmiBlitz3.ab3@10120>   MOVE.w $8(A3),D1
00025DB6 <AmiBlitz3.ab3@10121>    BSR.w pokedata1
00025DB8 <AmiBlitz3.ab3@10122>   ADDQ.w #1,D4
00025DBA <AmiBlitz3.ab3@10125>   MOVEA.l (A2),A2
00025DBE <AmiBlitz3.ab3@10126> BRA.w JL_0_7492b
00025DC0 <AmiBlitz3.ab3@10129>    TST.w D4
00025DC4 <AmiBlitz3.ab3@10130>    BEQ.w JL_0_74E0
00025DC8 <AmiBlitz3.ab3@10131>   MOVE.w #$FF37,D1
00025DCC <AmiBlitz3.ab3@10132>    BSR.w uselib                                            ;use statics lib
00025DD0 <AmiBlitz3.ab3@10133>   MOVE.w #$FFFA,D1                                         ;use memlib
00025DD4 <AmiBlitz3.ab3@10134> BRA.w uselib
00025DD6 <AmiBlitz3.ab3@10137> RTS
00025DDC <AmiBlitz3.ab3@10141>   MOVE.w numtoa2,D1
00025DE0 <AmiBlitz3.ab3@10142>    BSR.w writeword
00025DE4 <AmiBlitz3.ab3@10143>    BSR.w addoff
00025DE6 <AmiBlitz3.ab3@10144>   MOVE.l D3,D1
00025DEA <AmiBlitz3.ab3@10145>    BSR.w writelong
00025DEC <AmiBlitz3.ab3@10146>   SUBQ.w #1,D4
00025DF2 <AmiBlitz3.ab3@10147>   MOVE.w D4,endarray+2
00025DF8 <AmiBlitz3.ab3@10148>   MOVE.l endarray,D1
00025DFC <AmiBlitz3.ab3@10149> BRA.w writelong
00025DFE <AmiBlitz3.ab3@10153>   MOVE.l D3,-(A7)
00025E04 <AmiBlitz3.ab3@10156>   MOVEA.l _dosbase,A6
00025E08 <AmiBlitz3.ab3@10157>   JSR _Write(a6)
00025E0A <AmiBlitz3.ab3@10159>   CMP.l (A7)+,D0
00025E0E <AmiBlitz3.ab3@10160>    BNE.w JL_0_7516
00025E10 <AmiBlitz3.ab3@10161> RTS
00025E12 <AmiBlitz3.ab3@10164>   MOVE.l D7,D1
00025E18 <AmiBlitz3.ab3@10166>   MOVEA.l _dosbase,A6
00025E1C <AmiBlitz3.ab3@10167>   JSR _Close(a6)
00025E22 <AmiBlitz3.ab3@10170> JMP error_create_exe
00025E28 <AmiBlitz3.ab3@10179>   MOVE.l A7,errstack
00025E2C <AmiBlitz3.ab3@10180>   MOVEM.l d2-d7/a2-a6,-(a7)
00025E36 <AmiBlitz3.ab3@10181>   MOVE.l #AL_0_7790,errcont
00025E3C <AmiBlitz3.ab3@10182>    JSR call_setpointerbusy
00025E44 <AmiBlitz3.ab3@10183>   MOVE.w #$FFFF,anyerrs
00025E4E <AmiBlitz3.ab3@10184>   CMP.l #-1,chipstart
00025E52 <AmiBlitz3.ab3@10185>   BEQ 'l01
00025E58 <AmiBlitz3.ab3@10186>   MOVE.l chipend,d1
00025E5A <AmiBlitz3.ab3@10187>   ADDQ.l #3,d1
00025E60 <AmiBlitz3.ab3@10188>   AND.l #$fffffffc,d1                                      ;bug
00025E66 <AmiBlitz3.ab3@10189>   MOVE.l d1,chipend
00025E68 <AmiBlitz3.ab3@10190>   MOVE.l d1,a1
00025E6E <AmiBlitz3.ab3@10191>   MOVE.l chipstart,a0
00025E70 <AmiBlitz3.ab3@10192>   MOVE.l a1,d1
00025E72 <AmiBlitz3.ab3@10193>   SUB.l a0,d1
00025E78 <AmiBlitz3.ab3@10194>   MOVE.l d1,chipsize
00025E82 <AmiBlitz3.ab3@10197>   CMP.l #-1,bssstart
00025E86 <AmiBlitz3.ab3@10198>   BEQ 'l11
00025E8C <AmiBlitz3.ab3@10199>   MOVE.l realbssend,a1
00025E92 <AmiBlitz3.ab3@10200>   MOVE.l bssstart,a0
00025E94 <AmiBlitz3.ab3@10201>   MOVE.l a1,d1
00025E96 <AmiBlitz3.ab3@10202>   SUB.l a0,d1
00025E9C <AmiBlitz3.ab3@10203>   MOVE.l d1,bsssize
00025EA0 <AmiBlitz3.ab3@10204>   BEQ 'l11
00025EA2 <AmiBlitz3.ab3@10207>   TST.b (a0)+
00025EA6 <AmiBlitz3.ab3@10208>   BEQ 'l31
00025EAC <AmiBlitz3.ab3@10209>   TST.b debugmode
00025EB0 <AmiBlitz3.ab3@10210>   BEQ 'l1
00025EB6 <AmiBlitz3.ab3@10211>   TST.b exdebug
00025EBA <AmiBlitz3.ab3@10212>   BNE 'l31
00025EC0 <AmiBlitz3.ab3@10215>   MOVE.l #nodata,-(a7)
00025EC6 <AmiBlitz3.ab3@10216> JMP handle_compileerror
00025EC8 <AmiBlitz3.ab3@10219>   CMP.l a0,a1
00025ECC <AmiBlitz3.ab3@10220>   BGT 'l32
00025ED2 <AmiBlitz3.ab3@10221>   MOVE.l bssend,d1
00025ED4 <AmiBlitz3.ab3@10222>   ADDQ.l #3,d1
00025EDA <AmiBlitz3.ab3@10223>   AND.l #$fffffffc,d1                                      ;bug
00025EE0 <AmiBlitz3.ab3@10224>   MOVE.l d1,bssend
00025EE2 <AmiBlitz3.ab3@10225>   MOVE.l d1,a1
00025EE8 <AmiBlitz3.ab3@10226>   MOVE.l bssstart,a0
00025EEA <AmiBlitz3.ab3@10227>   MOVE.l a1,d1
00025EEC <AmiBlitz3.ab3@10228>   SUB.l a0,d1
00025EF2 <AmiBlitz3.ab3@10229>   MOVE.l d1,bsssize
00025EF6 <AmiBlitz3.ab3@10232>   MOVEM.l d5-d7/d3,-(a7)
00025EFC <AmiBlitz3.ab3@10233>   MOVE.w dontwrite,D1
00025F00 <AmiBlitz3.ab3@10234>   BNE.w JL_0_757C
00025F06 <AmiBlitz3.ab3@10235>   MOVE.l chipsize,d5
00025F0C <AmiBlitz3.ab3@10236>   MOVE.l bsssize,d3
00025F12 <AmiBlitz3.ab3@10237>   MOVE.l chipstart,d7
00025F18 <AmiBlitz3.ab3@10238>   MOVE.l bssstart,d6
00025F1E <AmiBlitz3.ab3@10239>   MOVEA.l hunkoffsetbase,A2
00025F24 <AmiBlitz3.ab3@10240>   MOVEA.l destbufferstart,A1
00025F26 <AmiBlitz3.ab3@10241>   MOVE.l A1,D2
00025F2C <AmiBlitz3.ab3@10242>   ADD.l noinits,D2
00025F32 <AmiBlitz3.ab3@10243>   CLR.l hunkoffsetnum
00025F36 <AmiBlitz3.ab3@10246>   CMPA.w #$0,A2
00025F3A <AmiBlitz3.ab3@10247>    BEQ.w JL_0_757C
00025F3E <AmiBlitz3.ab3@10248>   MOVE.l $4(A2),D0
00025F42 <AmiBlitz3.ab3@10249>    LEA $0(a1,d0.l),a0
00025F44 <AmiBlitz3.ab3@10250>    MOVE.l (a0),d1
00025F46 <AmiBlitz3.ab3@10251>   TST.l d1
00025F4A <AmiBlitz3.ab3@10252>    BMI.w 'lm1
00025F52 <AmiBlitz3.ab3@10253>   MOVE.b #0,newhunk
00025F5C <AmiBlitz3.ab3@10254>   CMP.l #-1,chipstart
00025F60 <AmiBlitz3.ab3@10255>   BEQ 'l10
00025F66 <AmiBlitz3.ab3@10256>   CMP.l chipstart,d1
00025F6A <AmiBlitz3.ab3@10257>   BLT 'l10
00025F72 <AmiBlitz3.ab3@10258>   MOVE.b #1,newhunk
00025F78 <AmiBlitz3.ab3@10259>   CMP.l chipend,d1
00025F7C <AmiBlitz3.ab3@10260>   BGE 'l110
00025F7E <AmiBlitz3.ab3@10261>   SUB.l d7,(a0)
00025F86 <AmiBlitz3.ab3@10262>   ADD.l #$80000000,4(a2)
00025F8A <AmiBlitz3.ab3@10263> BRA JL_0_7576
00025F8E <AmiBlitz3.ab3@10266>   SUB.l d5,0(a0)
00025F98 <AmiBlitz3.ab3@10269>   CMP.l #-1,bssstart
00025F9C <AmiBlitz3.ab3@10270>     BEQ 'l11
00025FA2 <AmiBlitz3.ab3@10271>   CMP.l bssstart,d1
00025FA6 <AmiBlitz3.ab3@10272>   BLT 'l11
00025FAC <AmiBlitz3.ab3@10273>   CMP.l bssend,d1
00025FB0 <AmiBlitz3.ab3@10274>   BGE 'l111
00025FB6 <AmiBlitz3.ab3@10275>   TST.b newhunk
00025FBA <AmiBlitz3.ab3@10276>   BEQ 'ln1
00025FBC <AmiBlitz3.ab3@10277>   ADD.l d5,(a0)
00025FBE <AmiBlitz3.ab3@10280>   SUB.l d6,(a0)
00025FC6 <AmiBlitz3.ab3@10281>   ADD.l #$40000000,4(a2)
00025FCA <AmiBlitz3.ab3@10282> BRA JL_0_7576
00025FCE <AmiBlitz3.ab3@10285>   SUB.l d3,0(a0)
00025FD0 <AmiBlitz3.ab3@10288>   SUB.l D2,(A0)
00025FD6 <AmiBlitz3.ab3@10291>   ADDQ.l #1,hunkoffsetnum
00025FD8 <AmiBlitz3.ab3@10294>    MOVEA.l (A2),A2
00025FDC <AmiBlitz3.ab3@10295> BRA.w JL_0_755E
00025FE0 <AmiBlitz3.ab3@10299>   MOVEM.l (a7)+,d5-d7/d3
00025FE6 <AmiBlitz3.ab3@10300>   MOVE.l ptr_newexefilename,D1
00025FEC <AmiBlitz3.ab3@10301>   MOVE.l #HUNK_RELOC_8__MODE_NEWFILE,D2
00025FF2 <AmiBlitz3.ab3@10302>   MOVEA.l _dosbase,A6
00025FF6 <AmiBlitz3.ab3@10303>    JSR _Open(A6)
00025FF8 <AmiBlitz3.ab3@10304>   MOVE.l D0,D7
00025FFC <AmiBlitz3.ab3@10305>    BEQ.w execerr
00026002 <AmiBlitz3.ab3@10306>   MOVE.l objlen,D0
00026008 <AmiBlitz3.ab3@10307>   SUB.l #moremem,d0
0002600E <AmiBlitz3.ab3@10308>   SUB.l noinits,D0
00026018 <AmiBlitz3.ab3@10309>   CMP.l #-1,bssstart
0002601C <AmiBlitz3.ab3@10310>   BEQ 'l60
00026022 <AmiBlitz3.ab3@10311>   SUB.l bsssize,d0
00026028 <AmiBlitz3.ab3@10312>   SUB.l chipsize,d0
0002602C <AmiBlitz3.ab3@10313> BRA.s 'l61
00026036 <AmiBlitz3.ab3@10316>   CMP.l #-1,chipstart
0002603A <AmiBlitz3.ab3@10317>   BEQ 'l61
00026040 <AmiBlitz3.ab3@10318>   SUB.l bsssize,d0
00026046 <AmiBlitz3.ab3@10319>   SUB.l chipsize,d0
00026048 <AmiBlitz3.ab3@10322>   ADDQ.l #3,D0
0002604A <AmiBlitz3.ab3@10323>   LSR.l #2,D0
00026050 <AmiBlitz3.ab3@10324>   MOVE.l D0,tstsize1
00026056 <AmiBlitz3.ab3@10325>   MOVE.l D0,tstsize2
00026058 <AmiBlitz3.ab3@10326>   MOVE.l D7,D1
0002605E <AmiBlitz3.ab3@10327>   MOVE.l #tsthead,D2                                      ;hunkbegin
00026060 <AmiBlitz3.ab3@10328>   MOVEQ.l #$20,D3
0002606A <AmiBlitz3.ab3@10329>   CMP.l #-1,bssstart
0002606E <AmiBlitz3.ab3@10330>   BEQ 'lb1
00026078 <AmiBlitz3.ab3@10331>   CMP.l #-1,chipstart
0002607C <AmiBlitz3.ab3@10332>   BEQ 'lb1
00026086 <AmiBlitz3.ab3@10333>   MOVE.l #1,bssnum
00026090 <AmiBlitz3.ab3@10334>   MOVE.l #2,chipnum
00026092 <AmiBlitz3.ab3@10335>   MOVEQ.l #$28,D3
00026098 <AmiBlitz3.ab3@10336>   MOVE.l bsssize,d2
0002609A <AmiBlitz3.ab3@10337>   ADDQ.l #3,d2
0002609C <AmiBlitz3.ab3@10338>   ASR.l #2,d2
000260A2 <AmiBlitz3.ab3@10339>   MOVE.l d2,hunkend+8
000260A8 <AmiBlitz3.ab3@10340>   MOVE.l d2,bsssize3
000260AE <AmiBlitz3.ab3@10341>   MOVE.l chipsize,d2
000260B0 <AmiBlitz3.ab3@10342>   ADDQ.l #3,d2
000260B2 <AmiBlitz3.ab3@10343>   ASR.l #2,d2
000260B8 <AmiBlitz3.ab3@10344>   MOVE.l d2,chipsize2
000260C2 <AmiBlitz3.ab3@10345>   ADD.l #$40000000,chipsize2
000260C8 <AmiBlitz3.ab3@10346>   MOVE.l d2,hunkend2+8
000260CE <AmiBlitz3.ab3@10347>   MOVE.l D0,tstsize1c
000260D4 <AmiBlitz3.ab3@10348>   MOVE.l D0,tstsize2c
000260DA <AmiBlitz3.ab3@10349>   MOVE.l #hunkbegin2,d2
000260DE <AmiBlitz3.ab3@10350> BRA 'l100
000260E8 <AmiBlitz3.ab3@10353>   CMP.l #-1,bssstart
000260EC <AmiBlitz3.ab3@10354>   BEQ 'l10
000260F6 <AmiBlitz3.ab3@10355>   MOVE.l #1,bssnum
000260F8 <AmiBlitz3.ab3@10356>   MOVEQ.l #$24,D3
000260FE <AmiBlitz3.ab3@10357>   MOVE.l bsssize,d2
00026100 <AmiBlitz3.ab3@10358>   ADDQ.l #3,d2
00026102 <AmiBlitz3.ab3@10359>   ASR.l #2,d2
00026108 <AmiBlitz3.ab3@10360>   MOVE.l d2,hunkend+8
0002610E <AmiBlitz3.ab3@10361>   MOVE.l d2,bsssize2
00026114 <AmiBlitz3.ab3@10362>   MOVE.l D0,tstsize1b
0002611A <AmiBlitz3.ab3@10363>   MOVE.l D0,tstsize2b
00026120 <AmiBlitz3.ab3@10364>   MOVE.l #hunkbegin,d2
0002612A <AmiBlitz3.ab3@10367>   CMP.l #-1,chipstart
0002612E <AmiBlitz3.ab3@10368>   BEQ 'l100
00026138 <AmiBlitz3.ab3@10369>   MOVE.l #1,chipnum
0002613A <AmiBlitz3.ab3@10370>   MOVEQ.l #$24,D3
00026140 <AmiBlitz3.ab3@10371>   MOVE.l chipsize,d2
00026142 <AmiBlitz3.ab3@10372>   ADDQ.l #3,d2
00026144 <AmiBlitz3.ab3@10373>   ASR.l #2,d2
0002614A <AmiBlitz3.ab3@10374>   MOVE.l d2,hunkend2+8
00026150 <AmiBlitz3.ab3@10375>   MOVE.l d2,bsssize2
0002615A <AmiBlitz3.ab3@10376>   ADD.l #$40000000,bsssize2
00026160 <AmiBlitz3.ab3@10377>   MOVE.l D0,tstsize1b
00026166 <AmiBlitz3.ab3@10378>   MOVE.l D0,tstsize2b
0002616C <AmiBlitz3.ab3@10379>   MOVE.l #hunkbegin,d2
00026170 <AmiBlitz3.ab3@10382>    BSR.w mywrite
00026176 <AmiBlitz3.ab3@10383>   MOVE.l destbufferstart,D2
0002617C <AmiBlitz3.ab3@10384>   ADD.l noinits,D2
00026182 <AmiBlitz3.ab3@10385>   MOVE.l objlen,D3
00026188 <AmiBlitz3.ab3@10386>   SUB.l #moremem,d3
0002618E <AmiBlitz3.ab3@10387>   SUB.l noinits,D3
00026198 <AmiBlitz3.ab3@10388>   CMP.l #-1,bssstart
0002619C <AmiBlitz3.ab3@10389>   BNE 'l40
000261A6 <AmiBlitz3.ab3@10390>   CMP.l #-1,chipstart
000261AA <AmiBlitz3.ab3@10391>   BNE 'l40
000261AE <AmiBlitz3.ab3@10392> BRA 'l41
000261B4 <AmiBlitz3.ab3@10395>   MOVE.l codeend,d1
000261B6 <AmiBlitz3.ab3@10396>     SUB.l d2,d1
000261B8 <AmiBlitz3.ab3@10397>     MOVE.l d1,d3
000261BE <AmiBlitz3.ab3@10398>   SUB.l bsssize,d3
000261C4 <AmiBlitz3.ab3@10399>   SUB.l chipsize,d3
000261C6 <AmiBlitz3.ab3@10400>   MOVE.l D7,D1
000261CA <AmiBlitz3.ab3@10401>   BSR.w mywrite
000261D0 <AmiBlitz3.ab3@10402>   MOVE.l objlen,D3
000261D6 <AmiBlitz3.ab3@10403>   SUB.l #moremem,d3
000261DC <AmiBlitz3.ab3@10404>   SUB.l noinits,D3
000261DE <AmiBlitz3.ab3@10405>   MOVE.l d3,d1
000261E4 <AmiBlitz3.ab3@10406>   MOVE.l destbufferstart,D2
000261EA <AmiBlitz3.ab3@10407>   ADD.l noinits,D2
000261EC <AmiBlitz3.ab3@10408>   ADD.l d2,d1
000261F2 <AmiBlitz3.ab3@10409>   SUB.l codeend,d1
000261F4 <AmiBlitz3.ab3@10410>   MOVE.l d1,d3
000261FA <AmiBlitz3.ab3@10411>   MOVE.l codeend,d2
000261FC <AmiBlitz3.ab3@10414>   MOVE.l d2,d1
000261FE <AmiBlitz3.ab3@10415>   ADD.l d3,d1
00026200 <AmiBlitz3.ab3@10416>   ADDQ.l #3,D1
00026206 <AmiBlitz3.ab3@10417>   ANDI.l #$FFFFFFFC,D1
00026208 <AmiBlitz3.ab3@10418>   SUB.l d2,d1
0002620A <AmiBlitz3.ab3@10419>   MOVE.l d1,d3
0002620C <AmiBlitz3.ab3@10420>   MOVE.l D7,D1
00026210 <AmiBlitz3.ab3@10421>    BSR.w mywrite
0002621A <AmiBlitz3.ab3@10422>   MOVE.l hunkoffsetcounter,tstsize3
0002621E <AmiBlitz3.ab3@10423>    BEQ.w JL_0_7646
00026220 <AmiBlitz3.ab3@10424>   MOVE.l D7,D1
00026226 <AmiBlitz3.ab3@10425>   MOVE.l #tstend,D2
00026228 <AmiBlitz3.ab3@10426>   MOVEQ.l #$04,D3
0002622C <AmiBlitz3.ab3@10427>    BSR.w mywrite
00026232 <AmiBlitz3.ab3@10428>    MOVEA.l _execbase,A6
00026238 <AmiBlitz3.ab3@10429>    MOVE.l hunkoffsetcounter,d0
0002623A <AmiBlitz3.ab3@10430>    ASL.l #2,d0
00026240 <AmiBlitz3.ab3@10431>    ADD.l #12,d0
00026242 <AmiBlitz3.ab3@10432>    MOVEQ #0,d1
00026246 <AmiBlitz3.ab3@10433>    JSR _AllocMem(a6)
00026248 <AmiBlitz3.ab3@10434>    TST.l d0
0002624C <AmiBlitz3.ab3@10435>    BEQ nomem
00026252 <AmiBlitz3.ab3@10436>    MOVE.l noinits,D4
00026254 <AmiBlitz3.ab3@10437>    MOVE.l d5,-(a7)
00026256 <AmiBlitz3.ab3@10438>    MOVE.l d0,d5
00026258 <AmiBlitz3.ab3@10439>    MOVE.l d0,a1
0002625E <AmiBlitz3.ab3@10440>    MOVEA.l hunkoffsetbase,A2
00026266 <AmiBlitz3.ab3@10441>    MOVE.b #0,newhunk
0002626A <AmiBlitz3.ab3@10444>   CMPA.w #$0,A2
0002626E <AmiBlitz3.ab3@10445>    BEQ.w savehunk
00026274 <AmiBlitz3.ab3@10446>   MOVE.l destbufferstart,D2
0002627A <AmiBlitz3.ab3@10447>   ADD.l noinits,D2
0002627E <AmiBlitz3.ab3@10448>   MOVE.l  $4(A2),d1
00026282 <AmiBlitz3.ab3@10449>   BTST #31,d1
00026286 <AmiBlitz3.ab3@10450>   BEQ 'lh1
0002628E <AmiBlitz3.ab3@10451>   MOVE.b #1,newhunk
00026292 <AmiBlitz3.ab3@10452> BRA 'lh3
00026296 <AmiBlitz3.ab3@10455>   BTST #30,d1
0002629A <AmiBlitz3.ab3@10456>   BEQ 'lh2
000262A2 <AmiBlitz3.ab3@10457>   MOVE.b #1,newhunk
000262A6 <AmiBlitz3.ab3@10458> BRA 'lh3
000262A8 <AmiBlitz3.ab3@10461>   ADD.l d1,d2
000262AE <AmiBlitz3.ab3@10462>   CMP.l chipend,d2
000262B2 <AmiBlitz3.ab3@10463>   BLT 'l100
000262B8 <AmiBlitz3.ab3@10464>   SUB.l chipsize,d1
000262BE <AmiBlitz3.ab3@10467>   CMP.l bssend,d2
000262C2 <AmiBlitz3.ab3@10468>   BLT 'l101
000262C8 <AmiBlitz3.ab3@10469>   SUB.l bsssize,d1
000262CA <AmiBlitz3.ab3@10472>   MOVE.l d1,(a1)
000262CC <AmiBlitz3.ab3@10473>   SUB.l D4,(A1)+
000262CE <AmiBlitz3.ab3@10476>   MOVEA.l (A2),A2
000262D2 <AmiBlitz3.ab3@10477> BRA.w menu_createresidentfile__oloopb
000262D4 <AmiBlitz3.ab3@10481>   MOVE.l D7,D1
000262DA <AmiBlitz3.ab3@10482>   MOVEA.l _dosbase,A6
000262E4 <AmiBlitz3.ab3@10483>   MOVE.l hunkoffsetnum,tstsize3
000262E8 <AmiBlitz3.ab3@10484>   BEQ 'ln1
000262EE <AmiBlitz3.ab3@10485>   MOVE.l #tstend+4,d2
000262F0 <AmiBlitz3.ab3@10486>     MOVEQ #8,d3
000262F4 <AmiBlitz3.ab3@10487>    JSR _Write(A6)
000262F6 <AmiBlitz3.ab3@10488>   MOVE.l d7,d1
000262FC <AmiBlitz3.ab3@10489>   MOVE.l hunkoffsetnum,d3
000262FE <AmiBlitz3.ab3@10490>   ASL.l #2,d3
00026300 <AmiBlitz3.ab3@10491>   MOVE.l d5,D2
00026304 <AmiBlitz3.ab3@10492>   JSR _Write(a6)
0002630A <AmiBlitz3.ab3@10495>   TST.b newhunk
0002630E <AmiBlitz3.ab3@10496>   BEQ 'l10
00026314 <AmiBlitz3.ab3@10497>   MOVEA.l hunkoffsetbase,A2
00026316 <AmiBlitz3.ab3@10498>   MOVE.l d5,a0
00026318 <AmiBlitz3.ab3@10499>   ADDQ #8,a0
00026320 <AmiBlitz3.ab3@10500>   MOVE.l bssnum,-4(a0)
00026322 <AmiBlitz3.ab3@10501>   MOVEQ #0,d6
00026326 <AmiBlitz3.ab3@10504>   CMPA.w #$0,A2
0002632A <AmiBlitz3.ab3@10505>    BEQ.w 'lh3
00026330 <AmiBlitz3.ab3@10506>   MOVE.l destbufferstart,D2
00026336 <AmiBlitz3.ab3@10507>   ADD.l noinits,D2
0002633A <AmiBlitz3.ab3@10508>   MOVE.l  $4(A2),d1
0002633E <AmiBlitz3.ab3@10509>   BTST #30,d1
00026342 <AmiBlitz3.ab3@10510>   BEQ 'lh1
00026346 <AmiBlitz3.ab3@10511>   BCLR #30,d1
00026348 <AmiBlitz3.ab3@10512>   MOVE.l d1,(a0)
0002634A <AmiBlitz3.ab3@10513>   SUB.l D4,(A0)+
0002634C <AmiBlitz3.ab3@10514>   ADDQ.l #1,d6
0002634E <AmiBlitz3.ab3@10517>   MOVE.l (a2),a2
00026352 <AmiBlitz3.ab3@10518> BRA 'lh2
00026354 <AmiBlitz3.ab3@10521>   TST.l d6
00026358 <AmiBlitz3.ab3@10522>     BEQ 'lh10
0002635A <AmiBlitz3.ab3@10523>     MOVE.l d5,a0
0002635C <AmiBlitz3.ab3@10524>     MOVE.l d6,(a0)
0002635E <AmiBlitz3.ab3@10525>     MOVE.l d7,d1
00026360 <AmiBlitz3.ab3@10526>     MOVE.l d5,d2
00026362 <AmiBlitz3.ab3@10527>     MOVE.l d6,d3
00026364 <AmiBlitz3.ab3@10528>     ASL.l #2,d3
00026366 <AmiBlitz3.ab3@10529>     ADDQ.l #8,d3
0002636A <AmiBlitz3.ab3@10530>     BSR.w mywrite
00026370 <AmiBlitz3.ab3@10533>   MOVEA.l hunkoffsetbase,A2
00026372 <AmiBlitz3.ab3@10534>   MOVE.l d5,a0
00026374 <AmiBlitz3.ab3@10535>   ADDQ #8,a0
0002637C <AmiBlitz3.ab3@10536>   MOVE.l chipnum,-4(a0)
0002637E <AmiBlitz3.ab3@10537>   MOVEQ #0,d6
00026382 <AmiBlitz3.ab3@10540>   CMPA.w #$0,A2
00026386 <AmiBlitz3.ab3@10541>    BEQ.w 'lh30
0002638C <AmiBlitz3.ab3@10542>   MOVE.l destbufferstart,D2
00026392 <AmiBlitz3.ab3@10543>   ADD.l noinits,D2
00026396 <AmiBlitz3.ab3@10544>   MOVE.l  $4(A2),d1
0002639A <AmiBlitz3.ab3@10545>   BTST #31,d1
0002639E <AmiBlitz3.ab3@10546>   BEQ 'lh11
000263A2 <AmiBlitz3.ab3@10547>   BCLR #31,d1
000263A4 <AmiBlitz3.ab3@10548>   MOVE.l d1,(a0)
000263A6 <AmiBlitz3.ab3@10549>   SUB.l D4,(A0)+
000263A8 <AmiBlitz3.ab3@10550>   ADDQ.l #1,d6
000263AA <AmiBlitz3.ab3@10553>   MOVE.l (a2),a2
000263AE <AmiBlitz3.ab3@10554> BRA 'lh20
000263B0 <AmiBlitz3.ab3@10557>   TST.l d6
000263B4 <AmiBlitz3.ab3@10558>     BEQ 'l10
000263B6 <AmiBlitz3.ab3@10559>     MOVE.l d5,a0
000263B8 <AmiBlitz3.ab3@10560>     MOVE.l d6,(a0)
000263BA <AmiBlitz3.ab3@10561>     MOVE.l d7,d1
000263BC <AmiBlitz3.ab3@10562>     MOVE.l d5,d2
000263BE <AmiBlitz3.ab3@10563>     MOVE.l d6,d3
000263C0 <AmiBlitz3.ab3@10564>     ASL.l #2,d3
000263C2 <AmiBlitz3.ab3@10565>     ADDQ.l #8,d3
000263C6 <AmiBlitz3.ab3@10566>     BSR.w mywrite
000263CC <AmiBlitz3.ab3@10570>    MOVEA.l _execbase,A6
000263D2 <AmiBlitz3.ab3@10571>    MOVE.l hunkoffsetcounter,d0
000263D4 <AmiBlitz3.ab3@10572>    ASL.l #2,d0
000263DA <AmiBlitz3.ab3@10573>    ADD.l #12,d0
000263DC <AmiBlitz3.ab3@10574>    MOVE.l d5,a1
000263E0 <AmiBlitz3.ab3@10575>    JSR _FreeMem(a6)
000263E6 <AmiBlitz3.ab3@10576>    MOVEA.l _dosbase,A6
000263E8 <AmiBlitz3.ab3@10577>    MOVE.l (a7)+,d5
000263EC <AmiBlitz3.ab3@10578> BRA JL_0_7632
000263F2 <AmiBlitz3.ab3@10582>   MOVEA.l hunkoffsetbase,A2
000263F8 <AmiBlitz3.ab3@10583>   MOVE.l noinits,D4
000263FC <AmiBlitz3.ab3@10586>   CMPA.w #$0,A2                                            ;write hunkoffsets
00026400 <AmiBlitz3.ab3@10587>   BEQ.w JL_0_7632
00026404 <AmiBlitz3.ab3@10588>   LEA $4(A2),A1
00026406 <AmiBlitz3.ab3@10589>   SUB.l D4,(A1)
00026408 <AmiBlitz3.ab3@10590>   MOVE.l D7,D1
0002640A <AmiBlitz3.ab3@10591>   MOVE.l A1,D2
0002640C <AmiBlitz3.ab3@10592>   MOVEQ.l #$04,D3
00026410 <AmiBlitz3.ab3@10593>   BSR.w mywrite
00026414 <AmiBlitz3.ab3@10594>   ADD.l D4,$4(A2)
00026416 <AmiBlitz3.ab3@10595>   MOVEA.l (A2),A2
0002641A <AmiBlitz3.ab3@10596> BRA.w JL_0_7610
00026420 <AmiBlitz3.ab3@10599>   CLR.l tstsize3
00026422 <AmiBlitz3.ab3@10600>   MOVE.l D7,D1
00026428 <AmiBlitz3.ab3@10601>   MOVE.l #tstsize3,D2
0002642A <AmiBlitz3.ab3@10602>   MOVEQ.l #$04,D3
0002642E <AmiBlitz3.ab3@10603>    BSR.w mywrite
00026436 <AmiBlitz3.ab3@10606>   BTST #$7,link_debuginfo
0002643A <AmiBlitz3.ab3@10607>    BEQ.w JL_0_7706
00026440 <AmiBlitz3.ab3@10608>   MOVE.l #sysdebug,D2                                      ;debughunks
00026442 <AmiBlitz3.ab3@10609>   MOVEQ.l #$04,D3
00026444 <AmiBlitz3.ab3@10610>   MOVE.l D7,D1
00026448 <AmiBlitz3.ab3@10611>    BSR.w mywrite
0002644E <AmiBlitz3.ab3@10612>   MOVEA.l labelbase,A2
00026452 <AmiBlitz3.ab3@10615>   CMPA.w #$0,A2
00026456 <AmiBlitz3.ab3@10616>    BEQ.w JL_0_76F8
0002645C <AmiBlitz3.ab3@10617>   BTST #$0,$7(A2)
00026460 <AmiBlitz3.ab3@10618>    BEQ.w JL_0_7682
00026468 <AmiBlitz3.ab3@10619>   CMPI.l #$1,$4(A2)
0002646C <AmiBlitz3.ab3@10621>   BRA.w JL_0_76F2                                            ;only addr labels
0002646E <AmiBlitz3.ab3@10623>   MOVEQ.l #$00,D4
00026472 <AmiBlitz3.ab3@10624>   MOVE.b $12(A2),D4
00026476 <AmiBlitz3.ab3@10625>   SUBI.w #$13,D4
00026478 <AmiBlitz3.ab3@10626>   ADDQ.w #2,D4
0002647C <AmiBlitz3.ab3@10627>   ANDI.w #$FFFC,D4
0002647E <AmiBlitz3.ab3@10628>   MOVE.l D4,D5
00026480 <AmiBlitz3.ab3@10629>   LSR.w #2,D5
00026486 <AmiBlitz3.ab3@10630>   MOVE.l D5,temp1
00026488 <AmiBlitz3.ab3@10631>   LSL.w #2,D5
0002648E <AmiBlitz3.ab3@10632>   MOVE.l #temp1,a1
00026494 <AmiBlitz3.ab3@10634>   LEA debugstore,a0
00026496 <AmiBlitz3.ab3@10635>   MOVE.l (a1),(a0)+
00026498 <AmiBlitz3.ab3@10636>   MOVEQ.l #$04,D3
0002649C <AmiBlitz3.ab3@10639>   LEA $13(A2),A1
0002649E <AmiBlitz3.ab3@10640>   MOVE.l d4,d1
000264A0 <AmiBlitz3.ab3@10641>   SUBQ.l #1,d1
000264A2 <AmiBlitz3.ab3@10644>     MOVE.b (a1)+,d0
000264A6 <AmiBlitz3.ab3@10645>     BEQ 'l21
000264AA <AmiBlitz3.ab3@10646>     CMP.b #"'",d0                                            ; ' does reassembler/assembler not like, so replace
000264AE <AmiBlitz3.ab3@10647>     BNE 'ok
000264B2 <AmiBlitz3.ab3@10648>     MOVE.b #"_",d0
000264B4 <AmiBlitz3.ab3@10649> 'ok    MOVE.b d0,(a0)+                                      ; copy labeltext to debuginfo
000264B8 <AmiBlitz3.ab3@10650>   DBF d1,'l10
000264BC <AmiBlitz3.ab3@10652> BRA 'l22
000264BE <AmiBlitz3.ab3@10655>       CLR.b (a0)+
000264C2 <AmiBlitz3.ab3@10656>   DBF d1,'l21
000264C4 <AmiBlitz3.ab3@10659>   ADD.l d4,d3
000264C6 <AmiBlitz3.ab3@10664>   SUB.l D4,D5
000264CA <AmiBlitz3.ab3@10665>    BEQ.w JL_0_76CE
000264D0 <AmiBlitz3.ab3@10666>   MOVE.l #zero,a1
000264D2 <AmiBlitz3.ab3@10668>   MOVE.l (a1),(a0)+
000264D4 <AmiBlitz3.ab3@10670>   ADD.l d5,d3
000264D8 <AmiBlitz3.ab3@10675>   MOVE.l $8(A2),D2
000264DE <AmiBlitz3.ab3@10676>   SUB.l destbufferstart,D2
000264E4 <AmiBlitz3.ab3@10677>   SUB.l noinits,D2
000264EA <AmiBlitz3.ab3@10678>   MOVE.l D2,temp1
000264F0 <AmiBlitz3.ab3@10679>   MOVE.l #temp1,a1
000264F2 <AmiBlitz3.ab3@10681>   MOVE.l (a1),(a0)+
000264F8 <AmiBlitz3.ab3@10682>   ADD.l #4,d3
000264FE <AmiBlitz3.ab3@10683>   LEA debugstore,a0
00026500 <AmiBlitz3.ab3@10684>   MOVE.l a0,d2
00026502 <AmiBlitz3.ab3@10686>   MOVE.l D7,D1
00026506 <AmiBlitz3.ab3@10687>   BSR.w mywrite
00026508 <AmiBlitz3.ab3@10690>   MOVEA.l (A2),A2
0002650C <AmiBlitz3.ab3@10691> BRA.w JL_0_7664
00026512 <AmiBlitz3.ab3@10695>   MOVE.l #zero,D2
00026514 <AmiBlitz3.ab3@10696>   MOVEQ.l #$04,D3
00026516 <AmiBlitz3.ab3@10697>   MOVE.l D7,D1
0002651A <AmiBlitz3.ab3@10698>   BSR.w mywrite
0002651C <AmiBlitz3.ab3@10701>   MOVE.l D7,D1
00026522 <AmiBlitz3.ab3@10702>   MOVE.l #tstdone,D2                                      ;hunkend
00026524 <AmiBlitz3.ab3@10703>   MOVEQ.l #$04,D3
0002652E <AmiBlitz3.ab3@10704>   CMPI.l #-1,bssstart
00026532 <AmiBlitz3.ab3@10705>   BEQ 'l10
00026534 <AmiBlitz3.ab3@10706>   MOVEQ #16,d3
0002653A <AmiBlitz3.ab3@10707>   MOVE.l #hunkend,d2
00026544 <AmiBlitz3.ab3@10708>   CMPI.l #-1,chipstart
00026548 <AmiBlitz3.ab3@10709>   BEQ 'l10
0002654A <AmiBlitz3.ab3@10710>   MOVE.l d7,d1
0002654C <AmiBlitz3.ab3@10711>   MOVEQ #12,d3
00026550 <AmiBlitz3.ab3@10712>   BSR.w mywrite
0002655A <AmiBlitz3.ab3@10715>   CMPI.l #-1,chipstart
0002655E <AmiBlitz3.ab3@10716>   BEQ 'l11
00026560 <AmiBlitz3.ab3@10717>   MOVEQ #12,d3
00026566 <AmiBlitz3.ab3@10718>   MOVE.l #hunkend2,d2
00026568 <AmiBlitz3.ab3@10719>   MOVE.l d7,d1
0002656C <AmiBlitz3.ab3@10720>   BSR.w mywrite
0002656E <AmiBlitz3.ab3@10721>   MOVE.l d7,d1
00026574 <AmiBlitz3.ab3@10722>   MOVE.l chipstart,d2
0002657A <AmiBlitz3.ab3@10723>   MOVE.l chipsize,d3
0002657E <AmiBlitz3.ab3@10724>   BSR.w mywrite
00026580 <AmiBlitz3.ab3@10725>   MOVEQ #4,d3
00026586 <AmiBlitz3.ab3@10726>   MOVE.l #hunkend,d2
00026588 <AmiBlitz3.ab3@10727>   MOVE.l d7,d1
0002658C <AmiBlitz3.ab3@10730>   BSR.w mywrite
0002658E <AmiBlitz3.ab3@10731>   MOVE.l D7,D1
00026594 <AmiBlitz3.ab3@10732>   MOVEA.l _dosbase,A6
00026598 <AmiBlitz3.ab3@10733>   JSR _Close(A6)
000265A0 <AmiBlitz3.ab3@10738>   BTST #$7,create_iconfile
000265A4 <AmiBlitz3.ab3@10739>    BEQ.w skip_createicon
000265AA <AmiBlitz3.ab3@10741>   MOVEA.l ptr_newexefilename,A0
000265AC <AmiBlitz3.ab3@10744>     TST.b (A0)+
000265B0 <AmiBlitz3.ab3@10745>   BNE.w JL_0_772C
000265B2 <AmiBlitz3.ab3@10746>   SUBQ.w #1,A0
000265B4 <AmiBlitz3.ab3@10747>   MOVE.l A0,-(A7)
000265BA <AmiBlitz3.ab3@10748>   LEA str_infoextention2,A1
000265BC <AmiBlitz3.ab3@10751>     MOVE.b (A1)+,(A0)+
000265C0 <AmiBlitz3.ab3@10752>   BNE.w JL_0_773A
000265C6 <AmiBlitz3.ab3@10754>   MOVE.l ptr_newexefilename,D1
000265C8 <AmiBlitz3.ab3@10755>   MOVEQ.l #-$02,D2
000265CE <AmiBlitz3.ab3@10756>   MOVEA.l _dosbase,A6
000265D2 <AmiBlitz3.ab3@10757>   JSR _Lock(A6)
000265D4 <AmiBlitz3.ab3@10758>   MOVE.l D0,D1
000265D8 <AmiBlitz3.ab3@10759>   BEQ.w JL_0_775A                                          ;no icon exit so jump to create one  tomsmart1
000265DC <AmiBlitz3.ab3@10760>   JSR _UnLock(A6)                                          ;OH!! there is a Icon so we must Unlock it  tomsmart1
000265E0 <AmiBlitz3.ab3@10761> BRA.w JL_0_7788                                            ;and skip writing a Icon  tomsmart1
000265E6 <AmiBlitz3.ab3@10764>   MOVE.l ptr_newexefilename,D1
000265EC <AmiBlitz3.ab3@10765>   MOVE.l #HUNK_RELOC_8__MODE_NEWFILE,D2
000265F2 <AmiBlitz3.ab3@10766>   MOVEA.l _dosbase,A6
000265F6 <AmiBlitz3.ab3@10767>    JSR _Open(A6)
000265F8 <AmiBlitz3.ab3@10768>   MOVE.l D0,D7
000265FC <AmiBlitz3.ab3@10769>    BEQ.w JL_0_7788
00026602 <AmiBlitz3.ab3@10770>   MOVE.l #icongfx_data,D2                                  ; icon graphics
00026608 <AmiBlitz3.ab3@10771>   MOVE.l #icongfx_data_end-icongfx_data,D3                 ; length of gfx-data
0002660A <AmiBlitz3.ab3@10772>   MOVE.l D7,D1
00026610 <AmiBlitz3.ab3@10773>   MOVEA.l _dosbase,A6
00026614 <AmiBlitz3.ab3@10774>   JSR _Write(A6)
00026616 <AmiBlitz3.ab3@10775>   MOVE.l D7,D1
0002661A <AmiBlitz3.ab3@10776>   JSR _Close(A6)
0002661C <AmiBlitz3.ab3@10779>   MOVEA.l (A7)+,A0
0002661E <AmiBlitz3.ab3@10780>   CLR.b (A0)
00026624 <AmiBlitz3.ab3@10785>   TST.b exdebug
00026628 <AmiBlitz3.ab3@10786>    BEQ JL_0_757Cb
0002662E <AmiBlitz3.ab3@10787>   MOVE.w dontwrite,D1
00026632 <AmiBlitz3.ab3@10788>   BNE.w JL_0_757Cb
00026638 <AmiBlitz3.ab3@10789>   MOVE.l chipsize,d5
0002663E <AmiBlitz3.ab3@10790>   MOVE.l bsssize,d3
00026644 <AmiBlitz3.ab3@10791>   MOVE.l chipstart,d7
0002664A <AmiBlitz3.ab3@10792>   MOVE.l bssstart,d6
00026650 <AmiBlitz3.ab3@10793>   MOVEA.l hunkoffsetbase,A2
00026656 <AmiBlitz3.ab3@10794>   MOVEA.l destbufferstart,A1
00026658 <AmiBlitz3.ab3@10795>   MOVE.l A1,D2
0002665E <AmiBlitz3.ab3@10796>   ADD.l noinits,D2
00026664 <AmiBlitz3.ab3@10797>   CLR.l hunkoffsetnum
00026668 <AmiBlitz3.ab3@10800>   CMPA.w #$0,A2
0002666C <AmiBlitz3.ab3@10801>    BEQ.w JL_0_757Cb
00026670 <AmiBlitz3.ab3@10802>   MOVE.l $4(A2),D0
00026674 <AmiBlitz3.ab3@10803>    LEA $0(a1,d0.l),a0
00026676 <AmiBlitz3.ab3@10804>    MOVE.l (a0),d1
00026678 <AmiBlitz3.ab3@10805>   TST.l d1
0002667C <AmiBlitz3.ab3@10806>    BMI.w 'lm1
00026684 <AmiBlitz3.ab3@10807>   MOVE.b #0,newhunk
0002668E <AmiBlitz3.ab3@10808>   CMP.l #-1,chipstart
00026692 <AmiBlitz3.ab3@10809>   BEQ 'l10
00026698 <AmiBlitz3.ab3@10810>   CMP.l chipstart,d1
0002669C <AmiBlitz3.ab3@10811>   BLT 'l10
000266A4 <AmiBlitz3.ab3@10812>   MOVE.b #1,newhunk
000266AA <AmiBlitz3.ab3@10813>   CMP.l chipend,d1
000266AE <AmiBlitz3.ab3@10814>   BGE 'l110
000266B0 <AmiBlitz3.ab3@10815>   ADD.l d7,(a0)
000266B8 <AmiBlitz3.ab3@10816>   ADD.l #$80000000,4(a2)
000266BC <AmiBlitz3.ab3@10817> BRA JL_0_7576b
000266C0 <AmiBlitz3.ab3@10820>   ADD.l d5,0(a0)
000266CA <AmiBlitz3.ab3@10823>   CMP.l #-1,bssstart
000266CE <AmiBlitz3.ab3@10824>     BEQ 'l11
000266D4 <AmiBlitz3.ab3@10825>   CMP.l bssstart,d1
000266D8 <AmiBlitz3.ab3@10826>   BLT 'l11
000266DE <AmiBlitz3.ab3@10827>   CMP.l bssend,d1
000266E2 <AmiBlitz3.ab3@10828>   BGE 'l111
000266E8 <AmiBlitz3.ab3@10829>   TST.b newhunk
000266EC <AmiBlitz3.ab3@10830>   BEQ 'ln1
000266EE <AmiBlitz3.ab3@10831>   ADD.l d5,(a0)
000266F0 <AmiBlitz3.ab3@10834>   ADD.l d6,(a0)
000266F8 <AmiBlitz3.ab3@10835>   ADD.l #$40000000,4(a2)
000266FC <AmiBlitz3.ab3@10836> BRA JL_0_7576b
00026700 <AmiBlitz3.ab3@10839>   ADD.l d3,0(a0)
00026702 <AmiBlitz3.ab3@10842>   ADD.l D2,(A0)                                            ;only normal code offsets restore
00026708 <AmiBlitz3.ab3@10845>   ADDQ.l #1,hunkoffsetnum
0002670A <AmiBlitz3.ab3@10848>   MOVEA.l (A2),A2
0002670E <AmiBlitz3.ab3@10849> BRA.w JL_0_755Eb
00026714 <AmiBlitz3.ab3@10852>   JSR call_setpointernormal
00026718 <AmiBlitz3.ab3@10853>   MOVEM.l (a7)+,d2-d7/a2-a6
0002671A <AmiBlitz3.ab3@10855> RTS
0002671C <AmiBlitz3.ab3@10859>   MOVE.l D2,-(A7)
00026722 <AmiBlitz3.ab3@10860>   MOVE.l destpointer,D2
00026728 <AmiBlitz3.ab3@10861>   SUB.l destbufferstart,D2
0002672C <AmiBlitz3.ab3@10862>   BSR.w addhunkoffset
0002672E <AmiBlitz3.ab3@10863>   MOVE.l (A7)+,D2
00026730 <AmiBlitz3.ab3@10864> RTS
00026734 <AmiBlitz3.ab3@10868>   MOVEM.l D0-D1/A0-A1/A6,-(A7)
0002673A <AmiBlitz3.ab3@10869>   TST.b nohunkoffset
0002673E <AmiBlitz3.ab3@10870>   BNE 'l10
00026740 <AmiBlitz3.ab3@10871>   MOVEQ.l #$8,D0
00026742 <AmiBlitz3.ab3@10872>   MOVEQ.l #$01,D1
00026748 <AmiBlitz3.ab3@10873>   MOVEA.l _execbase,A6
0002674E <AmiBlitz3.ab3@10874>   MOVE.l mempool2,a0
00026752 <AmiBlitz3.ab3@10875>   JSR _AllocPooled(a6)
00026758 <AmiBlitz3.ab3@10877>   ADDQ.l #1,hunkoffsetcounter
0002675A <AmiBlitz3.ab3@10878>   MOVEA.l D0,A0
00026760 <AmiBlitz3.ab3@10879>   MOVE.l hunkoffsetbase,(A0)
00026766 <AmiBlitz3.ab3@10880>   MOVE.l A0,hunkoffsetbase
0002676A <AmiBlitz3.ab3@10881>   MOVE.l D2,$4(A0)
0002676E <AmiBlitz3.ab3@10884>   MOVEM.l (A7)+,D0-D1/A0-A1/A6
00026770 <AmiBlitz3.ab3@10885> RTS
00026776 <AmiBlitz3.ab3@10889>   CLR.l hunkoffsetbase
0002677C <AmiBlitz3.ab3@10890>   MOVEA.l _execbase,A6
00026782 <AmiBlitz3.ab3@10891>   MOVEA.l hunkoffsetbase,A2
00026786 <AmiBlitz3.ab3@10894>     CMPA.w #$0,A2
0002678A <AmiBlitz3.ab3@10895>      BEQ.w JL_0_7988
0002678C <AmiBlitz3.ab3@10896>     MOVEA.l A2,A1
0002678E <AmiBlitz3.ab3@10897>     MOVEQ.l #$08,D0
00026790 <AmiBlitz3.ab3@10898>     MOVEA.l (A2),A2
00026796 <AmiBlitz3.ab3@10899>     MOVE.l mempool2,a0
0002679A <AmiBlitz3.ab3@10900>     JSR _FreePooled(A6)
0002679E <AmiBlitz3.ab3@10901> BRA.w JL_0_7972
000267A4 <AmiBlitz3.ab3@10904>   CLR.l hunkoffsetcounter
000267A6 <AmiBlitz3.ab3@10905> RTS
000267BE <AmiBlitz3.ab3@10908> cmakebuff:  Ds.l 6                                          ;dc.w 12 org source
000267C2 <AmiBlitz3.ab3@10909> cmakea5:    Ds.l 1
000267C4 <AmiBlitz3.ab3@10910> cmake:      Ds.w 1
00026844 <AmiBlitz3.ab3@10911> cmakebak:   Ds.l 32                                         ;ds.b 128 org source
0002684A <AmiBlitz3.ab3@10915>   MOVE.l A5,lastsourcepos
00026854 <AmiBlitz3.ab3@10916>   MOVE.w instringon,oldqflag
00026856 <AmiBlitz3.ab3@10920>   MOVEQ.l #$00,D0
00026858 <AmiBlitz3.ab3@10921>   MOVE.b (A5)+,D0
0002685C <AmiBlitz3.ab3@10922>    BEQ getcharb__donea
00026860 <AmiBlitz3.ab3@10923>   BPL getcharb__stuffa
00026862 <AmiBlitz3.ab3@10924>   LSL.l #8,D0
00026864 <AmiBlitz3.ab3@10925>   MOVE.b (A5)+,D0
00026866 <AmiBlitz3.ab3@10926>   MOVE.l a1,-(a7)
0002686C <AmiBlitz3.ab3@10927>   LEA replacedat,a1
00026870 <AmiBlitz3.ab3@10928>   Dc.w $4a71,$0a00                                         ;TST.w 0(a1,d0.l*2)
00026874 <AmiBlitz3.ab3@10929>   BEQ getchar__l10
00026878 <AmiBlitz3.ab3@10930>   Dc.w $3031,$0a00                                         ;MOVE.w 0(a1,d0.l*2),d0
0002687A <AmiBlitz3.ab3@10934>   MOVE.l (a7)+,a1
0002687E <AmiBlitz3.ab3@10935> BRA getchar__weiter
00026882 <AmiBlitz3.ab3@10938>   CMP.w #$22,D0
00026886 <AmiBlitz3.ab3@10939>    BEQ.b swapquotea
0002688A <AmiBlitz3.ab3@10940>   CMP.w #$3B,D0
0002688E <AmiBlitz3.ab3@10941>    BNE.b getcharb__donea
00026894 <AmiBlitz3.ab3@10942>   TST.w instringon
00026898 <AmiBlitz3.ab3@10943>    BNE.b getcharb__donea
0002689A <AmiBlitz3.ab3@10946>   MOVE.b (A5)+,D0
0002689E <AmiBlitz3.ab3@10947>              BEQ getchar__l1
000268A2 <AmiBlitz3.ab3@10948>              CMP.b #":",d0
000268A6 <AmiBlitz3.ab3@10949>              BNE getcharb__loopa                                ;:@
000268AA <AmiBlitz3.ab3@10950>              CMP.b #"@",(a5)
000268AE <AmiBlitz3.ab3@10951>              BNE getcharb__loopa
000268B0 <AmiBlitz3.ab3@10952>              ADDQ #1,a5
000268B6 <AmiBlitz3.ab3@10955>   MOVE.w D0,lastchar
000268BA <AmiBlitz3.ab3@10958> BRA.s getchar__weiter
000268C0 <AmiBlitz3.ab3@10961>   NOT.w instringon
000268C6 <AmiBlitz3.ab3@10964>    MOVE.w D0,lastchar
000268CA <AmiBlitz3.ab3@10965>    BEQ.w getchar__done
000268CE <AmiBlitz3.ab3@10966>    BPL.w getchar__done2
000268D2 <AmiBlitz3.ab3@10967>   CMP.w #-$7FE4,D0                                         ;cnif
000268D6 <AmiBlitz3.ab3@10968>    BEQ.w getchar__cnif
000268DA <AmiBlitz3.ab3@10969>   CMP.w #-$7FE3,D0                                         ;csif
000268DE <AmiBlitz3.ab3@10970>    BEQ.w getchar__csif
000268E2 <AmiBlitz3.ab3@10971>   CMP.w #-$7FE2,D0                                         ;celse
000268E6 <AmiBlitz3.ab3@10972>    BEQ.w getchar__celse
000268EA <AmiBlitz3.ab3@10973>   CMP.w #-$7FE1,D0                                         ;cend
000268EE <AmiBlitz3.ab3@10974>    BEQ.w getchar__cend
000268F4 <AmiBlitz3.ab3@10977>   TST.w skipcode
000268F8 <AmiBlitz3.ab3@10978>    BEQ.w getchar
000268FC <AmiBlitz3.ab3@10979>   CMP.w #$7E,D0
00026900 <AmiBlitz3.ab3@10980>    BEQ.w getchar__cmake                                         ;tilde
00026904 <AmiBlitz3.ab3@10981>   CMP.w #$2,D0
00026908 <AmiBlitz3.ab3@10982>    BNE.w getchar__notunpath
0002690E <AmiBlitz3.ab3@10983>   MOVEA.l usedfrom,A5
00026914 <AmiBlitz3.ab3@10984>   CLR.l usedfrom
00026918 <AmiBlitz3.ab3@10985> BRA.w getchar
0002691C <AmiBlitz3.ab3@10988>   CMP.w #$1,D0
00026920 <AmiBlitz3.ab3@10989>    BNE.w getchar__done
00026924 <AmiBlitz3.ab3@10993>   MOVEA.l cmakea5(PC),A5
00026928 <AmiBlitz3.ab3@10994> BRA.w getchar
0002692E <AmiBlitz3.ab3@10997>   TST.w cmake
00026932 <AmiBlitz3.ab3@10998>    BNE.w getchar__done
00026936 <AmiBlitz3.ab3@11000>   MOVEM.l D0-D7/A0-A6,-(A7)
0002693C <AmiBlitz3.ab3@11001>   LEA cmake,a0                                         ;reass
0002693E <AmiBlitz3.ab3@11002>   NOT.w (a0)
00026942 <AmiBlitz3.ab3@11003>   LEA cmakebak(PC),A0
00026948 <AmiBlitz3.ab3@11004>   LEA ptr_parameterstore,A1
0002694A <AmiBlitz3.ab3@11005>   MOVEQ.l #$1F,D0
0002694C <AmiBlitz3.ab3@11008>     MOVE.l (A1)+,(A0)+
00026950 <AmiBlitz3.ab3@11009>   DBF D0,getchar__cmloop
00026956 <AmiBlitz3.ab3@11012>    JSR AJL_0_BF6E
0002695A <AmiBlitz3.ab3@11013>   CMP.w #$7E,D0
0002695E <AmiBlitz3.ab3@11014>    BNE.w syntaxerr
00026964 <AmiBlitz3.ab3@11015>   MOVE.l A5,cmakea5                                      ;tilde
00026968 <AmiBlitz3.ab3@11016>   LEA cmakebuff(PC),A0
0002696A <AmiBlitz3.ab3@11017>   MOVE.l D3,D2
0002696E <AmiBlitz3.ab3@11018>   BSR.w makelong
00026970 <AmiBlitz3.ab3@11019>   ADDQ.b #1,(A0)
00026976 <AmiBlitz3.ab3@11020>   LEA cmake,a0
00026978 <AmiBlitz3.ab3@11021>   NOT.w (a0)                                               ;reass
0002697C <AmiBlitz3.ab3@11022>   LEA cmakebak(PC),A0
00026982 <AmiBlitz3.ab3@11023>   LEA ptr_parameterstore,A1
00026984 <AmiBlitz3.ab3@11024>   MOVEQ.l #$1F,D0
00026986 <AmiBlitz3.ab3@11027>     MOVE.l (A0)+,(A1)+
0002698A <AmiBlitz3.ab3@11028>   DBF D0,getchar__cmloop2
0002698E <AmiBlitz3.ab3@11030>   MOVEM.l (A7)+,D0-D7/A0-A6
00026992 <AmiBlitz3.ab3@11031>   LEA cmakebuff(PC),A5
00026996 <AmiBlitz3.ab3@11032> BRA.w getchar
00026998 <AmiBlitz3.ab3@11035> RTS
000269A2 <AmiBlitz3.ab3@11039>   MOVE.l linenumat,ciflineat                               ;csif
000269A8 <AmiBlitz3.ab3@11040>   TST.w skipcode
000269AC <AmiBlitz3.ab3@11041>    BEQ.w getchar__incnest
000269B0 <AmiBlitz3.ab3@11042>    BSR.w get1bytemain
000269B2 <AmiBlitz3.ab3@11043>    MOVE.l a1,-(a7)
000269B8 <AmiBlitz3.ab3@11044>    JSR JL_0_C492
000269BA <AmiBlitz3.ab3@11045>    MOVE.l (a7)+,a1
000269BE <AmiBlitz3.ab3@11046> BRA.w getchar
000269C8 <AmiBlitz3.ab3@11049>   MOVE.l linenumat,ciflineat                               ;cnif
000269CE <AmiBlitz3.ab3@11050>   TST.w skipcode
000269D2 <AmiBlitz3.ab3@11051>    BEQ.w getchar__incnest
000269D6 <AmiBlitz3.ab3@11052>    BSR.w get1bytemain
000269DA <AmiBlitz3.ab3@11053>    CMP.b #"@",d0
000269DE <AmiBlitz3.ab3@11054>    BNE getchar__cnif_ok2
000269E2 <AmiBlitz3.ab3@11055>    BSR.w get1bytemain
000269EA <AmiBlitz3.ab3@11056>    MOVE.b #1,incnif
000269F0 <AmiBlitz3.ab3@11057>    JSR findconstant2
000269F4 <AmiBlitz3.ab3@11058>    BEQ getchar__cnif_ok2
000269FA <AmiBlitz3.ab3@11061>    MOVE.w fast,-(a7)
00026A00 <AmiBlitz3.ab3@11062>    CLR.b fast
00026A02 <AmiBlitz3.ab3@11063>    MOVE.l a1,-(a7)
00026A08 <AmiBlitz3.ab3@11064>    JSR JL_0_C47E
00026A0E <AmiBlitz3.ab3@11065>    CLR.b incnif
00026A10 <AmiBlitz3.ab3@11066>    MOVE.l (a7)+,a1
00026A16 <AmiBlitz3.ab3@11067>    MOVE.w (a7)+,fast
00026A1A <AmiBlitz3.ab3@11068> BRA.w getchar
00026A20 <AmiBlitz3.ab3@11071>   ADDQ.w #1,connest
00026A24 <AmiBlitz3.ab3@11072> BRA.w getchar
00026A2A <AmiBlitz3.ab3@11075>   MOVE.w connest,D0                                      ;celse
00026A2E <AmiBlitz3.ab3@11076>    BNE.w getchar
00026A34 <AmiBlitz3.ab3@11077>   NOT.w skipcode
00026A38 <AmiBlitz3.ab3@11078> BRA.w getchar
00026A3E <AmiBlitz3.ab3@11081>   SUBQ.w #1,connest                                      ;cend
00026A42 <AmiBlitz3.ab3@11082>    BPL.w getchar
00026A48 <AmiBlitz3.ab3@11083>   ADDQ.w #1,connest
00026A4E <AmiBlitz3.ab3@11084>   MOVEA.l concomsp,A0
00026A54 <AmiBlitz3.ab3@11085>   CMPA.l #concomstack,A0
00026A58 <AmiBlitz3.ab3@11086>    BEQ.w nociferr
00026A5A <AmiBlitz3.ab3@11087>   SUBQ.w #2,A0
00026A60 <AmiBlitz3.ab3@11088>   MOVE.l A0,concomsp
00026A66 <AmiBlitz3.ab3@11089>   MOVE.w (A0),skipcode
00026A6A <AmiBlitz3.ab3@11090> BRA.w getchar
00026A6E <AmiBlitz3.ab3@11093> ciflineat:   Ds.l 1
00026A70 <AmiBlitz3.ab3@11101>   MOVEQ.l #$00,D0
00026A72 <AmiBlitz3.ab3@11102>   MOVE.b (A5)+,D0
00026A76 <AmiBlitz3.ab3@11103>    BEQ.b getcharb__done
00026A7A <AmiBlitz3.ab3@11104>    BPL.b getcharb__stuff
00026A7C <AmiBlitz3.ab3@11105>   LSL.w #8,D0
00026A7E <AmiBlitz3.ab3@11106>   MOVE.b (A5)+,D0
00026A80 <AmiBlitz3.ab3@11107> RTS
00026A84 <AmiBlitz3.ab3@11110>   CMP.w #$22,D0
00026A88 <AmiBlitz3.ab3@11111>    BEQ.b swapquote
00026A8C <AmiBlitz3.ab3@11112>   CMP.w #$3B,D0
00026A90 <AmiBlitz3.ab3@11113>    BNE.b getcharb__done
00026A96 <AmiBlitz3.ab3@11114>   TST.w instringon
00026A9A <AmiBlitz3.ab3@11115>    BNE.b getcharb__done
00026A9C <AmiBlitz3.ab3@11118>   MOVE.b (A5)+,D0
00026AA0 <AmiBlitz3.ab3@11119>             BEQ getcharb__loop_l1
00026AA4 <AmiBlitz3.ab3@11120>             CMP.b #":",d0
00026AA8 <AmiBlitz3.ab3@11121>             BNE getcharb__loop
00026AAC <AmiBlitz3.ab3@11122>             CMP.b #"@",(a5)
00026AB0 <AmiBlitz3.ab3@11123>             BNE getcharb__loop
00026AB6 <AmiBlitz3.ab3@11126>   MOVE.w D0,lastchar
00026AB8 <AmiBlitz3.ab3@11129> RTS
00026ABE <AmiBlitz3.ab3@11132>   NOT.w instringon
00026AC0 <AmiBlitz3.ab3@11133> RTS
00026AC4 <AmiBlitz3.ab3@11137>   BSR.w getchar
00026ACA <AmiBlitz3.ab3@11138>   TST.w instringon
00026ACE <AmiBlitz3.ab3@11139>    BNE.w get1byte__skip
00026AD2 <AmiBlitz3.ab3@11140>   CMP.w #$20,D0
00026AD6 <AmiBlitz3.ab3@11141>    BEQ.w get1byte_
00026AD8 <AmiBlitz3.ab3@11144> RTS
00026AF2 <AmiBlitz3.ab3@11147> gs:        Ds.w 13                                         ;ds.b 26  org source
00026AF6 <AmiBlitz3.ab3@11148>            Dc.b $F6,$E4,$FC,$D6                            ;dc.b 228,246,252,196,214,220 org source
00026AF8 <AmiBlitz3.ab3@11149>            Dc.b $C4,$DC
00026AFC <AmiBlitz3.ab3@11155>   BSR.w getchar
00026B02 <AmiBlitz3.ab3@11156>   TST.w instringon
00026B06 <AmiBlitz3.ab3@11157>    BNE.w gchar2
00026B0A <AmiBlitz3.ab3@11158>   CMP.w #$20,D0
00026B0E <AmiBlitz3.ab3@11159>    BEQ.w get1bytemain
00026B10 <AmiBlitz3.ab3@11161>   TST.w D0
00026B14 <AmiBlitz3.ab3@11164>   BEQ.b get1bytemain__zero
00026B1A <AmiBlitz3.ab3@11165>   TST.w instringon
00026B1E <AmiBlitz3.ab3@11166>    BEQ.b get1bytemain__noqoute
00026B22 <AmiBlitz3.ab3@11167>   CMP.b #$20,D0
00026B26 <AmiBlitz3.ab3@11168>    BCC.b get1bytemain__skip
00026B2A <AmiBlitz3.ab3@11169>   MOVE.b gs(PC,D0.W),D0
00026B2C <AmiBlitz3.ab3@11170> RTS
00026B30 <AmiBlitz3.ab3@11173>   CMP.w #-$7FDE,D0                                         ;cmp #$8000+34,d0 org source  ;else
00026B34 <AmiBlitz3.ab3@11174>    BEQ.b get1bytemain__zero
00026B38 <AmiBlitz3.ab3@11175>   CMP.w #$3A,D0
00026B3C <AmiBlitz3.ab3@11176>    BEQ.b get1bytemain__zero
00026B3E <AmiBlitz3.ab3@11179>   TST.w D0
00026B40 <AmiBlitz3.ab3@11182> RTS
00026B46 <AmiBlitz3.ab3@11186>   MOVE.w lastchar,D0
00026B4A <AmiBlitz3.ab3@11187> BRA.w gchar2
00026B54 <AmiBlitz3.ab3@11191>   MOVE.w oldqflag,instringon
00026B5A <AmiBlitz3.ab3@11192>   MOVEA.l lastsourcepos,A5
00026B5C <AmiBlitz3.ab3@11193> RTS
00026B62 <AmiBlitz3.ab3@11197>   MOVE.w D0,locchar
00026B68 <AmiBlitz3.ab3@11198>   MOVE.l A5,locloc
00026B6A <AmiBlitz3.ab3@11199> RTS
00026B70 <AmiBlitz3.ab3@11203>   MOVEA.l locloc,A5
00026B76 <AmiBlitz3.ab3@11204>   MOVE.w locchar,D0
00026B7C <AmiBlitz3.ab3@11205>   MOVE.w D0,lastchar
00026B7E <AmiBlitz3.ab3@11206> RTS
00026B7E <internal_errormsg.ab3@1> XINCLUDE "internal_errormsg.ab3"
00026BC6 <internal_errormsg.ab3@9> XINCLUDE "internal_errormsg.ab3"
00026C18 <internal_errormsg.ab3@10> XINCLUDE "internal_errormsg.ab3"
00026C56 <internal_errormsg.ab3@11> XINCLUDE "internal_errormsg.ab3"
00026C94 <internal_errormsg.ab3@12> XINCLUDE "internal_errormsg.ab3"
00026CBE <internal_errormsg.ab3@13> XINCLUDE "internal_errormsg.ab3"
00026CEE <internal_errormsg.ab3@14> XINCLUDE "internal_errormsg.ab3"
00026D38 <internal_errormsg.ab3@15> XINCLUDE "internal_errormsg.ab3"
00026DBE <internal_errormsg.ab3@16> XINCLUDE "internal_errormsg.ab3"
00026E20 <internal_errormsg.ab3@17> XINCLUDE "internal_errormsg.ab3"
00026E68 <internal_errormsg.ab3@18> XINCLUDE "internal_errormsg.ab3"
00026EBA <internal_errormsg.ab3@19> XINCLUDE "internal_errormsg.ab3"
00026F04 <internal_errormsg.ab3@20> XINCLUDE "internal_errormsg.ab3"
00026F52 <internal_errormsg.ab3@21> XINCLUDE "internal_errormsg.ab3"
00026F88 <internal_errormsg.ab3@22> XINCLUDE "internal_errormsg.ab3"
00026FB6 <internal_errormsg.ab3@23> XINCLUDE "internal_errormsg.ab3"
00026FD0 <internal_errormsg.ab3@24> XINCLUDE "internal_errormsg.ab3"
00026FEE <internal_errormsg.ab3@25> XINCLUDE "internal_errormsg.ab3"
0002706C <internal_errormsg.ab3@26> XINCLUDE "internal_errormsg.ab3"
00027096 <internal_errormsg.ab3@27> XINCLUDE "internal_errormsg.ab3"
000270BC <internal_errormsg.ab3@28> XINCLUDE "internal_errormsg.ab3"
000270DC <internal_errormsg.ab3@29> XINCLUDE "internal_errormsg.ab3"
000270FA <internal_errormsg.ab3@30> XINCLUDE "internal_errormsg.ab3"
0002711A <internal_errormsg.ab3@31> XINCLUDE "internal_errormsg.ab3"
00027142 <internal_errormsg.ab3@32> XINCLUDE "internal_errormsg.ab3"
0002716C <internal_errormsg.ab3@33> XINCLUDE "internal_errormsg.ab3"
0002716E <internal_errormsg.ab3@36> XINCLUDE "internal_errormsg.ab3"
0002718A <internal_errormsg.ab3@39> XINCLUDE "internal_errormsg.ab3"
000271B0 <internal_errormsg.ab3@40> XINCLUDE "internal_errormsg.ab3"
000271C8 <internal_errormsg.ab3@41> XINCLUDE "internal_errormsg.ab3"
00027226 <internal_errormsg.ab3@42> XINCLUDE "internal_errormsg.ab3"
00027248 <internal_errormsg.ab3@43> XINCLUDE "internal_errormsg.ab3"
0002726E <internal_errormsg.ab3@44> XINCLUDE "internal_errormsg.ab3"
00027296 <internal_errormsg.ab3@45> XINCLUDE "internal_errormsg.ab3"
000272B6 <internal_errormsg.ab3@46> XINCLUDE "internal_errormsg.ab3"
000272DA <internal_errormsg.ab3@47> XINCLUDE "internal_errormsg.ab3"
00027320 <internal_errormsg.ab3@48> XINCLUDE "internal_errormsg.ab3"
00027344 <internal_errormsg.ab3@49> XINCLUDE "internal_errormsg.ab3"
00027368 <internal_errormsg.ab3@50> XINCLUDE "internal_errormsg.ab3"
00027388 <internal_errormsg.ab3@51> XINCLUDE "internal_errormsg.ab3"
000273AC <internal_errormsg.ab3@52> XINCLUDE "internal_errormsg.ab3"
000273CE <internal_errormsg.ab3@53> XINCLUDE "internal_errormsg.ab3"
000273FA <internal_errormsg.ab3@54> XINCLUDE "internal_errormsg.ab3"
00027420 <internal_errormsg.ab3@55> XINCLUDE "internal_errormsg.ab3"
0002742A <internal_errormsg.ab3@58> XINCLUDE "internal_errormsg.ab3"
00027450 <internal_errormsg.ab3@59> XINCLUDE "internal_errormsg.ab3"
000274A2 <internal_errormsg.ab3@61> XINCLUDE "internal_errormsg.ab3"
0002750C <internal_errormsg.ab3@62> XINCLUDE "internal_errormsg.ab3"
0002756A <internal_errormsg.ab3@63> XINCLUDE "internal_errormsg.ab3"
000275D8 <internal_errormsg.ab3@64> XINCLUDE "internal_errormsg.ab3"
00027614 <internal_errormsg.ab3@65> XINCLUDE "internal_errormsg.ab3"
00027632 <internal_errormsg.ab3@66> XINCLUDE "internal_errormsg.ab3"
00027658 <internal_errormsg.ab3@67> XINCLUDE "internal_errormsg.ab3"
00027688 <internal_errormsg.ab3@68> XINCLUDE "internal_errormsg.ab3"
000276AC <internal_errormsg.ab3@69> XINCLUDE "internal_errormsg.ab3"
000276DA <internal_errormsg.ab3@70> XINCLUDE "internal_errormsg.ab3"
000276FE <internal_errormsg.ab3@71> XINCLUDE "internal_errormsg.ab3"
00027714 <internal_errormsg.ab3@72> XINCLUDE "internal_errormsg.ab3"
0002772A <internal_errormsg.ab3@73> XINCLUDE "internal_errormsg.ab3"
00027730 <internal_errormsg.ab3@76> XINCLUDE "internal_errormsg.ab3"
00027738 <internal_errormsg.ab3@78> XINCLUDE "internal_errormsg.ab3"
0002773A <internal_errormsg.ab3@79> XINCLUDE "internal_errormsg.ab3"
0002773E <internal_errormsg.ab3@80> XINCLUDE "internal_errormsg.ab3"
00027746 <internal_errormsg.ab3@81> XINCLUDE "internal_errormsg.ab3"
00027748 <internal_errormsg.ab3@82> XINCLUDE "internal_errormsg.ab3"
00027782 <internal_errormsg.ab3@84> XINCLUDE "internal_errormsg.ab3"
000277AE <internal_errormsg.ab3@85> XINCLUDE "internal_errormsg.ab3"
000277DE <internal_errormsg.ab3@86> XINCLUDE "internal_errormsg.ab3"
00027816 <internal_errormsg.ab3@87> XINCLUDE "internal_errormsg.ab3"
00027870 <internal_errormsg.ab3@88> XINCLUDE "internal_errormsg.ab3"
00027872 <internal_errormsg.ab3@92> XINCLUDE "internal_errormsg.ab3"
00027876 <internal_errormsg.ab3@93> XINCLUDE "internal_errormsg.ab3"
0002787A <internal_errormsg.ab3@94> XINCLUDE "internal_errormsg.ab3"
0002787E <internal_errormsg.ab3@95> XINCLUDE "internal_errormsg.ab3"
00027882 <internal_errormsg.ab3@96> XINCLUDE "internal_errormsg.ab3"
00027886 <internal_errormsg.ab3@97> XINCLUDE "internal_errormsg.ab3"
0002788A <internal_errormsg.ab3@98> XINCLUDE "internal_errormsg.ab3"
0002788E <internal_errormsg.ab3@99> XINCLUDE "internal_errormsg.ab3"
00027892 <internal_errormsg.ab3@100> XINCLUDE "internal_errormsg.ab3"
00027896 <internal_errormsg.ab3@101> XINCLUDE "internal_errormsg.ab3"
0002789A <internal_errormsg.ab3@102> XINCLUDE "internal_errormsg.ab3"
000278D8 <internal_errormsg.ab3@103> XINCLUDE "internal_errormsg.ab3"
0002790A <internal_errormsg.ab3@105> XINCLUDE "internal_errormsg.ab3"
00027928 <internal_errormsg.ab3@106> XINCLUDE "internal_errormsg.ab3"
00027952 <internal_errormsg.ab3@107> XINCLUDE "internal_errormsg.ab3"
0002796E <internal_errormsg.ab3@108> XINCLUDE "internal_errormsg.ab3"
00027988 <internal_errormsg.ab3@109> XINCLUDE "internal_errormsg.ab3"
000279A6 <internal_errormsg.ab3@110> XINCLUDE "internal_errormsg.ab3"
000279CA <internal_errormsg.ab3@111> XINCLUDE "internal_errormsg.ab3"
000279CC <internal_errormsg.ab3@114> XINCLUDE "internal_errormsg.ab3"
00027A1E <internal_errormsg.ab3@115> XINCLUDE "internal_errormsg.ab3"
00027A46 <internal_errormsg.ab3@117> XINCLUDE "internal_errormsg.ab3"
00027A6E <internal_errormsg.ab3@118> XINCLUDE "internal_errormsg.ab3"
00027A8A <internal_errormsg.ab3@122> XINCLUDE "internal_errormsg.ab3"
00027AAA <internal_errormsg.ab3@123> XINCLUDE "internal_errormsg.ab3"
00027AC2 <internal_errormsg.ab3@124> XINCLUDE "internal_errormsg.ab3"
00027B06 <internal_errormsg.ab3@125> XINCLUDE "internal_errormsg.ab3"
00027B4E <internal_errormsg.ab3@126> XINCLUDE "internal_errormsg.ab3"
00027B78 <internal_errormsg.ab3@127> XINCLUDE "internal_errormsg.ab3"
00027BA2 <internal_errormsg.ab3@128> XINCLUDE "internal_errormsg.ab3"
00027BBC <internal_errormsg.ab3@132> XINCLUDE "internal_errormsg.ab3"
00027BE6 <internal_errormsg.ab3@133> XINCLUDE "internal_errormsg.ab3"
00027C3A <internal_errormsg.ab3@134> XINCLUDE "internal_errormsg.ab3"
00027C86 <internal_errormsg.ab3@135> XINCLUDE "internal_errormsg.ab3"
00027CBE <internal_errormsg.ab3@136> XINCLUDE "internal_errormsg.ab3"
00027CC4 <internal_errormsg.ab3@139> XINCLUDE "internal_errormsg.ab3"
00027CD2 <internal_errormsg.ab3@141> XINCLUDE "internal_errormsg.ab3"
00027D02 <internal_errormsg.ab3@144> XINCLUDE "internal_errormsg.ab3"
00027D36 <internal_errormsg.ab3@145> XINCLUDE "internal_errormsg.ab3"
00027D9C <internal_errormsg.ab3@146> XINCLUDE "internal_errormsg.ab3"
00027DBA <internal_errormsg.ab3@147> XINCLUDE "internal_errormsg.ab3"
00027E34 <internal_errormsg.ab3@148> XINCLUDE "internal_errormsg.ab3"
00027E5C <internal_errormsg.ab3@149> XINCLUDE "internal_errormsg.ab3"
00027E72 <internal_errormsg.ab3@150> XINCLUDE "internal_errormsg.ab3"
00027E86 <internal_errormsg.ab3@151> XINCLUDE "internal_errormsg.ab3"
00027E88 <internal_errormsg.ab3@154> XINCLUDE "internal_errormsg.ab3"
00027E89 <internal_errormsg.ab3@155> XINCLUDE "internal_errormsg.ab3"
00027E8A <internal_errormsg.ab3@156> XINCLUDE "internal_errormsg.ab3"
00027EAA <internal_errormsg.ab3@158> XINCLUDE "internal_errormsg.ab3"
00027EB0 <internal_errormsg.ab3@161> XINCLUDE "internal_errormsg.ab3"
00027EC2 <internal_errormsg.ab3@163> XINCLUDE "internal_errormsg.ab3"
00027EF6 <internal_errormsg.ab3@166> XINCLUDE "internal_errormsg.ab3"
00027F0E <internal_errormsg.ab3@167> XINCLUDE "internal_errormsg.ab3"
00027F2A <internal_errormsg.ab3@168> XINCLUDE "internal_errormsg.ab3"
00027F42 <internal_errormsg.ab3@169> XINCLUDE "internal_errormsg.ab3"
00027F62 <internal_errormsg.ab3@170> XINCLUDE "internal_errormsg.ab3"
00027F82 <internal_errormsg.ab3@171> XINCLUDE "internal_errormsg.ab3"
00027FA8 <internal_errormsg.ab3@172> XINCLUDE "internal_errormsg.ab3"
00027FBE <internal_errormsg.ab3@173> XINCLUDE "internal_errormsg.ab3"
00027FDA <internal_errormsg.ab3@174> XINCLUDE "internal_errormsg.ab3"
00028004 <internal_errormsg.ab3@175> XINCLUDE "internal_errormsg.ab3"
0002801C <internal_errormsg.ab3@176> XINCLUDE "internal_errormsg.ab3"
00028038 <internal_errormsg.ab3@177> XINCLUDE "internal_errormsg.ab3"
00028058 <internal_errormsg.ab3@178> XINCLUDE "internal_errormsg.ab3"
00028070 <internal_errormsg.ab3@179> XINCLUDE "internal_errormsg.ab3"
00028074 <internal_errormsg.ab3@182> XINCLUDE "internal_errormsg.ab3"
0002807A <internal_errormsg.ab3@183> XINCLUDE "internal_errormsg.ab3"
00028080 <internal_errormsg.ab3@184> XINCLUDE "internal_errormsg.ab3"
00028095 <internal_errormsg.ab3@185> XINCLUDE "internal_errormsg.ab3"
0002809B <internal_errormsg.ab3@187> XINCLUDE "internal_errormsg.ab3"
0002809C <internal_errormsg.ab3@188> XINCLUDE "internal_errormsg.ab3"
000280A0 <internal_errormsg.ab3@191> XINCLUDE "internal_errormsg.ab3"
000280A6 <internal_errormsg.ab3@192> XINCLUDE "internal_errormsg.ab3"
000280AC <internal_errormsg.ab3@193> XINCLUDE "internal_errormsg.ab3"
000280BF <internal_errormsg.ab3@194> XINCLUDE "internal_errormsg.ab3"
000280C5 <internal_errormsg.ab3@196> XINCLUDE "internal_errormsg.ab3"
000280C6 <internal_errormsg.ab3@197> XINCLUDE "internal_errormsg.ab3"
000280E4 <internal_errormsg.ab3@199> XINCLUDE "internal_errormsg.ab3"
000280FC <internal_errormsg.ab3@200> XINCLUDE "internal_errormsg.ab3"
00028118 <internal_errormsg.ab3@201> XINCLUDE "internal_errormsg.ab3"
00028142 <internal_errormsg.ab3@202> XINCLUDE "internal_errormsg.ab3"
0002815C <internal_errormsg.ab3@203> XINCLUDE "internal_errormsg.ab3"
0002817C <internal_errormsg.ab3@204> XINCLUDE "internal_errormsg.ab3"
0002819A <internal_errormsg.ab3@205> XINCLUDE "internal_errormsg.ab3"
000281C8 <internal_errormsg.ab3@206> XINCLUDE "internal_errormsg.ab3"
000281D2 <internal_errormsg.ab3@209> XINCLUDE "internal_errormsg.ab3"
00028204 <internal_errormsg.ab3@210> XINCLUDE "internal_errormsg.ab3"
00028222 <internal_errormsg.ab3@212> XINCLUDE "internal_errormsg.ab3"
00028240 <internal_errormsg.ab3@213> XINCLUDE "internal_errormsg.ab3"
00028260 <internal_errormsg.ab3@214> XINCLUDE "internal_errormsg.ab3"
00028286 <internal_errormsg.ab3@215> XINCLUDE "internal_errormsg.ab3"
000282AC <internal_errormsg.ab3@216> XINCLUDE "internal_errormsg.ab3"
000282D4 <internal_errormsg.ab3@217> XINCLUDE "internal_errormsg.ab3"
000282F2 <internal_errormsg.ab3@218> XINCLUDE "internal_errormsg.ab3"
00028312 <internal_errormsg.ab3@219> XINCLUDE "internal_errormsg.ab3"
0002832C <internal_errormsg.ab3@220> XINCLUDE "internal_errormsg.ab3"
0002834E <internal_errormsg.ab3@221> XINCLUDE "internal_errormsg.ab3"
0002836C <internal_errormsg.ab3@222> XINCLUDE "internal_errormsg.ab3"
0002838E <internal_errormsg.ab3@223> XINCLUDE "internal_errormsg.ab3"
000283B2 <internal_errormsg.ab3@224> XINCLUDE "internal_errormsg.ab3"
000283B8 <internal_errormsg.ab3@227> XINCLUDE "internal_errormsg.ab3"
000283D4 <internal_errormsg.ab3@228> XINCLUDE "internal_errormsg.ab3"
000283F0 <internal_errormsg.ab3@230> XINCLUDE "internal_errormsg.ab3"
0002840E <internal_errormsg.ab3@231> XINCLUDE "internal_errormsg.ab3"
0002842C <internal_errormsg.ab3@232> XINCLUDE "internal_errormsg.ab3"
0002847A <internal_errormsg.ab3@233> XINCLUDE "internal_errormsg.ab3"
00028498 <internal_errormsg.ab3@234> XINCLUDE "internal_errormsg.ab3"
000284B6 <internal_errormsg.ab3@235> XINCLUDE "internal_errormsg.ab3"
000284D0 <internal_errormsg.ab3@236> XINCLUDE "internal_errormsg.ab3"
0002851C <internal_errormsg.ab3@237> XINCLUDE "internal_errormsg.ab3"
00028542 <internal_errormsg.ab3@238> XINCLUDE "internal_errormsg.ab3"
00028562 <internal_errormsg.ab3@239> XINCLUDE "internal_errormsg.ab3"
00028584 <internal_errormsg.ab3@240> XINCLUDE "internal_errormsg.ab3"
000285A0 <internal_errormsg.ab3@241> XINCLUDE "internal_errormsg.ab3"
000285C6 <internal_errormsg.ab3@242> XINCLUDE "internal_errormsg.ab3"
000285E2 <internal_errormsg.ab3@243> XINCLUDE "internal_errormsg.ab3"
00028600 <internal_errormsg.ab3@244> XINCLUDE "internal_errormsg.ab3"
00028628 <internal_errormsg.ab3@245> XINCLUDE "internal_errormsg.ab3"
00028644 <internal_errormsg.ab3@246> XINCLUDE "internal_errormsg.ab3"
00028654 <internal_errormsg.ab3@247> XINCLUDE "internal_errormsg.ab3"
00028676 <internal_errormsg.ab3@248> XINCLUDE "internal_errormsg.ab3"
0002867A <internal_errormsg.ab3@251> XINCLUDE "internal_errormsg.ab3"
0002867C <internal_errormsg.ab3@254> XINCLUDE "internal_errormsg.ab3"
00028696 <internal_errormsg.ab3@255> XINCLUDE "internal_errormsg.ab3"
000286BA <internal_errormsg.ab3@257> XINCLUDE "internal_errormsg.ab3"
000286DA <internal_errormsg.ab3@258> XINCLUDE "internal_errormsg.ab3"
0002870C <internal_errormsg.ab3@259> XINCLUDE "internal_errormsg.ab3"
0002876A <internal_errormsg.ab3@260> XINCLUDE "internal_errormsg.ab3"
000287A2 <internal_errormsg.ab3@261> XINCLUDE "internal_errormsg.ab3"
000287E0 <internal_errormsg.ab3@262> XINCLUDE "internal_errormsg.ab3"
00028816 <internal_errormsg.ab3@263> XINCLUDE "internal_errormsg.ab3"
00028848 <internal_errormsg.ab3@264> XINCLUDE "internal_errormsg.ab3"
0002886C <internal_errormsg.ab3@265> XINCLUDE "internal_errormsg.ab3"
00028890 <internal_errormsg.ab3@266> XINCLUDE "internal_errormsg.ab3"
000288DA <internal_errormsg.ab3@267> XINCLUDE "internal_errormsg.ab3"
00028902 <internal_errormsg.ab3@268> XINCLUDE "internal_errormsg.ab3"
0002894C <internal_errormsg.ab3@269> XINCLUDE "internal_errormsg.ab3"
0002898C <internal_errormsg.ab3@270> XINCLUDE "internal_errormsg.ab3"
0002898C <AmiBlitz3.ab3@11210> XINCLUDE "internal_errormsg.ab3"
0002898E <AmiBlitz3.ab3@11214> ezerr:   Ds.w 1                                            ;for simple errors
00028994 <AmiBlitz3.ab3@11220>    MOVE.l myline,d0
00028998 <AmiBlitz3.ab3@11221>   BNE handle_compileerror__l2
0002899E <AmiBlitz3.ab3@11223>     MOVE.l a5,lastsourcepos
000289A0 <AmiBlitz3.ab3@11225>     SUBA.l a5,a5
000289A6 <AmiBlitz3.ab3@11227>   TST.l usedfrom
000289AA <AmiBlitz3.ab3@11228>   BEQ handle_compileerror__org
000289B0 <AmiBlitz3.ab3@11229>     MOVEA.l usedfrom,a5
000289B6 <AmiBlitz3.ab3@11232>   TST.w dirmode
000289BA <AmiBlitz3.ab3@11233>   BNE.b handle_compileerror__quiet
000289C0 <AmiBlitz3.ab3@11234>     JSR call_setpointernormal
000289C4 <AmiBlitz3.ab3@11235>     MOVE.w ezerr(PC),D0
000289C8 <AmiBlitz3.ab3@11236>     BNE.w handle_compileerror__skip
000289CE <AmiBlitz3.ab3@11237>       MOVE.w cfetchmode,D0
000289D2 <AmiBlitz3.ab3@11238>       BEQ.w handle_compileerror__skip2
000289DC <AmiBlitz3.ab3@11239>         MOVE.l oldlibat,destbufferend                      ;fix up lib thing.
000289E2 <AmiBlitz3.ab3@11242>   MOVE.w constmode,D0
000289E6 <AmiBlitz3.ab3@11243>   BEQ.b handle_compileerror__skip3
000289EA <AmiBlitz3.ab3@11244>     BSR.w asmerr2
000289F0 <AmiBlitz3.ab3@11247>   MOVE.l firstlocal,D1
000289F6 <AmiBlitz3.ab3@11248>   OR.l firstglob,D1
000289FA <AmiBlitz3.ab3@11249>   BEQ.b handle_compileerror__notproc                       ;?!?!?!
00028A00 <AmiBlitz3.ab3@11250>     JSR JL_0_DB5C
00028A08 <AmiBlitz3.ab3@11253>   MOVE.w #$FFFF,anyerrs                                    ;#-1,anyerrs org source
00028A12 <AmiBlitz3.ab3@11254>   CMP.l #"NORE",reqmode                                    ;for used functions
00028A16 <AmiBlitz3.ab3@11255>   BEQ handle_compileerror__notproc_l1
00028A20 <AmiBlitz3.ab3@11256>     MOVE.l linenumat,compilelinecounter
00028A26 <AmiBlitz3.ab3@11259>   JSR close_compilewin
00028A28 <AmiBlitz3.ab3@11262>   MOVEA.l (A7)+,A0
00028A32 <AmiBlitz3.ab3@11263>   CMP.l #maxerrorcount,errorcounter
00028A36 <AmiBlitz3.ab3@11264>   BLT 'lesserror
00028A3C <AmiBlitz3.ab3@11265>   LEA errorlimit_text,a0
00028A42 <AmiBlitz3.ab3@11267>   ADDQ.l #1,errorcounter
00028A48 <AmiBlitz3.ab3@11268>   JSR errorstringparse
00028A52 <AmiBlitz3.ab3@11269>   CMP.l #"NORE",reqmode                                    ;for used functions
00028A56 <AmiBlitz3.ab3@11270>   BEQ handle_compileerror__skip_Lxx2
00028A5C <AmiBlitz3.ab3@11271>   TST.l CLIMode
00028A60 <AmiBlitz3.ab3@11272>   BNE 'climode_output
00028A66 <AmiBlitz3.ab3@11274>     JSR save_errorfile
00028A6A <AmiBlitz3.ab3@11275>     BRA 'end_output
00028A70 <AmiBlitz3.ab3@11277>     JSR stdout_error
00028A7A <AmiBlitz3.ab3@11279>      CMP.l #maxerrorcount,errorcounter
00028A7E <AmiBlitz3.ab3@11280>      BGT 'end_output
00028A84 <AmiBlitz3.ab3@11281>     MOVE.l lastsourcepos,a5
00028A86 <AmiBlitz3.ab3@11282> 'loop TST.b (a5)
00028A8A <AmiBlitz3.ab3@11283>       BEQ 'ok2
00028A8C <AmiBlitz3.ab3@11284>     MOVE.b (a5)+,d0                                  ; position to usefull source position to avoid following errors
00028A90 <AmiBlitz3.ab3@11285>     BEQ 'ok
00028A94 <AmiBlitz3.ab3@11286>     CMP.b #":",d0
00028A98 <AmiBlitz3.ab3@11287>     BEQ 'ok
00028A9C <AmiBlitz3.ab3@11288>     BRA 'loop
00028A9E <AmiBlitz3.ab3@11289> 'ok SUBQ.l #1,a5
00028AA6 <AmiBlitz3.ab3@11290> 'ok2 MOVE.w #0,lastchar
00028AAE <AmiBlitz3.ab3@11291>     MOVE.b #1,iserror
00028AB4 <AmiBlitz3.ab3@11292>     MOVE.l stackaddr,a7
00028AB6 <AmiBlitz3.ab3@11293>     RTS
00028AB8 <AmiBlitz3.ab3@11299>   MOVE.l A0,-(a7)
00028AF6 <AmiBlitz3.ab3@11300>   !ComData_GetL{comFunc_ErrorRequest,A1}
00028AF8 <AmiBlitz3.ab3@11301>   MOVE.l (a7)+,A0
00028AFC <AmiBlitz3.ab3@11303>   MOVEM.l d6/D7/A6,-(A7)
00028B02 <AmiBlitz3.ab3@11304>   MOVE.l includeline,d7
00028B08 <AmiBlitz3.ab3@11305>   MOVE.l #"INLN",a6
00028B12 <AmiBlitz3.ab3@11306>   MOVE.l errstack,tempa7
00028B14 <AmiBlitz3.ab3@11307>   JSR (A1)                                                  ;open ped errorrequest
00028B18 <AmiBlitz3.ab3@11309>   MOVEM.l (A7)+,D7/d6/A6
00028B1E <AmiBlitz3.ab3@11312>   MOVE.l tempa7,a7
00028B24 <AmiBlitz3.ab3@11313>   MOVEA.l errcont,A0
00028B26 <AmiBlitz3.ab3@11315> RTS
00028B2C <AmiBlitz3.ab3@11318>   MOVEA.l errstack,A7
00028B32 <AmiBlitz3.ab3@11319>   MOVEA.l errcont,A0
00028B34 <AmiBlitz3.ab3@11321> RTS
00028B36 <AmiBlitz3.ab3@11324>   MOVE.l (A7),D0
00028B3C <AmiBlitz3.ab3@11325>   MOVEA.l errstack,A7
00028B42 <AmiBlitz3.ab3@11326>   MOVEA.l errcont,A0
00028B44 <AmiBlitz3.ab3@11327> JMP (A0)
00028B48 <AmiBlitz3.ab3@11333>   CMP.w #$7A,D0                                            ;'z'
00028B4C <AmiBlitz3.ab3@11334>    BHI.w tstalpha__no
00028B50 <AmiBlitz3.ab3@11335>   CMP.w #$41,D0                                            ;'A'
00028B54 <AmiBlitz3.ab3@11336>    BCS.w tstalpha__no
00028B58 <AmiBlitz3.ab3@11337>   CMP.w #$61,D0                                            ;'a'
00028B5C <AmiBlitz3.ab3@11338>    BCC.w tstalpha__yes
00028B60 <AmiBlitz3.ab3@11339>   CMP.w #$5A,D0                                            ;'Z'
00028B64 <AmiBlitz3.ab3@11340>    BHI.w tstalpha__no
00028B66 <AmiBlitz3.ab3@11343>   CMP.w D0,D0
00028B68 <AmiBlitz3.ab3@11346> RTS
00028B6C <AmiBlitz3.ab3@11354>   CMP.w #$30,D0                                            ;'0'
00028B70 <AmiBlitz3.ab3@11355>    BCS.w tstnum__skip
00028B74 <AmiBlitz3.ab3@11356>   CMP.w #$39,D0                                            ;'9'
00028B78 <AmiBlitz3.ab3@11357>    BHI.w tstnum__skip                                     
00028B7A <AmiBlitz3.ab3@11358>   CMP.w D0,D0
00028B7C <AmiBlitz3.ab3@11361> RTS
00028B9E <AmiBlitz3.ab3@11367>   !compare1                                                ;bsr.w tstalpha
00028BA2 <AmiBlitz3.ab3@11368>    BEQ.w tstlab__skip
00028BB4 <AmiBlitz3.ab3@11369>   !compare2                                                ;bsr.w tstnum2
00028BB8 <AmiBlitz3.ab3@11370>    BEQ.w tstlab__skip
00028BBC <AmiBlitz3.ab3@11371>   CMP.w #$5F,D0                                            ;'_'
00028BC0 <AmiBlitz3.ab3@11372>    BEQ.w tstlab__skip
00028BC4 <AmiBlitz3.ab3@11373>   CMP.w #$27,D0                                            ;#loclabch,d0 org source
00028BC6 <AmiBlitz3.ab3@11376> RTS
00028BD0 <AmiBlitz3.ab3@11381>   MOVE.w oldqflag,instringon
00028BD6 <AmiBlitz3.ab3@11382>   MOVEA.l lastsourcepos,A5
00028BDC <AmiBlitz3.ab3@11385>   MOVE.l a5,beforeparameterfetch
00028BE2 <AmiBlitz3.ab3@11386>   LEA ptr_parameterstore,A1
00028BE4 <AmiBlitz3.ab3@11389>   MOVEQ.l #$00,D2
00028BEA <AmiBlitz3.ab3@11392>   LEA chartab,a0
00028BEC <AmiBlitz3.ab3@11393>   MOVEQ #0,d0
00028BF2 <AmiBlitz3.ab3@11394>   MOVE.l A5,lastsourcepos
00028BFC <AmiBlitz3.ab3@11395>   MOVE.w instringon,oldqflag
00028BFE <AmiBlitz3.ab3@11398>     MOVE.b (a5)+,d0
00028C02 <AmiBlitz3.ab3@11399>   CMP.b #$20,d0                                            ;space deftype
00028C06 <AmiBlitz3.ab3@11400>   BEQ makename4__retry
00028C0C <AmiBlitz3.ab3@11402>   MOVE.w d0,lastchar
00028C10 <AmiBlitz3.ab3@11403>   TST.b 0(a0,d0.w)
00028C14 <AmiBlitz3.ab3@11404>   BNE makename__done
00028C16 <AmiBlitz3.ab3@11413>   MOVE.b D0,(A1)+
00028C18 <AmiBlitz3.ab3@11414>   ADDQ.l #1,D2
00028C1E <AmiBlitz3.ab3@11415>   MOVE.l A5,lastsourcepos
00028C20 <AmiBlitz3.ab3@11418>   MOVE.b (a5)+,d0
00028C26 <AmiBlitz3.ab3@11419>   MOVE.b d0,lastchar+1
00028C2A <AmiBlitz3.ab3@11420>   CMP.b #$20,d0
00028C2E <AmiBlitz3.ab3@11421>   BEQ makename__loop_l20
00028C32 <AmiBlitz3.ab3@11423>   TST.b 0(a0,d0)
00028C36 <AmiBlitz3.ab3@11424>   BEQ makename__loop
00028C3A <AmiBlitz3.ab3@11425>   CMP.b #2,d0
00028C3E <AmiBlitz3.ab3@11426>   BNE makename__loop_lf1
00028C44 <AmiBlitz3.ab3@11427>   MOVEA.l usedfrom,A5
00028C4A <AmiBlitz3.ab3@11428>   CLR.l usedfrom
00028C4E <AmiBlitz3.ab3@11429> BRA makename__loop_ln1
00028C52 <AmiBlitz3.ab3@11432>   CMP.b #1,d0
00028C56 <AmiBlitz3.ab3@11433>   BNE makename__loop_l20
00028C5A <AmiBlitz3.ab3@11434>   MOVEA.l cmakea5(PC),A5
00028C5E <AmiBlitz3.ab3@11435> BRA makename__loop_ln1
00028C62 <AmiBlitz3.ab3@11438>   CMP.b #$7e,d0
00028C66 <AmiBlitz3.ab3@11439>             BNE makename__loop_lt
00028C6C <AmiBlitz3.ab3@11440>             TST.w cmake
00028C70 <AmiBlitz3.ab3@11441>             BNE.w makename__loop_a1
00028C72 <AmiBlitz3.ab3@11442>             SUBQ.l #1,a5
00028C76 <AmiBlitz3.ab3@11443>             BSR.w get1bytemain
00028C7A <AmiBlitz3.ab3@11444> BRA makename__loop
00028C7E <AmiBlitz3.ab3@11448> BRA makename__loop_gpex
00028C82 <AmiBlitz3.ab3@11452>   BSR.w getchar
00028CA4 <AmiBlitz3.ab3@11453>    !compare1                                               ;bsr.w tstalpha
00028CA8 <AmiBlitz3.ab3@11454>    BEQ.w makename__loop_getp1
00028CBA <AmiBlitz3.ab3@11455>    !compare2                                               ;bsr.w tstnum
00028CBE <AmiBlitz3.ab3@11456>    BEQ.w makename__loop_getp1
00028CC2 <AmiBlitz3.ab3@11457>   CMP.w #$5F,D0                                            ;'_'
00028CC6 <AmiBlitz3.ab3@11458>    BEQ.w makename__loop_getp1
00028CCA <AmiBlitz3.ab3@11459>   CMP.w #$27,D0                                            ;#loclabch,d0 org source
00028CCE <AmiBlitz3.ab3@11463>       BNE makename__loop_gpex
00028CD2 <AmiBlitz3.ab3@11464>       CMP.b #$20,d0
00028CD6 <AmiBlitz3.ab3@11465>       BNE.w makename__loop
00028CD8 <AmiBlitz3.ab3@11468>      TST.b d0
00028CDC <AmiBlitz3.ab3@11469>      BPL makename__loop_l10
00028CDE <AmiBlitz3.ab3@11470>      SUBQ.l #1,a5
00028CE2 <AmiBlitz3.ab3@11471>      BSR get1byte_
00028CE6 <AmiBlitz3.ab3@11474>    CMP.w #$20,D0
00028CEA <AmiBlitz3.ab3@11475>    BNE.w makename__done
00028CEC <AmiBlitz3.ab3@11476>    MOVEQ #0,d0
00028CF2 <AmiBlitz3.ab3@11477>   MOVE.l a5,lastsourcepos
00028CF4 <AmiBlitz3.ab3@11480>   MOVE.b (a5)+,d0                                          ;neuneu
00028CF8 <AmiBlitz3.ab3@11481>   BPL makename__loop_l101:
00028CFA <AmiBlitz3.ab3@11482>   ASL.w #8,d0
00028CFC <AmiBlitz3.ab3@11483>   MOVE.b (a5)+,d0
00028D02 <AmiBlitz3.ab3@11486>   TST.w instringon
00028D06 <AmiBlitz3.ab3@11487>   BNE makename__loop_l102
00028D0A <AmiBlitz3.ab3@11488>   CMP.b #$20,d0
00028D0E <AmiBlitz3.ab3@11489>   BEQ makename__loop_l103
00028D12 <AmiBlitz3.ab3@11490>   CMP.b #";",d0
00028D16 <AmiBlitz3.ab3@11491>   BNE makename__loop_l102
00028D18 <AmiBlitz3.ab3@11494>   MOVE.b (A5)+,D0
00028D1C <AmiBlitz3.ab3@11495>              BEQ makename__loop_l1
00028D20 <AmiBlitz3.ab3@11496>              CMP.b #":",d0
00028D24 <AmiBlitz3.ab3@11497>              BNE makename__loop_lr                         ;:@
00028D28 <AmiBlitz3.ab3@11498>              CMP.b #"@",(a5)
00028D2C <AmiBlitz3.ab3@11499>              BNE makename__loop_lr
00028D2E <AmiBlitz3.ab3@11500>              ADDQ #1,a5
00028D34 <AmiBlitz3.ab3@11504>   MOVE.w d0,lastchar
00028D38 <AmiBlitz3.ab3@11508>   CMP.b #";",d0
00028D3C <AmiBlitz3.ab3@11509>   BEQ makename__done_l11
00028D3E <AmiBlitz3.ab3@11510>   CLR.b (A1)
00028D40 <AmiBlitz3.ab3@11512>   TST.w D2
00028D42 <AmiBlitz3.ab3@11513> RTS
00028D44 <AmiBlitz3.ab3@11516>   CLR.b (a1)
00028D46 <AmiBlitz3.ab3@11517>   MOVEQ #0,d0
00028D4C <AmiBlitz3.ab3@11518>   MOVE.w d0,lastchar
00028D4E <AmiBlitz3.ab3@11520>   TST.w D2
00028D50 <AmiBlitz3.ab3@11521> RTS
00028D52 <AmiBlitz3.ab3@11527>   MOVE.l (A2),D0
00028D56 <AmiBlitz3.ab3@11530>   BEQ.w findlast__here
00028D58 <AmiBlitz3.ab3@11531>   MOVEA.l D0,A2
00028D5C <AmiBlitz3.ab3@11532> BRA.w findlast__loop
00028D60 <AmiBlitz3.ab3@11535> BRA.w reget
00028D62 <AmiBlitz3.ab3@11541>   MOVE.l (A2),-(A7)
00028D66 <AmiBlitz3.ab3@11542>   BSR.w addlabel
00028D68 <AmiBlitz3.ab3@11543>   MOVE.l (A7)+,(A2)
00028D6A <AmiBlitz3.ab3@11544> RTS
00028D70 <AmiBlitz3.ab3@11549>   CLR.l fp0addr
00028D76 <AmiBlitz3.ab3@11550>   TST.w dirmode
00028D7A <AmiBlitz3.ab3@11551>    BNE.w illdirerr
00028D7C <AmiBlitz3.ab3@11552>   MOVEQ.l #$00,D0
00028D7E <AmiBlitz3.ab3@11553>   MOVE.w D7,D0
00028D80 <AmiBlitz3.ab3@11554>   ADD.w D2,D0
00028D82 <AmiBlitz3.ab3@11555>   ADDQ.w #1,D0
00028D84 <AmiBlitz3.ab3@11556>   MOVE.w D0,D2
00028D86 <AmiBlitz3.ab3@11557>   ADDQ.l #2,d0
00028D88 <AmiBlitz3.ab3@11558>   MOVEQ.l #$01,D1
00028D8E <AmiBlitz3.ab3@11559>   MOVEA.l _execbase,A6
00028D94 <AmiBlitz3.ab3@11560>   MOVE.l mempool2,a0
00028D98 <AmiBlitz3.ab3@11561>   JSR _AllocPooled(a6)
00028D9E <AmiBlitz3.ab3@11563>   MOVE.l lastlabel,a2
00028DA0 <AmiBlitz3.ab3@11564>   MOVE.l D0,(A2)
00028DA2 <AmiBlitz3.ab3@11565>   MOVE.l d0,a0
00028DA4 <AmiBlitz3.ab3@11566>   CLR.l (a0)
00028DAA <AmiBlitz3.ab3@11567>   MOVE.l a0,lastlabel
00028DAC <AmiBlitz3.ab3@11568>   MOVE.l d0,A2
00028DB0 <AmiBlitz3.ab3@11569>   LEA -$1(A0,D7.W),A0
00028DB2 <AmiBlitz3.ab3@11570>   MOVE.b D2,(A0)+
00028DB8 <AmiBlitz3.ab3@11571>   LEA ptr_parameterstore,A1
00028DBA <AmiBlitz3.ab3@11572>   MOVEQ #0,d0
00028DBC <AmiBlitz3.ab3@11573>   MOVEQ #0,d1
00028DBE <AmiBlitz3.ab3@11576>   MOVE.b (A1)+,d1
00028DC2 <AmiBlitz3.ab3@11577>    BEQ 'l1
00028DC8 <AmiBlitz3.ab3@11578>    !hashalgo
00028DCA <AmiBlitz3.ab3@11579>    MOVE.b d1,(A0)+
00028DCE <AmiBlitz3.ab3@11580> BRA addlabel_loop2a
00028DD0 <AmiBlitz3.ab3@11583>    CLR.b (a0)+
00028DD6 <AmiBlitz3.ab3@11584>    LEA labelhash,a0
00028DDC <AmiBlitz3.ab3@11585>    AND.l #hashsize,d0
00028DDE <AmiBlitz3.ab3@11586>    ASL.l #2,d0
00028DE2 <AmiBlitz3.ab3@11587>    MOVE.l 0(a0,d0),d1
00028DE6 <AmiBlitz3.ab3@11588>    MOVE.l d1,$c(a2)
00028DEA <AmiBlitz3.ab3@11589>    MOVE.l a2,0(a0,d0)
00028DEC <AmiBlitz3.ab3@11590>    MOVEQ #0,d0
00028DF0 <AmiBlitz3.ab3@11591> BRA.w reget
00028DF6 <AmiBlitz3.ab3@11595>    TST.b newvariable
00028DFA <AmiBlitz3.ab3@11596>    BNE addlabel
00028E00 <AmiBlitz3.ab3@11599>   TST.w dirmode
00028E04 <AmiBlitz3.ab3@11600>    BNE.w illdirerr
00028E06 <AmiBlitz3.ab3@11601>   MOVEQ.l #$00,D0
00028E08 <AmiBlitz3.ab3@11602>   MOVE.w D7,D0
00028E0A <AmiBlitz3.ab3@11603>   ADD.w D2,D0
00028E0C <AmiBlitz3.ab3@11604>   ADDQ.w #1,D0
00028E0E <AmiBlitz3.ab3@11605>   MOVE.w D0,D2
00028E10 <AmiBlitz3.ab3@11606>   MOVEQ.l #$01,D1
00028E16 <AmiBlitz3.ab3@11607>   MOVEA.l _execbase,A6
00028E1C <AmiBlitz3.ab3@11608>   MOVE.l mempool2,a0
00028E20 <AmiBlitz3.ab3@11609>   JSR _AllocPooled(a6)
00028E22 <AmiBlitz3.ab3@11610>   MOVEA.l D0,A0
00028E28 <AmiBlitz3.ab3@11612>   LEA varbase,a2
00028E2A <AmiBlitz3.ab3@11613>   MOVE.l (a2),(a0)
00028E2C <AmiBlitz3.ab3@11614>   MOVE.l A0,(A2)
00028E2E <AmiBlitz3.ab3@11615>   MOVEA.l A0,A2
00028E32 <AmiBlitz3.ab3@11616>   LEA -$1(A0,D7.W),A0
00028E34 <AmiBlitz3.ab3@11617>   MOVE.b D2,(A0)+
00028E3A <AmiBlitz3.ab3@11618>   LEA ptr_parameterstore,A1
00028E3C <AmiBlitz3.ab3@11619>   MOVEQ #0,d0
00028E3E <AmiBlitz3.ab3@11620>   MOVEQ #0,d1
00028E40 <AmiBlitz3.ab3@11623>   MOVE.b (A1)+,d1
00028E44 <AmiBlitz3.ab3@11624>    BEQ 'l12
00028E4A <AmiBlitz3.ab3@11625>    !hashalgo
00028E4C <AmiBlitz3.ab3@11626>    MOVE.b d1,(A0)+
00028E50 <AmiBlitz3.ab3@11627> BRA 'l11
00028E52 <AmiBlitz3.ab3@11630>   CLR.b (a0)+
00028E58 <AmiBlitz3.ab3@11631>   LEA variablehash,a0
00028E5E <AmiBlitz3.ab3@11632>    AND.l #hashsize,d0
00028E60 <AmiBlitz3.ab3@11633>    ASL.l #2,d0
00028E64 <AmiBlitz3.ab3@11634>    MOVE.l 0(a0,d0),d1
00028E68 <AmiBlitz3.ab3@11635>    MOVE.l d1,$e(a2)
00028E6C <AmiBlitz3.ab3@11636>    MOVE.l a2,0(a0,d0)
00028E6E <AmiBlitz3.ab3@11637>    MOVEQ #0,d0
00028E72 <AmiBlitz3.ab3@11638> BRA.w reget
00028E78 <AmiBlitz3.ab3@11642>   TST.w dirmode
00028E7C <AmiBlitz3.ab3@11643>    BNE.w illdirerr
00028E7E <AmiBlitz3.ab3@11650>   MOVEQ.l #$00,D0
00028E80 <AmiBlitz3.ab3@11651>   MOVE.w D7,D0
00028E82 <AmiBlitz3.ab3@11652>   ADD.w D2,D0
00028E84 <AmiBlitz3.ab3@11653>   ADDQ.w #1,D0
00028E86 <AmiBlitz3.ab3@11654>   MOVE.w D0,D2
00028E88 <AmiBlitz3.ab3@11655>   MOVEQ.l #$01,D1
00028E8E <AmiBlitz3.ab3@11656>   MOVEA.l _execbase,A6
00028E94 <AmiBlitz3.ab3@11657>   MOVE.l mempool2,a0
00028E98 <AmiBlitz3.ab3@11658>   JSR _AllocPooled(a6)
00028E9A <AmiBlitz3.ab3@11660>   MOVEA.l D0,A0
00028E9C <AmiBlitz3.ab3@11661>   MOVE.l A0,(A2)
00028E9E <AmiBlitz3.ab3@11662>   CLR.l (a0)
00028EA2 <AmiBlitz3.ab3@11663>   CLR.l 8(a0)                                              ;clear next
00028EA4 <AmiBlitz3.ab3@11664>   MOVEA.l A0,A2
00028EA8 <AmiBlitz3.ab3@11665>   LEA -$1(A0,D7.W),A0
00028EAA <AmiBlitz3.ab3@11666>   MOVE.b D2,(A0)+                                          ;put in struct length
00028EB0 <AmiBlitz3.ab3@11667>   LEA ptr_parameterstore,A1
00028EB2 <AmiBlitz3.ab3@11668>   MOVEQ #0,d0
00028EB4 <AmiBlitz3.ab3@11669>   MOVEQ #0,d1
00028EB6 <AmiBlitz3.ab3@11672>   MOVE.b (A1)+,d1
00028EB8 <AmiBlitz3.ab3@11675>   MOVE.b d1,(A0)+
00028EBC <AmiBlitz3.ab3@11676>   BNE.w addlabel_loop2
00028EC0 <AmiBlitz3.ab3@11677> BRA.w reget
00028EC2 <AmiBlitz3.ab3@11681>   MOVEQ.l #$13,D7
00028EC8 <AmiBlitz3.ab3@11682>   LEA constantbase,A2
00028ECC <AmiBlitz3.ab3@11683> BRA.w findlab
00028ECE <AmiBlitz3.ab3@11687>   MOVEQ.l #$05+8,D7                                        ;#5,d7 org source
00028ED4 <AmiBlitz3.ab3@11688>   LEA xinclude_base,A2
00028ED8 <AmiBlitz3.ab3@11689> BRA.w findlab
00028EDA <AmiBlitz3.ab3@11693>   MOVEQ.l #$09,D7
00028EE0 <AmiBlitz3.ab3@11694>   LEA firstconst,A2
00028EE4 <AmiBlitz3.ab3@11695> BRA.w findlab
00028EE6 <AmiBlitz3.ab3@11699>   MOVEQ.l #$0d,D7                                          ;find macro
00028EEC <AmiBlitz3.ab3@11700>   LEA macrobase,A2
00028EF0 <AmiBlitz3.ab3@11701> BRA.w findlab
00028EF6 <AmiBlitz3.ab3@11705>   LEA labelhash,A2
00028EF8 <AmiBlitz3.ab3@11706>   MOVEQ.l #$13,D7
00028EFA <AmiBlitz3.ab3@11707>   EXT.l d2
00028F00 <AmiBlitz3.ab3@11708>   LEA ptr_parameterstore,A0
00028F02 <AmiBlitz3.ab3@11709>   MOVEQ #0,d0
00028F04 <AmiBlitz3.ab3@11710>   MOVEQ #0,d1
00028F06 <AmiBlitz3.ab3@11713>     MOVE.b (a0)+,d1
00028F0A <AmiBlitz3.ab3@11714>     BEQ 'l15
00028F10 <AmiBlitz3.ab3@11715>     !hashalgo
00028F14 <AmiBlitz3.ab3@11716> BRA 'l20
00028F1A <AmiBlitz3.ab3@11719>   AND.l #hashsize,d0
00028F1C <AmiBlitz3.ab3@11720>   ASL.l #2,d0
00028F20 <AmiBlitz3.ab3@11721>   MOVE.l 0(a2,d0),d0
00028F24 <AmiBlitz3.ab3@11722> BRA 'l11
00028F28 <AmiBlitz3.ab3@11725>   MOVE.l $c(A2),D0                                         ;find label
00028F2C <AmiBlitz3.ab3@11728>   BEQ findlab__no
00028F2E <AmiBlitz3.ab3@11729>   MOVEA.l D0,A2
00028F30 <AmiBlitz3.ab3@11730>   MOVEQ.l #$00,D0
00028F34 <AmiBlitz3.ab3@11731>   MOVE.b -$1(A2,D7.l),D0
00028F3A <AmiBlitz3.ab3@11732>   LEA ptr_parameterstore,A0
00028F3C <AmiBlitz3.ab3@11733>   SUB.l D7,D0
00028F3E <AmiBlitz3.ab3@11734>   SUBQ.l #1,D0
00028F40 <AmiBlitz3.ab3@11735>   CMP.l D0,D2
00028F44 <AmiBlitz3.ab3@11736>    BNE.b 'l10
00028F48 <AmiBlitz3.ab3@11737>   LEA $0(A2,D7.W),A1
00028F4A <AmiBlitz3.ab3@11738>   SUBQ.l #1,D0
00028F4C <AmiBlitz3.ab3@11741>     MOVE.b (a1)+,d1
00028F4E <AmiBlitz3.ab3@11742>     CMP.b (a0)+,d1
00028F52 <AmiBlitz3.ab3@11744>     BNE.b 'l10
00028F56 <AmiBlitz3.ab3@11745>   DBF D0,'l201
00028F5A <AmiBlitz3.ab3@11747>   BSR.w reget
00028F5C <AmiBlitz3.ab3@11748>   CMP.w D0,D0
00028F5E <AmiBlitz3.ab3@11749> RTS
00028F60 <AmiBlitz3.ab3@11753>   MOVEQ.l #$0B,D7
00028F64 <AmiBlitz3.ab3@11754> BRA.w findlab
00028F6A <AmiBlitz3.ab3@11758>   LEA firstproc,A2
00028F70 <AmiBlitz3.ab3@11759>   MOVE.l #$21+#funcentry_extend,D7
00028F74 <AmiBlitz3.ab3@11760> BRA findlab
00028F7A <AmiBlitz3.ab3@11764>   LEA firstfor,A2
00028F7C <AmiBlitz3.ab3@11765>   MOVEQ.l #$11,D7
00028F80 <AmiBlitz3.ab3@11766> BRA.w findlab
00028F82 <AmiBlitz3.ab3@11770>   MOVEQ.l #$0F,D7
00028F86 <AmiBlitz3.ab3@11771> BRA.w findlab
00028F88 <AmiBlitz3.ab3@11775>   MOVEQ.l #$0F+4,D7
00028F8E <AmiBlitz3.ab3@11776>   TST.b newvariable
00028F92 <AmiBlitz3.ab3@11777>    BNE.w findlab
00028F98 <AmiBlitz3.ab3@11778>   LEA variablehash,A2
00028F9E <AmiBlitz3.ab3@11779>   LEA ptr_parameterstore,A0
00028FA0 <AmiBlitz3.ab3@11780>   MOVEQ #0,d0
00028FA2 <AmiBlitz3.ab3@11781>   MOVEQ #0,d1
00028FA4 <AmiBlitz3.ab3@11784>     MOVE.b (a0)+,d1
00028FA8 <AmiBlitz3.ab3@11785>     BEQ 'l15
00028FAE <AmiBlitz3.ab3@11786>     !hashalgo
00028FB2 <AmiBlitz3.ab3@11787> BRA 'l20
00028FB8 <AmiBlitz3.ab3@11790>   AND.l #hashsize,d0
00028FBA <AmiBlitz3.ab3@11791>   ASL.l #2,d0
00028FBE <AmiBlitz3.ab3@11792>   MOVE.l 0(a2,d0),d0
00028FC2 <AmiBlitz3.ab3@11793> BRA 'l11
00028FC6 <AmiBlitz3.ab3@11796>   MOVE.l $e(A2),D0                                         ;find label
00028FCA <AmiBlitz3.ab3@11799>   BEQ findlab__no
00028FCC <AmiBlitz3.ab3@11800>   MOVEA.l D0,A2
00028FCE <AmiBlitz3.ab3@11801>   MOVEQ.l #$00,D0
00028FD2 <AmiBlitz3.ab3@11802>   MOVE.b -$1(A2,D7.W),D0
00028FD8 <AmiBlitz3.ab3@11803>   LEA ptr_parameterstore,A0
00028FDA <AmiBlitz3.ab3@11804>   SUB.w D7,D0
00028FDC <AmiBlitz3.ab3@11805>   SUBQ.l #1,D0
00028FDE <AmiBlitz3.ab3@11806>   CMP.w D0,D2
00028FE2 <AmiBlitz3.ab3@11807>    BNE.b 'l10
00028FE6 <AmiBlitz3.ab3@11808>   LEA $0(A2,D7.W),A1
00028FE8 <AmiBlitz3.ab3@11809>   SUBQ.l #1,D0
00028FEA <AmiBlitz3.ab3@11812>     MOVE.b (a1)+,d1
00028FEC <AmiBlitz3.ab3@11813>     CMP.b (a0)+,d1
00028FF0 <AmiBlitz3.ab3@11815>     BNE.b 'l10
00028FF4 <AmiBlitz3.ab3@11816>   DBF D0,'l201
00028FF8 <AmiBlitz3.ab3@11818>   BSR.w reget
00028FFA <AmiBlitz3.ab3@11819>   CMP.w D0,D0
00028FFC <AmiBlitz3.ab3@11820> RTS
00028FFE <AmiBlitz3.ab3@11833>     MOVE.l (A2),D0                                         ;find label
00029002 <AmiBlitz3.ab3@11834>      BEQ.b findlab__no
00029004 <AmiBlitz3.ab3@11835>     MOVEA.l D0,A2
00029006 <AmiBlitz3.ab3@11836>     MOVEQ.l #$00,D0
0002900A <AmiBlitz3.ab3@11837>     MOVE.b -$1(A2,D7.W),D0
0002900C <AmiBlitz3.ab3@11838>     SUB.l D7,D0
0002900E <AmiBlitz3.ab3@11839>     SUBQ.l #1,D0
00029010 <AmiBlitz3.ab3@11840>   CMP.w D0,D2
00029014 <AmiBlitz3.ab3@11841>   BNE.b findlab__loop
00029018 <AmiBlitz3.ab3@11843>   LEA $0(A2,D7.W),A1
0002901E <AmiBlitz3.ab3@11844>   LEA ptr_parameterstore,A0
00029020 <AmiBlitz3.ab3@11845>   SUBQ.l #1,D0
00029022 <AmiBlitz3.ab3@11848>     MOVE.b (a1)+,d1
00029024 <AmiBlitz3.ab3@11849>     CMP.b (a0)+,d1
00029028 <AmiBlitz3.ab3@11851>     BNE.b findlab__loop
0002902C <AmiBlitz3.ab3@11852>   DBF D0,findlab__loop2
00029030 <AmiBlitz3.ab3@11854>   BSR.w reget
00029032 <AmiBlitz3.ab3@11855>   CMP.w D0,D0
00029034 <AmiBlitz3.ab3@11856> RTS
00029038 <AmiBlitz3.ab3@11859>   BSR.w reget
0002903A <AmiBlitz3.ab3@11860>   MOVEQ.l #-$01,D1
0002903C <AmiBlitz3.ab3@11861> RTS
00029042 <AmiBlitz3.ab3@11865>   MOVEA.l alllocals,A4
00029048 <AmiBlitz3.ab3@11866>   CLR.l alllocals
0002904C <AmiBlitz3.ab3@11870>     CMPA.w #$0,A4
00029050 <AmiBlitz3.ab3@11871>      BEQ.b freeprocvs__done
00029054 <AmiBlitz3.ab3@11872>     MOVEA.l $4(A4),A3
00029058 <AmiBlitz3.ab3@11874>     MOVEA.l $8(A4),A3
0002905A <AmiBlitz3.ab3@11876>     MOVEA.l A4,A1
0002905C <AmiBlitz3.ab3@11877>     MOVEA.l (A4),A4
0002905E <AmiBlitz3.ab3@11878>     MOVEQ.l #$0C,D0
00029064 <AmiBlitz3.ab3@11879>     MOVEA.l _execbase,A6
0002906A <AmiBlitz3.ab3@11880>     MOVE.l mempool,a0
0002906E <AmiBlitz3.ab3@11881>     JSR _FreePooled(A6)
00029072 <AmiBlitz3.ab3@11882> BRA.b freeprocvs__loop
00029078 <AmiBlitz3.ab3@11885>   CLR.l firstglob                                          ;fix 2*aclearallvar called
0002907E <AmiBlitz3.ab3@11886>   CLR.l firstlocal
00029084 <AmiBlitz3.ab3@11887>   CLR.l sharebase
0002908A <AmiBlitz3.ab3@11888>   TST.l mempool2
0002908E <AmiBlitz3.ab3@11889>   BEQ freeprocvs__done_l10
00029094 <AmiBlitz3.ab3@11891>   MOVEA.l _execbase,A6
0002909A <AmiBlitz3.ab3@11892>   MOVE.l mempool2,a0
000290A0 <AmiBlitz3.ab3@11893>   CLR.l mempool2
000290A4 <AmiBlitz3.ab3@11894>   JSR _DeletePool(a6)
000290AA <AmiBlitz3.ab3@11897>   MOVE.l _execbase,a6
000290B0 <AmiBlitz3.ab3@11898>   MOVE.l #$10000,d0
000290B6 <AmiBlitz3.ab3@11899>   MOVE.l #80000,d1
000290B8 <AmiBlitz3.ab3@11900>   MOVE.l d1,d2
000290BC <AmiBlitz3.ab3@11901>   JSR _CreatePool(a6)
000290C2 <AmiBlitz3.ab3@11902>   MOVE.l d0,mempool2
000290C4 <AmiBlitz3.ab3@11903> RTS
000290C8 <AmiBlitz3.ab3@11907>   CMPA.w #$0,A3
000290CC <AmiBlitz3.ab3@11908>    BEQ.w freevars__done
000290CE <AmiBlitz3.ab3@11909>   MOVEA.l A3,A1
000290D0 <AmiBlitz3.ab3@11910>   MOVEA.l (A3),A3
000290D2 <AmiBlitz3.ab3@11911>   MOVEQ.l #$00,D0
000290D6 <AmiBlitz3.ab3@11912>   MOVE.b $E(A1),D0
000290DC <AmiBlitz3.ab3@11913>   MOVEA.l _execbase,A6
000290E2 <AmiBlitz3.ab3@11914>   MOVE.l mempool2,a0
000290E6 <AmiBlitz3.ab3@11915>   JSR _FreePooled(A6)
000290EA <AmiBlitz3.ab3@11916> BRA.w freevars
000290EE <AmiBlitz3.ab3@11919>     CMPA.w #$0,A3
000290F2 <AmiBlitz3.ab3@11920>      BEQ.w freevars__done
000290F4 <AmiBlitz3.ab3@11921>     MOVEA.l A3,A1
000290F6 <AmiBlitz3.ab3@11922>     MOVEA.l (A3),A3
000290F8 <AmiBlitz3.ab3@11923>     MOVEQ.l #$00,D0
000290FC <AmiBlitz3.ab3@11924>     MOVE.b $E+4(A1),D0
00029102 <AmiBlitz3.ab3@11925>     MOVEA.l _execbase,A6
00029108 <AmiBlitz3.ab3@11926>     MOVE.l mempool2,a0
0002910C <AmiBlitz3.ab3@11927>     JSR _FreePooled(A6)
00029110 <AmiBlitz3.ab3@11928> BRA.w freevarsb
00029112 <AmiBlitz3.ab3@11931> RTS
00029118 <AmiBlitz3.ab3@11935>   MOVEA.l currentlabeladdr,A0
0002911E <AmiBlitz3.ab3@11936>   MOVE.l a0,lastlabel
00029120 <AmiBlitz3.ab3@11937>   MOVEA.l (A0),A2
00029122 <AmiBlitz3.ab3@11938>   CLR.l (A0)
00029128 <AmiBlitz3.ab3@11939>   MOVEA.l _execbase,A6
0002912C <AmiBlitz3.ab3@11942>   CMPA.w #$0,A2
00029130 <AmiBlitz3.ab3@11943>    BEQ.w clearlabels__done
00029134 <AmiBlitz3.ab3@11944>   MOVE.l $4(A2),D0
00029138 <AmiBlitz3.ab3@11945>   BTST #$0,D0
0002913C <AmiBlitz3.ab3@11946>    BNE.w clearlabels__skip
0002913E <AmiBlitz3.ab3@11947>   MOVEA.l D0,A3
00029142 <AmiBlitz3.ab3@11950>     CMPA.w #$0,A3
00029146 <AmiBlitz3.ab3@11951>      BEQ.w clearlabels__skip
00029148 <AmiBlitz3.ab3@11952>     MOVEA.l A3,A1
0002914A <AmiBlitz3.ab3@11953>     MOVEA.l (A3),A3
0002914C <AmiBlitz3.ab3@11954>     MOVEQ.l #$0C+2,D0                                      ;cancel fix
00029152 <AmiBlitz3.ab3@11955>     MOVE.l mempool,a0
00029156 <AmiBlitz3.ab3@11956>     JSR _FreePooled(A6)
0002915A <AmiBlitz3.ab3@11957> BRA.w clearlabels__loop2
0002915C <AmiBlitz3.ab3@11960>   MOVEQ.l #$00,D0
00029160 <AmiBlitz3.ab3@11961>   MOVE.b $12(A2),D0
00029162 <AmiBlitz3.ab3@11962>   MOVEA.l A2,A1
00029164 <AmiBlitz3.ab3@11963>   MOVEA.l (A2),A2
0002916A <AmiBlitz3.ab3@11964>   MOVE.l mempool2,a0
0002916E <AmiBlitz3.ab3@11966> BRA.w clearlabels__loop
00029170 <AmiBlitz3.ab3@11969> RTS
00029176 <AmiBlitz3.ab3@11973>   MOVEA.l firstpend,A3
0002917C <AmiBlitz3.ab3@11974>   CLR.l firstpend
00029182 <AmiBlitz3.ab3@11975>   MOVEA.l _execbase,A6
00029186 <AmiBlitz3.ab3@11978>     CMPA.w #$0,A3
0002918A <AmiBlitz3.ab3@11979>      BEQ.w freepends__done
0002918C <AmiBlitz3.ab3@11980>     MOVEA.l A3,A1
0002918E <AmiBlitz3.ab3@11981>     MOVEQ.l #$08,D0
00029190 <AmiBlitz3.ab3@11982>     MOVEA.l (A3),A3
00029196 <AmiBlitz3.ab3@11983>     MOVE.l mempool,a0
0002919A <AmiBlitz3.ab3@11984>     JSR _FreePooled(A6)
0002919E <AmiBlitz3.ab3@11985> BRA.w fpnd2
000291A0 <AmiBlitz3.ab3@11988> RTS
000291A6 <AmiBlitz3.ab3@11992>   MOVEA.l firstproc,A2
000291AC <AmiBlitz3.ab3@11993>   CLR.l firstproc
000291B2 <AmiBlitz3.ab3@11994>   MOVEA.l _execbase,A6
000291B6 <AmiBlitz3.ab3@11997>     CMPA.w #$0,A2
000291BA <AmiBlitz3.ab3@11998>      BEQ.w clearfunctionlist__done
000291BC <AmiBlitz3.ab3@11999>     MOVEA.l A2,A1
000291BE <AmiBlitz3.ab3@12000>     MOVEA.l (A2),A2
000291C0 <AmiBlitz3.ab3@12001>     MOVEQ.l #$00,D0
000291C4 <AmiBlitz3.ab3@12002>     MOVE.b $20+#funcentry_extend(A1),D0
000291CA <AmiBlitz3.ab3@12003>     MOVE.l mempool2,a0
000291CE <AmiBlitz3.ab3@12004>     JSR _FreePooled(A6)
000291D2 <AmiBlitz3.ab3@12005> BRA.w clearfunctionlist__loop
000291D4 <AmiBlitz3.ab3@12008> RTS
000291D8 <AmiBlitz3.ab3@12012>   CMPA.w #$0,A2
000291DC <AmiBlitz3.ab3@12013>    BEQ.w freetypes__done
000291E0 <AmiBlitz3.ab3@12014>   MOVEA.l $4(A2),A3
000291E4 <AmiBlitz3.ab3@12015>   CMPA.w #$FF,A3
000291E8 <AmiBlitz3.ab3@12016>    BEQ.w freetypes__noway
000291EC <AmiBlitz3.ab3@12020>    BSR.w freevars
000291EE <AmiBlitz3.ab3@12023>     MOVEA.l A2,A1
000291F0 <AmiBlitz3.ab3@12024>     MOVEA.l (A2),A2
000291F2 <AmiBlitz3.ab3@12025>     MOVEQ.l #$00,D0
000291F6 <AmiBlitz3.ab3@12026>     MOVE.b $A(A1),D0
000291FC <AmiBlitz3.ab3@12027>     MOVEA.l _execbase,A6
00029202 <AmiBlitz3.ab3@12028>     MOVE.l mempool2,a0
00029206 <AmiBlitz3.ab3@12029>     JSR _FreePooled(A6)
0002920A <AmiBlitz3.ab3@12030> BRA.w freetypes
0002920C <AmiBlitz3.ab3@12033> RTS
00029212 <AmiBlitz3.ab3@12037>   JSR uselib2
00029218 <AmiBlitz3.ab3@12039>   CLR.w notshared
0002921E <AmiBlitz3.ab3@12040>   CLR.w varmode
00029224 <AmiBlitz3.ab3@12041>   MOVE.w proceduremode,D1
00029228 <AmiBlitz3.ab3@12042>    BNE.w JL_0_8F4E
0002922E <AmiBlitz3.ab3@12043>   LEA varbase,A2
00029234 <AmiBlitz3.ab3@12044>   LEA ptr_parameterstore,a0
00029238 <AmiBlitz3.ab3@12045>   CMP.b #$22,(a0)
0002923C <AmiBlitz3.ab3@12046>   BNE JL_0_8E5E
0002923E <AmiBlitz3.ab3@12047>   MOVEQ #0,d0
00029244 <AmiBlitz3.ab3@12048> JMP error
00029248 <AmiBlitz3.ab3@12051>   BSR.w findvariable
0002924C <AmiBlitz3.ab3@12054>   BNE.w JL_0_8E7E
00029252 <AmiBlitz3.ab3@12057>   MOVE.b flagmask+1,D1
00029256 <AmiBlitz3.ab3@12058>   MOVE.b $7(A2),D3
00029258 <AmiBlitz3.ab3@12059>   EOR.b D3,D1
0002925C <AmiBlitz3.ab3@12060>   BNE 'l2
00029264 <AmiBlitz3.ab3@12061>   CMP.b #2,nowdeclare
00029268 <AmiBlitz3.ab3@12062>   BEQ errormsg_declaredtwice
0002926C <AmiBlitz3.ab3@12063> BRA.w JL_0_8FA8
00029270 <AmiBlitz3.ab3@12066>   BSR.w findlab
00029274 <AmiBlitz3.ab3@12067>   BNE 'l1
0002927C <AmiBlitz3.ab3@12068>   CMP.b #2,nowdeclare
00029280 <AmiBlitz3.ab3@12069>   BEQ errormsg_declaredtwice
00029282 <AmiBlitz3.ab3@12070>   CMP.w d0,d0
00029286 <AmiBlitz3.ab3@12073> BRA.w JL_0_8E62
00029288 <AmiBlitz3.ab3@12076>    MOVE.l a2,-(a7)
0002928E <AmiBlitz3.ab3@12077>    LEA sharebase,a2
00029290 <AmiBlitz3.ab3@12078>    MOVEQ #$f+4,d7
00029294 <AmiBlitz3.ab3@12079>    BSR.w findlab
00029298 <AmiBlitz3.ab3@12080>    BEQ 'l2x
0002929A <AmiBlitz3.ab3@12081>    MOVE.l (a7)+,a2
0002929E <AmiBlitz3.ab3@12082> BRA 'cont
000292A0 <AmiBlitz3.ab3@12085>   ADDQ.l #4,a7
000292A6 <AmiBlitz3.ab3@12086>   CLR.w varmode
000292AC <AmiBlitz3.ab3@12087>   MOVE.b flagmask+1,D1
000292B0 <AmiBlitz3.ab3@12088>   MOVE.b $7(A2),D3
000292B2 <AmiBlitz3.ab3@12089>   EOR.b D3,D1
000292B6 <AmiBlitz3.ab3@12090>   BNE vardeclareerr
000292BA <AmiBlitz3.ab3@12091> BRA JL_0_8FA8
000292C0 <AmiBlitz3.ab3@12094>    MOVE.w nonew,D1
000292C4 <AmiBlitz3.ab3@12095>    BNE.w nonewerr
000292CA <AmiBlitz3.ab3@12096>    TST.b nowdeclare
000292CE <AmiBlitz3.ab3@12097>    BNE 'l2
000292D4 <AmiBlitz3.ab3@12098>    TST.b declare2
000292D8 <AmiBlitz3.ab3@12099>    BEQ 'l1
000292DC <AmiBlitz3.ab3@12100>    CMP.b #$2e,d0
000292E0 <AmiBlitz3.ab3@12101>    BEQ 'l2
000292E4 <AmiBlitz3.ab3@12102>    CMP.b #"$",d0
000292E8 <AmiBlitz3.ab3@12103>    BEQ 'l2
000292EC <AmiBlitz3.ab3@12104> BRA vardeclareerr
000292F2 <AmiBlitz3.ab3@12107>   TST.b declare
000292F6 <AmiBlitz3.ab3@12108>    BNE vardeclareerr
000292FA <AmiBlitz3.ab3@12111>   BSR.w addvariable
00029300 <AmiBlitz3.ab3@12112>   NOT.w notshared
00029302 <AmiBlitz3.ab3@12113>   MOVEA.l A2,A3
00029308 <AmiBlitz3.ab3@12114>   MOVEA.l defaulttype,A2
0002930C <AmiBlitz3.ab3@12115>   CMP.w #$2E,D0
00029310 <AmiBlitz3.ab3@12116>    BEQ.w JL_0_8EB8
00029314 <AmiBlitz3.ab3@12117>   CMP.w #$24,D0
00029318 <AmiBlitz3.ab3@12118>    BNE.w JL_0_8ECA
0002931E <AmiBlitz3.ab3@12119>   LEA newtype_string,A2
00029322 <AmiBlitz3.ab3@12120>    BSR.w get1bytemain
00029326 <AmiBlitz3.ab3@12121> BRA.w JL_0_8ECA
0002932C <AmiBlitz3.ab3@12124> JMP JUMP_notypeerr
00029330 <AmiBlitz3.ab3@12127>    BSR.w getparameter2
00029336 <AmiBlitz3.ab3@12128>   LEA newtypebase,A2
0002933A <AmiBlitz3.ab3@12129>    BSR.w findtype
0002933E <AmiBlitz3.ab3@12130>    BNE.w notypeerr3
00029344 <AmiBlitz3.ab3@12133>   CMPA.l #newtype_byte,A2
00029348 <AmiBlitz3.ab3@12134>    BEQ.w JL_0_8EECb
0002934E <AmiBlitz3.ab3@12135>   MOVE.w varmode,D1
00029352 <AmiBlitz3.ab3@12136>    BNE.w JL_0_8EE4b
00029358 <AmiBlitz3.ab3@12137>   ADDQ.w #1,globalvarpointer
00029360 <AmiBlitz3.ab3@12140>   BCLR #$0,globalvarpointer+1
00029364 <AmiBlitz3.ab3@12143>   MOVE.l A2,$A(A3)
0002936C <AmiBlitz3.ab3@12144>   MOVE.w flagmask,$6(A3)                                  ;??????????
0002936E <AmiBlitz3.ab3@12146>   MOVEQ.l #$04,D1
00029376 <AmiBlitz3.ab3@12147>   BTST #$0,flagmask+1
0002937A <AmiBlitz3.ab3@12148>    BNE.w JL_0_8F22b
00029382 <AmiBlitz3.ab3@12149>   BTST #$1,flagmask+1
00029386 <AmiBlitz3.ab3@12150>    BNE.w JL_0_8F22b
0002938E <AmiBlitz3.ab3@12151>   CMPI.l #$100,$4(A2)
00029392 <AmiBlitz3.ab3@12152>    BCC.w JL_0_8F22b
00029396 <AmiBlitz3.ab3@12153>   MOVE.w $8(A2),D1
0002939C <AmiBlitz3.ab3@12156>   TST.w varmode
000293A0 <AmiBlitz3.ab3@12157> BRA.w JL_0_8F3E
000293A4 <AmiBlitz3.ab3@12166>   BSR.w getparameter2
000293AA <AmiBlitz3.ab3@12167>   LEA newtypebase,A2
000293AE <AmiBlitz3.ab3@12168>    BSR.w findtype
000293B2 <AmiBlitz3.ab3@12169>    BNE.w notypeerr
000293B8 <AmiBlitz3.ab3@12172>   CMPA.l #newtype_byte,A2
000293BC <AmiBlitz3.ab3@12173>    BEQ.w JL_0_8EEC
000293C2 <AmiBlitz3.ab3@12174>   MOVE.w varmode,D1
000293C6 <AmiBlitz3.ab3@12175>    BNE.w JL_0_8EE4
000293CC <AmiBlitz3.ab3@12176>   ADDQ.w #1,globalvarpointer
000293D4 <AmiBlitz3.ab3@12179>   BCLR #$0,globalvarpointer+1
000293D8 <AmiBlitz3.ab3@12182>   MOVE.l A2,$A(A3)
000293E0 <AmiBlitz3.ab3@12183>   MOVE.w flagmask,$6(A3)                                  ;??????????
000293E2 <AmiBlitz3.ab3@12184>   MOVEQ.l #$04,D1
000293EA <AmiBlitz3.ab3@12185>   BTST #$0,flagmask+1
000293EE <AmiBlitz3.ab3@12186>    BNE.w JL_0_8F22
000293F6 <AmiBlitz3.ab3@12187>   BTST #$1,flagmask+1
000293FA <AmiBlitz3.ab3@12188>    BNE.w JL_0_8F22
00029402 <AmiBlitz3.ab3@12189>   CMPI.l #$100,$4(A2)
00029406 <AmiBlitz3.ab3@12190>    BCC.w JL_0_8F22
0002940A <AmiBlitz3.ab3@12191>   MOVE.w $8(A2),D1
00029410 <AmiBlitz3.ab3@12194>   TST.w varmode
00029414 <AmiBlitz3.ab3@12195>    BEQ.w JL_0_8F3E
00029416 <AmiBlitz3.ab3@12196>   NEG.w D1
0002941C <AmiBlitz3.ab3@12197>   ADD.w D1,globalvarpointer
00029424 <AmiBlitz3.ab3@12198>   MOVE.w globalvarpointer,$4(A3)
00029426 <AmiBlitz3.ab3@12199> RTS
0002942E <AmiBlitz3.ab3@12202>   MOVE.w globalvarpointer,$4(A3)
00029434 <AmiBlitz3.ab3@12203>   ADD.w D1,globalvarpointer
00029436 <AmiBlitz3.ab3@12204> RTS
0002943C <AmiBlitz3.ab3@12208>   LEA firstglob,A2
00029440 <AmiBlitz3.ab3@12209>    BSR.w findvariable2
00029444 <AmiBlitz3.ab3@12212>   BNE.w JL_0_8F74
0002944A <AmiBlitz3.ab3@12213>   MOVE.b flagmask+1,D1
0002944E <AmiBlitz3.ab3@12214>   MOVE.b $7(A2),D3
00029450 <AmiBlitz3.ab3@12215>   EOR.b D3,D1
00029454 <AmiBlitz3.ab3@12216>    BEQ.w JL_0_8FA8
00029458 <AmiBlitz3.ab3@12217>    BSR.w findlab
0002945C <AmiBlitz3.ab3@12218> BRA.w JL_0_8F58
00029464 <AmiBlitz3.ab3@12221>   MOVE.w #$FFFF,varmode
0002946A <AmiBlitz3.ab3@12222>   MOVE.w globalvarpointer,-(A7)
00029474 <AmiBlitz3.ab3@12223>   MOVE.w locvaroff,globalvarpointer
0002947A <AmiBlitz3.ab3@12224>   LEA firstlocal,A2
00029482 <AmiBlitz3.ab3@12225>   MOVE.b #1,newvariable
00029486 <AmiBlitz3.ab3@12226>    BSR.w JL_0_8E5E
0002948C <AmiBlitz3.ab3@12227>   CLR.b newvariable
00029496 <AmiBlitz3.ab3@12228>   MOVE.w globalvarpointer,locvaroff
0002949C <AmiBlitz3.ab3@12229>   MOVE.w (A7)+,globalvarpointer
0002949E <AmiBlitz3.ab3@12230> RTS
000294A0 <AmiBlitz3.ab3@12233>   MOVEA.l A2,A3
000294A4 <AmiBlitz3.ab3@12234>   CMP.w #$2E,D0
000294A8 <AmiBlitz3.ab3@12235>    BEQ.w JL_0_8FCE
000294AC <AmiBlitz3.ab3@12236>   CMP.w #$24,D0
000294B0 <AmiBlitz3.ab3@12237>    BNE.w JL_0_8FE8
000294B8 <AmiBlitz3.ab3@12238>   CMPI.l #newtype_string,$A(A3)
000294BC <AmiBlitz3.ab3@12239>    BNE.w rongtypeerr
000294C0 <AmiBlitz3.ab3@12240>    BSR.w get1bytemain
000294C4 <AmiBlitz3.ab3@12241> BRA.w JL_0_8FE8
000294C8 <AmiBlitz3.ab3@12244>    BSR.w getparameter2
000294CE <AmiBlitz3.ab3@12245>   LEA newtypebase,A2
000294D2 <AmiBlitz3.ab3@12246>    BSR.w findtype
000294D6 <AmiBlitz3.ab3@12247>    BNE.w notypeerr
000294DA <AmiBlitz3.ab3@12248>   CMPA.l $A(A3),A2
000294DE <AmiBlitz3.ab3@12249>    BNE.w rongtypeerr
000294E6 <AmiBlitz3.ab3@12251>   BTST #$0,flagmask+1
000294EA <AmiBlitz3.ab3@12252>    BEQ.w JL_0_8FFE
000294F0 <AmiBlitz3.ab3@12253>   BTST #$0,$7(A3)
000294F4 <AmiBlitz3.ab3@12254>    BEQ.w pointerr
000294F8 <AmiBlitz3.ab3@12257>   MOVEA.l $A(A3),A2
000294FA <AmiBlitz3.ab3@12258> RTS
000294FC <AmiBlitz3.ab3@12262>    TST.l D3                                                ;newtype >32kb  .w to .l
00029500 <AmiBlitz3.ab3@12263>    BEQ.w JL_0_9042
0002950A <AmiBlitz3.ab3@12264>    MOVE.l destpointer,loada
0002950E <AmiBlitz3.ab3@12267> BRA JL_0_9032
00029512 <AmiBlitz3.ab3@12269>   CMP.w #$9,D3                                             ;_addq_arrays
00029516 <AmiBlitz3.ab3@12270>    BCC.w JL_0_9032
0002951C <AmiBlitz3.ab3@12271>   MOVE.w d3,arrayoffset
00029520 <AmiBlitz3.ab3@12272>   ANDI.w #$7,D3
00029522 <AmiBlitz3.ab3@12273>   LSL.w #8,D3
00029524 <AmiBlitz3.ab3@12274>   LSL.w #1,D3
0002952C <AmiBlitz3.ab3@12275>   ANDI.w #$F1FF,addqa0
00029532 <AmiBlitz3.ab3@12276>   OR.w D3,addqa0
00029538 <AmiBlitz3.ab3@12277>   MOVE.w addqa0,D1
0002953C <AmiBlitz3.ab3@12278> BRA.w writeword
00029542 <AmiBlitz3.ab3@12281>   CMP.l #$7fff,d3                                          ;>32kb newtypes
00029546 <AmiBlitz3.ab3@12282>   BGT longoffset
0002954C <AmiBlitz3.ab3@12283>   MOVE.w D3,leaa0a0+2
00029552 <AmiBlitz3.ab3@12284>   MOVE.w d3,arrayoffset
00029558 <AmiBlitz3.ab3@12285>   MOVE.l leaa0a0,D1
0002955C <AmiBlitz3.ab3@12286>   BSR.w writelong
0002955E <AmiBlitz3.ab3@12289> RTS
00029562 <AmiBlitz3.ab3@12292>    MOVE.w #$d5fc,d1
00029566 <AmiBlitz3.ab3@12293>    BSR writeword
00029568 <AmiBlitz3.ab3@12294>    MOVE.l d3,d1
0002956C <AmiBlitz3.ab3@12295>    BSR.w writelong
0002956E <AmiBlitz3.ab3@12296> RTS
00029572 <AmiBlitz3.ab3@12300>   Dc.w $b0ad,0000                                          ;cmp.l $0(A5),D0    ;nooptimize
00029576 <AmiBlitz3.ab3@12303>    BCS.w arrchk3                                           
0002957C <AmiBlitz3.ab3@12304>    JSR $20000                                              ;jsr 0
00029582 <AmiBlitz3.ab3@12310>   TST.b fast
00029586 <AmiBlitz3.ab3@12311>   BEQ 'l1
00029588 <AmiBlitz3.ab3@12312>    MOVEQ #0,d1                                             ;faster arrays
0002958E <AmiBlitz3.ab3@12313>    MOVE.w regnum,d2
00029590 <AmiBlitz3.ab3@12314>    MOVE.w d2,d1
00029592 <AmiBlitz3.ab3@12315>    LSL.w #8,d1
00029594 <AmiBlitz3.ab3@12316>    LSL.w #4,d1
00029596 <AmiBlitz3.ab3@12317>    ADD.w d2,d1
0002959C <AmiBlitz3.ab3@12318>    OR.l #$4c2d0000,d1
000295A2 <AmiBlitz3.ab3@12319>    TST.w varmode
000295A6 <AmiBlitz3.ab3@12320>    BEQ 'l1a
000295AA <AmiBlitz3.ab3@12321>    BCLR #16,d1
000295AE <AmiBlitz3.ab3@12324>    BSR writelong
000295B2 <AmiBlitz3.ab3@12325>    MOVE.w $4(A7),D1
000295B6 <AmiBlitz3.ab3@12326>    BSR.w writeword
000295BC <AmiBlitz3.ab3@12327>    MOVE.w regnum,D1
000295BE <AmiBlitz3.ab3@12328>   SUBQ.w #1,D1
000295C0 <AmiBlitz3.ab3@12329>   LSL.w #8,D1
000295C2 <AmiBlitz3.ab3@12330>   LSL.w #1,D1
000295C6 <AmiBlitz3.ab3@12331>   ORI.w #$D080,D1
000295CC <AmiBlitz3.ab3@12332>   OR.w regnum,D1
000295D0 <AmiBlitz3.ab3@12333>    BSR.w writeword
000295D2 <AmiBlitz3.ab3@12334> RTS
000295D8 <AmiBlitz3.ab3@12337>   MOVE.w regnum,D2
000295DC <AmiBlitz3.ab3@12338>   MOVE.w arrmul1(PC),D1
000295DE <AmiBlitz3.ab3@12339>   OR.w D2,D1
000295E0 <AmiBlitz3.ab3@12340>   SUBQ.w #1,D1
000295E4 <AmiBlitz3.ab3@12341>    BSR.w writeword
000295E8 <AmiBlitz3.ab3@12342>   MOVE.w arrmul2(PC),D1
000295EA <AmiBlitz3.ab3@12343>   OR.w D2,D1
000295EC <AmiBlitz3.ab3@12344>   MOVE.w D2,D3
000295EE <AmiBlitz3.ab3@12345>   SUBQ.w #1,D3
000295F0 <AmiBlitz3.ab3@12346>   LSL.w #8,D3
000295F2 <AmiBlitz3.ab3@12347>   LSL.w #1,D3
000295F4 <AmiBlitz3.ab3@12348>   OR.w D3,D1
000295F8 <AmiBlitz3.ab3@12349>    BSR.w writeword
000295FC <AmiBlitz3.ab3@12350>   MOVE.w arrmul3(PC),D1
000295FE <AmiBlitz3.ab3@12351>   MOVE.w D2,D3
00029600 <AmiBlitz3.ab3@12352>   LSL.w #8,D3
00029602 <AmiBlitz3.ab3@12353>   LSL.w #1,D3
00029604 <AmiBlitz3.ab3@12354>   OR.w D3,D1
00029608 <AmiBlitz3.ab3@12355>    BSR.w pokewda5s
0002960C <AmiBlitz3.ab3@12356>   MOVE.w $4(A7),D1
0002960E <AmiBlitz3.ab3@12357>   ADDQ.w #2,D1
00029612 <AmiBlitz3.ab3@12358>    BSR.w writeword
00029616 <AmiBlitz3.ab3@12359>   MOVE.w arrmul4(PC),D1
00029618 <AmiBlitz3.ab3@12360>   MOVE.w D2,D3
0002961A <AmiBlitz3.ab3@12361>   SUBQ.w #1,D3
0002961C <AmiBlitz3.ab3@12362>   LSL.w #8,D3
0002961E <AmiBlitz3.ab3@12363>   LSL.w #1,D3
00029620 <AmiBlitz3.ab3@12364>   OR.w D3,D1
00029624 <AmiBlitz3.ab3@12365>    BSR.w pokewda5s
00029628 <AmiBlitz3.ab3@12366>   MOVE.w $4(A7),D1
0002962C <AmiBlitz3.ab3@12367>    BSR.w writeword
00029630 <AmiBlitz3.ab3@12368>   MOVE.w arrmul5(PC),D1
00029632 <AmiBlitz3.ab3@12369>   OR.w D2,D1
00029634 <AmiBlitz3.ab3@12370>   SUBQ.w #1,D1
00029638 <AmiBlitz3.ab3@12371>    BSR.w writeword
0002963C <AmiBlitz3.ab3@12372>   MOVE.w arrmul6(PC),D1
0002963E <AmiBlitz3.ab3@12373>   OR.w D2,D1
00029640 <AmiBlitz3.ab3@12374>   SUBQ.w #1,D1
00029644 <AmiBlitz3.ab3@12375>    BSR.w writeword
00029648 <AmiBlitz3.ab3@12376>   MOVE.w arrmul7(PC),D1
0002964A <AmiBlitz3.ab3@12377>   OR.w D2,D1
0002964C <AmiBlitz3.ab3@12378>   SUBQ.w #1,D1
0002964E <AmiBlitz3.ab3@12379>   MOVE.w D2,D3
00029650 <AmiBlitz3.ab3@12380>   LSL.w #8,D3
00029652 <AmiBlitz3.ab3@12381>   LSL.w #1,D3
00029654 <AmiBlitz3.ab3@12382>   OR.w D3,D1
00029658 <AmiBlitz3.ab3@12383>    BSR.w writeword
0002965C <AmiBlitz3.ab3@12384>   MOVE.w arrmul8(PC),D1
0002965E <AmiBlitz3.ab3@12385>   MOVE.w D2,D3
00029660 <AmiBlitz3.ab3@12386>   SUBQ.w #1,D3
00029662 <AmiBlitz3.ab3@12387>   LSL.w #8,D3
00029664 <AmiBlitz3.ab3@12388>   LSL.w #1,D3
00029666 <AmiBlitz3.ab3@12389>   OR.w D3,D1
0002966A <AmiBlitz3.ab3@12390>    BSR.w writeword
00029670 <AmiBlitz3.ab3@12391>   MOVE.w regnum,D1
00029672 <AmiBlitz3.ab3@12392>   SUBQ.w #1,D1
00029674 <AmiBlitz3.ab3@12393>   LSL.w #8,D1
00029676 <AmiBlitz3.ab3@12394>   LSL.w #1,D1
0002967A <AmiBlitz3.ab3@12395>   ORI.w #$D080,D1
00029680 <AmiBlitz3.ab3@12396>   OR.w regnum,D1
00029684 <AmiBlitz3.ab3@12397> BRA.w writeword
00029686 <AmiBlitz3.ab3@12405> arrmul1:   MOVE.l d0,-(a7)                                ;write array access
00029688 <AmiBlitz3.ab3@12406> arrmul2:   MOVE  d0,d0
0002968C <AmiBlitz3.ab3@12407> arrmul3:   MULU 0(a5),d0                                  ;mulu   x+2(a5),d1  ;lo*lo
00029690 <AmiBlitz3.ab3@12408> arrmul4:   MULU 0(a5),d0                                  ;mulu   x(a5),d0    ;hi*lo
00029692 <AmiBlitz3.ab3@12410> arrmul5:   SWAP d0
00029694 <AmiBlitz3.ab3@12411> arrmul6:   CLR d0
00029696 <AmiBlitz3.ab3@12412> arrmul7:   ADD.l d0,d0
00029698 <AmiBlitz3.ab3@12413> arrmul8:   MOVE.l (a7)+,d0
0002969C <AmiBlitz3.ab3@12418> listcode1:  Dc.b $24,$6D :              Dc.b $00,$00       ;MOVEA.L $0000(A5),A2      ;pointer to start of array data
000296A0 <AmiBlitz3.ab3@12419> listcode2:  Dc.b $24,$6A,$FF,$E0                           ;MOVEA.L -$0020(A2),A2     ;pointer to current
000296A2 <AmiBlitz3.ab3@12420> listarfix:  Dc.b $50,$4A                                   ;ADDQ.W  #8,A2
000296A8 <AmiBlitz3.ab3@12438>   CLR.l lastoffset_org
000296AE <AmiBlitz3.ab3@12439>   BTST #$1,$7(A3)
000296B2 <AmiBlitz3.ab3@12440>    BEQ.w calcvar__notarr
000296B8 <AmiBlitz3.ab3@12441>   MOVE.w notshared,D1
000296BC <AmiBlitz3.ab3@12442>    BNE.w noarrerr
000296C0 <AmiBlitz3.ab3@12443>    BSR.w get1bytemain
000296C4 <AmiBlitz3.ab3@12444>   CMP.w #$29,D0
000296C8 <AmiBlitz3.ab3@12445>    BNE.w calcvar__notalist
000296CE <AmiBlitz3.ab3@12446>   BTST #$0,$6(A3)
000296D2 <AmiBlitz3.ab3@12447>    BEQ.w nolisterr
000296DA <AmiBlitz3.ab3@12448>   MOVE.w $4(A3),listcode1+2
000296DE <AmiBlitz3.ab3@12449>   MOVE.l listcode1(PC),D1
000296E2 <AmiBlitz3.ab3@12450>    BSR.w pokela5s
000296E6 <AmiBlitz3.ab3@12451>   MOVE.l listcode2(PC),D1
000296EA <AmiBlitz3.ab3@12452>    BSR.w writelong
000296F0 <AmiBlitz3.ab3@12453>   TST.b debugmode
000296F4 <AmiBlitz3.ab3@12454>    BEQ.w calcvar__nolrerr
000296F6 <AmiBlitz3.ab3@12458>   MOVE.l A2,-(A7)
000296FA <AmiBlitz3.ab3@12459>   MOVE.w #$C315,D1
000296FE <AmiBlitz3.ab3@12460>    BSR.w Atokejsr
00029700 <AmiBlitz3.ab3@12461>   MOVEA.l (A7)+,A2
00029704 <AmiBlitz3.ab3@12464>    MOVE.w listarfix(PC),D1                                 ;addq #8,a2
00029708 <AmiBlitz3.ab3@12466>    BSR.w writeword
0002970C <AmiBlitz3.ab3@12467> BRA.w calcvar__normalar
0002970E <AmiBlitz3.ab3@12470> calcvar__listoff:   Ds.w 1
00029714 <AmiBlitz3.ab3@12474>   CLR.w calcvar__listoff
0002971A <AmiBlitz3.ab3@12475>   BTST #$0,$6(A3)
0002971E <AmiBlitz3.ab3@12476>    BEQ.w calcvar__knop
00029726 <AmiBlitz3.ab3@12477>   MOVE.w #$0008,calcvar__listoff                            ;adjust size of one element if list.
0002972A <AmiBlitz3.ab3@12480>   MOVEM.l A2-A3,-(A7)
00029730 <AmiBlitz3.ab3@12481>   MOVE.w varmode,-(A7)
00029734 <AmiBlitz3.ab3@12482>   MOVE.w $8(A3),-(A7)                                       ;number of dims
00029738 <AmiBlitz3.ab3@12483>   MOVE.w $4(A3),-(A7)                                       ;varoff
0002973A <AmiBlitz3.ab3@12484>   MOVE.l A2,-(A7)
00029740 <AmiBlitz3.ab3@12485>   MOVE.w flagmask,-(A7)
0002974A <AmiBlitz3.ab3@12487>   MOVE.w oldqflag,instringon
00029750 <AmiBlitz3.ab3@12488>   MOVEA.l lastsourcepos,A5
00029754 <AmiBlitz3.ab3@12489>    BSR.w arreval
0002975A <AmiBlitz3.ab3@12490>   MOVE.w (A7)+,flagmask
00029762 <AmiBlitz3.ab3@12491>   MOVE.w $8(A7),varmode
00029768 <AmiBlitz3.ab3@12492>   TST.b debugmode
0002976C <AmiBlitz3.ab3@12493>    BEQ.w calcvar__noszchk
0002976E <AmiBlitz3.ab3@12497>   MOVEA.l (A7)+,A2
00029770 <AmiBlitz3.ab3@12498>   MOVEQ.l #$04,D1
00029778 <AmiBlitz3.ab3@12499>   BTST #$0,flagmask+1                                      ;pointer?
0002977C <AmiBlitz3.ab3@12500>    BNE.b calcvar__domul                                          ;yes, then use 4 byte mul...
00029780 <AmiBlitz3.ab3@12501>   MOVE.w $8(A2),D1
00029784 <AmiBlitz3.ab3@12504>   ADD.w calcvar__listoff(PC),D1
00029788 <AmiBlitz3.ab3@12505>   BSR.w JL_0_B6DE
0002978E <AmiBlitz3.ab3@12506>   ADDQ.w #1,regnum
00029790 <AmiBlitz3.ab3@12509>   ADDQ.w #4,(A7)
00029794 <AmiBlitz3.ab3@12510>   TST.w $4(A7)
00029798 <AmiBlitz3.ab3@12511>    BEQ.w calcvar__isglob
0002979A <AmiBlitz3.ab3@12512>   SUBQ.w #8,(A7)                                           ;range check local array
000297A0 <AmiBlitz3.ab3@12515>   TST.b debugmode
000297A4 <AmiBlitz3.ab3@12516>    BEQ.w calcvar__noer1
000297AA <AmiBlitz3.ab3@12517>   MOVE.w regnum,D1
000297AC <AmiBlitz3.ab3@12518>   SUBQ.w #1,D1
000297AE <AmiBlitz3.ab3@12519>   LSL.w #8,D1
000297B0 <AmiBlitz3.ab3@12520>   LSL.w #1,D1
000297B4 <AmiBlitz3.ab3@12521>   OR.w zarrchk(PC),D1
000297B8 <AmiBlitz3.ab3@12522>    BSR.w pokewda5s                                         ;cmp.l x(a5),D regat
000297BA <AmiBlitz3.ab3@12523>   MOVE.w (A7),D1
000297BE <AmiBlitz3.ab3@12524>    BSR.w writeword
000297C2 <AmiBlitz3.ab3@12525>   MOVE.l arrchk2(PC),D1
000297C6 <AmiBlitz3.ab3@12526>    BSR.w writelong
000297CA <AmiBlitz3.ab3@12527>   MOVE.w #$C309,D1
000297CE <AmiBlitz3.ab3@12528>    BSR.w Atokejsr
000297D2 <AmiBlitz3.ab3@12531>   SUBQ.w #1,$2(A7)
000297D6 <AmiBlitz3.ab3@12532>    BEQ.w calcvar__ardone
000297DA <AmiBlitz3.ab3@12533>   CMP.w #$2C,D0
000297DE <AmiBlitz3.ab3@12534>    BNE.w syntaxerr
000297E4 <AmiBlitz3.ab3@12535>    TST.b fast
000297E8 <AmiBlitz3.ab3@12536>    BNE 'l1
000297EC <AmiBlitz3.ab3@12537>    BSR.w arrevalchk
000297F0 <AmiBlitz3.ab3@12538> BRA 'l2
000297F4 <AmiBlitz3.ab3@12541>   BSR arreval
000297FC <AmiBlitz3.ab3@12544>   MOVE.w $4(A7),varmode
00029800 <AmiBlitz3.ab3@12545>   BSR.w JL_0_9052
00029804 <AmiBlitz3.ab3@12546> BRA.w calcvar__arloop
00029808 <AmiBlitz3.ab3@12550>   CMP.w #$29,D0
0002980C <AmiBlitz3.ab3@12551>    BNE.w syntaxerr
00029812 <AmiBlitz3.ab3@12552>   SUBQ.w #1,regnum
00029814 <AmiBlitz3.ab3@12553>   ADDQ.w #6,A7
00029818 <AmiBlitz3.ab3@12554>   MOVEM.l (A7)+,A2-A3
00029820 <AmiBlitz3.ab3@12555>   MOVE.w $4(A3),movea5a0+2
00029826 <AmiBlitz3.ab3@12556>   MOVE.l movea5a0,D1
0002982A <AmiBlitz3.ab3@12557>    BSR.w pokela5s
00029830 <AmiBlitz3.ab3@12558>   MOVE.w regnum,D1
00029834 <AmiBlitz3.ab3@12559>   ORI.w #$D5C0,D1                                          ;add.l Dr,a2
00029838 <AmiBlitz3.ab3@12560>    BSR.w writeword
0002983E <AmiBlitz3.ab3@12561>   BTST #$0,$6(A3)
00029842 <AmiBlitz3.ab3@12562>    BEQ.w calcvar__normalar
00029846 <AmiBlitz3.ab3@12566>   MOVE.w listarfix(PC),D1
0002984A <AmiBlitz3.ab3@12567>    BSR.w writeword
0002984E <AmiBlitz3.ab3@12570>   BSR.w get1bytemain
00029854 <AmiBlitz3.ab3@12574>   BTST #$0,$7(A3)
00029858 <AmiBlitz3.ab3@12575>    BEQ.w calcvar__noppnt
0002985C <AmiBlitz3.ab3@12576>   CMP.w #$5C,D0
00029860 <AmiBlitz3.ab3@12577>    BNE.w calcvar__pmskip
00029864 <AmiBlitz3.ab3@12578>   MOVE.w calcvar__pfix(PC),D1
00029868 <AmiBlitz3.ab3@12579>    BSR.w writeword
0002986C <AmiBlitz3.ab3@12582>   MOVE.w #$8000,D2
00029870 <AmiBlitz3.ab3@12583> BRA.w calcvar__loopml
00029874 <AmiBlitz3.ab3@12586>   MOVE.w #$C000,D2
00029878 <AmiBlitz3.ab3@12587> BRA.w calcvar__loopml
0002987A <AmiBlitz3.ab3@12591> calcvar__pfix:   Dc.b $24,$52                                   ;MOVEA.L (A2),A2
0002987E <AmiBlitz3.ab3@12596>   CMP.w #$28,D0
00029882 <AmiBlitz3.ab3@12597>    BEQ.w noarrerr
0002988A <AmiBlitz3.ab3@12598>   CMPI.l #$100,$4(A2)
0002988E <AmiBlitz3.ab3@12599>    BCS.w calcvar__simpvar
00029894 <AmiBlitz3.ab3@12600>   BTST #$0,$7(A3)
00029898 <AmiBlitz3.ab3@12601>    BEQ.w calcvar__notap
0002989C <AmiBlitz3.ab3@12605>   CMP.w #$5C,D0
000298A0 <AmiBlitz3.ab3@12606>    BEQ.w calcvar__notap
000298A2 <AmiBlitz3.ab3@12607>   MOVEQ.l #$00,D2
000298A6 <AmiBlitz3.ab3@12608> BRA.w calcvar__simpvar2
000298AA <AmiBlitz3.ab3@12611>   MOVE.w #$8000,D2
000298B2 <AmiBlitz3.ab3@12612>   MOVE.w $4(A3),movea5a0+2
000298B8 <AmiBlitz3.ab3@12613>   MOVE.l movea5a0,D1
000298BC <AmiBlitz3.ab3@12614>    BSR.w pokela5s                                         ;move.l x(a5),a2
000298C2 <AmiBlitz3.ab3@12616>    TST.b debugmode
000298C6 <AmiBlitz3.ab3@12617>    BEQ.w 'skip
000298CA <AmiBlitz3.ab3@12618>    MOVE.w #$c320,D1
000298D0 <AmiBlitz3.ab3@12619>    JSR Atokejsr
000298D2 <AmiBlitz3.ab3@12623>   MOVEQ.l #$00,D3
000298D6 <AmiBlitz3.ab3@12626>   CMP.w #$5C,D0
000298DA <AmiBlitz3.ab3@12627>    BNE.w calcvar__done
000298E2 <AmiBlitz3.ab3@12628>   CMPI.l #$100,$4(A2)
000298E6 <AmiBlitz3.ab3@12629>    BCS.w rongtypeerr
000298E8 <AmiBlitz3.ab3@12630>   MOVE.w D2,-(A7)
000298EC <AmiBlitz3.ab3@12631>    BSR.w getparameter2
000298F0 <AmiBlitz3.ab3@12632>    BEQ.w syntaxerr
000298F2 <AmiBlitz3.ab3@12633>   ADDQ.w #4,A2
000298F6 <AmiBlitz3.ab3@12634>    BSR.w findvariable2
000298FA <AmiBlitz3.ab3@12635>    BNE.w noofferr
000298FC <AmiBlitz3.ab3@12636>   MOVE.w (A7)+,D2
000298FE <AmiBlitz3.ab3@12637>   MOVEA.l A2,A3                                             ;pointer to offset
00029902 <AmiBlitz3.ab3@12638>   MOVEA.l $A(A3),A2                                         ;pointer to type
00029904 <AmiBlitz3.ab3@12639>   MOVEQ #0,d1
00029908 <AmiBlitz3.ab3@12640>   MOVE.w 4(a3),d1
0002990A <AmiBlitz3.ab3@12641>   ADD.l d1,d3
00029910 <AmiBlitz3.ab3@12643>   MOVE.l A3,lastoffset_org
00029914 <AmiBlitz3.ab3@12644>   CMP.w #$5B,D0
00029918 <AmiBlitz3.ab3@12645>    BNE.w calcvar__realdone
0002991E <AmiBlitz3.ab3@12646>   BTST #$1,$7(A3)                                           ;a array [] in newtype is found
00029922 <AmiBlitz3.ab3@12647>    BEQ.w rongtypeerr
00029926 <AmiBlitz3.ab3@12648>    BSR.w JL_0_9004
0002992A <AmiBlitz3.ab3@12649>   MOVEM.l A2-A3,-(A7)
00029930 <AmiBlitz3.ab3@12650>   MOVE.w varmode,-(A7)
00029936 <AmiBlitz3.ab3@12651>   MOVE.l lastoffset_org,-(A7)
0002993C <AmiBlitz3.ab3@12652>   MOVE.w pusha2,D1
00029940 <AmiBlitz3.ab3@12653>    BSR.w writeword
00029942 <AmiBlitz3.ab3@12654>   MOVEQ.l #$03,D2                                          ;was 2 >32kb types
0002994C <AmiBlitz3.ab3@12655>   MOVE.l destpointer,deststore
00029952 <AmiBlitz3.ab3@12656>    MOVE.l rightsidetype,-(a7)
00029958 <AmiBlitz3.ab3@12657>    MOVE.l leftsidetype,-(a7)
0002995E <AmiBlitz3.ab3@12658>    CLR.l rightsidetype
00029964 <AmiBlitz3.ab3@12659>    CLR.l leftsidetype
00029968 <AmiBlitz3.ab3@12660>    BSR.w eval
0002996E <AmiBlitz3.ab3@12661>    MOVE.l (a7)+,rightsidetype
00029974 <AmiBlitz3.ab3@12662>    MOVE.l (a7)+,leftsidetype
00029978 <AmiBlitz3.ab3@12663>   CMP.w #$5D,D0
0002997C <AmiBlitz3.ab3@12664>    BNE.w syntaxerr
00029982 <AmiBlitz3.ab3@12665>   TST.b fast                                               ;a2,-(a7) array
00029986 <AmiBlitz3.ab3@12666>   BEQ calcvar__loop0_l10
0002998C <AmiBlitz3.ab3@12670>   MOVE.l destpointer,d1
00029992 <AmiBlitz3.ab3@12671>   SUB.l deststore,d1
00029998 <AmiBlitz3.ab3@12672>   CMP.l #4,d1
0002999C <AmiBlitz3.ab3@12673>   BNE calcvar__loop0_l10
000299A2 <AmiBlitz3.ab3@12674>   MOVE.l destpointer,a4
000299A8 <AmiBlitz3.ab3@12675>   MOVE.l -4(a4),-6(a4)
000299AE <AmiBlitz3.ab3@12676>   SUBQ.l #2,destpointer
000299B4 <AmiBlitz3.ab3@12677>   CLR.l imm_addr
000299BA <AmiBlitz3.ab3@12678>   CLR.l load_var_addr
000299BE <AmiBlitz3.ab3@12679> BRA calcvar__loop0_l20
000299C4 <AmiBlitz3.ab3@12682>   MOVE.w pulla2,D1
000299C8 <AmiBlitz3.ab3@12683>    BSR.w writeword
000299CE <AmiBlitz3.ab3@12686>   MOVE.l (A7)+,lastoffset_org
000299D4 <AmiBlitz3.ab3@12687>   MOVE.w (A7)+,varmode
000299D8 <AmiBlitz3.ab3@12688>   MOVEM.l (A7)+,A2-A3
000299DE <AmiBlitz3.ab3@12694>   TST.w debugmode
000299E2 <AmiBlitz3.ab3@12695>    BEQ.b calcvar__nobchk
000299E6 <AmiBlitz3.ab3@12696>   MOVE.w $8(A3),D1
000299EA <AmiBlitz3.ab3@12697>    BEQ.b calcvar__nobchk                                   ;no [0] checks!
000299F0 <AmiBlitz3.ab3@12701>   MOVE.w D1,brchkcode+2
000299F6 <AmiBlitz3.ab3@12702>   MOVE.w regnum,D1
000299F8 <AmiBlitz3.ab3@12703>   LSL.w #8,D1
000299FA <AmiBlitz3.ab3@12704>   LSL.w #1,D1
000299FE <AmiBlitz3.ab3@12705>   OR.w brchkcode0(PC),D1
00029A04 <AmiBlitz3.ab3@12706>   MOVE.w D1,brchkcode
00029A08 <AmiBlitz3.ab3@12707>   MOVE.l brchkcode(PC),D1
00029A0C <AmiBlitz3.ab3@12708>    BSR.w writelong
00029A10 <AmiBlitz3.ab3@12709>   MOVE.l brchkcode+4(PC),D1
00029A14 <AmiBlitz3.ab3@12710>    BSR.w writelong
00029A18 <AmiBlitz3.ab3@12711>   MOVE.w brchkcode+8(PC),D1
00029A1C <AmiBlitz3.ab3@12712>    BSR.w writeword
00029A1E <AmiBlitz3.ab3@12715>   MOVEQ.l #$04,D1
00029A24 <AmiBlitz3.ab3@12716>   BTST #$0,$7(A3)
00029A28 <AmiBlitz3.ab3@12717>    BNE.w calcvar__dothemul
00029A2C <AmiBlitz3.ab3@12718>   MOVE.w $8(A2),D1
00029A30 <AmiBlitz3.ab3@12721>   BSR.w JL_0_B6DE
00029A36 <AmiBlitz3.ab3@12722>   MOVE.w addrega2,D1
00029A3C <AmiBlitz3.ab3@12723>   OR.w regnum,D1
00029A40 <AmiBlitz3.ab3@12724>    OR.w #$100,d1                                           ;>32kb types
00029A44 <AmiBlitz3.ab3@12725>    BSR.w writeword
00029A48 <AmiBlitz3.ab3@12726>    BSR.w get1bytemain
00029A4A <AmiBlitz3.ab3@12727>   MOVEQ.l #$00,D3
00029A4E <AmiBlitz3.ab3@12728>   MOVE.w #$8000,D2
00029A54 <AmiBlitz3.ab3@12731>   BTST #$0,$7(A3)
00029A58 <AmiBlitz3.ab3@12732>    BNE.w calcvar__pointer
00029A5C <AmiBlitz3.ab3@12733> BRA.w calcvar__loop0
00029A60 <AmiBlitz3.ab3@12737>  CMP.w #$5C,D0
00029A64 <AmiBlitz3.ab3@12738>    BNE.w calcvar__done3
00029A66 <AmiBlitz3.ab3@12739>   TST.w D3
00029A6A <AmiBlitz3.ab3@12740>    BNE.w calcvar__pskip
00029A70 <AmiBlitz3.ab3@12741>   MOVE.w movea0,D1
00029A74 <AmiBlitz3.ab3@12742>    BSR.w writeword
00029A78 <AmiBlitz3.ab3@12743> BRA.w calcvar__pmore
00029A7E <AmiBlitz3.ab3@12746>   MOVE.w D3,movea0a0+2
00029A84 <AmiBlitz3.ab3@12747>   MOVE.l movea0a0,D1
00029A88 <AmiBlitz3.ab3@12748>    BSR.w writelong
00029A8E <AmiBlitz3.ab3@12751>   BTST #$2,$7(A3)
00029A92 <AmiBlitz3.ab3@12752>    BEQ.w calcvar__loopml
00029A98 <AmiBlitz3.ab3@12753>   MOVE.l adda0a0,D1
00029A9C <AmiBlitz3.ab3@12754>    BSR.w writelong
00029AA0 <AmiBlitz3.ab3@12755> BRA.w calcvar__loopml
00029AA4 <AmiBlitz3.ab3@12758>   BSET #$E,D2
00029AAA <AmiBlitz3.ab3@12759>   BTST #$2,$7(A3)
00029AAE <AmiBlitz3.ab3@12760>    BNE.w calcvar__done
00029AB2 <AmiBlitz3.ab3@12761>   BSET #$D,D2
00029ABA <AmiBlitz3.ab3@12764>   CMPI.l #$100,$4(A2)
00029ABE <AmiBlitz3.ab3@12765>    BCC.w calcvar__done2
00029AC2 <AmiBlitz3.ab3@12766>   MOVE.b $7(A2),D2
00029AC6 <AmiBlitz3.ab3@12769> BRA.w JL_0_9004
00029ACA <AmiBlitz3.ab3@12772>   MOVE.w $6(A2),D2
00029ACE <AmiBlitz3.ab3@12775>   MOVE.w $4(A3),D3
00029AD4 <AmiBlitz3.ab3@12776>   BTST #$0,$7(A3)
00029AD8 <AmiBlitz3.ab3@12777>    BEQ.w calcvar__nopoint
00029ADC <AmiBlitz3.ab3@12778>   BSET #$E,D2
00029ADE <AmiBlitz3.ab3@12781> RTS
00029AE2 <AmiBlitz3.ab3@12785> brchkcode0:  Dc.b $B0,$7C,$00,$00                          ;CMP.W   #$0000,D0
00029AE6 <AmiBlitz3.ab3@12786> brchkcode:   Dc.b $B0,$7C :             Dc.b $00,$00       ;CMP.W   #$0000,D0
00029AE8 <AmiBlitz3.ab3@12787>              Dc.b $65,$04                                  ;BCS.B   brchkcode__ok
00029AEA <AmiBlitz3.ab3@12788>              Dc.b $70,$02                                  ;MOVEQ   #$02,D0
00029AEC <AmiBlitz3.ab3@12789>              Dc.b $4E,$40                                  ;TRAP    #00
00029AF2 <AmiBlitz3.ab3@12797>   TST.w varmode
00029AF6 <AmiBlitz3.ab3@12798>    BEQ.w writeword
00029AFA <AmiBlitz3.ab3@12799>   BCLR #$0,D1
00029AFE <AmiBlitz3.ab3@12800> BRA.w writeword
00029B04 <AmiBlitz3.ab3@12803>   TST.w varmode
00029B08 <AmiBlitz3.ab3@12804>    BEQ.w writeword
00029B0C <AmiBlitz3.ab3@12805>   BCLR #$9,D1
00029B10 <AmiBlitz3.ab3@12806> BRA.w writeword
00029B16 <AmiBlitz3.ab3@12809>   TST.w proceduremode
00029B1A <AmiBlitz3.ab3@12810>    BEQ.w writelong
00029B1E <AmiBlitz3.ab3@12811>   BCLR #$19,D1
00029B22 <AmiBlitz3.ab3@12812> BRA.w writelong
00029B28 <AmiBlitz3.ab3@12815>   TST.w varmode
00029B2C <AmiBlitz3.ab3@12816>   BEQ.w writelong
00029B30 <AmiBlitz3.ab3@12817>   BCLR #$10,D1
00029B36 <AmiBlitz3.ab3@12820>   ADDQ.l #1,destpointer
00029B3E <AmiBlitz3.ab3@12821>   BCLR #$0,destpointer+3
00029B44 <AmiBlitz3.ab3@12822>   MOVEA.l destpointer,A4
00029B4A <AmiBlitz3.ab3@12823>   CMPA.l destbufferend,A4
00029B4E <AmiBlitz3.ab3@12824>    BCC.w writeword__overa
00029B50 <AmiBlitz3.ab3@12825>   MOVE.l D1,(A4)+
00029B56 <AmiBlitz3.ab3@12828>   MOVE.l A4,destpointer
00029B5A <AmiBlitz3.ab3@12829>   CMPA.l bigpc(PC),A4
00029B5E <AmiBlitz3.ab3@12830>    BHI.w writeword__nbp
00029B60 <AmiBlitz3.ab3@12831> RTS
00029B68 <AmiBlitz3.ab3@12834>   MOVE.w #$FFFF,dontwrite                                  ;#-1 org source
00029B6E <AmiBlitz3.ab3@12835>   CLR.b fast
00029B74 <AmiBlitz3.ab3@12836>   CLR.b fpu
00029B7A <AmiBlitz3.ab3@12837>   CLR.b iee
00029B7C <AmiBlitz3.ab3@12838>   ADDQ.w #4,A4
00029B80 <AmiBlitz3.ab3@12839> BRA.w writeword__msa
00029B86 <AmiBlitz3.ab3@12845>   ADDQ.l #1,destpointer
00029B8E <AmiBlitz3.ab3@12846>   BCLR #$0,destpointer+3
00029B94 <AmiBlitz3.ab3@12847>   MOVEA.l destpointer,A4
00029B9A <AmiBlitz3.ab3@12848>   CMPA.l destbufferend,A4
00029B9E <AmiBlitz3.ab3@12849>    BCC.w writeword__over
00029BA0 <AmiBlitz3.ab3@12850>   MOVE.w D1,(A4)+
00029BA6 <AmiBlitz3.ab3@12853>   MOVE.l A4,destpointer
00029BAA <AmiBlitz3.ab3@12854>   CMPA.l bigpc(PC),A4
00029BAE <AmiBlitz3.ab3@12855>    BHI.w writeword__nbp
00029BB0 <AmiBlitz3.ab3@12856> RTS
00029BB6 <AmiBlitz3.ab3@12859>   ADDQ.l #1,destpointer
00029BBE <AmiBlitz3.ab3@12860>   BCLR #$0,destpointer+3
00029BC4 <AmiBlitz3.ab3@12861>   MOVEA.l destpointer,A4
00029BCA <AmiBlitz3.ab3@12862>   CMPA.l destbufferend,A4
00029BCE <AmiBlitz3.ab3@12863>    BCC.w writeword__over
00029BD0 <AmiBlitz3.ab3@12864>   MOVE.w D1,(A4)+
00029BD6 <AmiBlitz3.ab3@12865>   MOVE.l A4,destpointer
00029BDA <AmiBlitz3.ab3@12866>   CMPA.l bigpc(PC),A4
00029BDE <AmiBlitz3.ab3@12867>    BHI.w writeword__nbp
00029BE0 <AmiBlitz3.ab3@12868> RTS
00029BE6 <AmiBlitz3.ab3@12871>   TST.w cfetchmode
00029BEA <AmiBlitz3.ab3@12872>   BNE.w writeword__nbp2
00029BF0 <AmiBlitz3.ab3@12873>   MOVE.l A4,bigpc
00029BF2 <AmiBlitz3.ab3@12876> RTS
00029BFA <AmiBlitz3.ab3@12879>   MOVE.w #$FFFF,dontwrite                                  ;#-1 org source
00029BFC <AmiBlitz3.ab3@12880>   ADDQ.w #2,A4
00029C02 <AmiBlitz3.ab3@12881>   CLR.b fast
00029C08 <AmiBlitz3.ab3@12882>   CLR.b fpu
00029C0E <AmiBlitz3.ab3@12883>   CLR.b iee
00029C12 <AmiBlitz3.ab3@12884> BRA.w writeword__ms
00029C18 <AmiBlitz3.ab3@12888>   MOVEA.l destpointer,A4
00029C1E <AmiBlitz3.ab3@12889>   CMPA.l destbufferend,A4
00029C22 <AmiBlitz3.ab3@12890>    BCC.w writebyte__over
00029C24 <AmiBlitz3.ab3@12891>   MOVE.b D1,(A4)+
00029C2A <AmiBlitz3.ab3@12894>   MOVE.l A4,destpointer
00029C2E <AmiBlitz3.ab3@12895>   CMPA.l bigpc(PC),A4
00029C32 <AmiBlitz3.ab3@12896>    BHI.w writebyte__nbp
00029C34 <AmiBlitz3.ab3@12897> RTS
00029C3A <AmiBlitz3.ab3@12900>   TST.w cfetchmode
00029C3E <AmiBlitz3.ab3@12901>    BNE.w writebyte__nbp2
00029C44 <AmiBlitz3.ab3@12902>   MOVE.l A4,bigpc
00029C46 <AmiBlitz3.ab3@12905> RTS
00029C4E <AmiBlitz3.ab3@12908>   MOVE.w #-1,dontwrite
00029C50 <AmiBlitz3.ab3@12909>   ADDQ.w #1,A4
00029C56 <AmiBlitz3.ab3@12910>   CLR.b fast
00029C5C <AmiBlitz3.ab3@12911>   CLR.b fpu
00029C62 <AmiBlitz3.ab3@12912>   CLR.b iee
00029C66 <AmiBlitz3.ab3@12913> BRA.w writebyte__ms
00029C6A <AmiBlitz3.ab3@12916> bigpc:   Ds.l 1
00029C6C <AmiBlitz3.ab3@12920>   MOVE.w (A0)+,D1
00029C70 <AmiBlitz3.ab3@12921>   BSR.w writeword
00029C72 <AmiBlitz3.ab3@12924>     CMPA.l A1,A0
00029C76 <AmiBlitz3.ab3@12925>     BCC.w pokecode__done
00029C78 <AmiBlitz3.ab3@12926>       MOVE.w (A0)+,D1
00029C7C <AmiBlitz3.ab3@12927>       BSR.w writeword
00029C80 <AmiBlitz3.ab3@12928> BRA.w pokecode__loop
00029C82 <AmiBlitz3.ab3@12931> RTS
00029C84 <AmiBlitz3.ab3@12934>   MOVE.w (A0)+,D1
00029C88 <AmiBlitz3.ab3@12935>   BSR.w writeword
00029C8A <AmiBlitz3.ab3@12936>   CMPA.l A1,A0
00029C8E <AmiBlitz3.ab3@12937>   BCS.w pokecode2
00029C90 <AmiBlitz3.ab3@12938> RTS
00029C96 <AmiBlitz3.ab3@12944>   TST.b iniffcommand
00029C9A <AmiBlitz3.ab3@12945>   BEQ 'l1
00029C9E <AmiBlitz3.ab3@12946>     MOVE.w #$4880,D1
00029CA4 <AmiBlitz3.ab3@12947>     OR.w regnum,D1
00029CA8 <AmiBlitz3.ab3@12948>     BSR writeword
00029CAA <AmiBlitz3.ab3@12951> RTS
00029CAE <AmiBlitz3.ab3@12954>   BSR.w convert_byte_to_word
00029CB4 <AmiBlitz3.ab3@12957>   TST.b iee
00029CB8 <AmiBlitz3.ab3@12958>   BEQ 'old
00029CBC <AmiBlitz3.ab3@12959>   CMP.b #5,d2
00029CC0 <AmiBlitz3.ab3@12960>   BEQ wtof
00029CC4 <AmiBlitz3.ab3@12963>   MOVE.w #$48C0,D1
00029CCA <AmiBlitz3.ab3@12964>   OR.w regnum,D1
00029CCE <AmiBlitz3.ab3@12965> BRA.w writeword
00029CD0 <AmiBlitz3.ab3@12968>   MOVEQ #0,d0
00029CD6 <AmiBlitz3.ab3@12969>   MOVE.w regnum,d0
00029CD8 <AmiBlitz3.ab3@12970>   ASL.l #7,d0
00029CDE <AmiBlitz3.ab3@12971>   MOVE.l #$f2005000,d1
00029CE0 <AmiBlitz3.ab3@12972>   OR.l d0,d1
00029CE2 <AmiBlitz3.ab3@12973>   ASL.l #1,d0
00029CE4 <AmiBlitz3.ab3@12974>   ASL.l #8,d0
00029CE6 <AmiBlitz3.ab3@12975>   OR.l d0,d1
00029CEA <AmiBlitz3.ab3@12976> BRA writelong
00029CEE <AmiBlitz3.ab3@12980>   BSR.w convert_byte_to_word
00029CF2 <AmiBlitz3.ab3@12983>   MOVE.w #$4840,D1
00029CF8 <AmiBlitz3.ab3@12984>   OR.w regnum,D1
00029CFC <AmiBlitz3.ab3@12985>    BSR.w writeword
00029D00 <AmiBlitz3.ab3@12986>   MOVE.w #$4240,D1
00029D06 <AmiBlitz3.ab3@12987>   OR.w regnum,D1
00029D0A <AmiBlitz3.ab3@12988> BRA.w writeword
00029D0E <AmiBlitz3.ab3@12992>   CMP.w #$ffdc,d1
00029D12 <AmiBlitz3.ab3@12993>   BNE 'negfpu
00029D14 <AmiBlitz3.ab3@12994>   MOVEQ #0,d0
00029D1A <AmiBlitz3.ab3@12995>   MOVE.w regnum,d0
00029D1C <AmiBlitz3.ab3@12996>   ASL.l #7,d0
00029D22 <AmiBlitz3.ab3@12997>   MOVE.l #$f2004000,d1
00029D24 <AmiBlitz3.ab3@12998>   OR.l d0,d1
00029D26 <AmiBlitz3.ab3@12999>   ASL.l #1,d0
00029D28 <AmiBlitz3.ab3@13000>   ASL.l #8,d0
00029D2A <AmiBlitz3.ab3@13001>   OR.l d0,d1
00029D2E <AmiBlitz3.ab3@13002> BRA writelong
00029D30 <AmiBlitz3.ab3@13006>   MOVEQ #0,d1
00029D36 <AmiBlitz3.ab3@13007>   MOVE.w regnum,d1                                         ;fpu neg
00029D38 <AmiBlitz3.ab3@13008>   ASL.l #7,d1
00029D3E <AmiBlitz3.ab3@13009>   OR.l #$f200001a,d1
00029D40 <AmiBlitz3.ab3@13010>   MOVE.l d0,-(a7)
00029D42 <AmiBlitz3.ab3@13011>   MOVEQ #0,d0
00029D48 <AmiBlitz3.ab3@13012>   MOVE.w regnum,d0
00029D4A <AmiBlitz3.ab3@13013>   ASL.l #8,d0
00029D4C <AmiBlitz3.ab3@13014>   ASL.l #2,d0
00029D4E <AmiBlitz3.ab3@13015>   OR.l d0,d1
00029D50 <AmiBlitz3.ab3@13016>   MOVE.l (a7)+,d0
00029D54 <AmiBlitz3.ab3@13017> BRA writelong
00029D5A <AmiBlitz3.ab3@13020>    TST.b iee
00029D5E <AmiBlitz3.ab3@13021>    BNE wtof
00029D62 <AmiBlitz3.ab3@13022>    BSR.w convert_byte_to_long
00029D66 <AmiBlitz3.ab3@13025>    MOVE.w #$FFDC,D1
00029D6C <AmiBlitz3.ab3@13028>    TST.b iee
00029D70 <AmiBlitz3.ab3@13029>    BNE ltof
00029D76 <AmiBlitz3.ab3@13030>    MOVE.w D1,libjsr+2
00029D7A <AmiBlitz3.ab3@13031>    BSR.w JL_0_AD40
00029D7C <AmiBlitz3.ab3@13032>   MOVE.l D4,D1
00029D80 <AmiBlitz3.ab3@13033>    BSR.w JL_0_AD38
00029D84 <AmiBlitz3.ab3@13034>   MOVE.w #$C900,D1
00029D88 <AmiBlitz3.ab3@13035>    BSR.w Atokejsr
00029D8C <AmiBlitz3.ab3@13036>    BSR.w JL_0_A352
00029D92 <AmiBlitz3.ab3@13037>   MOVE.l libjsr,D1
00029D96 <AmiBlitz3.ab3@13038>    BSR.w writelong
00029D9A <AmiBlitz3.ab3@13039>    BSR.w JL_0_A36E
00029D9C <AmiBlitz3.ab3@13040>   MOVE.l D5,D1
00029DA0 <AmiBlitz3.ab3@13041> BRA.w JL_0_AD38
00029DA2 <AmiBlitz3.ab3@13044> RTS
00029DA6 <AmiBlitz3.ab3@13047>   MOVE.w #$C317,D1
00029DAC <AmiBlitz3.ab3@13048>   TST.b typecheck
00029DB0 <AmiBlitz3.ab3@13049>   BEQ 'l1
00029DB6 <AmiBlitz3.ab3@13050>    TST.b notypecheck
00029DBA <AmiBlitz3.ab3@13051>    BNE 'l1
00029DC0 <AmiBlitz3.ab3@13052>    TST.l lasttoken
00029DC6 <AmiBlitz3.ab3@13059>   TST.b debugmode
00029DCA <AmiBlitz3.ab3@13060>    BEQ.w JL_0_9696
00029DD2 <AmiBlitz3.ab3@13061>   BTST #$7,overflowcheck
00029DD6 <AmiBlitz3.ab3@13062>    BEQ.w JL_0_9696
00029DDC <AmiBlitz3.ab3@13063>   TST.w cfetchmode
00029DE0 <AmiBlitz3.ab3@13064>    BNE.w JL_0_9696
00029DE6 <AmiBlitz3.ab3@13065>   TST.w regnum
00029DEA <AmiBlitz3.ab3@13066>    BEQ.w JL_0_968A
00029DEC <AmiBlitz3.ab3@13067>   MOVE.w D1,-(A7)
00029DF0 <AmiBlitz3.ab3@13068>   MOVE.w JL_0_9698(PC),D1
00029DF4 <AmiBlitz3.ab3@13069>    BSR.w writeword
00029DFA <AmiBlitz3.ab3@13070>   MOVE.w regnum,D1
00029DFE <AmiBlitz3.ab3@13071>   OR.w L_0_969C(PC),D1
00029E02 <AmiBlitz3.ab3@13072>    BSR.w writeword
00029E04 <AmiBlitz3.ab3@13073>   MOVE.w (A7)+,D1
00029E08 <AmiBlitz3.ab3@13074>    BSR.w JL_0_968A
00029E0C <AmiBlitz3.ab3@13075>   MOVE.w L_0_969A(PC),D1
00029E10 <AmiBlitz3.ab3@13076> BRA.w writeword
00029E14 <AmiBlitz3.ab3@13080>   MOVEM.l D0-D7/A0-A6,-(A7)
00029E18 <AmiBlitz3.ab3@13081>    BSR.w Atokejsr
00029E1C <AmiBlitz3.ab3@13082>   MOVEM.l (A7)+,D0-D7/A0-A6
00029E1E <AmiBlitz3.ab3@13085> RTS
00029E20 <AmiBlitz3.ab3@13088>   MOVE.l D0,-(A7)
00029E22 <AmiBlitz3.ab3@13091>   MOVE.l (A7)+,D0
00029E24 <AmiBlitz3.ab3@13094>   MOVE.l D0,D0
00029E28 <AmiBlitz3.ab3@13097>   BSR.w convert_word_to_long
00029E2E <AmiBlitz3.ab3@13098>   TST.b iee
00029E32 <AmiBlitz3.ab3@13099>   BEQ 'old
00029E36 <AmiBlitz3.ab3@13100>   CMP.b #5,d2
00029E3A <AmiBlitz3.ab3@13101>   BNE 'old
00029E3C <AmiBlitz3.ab3@13102> RTS
00029E40 <AmiBlitz3.ab3@13105> BRA.w JL_0_9600
00029E44 <AmiBlitz3.ab3@13109>   MOVE.w #$C316,D1
00029E4A <AmiBlitz3.ab3@13110>   TST.b typecheck
00029E4E <AmiBlitz3.ab3@13111>   BEQ 'l1
00029E54 <AmiBlitz3.ab3@13112>   TST.b peekaddrsize
00029E58 <AmiBlitz3.ab3@13113>   BNE 'l1
00029E5E <AmiBlitz3.ab3@13114>   TST.b notypecheck
00029E62 <AmiBlitz3.ab3@13115>   BNE 'l1
00029E68 <AmiBlitz3.ab3@13116>   TST.l lasttoken
00029E6C <AmiBlitz3.ab3@13122> BRA.w JL_0_963A
00029E70 <AmiBlitz3.ab3@13126>   MOVE.w #$C318,D1
00029E76 <AmiBlitz3.ab3@13127>   TST.b typecheck
00029E7A <AmiBlitz3.ab3@13128>   BEQ 'l1
00029E80 <AmiBlitz3.ab3@13129>   TST.b peekaddrsize
00029E84 <AmiBlitz3.ab3@13130>   BNE 'l1
00029E8A <AmiBlitz3.ab3@13131>   TST.b notypecheck
00029E8E <AmiBlitz3.ab3@13132>   BNE 'l1
00029E94 <AmiBlitz3.ab3@13133>   TST.l lasttoken
00029E98 <AmiBlitz3.ab3@13139> BRA.w JL_0_963A
00029E9C <AmiBlitz3.ab3@13143>   MOVE.w #$C318,D1
00029EA2 <AmiBlitz3.ab3@13144>   TST.b typecheck
00029EA6 <AmiBlitz3.ab3@13145>   BEQ 'l1
00029EAC <AmiBlitz3.ab3@13146>   TST.b notypecheck
00029EB0 <AmiBlitz3.ab3@13147>   BNE 'l1
00029EB6 <AmiBlitz3.ab3@13148>   TST.l lasttoken
00029EBA <AmiBlitz3.ab3@13154>   BSR.w JL_0_963A
00029EBE <AmiBlitz3.ab3@13155> BRA.w convert_word_to_quick
00029EC2 <AmiBlitz3.ab3@13159> BRA.w JL_0_9600
00029EC4 <AmiBlitz3.ab3@13163> RTS
00029EC8 <AmiBlitz3.ab3@13167>   MOVE.w #$C319,D1
00029ECE <AmiBlitz3.ab3@13168>   TST.b typecheck
00029ED2 <AmiBlitz3.ab3@13169>   BEQ 'l1
00029ED8 <AmiBlitz3.ab3@13170>   TST.b notypecheck
00029EDC <AmiBlitz3.ab3@13171>   BNE 'l1
00029EE2 <AmiBlitz3.ab3@13172>   TST.l lasttoken
00029EE6 <AmiBlitz3.ab3@13179>   BSR.w JL_0_963A
00029EEA <AmiBlitz3.ab3@13182>   MOVE.w #$4240,D1
00029EF0 <AmiBlitz3.ab3@13183>   OR.w regnum,D1
00029EF4 <AmiBlitz3.ab3@13184>   BSR.w writeword
00029EF8 <AmiBlitz3.ab3@13185>   MOVE.w #$4840,D1
00029EFE <AmiBlitz3.ab3@13186>   OR.w regnum,D1
00029F02 <AmiBlitz3.ab3@13187> BRA.w writeword
00029F06 <AmiBlitz3.ab3@13191> BRA.w JL_0_96D0
00029F0A <AmiBlitz3.ab3@13195>   BSR.w JL_0_96D0
00029F0E <AmiBlitz3.ab3@13196> BRA.w convert_word_to_long
00029F10 <AmiBlitz3.ab3@13201>   MOVEQ #0,d0
00029F16 <AmiBlitz3.ab3@13202>   MOVE.w regnum,d0
00029F18 <AmiBlitz3.ab3@13203>   ASL.l #7,d0
00029F1E <AmiBlitz3.ab3@13204>   MOVE.l #$f2004000,d1
00029F20 <AmiBlitz3.ab3@13205>   OR.l d0,d1
00029F22 <AmiBlitz3.ab3@13206>   ASL.l #1,d0
00029F24 <AmiBlitz3.ab3@13207>   ASL.l #8,d0
00029F26 <AmiBlitz3.ab3@13208>   OR.l d0,d1
00029F2A <AmiBlitz3.ab3@13209>   BSR writelong
00029F30 <AmiBlitz3.ab3@13210>   MOVE.w regnum,d0
00029F32 <AmiBlitz3.ab3@13211>   ASL.l #7,d0
00029F38 <AmiBlitz3.ab3@13212>   MOVE.l #$f23c4423,d1                                     ;fmul.s #1/65536,fpreg
00029F3A <AmiBlitz3.ab3@13213>   OR.w d0,d1
00029F3E <AmiBlitz3.ab3@13214>   BSR writelong
00029F44 <AmiBlitz3.ab3@13215>   MOVE.l #$37800000,d1
00029F48 <AmiBlitz3.ab3@13216>   BSR writelong
00029F4A <AmiBlitz3.ab3@13217> RTS
00029F50 <AmiBlitz3.ab3@13221>   TST.b iee
00029F54 <AmiBlitz3.ab3@13222>   BNE qtof
00029F58 <AmiBlitz3.ab3@13223>   MOVE.w #$D300,D1
00029F5A <AmiBlitz3.ab3@13226>   MOVE.w D1,-(A7)
00029F5E <AmiBlitz3.ab3@13227>    BSR.w JL_0_AD40
00029F60 <AmiBlitz3.ab3@13228>   MOVE.l D4,D1
00029F64 <AmiBlitz3.ab3@13229>    BSR.w JL_0_AD38
00029F68 <AmiBlitz3.ab3@13230>    BSR.w JL_0_A352
00029F6A <AmiBlitz3.ab3@13231>   MOVE.w (A7)+,D1
00029F6E <AmiBlitz3.ab3@13232>    BSR.w Atokejsr
00029F72 <AmiBlitz3.ab3@13233>    BSR.w JL_0_A36E
00029F74 <AmiBlitz3.ab3@13234>   MOVE.l D5,D1
00029F78 <AmiBlitz3.ab3@13235> BRA.w JL_0_AD38
00029F7A <AmiBlitz3.ab3@13239> RTS
00029F80 <AmiBlitz3.ab3@13242>   TST.b typecheck
00029F84 <AmiBlitz3.ab3@13243>   BEQ 'l1
00029F8A <AmiBlitz3.ab3@13244>   TST.b notypecheck
00029F8E <AmiBlitz3.ab3@13245>   BNE 'l1
00029F94 <AmiBlitz3.ab3@13246>   TST.l lasttoken
00029F9A <AmiBlitz3.ab3@13251>   TST.b iee
00029F9E <AmiBlitz3.ab3@13252>   BNE ftol
00029FA2 <AmiBlitz3.ab3@13253>   MOVE.w #$C31A,D1
00029FA6 <AmiBlitz3.ab3@13254>   BSR.w JL_0_963A
00029FAA <AmiBlitz3.ab3@13255>   BSR.w JL_0_974A
00029FAE <AmiBlitz3.ab3@13256> BRA.w convert_long_to_byte
00029FB0 <AmiBlitz3.ab3@13260> RTS
00029FB6 <AmiBlitz3.ab3@13263>   TST.b typecheck
00029FBA <AmiBlitz3.ab3@13264>   BEQ 'l1
00029FC0 <AmiBlitz3.ab3@13265>   TST.b notypecheck
00029FC4 <AmiBlitz3.ab3@13266>   BNE 'l1
00029FCA <AmiBlitz3.ab3@13267>   TST.l lasttoken
00029FD0 <AmiBlitz3.ab3@13272>   TST.b iee
00029FD4 <AmiBlitz3.ab3@13273>   BNE ftol
00029FD8 <AmiBlitz3.ab3@13274>   MOVE.w #$C31B,D1
00029FDC <AmiBlitz3.ab3@13275>   BSR.w JL_0_963A
00029FE0 <AmiBlitz3.ab3@13276>   BSR.w JL_0_974A
00029FE4 <AmiBlitz3.ab3@13277> BRA.w convert_long_to_word
00029FE6 <AmiBlitz3.ab3@13281> RTS
00029FEC <AmiBlitz3.ab3@13284>   TST.b iee
00029FF0 <AmiBlitz3.ab3@13285>   BNE ftol
00029FF4 <AmiBlitz3.ab3@13286>   MOVE.w #$C31C,D1
00029FF8 <AmiBlitz3.ab3@13287>   BSR.w JL_0_963A
00029FFC <AmiBlitz3.ab3@13290>   MOVE.w #$FFE2,D1
0002A000 <AmiBlitz3.ab3@13291> BRA.w JL_0_9604
0002A002 <AmiBlitz3.ab3@13294>   MOVE.l d0,-(a7)
0002A004 <AmiBlitz3.ab3@13295>   MOVEQ #0,d0
0002A00A <AmiBlitz3.ab3@13296>   MOVE.w regnum,d0
0002A00C <AmiBlitz3.ab3@13297>   ASL.l #7,d0
0002A012 <AmiBlitz3.ab3@13298>   MOVE.l #$f2006000,d1
0002A014 <AmiBlitz3.ab3@13299>   OR.l d0,d1
0002A016 <AmiBlitz3.ab3@13300>   ASL.l #1,d0
0002A018 <AmiBlitz3.ab3@13301>   ASL.l #8,d0
0002A01A <AmiBlitz3.ab3@13302>   OR.l d0,d1
0002A01C <AmiBlitz3.ab3@13303>   MOVE.l (a7)+,d0
0002A020 <AmiBlitz3.ab3@13304> BRA writelong
0002A022 <AmiBlitz3.ab3@13308>   MOVE.l d0,-(a7)
0002A024 <AmiBlitz3.ab3@13309>   MOVEQ #0,d0
0002A02A <AmiBlitz3.ab3@13310>   MOVE.l #$f23c4023,d1
0002A030 <AmiBlitz3.ab3@13311>   MOVE.w regnum,d0
0002A032 <AmiBlitz3.ab3@13312>   ASL.l #7,d0
0002A034 <AmiBlitz3.ab3@13313>   OR.l d0,d1
0002A038 <AmiBlitz3.ab3@13314>   BSR writelong
0002A03E <AmiBlitz3.ab3@13315>   MOVE.l #$00010000,d1
0002A042 <AmiBlitz3.ab3@13316>   BSR writelong
0002A048 <AmiBlitz3.ab3@13317>   MOVE.w regnum,d0
0002A04A <AmiBlitz3.ab3@13318>   ASL.l #7,d0
0002A050 <AmiBlitz3.ab3@13319>   MOVE.l #$f2006000,d1
0002A052 <AmiBlitz3.ab3@13320>   OR.l d0,d1
0002A054 <AmiBlitz3.ab3@13321>   ASL.l #1,d0
0002A056 <AmiBlitz3.ab3@13322>   ASL.l #8,d0
0002A058 <AmiBlitz3.ab3@13323>   OR.l d0,d1
0002A05C <AmiBlitz3.ab3@13324>   BSR writelong
0002A05E <AmiBlitz3.ab3@13325>   MOVE.l (a7)+,d0
0002A060 <AmiBlitz3.ab3@13326> RTS
0002A062 <AmiBlitz3.ab3@13330> RTS
0002A068 <AmiBlitz3.ab3@13334>   TST.b iee
0002A06C <AmiBlitz3.ab3@13335>   BNE ftoq
0002A070 <AmiBlitz3.ab3@13336>   MOVE.w #$C31B,D1
0002A074 <AmiBlitz3.ab3@13337>   BSR.w JL_0_963A
0002A078 <AmiBlitz3.ab3@13338>   MOVE.w #$D301,D1
0002A07C <AmiBlitz3.ab3@13339> BRA.w JL_0_96FC
0002A082 <AmiBlitz3.ab3@13345>    TST.b blitzparloop
0002A086 <AmiBlitz3.ab3@13346>    BNE 'l1
0002A08C <AmiBlitz3.ab3@13347>    TST.b funcparloop
0002A090 <AmiBlitz3.ab3@13348>    BNE 'l1
0002A094 <AmiBlitz3.ab3@13349>    BRA error_convert_types
0002A09C <AmiBlitz3.ab3@13352>   CMP.b #2,optistring
0002A0A0 <AmiBlitz3.ab3@13353>   BEQ JLrts
0002A0A6 <AmiBlitz3.ab3@13354>   MOVE.w stol,D1
0002A0AA <AmiBlitz3.ab3@13355>   BSR.w writeword
0002A0B2 <AmiBlitz3.ab3@13356>   CMPI.w #$2,sbgot
0002A0B6 <AmiBlitz3.ab3@13357>   BCS.w sbtolong
0002A0BA <AmiBlitz3.ab3@13358>   MOVE.w ceos(PC),D1
0002A0BE <AmiBlitz3.ab3@13359>   BSR.w writeword
0002A0C4 <AmiBlitz3.ab3@13362>   MOVE.w regnum,D1
0002A0C6 <AmiBlitz3.ab3@13363>   LSL.w #8,D1
0002A0C8 <AmiBlitz3.ab3@13364>   LSL.w #1,D1
0002A0D0 <AmiBlitz3.ab3@13365>   CMPI.w #$2,sbgot
0002A0D4 <AmiBlitz3.ab3@13366>   BCS.w JL_0_98E8
0002A0DA <AmiBlitz3.ab3@13367>   MOVE.w a2offset,D3
0002A0E0 <AmiBlitz3.ab3@13368>   SUB.w thisstuse,D3
0002A0E4 <AmiBlitz3.ab3@13369>   CMP.w #$6,D3
0002A0E8 <AmiBlitz3.ab3@13370>   BNE.w JL_0_98D4b
0002A0EE <AmiBlitz3.ab3@13371>   OR.w movestst2,D1
0002A0F2 <AmiBlitz3.ab3@13372>   BSR.w writeword
0002A0F8 <AmiBlitz3.ab3@13373>   LEA movestst2+2,A0
0002A0FE <AmiBlitz3.ab3@13374>   LEA movestst2f,A1
0002A102 <AmiBlitz3.ab3@13375> BRA.w pokecode2
0002A108 <AmiBlitz3.ab3@13379>   OR.w movea7dn,D1
0002A10C <AmiBlitz3.ab3@13380>   BSR.w writeword
0002A112 <AmiBlitz3.ab3@13381>   MOVE.l #0,D1
0002A116 <AmiBlitz3.ab3@13382> BRA.w writeword
0002A11C <AmiBlitz3.ab3@13386>   ADDQ.w #1,fuckpos
0002A120 <AmiBlitz3.ab3@13387>   BSR.w writeconvertcode
0002A126 <AmiBlitz3.ab3@13388>   SUBQ.w #1,fuckpos
0002A128 <AmiBlitz3.ab3@13390> RTS
0002A12A <AmiBlitz3.ab3@13394>   MOVE.w D3,D1
0002A12E <AmiBlitz3.ab3@13395>   CMP.w #7,d1
0002A132 <AmiBlitz3.ab3@13396>   BLE 'ok
0002A138 <AmiBlitz3.ab3@13397>   JMP errorinternalconvert
0002A13A <AmiBlitz3.ab3@13398> 'ok  SUBQ.w #1,D1
0002A13E <AmiBlitz3.ab3@13399>   MULU #$7,D1
0002A140 <AmiBlitz3.ab3@13400>   ADD.w D2,D1
0002A142 <AmiBlitz3.ab3@13401>   SUBQ.w #1,D1
0002A144 <AmiBlitz3.ab3@13402>   LSL.w #2,D1
0002A14A <AmiBlitz3.ab3@13403>   LEA convtable,A0
0002A14E <AmiBlitz3.ab3@13404>   MOVE.l $0(A0,D1.W),D1
0002A152 <AmiBlitz3.ab3@13405>   BEQ.w JL_0_97A2
0002A154 <AmiBlitz3.ab3@13406>     MOVEA.l D1,A0
0002A158 <AmiBlitz3.ab3@13407>     CMP.b #$ff,d3
0002A15C <AmiBlitz3.ab3@13408>     BEQ JL_0_97A2
0002A15E <AmiBlitz3.ab3@13409> JMP (A0)
0002A160 <AmiBlitz3.ab3@13412> RTS
0002A164 <AmiBlitz3.ab3@13415> usedfrom:  Ds.l 1
0002A168 <AmiBlitz3.ab3@13422>   CMP.w #"\",D0
0002A16C <AmiBlitz3.ab3@13423>   BNE.w JL_0_97C2
0002A170 <AmiBlitz3.ab3@13424>     CMP.b #"\",(a5)
0002A174 <AmiBlitz3.ab3@13425>     BNE 'first
0002A17A <AmiBlitz3.ab3@13426>       MOVE.l A5,usedfrom
0002A180 <AmiBlitz3.ab3@13427>       LEA path2,A5
0002A184 <AmiBlitz3.ab3@13428> BRA 'g1
0002A186 <AmiBlitz3.ab3@13431>     SUBQ.w #1,A5
0002A18C <AmiBlitz3.ab3@13432>   MOVE.l A5,usedfrom
0002A192 <AmiBlitz3.ab3@13433>   LEA usedpath,A5                                          ;read path
0002A196 <AmiBlitz3.ab3@13436>   BSR.w get1bytemain
0002A19C <AmiBlitz3.ab3@13439>   CLR.w flagmask
0002A1A0 <AmiBlitz3.ab3@13440>   CMP.w #$2A,D0
0002A1A4 <AmiBlitz3.ab3@13441>    BNE.w JL_0_983A
0002A1AC <AmiBlitz3.ab3@13442>   MOVE.w #$0001,flagmask
0002A1B0 <AmiBlitz3.ab3@13444>    BSR.w getparameter2
0002A1B4 <AmiBlitz3.ab3@13447>    BEQ.w syntaxerr
0002A1B8 <AmiBlitz3.ab3@13448>   CMP.w #$28,D0
0002A1BC <AmiBlitz3.ab3@13449>    BEQ.w JL_0_9830
0002A1C0 <AmiBlitz3.ab3@13450>   CMP.w #$2E,D0
0002A1C4 <AmiBlitz3.ab3@13451>    BEQ.w JL_0_980C
0002A1C8 <AmiBlitz3.ab3@13452>   CMP.w #$24,D0
0002A1CC <AmiBlitz3.ab3@13453>    BNE.w JL_0_9838
0002A1D4 <AmiBlitz3.ab3@13454>   ORI.w #$8,flagmask
0002A1D8 <AmiBlitz3.ab3@13455>    BSR.w storeloc
0002A1DC <AmiBlitz3.ab3@13456>    BSR.w get1bytemain
0002A1E0 <AmiBlitz3.ab3@13457> BRA.w JL_0_9822
0002A1E4 <AmiBlitz3.ab3@13461>   BSR.w storeloc
0002A1E6 <AmiBlitz3.ab3@13462>   MOVE.w D2,-(A7)
0002A1EC <AmiBlitz3.ab3@13463>   LEA namebuff2,A1
0002A1F0 <AmiBlitz3.ab3@13464>    BSR.w makename3
0002A1F4 <AmiBlitz3.ab3@13465>    BEQ.w syntaxerr
0002A1F6 <AmiBlitz3.ab3@13466>   MOVE.w (A7)+,D2
0002A1F8 <AmiBlitz3.ab3@13469>    MOVE.w D0,D1
0002A1FC <AmiBlitz3.ab3@13470>    BSR.w resloc
0002A200 <AmiBlitz3.ab3@13471>    CMP.w #$28,D1
0002A204 <AmiBlitz3.ab3@13472>    BNE.w JL_0_9838
0002A20C <AmiBlitz3.ab3@13475>   ORI.w #$2,flagmask
0002A20E <AmiBlitz3.ab3@13478> RTS
0002A212 <AmiBlitz3.ab3@13482>   CMP.w #$40,D0
0002A216 <AmiBlitz3.ab3@13483>    BNE.w JL_0_984E
0002A21E <AmiBlitz3.ab3@13484>   MOVE.w #$0005,flagmask
0002A222 <AmiBlitz3.ab3@13485> BRA.w JL_0_97D8
0002A226 <AmiBlitz3.ab3@13489>   BSR.w makename2
0002A22A <AmiBlitz3.ab3@13490> BRA.w JL_0_97DC
0002A22E <AmiBlitz3.ab3@13494>   MOVE.w #$FED3,D1
0002A232 <AmiBlitz3.ab3@13495>    BSR.w uselib
0002A238 <AmiBlitz3.ab3@13496>   LEA pusha3,A0
0002A23E <AmiBlitz3.ab3@13497>   LEA pusha3f,A1
0002A242 <AmiBlitz3.ab3@13498> BRA.w pokecode
0002A246 <AmiBlitz3.ab3@13502>   MOVE.w #$FED3,D1
0002A24A <AmiBlitz3.ab3@13503>    BSR.w uselib
0002A250 <AmiBlitz3.ab3@13504>   LEA pulla3,A0
0002A256 <AmiBlitz3.ab3@13505>   LEA pulla3f,A1
0002A25A <AmiBlitz3.ab3@13506> BRA.w pokecode
0002A25C <AmiBlitz3.ab3@13510> ceos:   Dc.b $42,$1B                                       ;CLR.B   (A3)+             ;*!
0002A264 <AmiBlitz3.ab3@13515>     CMP.b #2,optistring
0002A268 <AmiBlitz3.ab3@13516>    BEQ 'l10
0002A26C <AmiBlitz3.ab3@13517>    MOVE.w ceos(PC),D1
0002A270 <AmiBlitz3.ab3@13518>    BSR.w writeword                                         ;clr.b (a3)
0002A276 <AmiBlitz3.ab3@13521>   MOVE.w regnum,D1
0002A278 <AmiBlitz3.ab3@13522>   LSL.w #8,D1
0002A27A <AmiBlitz3.ab3@13523>   LSL.w #1,D1
0002A282 <AmiBlitz3.ab3@13524>   CMPI.w #$2,sbgot
0002A286 <AmiBlitz3.ab3@13525>    BCS.w JL_0_98E8
0002A28C <AmiBlitz3.ab3@13526>   MOVE.w a2offset,D3                                       ;stackuse,d3 org source
0002A292 <AmiBlitz3.ab3@13527>   SUB.w thisstuse,D3
0002A296 <AmiBlitz3.ab3@13528>   CMP.w #$6,D3
0002A29A <AmiBlitz3.ab3@13529>    BNE.w JL_0_98D4
0002A2A0 <AmiBlitz3.ab3@13530>   OR.w movestst2,D1
0002A2A4 <AmiBlitz3.ab3@13531>    BSR.w writeword
0002A2AA <AmiBlitz3.ab3@13532>   LEA movestst2+2,A0
0002A2B0 <AmiBlitz3.ab3@13533>   LEA movestst2f,A1
0002A2B4 <AmiBlitz3.ab3@13534> BRA.w pokecode2
0002A2BA <AmiBlitz3.ab3@13538>    OR.w movea7dn,D1
0002A2BE <AmiBlitz3.ab3@13539>    BSR.w writeword
0002A2C4 <AmiBlitz3.ab3@13540>   MOVE.l movea7dn+2,D1
0002A2C8 <AmiBlitz3.ab3@13552>   BSR writelong
0002A2D0 <AmiBlitz3.ab3@13555>    CMP.w #6,regnum
0002A2D4 <AmiBlitz3.ab3@13556>    BEQ 'l1
0002A2DA <AmiBlitz3.ab3@13557>    TST.w stackpar
0002A2DE <AmiBlitz3.ab3@13558>    BNE 'l1
0002A2E4 <AmiBlitz3.ab3@13559>    TST.b funcparloop
0002A2E8 <AmiBlitz3.ab3@13560>    BEQ 'l1
0002A2EE <AmiBlitz3.ab3@13561>    MOVE.l #$48780000,d1
0002A2F2 <AmiBlitz3.ab3@13562>    BSR writelong
0002A2F4 <AmiBlitz3.ab3@13566> RTS
0002A2F6 <AmiBlitz3.ab3@13571>      MOVE.l d1,-(a7)
0002A2FE <AmiBlitz3.ab3@13572>      CMP.w #6,regnum
0002A302 <AmiBlitz3.ab3@13573>      BEQ 'l1
0002A308 <AmiBlitz3.ab3@13574>      TST.w stackpar
0002A30C <AmiBlitz3.ab3@13575>      BNE 'l1
0002A312 <AmiBlitz3.ab3@13576>      TST.b funcparloop
0002A316 <AmiBlitz3.ab3@13577>      BEQ 'l1
0002A31C <AmiBlitz3.ab3@13578>      MOVE.l #$48780000,d1
0002A320 <AmiBlitz3.ab3@13579>      BSR writelong
0002A322 <AmiBlitz3.ab3@13582>      MOVE.l (a7)+,d1
0002A328 <AmiBlitz3.ab3@13584>    OR.w movestdn,D1
0002A32C <AmiBlitz3.ab3@13585>    BSR.w writeword
0002A330 <AmiBlitz3.ab3@13586>   MOVE.w #$FED3,D1
0002A334 <AmiBlitz3.ab3@13587>    BSR.w uselib
0002A338 <AmiBlitz3.ab3@13588>   MOVE.w $A(A1),D1
0002A33C <AmiBlitz3.ab3@13589> BRA.w writeword
0002A33E <AmiBlitz3.ab3@13592> unknown:    Ds.w 1
0002A344 <AmiBlitz3.ab3@13595> somecode:   Dc.b $0C,$80,$00,$01,$00,$00                   ;CMPI.L  #$00010000,D0
0002A348 <AmiBlitz3.ab3@13596> somecode2:  Dc.b $65,$00,$00,$08                           ;BCS.W   codeisok
0002A34E <AmiBlitz3.ab3@13597>             Dc.b $4E,$B9,$00,$00,$00,$00                   ;JSR $00000000
0002A354 <AmiBlitz3.ab3@13603>   TST.b debugmode
0002A358 <AmiBlitz3.ab3@13604>   BEQ.w sharreval
0002A35C <AmiBlitz3.ab3@13605>  BSR.w arreval
0002A360 <AmiBlitz3.ab3@13608>   MOVE.w somecode(PC),D1
0002A366 <AmiBlitz3.ab3@13609>   OR.w regnum,D1
0002A36A <AmiBlitz3.ab3@13610>    BSR.w writeword
0002A36C <AmiBlitz3.ab3@13611>   MOVEQ.l #$01,D1
0002A36E <AmiBlitz3.ab3@13612>   SWAP D1
0002A372 <AmiBlitz3.ab3@13613>    BSR.w writelong
0002A376 <AmiBlitz3.ab3@13614>   MOVE.l somecode2(PC),D1
0002A37A <AmiBlitz3.ab3@13615>    BSR.w writelong
0002A37E <AmiBlitz3.ab3@13616>   MOVE.w #$C309,D1
0002A382 <AmiBlitz3.ab3@13617> BRA.w Atokejsr
0002A384 <AmiBlitz3.ab3@13621>   MOVEQ.l #$02,D2
0002A386 <AmiBlitz3.ab3@13622>   MOVEQ.l #$00,D1
0002A388 <AmiBlitz3.ab3@13623>   MOVEQ.l #$00,D3
0002A38C <AmiBlitz3.ab3@13624> BRA.w maineval2
0002A38E <AmiBlitz3.ab3@13628>   MOVEQ.l #$03,D2
0002A390 <AmiBlitz3.ab3@13629>   MOVEQ.l #$00,D1
0002A392 <AmiBlitz3.ab3@13630>   MOVEQ.l #$00,D3
0002A398 <AmiBlitz3.ab3@13631>   MOVE.b notypecheck,-(a7)
0002A3A0 <AmiBlitz3.ab3@13632>   MOVE.b #1,notypecheck                                    ;typecheck need switch off for array offset calculation code
0002A3A6 <AmiBlitz3.ab3@13633>   JSR maineval2
0002A3AC <AmiBlitz3.ab3@13634>   MOVE.b (a7)+,notypecheck                                 ;now its switch to old state
0002A3AE <AmiBlitz3.ab3@13635>   RTS
0002A3B8 <AmiBlitz3.ab3@13639>   MOVE.w oldqflag,instringon
0002A3BE <AmiBlitz3.ab3@13640>   MOVEA.l lastsourcepos,A5
0002A3C0 <AmiBlitz3.ab3@13641>   MOVEQ.l #-$01,D1
0002A3C2 <AmiBlitz3.ab3@13642>   MOVEQ.l #-$01,D3
0002A3C6 <AmiBlitz3.ab3@13643> BRA.w peval
0002A3D0 <AmiBlitz3.ab3@13648>   MOVE.w oldqflag,instringon
0002A3D6 <AmiBlitz3.ab3@13649>   MOVEA.l lastsourcepos,A5
0002A3D8 <AmiBlitz3.ab3@13652>   MOVEQ.l #-$01,D1
0002A3DA <AmiBlitz3.ab3@13653>   MOVEQ.l #$00,D3
0002A3E0 <AmiBlitz3.ab3@13654>   MOVE.l leftsidetype,-(a7)
0002A3E6 <AmiBlitz3.ab3@13655>   MOVE.l rightsidetype,-(a7)
0002A3EC <AmiBlitz3.ab3@13656>   CLR.l leftsidetype
0002A3F2 <AmiBlitz3.ab3@13657>   CLR.l rightsidetype
0002A3F8 <AmiBlitz3.ab3@13658>   JSR maineval
0002A3FE <AmiBlitz3.ab3@13659>   MOVE.l (a7)+,rightsidetype
0002A404 <AmiBlitz3.ab3@13660>   MOVE.l (a7)+,leftsidetype
0002A406 <AmiBlitz3.ab3@13661>   RTS
0002A410 <AmiBlitz3.ab3@13665>   MOVE.w oldqflag,instringon
0002A416 <AmiBlitz3.ab3@13666>   MOVEA.l lastsourcepos,A5
0002A418 <AmiBlitz3.ab3@13667>   MOVEQ.l #$00,D1
0002A41A <AmiBlitz3.ab3@13668>   MOVEQ.l #-$01,D3
0002A41E <AmiBlitz3.ab3@13669> BRA.w maineval
0002A420 <AmiBlitz3.ab3@13673>   MOVEQ.l #$01,D1
0002A422 <AmiBlitz3.ab3@13674>   MOVEQ.l #-$01,D3
0002A426 <AmiBlitz3.ab3@13675> BRA.w maineval
0002A430 <AmiBlitz3.ab3@13680>   MOVE.w oldqflag,instringon
0002A436 <AmiBlitz3.ab3@13681>   MOVEA.l lastsourcepos,A5
0002A438 <AmiBlitz3.ab3@13684>   MOVEQ.l #$00,D1                                        ;no push
0002A43A <AmiBlitz3.ab3@13685>   MOVEQ.l #$00,D3
0002A442 <AmiBlitz3.ab3@13706>    CMPI.w #$6,regnum
0002A446 <AmiBlitz3.ab3@13707>    BCS.w maineval2
0002A448 <AmiBlitz3.ab3@13708>    MOVEQ #0,d1
0002A44E <AmiBlitz3.ab3@13709>    MOVE.l destpointer,a4
0002A454 <AmiBlitz3.ab3@13711>    CMPA.l destbufferend,A4
0002A458 <AmiBlitz3.ab3@13712>    BCC.w maineval__l2
0002A45E <AmiBlitz3.ab3@13714>    CMP.w #$2f0a,-2(a4)                                    ;bug is a move.l a2,-(a7) before (show temp calc)?
0002A462 <AmiBlitz3.ab3@13716>    BNE maineval__l2
0002A466 <AmiBlitz3.ab3@13720> BRA maineval__l1
0002A468 <AmiBlitz3.ab3@13723>   MOVEQ.l #-$01,D1
0002A470 <AmiBlitz3.ab3@13726>   MOVE.w #$0006,regnum                                     ;write a func par To stack
0002A476 <AmiBlitz3.ab3@13729>   MOVE.w thisstuse,-(A7)
0002A480 <AmiBlitz3.ab3@13730>   MOVE.w a2offset,thisstuse
0002A486 <AmiBlitz3.ab3@13731>   MOVE.w stackpar,-(A7)
0002A48C <AmiBlitz3.ab3@13732>   MOVE.w D1,stackpar
0002A492 <AmiBlitz3.ab3@13733>   MOVE.w sbgot,-(A7)
0002A498 <AmiBlitz3.ab3@13734>   CLR.w sbgot
0002A49C <AmiBlitz3.ab3@13735>   MOVE.w unknown(PC),-(A7)
0002A4A2 <AmiBlitz3.ab3@13736>   MOVE.w D3,unknown
0002A4A4 <AmiBlitz3.ab3@13737>   MOVE.w D2,-(a7)
0002A4AA <AmiBlitz3.ab3@13738>   MOVE.w d2,mode
0002A4AE <AmiBlitz3.ab3@13739>    BSR.w eval3
0002A4B0 <AmiBlitz3.ab3@13740>   MOVE.w (a7)+,d3
0002A4B4 <AmiBlitz3.ab3@13741>    BEQ.w maineval__noconv
0002A4B8 <AmiBlitz3.ab3@13742>   MOVE.w unknown(PC),D1
0002A4BC <AmiBlitz3.ab3@13743>    BNE.w maineval__noconv
0002A4BE <AmiBlitz3.ab3@13744>   EXG.l D2,D3
0002A4C0 <AmiBlitz3.ab3@13745>    MOVE.l a2,-(a7)
0002A4C6 <AmiBlitz3.ab3@13746>    TST.b curtemplabel
0002A4CA <AmiBlitz3.ab3@13747>    BEQ maineval2__l10
0002A4D0 <AmiBlitz3.ab3@13748>    MOVE.l asmbuff,a2
0002A4D6 <AmiBlitz3.ab3@13749>    CMP.w #$c,$8(a2)
0002A4DA <AmiBlitz3.ab3@13750>    BEQ maineval2__l20
0002A4E0 <AmiBlitz3.ab3@13751>    CMP.w #$d,$8(a2)
0002A4E4 <AmiBlitz3.ab3@13752>    BEQ maineval2__l20
0002A4E6 <AmiBlitz3.ab3@13755>   CMP.w d2,d3
0002A4EA <AmiBlitz3.ab3@13756>   BEQ maineval2__l20
0002A4EE <AmiBlitz3.ab3@13757>   BSR.w writeconvertcode
0002A4F4 <AmiBlitz3.ab3@13758>   CLR.b doimmediate
0002A4F6 <AmiBlitz3.ab3@13761>   MOVE.l (a7)+,a2
0002A4FC <AmiBlitz3.ab3@13764>   MOVE.w (A7)+,unknown
0002A502 <AmiBlitz3.ab3@13765>   MOVE.w stackpar,D1
0002A506 <AmiBlitz3.ab3@13766>    BEQ.w maineval__skipme
0002A50A <AmiBlitz3.ab3@13767>    BMI.w maineval__skipme
0002A510 <AmiBlitz3.ab3@13771>   MOVE.w regnum,D1
0002A512 <AmiBlitz3.ab3@13772>   LSL.w #8,D1
0002A514 <AmiBlitz3.ab3@13773>   LSL.w #1,D1
0002A518 <AmiBlitz3.ab3@13774>   CMP.w #$7,D2
0002A51C <AmiBlitz3.ab3@13775>    BNE.w maineval__hi1
0002A524 <AmiBlitz3.ab3@13776>    CMP.b #2,optistring
0002A528 <AmiBlitz3.ab3@13777>    BEQ maineval__hi1a
0002A52A <AmiBlitz3.ab3@13778>   MOVE.w D1,-(A7)
0002A530 <AmiBlitz3.ab3@13779>   OR.w getstlen,D1
0002A534 <AmiBlitz3.ab3@13780>    BSR.w writeword
0002A536 <AmiBlitz3.ab3@13781>   MOVE.w (A7)+,D1
0002A53C <AmiBlitz3.ab3@13784>   ADDQ.w #2,a2offset                                        ;lib mode to stack
0002A540 <AmiBlitz3.ab3@13788>   MOVE.w #$3f3c,d1
0002A544 <AmiBlitz3.ab3@13789>    BSR.w writeword
0002A546 <AmiBlitz3.ab3@13793>   MOVE.w d2,d1
0002A54C <AmiBlitz3.ab3@13794>   MOVE.w d1,libmode
0002A550 <AmiBlitz3.ab3@13795>    BSR.w writeword
0002A554 <AmiBlitz3.ab3@13796>   CMP.w #$7,D2
0002A558 <AmiBlitz3.ab3@13797>    BNE.w maineval__skipme
0002A55E <AmiBlitz3.ab3@13798>   MOVE.w putstlen,D1
0002A564 <AmiBlitz3.ab3@13799>   OR.w regnum,D1
0002A568 <AmiBlitz3.ab3@13800>    BSR.w writeword
0002A56C <AmiBlitz3.ab3@13803>    CMP.w #$7,D2
0002A570 <AmiBlitz3.ab3@13804>    BNE.w maineval__notst
0002A578 <AmiBlitz3.ab3@13815>    CMP.b #2,optistring
0002A57C <AmiBlitz3.ab3@13816>    BEQ maineval__skipme_l10
0002A582 <AmiBlitz3.ab3@13817>    ADDQ.w #4,a2offset                                      ;a length on da stack.....
0002A586 <AmiBlitz3.ab3@13818>    BSR.w sbtolong
0002A58A <AmiBlitz3.ab3@13819> BRA.w maineval__notst2
0002A592 <AmiBlitz3.ab3@13823>     CMP.w #6,regnum
0002A596 <AmiBlitz3.ab3@13824>     BEQ maineval__skipme_l10_l1
0002A59C <AmiBlitz3.ab3@13825>     TST.b funcparloop
0002A5A0 <AmiBlitz3.ab3@13826>     BEQ maineval__skipme_l10_l1
0002A5A6 <AmiBlitz3.ab3@13827>     MOVE.l #$48780000,d1
0002A5AA <AmiBlitz3.ab3@13828>     BSR writelong
0002A5AE <AmiBlitz3.ab3@13831> BRA.w maineval__notst2
0002A5B4 <AmiBlitz3.ab3@13834>   ADDQ.w #2,a2offset
0002A5B8 <AmiBlitz3.ab3@13835> BRA maineval__skipme
0002A5C0 <AmiBlitz3.ab3@13838>   CMPI.w #$2,sbgot
0002A5C4 <AmiBlitz3.ab3@13839>    BCS.w maineval__notst2                                         ;correct stack
0002A5C8 <AmiBlitz3.ab3@13840>   MOVE.w ststfix(PC),D1
0002A5CC <AmiBlitz3.ab3@13841>    BSR.w writeword
0002A5D2 <AmiBlitz3.ab3@13844>   MOVE.w (A7)+,sbgot
0002A5D8 <AmiBlitz3.ab3@13845>   MOVE.w stackpar,D1
0002A5DC <AmiBlitz3.ab3@13846>    BPL.w maineval__skip
0002A5E0 <AmiBlitz3.ab3@13847>    CMP.b #7,d2
0002A5E4 <AmiBlitz3.ab3@13848>    BEQ maineval__notst2_l1
0002A5EA <AmiBlitz3.ab3@13849>   TST.b funcparloop
0002A5EE <AmiBlitz3.ab3@13850>   BEQ maineval__notst2_l1
0002A5F2 <AmiBlitz3.ab3@13851>   CMP.b #5,d2
0002A5F6 <AmiBlitz3.ab3@13852>   BNE maineval__notst2_skip
0002A5FC <AmiBlitz3.ab3@13853>   TST.b fpu
0002A600 <AmiBlitz3.ab3@13854>   BEQ maineval__notst2_skip
0002A606 <AmiBlitz3.ab3@13855>   MOVE.l #$f2066700,d1                                     ;fmove.s fp6,d6
0002A60C <AmiBlitz3.ab3@13856>   JSR writelong
0002A610 <AmiBlitz3.ab3@13859>   MOVE.w #$c4ff,d1                                         ;savetemp+regnum
0002A616 <AmiBlitz3.ab3@13860>   ADD.w parnum,d1
0002A61C <AmiBlitz3.ab3@13861>   JSR Atokejsr
0002A622 <AmiBlitz3.ab3@13862>    TST.w dontwrite
0002A626 <AmiBlitz3.ab3@13863>    BNE maineval__notst2_l1
0002A62C <AmiBlitz3.ab3@13864>    MOVE.l data1start,d1
0002A632 <AmiBlitz3.ab3@13865>    MOVE.l destpointer,a4
0002A636 <AmiBlitz3.ab3@13866>    ADD.l d1,-4(a4)
0002A63C <AmiBlitz3.ab3@13867>    MOVE.l destpointer,d1
0002A63E <AmiBlitz3.ab3@13868>    SUBQ.l #4,d1
0002A644 <AmiBlitz3.ab3@13869>    SUB.l destbufferstart,d1
0002A646 <AmiBlitz3.ab3@13870>    MOVE.l d2,-(a7)
0002A648 <AmiBlitz3.ab3@13871>    MOVE.l d1,d2
0002A64E <AmiBlitz3.ab3@13872>    JSR addhunkoffset
0002A650 <AmiBlitz3.ab3@13873>    MOVE.l (a7)+,d2
0002A654 <AmiBlitz3.ab3@13874> BRA maineval__skip
0002A65A <AmiBlitz3.ab3@13877>   ADDQ.w #2,a2offset
0002A660 <AmiBlitz3.ab3@13878>   MOVE.w pushd0wd,D1
0002A664 <AmiBlitz3.ab3@13879>   CMP.w #$3,D2                                             ;write parameter to stack
0002A668 <AmiBlitz3.ab3@13880>    BCS.w maineval__ok
0002A66E <AmiBlitz3.ab3@13881>   ADDQ.w #2,a2offset
0002A674 <AmiBlitz3.ab3@13882>   TST.b fpu
0002A678 <AmiBlitz3.ab3@13883>   BEQ maineval__notst2_nofpu
0002A67C <AmiBlitz3.ab3@13884>   CMP.w #5,d2
0002A680 <AmiBlitz3.ab3@13885>   BNE maineval__notst2_nofpu
0002A682 <AmiBlitz3.ab3@13886>   MOVEQ #0,d1
0002A688 <AmiBlitz3.ab3@13887>   MOVE.w regnum,d1
0002A68A <AmiBlitz3.ab3@13888>   ASL.l #7,d1
0002A690 <AmiBlitz3.ab3@13889>   OR.l #$f2276400,d1
0002A694 <AmiBlitz3.ab3@13890>   BSR writelong
0002A698 <AmiBlitz3.ab3@13891> BRA maineval__skip
0002A69E <AmiBlitz3.ab3@13894>   MOVE.w pushd0l,D1
0002A6A4 <AmiBlitz3.ab3@13897>    OR.w regnum,D1
0002A6A8 <AmiBlitz3.ab3@13898>    BSR.w writeword                                         ;nat
0002A6AE <AmiBlitz3.ab3@13901>   MOVE.w (A7)+,stackpar
0002A6B4 <AmiBlitz3.ab3@13902>   MOVE.w (A7)+,thisstuse
0002A6B6 <AmiBlitz3.ab3@13903> RTS
0002A6B8 <AmiBlitz3.ab3@13906> thisstuse: Ds.w 1
0002A6BA <AmiBlitz3.ab3@13909> ststfix:   Dc.b $58,$4F                                    ;ADDQ.W  #4,A7
0002A6BC <AmiBlitz3.ab3@13910> pushut:    Dc.b $3F,$00                                    ;MOVE.W  D0,-(A7)
0002A6C0 <AmiBlitz3.ab3@13915>   BSR.w eval4
0002A6CA <AmiBlitz3.ab3@13916>   SUBI.l #$12,forthsp
0002A6CC <AmiBlitz3.ab3@13917> RTS
0002A6CE <AmiBlitz3.ab3@13921>   MOVEQ.l #$01,D1
0002A6D2 <AmiBlitz3.ab3@13923>       MOVEA.l precsp(PC),A1
0002A6D4 <AmiBlitz3.ab3@13924>       MOVE.l A0,(A1)+
0002A6D6 <AmiBlitz3.ab3@13925>       MOVE.w D1,(A1)+
0002A6DC <AmiBlitz3.ab3@13926>       MOVE.l A1,precsp
0002A6E0 <AmiBlitz3.ab3@13927>    BSR.w calcloop
0002A6E2 <AmiBlitz3.ab3@13928>   TST.w D1
0002A6E6 <AmiBlitz3.ab3@13929>    BNE.w syntaxerr
0002A6EC <AmiBlitz3.ab3@13930>   SUBQ.l #6,precsp                                      ;pop the prec set up
0002A6EE <AmiBlitz3.ab3@13931> RTS
0002A6F2 <AmiBlitz3.ab3@13936>   BSR.w JL_0_9C24
0002A6F6 <AmiBlitz3.ab3@13939>   MOVEA.l precsp(PC),A1
0002A6F8 <AmiBlitz3.ab3@13940>   CMP.w -(A1),D1
0002A6FC <AmiBlitz3.ab3@13941>    BHI.w JL_0_9B0A
0002A6FE <AmiBlitz3.ab3@13942> RTS
0002A702 <AmiBlitz3.ab3@13947>   MOVEA.l precsp(PC),A1
0002A704 <AmiBlitz3.ab3@13948>   MOVE.l A0,(A1)+
0002A706 <AmiBlitz3.ab3@13949>   MOVE.w D1,(A1)+
0002A70C <AmiBlitz3.ab3@13950>   MOVE.l A1,precsp
0002A70E <AmiBlitz3.ab3@13951>   MOVE.w D2,-(A7)
0002A714 <AmiBlitz3.ab3@13952>   ADDQ.w #1,regnum
0002A718 <AmiBlitz3.ab3@13953>    BSR.w calcloop               ;constant optimizer
0002A71E <AmiBlitz3.ab3@13954>   SUBQ.w #1,regnum
0002A720 <AmiBlitz3.ab3@13955>   MOVE.w (A7)+,D3
0002A724 <AmiBlitz3.ab3@13956>   MOVEM.l D1/A0,-(A7)
0002A728 <AmiBlitz3.ab3@13957>    BEQ.w JL_0_9B2E
0002A72C <AmiBlitz3.ab3@13958>    BSR.w JL_0_9770
0002A730 <AmiBlitz3.ab3@13961>   BSR.w popprec
0002A734 <AmiBlitz3.ab3@13962>   BSR.w writecode
0002A738 <AmiBlitz3.ab3@13963>   MOVEA.l forthsp(PC),A0
0002A73C <AmiBlitz3.ab3@13964>   MOVE.w -$2(A0),D1
0002A740 <AmiBlitz3.ab3@13965>   OR.w -$14(A0),D1
0002A744 <AmiBlitz3.ab3@13966>   MOVE.w D1,-$14(A0)
0002A748 <AmiBlitz3.ab3@13967>    BNE.w JL_0_9C0E
0002A74E <AmiBlitz3.ab3@13968>   MOVE.w dontwrite,D1
0002A752 <AmiBlitz3.ab3@13969>    BNE.w JL_0_9C0E
0002A756 <AmiBlitz3.ab3@13970>    MOVEA.l -$24(A0),A0
0002A892 <AmiBlitz3.ab3@13972>  !newcalc
0002A896 <AmiBlitz3.ab3@13973>    BEQ 'l10
0002A89A <AmiBlitz3.ab3@13974>    MOVEA.l forthsp(PC),A0
0002A8A2 <AmiBlitz3.ab3@13975>    MOVE.w -$18(A0),lasta6
0002A8AA <AmiBlitz3.ab3@13976>    MOVE.l -$1C(A0),lasta6
0002A8AE <AmiBlitz3.ab3@13977>    MOVEA.l -$24(A0),A0
0002A8B4 <AmiBlitz3.ab3@13978>    MOVE.l A0,destpointer
0002A8BA <AmiBlitz3.ab3@13979>    MOVEA.l _mathffpbase,A6
0002A8C0 <AmiBlitz3.ab3@13980>    MOVEA.l ffplib,A1
0002A8C4 <AmiBlitz3.ab3@13981> BRA cont1
0002A8C8 <AmiBlitz3.ab3@13984>   MOVE.w #$2000,D1
0002A8CE <AmiBlitz3.ab3@13985>   OR.w regnum,D1
0002A8D2 <AmiBlitz3.ab3@13986>    BSR.w writeword
0002A8D4 <AmiBlitz3.ab3@13987>     MOVEQ #0,d1
0002A8DA <AmiBlitz3.ab3@13988>     MOVE.w regnum,D1
0002A8DC <AmiBlitz3.ab3@13989>     ASL.l #8,d1
0002A8DE <AmiBlitz3.ab3@13990>     ASL.l #2,d1
0002A8E4 <AmiBlitz3.ab3@13991>     OR.l #$f2000000,d1
0002A8E8 <AmiBlitz3.ab3@13992>     BSR writelong
0002A8EC <AmiBlitz3.ab3@13993>   MOVE.w #$4E75,D1
0002A8F0 <AmiBlitz3.ab3@13994>    BSR.w writeword
0002A8F8 <AmiBlitz3.ab3@13995>   MOVE.w -$18(A0),lasta6
0002A900 <AmiBlitz3.ab3@13996>   MOVE.l -$1C(A0),lasta6
0002A904 <AmiBlitz3.ab3@13997>   MOVEA.l -$24(A0),A0
0002A90A <AmiBlitz3.ab3@13998>   MOVE.l A0,destpointer
0002A90E <AmiBlitz3.ab3@13999>   MOVEM.l D2/A5,-(A7)
0002A914 <AmiBlitz3.ab3@14000>   MOVEA.l _mathffpbase,A6
0002A91A <AmiBlitz3.ab3@14001>   MOVEA.l ffplib,A1
0002A91E <AmiBlitz3.ab3@14002>   MOVE.w $A(A1),D0
0002A924 <AmiBlitz3.ab3@14003>   LEA _mathffpbase,A5
0002A926 <AmiBlitz3.ab3@14004>   SUBA.w D0,A5
0002A92C <AmiBlitz3.ab3@14005>   JSR Aclearcache                                          ;neg +
0002A932 <AmiBlitz3.ab3@14006>   CLR.l load_var_addr
0002A938 <AmiBlitz3.ab3@14007>   CLR.l imm_addr
0002A93E <AmiBlitz3.ab3@14008>   TST.w dontwrite
0002A942 <AmiBlitz3.ab3@14009>   BNE '1
0002A944 <AmiBlitz3.ab3@14010>   JSR (A0)                                                 ;calc constant inline expression
0002A948 <AmiBlitz3.ab3@14013>   MOVEM.l (A7)+,D2/A5
0002A94E <AmiBlitz3.ab3@14016>   MOVE.b d2,isconstantvalue
0002A954 <AmiBlitz3.ab3@14017>   MOVE.l d0,lastconstantvalue
0002A95A <AmiBlitz3.ab3@14018>   MOVE.w regnum,D1
0002A95C <AmiBlitz3.ab3@14019>   LSL.w #8,D1
0002A95E <AmiBlitz3.ab3@14020>   LSL.w #1,D1
0002A962 <AmiBlitz3.ab3@14021>   ORI.w #$203C,D1
0002A966 <AmiBlitz3.ab3@14022>   CMP.w #$3,D2
0002A96A <AmiBlitz3.ab3@14023>    BCC.w JL_0_9BCE
0002A96E <AmiBlitz3.ab3@14024>   ORI.w #$1000,D1
0002A972 <AmiBlitz3.ab3@14025>    BSR.w writeword
0002A974 <AmiBlitz3.ab3@14026>   MOVE.w D0,D1
0002A978 <AmiBlitz3.ab3@14027>    BSR.w writeword
0002A97C <AmiBlitz3.ab3@14028> BRA.w JL_0_9BD8
0002A982 <AmiBlitz3.ab3@14032>   TST.b iee                                                ;fpu constant
0002A986 <AmiBlitz3.ab3@14033>   BEQ 'l10
0002A98A <AmiBlitz3.ab3@14034>   CMP.b #5,d2
0002A98E <AmiBlitz3.ab3@14035>   BNE 'l10
0002A990 <AmiBlitz3.ab3@14036>   MOVEQ #0,d1
0002A996 <AmiBlitz3.ab3@14037>   MOVE.w regnum,D1
0002A998 <AmiBlitz3.ab3@14038>   ASL.l #7,d1
0002A99E <AmiBlitz3.ab3@14039>   OR.l #$f23c5400,d1
0002A9A2 <AmiBlitz3.ab3@14040>   BSR writelong
0002A9A4 <AmiBlitz3.ab3@14041>   SUBQ.l #8,a7
0002A9AA <AmiBlitz3.ab3@14042>   fmove.d fp0,0(a7)
0002A9AC <AmiBlitz3.ab3@14043>   MOVE.l (a7)+,d1
0002A9B0 <AmiBlitz3.ab3@14044>   BSR writelong
0002A9B2 <AmiBlitz3.ab3@14045>   MOVE.l (a7)+,d1
0002A9B6 <AmiBlitz3.ab3@14046>   BSR writelong
0002A9BA <AmiBlitz3.ab3@14047> BRA JL_0_9BD8
0002A9BE <AmiBlitz3.ab3@14050>   BSR.w writeword
0002A9C0 <AmiBlitz3.ab3@14051>   MOVE.l D0,D1
0002A9C4 <AmiBlitz3.ab3@14052>   BSR.w writelong
0002A9C8 <AmiBlitz3.ab3@14055>   MOVEA.l forthsp(PC),A0
0002A9CC <AmiBlitz3.ab3@14056>   MOVEA.l -$20(A0),A3
0002A9D2 <AmiBlitz3.ab3@14057>   MOVEA.l hunkoffsetbase,A2
0002A9D8 <AmiBlitz3.ab3@14058>   MOVE.l A3,hunkoffsetbase
0002A9DE <AmiBlitz3.ab3@14059>   MOVEA.l _execbase,A6
0002A9E0 <AmiBlitz3.ab3@14062>   CMPA.l A3,A2
0002A9E4 <AmiBlitz3.ab3@14063>   BEQ.w JL_0_9C0A
0002A9EA <AmiBlitz3.ab3@14064>   SUBQ.l #1,hunkoffsetcounter
0002A9EC <AmiBlitz3.ab3@14065>   MOVEA.l A2,A1
0002A9EE <AmiBlitz3.ab3@14066>   MOVEA.l (A2),A2
0002A9F0 <AmiBlitz3.ab3@14067>   MOVEQ.l #$8,D0
0002A9F6 <AmiBlitz3.ab3@14068>   MOVE.l mempool2,a0
0002A9FA <AmiBlitz3.ab3@14069>    JSR _FreePooled(A6)
0002A9FE <AmiBlitz3.ab3@14070> BRA.w JL_0_9BF0
0002AA02 <AmiBlitz3.ab3@14074>   MOVEA.l forthsp(PC),A0
0002AA06 <AmiBlitz3.ab3@14077>   LEA -$12(A0),A0
0002AA0C <AmiBlitz3.ab3@14078>   MOVE.l A0,forthsp
0002AA10 <AmiBlitz3.ab3@14079>   MOVEM.l (A7)+,D1/A0
0002AA14 <AmiBlitz3.ab3@14080>   BSR.w reget
0002AA18 <AmiBlitz3.ab3@14081> BRA.w JL_0_9AFE
0002AA1C <AmiBlitz3.ab3@14085>   BSR.w JL_0_A386
0002AA1E <AmiBlitz3.ab3@14086>   TST.w d0
0002AA22 <AmiBlitz3.ab3@14087>   BEQ JL_0_9C42
0002AA26 <AmiBlitz3.ab3@14088>   CMP.b #",",d0
0002AA2A <AmiBlitz3.ab3@14089>   BEQ JL_0_9C42
0002AA2E <AmiBlitz3.ab3@14090>   CMP.b #"@",d0                                            ;expandline @@
0002AA32 <AmiBlitz3.ab3@14091>   BEQ JL_0_9C42
0002AA38 <AmiBlitz3.ab3@14092>   LEA operators,A0
0002AA3A <AmiBlitz3.ab3@14095>    TST.w (A0)
0002AA3E <AmiBlitz3.ab3@14096>    BEQ.w JL_0_9C42
0002AA40 <AmiBlitz3.ab3@14097>   CMP.w (A0),D0
0002AA44 <AmiBlitz3.ab3@14098>    BEQ.w JL_0_9C46a
0002AA48 <AmiBlitz3.ab3@14099>   LEA $20(A0),A0
0002AA4C <AmiBlitz3.ab3@14100> BRA.w JL_0_9C2E
0002AA4E <AmiBlitz3.ab3@14104>   MOVEQ.l #$00,D1
0002AA50 <AmiBlitz3.ab3@14105> RTS
0002AA54 <AmiBlitz3.ab3@14109>   CMP.w #$3C,D0
0002AA58 <AmiBlitz3.ab3@14110>    BNE.w JL_0_9C70
0002AA5C <AmiBlitz3.ab3@14111>    BSR.w get1bytemain
0002AA60 <AmiBlitz3.ab3@14112>   CMP.w #$3D,D0
0002AA64 <AmiBlitz3.ab3@14113>    BNE.w JL_0_9C64
0002AA6A <AmiBlitz3.ab3@14114>   LEA ople,A0
0002AA6E <AmiBlitz3.ab3@14115> BRA.w JL_0_9CCA
0002AA72 <AmiBlitz3.ab3@14119>   CMP.w #$3E,D0
0002AA76 <AmiBlitz3.ab3@14120>    BNE.w JL_0_9C96
0002AA7A <AmiBlitz3.ab3@14121> BRA.w JL_0_9CC4
0002AA7E <AmiBlitz3.ab3@14125>   CMP.w #$3E,D0
0002AA82 <AmiBlitz3.ab3@14126>    BNE.w JL_0_9C9E
0002AA86 <AmiBlitz3.ab3@14127>    BSR.w get1bytemain
0002AA8A <AmiBlitz3.ab3@14128>   CMP.w #$3D,D0
0002AA8E <AmiBlitz3.ab3@14129>    BNE.w JL_0_9C8E
0002AA94 <AmiBlitz3.ab3@14130>   LEA opge,A0
0002AA98 <AmiBlitz3.ab3@14131> BRA.w JL_0_9CCA
0002AA9C <AmiBlitz3.ab3@14135>   CMP.w #$3C,D0
0002AAA0 <AmiBlitz3.ab3@14136>    BEQ.w JL_0_9CC4
0002AAAA <AmiBlitz3.ab3@14140>     MOVE.w oldqflag,instringon
0002AAB0 <AmiBlitz3.ab3@14141>     MOVEA.l lastsourcepos,A5
0002AAB4 <AmiBlitz3.ab3@14142> BRA.w JL_0_9CCA
0002AAB8 <AmiBlitz3.ab3@14146>   CMP.w #$3D,D0
0002AABC <AmiBlitz3.ab3@14147>    BNE.w JL_0_9CCA
0002AAC0 <AmiBlitz3.ab3@14148>    BSR.w get1bytemain
0002AAC4 <AmiBlitz3.ab3@14149>   CMP.w #$3E,D0
0002AAC8 <AmiBlitz3.ab3@14150>    BNE.w JL_0_9CBC
0002AACE <AmiBlitz3.ab3@14151>   LEA opge,A0
0002AAD2 <AmiBlitz3.ab3@14152> BRA.w JL_0_9CCA
0002AAD6 <AmiBlitz3.ab3@14156>   CMP.w #$3C,D0
0002AADA <AmiBlitz3.ab3@14157>   BNE.w JL_0_9C96
0002AAE0 <AmiBlitz3.ab3@14160>   LEA opne,A0
0002AAE4 <AmiBlitz3.ab3@14163>   MOVE.w $1E(A0),D1
0002AAE6 <AmiBlitz3.ab3@14164> RTS
0002AAE8 <AmiBlitz3.ab3@14171>   MOVE.w d2,d1
0002AAEA <AmiBlitz3.ab3@14172>   SUBQ.w #1,D1
0002AAEE <AmiBlitz3.ab3@14173>    BMI.w illoperr
0002AAF0 <AmiBlitz3.ab3@14174>   LSL.w #2,D1
0002AAF4 <AmiBlitz3.ab3@14175>   MOVE.l $2(A0,D1.W),D1
0002AAF8 <AmiBlitz3.ab3@14176>    BEQ.w illoperr
0002AAFA <AmiBlitz3.ab3@14177>   MOVEA.l D1,A0
0002AAFC <AmiBlitz3.ab3@14180> JMP (A0)
0002AB00 <AmiBlitz3.ab3@14196>   MOVEA.l precsp(PC),A1
0002AB06 <AmiBlitz3.ab3@14197>   CMPA.l #precstackf,A1
0002AB0A <AmiBlitz3.ab3@14198>    BCC.w pserr
0002AB0C <AmiBlitz3.ab3@14199>   MOVE.w -(A1),D1
0002AB0E <AmiBlitz3.ab3@14200>   MOVEA.l -(A1),A0
0002AB14 <AmiBlitz3.ab3@14201>   MOVE.l A1,precsp
0002AB16 <AmiBlitz3.ab3@14202> RTS
0002AB1A <AmiBlitz3.ab3@14205> precsp:      Dc.l precstack
0002AC16 <AmiBlitz3.ab3@14206> precstack:   Ds.l 63                                       ;ds 6*32 org source   ;Lotsa Room?
0002AC9A <AmiBlitz3.ab3@14207>              Ds.l 33
0002AC9C <AmiBlitz3.ab3@14213> mseq:  SEQ D0
0002AC9E <AmiBlitz3.ab3@14214> msne:    SNE D0
0002ACA0 <AmiBlitz3.ab3@14215> mslt:    SLT D0
0002ACA2 <AmiBlitz3.ab3@14216> msle:    SLE D0
0002ACA4 <AmiBlitz3.ab3@14217> msgt:    SGT D0
0002ACA6 <AmiBlitz3.ab3@14218> msge:    SGE D0
0002ACA8 <AmiBlitz3.ab3@14220> cmp0:    CMP.b D0,D0
0002ACAA <AmiBlitz3.ab3@14221> cmp1:    CMP.w D0,D0
0002ACAC <AmiBlitz3.ab3@14222> cmp2:    CMP.l D0,D0
0002ACB0 <AmiBlitz3.ab3@14226>   MOVE.w cmp0(PC),D1
0002ACB4 <AmiBlitz3.ab3@14227> BRA.w doeqcmp2                                            ;writecompare
0002ACB8 <AmiBlitz3.ab3@14231>   MOVE.w cmp0(PC),D1
0002ACBC <AmiBlitz3.ab3@14232> BRA.w donecmp2
0002ACC0 <AmiBlitz3.ab3@14236>   MOVE.w cmp0(PC),D1
0002ACC4 <AmiBlitz3.ab3@14237> BRA.w doltcmp2
0002ACC8 <AmiBlitz3.ab3@14241>   MOVE.w cmp0(PC),D1
0002ACCC <AmiBlitz3.ab3@14242> BRA.w dolecmp2
0002ACD0 <AmiBlitz3.ab3@14246>   MOVE.w cmp0(PC),D1
0002ACD4 <AmiBlitz3.ab3@14247> BRA.w dogtcmp2
0002ACD8 <AmiBlitz3.ab3@14252>   MOVE.w cmp0(PC),D1
0002ACDC <AmiBlitz3.ab3@14253> BRA.w dogecmp2
0002ACE0 <AmiBlitz3.ab3@14257>   MOVE.w cmp1(PC),D1
0002ACE4 <AmiBlitz3.ab3@14258> BRA.w doeqcmp2
0002ACE8 <AmiBlitz3.ab3@14262>   MOVE.w cmp1(PC),D1
0002ACEC <AmiBlitz3.ab3@14263> BRA.w donecmp2
0002ACF0 <AmiBlitz3.ab3@14267>   MOVE.w cmp1(PC),D1
0002ACF4 <AmiBlitz3.ab3@14268> BRA.w doltcmp2
0002ACF8 <AmiBlitz3.ab3@14272>   MOVE.w cmp1(PC),D1
0002ACFC <AmiBlitz3.ab3@14273> BRA.w dolecmp2
0002AD00 <AmiBlitz3.ab3@14277>   MOVE.w cmp1(PC),D1
0002AD04 <AmiBlitz3.ab3@14278> BRA.w dogtcmp2
0002AD08 <AmiBlitz3.ab3@14283>   MOVE.w cmp1(PC),D1
0002AD0C <AmiBlitz3.ab3@14284> BRA.w dogecmp2
0002AD10 <AmiBlitz3.ab3@14288>   MOVE.w cmp2(PC),D1                                   ;writecomparelong
0002AD14 <AmiBlitz3.ab3@14289> BRA doeqcmp2
0002AD18 <AmiBlitz3.ab3@14292>   MOVE.w cmp2(PC),D1
0002AD1C <AmiBlitz3.ab3@14293> BRA donecmp2
0002AD20 <AmiBlitz3.ab3@14297>   MOVE.w cmp2(PC),D1
0002AD24 <AmiBlitz3.ab3@14298> BRA.w doltcmp2
0002AD28 <AmiBlitz3.ab3@14302>   MOVE.w cmp2(PC),D1
0002AD2C <AmiBlitz3.ab3@14303> BRA.w dolecmp2
0002AD30 <AmiBlitz3.ab3@14307>   MOVE.w cmp2(PC),D1
0002AD34 <AmiBlitz3.ab3@14308> BRA.w dogtcmp2
0002AD38 <AmiBlitz3.ab3@14312>   MOVE.w cmp2(PC),D1
0002AD3C <AmiBlitz3.ab3@14313> BRA.w dogecmp2
0002AD3E <AmiBlitz3.ab3@14316> cfregat:  Ds.w 1
0002AD44 <AmiBlitz3.ab3@14320>   MOVE.w D1,libjsr+2
0002AD48 <AmiBlitz3.ab3@14321>    BSR.w JL_0_AD40
0002AD4A <AmiBlitz3.ab3@14322>   MOVE.l D4,D1
0002AD4E <AmiBlitz3.ab3@14323>    BSR.w JL_0_AD38
0002AD52 <AmiBlitz3.ab3@14324>   MOVE.w #$C900,D1
0002AD56 <AmiBlitz3.ab3@14325>    BSR.w Atokejsr
0002AD5A <AmiBlitz3.ab3@14326>    BSR.w JL_0_A352
0002AD60 <AmiBlitz3.ab3@14327>   MOVE.l libjsr,D1
0002AD64 <AmiBlitz3.ab3@14328>    BSR.w writelong
0002AD6E <AmiBlitz3.ab3@14329>   MOVE.w regnum,cfregat
0002AD74 <AmiBlitz3.ab3@14330>   CLR.w regnum
0002AD76 <AmiBlitz3.ab3@14331> RTS
0002AD80 <AmiBlitz3.ab3@14335>   MOVE.w cfregat,regnum
0002AD84 <AmiBlitz3.ab3@14336>    BSR.w JL_0_A36E
0002AD86 <AmiBlitz3.ab3@14337>   MOVE.l D5,D1
0002AD8A <AmiBlitz3.ab3@14338> BRA.w JL_0_AD38
0002AD8C <AmiBlitz3.ab3@14342>    MOVEQ.l #-$2A,D1
0002AD92 <AmiBlitz3.ab3@14343>    TST.b fpu
0002AD96 <AmiBlitz3.ab3@14344>    BEQ do_equal_float__nofpu
0002AD98 <AmiBlitz3.ab3@14345>    MOVEQ #0,d1
0002AD9E <AmiBlitz3.ab3@14346>    MOVE.w regnum,d1
0002ADA0 <AmiBlitz3.ab3@14347>    MOVE.l d1,d2
0002ADA2 <AmiBlitz3.ab3@14348>    ASL.l #7,d1
0002ADA4 <AmiBlitz3.ab3@14349>    ADDQ  #1,d2
0002ADA6 <AmiBlitz3.ab3@14350>    ASL.l #8,d2
0002ADA8 <AmiBlitz3.ab3@14351>    ASL.l #2,d2
0002ADAA <AmiBlitz3.ab3@14352>    OR.l d2,d1
0002ADB0 <AmiBlitz3.ab3@14353>    OR.l #$f2000038,d1
0002ADB6 <AmiBlitz3.ab3@14354>    JSR writelong
0002ADBA <AmiBlitz3.ab3@14355>    MOVE.w #$f240,d1
0002ADC0 <AmiBlitz3.ab3@14356>    OR.w regnum,d1
0002ADC4 <AmiBlitz3.ab3@14357>    BSR writeword
0002ADC6 <AmiBlitz3.ab3@14358>    MOVEQ.l #1,d2
0002ADCA <AmiBlitz3.ab3@14359>    MOVE.w #1,d1                                            ;fpu comp fseq
0002ADCE <AmiBlitz3.ab3@14360>    BSR writeword
0002ADD0 <AmiBlitz3.ab3@14361> RTS
0002ADD4 <AmiBlitz3.ab3@14364>    BSR.w docflib
0002ADD8 <AmiBlitz3.ab3@14365>    BSR.w doeqcmp
0002ADDC <AmiBlitz3.ab3@14366> BRA.w docflib2
0002ADDE <AmiBlitz3.ab3@14370>   MOVEQ.l #-$2A,D1
0002ADE4 <AmiBlitz3.ab3@14371>   TST.b fpu
0002ADE8 <AmiBlitz3.ab3@14372>    BEQ do_not_equal_float__nofpu
0002ADEA <AmiBlitz3.ab3@14373>    MOVEQ #0,d1
0002ADF0 <AmiBlitz3.ab3@14374>    MOVE.w regnum,d1
0002ADF2 <AmiBlitz3.ab3@14375>    MOVE.l d1,d2
0002ADF4 <AmiBlitz3.ab3@14376>    ASL.l #7,d1
0002ADF6 <AmiBlitz3.ab3@14377>    ADDQ  #1,d2
0002ADF8 <AmiBlitz3.ab3@14378>    ASL.l #8,d2
0002ADFA <AmiBlitz3.ab3@14379>    ASL.l #2,d2
0002ADFC <AmiBlitz3.ab3@14380>    OR.l d2,d1
0002AE02 <AmiBlitz3.ab3@14381>    OR.l #$f2000038,d1
0002AE08 <AmiBlitz3.ab3@14382>    JSR writelong
0002AE0C <AmiBlitz3.ab3@14383>    MOVE.w #$f240,d1
0002AE12 <AmiBlitz3.ab3@14384>    OR.w regnum,d1
0002AE16 <AmiBlitz3.ab3@14385>    BSR writeword
0002AE1C <AmiBlitz3.ab3@14386>    MOVE.l #1,d2
0002AE20 <AmiBlitz3.ab3@14387>    MOVE.w #$e,d1                                           ;fpu comp fsne
0002AE24 <AmiBlitz3.ab3@14388>    BSR writeword
0002AE26 <AmiBlitz3.ab3@14389> RTS
0002AE2A <AmiBlitz3.ab3@14392>    BSR.w docflib
0002AE2E <AmiBlitz3.ab3@14393>    BSR.w donecmp
0002AE32 <AmiBlitz3.ab3@14394> BRA.w docflib2
0002AE34 <AmiBlitz3.ab3@14398>   MOVEQ.l #-$2A,D1
0002AE3A <AmiBlitz3.ab3@14399>     TST.b fpu
0002AE3E <AmiBlitz3.ab3@14400>    BEQ do_littler_float__nofpu
0002AE40 <AmiBlitz3.ab3@14401>    MOVEQ #0,d1
0002AE46 <AmiBlitz3.ab3@14402>    MOVE.w regnum,d1
0002AE48 <AmiBlitz3.ab3@14403>    MOVE.l d1,d2
0002AE4A <AmiBlitz3.ab3@14404>    ASL.l #7,d1
0002AE4C <AmiBlitz3.ab3@14405>    ADDQ  #1,d2
0002AE4E <AmiBlitz3.ab3@14406>    ASL.l #8,d2
0002AE50 <AmiBlitz3.ab3@14407>    ASL.l #2,d2
0002AE52 <AmiBlitz3.ab3@14408>    OR.l d2,d1
0002AE58 <AmiBlitz3.ab3@14409>    OR.l #$f2000038,d1
0002AE5E <AmiBlitz3.ab3@14410>    JSR writelong
0002AE62 <AmiBlitz3.ab3@14411>    MOVE.w #$f240,d1
0002AE68 <AmiBlitz3.ab3@14412>    OR.w regnum,d1
0002AE6C <AmiBlitz3.ab3@14413>    BSR writeword
0002AE72 <AmiBlitz3.ab3@14414>    MOVE.l #$1,d2
0002AE76 <AmiBlitz3.ab3@14415>    MOVE.w #$14,d1                                          ;fpu comp fslt
0002AE7A <AmiBlitz3.ab3@14416>    BSR writeword
0002AE7C <AmiBlitz3.ab3@14417> RTS
0002AE80 <AmiBlitz3.ab3@14420>    BSR.w docflib
0002AE84 <AmiBlitz3.ab3@14421>    BSR.w doltcmp
0002AE88 <AmiBlitz3.ab3@14422> BRA.w docflib2
0002AE8A <AmiBlitz3.ab3@14426>   MOVEQ.l #-$2A,D1
0002AE90 <AmiBlitz3.ab3@14427>   TST.b fpu
0002AE94 <AmiBlitz3.ab3@14428>    BEQ do_littler_equal_float__nofpu
0002AE96 <AmiBlitz3.ab3@14429>    MOVEQ #0,d1
0002AE9C <AmiBlitz3.ab3@14430>    MOVE.w regnum,d1
0002AE9E <AmiBlitz3.ab3@14431>    MOVE.l d1,d2
0002AEA0 <AmiBlitz3.ab3@14432>    ASL.l #7,d1
0002AEA2 <AmiBlitz3.ab3@14433>    ADDQ  #1,d2
0002AEA4 <AmiBlitz3.ab3@14434>    ASL.l #8,d2
0002AEA6 <AmiBlitz3.ab3@14435>    ASL.l #2,d2
0002AEA8 <AmiBlitz3.ab3@14436>    OR.l d2,d1
0002AEAE <AmiBlitz3.ab3@14437>    OR.l #$f2000038,d1
0002AEB4 <AmiBlitz3.ab3@14438>    JSR writelong
0002AEB8 <AmiBlitz3.ab3@14439>    MOVE.w #$f240,d1
0002AEBE <AmiBlitz3.ab3@14440>    OR.w regnum,d1
0002AEC2 <AmiBlitz3.ab3@14441>    BSR writeword
0002AEC8 <AmiBlitz3.ab3@14442>    MOVE.l #1,d2
0002AECC <AmiBlitz3.ab3@14443>    MOVE.w #$15,d1                                          ;fpu comp fsle
0002AED0 <AmiBlitz3.ab3@14444>    BSR writeword
0002AED2 <AmiBlitz3.ab3@14445> RTS
0002AED6 <AmiBlitz3.ab3@14448>    BSR.w docflib
0002AEDA <AmiBlitz3.ab3@14449>    BSR.w dolecmp
0002AEDE <AmiBlitz3.ab3@14450> BRA.w docflib2
0002AEE0 <AmiBlitz3.ab3@14454>   MOVEQ.l #-$2A,D1
0002AEE6 <AmiBlitz3.ab3@14455>    TST.b fpu
0002AEEA <AmiBlitz3.ab3@14456>    BEQ do_greater_float__nofpu
0002AEEC <AmiBlitz3.ab3@14457>     MOVEQ #0,d1
0002AEF2 <AmiBlitz3.ab3@14458>    MOVE.w regnum,d1
0002AEF4 <AmiBlitz3.ab3@14459>    MOVE.l d1,d2
0002AEF6 <AmiBlitz3.ab3@14460>    ASL.l #7,d1
0002AEF8 <AmiBlitz3.ab3@14461>    ADDQ  #1,d2
0002AEFA <AmiBlitz3.ab3@14462>    ASL.l #8,d2
0002AEFC <AmiBlitz3.ab3@14463>    ASL.l #2,d2
0002AEFE <AmiBlitz3.ab3@14464>    OR.l d2,d1
0002AF04 <AmiBlitz3.ab3@14465>    OR.l #$f2000038,d1
0002AF0A <AmiBlitz3.ab3@14466>    JSR writelong
0002AF0E <AmiBlitz3.ab3@14467>    MOVE.w #$f240,d1
0002AF14 <AmiBlitz3.ab3@14468>    OR.w regnum,d1
0002AF18 <AmiBlitz3.ab3@14469>    BSR writeword
0002AF1E <AmiBlitz3.ab3@14470>    MOVE.l #1,d2
0002AF22 <AmiBlitz3.ab3@14471>    MOVE.w #$12,d1                                          ;fpu comp fsgt
0002AF26 <AmiBlitz3.ab3@14472>    BSR writeword
0002AF28 <AmiBlitz3.ab3@14473> RTS
0002AF2C <AmiBlitz3.ab3@14476>    BSR.w docflib
0002AF30 <AmiBlitz3.ab3@14477>    BSR.w dogtcmp
0002AF34 <AmiBlitz3.ab3@14478> BRA.w docflib2
0002AF36 <AmiBlitz3.ab3@14482>   MOVEQ.l #-$2A,D1
0002AF3C <AmiBlitz3.ab3@14483>  TST.b fpu
0002AF40 <AmiBlitz3.ab3@14484>    BEQ do_greater_equal_float__nofpu
0002AF42 <AmiBlitz3.ab3@14485>    MOVEQ #0,d1
0002AF48 <AmiBlitz3.ab3@14486>    MOVE.w regnum,d1
0002AF4A <AmiBlitz3.ab3@14487>    MOVE.l d1,d2
0002AF4C <AmiBlitz3.ab3@14488>    ASL.l #7,d1
0002AF4E <AmiBlitz3.ab3@14489>    ADDQ  #1,d2
0002AF50 <AmiBlitz3.ab3@14490>    ASL.l #8,d2
0002AF52 <AmiBlitz3.ab3@14491>    ASL.l #2,d2
0002AF54 <AmiBlitz3.ab3@14492>    OR.l d2,d1
0002AF5A <AmiBlitz3.ab3@14493>    OR.l #$f2000038,d1
0002AF60 <AmiBlitz3.ab3@14494>    JSR writelong
0002AF64 <AmiBlitz3.ab3@14495>    MOVE.w #$f240,d1
0002AF6A <AmiBlitz3.ab3@14496>    OR.w regnum,d1
0002AF6E <AmiBlitz3.ab3@14497>    BSR writeword
0002AF74 <AmiBlitz3.ab3@14498>    MOVE.l #1,d2
0002AF78 <AmiBlitz3.ab3@14499>    MOVE.w #$13,d1                                          ;fpu comp fsge
0002AF7C <AmiBlitz3.ab3@14500>    BSR writeword
0002AF7E <AmiBlitz3.ab3@14501> RTS
0002AF82 <AmiBlitz3.ab3@14504>    BSR.w docflib
0002AF86 <AmiBlitz3.ab3@14505>    BSR.w dogecmp
0002AF8A <AmiBlitz3.ab3@14506> BRA.w docflib2
0002AF90 <AmiBlitz3.ab3@14511>   MOVE.l #$CE00,D1
0002AF96 <AmiBlitz3.ab3@14512>    MOVE.l d1,lastinstruction
0002AF9A <AmiBlitz3.ab3@14513>    BSR.w Atokejsr
0002AF9E <AmiBlitz3.ab3@14514> BRA.w doeqcmp
0002AFA4 <AmiBlitz3.ab3@14518>   MOVE.l #$CE00,D1
0002AFAA <AmiBlitz3.ab3@14519>    MOVE.l d1,lastinstruction
0002AFAE <AmiBlitz3.ab3@14520>    BSR.w Atokejsr
0002AFB2 <AmiBlitz3.ab3@14521> BRA.w donecmp
0002AFB8 <AmiBlitz3.ab3@14525>   MOVE.l #$CE00,D1
0002AFBE <AmiBlitz3.ab3@14526>    MOVE.l d1,lastinstruction
0002AFC2 <AmiBlitz3.ab3@14527>    BSR.w Atokejsr
0002AFC6 <AmiBlitz3.ab3@14528> BRA.w doltcmp
0002AFCC <AmiBlitz3.ab3@14532>   MOVE.l #$CE00,D1
0002AFD2 <AmiBlitz3.ab3@14533>    MOVE.l d1,lastinstruction
0002AFD6 <AmiBlitz3.ab3@14534>    BSR.w Atokejsr
0002AFDA <AmiBlitz3.ab3@14535> BRA.w dolecmp
0002AFE0 <AmiBlitz3.ab3@14539>   MOVE.l #$CE00,D1
0002AFE6 <AmiBlitz3.ab3@14540>    MOVE.l d1,lastinstruction
0002AFEA <AmiBlitz3.ab3@14541>    BSR.w Atokejsr
0002AFEE <AmiBlitz3.ab3@14542> BRA.w dogtcmp
0002AFF4 <AmiBlitz3.ab3@14546>   MOVE.l #$CE00,D1
0002AFFA <AmiBlitz3.ab3@14547>    MOVE.l d1,lastinstruction
0002AFFE <AmiBlitz3.ab3@14548>    BSR.w Atokejsr
0002B002 <AmiBlitz3.ab3@14549> BRA.w dogecmp
0002B008 <AmiBlitz3.ab3@14554>   TST.b fast                                               ;compare
0002B00C <AmiBlitz3.ab3@14555>   BEQ cmpit__org
0002B012 <AmiBlitz3.ab3@14559>   MOVE.l destpointer,a0
0002B018 <AmiBlitz3.ab3@14560>   SUB.l imm_addr,a0
0002B01E <AmiBlitz3.ab3@14561>   CMP.l #6,a0
0002B022 <AmiBlitz3.ab3@14562>   BNE cmpit__l11
0002B028 <AmiBlitz3.ab3@14563>   MOVE.l imm_addr,a0
0002B030 <AmiBlitz3.ab3@14564>   CMP.w #$223c,imm_addr
0002B034 <AmiBlitz3.ab3@14565>   BNE cmpit__org
0002B03A <AmiBlitz3.ab3@14566>   ADD.w #$8e80,-6(a4)
0002B040 <AmiBlitz3.ab3@14569>   CLR.l imm_addr
0002B042 <AmiBlitz3.ab3@14570> RTS
0002B048 <AmiBlitz3.ab3@14573>   CMP.l #4,a0
0002B04C <AmiBlitz3.ab3@14574>   BNE cmpit__l10
0002B050 <AmiBlitz3.ab3@14575>   CMP.b #2,d3
0002B054 <AmiBlitz3.ab3@14576>   BNE cmpit__l11b
0002B05A <AmiBlitz3.ab3@14577>   ADD.w #$7e40,-4(a4)
0002B05C <AmiBlitz3.ab3@14578> RTS
0002B062 <AmiBlitz3.ab3@14581>  ADD.w #$7e00,-4(a4)
0002B064 <AmiBlitz3.ab3@14582> RTS
0002B06A <AmiBlitz3.ab3@14585>    MOVE.l destpointer,a0
0002B070 <AmiBlitz3.ab3@14586>    SUB.l load_var_addr,a0
0002B074 <AmiBlitz3.ab3@14587>    CMP.w #4,a0
0002B078 <AmiBlitz3.ab3@14588>    BNE cmpit__org
0002B07C <AmiBlitz3.ab3@14589>    CMP.b #3,d3
0002B080 <AmiBlitz3.ab3@14590>    BCS cmpit__lv1
0002B086 <AmiBlitz3.ab3@14591>    CLR.l load_var_addr
0002B08C <AmiBlitz3.ab3@14592>    ADD.w #$9080-$200,-4(a4)
0002B08E <AmiBlitz3.ab3@14593> RTS
0002B092 <AmiBlitz3.ab3@14596>   CMP.b #2,d3
0002B096 <AmiBlitz3.ab3@14597>    BNE cmpit__org
0002B09C <AmiBlitz3.ab3@14598>    CLR.l load_var_addr
0002B0A2 <AmiBlitz3.ab3@14599>    ADD.w #$8040-$200,-4(a4)
0002B0A4 <AmiBlitz3.ab3@14600> RTS
0002B0AA <AmiBlitz3.ab3@14603>   MOVE.w regnum,D3
0002B0AC <AmiBlitz3.ab3@14604>   OR.w D3,D1
0002B0AE <AmiBlitz3.ab3@14605>   LSL.w #8,D3
0002B0B0 <AmiBlitz3.ab3@14606>   LSL.w #1,D3
0002B0B2 <AmiBlitz3.ab3@14607>   OR.w D3,D1
0002B0B4 <AmiBlitz3.ab3@14608>   ADDQ.w #1,D1
0002B0B8 <AmiBlitz3.ab3@14609> BRA.w writeword
0002B0BC <AmiBlitz3.ab3@14613>    BSR.w cmpit
0002B0C0 <AmiBlitz3.ab3@14616>    MOVE.w mseq(PC),D1
0002B0C4 <AmiBlitz3.ab3@14617> BRA.w cpoke
0002B0C8 <AmiBlitz3.ab3@14621>   BSR.w cmpit
0002B0CC <AmiBlitz3.ab3@14624>   MOVE.w msne(PC),D1
0002B0D0 <AmiBlitz3.ab3@14625> BRA.w cpoke
0002B0D4 <AmiBlitz3.ab3@14629>   BSR.w cmpit
0002B0D8 <AmiBlitz3.ab3@14632>    MOVE.w mslt(PC),D1
0002B0DC <AmiBlitz3.ab3@14633> BRA.w cpoke
0002B0E0 <AmiBlitz3.ab3@14637>    BSR.w cmpit
0002B0E4 <AmiBlitz3.ab3@14640>    MOVE.w msle(PC),D1
0002B0E8 <AmiBlitz3.ab3@14641> BRA.w cpoke
0002B0EC <AmiBlitz3.ab3@14645>    BSR.w cmpit
0002B0F0 <AmiBlitz3.ab3@14648>    MOVE.w msgt(PC),D1
0002B0F4 <AmiBlitz3.ab3@14649> BRA.w cpoke
0002B0F8 <AmiBlitz3.ab3@14653>   BSR.w cmpit
0002B0FC <AmiBlitz3.ab3@14656>    MOVE.w msge(PC),D1
0002B102 <AmiBlitz3.ab3@14659>    OR.w regnum,D1
0002B106 <AmiBlitz3.ab3@14660>    CMP.w #5,d2
0002B10A <AmiBlitz3.ab3@14661>    BNE cpoke__nod0
0002B10E <AmiBlitz3.ab3@14662>    CMP.w #5,d3
0002B112 <AmiBlitz3.ab3@14663>    BNE cpoke__nod0
0002B114 <AmiBlitz3.ab3@14664>    MOVE.l d1,-(a7)
0002B11A <AmiBlitz3.ab3@14665>    MOVE.l #$44004a00,d1                                    ;68k neg.b:tst.b
0002B11E <AmiBlitz3.ab3@14666>    BSR writelong
0002B120 <AmiBlitz3.ab3@14667>    MOVE.l (a7)+,d1
0002B124 <AmiBlitz3.ab3@14670>    BSR.w writeword                                         ;writeseq
0002B126 <AmiBlitz3.ab3@14671>    MOVEQ.l #1,d2
0002B12C <AmiBlitz3.ab3@14672>    MOVE.l lasttoken,d1
0002B132 <AmiBlitz3.ab3@14673>     TST.b fast
0002B136 <AmiBlitz3.ab3@14674>     BEQ.s cpoke__l11
0002B13C <AmiBlitz3.ab3@14675>    CMP.l #$800b,d1
0002B140 <AmiBlitz3.ab3@14676>    BEQ cpoke__l10
0002B144 <AmiBlitz3.ab3@14679>   MOVE.w #$4880,D1                                         ;ext.w D regat
0002B14A <AmiBlitz3.ab3@14680>   OR.w regnum,D1
0002B14E <AmiBlitz3.ab3@14681>    BSR.w writeword                                         ;writeext.w
0002B150 <AmiBlitz3.ab3@14682>   MOVEQ.l #$02,D2                                          ;type now WORD!
0002B152 <AmiBlitz3.ab3@14685> RTS
0002B156 <AmiBlitz3.ab3@14690>   MOVE.w #$D040,D1
0002B158 <AmiBlitz3.ab3@14691>   MOVEQ.l #$02,D2                                          ;writeaddword   ;now a word
0002B15C <AmiBlitz3.ab3@14692> BRA.w doplus2
0002B160 <AmiBlitz3.ab3@14696>   MOVE.w #$D040,D1
0002B162 <AmiBlitz3.ab3@14697>   MOVEQ.l #$03,D2                                          ;now a long
0002B166 <AmiBlitz3.ab3@14698>    BSR.w doplus2
0002B16A <AmiBlitz3.ab3@14699> BRA.w convert_word_to_long
0002B16E <AmiBlitz3.ab3@14703>   MOVE.w #$D080,D1                                         ;writeaddlong
0002B170 <AmiBlitz3.ab3@14706>   MOVE.w d1,a1
0002B176 <AmiBlitz3.ab3@14707>   TST.b fast
0002B17A <AmiBlitz3.ab3@14708>   BEQ doplus2__l10
0002B17C <AmiBlitz3.ab3@14712>   ASR.w #8,d1
0002B180 <AmiBlitz3.ab3@14713>   CMP.b #$90,d1
0002B184 <AmiBlitz3.ab3@14714>   BEQ doplus2__sub1
0002B188 <AmiBlitz3.ab3@14715>   CMP.b #$d0,d1
0002B18C <AmiBlitz3.ab3@14716>   BNE doplus2__l10
0002B190 <AmiBlitz3.ab3@14717>   CMP.b #3,d3
0002B194 <AmiBlitz3.ab3@14718>   BCS doplus2__lq10
0002B19A <AmiBlitz3.ab3@14719>   TST.b quickadd
0002B1A0 <AmiBlitz3.ab3@14723>    MOVE.l destpointer,a0
0002B1A6 <AmiBlitz3.ab3@14724>    CLR.b quickadd
0002B1AC <AmiBlitz3.ab3@14725>    CLR.l load_var_addr
0002B1B2 <AmiBlitz3.ab3@14726>    SUB.l imm_addr,a0
0002B1B6 <AmiBlitz3.ab3@14727>    CMP.w #6,a0
0002B1BA <AmiBlitz3.ab3@14728>    BEQ doplus2__li10
0002B1BE <AmiBlitz3.ab3@14729>    CMP.w #4,a0
0002B1C2 <AmiBlitz3.ab3@14730>    BNE.s doplus2__li1
0002B1C8 <AmiBlitz3.ab3@14731>    CLR.l imm_addr
0002B1CE <AmiBlitz3.ab3@14732>    ADD.w #$a040-$200,-4(a4)
0002B1D0 <AmiBlitz3.ab3@14733> RTS
0002B1D2 <AmiBlitz3.ab3@14736>    MOVE.l a4,a0
0002B1D8 <AmiBlitz3.ab3@14737>    SUB.l load_var_addr,a0
0002B1DE <AmiBlitz3.ab3@14738>    CMP.l #$a,a0
0002B1E2 <AmiBlitz3.ab3@14739>    BNE doplus2__l10e
0002B1E8 <AmiBlitz3.ab3@14740>    CLR.l load_var_addr
0002B1EC <AmiBlitz3.ab3@14741>    MOVE.w -$8(a4),d1
0002B1F2 <AmiBlitz3.ab3@14742>    MOVE.l -$4(a4),-$8(a4)
0002B1F6 <AmiBlitz3.ab3@14743>    MOVE.w d1,-$4(a4)
0002B1FC <AmiBlitz3.ab3@14744>    SUB.w #$1980,-$a(a4)
0002B202 <AmiBlitz3.ab3@14745>    SUBQ.l #2,destpointer
0002B204 <AmiBlitz3.ab3@14746> RTS
0002B20A <AmiBlitz3.ab3@14749>   CLR.b quickadd
0002B20E <AmiBlitz3.ab3@14750> BRA doplus2__l10
0002B214 <AmiBlitz3.ab3@14753>    CLR.l imm_addr
0002B218 <AmiBlitz3.ab3@14754>    TST.l -4(a4)                                            ;skip If ADD.l #0,dx
0002B21C <AmiBlitz3.ab3@14755>    BNE doplus2__doit
0002B222 <AmiBlitz3.ab3@14756>    SUBQ.l #6,destpointer
0002B224 <AmiBlitz3.ab3@14757> RTS
0002B22A <AmiBlitz3.ab3@14760>    ADD.w #$b080-$200,-6(a4)
0002B22C <AmiBlitz3.ab3@14761> RTS
0002B232 <AmiBlitz3.ab3@14764>    MOVE.l destpointer,a0
0002B238 <AmiBlitz3.ab3@14765>    SUB.l load_var_addr,a0
0002B23C <AmiBlitz3.ab3@14766>    CMP.w #4,a0
0002B240 <AmiBlitz3.ab3@14767>    BNE doplus2__l10
0002B244 <AmiBlitz3.ab3@14768>    CMP.b #3,d3
0002B248 <AmiBlitz3.ab3@14769>    BNE doplus2__lv1
0002B24E <AmiBlitz3.ab3@14770>    CLR.l load_var_addr
0002B254 <AmiBlitz3.ab3@14771>    ADD.w #$b080-$200,-4(a4)
0002B256 <AmiBlitz3.ab3@14772> RTS
0002B25A <AmiBlitz3.ab3@14775>   CMP.b #2,d3
0002B25E <AmiBlitz3.ab3@14776>   BNE doplus2__l10
0002B264 <AmiBlitz3.ab3@14777>   CLR.l load_var_addr
0002B26A <AmiBlitz3.ab3@14778>   ADD.w #$a040-$200,-4(a4)
0002B26C <AmiBlitz3.ab3@14779> RTS
0002B272 <AmiBlitz3.ab3@14782>   MOVE.w regnum,D3
0002B274 <AmiBlitz3.ab3@14783>   MOVE.w a1,d1
0002B276 <AmiBlitz3.ab3@14784>   OR.w D3,D1
0002B278 <AmiBlitz3.ab3@14785>   ADDQ.w #1,D1
0002B27A <AmiBlitz3.ab3@14786>   LSL.w #8,D3
0002B27C <AmiBlitz3.ab3@14787>   LSL.w #1,D3
0002B27E <AmiBlitz3.ab3@14788>   OR.w D3,D1
0002B282 <AmiBlitz3.ab3@14789> BRA.w writeword
0002B286 <AmiBlitz3.ab3@14792>    CMP.b #3,d3
0002B28A <AmiBlitz3.ab3@14793>    BCS doplus2__sub1_lq10
0002B290 <AmiBlitz3.ab3@14794>    TST.b quickadd
0002B296 <AmiBlitz3.ab3@14798>    MOVE.l destpointer,a0
0002B29C <AmiBlitz3.ab3@14799>    CLR.b quickadd
0002B2A2 <AmiBlitz3.ab3@14800>    CLR.l load_var_addr
0002B2A8 <AmiBlitz3.ab3@14801>    SUB.l imm_addr,a0
0002B2AC <AmiBlitz3.ab3@14802>    CMP.w #6,a0
0002B2B0 <AmiBlitz3.ab3@14803>    BEQ doplus2__sub1_li10
0002B2B4 <AmiBlitz3.ab3@14804>    CMP.w #4,a0
0002B2B8 <AmiBlitz3.ab3@14805>    BNE.s doplus2__sub1_li1
0002B2BE <AmiBlitz3.ab3@14806>    CLR.l imm_addr
0002B2C4 <AmiBlitz3.ab3@14807>    ADD.w #$6040-$200,-4(a4)
0002B2C6 <AmiBlitz3.ab3@14808> RTS
0002B2C8 <AmiBlitz3.ab3@14811>    MOVE.l a4,a0
0002B2CE <AmiBlitz3.ab3@14812>     SUB.l load_var_addr,a0
0002B2D4 <AmiBlitz3.ab3@14813>     CMP.l #$a,a0
0002B2D8 <AmiBlitz3.ab3@14814>     BNE doplus2__sub1_l10e
0002B2DE <AmiBlitz3.ab3@14815>    CLR.l load_var_addr
0002B2E2 <AmiBlitz3.ab3@14816>    MOVE.w -$8(a4),d1
0002B2E8 <AmiBlitz3.ab3@14817>    MOVE.l -$4(a4),-$8(a4)
0002B2EC <AmiBlitz3.ab3@14818>    MOVE.w d1,-$4(a4)
0002B2F2 <AmiBlitz3.ab3@14819>    SUB.w #$1b80,-$a(a4)
0002B2F8 <AmiBlitz3.ab3@14820>    SUBQ.l #2,destpointer
0002B2FA <AmiBlitz3.ab3@14821> RTS
0002B300 <AmiBlitz3.ab3@14824>   CLR.b quickadd
0002B304 <AmiBlitz3.ab3@14825> BRA doplus2__sub1_l10
0002B30A <AmiBlitz3.ab3@14828>    CLR.l imm_addr
0002B310 <AmiBlitz3.ab3@14829>    ADD.w #$7080-$200,-6(a4)
0002B312 <AmiBlitz3.ab3@14830> RTS
0002B318 <AmiBlitz3.ab3@14833>    MOVE.l destpointer,a0
0002B31E <AmiBlitz3.ab3@14834>    SUB.l load_var_addr,a0
0002B322 <AmiBlitz3.ab3@14835>    CMP.w #4,a0
0002B326 <AmiBlitz3.ab3@14836>    BNE doplus2__sub1_l10
0002B32A <AmiBlitz3.ab3@14837>    CMP.b #3,d3
0002B32E <AmiBlitz3.ab3@14838>    BNE doplus2__sub1_lv1
0002B334 <AmiBlitz3.ab3@14839>    CLR.l load_var_addr
0002B33A <AmiBlitz3.ab3@14840>    ADD.w #$7080-$200,-4(a4)
0002B33C <AmiBlitz3.ab3@14841> RTS
0002B340 <AmiBlitz3.ab3@14844>    CMP.b #2,d3
0002B344 <AmiBlitz3.ab3@14845>    BNE doplus2__sub1_l10
0002B34A <AmiBlitz3.ab3@14846>    CLR.l load_var_addr
0002B350 <AmiBlitz3.ab3@14847>    ADD.w #$6040-$200,-4(a4)
0002B352 <AmiBlitz3.ab3@14848> RTS
0002B358 <AmiBlitz3.ab3@14851>   MOVE.w regnum,D3
0002B35A <AmiBlitz3.ab3@14852>   MOVE.w a1,d1
0002B35C <AmiBlitz3.ab3@14853>   OR.w D3,D1
0002B35E <AmiBlitz3.ab3@14854>   ADDQ.w #1,D1
0002B360 <AmiBlitz3.ab3@14855>   LSL.w #8,D3
0002B362 <AmiBlitz3.ab3@14856>   LSL.w #1,D3
0002B364 <AmiBlitz3.ab3@14857>   OR.w D3,D1
0002B368 <AmiBlitz3.ab3@14858> BRA.w writeword
0002B36A <AmiBlitz3.ab3@14862>   MOVEQ #0,d0
0002B370 <AmiBlitz3.ab3@14863>   MOVE.w regnum,d0
0002B372 <AmiBlitz3.ab3@14864>   ADDQ #1,d0
0002B374 <AmiBlitz3.ab3@14865>   ASL.w #8,d0
0002B376 <AmiBlitz3.ab3@14866>   ASL.w #2,d0
0002B37C <AmiBlitz3.ab3@14867>   MOVE.l #$f2000022,d1                                     ;fpu add
0002B37E <AmiBlitz3.ab3@14868>   OR.l d0,d1
0002B384 <AmiBlitz3.ab3@14869>   MOVE.w regnum,d0
0002B386 <AmiBlitz3.ab3@14870>   ASL.w #7,d0
0002B388 <AmiBlitz3.ab3@14871>   OR.l d0,d1
0002B38C <AmiBlitz3.ab3@14872> BRA.w writelong
0002B392 <AmiBlitz3.ab3@14878>   TST.b iee
0002B396 <AmiBlitz3.ab3@14879>   BNE do_plus_float__fadd1
0002B39A <AmiBlitz3.ab3@14880>   MOVE.w #$FFBE,D1                                         ;#-66,d1 org soruce ;floatadd
0002B3A0 <AmiBlitz3.ab3@14883>    MOVE.w D1,libjsr+2
0002B3A4 <AmiBlitz3.ab3@14884>    BSR.w JL_0_AD40
0002B3A6 <AmiBlitz3.ab3@14885>   MOVE.l D4,D1
0002B3AA <AmiBlitz3.ab3@14886>    BSR.w JL_0_AD38
0002B3AE <AmiBlitz3.ab3@14887>   MOVE.w #$C900,D1
0002B3B2 <AmiBlitz3.ab3@14888>    BSR.w Atokejsr
0002B3B6 <AmiBlitz3.ab3@14889>    BSR.w JL_0_A352
0002B3BC <AmiBlitz3.ab3@14890>   MOVE.l libjsr,D1
0002B3C0 <AmiBlitz3.ab3@14891>    BSR.w writelong
0002B3C4 <AmiBlitz3.ab3@14892>    BSR.w JL_0_A36E
0002B3C6 <AmiBlitz3.ab3@14893>   MOVE.l D5,D1
0002B3CA <AmiBlitz3.ab3@14894> BRA.w JL_0_AD38
0002B3D0 <AmiBlitz3.ab3@14898>   MOVE.w regnum,D1
0002B3D2 <AmiBlitz3.ab3@14899>   LSL.w #8,D1
0002B3D4 <AmiBlitz3.ab3@14900>   LSL.w #1,D1
0002B3D6 <AmiBlitz3.ab3@14901>   MOVE.w D1,-(A7)
0002B3DA <AmiBlitz3.ab3@14902>   CMP.w #3072,d1
0002B3DE <AmiBlitz3.ab3@14903>   BEQ 'l1
0002B3E4 <AmiBlitz3.ab3@14904>   OR.w addcode,D1                                          ;move.l (a7)+,d0
0002B3E8 <AmiBlitz3.ab3@14905> BRA 'l2
0002B3EC <AmiBlitz3.ab3@14908>    MOVE.w #$588f,d1                                        ;addq.l #4,a7
0002B3F0 <AmiBlitz3.ab3@14911>    BSR.w writeword
0002B3F2 <AmiBlitz3.ab3@14912>   MOVE.w (A7)+,D1
0002B3F8 <AmiBlitz3.ab3@14913>   OR.w addcode+2,D1                                        ;native string add.l d0,(a7)
0002B3FC <AmiBlitz3.ab3@14914> BRA.w writeword
0002B400 <AmiBlitz3.ab3@14920>   MOVE.w #$9040,D1
0002B404 <AmiBlitz3.ab3@14921> BRA.w doplus2
0002B408 <AmiBlitz3.ab3@14925>   MOVE.w #$9040,D1
0002B40C <AmiBlitz3.ab3@14926> BRA.w doplus2
0002B410 <AmiBlitz3.ab3@14930>   MOVE.w #$9080,D1
0002B414 <AmiBlitz3.ab3@14931> BRA.w doplus2
0002B41A <AmiBlitz3.ab3@14935>    TST.b iee
0002B41E <AmiBlitz3.ab3@14936>     BNE do_minus_float__fs1
0002B422 <AmiBlitz3.ab3@14937>   MOVE.w #$FFB8,D1                                         ;floatsub
0002B426 <AmiBlitz3.ab3@14938> BRA.w doflib
0002B428 <AmiBlitz3.ab3@14941>   MOVEQ #0,d0
0002B42E <AmiBlitz3.ab3@14942>   MOVE.w regnum,d0
0002B430 <AmiBlitz3.ab3@14943>   ADDQ #1,d0
0002B432 <AmiBlitz3.ab3@14944>   ASL.w #8,d0
0002B434 <AmiBlitz3.ab3@14945>   ASL.w #2,d0
0002B43A <AmiBlitz3.ab3@14946>   MOVE.l #$f2000028,d1
0002B43C <AmiBlitz3.ab3@14947>   OR.l d0,d1
0002B442 <AmiBlitz3.ab3@14948>   MOVE.w regnum,d0
0002B444 <AmiBlitz3.ab3@14949>   ASL.w #7,d0
0002B446 <AmiBlitz3.ab3@14950>   OR.l d0,d1
0002B44A <AmiBlitz3.ab3@14951> BRA.w writelong
0002B44E <AmiBlitz3.ab3@14957>   MOVE.w #$C1C0,D1
0002B450 <AmiBlitz3.ab3@14958>   MOVEQ.l #$02,D2                                          ;now a word
0002B454 <AmiBlitz3.ab3@14959> BRA.w doplus2
0002B458 <AmiBlitz3.ab3@14963>   MOVE.w #$C1C0,D1
0002B45A <AmiBlitz3.ab3@14964>   MOVEQ.l #$03,D2                                          ;now a long.
0002B45E <AmiBlitz3.ab3@14965> BRA.w doplus2
0002B462 <AmiBlitz3.ab3@14969>   MOVE.w #$CA00,D1                                         ;quickmul
0002B466 <AmiBlitz3.ab3@14970> BRA.w domylib
0002B46C <AmiBlitz3.ab3@14974>   TST.b fast
0002B470 <AmiBlitz3.ab3@14975>   BNE.s 'l10
0002B474 <AmiBlitz3.ab3@14976>   MOVE.w #$CA01,D1                                         ;writelongmul
0002B478 <AmiBlitz3.ab3@14977> BRA.w domylib
0002B47E <AmiBlitz3.ab3@14986>    MOVE.l destpointer,a0
0002B484 <AmiBlitz3.ab3@14987>    SUB.l imm_addr,a0
0002B488 <AmiBlitz3.ab3@14988>    CMP.w #6,a0
0002B48C <AmiBlitz3.ab3@14989>    BNE 'li1
0002B48E <AmiBlitz3.ab3@14990>    MOVEQ.l #2,d1
0002B490 <AmiBlitz3.ab3@14991>    MOVEQ #1,d3
0002B494 <AmiBlitz3.ab3@14994>   CMP.l -4(a4),d1
0002B498 <AmiBlitz3.ab3@14995>    BEQ 'oklsl
0002B49A <AmiBlitz3.ab3@14996>     LSL.l #1,d1
0002B4A0 <AmiBlitz3.ab3@14997>     ADD.l #1,d3
0002B4A6 <AmiBlitz3.ab3@14998>     CMP.l #9,d3
0002B4AA <AmiBlitz3.ab3@14999>     BNE 'ag
0002B4AE <AmiBlitz3.ab3@15000>    MOVE.w -2(a4),d1
0002B4B2 <AmiBlitz3.ab3@15001>    BSR writeword
0002B4B8 <AmiBlitz3.ab3@15002>    MOVE.w -6(a4),-4(a4)
0002B4C0 <AmiBlitz3.ab3@15003>    MOVE.l #$4c3c0800,-8(a4)
0002B4C6 <AmiBlitz3.ab3@15004>    MOVE.w regnum,D3
0002B4CA <AmiBlitz3.ab3@15005>    MULS #$1000,D3
0002B4CE <AmiBlitz3.ab3@15006>    OR.w D3,-6(a4)
0002B4D4 <AmiBlitz3.ab3@15007>    CLR.l load_var_addr
0002B4DA <AmiBlitz3.ab3@15008>    CLR.l imm_addr
0002B4DE <AmiBlitz3.ab3@15009> BRA 'li3
0002B4E2 <AmiBlitz3.ab3@15012>    CMP.w #8,d3
0002B4E6 <AmiBlitz3.ab3@15013>    BEQ 'ok
0002B4E8 <AmiBlitz3.ab3@15014>    ASL.l #1,d3
0002B4EA <AmiBlitz3.ab3@15015>    ASL.l #8,d3
0002B4EE <AmiBlitz3.ab3@15016>    MOVE.w #$e188,d1
0002B4F0 <AmiBlitz3.ab3@15017>    OR.w d3,d1
0002B4F4 <AmiBlitz3.ab3@15018>    MOVE.w d1,-6(a4)
0002B4F8 <AmiBlitz3.ab3@15019> BRA 'okls
0002B4FE <AmiBlitz3.ab3@15022>   MOVE.w #$e188,-6(a4)                                     ;lsl.l #,dx
0002B504 <AmiBlitz3.ab3@15025>   MOVE.w regnum,d3
0002B508 <AmiBlitz3.ab3@15026>    OR.b d3,-5(a4)
0002B50E <AmiBlitz3.ab3@15027>    SUBQ.l #4,destpointer
0002B514 <AmiBlitz3.ab3@15028>    CLR.l load_var_addr
0002B51A <AmiBlitz3.ab3@15029>    CLR.l imm_addr
0002B51E <AmiBlitz3.ab3@15030> BRA 'li3
0002B524 <AmiBlitz3.ab3@15033>    MOVE.l destpointer,a0
0002B52A <AmiBlitz3.ab3@15034>    SUB.l load_var_addr,a0
0002B52E <AmiBlitz3.ab3@15035>    CMP.w #4,a0
0002B532 <AmiBlitz3.ab3@15036>    BNE 'li2
0002B536 <AmiBlitz3.ab3@15037>    MOVE.w -2(a4),d1
0002B53A <AmiBlitz3.ab3@15038>    BSR writeword
0002B540 <AmiBlitz3.ab3@15039>    MOVE.b #$4c,-6(a4)
0002B546 <AmiBlitz3.ab3@15040>    MOVE.w #$0800,-4(a4)
0002B54C <AmiBlitz3.ab3@15041>    MOVE.w regnum,D3
0002B550 <AmiBlitz3.ab3@15042>    MULS #$1000,d3
0002B554 <AmiBlitz3.ab3@15043>    OR.w D3,-4(a4)
0002B558 <AmiBlitz3.ab3@15044> BRA 'li3
0002B55E <AmiBlitz3.ab3@15047>    MOVE.l #$4c010800,d1
0002B564 <AmiBlitz3.ab3@15048>    MOVE.w regnum,D3
0002B566 <AmiBlitz3.ab3@15049>    EXT.l d3
0002B56A <AmiBlitz3.ab3@15050>    MULS #$1000,d3
0002B56C <AmiBlitz3.ab3@15051>    OR.w D3,d1
0002B570 <AmiBlitz3.ab3@15052>    MULS #$10,d3
0002B572 <AmiBlitz3.ab3@15053>    ADD.l d3,d1
0002B576 <AmiBlitz3.ab3@15054>    BSR writelong
0002B578 <AmiBlitz3.ab3@15059> RTS
0002B57A <AmiBlitz3.ab3@15063>   MOVE.w D1,-(A7)
0002B57E <AmiBlitz3.ab3@15064>    BSR.w JL_0_AD40
0002B580 <AmiBlitz3.ab3@15065>   MOVE.l D4,D1
0002B584 <AmiBlitz3.ab3@15066>    BSR.w JL_0_AD38
0002B588 <AmiBlitz3.ab3@15067>    BSR.w JL_0_A352
0002B58A <AmiBlitz3.ab3@15068>   MOVEQ #0,d1
0002B58C <AmiBlitz3.ab3@15069>   MOVE.w (A7)+,D1
0002B592 <AmiBlitz3.ab3@15070>   MOVE.l d1,lastinstruction
0002B596 <AmiBlitz3.ab3@15071>    BSR.w Atokejsr
0002B59A <AmiBlitz3.ab3@15072>    BSR.w JL_0_A36E
0002B59C <AmiBlitz3.ab3@15073>   MOVE.l D5,D1
0002B5A0 <AmiBlitz3.ab3@15074> BRA.w JL_0_AD38
0002B5A6 <AmiBlitz3.ab3@15078>    TST.b iee
0002B5AA <AmiBlitz3.ab3@15079>     BNE fm1
0002B5AE <AmiBlitz3.ab3@15080>  MOVE.w #$FFB2,D1                                          ;floatmul
0002B5B2 <AmiBlitz3.ab3@15081> BRA.w doflib
0002B5B4 <AmiBlitz3.ab3@15084>   MOVEQ #0,d0
0002B5BA <AmiBlitz3.ab3@15085>  MOVE.w regnum,d0
0002B5BC <AmiBlitz3.ab3@15086>  ADDQ #1,d0
0002B5BE <AmiBlitz3.ab3@15087>  ASL.w #8,d0
0002B5C0 <AmiBlitz3.ab3@15088>  ASL.w #2,d0
0002B5C6 <AmiBlitz3.ab3@15089>  MOVE.l #$f2000023,d1
0002B5C8 <AmiBlitz3.ab3@15090>  OR.l d0,d1
0002B5CE <AmiBlitz3.ab3@15091>  MOVE.w regnum,d0
0002B5D0 <AmiBlitz3.ab3@15092>  ASL.w #7,d0
0002B5D2 <AmiBlitz3.ab3@15093>  OR.l d0,d1
0002B5D6 <AmiBlitz3.ab3@15094> BRA.w writelong
0002B5D8 <AmiBlitz3.ab3@15098>   MOVE.w D2,-(A7)                                          ;dopow
0002B5DA <AmiBlitz3.ab3@15099>   MOVE.w D2,D3
0002B5DC <AmiBlitz3.ab3@15100>   MOVEQ.l #$05,D2
0002B5E0 <AmiBlitz3.ab3@15101>    BSR.w JL_0_9770
0002B5E6 <AmiBlitz3.ab3@15102>   ADDQ.w #1,regnum
0002B5E8 <AmiBlitz3.ab3@15103>   MOVE.w (A7)+,D3
0002B5EA <AmiBlitz3.ab3@15104>   MOVEQ.l #$05,D2
0002B5EE <AmiBlitz3.ab3@15105>    BSR.w writeconvertcode
0002B5F4 <AmiBlitz3.ab3@15106>   SUBQ.w #1,regnum
0002B5F8 <AmiBlitz3.ab3@15107>    BSR.w nocando
0002B5FE <AmiBlitz3.ab3@15108>    TST.b fpu
0002B602 <AmiBlitz3.ab3@15109>    BEQ 'old
0002B604 <AmiBlitz3.ab3@15110>    MOVEQ #0,d1
0002B60A <AmiBlitz3.ab3@15111>    MOVE.w regnum,d1
0002B60C <AmiBlitz3.ab3@15112>   MOVE.l d1,d0
0002B60E <AmiBlitz3.ab3@15113>   ASL.w #7,d1
0002B610 <AmiBlitz3.ab3@15114>   ASL.w #8,d0
0002B612 <AmiBlitz3.ab3@15115>   ASL.w #2,d0
0002B614 <AmiBlitz3.ab3@15116>   OR.w d0,d1
0002B616 <AmiBlitz3.ab3@15117>   MOVE.l d1,-(a7)
0002B61C <AmiBlitz3.ab3@15119>    OR.l #$f2000016,d1                                       ;flog2.x fp0      ;fpu ^ pow
0002B620 <AmiBlitz3.ab3@15120>    BSR writelong
0002B626 <AmiBlitz3.ab3@15121>    MOVE.w regnum,d0
0002B628 <AmiBlitz3.ab3@15122>  ADDQ #1,d0
0002B62A <AmiBlitz3.ab3@15123>  ASL.w #8,d0
0002B62C <AmiBlitz3.ab3@15124>  ASL.w #2,d0
0002B632 <AmiBlitz3.ab3@15125>  MOVE.l #$f2000023,d1
0002B634 <AmiBlitz3.ab3@15126>  OR.l d0,d1
0002B63A <AmiBlitz3.ab3@15127>  MOVE.w regnum,d0
0002B63C <AmiBlitz3.ab3@15128>  ASL.w #7,d0
0002B63E <AmiBlitz3.ab3@15129>  OR.l d0,d1
0002B644 <AmiBlitz3.ab3@15130>    OR.l #$f2000023,d1                                      ;fmulx.x fp1,fp0
0002B648 <AmiBlitz3.ab3@15131>    BSR writelong
0002B64A <AmiBlitz3.ab3@15132>    MOVE.l (a7)+,d1
0002B650 <AmiBlitz3.ab3@15134>    OR.l #$f2000011,d1                                      ;ftwotox.x fp0
0002B654 <AmiBlitz3.ab3@15135>    BSR writelong
0002B656 <AmiBlitz3.ab3@15136> RTS
0002B65A <AmiBlitz3.ab3@15139>   MOVE.w #$6001,D1
0002B65E <AmiBlitz3.ab3@15140> BRA.w domylib
0002B662 <AmiBlitz3.ab3@15146>   MOVEA.l forthsp(PC),A0
0002B666 <AmiBlitz3.ab3@15147>   MOVE.w #$FFFF,-(A0)                                      ;#-1,-(a0) org source
0002B668 <AmiBlitz3.ab3@15148> RTS
0002B66C <AmiBlitz3.ab3@15154>   MOVE.w #$D400,D1
0002B670 <AmiBlitz3.ab3@15155> BRA.w domylib
0002B674 <AmiBlitz3.ab3@15159>   MOVE.w #$D401,D1
0002B678 <AmiBlitz3.ab3@15160> BRA.w domylib
0002B67C <AmiBlitz3.ab3@15164>    BSR.w nocando                                           ;modlib uses an alibjsr here!
0002B680 <AmiBlitz3.ab3@15165>   MOVE.w #$D402,D1
0002B684 <AmiBlitz3.ab3@15166> BRA.w domylib
0002B688 <AmiBlitz3.ab3@15170>   MOVE.w #$D403,D1
0002B68A <AmiBlitz3.ab3@15171>   MOVEQ.l #$02,D2                                          ;now a word.
0002B68E <AmiBlitz3.ab3@15172> BRA.w domylib
0002B692 <AmiBlitz3.ab3@15176>    BSR.w nocando                                           ;modlib lib uses an alibjsr!  ;domod float
0002B698 <AmiBlitz3.ab3@15177>   TST.b fpu
0002B69C <AmiBlitz3.ab3@15178>   BEQ 'old
0002B69E <AmiBlitz3.ab3@15179>   MOVEQ #0,d1
0002B6A4 <AmiBlitz3.ab3@15180>   MOVE.w regnum,d1                                         ;fpu mod
0002B6A6 <AmiBlitz3.ab3@15181>   MOVE.l d1,d0
0002B6A8 <AmiBlitz3.ab3@15182>   ADDQ.l #1,d1
0002B6AA <AmiBlitz3.ab3@15183>   ASL.l #7,d0
0002B6AC <AmiBlitz3.ab3@15184>   ASL.l #8,d1
0002B6AE <AmiBlitz3.ab3@15185>   ASL.l #2,d1
0002B6B0 <AmiBlitz3.ab3@15186>   OR.l d0,d1
0002B6B2 <AmiBlitz3.ab3@15187>   MOVE.l d0,-(a7)
0002B6B8 <AmiBlitz3.ab3@15188>   OR.l #$f2000021,d1
0002B6BC <AmiBlitz3.ab3@15189>   BSR writelong
0002B6BE <AmiBlitz3.ab3@15190>   MOVE.l (a7)+,d0
0002B6C0 <AmiBlitz3.ab3@15191>  RTS
0002B6C4 <AmiBlitz3.ab3@15194>   MOVE.w #$D404,D1
0002B6C6 <AmiBlitz3.ab3@15195>   MOVEQ.l #$03,D2                                          ;now a long
0002B6CA <AmiBlitz3.ab3@15196> BRA.w domylib
0002B6CE <AmiBlitz3.ab3@15204>   MOVE.w #$48C0,D1
0002B6D4 <AmiBlitz3.ab3@15205>   OR.w regnum,D1
0002B6D8 <AmiBlitz3.ab3@15206>    BSR.w writeword
0002B6DA <AmiBlitz3.ab3@15207>   ADDQ.w #1,D1
0002B6DE <AmiBlitz3.ab3@15208>    BSR.w writeword
0002B6E2 <AmiBlitz3.ab3@15211>    MOVE.w #$48C0,D1
0002B6E8 <AmiBlitz3.ab3@15212>   OR.w regnum,D1
0002B6EC <AmiBlitz3.ab3@15213>    BSR.w writeword
0002B6F0 <AmiBlitz3.ab3@15214>   MOVE.w #$81C0,D1
0002B6F4 <AmiBlitz3.ab3@15215> BRA.w doplus2
0002B6FA <AmiBlitz3.ab3@15219>   TST.b fast
0002B6FE <AmiBlitz3.ab3@15220>   BNE.s 'l10
0002B702 <AmiBlitz3.ab3@15221>   MOVE.w #$CB01,D1
0002B706 <AmiBlitz3.ab3@15222> BRA.w domylib
0002B70A <AmiBlitz3.ab3@15228>   BSR.w JL_0_AD40
0002B70C <AmiBlitz3.ab3@15229>   MOVE.l D4,D1
0002B710 <AmiBlitz3.ab3@15230>    BSR.w JL_0_AD38
0002B714 <AmiBlitz3.ab3@15231>    BSR.w JL_0_A352
0002B71A <AmiBlitz3.ab3@15245>    MOVE.l #$4c410800,d1
0002B71E <AmiBlitz3.ab3@15246>    BSR writelong
0002B722 <AmiBlitz3.ab3@15249>   MOVE.w #$4e71,d1
0002B726 <AmiBlitz3.ab3@15251>    BSR.w JL_0_A36E
0002B728 <AmiBlitz3.ab3@15252>   MOVE.l D5,D1
0002B72C <AmiBlitz3.ab3@15253> BRA.w JL_0_AD38
0002B730 <AmiBlitz3.ab3@15256>     CMP.w #8,d3
0002B734 <AmiBlitz3.ab3@15257>     BEQ 'ok
0002B736 <AmiBlitz3.ab3@15258>     ASL.l #1,d3
0002B738 <AmiBlitz3.ab3@15259>     ASL.l #8,d3
0002B73C <AmiBlitz3.ab3@15260>     MOVE.w #$e080,d1
0002B73E <AmiBlitz3.ab3@15261>     OR.w d3,d1
0002B742 <AmiBlitz3.ab3@15262> BRA 'oklsr2
0002B746 <AmiBlitz3.ab3@15265>   MOVE.w #$e080,d1                                         ;lsr.l #,dx
0002B74C <AmiBlitz3.ab3@15268>      SUBQ.l #6,destpointer
0002B750 <AmiBlitz3.ab3@15269>      BSR writeword
0002B752 <AmiBlitz3.ab3@15270>      MOVE.l (a7)+,d3
0002B754 <AmiBlitz3.ab3@15271>      MOVEQ #0,d1
0002B75A <AmiBlitz3.ab3@15272>      CLR.l load_var_addr
0002B760 <AmiBlitz3.ab3@15273>      CLR.l imm_addr
0002B764 <AmiBlitz3.ab3@15274> BRA JL_0_AD38
0002B768 <AmiBlitz3.ab3@15278>   MOVE.w #$CB00,D1                                         ;quickdiv
0002B76C <AmiBlitz3.ab3@15279> BRA.w domylib
0002B772 <AmiBlitz3.ab3@15283>    TST.b iee
0002B776 <AmiBlitz3.ab3@15284>    BNE fdiv1
0002B77A <AmiBlitz3.ab3@15285>    MOVE.w #$FFAC,D1                                        ;floatdiv
0002B77E <AmiBlitz3.ab3@15286> BRA.w doflib
0002B780 <AmiBlitz3.ab3@15290>   MOVEQ #0,d0
0002B786 <AmiBlitz3.ab3@15291>   MOVE.w regnum,d0
0002B788 <AmiBlitz3.ab3@15292>   ADDQ #1,d0
0002B78A <AmiBlitz3.ab3@15293>   ASL.w #8,d0
0002B78C <AmiBlitz3.ab3@15294>   ASL.w #2,d0
0002B792 <AmiBlitz3.ab3@15295>   MOVE.l #$f2000020,d1                                     ;fpu div
0002B794 <AmiBlitz3.ab3@15296>   OR.l d0,d1
0002B79A <AmiBlitz3.ab3@15297>   MOVE.w regnum,d0
0002B79C <AmiBlitz3.ab3@15298>   ASL.w #7,d0
0002B79E <AmiBlitz3.ab3@15299>   OR.l d0,d1
0002B7A2 <AmiBlitz3.ab3@15300> BRA.w writelong
0002B7A6 <AmiBlitz3.ab3@15304>   MOVE.w #$C000,D1
0002B7AA <AmiBlitz3.ab3@15305> BRA.w doplus2
0002B7AE <AmiBlitz3.ab3@15309>   MOVE.w #$C040,D1
0002B7B2 <AmiBlitz3.ab3@15310> BRA.w doplus2
0002B7B6 <AmiBlitz3.ab3@15314>   MOVE.w #$C080,D1
0002B7BA <AmiBlitz3.ab3@15315> BRA.w doplus2
0002B7BE <AmiBlitz3.ab3@15319>   MOVE.w #$8000,D1
0002B7C2 <AmiBlitz3.ab3@15320> BRA.w doplus2
0002B7C6 <AmiBlitz3.ab3@15324>   MOVE.w #$8040,D1
0002B7CA <AmiBlitz3.ab3@15325> BRA.w doplus2
0002B7CE <AmiBlitz3.ab3@15329>   MOVE.w #$8080,D1
0002B7D2 <AmiBlitz3.ab3@15330> BRA.w doplus2
0002B7D6 <AmiBlitz3.ab3@15334>   MOVE.w #$B100,D1
0002B7DC <AmiBlitz3.ab3@15337>    MOVE.w regnum,D3
0002B7DE <AmiBlitz3.ab3@15338>   OR.w D3,D1
0002B7E0 <AmiBlitz3.ab3@15339>   ADDQ.w #1,D3
0002B7E2 <AmiBlitz3.ab3@15340>   LSL.w #8,D3
0002B7E4 <AmiBlitz3.ab3@15341>   LSL.w #1,D3
0002B7E6 <AmiBlitz3.ab3@15342>   OR.w D3,D1
0002B7EA <AmiBlitz3.ab3@15343> BRA.w writeword
0002B7EE <AmiBlitz3.ab3@15347>   MOVE.w #$B140,D1
0002B7F2 <AmiBlitz3.ab3@15348> BRA.w JL_0_A25C
0002B7F6 <AmiBlitz3.ab3@15352>   MOVE.w #$B180,D1
0002B7FA <AmiBlitz3.ab3@15353> BRA.w JL_0_A25C
0002B7FE <AmiBlitz3.ab3@15357>   MOVE.w #$E1A8,D1
0002B802 <AmiBlitz3.ab3@15358> BRA.w JL_0_A298
0002B806 <AmiBlitz3.ab3@15362>   MOVE.w #$E0A8,D1
0002B80A <AmiBlitz3.ab3@15363> BRA.w JL_0_A298
0002B80E <AmiBlitz3.ab3@15367>   MOVE.w #$E0A0,D1
0002B812 <AmiBlitz3.ab3@15368> BRA.w JL_0_A298
0002B814 <AmiBlitz3.ab3@15372>   MOVE.w D1,-(A7)
0002B81A <AmiBlitz3.ab3@15373>   ADDQ.w #1,regnum
0002B81C <AmiBlitz3.ab3@15374>   MOVE.w D2,-(A7)
0002B81E <AmiBlitz3.ab3@15375>   MOVE.w D2,D3
0002B820 <AmiBlitz3.ab3@15376>   MOVEQ.l #$02,D2
0002B824 <AmiBlitz3.ab3@15381>    BSR.w writeconvertcode
0002B826 <AmiBlitz3.ab3@15383>   MOVE.w (A7)+,D2
0002B82C <AmiBlitz3.ab3@15384>   SUBQ.w #1,regnum
0002B830 <AmiBlitz3.ab3@15385>   CMP.w #$4,D2
0002B834 <AmiBlitz3.ab3@15386>    BEQ.w JL_0_A2C2
0002B836 <AmiBlitz3.ab3@15387>   MOVE.w D2,D3
0002B838 <AmiBlitz3.ab3@15388>   MOVEQ.l #$03,D2
0002B83C <AmiBlitz3.ab3@15389>    BSR.w JL_0_9770
0002B83E <AmiBlitz3.ab3@15392>    MOVE.w (A7)+,D1
0002B844 <AmiBlitz3.ab3@15393>   MOVE.w regnum,D3
0002B846 <AmiBlitz3.ab3@15394>   OR.w D3,D1
0002B848 <AmiBlitz3.ab3@15395>   ADDQ.w #1,D3
0002B84A <AmiBlitz3.ab3@15396>   LSL.w #8,D3
0002B84C <AmiBlitz3.ab3@15397>   LSL.w #1,D3
0002B84E <AmiBlitz3.ab3@15398>   OR.w D3,D1
0002B852 <AmiBlitz3.ab3@15399> BRA.w writeword
0002B856 <AmiBlitz3.ab3@15403>   MOVE.w #$0100,D1
0002B85A <AmiBlitz3.ab3@15404>    BSR.w JL_0_A31C
0002B860 <AmiBlitz3.ab3@15405>   MOVE.w regnum,D1
0002B864 <AmiBlitz3.ab3@15406>   ORI.w #$56C0,D1
0002B868 <AmiBlitz3.ab3@15407>    BSR.w writeword
0002B86E <AmiBlitz3.ab3@15408>   MOVE.w regnum,D1
0002B872 <AmiBlitz3.ab3@15409>   ORI.w #$4880,D1
0002B876 <AmiBlitz3.ab3@15410>    BSR.w writeword
0002B878 <AmiBlitz3.ab3@15411>   MOVEQ.l #$02,D2
0002B87A <AmiBlitz3.ab3@15412> RTS
0002B87E <AmiBlitz3.ab3@15416>   MOVE.w #$01C0,D1
0002B882 <AmiBlitz3.ab3@15419>    BSR.w JL_0_A31C
0002B884 <AmiBlitz3.ab3@15420>   MOVEQ.l #$03,D2
0002B886 <AmiBlitz3.ab3@15421> RTS
0002B88A <AmiBlitz3.ab3@15425>   MOVE.w #$0180,D1
0002B88E <AmiBlitz3.ab3@15426> BRA.w JL_0_A304
0002B892 <AmiBlitz3.ab3@15430>   MOVE.w #$0140,D1
0002B896 <AmiBlitz3.ab3@15431> BRA.w JL_0_A304
0002B898 <AmiBlitz3.ab3@15435>   MOVE.w D1,-(A7)
0002B89A <AmiBlitz3.ab3@15436>   MOVE.w D2,-(A7)
0002B89C <AmiBlitz3.ab3@15437>   MOVE.w D2,D3
0002B89E <AmiBlitz3.ab3@15438>   MOVEQ.l #$03,D2
0002B8A2 <AmiBlitz3.ab3@15439>    BSR.w JL_0_9770
0002B8A4 <AmiBlitz3.ab3@15440>   MOVE.w (A7)+,D3
0002B8A6 <AmiBlitz3.ab3@15441>   MOVEQ.l #$01,D2
0002B8AC <AmiBlitz3.ab3@15442>   ADDQ.w #1,regnum
0002B8B0 <AmiBlitz3.ab3@15443>    BSR.w writeconvertcode
0002B8B6 <AmiBlitz3.ab3@15444>   SUBQ.w #1,regnum
0002B8BC <AmiBlitz3.ab3@15445>   MOVE.w regnum,D1
0002B8BE <AmiBlitz3.ab3@15446>   MOVE.w D1,D2
0002B8C0 <AmiBlitz3.ab3@15447>   ADDQ.w #1,D2
0002B8C2 <AmiBlitz3.ab3@15448>   LSL.w #8,D2
0002B8C4 <AmiBlitz3.ab3@15449>   LSL.w #1,D2
0002B8C6 <AmiBlitz3.ab3@15450>   OR.w (A7)+,D1
0002B8C8 <AmiBlitz3.ab3@15451>   OR.w D2,D1
0002B8CC <AmiBlitz3.ab3@15452> BRA.w writeword
0002B8D2 <AmiBlitz3.ab3@15456>   MOVE.w regnum,D1
0002B8D6 <AmiBlitz3.ab3@15457>    BEQ.w JL_0_A36C
0002B8DA <AmiBlitz3.ab3@15458>   ORI.w #$2000,D1
0002B8DE <AmiBlitz3.ab3@15459>    BSR.w writeword
0002B8E2 <AmiBlitz3.ab3@15460>   ADDI.w #$201,D1
0002B8E6 <AmiBlitz3.ab3@15461>    BSR.w writeword
0002B8E8 <AmiBlitz3.ab3@15464> RTS
0002B8EE <AmiBlitz3.ab3@15468>   MOVE.w regnum,D1
0002B8F2 <AmiBlitz3.ab3@15469>    BEQ.w JL_0_A384
0002B8F4 <AmiBlitz3.ab3@15470>   LSL.w #8,D1
0002B8F6 <AmiBlitz3.ab3@15471>   LSL.w #1,D1
0002B8FA <AmiBlitz3.ab3@15472>   ORI.w #$2000,D1
0002B8FE <AmiBlitz3.ab3@15473>    BSR.w writeword
0002B900 <AmiBlitz3.ab3@15476> RTS
0002B906 <AmiBlitz3.ab3@15480>    CLR.b isconstantvalue
0002B90C <AmiBlitz3.ab3@15481>    CLR.l lastconstantvalue
0002B914 <AmiBlitz3.ab3@15482>    CMPI.w #$7,regnum
0002B918 <AmiBlitz3.ab3@15483>    BCS.w JL_0_A6B4
0002B91E <AmiBlitz3.ab3@15484>   MOVE.l #$f2277700,d1                                     ;fmove.d fp6,-(a7)
0002B922 <AmiBlitz3.ab3@15485>   BSR writelong
0002B926 <AmiBlitz3.ab3@15486>   MOVE.w #$2F06,D1                                         ;d6 to stack
0002B92A <AmiBlitz3.ab3@15488>   CMP.w #$3,D2
0002B92E <AmiBlitz3.ab3@15489>    BCS.w JL_0_A3A2
0002B932 <AmiBlitz3.ab3@15490>   MOVE.w #$2F06,D1
0002B936 <AmiBlitz3.ab3@15493>   BSR.w writeword
0002B938 <AmiBlitz3.ab3@15494>   MOVE.w D1,-(A7)
0002B93E <AmiBlitz3.ab3@15495>   SUBQ.w #1,regnum
0002B942 <AmiBlitz3.ab3@15496>    BSR.w JL_0_A6B4
0002B948 <AmiBlitz3.ab3@15497>   ADDQ.w #1,regnum
0002B94E <AmiBlitz3.ab3@15498>   MOVE.l #$f2001b80,d1
0002B952 <AmiBlitz3.ab3@15499>   BSR writelong
0002B956 <AmiBlitz3.ab3@15500>   MOVE.w #$3E06,D1
0002B95A <AmiBlitz3.ab3@15501>   CMP.w #$3,D2
0002B95E <AmiBlitz3.ab3@15502>    BCS.w JL_0_A3C8
0002B962 <AmiBlitz3.ab3@15503>   MOVE.w #$2E06,D1
0002B966 <AmiBlitz3.ab3@15506>   BSR.w writeword
0002B968 <AmiBlitz3.ab3@15507>   MOVE.w (A7)+,D1
0002B96C <AmiBlitz3.ab3@15508>   ANDI.w #$F000,D1
0002B970 <AmiBlitz3.ab3@15509>   ORI.w #$C1F,D1
0002B976 <AmiBlitz3.ab3@15510>   JSR writeword
0002B97C <AmiBlitz3.ab3@15511>   MOVE.l #$f21f5700,d1                                     ;fmove.d (a7)+,fp6
0002B980 <AmiBlitz3.ab3@15512> BRA writelong
0002B984 <AmiBlitz3.ab3@15516>   BSR.w JL_0_A6B4
0002B988 <AmiBlitz3.ab3@15517>   MOVE.w #$4440,D1
0002B98C <AmiBlitz3.ab3@15518>   CMP.w #$3,D2
0002B990 <AmiBlitz3.ab3@15519>    BCS.w JL_0_A406
0002B994 <AmiBlitz3.ab3@15520>   MOVE.w #$4480,D1
0002B998 <AmiBlitz3.ab3@15521>   CMP.w #$5,D2
0002B99C <AmiBlitz3.ab3@15522>    BCS.w JL_0_A406
0002B9A0 <AmiBlitz3.ab3@15523>   CMP.w #$6,D2
0002B9A4 <AmiBlitz3.ab3@15524>    BCC.w illoperr
0002B9A8 <AmiBlitz3.ab3@15525>   MOVE.w #$FFC4,D1
0002B9AC <AmiBlitz3.ab3@15526> BRA.w JL_0_9604
0002B9B2 <AmiBlitz3.ab3@15529>   OR.w regnum,D1                                           ;negate
0002B9B8 <AmiBlitz3.ab3@15530>   CLR.l imm_addr
0002B9BC <AmiBlitz3.ab3@15531> BRA.w writeword
0002B9C0 <AmiBlitz3.ab3@15535>    BSR.w eval4
0002B9C4 <AmiBlitz3.ab3@15536>   CMP.w #")",D0
0002B9C8 <AmiBlitz3.ab3@15537>    BEQ.w JL_0_A424
0002B9CC <AmiBlitz3.ab3@15538>   CMP.w #"}",D0
0002B9D0 <AmiBlitz3.ab3@15539>    BNE.w brackets_                                         ;syntax error brackets
0002B9D4 <AmiBlitz3.ab3@15542> BRA.w get1bytemain
0002B9D8 <AmiBlitz3.ab3@15546>    BSR.w eval4
0002B9DC <AmiBlitz3.ab3@15547>   CMP.w #$5,D2
0002B9E0 <AmiBlitz3.ab3@15548>    BCC.w illoperr
0002B9E6 <AmiBlitz3.ab3@15549>   MOVE.w regnum,D1
0002B9EA <AmiBlitz3.ab3@15550>   ORI.w #$4640,D1
0002B9EE <AmiBlitz3.ab3@15551>   CMP.w #$3,D2
0002B9F2 <AmiBlitz3.ab3@15552>    BCS.w writeword
0002B9F6 <AmiBlitz3.ab3@15553>   EORI.w #$C0,D1
0002B9FA <AmiBlitz3.ab3@15554> BRA.w writeword
0002B9FC <AmiBlitz3.ab3@15558>   MOVEQ.l #$05,D2                                          ;fpu pi
0002BA02 <AmiBlitz3.ab3@15559>    TST.b fpu
0002BA06 <AmiBlitz3.ab3@15560>   BEQ 'old
0002BA0C <AmiBlitz3.ab3@15561> JMP fpupi
0002BA12 <AmiBlitz3.ab3@15564>   MOVE.w regnum,D1
0002BA14 <AmiBlitz3.ab3@15565>   LSL.w #8,D1
0002BA16 <AmiBlitz3.ab3@15566>   LSL.w #1,D1
0002BA1A <AmiBlitz3.ab3@15567>   ORI.w #$203C,D1
0002BA1E <AmiBlitz3.ab3@15568>    BSR.w writeword
0002BA24 <AmiBlitz3.ab3@15569>   MOVE.l #$C90FDA42,D1
0002BA28 <AmiBlitz3.ab3@15570>    BSR.w writelong
0002BA2C <AmiBlitz3.ab3@15571> BRA.w get1bytemain
0002BB28 <AmiBlitz3.ab3@15579> forthstack:  Ds.l 63                                       ;ds.b  18*32 org source
0002BC24 <AmiBlitz3.ab3@15580>              Ds.l 63
0002BC6C <AmiBlitz3.ab3@15581>              Ds.l 18
0002BC70 <AmiBlitz3.ab3@15582> forthsp:     Dc.l forthstack
0002BC9C <AmiBlitz3.ab3@15587>    !fget
0002BCA0 <AmiBlitz3.ab3@15588>    CMP.b #$7e,d0
0002BCA4 <AmiBlitz3.ab3@15589>    BNE 'noc
0002BCA6 <AmiBlitz3.ab3@15590>    SUBQ.l #1,a5
0002BCAA <AmiBlitz3.ab3@15591>    BSR get1bytemain
0002BCAE <AmiBlitz3.ab3@15594>    CMP.b #"#",d0
0002BCB2 <AmiBlitz3.ab3@15595>    BNE 'ld1
0002BCB6 <AmiBlitz3.ab3@15596>    CMP.b #$22,(a5)
0002BCBA <AmiBlitz3.ab3@15597>    BNE 'ld1
0002BCC0 <AmiBlitz3.ab3@15598>    JSR addimmi
0002BCC4 <AmiBlitz3.ab3@15601>    CMP.b #$22,d0
0002BCC8 <AmiBlitz3.ab3@15602>    BNE 'l11
0002BCCE <AmiBlitz3.ab3@15612>    NOT.w instringon
0002BCD0 <AmiBlitz3.ab3@15615>    TST.b d0
0002BCD4 <AmiBlitz3.ab3@15616>    BPL 'l10
0002BCD6 <AmiBlitz3.ab3@15617>    LSL.w #8,d0
0002BCD8 <AmiBlitz3.ab3@15618>    MOVE.b (a5)+,d0                      ; get blitz instruction with returnvalue
0002BCDE <AmiBlitz3.ab3@15619>    MOVE.l d0,lasttoken
0002BCE4 <AmiBlitz3.ab3@15620>    MOVE.w d0,lastchar
0002BCEA <AmiBlitz3.ab3@15621>    CLR.l rightsidetype                  ; blitzlibs do currently no type check
0002BCEE <AmiBlitz3.ab3@15623>   CMP.w #"(",D0
0002BCF2 <AmiBlitz3.ab3@15624>    BEQ.w checkcast2
0002BCF6 <AmiBlitz3.ab3@15625> nocast CMP.w #"{",D0
0002BCFA <AmiBlitz3.ab3@15626>    BEQ.w JL_0_A410
0002BCFE <AmiBlitz3.ab3@15627>   CMP.w #$2D,D0
0002BD02 <AmiBlitz3.ab3@15628>    BEQ.w JL_0_A3DA
0002BD06 <AmiBlitz3.ab3@15629>   CMP.w #-$7F77,D0
0002BD0A <AmiBlitz3.ab3@15630>    BEQ.w JL_0_A428
0002BD0E <AmiBlitz3.ab3@15631>   MOVEA.l forthsp(PC),A1
0002BD14 <AmiBlitz3.ab3@15632>   CMPA.l #forthsp,A1
0002BD18 <AmiBlitz3.ab3@15633>    BCC.w conmemerr
0002BD1E <AmiBlitz3.ab3@15634>   MOVE.l destpointer,(A1)+
0002BD24 <AmiBlitz3.ab3@15635>   MOVE.l hunkoffsetbase,(A1)+
0002BD2A <AmiBlitz3.ab3@15636>   MOVE.l lasta6,(A1)+
0002BD30 <AmiBlitz3.ab3@15637>   MOVE.w lasta6,(A1)+
0002BD32 <AmiBlitz3.ab3@15638>   CLR.w (A1)+
0002BD34 <AmiBlitz3.ab3@15639>   CLR.w (A1)+
0002BD3A <AmiBlitz3.ab3@15640>   MOVE.l A1,forthsp
0002BD4C <AmiBlitz3.ab3@15642>    !compare2
0002BD50 <AmiBlitz3.ab3@15643>    BEQ.w JL_0_B224
0002BD54 <AmiBlitz3.ab3@15644>   CMP.w #".",D0
0002BD58 <AmiBlitz3.ab3@15645>    BEQ.w JL_0_B21E
0002BD5C <AmiBlitz3.ab3@15646>   CMP.w #"#",D0
0002BD60 <AmiBlitz3.ab3@15647>    BEQ.w get_constant
0002BD64 <AmiBlitz3.ab3@15648>   CMP.w #"$",D0
0002BD68 <AmiBlitz3.ab3@15649>    BEQ.w get_hexconstant
0002BD6C <AmiBlitz3.ab3@15650>   CMP.w #"%",D0
0002BD70 <AmiBlitz3.ab3@15651>    BEQ.w JL_0_A8C0
0002BD74 <AmiBlitz3.ab3@15652>   CMP.w #-$7FD1,D0
0002BD78 <AmiBlitz3.ab3@15653>    BEQ.w _SizeOf
0002BD7C <AmiBlitz3.ab3@15654>   CMP.w #-$7F46,D0
0002BD80 <AmiBlitz3.ab3@15655>    BEQ.w JL_0_A44E
0002BD84 <AmiBlitz3.ab3@15656>   CMP.w #-$7F3B,D0
0002BD88 <AmiBlitz3.ab3@15657>    BEQ.w JL_0_A83C
0002BD8C <AmiBlitz3.ab3@15658>   CMP.w #-$7F3A,D0
0002BD90 <AmiBlitz3.ab3@15659>    BEQ.w JL_0_A846
0002BD96 <AmiBlitz3.ab3@15660>   MOVE.w constmode,D1
0002BD9A <AmiBlitz3.ab3@15661>    BEQ.w JL_0_A776
0002BDBC <AmiBlitz3.ab3@15662>    !compare1                                               ;bsr.w tstalpha
0002BDC0 <AmiBlitz3.ab3@15663>    BEQ.w JL_0_AF22
0002BDC4 <AmiBlitz3.ab3@15664>   CMP.w #$5F,D0
0002BDC8 <AmiBlitz3.ab3@15665>    BEQ.w JL_0_AF22
0002BDCC <AmiBlitz3.ab3@15666>   CMP.w #$22,D0
0002BDD0 <AmiBlitz3.ab3@15667>    BEQ.w JL_0_AF00
0002BDD4 <AmiBlitz3.ab3@15668> BRA.w syntaxerr
0002BDDA <AmiBlitz3.ab3@15670> checkcast2 JMP checkcast
0002BDE0 <AmiBlitz3.ab3@15673>   MOVE.w cfetchmode,D1
0002BDE4 <AmiBlitz3.ab3@15674>   BEQ.w JL_0_A784
0002BDE8 <AmiBlitz3.ab3@15675> BRA.w badconerr
0002BDEE <AmiBlitz3.ab3@15678> JMP syntaxerropt4
0002BDF0 <AmiBlitz3.ab3@15682>   NOT.w -(A1)
0002BE12 <AmiBlitz3.ab3@15683>   !compare1                                                ;bsr.w tstalpha
0002BE16 <AmiBlitz3.ab3@15684>    BEQ.w JL_0_AF4C
0002BE1A <AmiBlitz3.ab3@15685>   CMP.w #$2A,D0
0002BE1E <AmiBlitz3.ab3@15686>    BEQ.w JL_0_AF4C
0002BE22 <AmiBlitz3.ab3@15687>   CMP.w #$5C,D0
0002BE26 <AmiBlitz3.ab3@15688>    BEQ.w JL_0_AF4C
0002BE2A <AmiBlitz3.ab3@15689>   CMP.w #$22,D0
0002BE2E <AmiBlitz3.ab3@15690>    BEQ.w JL_0_ADC0
0002BE32 <AmiBlitz3.ab3@15691>   BTST #$F,D0
0002BE36 <AmiBlitz3.ab3@15692>    BNE.w JL_0_AAF2
0002BE3A <AmiBlitz3.ab3@15693>   CMP.w #"&",D0
0002BE3E <AmiBlitz3.ab3@15694>    BEQ.w getvaraddr                                          ;jump to & address of var code
0002BE42 <AmiBlitz3.ab3@15695>   CMP.w #"?",D0
0002BE46 <AmiBlitz3.ab3@15696>    BEQ.w JL_0_AED4
0002BE4A <AmiBlitz3.ab3@15699>   CMP.b #"@",d0
0002BE4E <AmiBlitz3.ab3@15700>    BNE syntaxerr
0002BE54 <AmiBlitz3.ab3@15701>   TST.b newsyntax
0002BE58 <AmiBlitz3.ab3@15702>    BEQ JUMP_syntaxerropt4
0002BE5E <AmiBlitz3.ab3@15703>   MOVE.w regnum,D1
0002BE60 <AmiBlitz3.ab3@15704>   LSL.w #8,D1
0002BE62 <AmiBlitz3.ab3@15705>   LSL.w #1,D1
0002BE66 <AmiBlitz3.ab3@15706>   ORI.w #$203C,D1
0002BE6A <AmiBlitz3.ab3@15707>   BSR.w writeword
0002BE6E <AmiBlitz3.ab3@15708>   CMP.b #$22,(a5)
0002BE72 <AmiBlitz3.ab3@15709>    BNE syntaxerr
0002BE74 <AmiBlitz3.ab3@15710>   ADDQ #1,a5
0002BE76 <AmiBlitz3.ab3@15711>   MOVEQ #0,d0
0002BE7A <AmiBlitz3.ab3@15712>   CMP.b #1,d2
0002BE7E <AmiBlitz3.ab3@15713>    BEQ 'l3b
0002BE82 <AmiBlitz3.ab3@15714>   CMP.b #2,d2
0002BE86 <AmiBlitz3.ab3@15715>    BEQ 'l2b
0002BE8A <AmiBlitz3.ab3@15716>   CMP.b #4,d2
0002BE8E <AmiBlitz3.ab3@15717>    BEQ error_convert_types
0002BE90 <AmiBlitz3.ab3@15718>   MOVE.b (a5)+,d0
0002BE94 <AmiBlitz3.ab3@15719>   BEQ syntaxerr
0002BE98 <AmiBlitz3.ab3@15720>   CMP.b #$22,d0
0002BE9C <AmiBlitz3.ab3@15721>   BNE 'l1
0002BEA0 <AmiBlitz3.ab3@15722>     MOVE.b #0,d0
0002BEA4 <AmiBlitz3.ab3@15723> BRA 'do
0002BEA6 <AmiBlitz3.ab3@15726>   ASL.l #8,d0
0002BEA8 <AmiBlitz3.ab3@15727>   MOVE.b (a5)+,d0
0002BEAC <AmiBlitz3.ab3@15728>   BEQ syntaxerr
0002BEB0 <AmiBlitz3.ab3@15729>   CMP.b #$22,d0
0002BEB4 <AmiBlitz3.ab3@15730>   BNE 'l2
0002BEB8 <AmiBlitz3.ab3@15731>     MOVE.b #0,d0
0002BEBA <AmiBlitz3.ab3@15732>     ASR.l #8,d0
0002BEBE <AmiBlitz3.ab3@15733> BRA 'do
0002BEC0 <AmiBlitz3.ab3@15736>   ASL.l #8,d0
0002BEC2 <AmiBlitz3.ab3@15739>   MOVE.b (a5)+,d0
0002BEC6 <AmiBlitz3.ab3@15740>    BEQ syntaxerr
0002BECA <AmiBlitz3.ab3@15741>    CMP.b #$22,d0
0002BECE <AmiBlitz3.ab3@15742>    BNE 'l3
0002BED2 <AmiBlitz3.ab3@15743>    MOVE.b #0,d0
0002BED4 <AmiBlitz3.ab3@15744>    ASR.l #8,d0
0002BED8 <AmiBlitz3.ab3@15745> BRA 'do
0002BEDA <AmiBlitz3.ab3@15748>   ASL.l #8,d0
0002BEDC <AmiBlitz3.ab3@15751>   MOVE.b (a5)+,d0
0002BEE0 <AmiBlitz3.ab3@15752>    BEQ syntaxerr
0002BEE4 <AmiBlitz3.ab3@15753>    CMP.b #$22,d0
0002BEE8 <AmiBlitz3.ab3@15754>    BNE 'l4
0002BEEC <AmiBlitz3.ab3@15755>    MOVE.b #0,d0
0002BEEE <AmiBlitz3.ab3@15756>    ASR.l #8,d0
0002BEF2 <AmiBlitz3.ab3@15757> BRA 'do
0002BEF6 <AmiBlitz3.ab3@15760>    CMP.b #$22,(a5)+
0002BEFA <AmiBlitz3.ab3@15761>    BNE JUMP_error4char
0002BEFC <AmiBlitz3.ab3@15764>   MOVE.l d0,d1
0002BF00 <AmiBlitz3.ab3@15765>     BSR writelong
0002BF04 <AmiBlitz3.ab3@15766>     BSR get1bytemain
0002BF06 <AmiBlitz3.ab3@15767> RTS
0002BF0A <AmiBlitz3.ab3@15771>   BSR.w get1bytemain
0002BF0E <AmiBlitz3.ab3@15772>   CMP.w #$2E,D0
0002BF12 <AmiBlitz3.ab3@15773>    BEQ.b JL_0_A7F4
0002BF1C <AmiBlitz3.ab3@15775>   MOVE.w oldqflag,instringon
0002BF22 <AmiBlitz3.ab3@15776>   MOVEA.l lastsourcepos,A5
0002BF24 <AmiBlitz3.ab3@15777>   MOVE.w D2,-(A7)
0002BF28 <AmiBlitz3.ab3@15778>    BSR.w getparameter2
0002BF2C <AmiBlitz3.ab3@15779>    BEQ.w syntaxerr
0002BF32 <AmiBlitz3.ab3@15780>   LEA varbase,A2
0002BF36 <AmiBlitz3.ab3@15781>    BSR.w findvariable
0002BF3A <AmiBlitz3.ab3@15782>    BNE.w notypeerr
0002BF3E <AmiBlitz3.ab3@15783>   MOVE.w $4(A2),D3
0002BF40 <AmiBlitz3.ab3@15784>   EXT.l D3
0002BF42 <AmiBlitz3.ab3@15785>   MOVE.w (A7)+,D2
0002BF46 <AmiBlitz3.ab3@15786> BRA.w JL_0_B46E
0002BF48 <AmiBlitz3.ab3@15790>   MOVE.w D2,-(A7)
0002BF4C <AmiBlitz3.ab3@15791>    BSR.w getparameter2
0002BF50 <AmiBlitz3.ab3@15792>    BEQ.w syntaxerr
0002BF56 <AmiBlitz3.ab3@15793>   LEA newtypebase,A2
0002BF5A <AmiBlitz3.ab3@15794>    BSR.w findtype
0002BF5E <AmiBlitz3.ab3@15795>    BNE.w notypeerr
0002BF60 <AmiBlitz3.ab3@15796>   MOVEQ.l #$00,D3
0002BF64 <AmiBlitz3.ab3@15797>   CMP.w #$5C,D0
0002BF68 <AmiBlitz3.ab3@15798>    BNE.w JL_0_A832
0002BF6C <AmiBlitz3.ab3@15799>    BSR.w getparameter2
0002BF70 <AmiBlitz3.ab3@15800>    BEQ.w syntaxerr
0002BF74 <AmiBlitz3.ab3@15801>   LEA $4(A2),A2
0002BF78 <AmiBlitz3.ab3@15802>    BSR.w findvariable2
0002BF7C <AmiBlitz3.ab3@15803>    BNE.w noofferr
0002BF80 <AmiBlitz3.ab3@15804>   MOVE.w $4(A2),D3
0002BF84 <AmiBlitz3.ab3@15805> BRA.w JL_0_A836
0002BF88 <AmiBlitz3.ab3@15809>   MOVE.w $8(A2),D3
0002BF8A <AmiBlitz3.ab3@15812>   MOVE.w (A7)+,D2
0002BF8E <AmiBlitz3.ab3@15813> BRA.w JL_0_B46E
0002BF90 <AmiBlitz3.ab3@15817>   MOVEQ.l #-$01,D3
0002BF94 <AmiBlitz3.ab3@15818>    BSR.w get1bytemain
0002BF98 <AmiBlitz3.ab3@15819> BRA.w JL_0_B46E
0002BF9A <AmiBlitz3.ab3@15823>   MOVEQ.l #$00,D3
0002BF9E <AmiBlitz3.ab3@15824>    BSR.w get1bytemain
0002BFA2 <AmiBlitz3.ab3@15825> BRA.w JL_0_B46E
0002BFA6 <AmiBlitz3.ab3@15829>   CMP.w #$30,D0
0002BFAA <AmiBlitz3.ab3@15830>    BCS.w JL_0_A876
0002BFAE <AmiBlitz3.ab3@15831>   CMP.w #$39,D0
0002BFB2 <AmiBlitz3.ab3@15832>    BLS.w JL_0_A874
0002BFB6 <AmiBlitz3.ab3@15833>   ANDI.w #$FFDF,D0
0002BFBA <AmiBlitz3.ab3@15834>   CMP.w #$46,D0
0002BFBE <AmiBlitz3.ab3@15835>    BHI.w JL_0_A876
0002BFC2 <AmiBlitz3.ab3@15836>   CMP.w #$41,D0
0002BFC6 <AmiBlitz3.ab3@15837>    BCS.w JL_0_A876
0002BFC8 <AmiBlitz3.ab3@15840>    CMP.w D0,D0
0002BFCA <AmiBlitz3.ab3@15843> RTS
0002BFCE <AmiBlitz3.ab3@15847>   CMP.w #$31,D0
0002BFD2 <AmiBlitz3.ab3@15848>    BEQ.w JL_0_A884
0002BFD6 <AmiBlitz3.ab3@15849>   CMP.w #$30,D0
0002BFD8 <AmiBlitz3.ab3@15852> RTS
0002BFDA <AmiBlitz3.ab3@15856>    MOVEQ #0,d0
0002BFDC <AmiBlitz3.ab3@15857>    MOVE.b (a5)+,d0
0002BFDE <AmiBlitz3.ab3@15858>    MOVE.b (a5)+,d0
0002BFE2 <AmiBlitz3.ab3@15859>    BSR ishex
0002BFE6 <AmiBlitz3.ab3@15860>    BNE syntaxerr
0002BFEA <AmiBlitz3.ab3@15861>    SUBI.w #$30,D0
0002BFEE <AmiBlitz3.ab3@15862>    CMP.w #$9,D0
0002BFF2 <AmiBlitz3.ab3@15863>    BLS.w 'l1
0002BFF4 <AmiBlitz3.ab3@15864>    SUBQ.w #7,D0
0002BFF6 <AmiBlitz3.ab3@15867>    MOVE.l d0,d1
0002BFF8 <AmiBlitz3.ab3@15868>    MOVE.b (a5)+,d0
0002BFFC <AmiBlitz3.ab3@15869>      BSR ishex
0002C000 <AmiBlitz3.ab3@15870>     BNE syntaxerr
0002C002 <AmiBlitz3.ab3@15871>     LSL.l #4,d1
0002C006 <AmiBlitz3.ab3@15872>     SUBI.w #$30,D0
0002C00A <AmiBlitz3.ab3@15873>    CMP.w #$9,D0
0002C00E <AmiBlitz3.ab3@15874>    BLS.w 'l2
0002C010 <AmiBlitz3.ab3@15875>    SUBQ.w #7,D0
0002C012 <AmiBlitz3.ab3@15878>   ADD.l d1,d0
0002C014 <AmiBlitz3.ab3@15879> RTS
0002C018 <AmiBlitz3.ab3@15883>    BSR.w get1bytemain
0002C01C <AmiBlitz3.ab3@15884>    BSR.w ishex
0002C020 <AmiBlitz3.ab3@15885>    BNE.w syntaxerr
0002C022 <AmiBlitz3.ab3@15886>   MOVEQ.l #$00,D3
0002C026 <AmiBlitz3.ab3@15887>   CMP.w #5,d2
0002C02A <AmiBlitz3.ab3@15888>   BNE JL_0_A894
0002C030 <AmiBlitz3.ab3@15889>   CMP.l #newtype_double,a2
0002C034 <AmiBlitz3.ab3@15890>   BEQ 'doit
0002C03A <AmiBlitz3.ab3@15891>   CMP.l #newtype_float,a2
0002C03E <AmiBlitz3.ab3@15892>   BNE JL_0_A894
0002C046 <AmiBlitz3.ab3@15895>    fmove.s #0,fp0
0002C04C <AmiBlitz3.ab3@15897>   TST.b fpu
0002C050 <AmiBlitz3.ab3@15898>   BEQ JL_0_A894
0002C056 <AmiBlitz3.ab3@15899>   fmove.w #16,fp1
0002C05A <AmiBlitz3.ab3@15900>   fmul.x fp1,fp0
0002C05E <AmiBlitz3.ab3@15901>   SUBI.w #$30,D0
0002C062 <AmiBlitz3.ab3@15902>   CMP.w #$9,D0
0002C066 <AmiBlitz3.ab3@15903>    BLS.w JL_0_A8AEa
0002C068 <AmiBlitz3.ab3@15904>   SUBQ.w #7,D0
0002C06C <AmiBlitz3.ab3@15907>    fmove.w d0,fp1
0002C070 <AmiBlitz3.ab3@15908>    fadd.x fp1,fp0
0002C074 <AmiBlitz3.ab3@15909>    BSR.w get1bytemain
0002C078 <AmiBlitz3.ab3@15910>    BSR.w ishex
0002C07C <AmiBlitz3.ab3@15911>    BEQ.w JL_0_A894a
0002C080 <AmiBlitz3.ab3@15912> BRA.w nofpregload
0002C086 <AmiBlitz3.ab3@15916>   CMP.l #$10000000,D3
0002C08A <AmiBlitz3.ab3@15917>    BCC.w overerr
0002C08C <AmiBlitz3.ab3@15918>   LSL.l #4,D3
0002C090 <AmiBlitz3.ab3@15919>   SUBI.w #$30,D0
0002C094 <AmiBlitz3.ab3@15920>   CMP.w #$9,D0
0002C098 <AmiBlitz3.ab3@15921>    BLS.w JL_0_A8AE
0002C09A <AmiBlitz3.ab3@15922>   SUBQ.w #7,D0
0002C09C <AmiBlitz3.ab3@15925>   OR.w D0,D3
0002C0A0 <AmiBlitz3.ab3@15926>    BSR.w get1bytemain
0002C0A4 <AmiBlitz3.ab3@15927>    BSR.w ishex
0002C0A8 <AmiBlitz3.ab3@15928>    BEQ.w JL_0_A894
0002C0AC <AmiBlitz3.ab3@15929> BRA.w JL_0_B46E
0002C0B0 <AmiBlitz3.ab3@15933>    BSR.w get1bytemain
0002C0B4 <AmiBlitz3.ab3@15934>    BSR.w JL_0_A878
0002C0B8 <AmiBlitz3.ab3@15935>    BNE.w syntaxerr
0002C0BA <AmiBlitz3.ab3@15936>    MOVEQ.l #$00,D3
0002C0BC <AmiBlitz3.ab3@15939>    LSL.l #1,D3
0002C0C0 <AmiBlitz3.ab3@15940>    BCS.w overerr
0002C0C4 <AmiBlitz3.ab3@15941>   SUBI.w #$30,D0
0002C0C6 <AmiBlitz3.ab3@15942>   OR.w D0,D3
0002C0CA <AmiBlitz3.ab3@15943>    BSR.w get1bytemain
0002C0CE <AmiBlitz3.ab3@15944>    BSR.w JL_0_A878
0002C0D2 <AmiBlitz3.ab3@15945>    BEQ.w JL_0_A8CE
0002C0D6 <AmiBlitz3.ab3@15946> BRA.w JL_0_B46E
0002C0D8 <AmiBlitz3.ab3@15950>    MOVE.w d2,-(A7)
0002C0E0 <AmiBlitz3.ab3@15951>    MOVE.b #0,automode
0002C0E4 <AmiBlitz3.ab3@15952>    CMP.b #"@",(a5)
0002C0E8 <AmiBlitz3.ab3@15953>    BNE 'l1
0002C0EA <AmiBlitz3.ab3@15954>    ADDQ.l #1,a5
0002C0F2 <AmiBlitz3.ab3@15955>    MOVE.b #1,automode
0002C0F6 <AmiBlitz3.ab3@15956>    BSR getparameter2
0002C0FA <AmiBlitz3.ab3@15957>    BSR findlabel2
0002C0FE <AmiBlitz3.ab3@15958>    BNE 'addit
0002C102 <AmiBlitz3.ab3@15959> BRA errormsg_autocount
0002C106 <AmiBlitz3.ab3@15962>   BSR.w addlabelhash
0002C10E <AmiBlitz3.ab3@15963>   MOVE.l #$1,$4(A2)
0002C112 <AmiBlitz3.ab3@15964>   MOVEM.l a2/a5,-(a7)
0002C118 <AmiBlitz3.ab3@15965>   MOVE.w lastchar,-(a7)
0002C11E <AmiBlitz3.ab3@15966>   LEA autostorename,a5
0002C122 <AmiBlitz3.ab3@15967>   BSR getparameter2
0002C126 <AmiBlitz3.ab3@15968>   BSR findlabel2
0002C12A <AmiBlitz3.ab3@15969>   BEQ 'found
0002C12E <AmiBlitz3.ab3@15970>   BSR.w addlabelhash
0002C136 <AmiBlitz3.ab3@15971>   MOVE.l #$1,$4(A2)
0002C13E <AmiBlitz3.ab3@15972>   MOVE.l #0,8(a2)
0002C140 <AmiBlitz3.ab3@15975>    MOVE.w (a7)+,d0
0002C146 <AmiBlitz3.ab3@15976>    MOVE.w d0,lastchar
0002C14A <AmiBlitz3.ab3@15977>   MOVE.l 8(a2),d3
0002C152 <AmiBlitz3.ab3@15978>   ADD.l #1,8(a2)
0002C156 <AmiBlitz3.ab3@15979>   MOVEM.l (a7)+,a2/a5
0002C15A <AmiBlitz3.ab3@15980>   MOVE.l d3,8(a2)
0002C15E <AmiBlitz3.ab3@15981>   MOVE.l $8(A2),D3
0002C162 <AmiBlitz3.ab3@15982> BRA.l 'l3
0002C166 <AmiBlitz3.ab3@15985>   BSR.w getparameter2
0002C16C <AmiBlitz3.ab3@15986>     TST.b incnif
0002C170 <AmiBlitz3.ab3@15987>     BEQ 'lc1
0002C174 <AmiBlitz3.ab3@15988>     BSR.w findlabel2
0002C178 <AmiBlitz3.ab3@15989>     BNE 'l5
0002C17A <AmiBlitz3.ab3@15990>     MOVEQ #1,d3
0002C17C <AmiBlitz3.ab3@15991>     MOVE.w (A7)+,D2
0002C180 <AmiBlitz3.ab3@15992> BRA JL_0_B46E
0002C182 <AmiBlitz3.ab3@15995>   MOVEQ #0,d3
0002C184 <AmiBlitz3.ab3@15996>     MOVE.w (A7)+,D2
0002C188 <AmiBlitz3.ab3@15997> BRA JL_0_B46E
0002C18C <AmiBlitz3.ab3@16000>    BSR.w findlabel2
0002C190 <AmiBlitz3.ab3@16001>    BNE.w cnferr
0002C198 <AmiBlitz3.ab3@16004>    CMPI.l #$1,$4(A2)
0002C19C <AmiBlitz3.ab3@16005>    BNE.w cnferr
0002C1A0 <AmiBlitz3.ab3@16007>    MOVE.l $8(A2),D3
0002C1A2 <AmiBlitz3.ab3@16008>    MOVE.w (A7)+,D2
0002C1A6 <AmiBlitz3.ab3@16009> BRA.w JL_0_B46E
0002C1AC <AmiBlitz3.ab3@16013>   CLR.w vartype
0002C1B4 <AmiBlitz3.ab3@16014>   MOVE.b #3,peekaddrsize
0002C1B8 <AmiBlitz3.ab3@16015>   BSR.w JL_0_A916
0002C1BE <AmiBlitz3.ab3@16016>   MOVE.l a2,rightsidetype
0002C1C0 <AmiBlitz3.ab3@16017>   MOVEQ.l #$03,D2
0002C1C2 <AmiBlitz3.ab3@16018> RTS
0002C1C6 <AmiBlitz3.ab3@16022>    BSR.w get1bytemain
0002C1D8 <AmiBlitz3.ab3@16023>    !compare2
0002C1DC <AmiBlitz3.ab3@16024>    BEQ andop2
0002C1E0 <AmiBlitz3.ab3@16025>    BSR.w getparameter
0002C1E4 <AmiBlitz3.ab3@16026>    BSR.w JL_0_8E3C
0002C1E8 <AmiBlitz3.ab3@16027>    BSR.w calcvar
0002C1EC <AmiBlitz3.ab3@16028>   CMP.b #$7,D2
0002C1F0 <AmiBlitz3.ab3@16029>    BNE.w JL_0_A960
0002C1F4 <AmiBlitz3.ab3@16030>   BTST #$F,D2
0002C1F8 <AmiBlitz3.ab3@16031>    BNE.w JL_0_A94A
0002C1FE <AmiBlitz3.ab3@16032>   MOVE.w D3,stamp2+2
0002C204 <AmiBlitz3.ab3@16033>   MOVE.l stamp2,D1
0002C208 <AmiBlitz3.ab3@16034>    BSR.w pokela5s
0002C20C <AmiBlitz3.ab3@16035> BRA.w JL_0_A978
0002C212 <AmiBlitz3.ab3@16039>   MOVE.w regnum,D1
0002C214 <AmiBlitz3.ab3@16040>   LSL.w #8,D1
0002C216 <AmiBlitz3.ab3@16041>   LSL.w #1,D1
0002C21C <AmiBlitz3.ab3@16042>   OR.w stamp,D1
0002C220 <AmiBlitz3.ab3@16043>    BSR.w writeword
0002C222 <AmiBlitz3.ab3@16044> RTS
0002C226 <AmiBlitz3.ab3@16048>   BTST #$F,D2
0002C22A <AmiBlitz3.ab3@16049>    BNE.w JL_0_A978
0002C230 <AmiBlitz3.ab3@16050>   MOVE.w D3,leaamp+2
0002C236 <AmiBlitz3.ab3@16051>   MOVE.l leaamp,D1
0002C23A <AmiBlitz3.ab3@16052>    BSR.w pokela5s
0002C240 <AmiBlitz3.ab3@16055>   MOVE.w regnum,D1
0002C242 <AmiBlitz3.ab3@16056>   LSL.w #8,D1
0002C244 <AmiBlitz3.ab3@16057>   LSL.w #1,D1
0002C24A <AmiBlitz3.ab3@16058>   OR.w leaamp2,D1
0002C24E <AmiBlitz3.ab3@16059> BRA.w writeword
0002C252 <AmiBlitz3.ab3@16063>   MOVE.w #$D200,D1
0002C256 <AmiBlitz3.ab3@16064>    BSR.w Atokejsr
0002C258 <AmiBlitz3.ab3@16065>   MOVEQ.l #$03,D2
0002C25A <AmiBlitz3.ab3@16066> RTS
0002C25E <AmiBlitz3.ab3@16070> addrcode:  Dc.b $20,$6D,$00,$00                            ;MOVEA.L $0000(A5),A0
0002C260 <AmiBlitz3.ab3@16071>            Dc.b $D0,$C0                                    ;ADDA.W  D0,A0
0002C262 <AmiBlitz3.ab3@16072>            Dc.b $20,$08                                    ;MOVE.L  A0,D0
0002C266 <AmiBlitz3.ab3@16078>    BSR.w get1bytemain
0002C268 <AmiBlitz3.ab3@16079>   MOVE.w D0,D1
0002C26C <AmiBlitz3.ab3@16080>    BPL.w syntaxerr
0002C26E <AmiBlitz3.ab3@16081>   MOVE.w D2,-(A7)
0002C272 <AmiBlitz3.ab3@16082>   BCLR #$F,D1
0002C276 <AmiBlitz3.ab3@16083>    BSR.w searchinstr
0002C27A <AmiBlitz3.ab3@16084>   MOVE.l $12(A2),D0
0002C27E <AmiBlitz3.ab3@16085>   TST.w -$2(A2,D0.L)
0002C282 <AmiBlitz3.ab3@16086>    BEQ.w freeerr
0002C284 <AmiBlitz3.ab3@16087>   MOVE.w (A7)+,D2
0002C286 <AmiBlitz3.ab3@16088> RTS
0002C28A <AmiBlitz3.ab3@16092>   MOVE.l $0(A5),D0
0002C28E <AmiBlitz3.ab3@16093>    BNE.b ucodeskip
0002C290 <AmiBlitz3.ab3@16094>   MOVEQ.l #-$01,D0
0002C294 <AmiBlitz3.ab3@16095> BRA.b usedcodef
0002C298 <AmiBlitz3.ab3@16098>   SUB.l $0(A5),D0
0002C29A <AmiBlitz3.ab3@16101>   LSR.w #8,D0
0002C29E <AmiBlitz3.ab3@16106>    MOVE.l $0(A5),D0
0002C2A2 <AmiBlitz3.ab3@16107>    BNE.b ucodeskip2
0002C2A4 <AmiBlitz3.ab3@16108>   MOVEQ.l #-$01,D0
0002C2A8 <AmiBlitz3.ab3@16109> BRA.b usedcode2f
0002C2AC <AmiBlitz3.ab3@16112>   SUB.l $0(A5),D0                                          ;usedcode2
0002C2AE <AmiBlitz3.ab3@16113>   LSR.w #8,D0
0002C2B0 <AmiBlitz3.ab3@16116>   LSR.w #8,D0
0002C2B2 <AmiBlitz3.ab3@16121>   MOVE.l D0,-(A7)
0002C2B4 <AmiBlitz3.ab3@16124>   MOVE.l (A7)+,D0
0002C2B6 <AmiBlitz3.ab3@16127>   MOVE.l D0,D0
0002C2BA <AmiBlitz3.ab3@16133>   BSR.w JL_0_A9A0
0002C2BE <AmiBlitz3.ab3@16135>   MOVE.w -$2(A2,D0.L),D3
0002C2C2 <AmiBlitz3.ab3@16136>   CMP.w #$9,D3
0002C2C6 <AmiBlitz3.ab3@16137>    BCC.w doused__skip
0002C2CA <AmiBlitz3.ab3@16141>   LEA usedcode(PC),A0
0002C2CE <AmiBlitz3.ab3@16142>   LEA usedcodef(PC),A1
0002C2D4 <AmiBlitz3.ab3@16144>   ANDI.w #$F1FF,$E+4(A0)                                   ;and #$f1ff,ucodediv-usedcode(a0) org source
0002C2D8 <AmiBlitz3.ab3@16145>   ANDI.w #$7,D3
0002C2DA <AmiBlitz3.ab3@16146>   LSL.w #8,D3
0002C2DC <AmiBlitz3.ab3@16147>   LSL.w #1,D3
0002C2E0 <AmiBlitz3.ab3@16148>   OR.w D3,$E+4(A0)                                         ;or  d3,ucodediv-usedcode(a0) org source
0002C2E4 <AmiBlitz3.ab3@16149> BRA.w doused__skip2
0002C2E8 <AmiBlitz3.ab3@16154>   LEA usedcode2(PC),A0
0002C2EC <AmiBlitz3.ab3@16155>   LEA usedcode2f(PC),A1
0002C2F2 <AmiBlitz3.ab3@16157>   ANDI.w #$F1FF,$10+4(A0)                                  ;and #$f1ff,ucodediv2-usedcode2(a0) org source
0002C2F4 <AmiBlitz3.ab3@16158>   SUBQ.w #8,D3
0002C2F6 <AmiBlitz3.ab3@16159>   LSL.w #8,D3
0002C2F8 <AmiBlitz3.ab3@16160>   LSL.w #1,D3
0002C2FC <AmiBlitz3.ab3@16161>   OR.w D3,$10+4(A0)                                        ;or  d3,ucodediv2-usedcode2(a0) org source
0002C300 <AmiBlitz3.ab3@16164>   MOVE.w -$6(A2,D0.L),D3
0002C304 <AmiBlitz3.ab3@16165>   MOVE.w D3,$C+4(A0)                                       ;move d3,ucodeskip-usedcode+2(a0) org source
0002C306 <AmiBlitz3.ab3@16166>   ADDQ.w #4,D3
0002C30A <AmiBlitz3.ab3@16167>   MOVE.w D3,$2(A0)
0002C310 <AmiBlitz3.ab3@16168>   MOVE.w regnum,D1
0002C314 <AmiBlitz3.ab3@16169>    BEQ.w doused__skip3
0002C318 <AmiBlitz3.ab3@16170>   MOVE.w usedprep(PC),D1
0002C31C <AmiBlitz3.ab3@16171>    BSR.w writeword
0002C320 <AmiBlitz3.ab3@16174>   BSR.w pokecode
0002C326 <AmiBlitz3.ab3@16175>   MOVE.w regnum,D1
0002C32A <AmiBlitz3.ab3@16176>    BEQ.w doused__skip4
0002C32C <AmiBlitz3.ab3@16177>   LSL.w #8,D1
0002C32E <AmiBlitz3.ab3@16178>   LSL.w #1,D1
0002C332 <AmiBlitz3.ab3@16179>   OR.w usedfix(PC),D1
0002C336 <AmiBlitz3.ab3@16180>    BSR.w writeword
0002C33A <AmiBlitz3.ab3@16181>   MOVE.w useddone(PC),D1
0002C33E <AmiBlitz3.ab3@16182>    BSR.w writeword
0002C340 <AmiBlitz3.ab3@16185>    MOVEQ.l #$02,D2
0002C344 <AmiBlitz3.ab3@16186> BRA.w get1bytemain
0002C348 <AmiBlitz3.ab3@16194>    BSR.w JL_0_A9A0
0002C34A <AmiBlitz3.ab3@16196>   MOVEQ.l #$00,D3
0002C34E <AmiBlitz3.ab3@16197>   MOVE.w -$4(A2,D0.L),D3
0002C352 <AmiBlitz3.ab3@16198>    BSR.w get1bytemain
0002C356 <AmiBlitz3.ab3@16199> BRA.w JL_0_B46E
0002C35A <AmiBlitz3.ab3@16206>    BSR.w get1bytemain
0002C35C <AmiBlitz3.ab3@16207>   MOVE.w D0,-(A7)
0002C360 <AmiBlitz3.ab3@16208>    BSR.w get1bytemain
0002C364 <AmiBlitz3.ab3@16209>   CMP.w #$28,D0
0002C368 <AmiBlitz3.ab3@16210>    BNE.w syntaxerr
0002C36A <AmiBlitz3.ab3@16211>   MOVE.w (A7)+,D0
0002C36E <AmiBlitz3.ab3@16212>    BSR.w JL_0_C340
0002C372 <AmiBlitz3.ab3@16213>    BSR.w reget
0002C376 <AmiBlitz3.ab3@16214>   CMP.w #$29,D0
0002C37A <AmiBlitz3.ab3@16215>    BNE.w syntaxerr
0002C37E <AmiBlitz3.ab3@16219>   LEA addrcode(PC),A0
0002C382 <AmiBlitz3.ab3@16220>   LEA addrcodef(PC),A1
0002C388 <AmiBlitz3.ab3@16221>   MOVE.w -$6(A2),$2(A0)
0002C38C <AmiBlitz3.ab3@16222>   MOVE.w $4(A0),D1
0002C390 <AmiBlitz3.ab3@16223>   ANDI.w #$FFF8,D1
0002C396 <AmiBlitz3.ab3@16224>   OR.w regnum,D1
0002C39A <AmiBlitz3.ab3@16225>   MOVE.w D1,$4(A0)
0002C39E <AmiBlitz3.ab3@16226>   MOVE.w $6(A0),D1
0002C3A2 <AmiBlitz3.ab3@16227>   ANDI.w #$F1FF,D1
0002C3A8 <AmiBlitz3.ab3@16228>   MOVE.w regnum,D0
0002C3AA <AmiBlitz3.ab3@16229>   LSL.w #8,D0
0002C3AC <AmiBlitz3.ab3@16230>   LSL.w #1,D0
0002C3AE <AmiBlitz3.ab3@16231>   OR.w D0,D1
0002C3B2 <AmiBlitz3.ab3@16232>   MOVE.w D1,$6(A0)
0002C3B6 <AmiBlitz3.ab3@16233>    BSR.w pokecode
0002C3B8 <AmiBlitz3.ab3@16234>   MOVEQ.l #$03,D2
0002C3BC <AmiBlitz3.ab3@16235> BRA.w get1bytemain
0002C3C0 <AmiBlitz3.ab3@16239>   CMP.w #-$7F4D,D0
0002C3C4 <AmiBlitz3.ab3@16240>    BHI.w JL_0_AAFE
0002C3C8 <AmiBlitz3.ab3@16241> BRA.w syntaxerr
0002C3CC <AmiBlitz3.ab3@16248> .do_null   CMP.w #$b581,d0
0002C3D0 <AmiBlitz3.ab3@16249>    BNE 'nonull
0002C3D6 <AmiBlitz3.ab3@16250>    MOVE.l d0,lastinstruction
0002C3DA <AmiBlitz3.ab3@16251>    MOVE.w #$7000,d1                                            ;asm instr moveq #0,dx
0002C3E0 <AmiBlitz3.ab3@16252>    MOVE.w regnum,d0
0002C3E2 <AmiBlitz3.ab3@16253>    ASL.l #7,d0
0002C3E4 <AmiBlitz3.ab3@16254>    ASL.l #2,d0
0002C3E6 <AmiBlitz3.ab3@16255>    OR.l d0,d1
0002C3EA <AmiBlitz3.ab3@16256>    BSR writeword
0002C3F0 <AmiBlitz3.ab3@16257>    JSR get1bytemain
0002C3F2 <AmiBlitz3.ab3@16258>    RTS
0002C3F6 <AmiBlitz3.ab3@16260> 'nonull CMP.w #$c982,d0
0002C3FA <AmiBlitz3.ab3@16261>        BNE nonew_
0002C3FC <AmiBlitz3.ab3@16263>   MOVE.l a5,-(a7)
0002C402 <AmiBlitz3.ab3@16264>   MOVE.w lastchar,-(a7)
0002C408 <AmiBlitz3.ab3@16265>   JSR get1bytemain
0002C40C <AmiBlitz3.ab3@16266>   CMP.w #"(",d0                                             ; use oldcode
0002C410 <AmiBlitz3.ab3@16267>   BNE 'newcode
0002C416 <AmiBlitz3.ab3@16268>   JSR get1bytemain
0002C41A <AmiBlitz3.ab3@16269>   CMP.w #")",d0
0002C41E <AmiBlitz3.ab3@16270>   BEQ 'newcode
0002C424 <AmiBlitz3.ab3@16271>   MOVE.w (a7)+,lastchar
0002C426 <AmiBlitz3.ab3@16272>   MOVE.l (a7)+,a5
0002C42C <AmiBlitz3.ab3@16273>   MOVE.w lastchar,d0
0002C430 <AmiBlitz3.ab3@16274>   BRA nonew_
0002C432 <AmiBlitz3.ab3@16275> 'newcode  MOVE.l a0,-(a7)
0002C438 <AmiBlitz3.ab3@16276>   TST.b blitzparloop
0002C43C <AmiBlitz3.ab3@16277>   BNE 'err
0002C442 <AmiBlitz3.ab3@16278>   TST.b funcparloop
0002C446 <AmiBlitz3.ab3@16279>   BNE 'err
0002C44A <AmiBlitz3.ab3@16280>   BRA 'ok
0002C450 <AmiBlitz3.ab3@16281> 'err JMP errornewnotincalls
0002C456 <AmiBlitz3.ab3@16282> 'ok  MOVE.l #$203c0000,d1
0002C45A <AmiBlitz3.ab3@16283>   BSR writelong                                            ; 68k asm move.l #$xx,d0
0002C45C <AmiBlitz3.ab3@16284>   MOVEQ #0,d1
0002C460 <AmiBlitz3.ab3@16285>   MOVE.w 8(a0),d1
0002C464 <AmiBlitz3.ab3@16286>   BSR writeword
0002C468 <AmiBlitz3.ab3@16287>   MOVE.w #$7200,d1                                         ; 68k asm "moveq #0,d1"
0002C46C <AmiBlitz3.ab3@16288>   BSR writeword
0002C470 <AmiBlitz3.ab3@16289>   MOVE.w #$C002,D1                                         ;call function to alloc global mem
0002C474 <AmiBlitz3.ab3@16290>   BSR.w tokejsr2
0002C476 <AmiBlitz3.ab3@16291>   MOVE.l (a7)+,a0
0002C478 <AmiBlitz3.ab3@16292>   ADDQ.l #6,a7                      ; a5 need not restore
0002C47C <AmiBlitz3.ab3@16293>   CMP.w #")",d0
0002C480 <AmiBlitz3.ab3@16294>   BNE 'nobracket
0002C486 <AmiBlitz3.ab3@16295>   JSR get1bytemain
0002C488 <AmiBlitz3.ab3@16296> 'nobracket  RTS
0002C48C <AmiBlitz3.ab3@16298> nonew_  CMP.w #-$7F4A,D0
0002C490 <AmiBlitz3.ab3@16299>    BEQ.w JL_0_A98C
0002C494 <AmiBlitz3.ab3@16300>   CMP.w #-$7F48,D0
0002C498 <AmiBlitz3.ab3@16301>    BEQ.w doaddr
0002C49C <AmiBlitz3.ab3@16302>   CMP.w #-$7F3C,D0
0002C4A0 <AmiBlitz3.ab3@16303>    BEQ.w domaximum
0002C4A4 <AmiBlitz3.ab3@16304>   CMP.w #-$7F2F,D0
0002C4A8 <AmiBlitz3.ab3@16305>    BEQ.w doused
0002C4AA <AmiBlitz3.ab3@16306>   MOVE.w D2,-(A7)
0002C4AC <AmiBlitz3.ab3@16307>   MOVE.w D0,D1
0002C4B0 <AmiBlitz3.ab3@16308>   BCLR #$F,D1
0002C4B4 <AmiBlitz3.ab3@16310>    BSR.w searchinstr
0002C4B6 <AmiBlitz3.ab3@16311>   MOVE.w (A3),D1
0002C4BA <AmiBlitz3.ab3@16312>   BTST #$1,D1
0002C4BE <AmiBlitz3.ab3@16313>    BEQ.w noreturn_                                         ;syntax error noreturn
0002C4C2 <AmiBlitz3.ab3@16314>   BTST #$2,D1
0002C4C6 <AmiBlitz3.ab3@16315>    BNE.w JL_0_AC1A
0002C4C8 <AmiBlitz3.ab3@16316>   LSR.w #8,D1
0002C4CE <AmiBlitz3.ab3@16317>   BTST #$3,$1(A3)
0002C4D2 <AmiBlitz3.ab3@16318>    BEQ.w JL_0_AB4C
0002C4D8 <AmiBlitz3.ab3@16319>    JSR AJL_0_498A
0002C4DE <AmiBlitz3.ab3@16322>    CLR.l rightsidetype
0002C4E0 <AmiBlitz3.ab3@16323>    MOVE.w D1,-(A7)                                         ;is library instruction
0002C4E4 <AmiBlitz3.ab3@16324>   CMP.w #$7,D1
0002C4E8 <AmiBlitz3.ab3@16325>    BNE.w JL_0_AB5E
0002C4EA <AmiBlitz3.ab3@16326>   MOVE.l A2,-(A7)
0002C4EE <AmiBlitz3.ab3@16327>    BSR.w makesbase
0002C4F0 <AmiBlitz3.ab3@16328>   MOVEA.l (A7)+,A2
0002C4F4 <AmiBlitz3.ab3@16331>     BSR.w JL_0_AFA2
0002C4F6 <AmiBlitz3.ab3@16332>   MOVE.w D3,-(A7)
0002C4FA <AmiBlitz3.ab3@16333>    BSR.w get1bytemain
0002C4FC <AmiBlitz3.ab3@16334>   MOVEQ.l #$00,D1
0002C500 <AmiBlitz3.ab3@16335>   CMP.w #$28,D0
0002C504 <AmiBlitz3.ab3@16336>    BNE.w JL_0_AB80
0002C50A <AmiBlitz3.ab3@16337>    JSR JL_0_66F6
0002C50C <AmiBlitz3.ab3@16338>   TST.w D1
0002C510 <AmiBlitz3.ab3@16339>    BEQ.w syntaxerr
0002C514 <AmiBlitz3.ab3@16340> BRA.w JL_0_AB84
0002C51E <AmiBlitz3.ab3@16345>   MOVE.w oldqflag,instringon
0002C524 <AmiBlitz3.ab3@16346>   MOVEA.l lastsourcepos,A5
0002C52A <AmiBlitz3.ab3@16349>    MOVE.w regnum,-(A7)
0002C534 <AmiBlitz3.ab3@16350>    MOVE.w regnum,regnumstore
0002C53A <AmiBlitz3.ab3@16351>    TST.b fpu
0002C53E <AmiBlitz3.ab3@16352>             BEQ 'nofloat
0002C544 <AmiBlitz3.ab3@16353>             CMP.w #$ffff,28(a3)
0002C548 <AmiBlitz3.ab3@16354>             BNE 'nofloat
0002C54E <AmiBlitz3.ab3@16355>             CMP.w #$3c01,34(a3)                            ;val do nofpu stuff
0002C552 <AmiBlitz3.ab3@16356>             BEQ 'nofloat
0002C558 <AmiBlitz3.ab3@16357>             CMP.w #$3c02,34(a3)                            ;int skip
0002C55C <AmiBlitz3.ab3@16358>             BEQ 'quick
0002C560 <AmiBlitz3.ab3@16359>             CMP.b #5,(a3)
0002C564 <AmiBlitz3.ab3@16360>             BNE 'nofloat
0002C56A <AmiBlitz3.ab3@16363>             CLR.l load_var_addr
0002C56E <AmiBlitz3.ab3@16364> BRA 'isfpu
0002C574 <AmiBlitz3.ab3@16367>    CLR.w regnum
0002C576 <AmiBlitz3.ab3@16370>    MOVE.w D1,-(A7)
0002C57C <AmiBlitz3.ab3@16371>   BTST #$3,$1(A3)
0002C580 <AmiBlitz3.ab3@16372>    BEQ.w JL_0_ABB0
0002C584 <AmiBlitz3.ab3@16391>   MOVE.w $6(A7),D1
0002C58A <AmiBlitz3.ab3@16392>   MOVE.w d1,peeksize
0002C58E <AmiBlitz3.ab3@16402>   ORI.w #$7000,D1
0002C592 <AmiBlitz3.ab3@16403>   BSR.w writeword                                          ;write peekmode
0002C598 <AmiBlitz3.ab3@16406>   ADDQ.w #1,regnum
0002C59A <AmiBlitz3.ab3@16407>   MOVE.w (A7),D1
0002C5A2 <AmiBlitz3.ab3@16410>   MOVE.w 2(a7),tempregnum
0002C5A8 <AmiBlitz3.ab3@16411>   JSR JL_0_4878
0002C5AA <AmiBlitz3.ab3@16412>   TST.w (A7)+
0002C5AE <AmiBlitz3.ab3@16413>   BEQ.w JL_0_ABC6
0002C5B2 <AmiBlitz3.ab3@16414>   CMP.w #")",D0                                             ; check if ) here for correct end of blitzlib function call
0002C5B6 <AmiBlitz3.ab3@16415>   BNE.w errorbracketmiss                                    ; was syntax error
0002C5BC <AmiBlitz3.ab3@16416>   CLR.l lasttoken
0002C5C0 <AmiBlitz3.ab3@16417>   BSR.w get1bytemain
0002C5C2 <AmiBlitz3.ab3@16420>    MOVE.w (A7)+,D1
0002C5C8 <AmiBlitz3.ab3@16421>   MOVE.w D1,regnum
0002C5CC <AmiBlitz3.ab3@16422>    BEQ.w JL_0_ABDE
0002C5D2 <AmiBlitz3.ab3@16423>    CMP.w #$3c01,24(a2)                                     ;val skipped
0002C5D6 <AmiBlitz3.ab3@16424>    BNE 'noval
0002C5DC <AmiBlitz3.ab3@16425>    TST.b fpu
0002C5E0 <AmiBlitz3.ab3@16426>    BEQ 'noval
0002C5E6 <AmiBlitz3.ab3@16427>    CLR.l load_var_addr
0002C5E8 <AmiBlitz3.ab3@16428>    MOVEQ #0,d1
0002C5EE <AmiBlitz3.ab3@16429>    MOVE.w regnum,d1
0002C5F0 <AmiBlitz3.ab3@16430>    LSL.l #7,d1
0002C5F6 <AmiBlitz3.ab3@16431>    OR.l #$f2000000,d1
0002C5FA <AmiBlitz3.ab3@16432>    BSR writelong
0002C5FE <AmiBlitz3.ab3@16433> BRA JL_0_ABDE
0002C604 <AmiBlitz3.ab3@16437>    CMP.w #$3c02,24(a2)                                     ;int skipped
0002C608 <AmiBlitz3.ab3@16438>    BEQ 'quick
0002C60C <AmiBlitz3.ab3@16439>    CMP.b #5,d2
0002C610 <AmiBlitz3.ab3@16440>    BNE 'nofpu
0002C616 <AmiBlitz3.ab3@16441>    TST.b fpu
0002C61A <AmiBlitz3.ab3@16442>    BEQ 'nofpu
0002C620 <AmiBlitz3.ab3@16447>    CLR.l load_var_addr
0002C624 <AmiBlitz3.ab3@16448> BRA JL_0_ABDE
0002C626 <AmiBlitz3.ab3@16451>   LSL.w #8,D1
0002C628 <AmiBlitz3.ab3@16452>   LSL.w #1,D1
0002C62C <AmiBlitz3.ab3@16453>   ORI.w #$2000,D1
0002C630 <AmiBlitz3.ab3@16454>   BSR.w writeword                                          ;write move.l d0,dx
0002C636 <AmiBlitz3.ab3@16455>   TST.b fpu
0002C63A <AmiBlitz3.ab3@16456>   BEQ JL_0_ABDE
0002C63C <AmiBlitz3.ab3@16457>   MOVEQ #0,d1
0002C642 <AmiBlitz3.ab3@16458>   MOVE.w regnum,d1
0002C644 <AmiBlitz3.ab3@16459>   LSL.l #7,d1
0002C64A <AmiBlitz3.ab3@16460>   OR.l #$f2000000,d1
0002C64C <AmiBlitz3.ab3@16464>        MOVE.w (A7)+,D3
0002C650 <AmiBlitz3.ab3@16465>        BEQ.w JL_0_ABFC
0002C656 <AmiBlitz3.ab3@16466>        TST.b fpu
0002C65A <AmiBlitz3.ab3@16467>        BEQ 'nofpu
0002C65C <AmiBlitz3.ab3@16468>       MOVE.l d0,-(a7)
0002C65E <AmiBlitz3.ab3@16469>        MOVE.l a0,-(a7)
0002C664 <AmiBlitz3.ab3@16470>        MOVE.l stacktrack,d1
0002C66A <AmiBlitz3.ab3@16471>        LEA fpustackbase,a0
0002C672 <AmiBlitz3.ab3@16472>        MOVE.w 0(a0,d1),regmask
0002C674 <AmiBlitz3.ab3@16473>        MOVE.l (a7)+,a0
0002C678 <AmiBlitz3.ab3@16474>       MOVE.w #8,d0
0002C67C <AmiBlitz3.ab3@16477>       BEQ 'ready
0002C682 <AmiBlitz3.ab3@16478>       BTST d0,regmask
0002C686 <AmiBlitz3.ab3@16479>       BEQ 'noa7
0002C688 <AmiBlitz3.ab3@16480>       MOVEQ #0,d1
0002C68A <AmiBlitz3.ab3@16481>       MOVE.w d0,d1
0002C68C <AmiBlitz3.ab3@16482>       SUBQ.w #1,d1
0002C68E <AmiBlitz3.ab3@16483>       ASL #7,d1
0002C694 <AmiBlitz3.ab3@16485>       OR.l #$f21f5400,d1                                   ;fmove.d (a7)+
0002C698 <AmiBlitz3.ab3@16486>       BSR writelong
0002C69E <AmiBlitz3.ab3@16487>       SUBQ.l #2,stacktrack
0002C6A0 <AmiBlitz3.ab3@16490>       SUBQ.w #1,d0
0002C6A4 <AmiBlitz3.ab3@16491>       BNE 'loop
0002C6A6 <AmiBlitz3.ab3@16494>       MOVE.l (a7)+,d0
0002C6AC <AmiBlitz3.ab3@16495>       SUBQ.l #2,stacktrack                                 ;int track
0002C6B0 <AmiBlitz3.ab3@16498>    MOVE.w #$4CDF,D1
0002C6B4 <AmiBlitz3.ab3@16499>    BSR.w writeword                                         ;write movem.l (a7)+,
0002C6B6 <AmiBlitz3.ab3@16500>   MOVEQ.l #$00,D1
0002C6B8 <AmiBlitz3.ab3@16501>   MOVEQ.l #$0F,D4
0002C6BA <AmiBlitz3.ab3@16504>     LSL.w #1,D3
0002C6BC <AmiBlitz3.ab3@16505>     ROXR.w #1,D1
0002C6C0 <AmiBlitz3.ab3@16506>   DBF D4,JL_0_ABF0
0002C6C4 <AmiBlitz3.ab3@16508>    BSR.w writeword
0002C6CA <AmiBlitz3.ab3@16509>    TST.b fast
0002C6CE <AmiBlitz3.ab3@16510>    BEQ JL_0_ABFC
0002C6D4 <AmiBlitz3.ab3@16511>    TST.w regnum
0002C6D8 <AmiBlitz3.ab3@16512>    BEQ JL_0_ABFC
0002C6DE <AmiBlitz3.ab3@16513>    CMP.w #$3c0e,$1c(a3)                                    ;true
0002C6E2 <AmiBlitz3.ab3@16514>    BNE 'l1
0002C6E8 <AmiBlitz3.ab3@16515>    MOVE.w regnum,d1
0002C6EA <AmiBlitz3.ab3@16516>    ASL.l #8,d1
0002C6EC <AmiBlitz3.ab3@16517>    ASL.l #1,d1
0002C6F0 <AmiBlitz3.ab3@16518>    OR.w #$70ff,d1
0002C6FA <AmiBlitz3.ab3@16519>    SUB.l #12,destpointer
0002C6FE <AmiBlitz3.ab3@16520>    BSR writeword
0002C704 <AmiBlitz3.ab3@16523>   CMP.w #$3c0f,$1c(a3)                                     ;false
0002C708 <AmiBlitz3.ab3@16524>    BNE 'l2
0002C70E <AmiBlitz3.ab3@16525>     MOVE.w regnum,d1
0002C710 <AmiBlitz3.ab3@16526>     ASL.l #8,d1
0002C712 <AmiBlitz3.ab3@16527>     ASL.l #1,d1
0002C716 <AmiBlitz3.ab3@16528>     OR.w #$7000,d1
0002C720 <AmiBlitz3.ab3@16529>     SUB.l #12,destpointer
0002C724 <AmiBlitz3.ab3@16530>     BSR writeword
0002C726 <AmiBlitz3.ab3@16534>    MOVE.w (A7)+,D2
0002C72A <AmiBlitz3.ab3@16535>   CMP.w #$7,D2                                             ;destination var type
0002C72E <AmiBlitz3.ab3@16536>    BNE.w JL_0_AC16
0002C734 <AmiBlitz3.ab3@16537>   MOVE.w putstlen,D1
0002C73A <AmiBlitz3.ab3@16538>   OR.w regnum,D1
0002C73E <AmiBlitz3.ab3@16539>    BSR.w writeword
0002C742 <AmiBlitz3.ab3@16542> BRA.w JL_0_AF66
0002C746 <AmiBlitz3.ab3@16547>   MOVE.w $6(A3),D1
0002C74A <AmiBlitz3.ab3@16548>    BSR.w uselib
0002C74E <AmiBlitz3.ab3@16549>    BSR.w JL_0_AD40
0002C750 <AmiBlitz3.ab3@16550>   MOVE.l D4,D1
0002C752 <AmiBlitz3.ab3@16551>   MOVE.l D5,-(A7)
0002C756 <AmiBlitz3.ab3@16552>    BSR.w JL_0_AD38
0002C75A <AmiBlitz3.ab3@16553>   MOVE.w $A(A1),-(A7)
0002C75C <AmiBlitz3.ab3@16554>   ADDQ.w #8,A3
0002C75E <AmiBlitz3.ab3@16555>   MOVE.w (A3)+,-(A7)
0002C760 <AmiBlitz3.ab3@16556>   MOVE.l A3,-(A7)
0002C764 <AmiBlitz3.ab3@16557>    BSR.w get1bytemain
0002C766 <AmiBlitz3.ab3@16558>   MOVE.w D0,-(A7)
0002C768 <AmiBlitz3.ab3@16559>   MOVEQ.l #$00,D3
0002C76E <AmiBlitz3.ab3@16560>   JSR checka4a5
0002C770 <AmiBlitz3.ab3@16562>   MOVE.b (A3)+,D1
0002C774 <AmiBlitz3.ab3@16563>    BMI.w JL_0_AC6A
0002C776 <AmiBlitz3.ab3@16564>   MOVEQ.l #$03,D2
0002C778 <AmiBlitz3.ab3@16565>   ADDQ.w #1,D3
0002C77C <AmiBlitz3.ab3@16566>   MOVEM.l D3/A3,-(A7)
0002C782 <AmiBlitz3.ab3@16567>   MOVE.b funcparloop,-(a7)
0002C788 <AmiBlitz3.ab3@16568>   CLR.b funcparloop
0002C78E <AmiBlitz3.ab3@16569>   MOVE.b blitzparloop,-(a7)
0002C796 <AmiBlitz3.ab3@16570>   MOVE.b #1,blitzparloop
0002C79C <AmiBlitz3.ab3@16571>   MOVE.l lasttoken,-(a7)
0002C7A2 <AmiBlitz3.ab3@16572>   MOVE.l leftsidetype,-(a7)
0002C7A8 <AmiBlitz3.ab3@16573>   MOVE.l rightsidetype,-(a7)
0002C7AC <AmiBlitz3.ab3@16574>   BSR.w peval
0002C7B2 <AmiBlitz3.ab3@16575>   MOVE.l (a7)+,rightsidetype
0002C7B8 <AmiBlitz3.ab3@16576>   MOVE.l (a7)+,leftsidetype
0002C7BE <AmiBlitz3.ab3@16577>   MOVE.l (a7)+,lasttoken
0002C7C4 <AmiBlitz3.ab3@16578>   MOVE.b (a7)+,blitzparloop
0002C7CA <AmiBlitz3.ab3@16579>   MOVE.b (a7)+,funcparloop
0002C7D0 <AmiBlitz3.ab3@16580>   SUBQ.w #4,a2offset
0002C7D4 <AmiBlitz3.ab3@16581>   MOVEM.l (A7)+,D3/A3
0002C7D8 <AmiBlitz3.ab3@16582>   CMP.w #$2C,D0
0002C7DC <AmiBlitz3.ab3@16583>    BEQ.w JL_0_AC40
0002C7DE <AmiBlitz3.ab3@16584>   TST.b (A3)
0002C7E2 <AmiBlitz3.ab3@16585>    BPL.w syntaxerr
0002C7E4 <AmiBlitz3.ab3@16588>   MOVE.w (A7)+,D1
0002C7E8 <AmiBlitz3.ab3@16589>    BSR.w JL_0_AD04
0002C7EA <AmiBlitz3.ab3@16590>   MOVEA.l (A7)+,A3
0002C7EC <AmiBlitz3.ab3@16591>   SUBQ.w #1,D3
0002C7F0 <AmiBlitz3.ab3@16592>    BMI.w JL_0_ACBE
0002C7F2 <AmiBlitz3.ab3@16595>   TST.b (A3)+
0002C7F6 <AmiBlitz3.ab3@16596>    BPL.w JL_0_AC78
0002C7F8 <AmiBlitz3.ab3@16597>   SUBQ.w #1,A3
0002C7FA <AmiBlitz3.ab3@16600>     MOVEQ.l #$00,D1
0002C7FC <AmiBlitz3.ab3@16601>     MOVE.b -(A3),D1
0002C800 <AmiBlitz3.ab3@16602>     BTST #$4,D1
0002C804 <AmiBlitz3.ab3@16603>      BNE.w JL_0_ACAA
0002C80A <AmiBlitz3.ab3@16604>     CMP.w regnum,D1
0002C80E <AmiBlitz3.ab3@16605>      BCC.w JL_0_AC9E
0002C810 <AmiBlitz3.ab3@16606>     BSET D1,D5
0002C812 <AmiBlitz3.ab3@16607>     MOVEQ.l #$0F,D0
0002C814 <AmiBlitz3.ab3@16608>     SUB.w D1,D0
0002C816 <AmiBlitz3.ab3@16609>     BSET D0,D4
0002C818 <AmiBlitz3.ab3@16612>     LSL.w #8,D1
0002C81A <AmiBlitz3.ab3@16613>     LSL.w #1,D1
0002C81E <AmiBlitz3.ab3@16614>     ORI.w #$201F,D1
0002C822 <AmiBlitz3.ab3@16615>   BRA.w JL_0_ACB6
0002C826 <AmiBlitz3.ab3@16618>     ANDI.w #$7,D1
0002C828 <AmiBlitz3.ab3@16619>     LSL.w #8,D1
0002C82A <AmiBlitz3.ab3@16620>     LSL.w #1,D1
0002C82E <AmiBlitz3.ab3@16621>     ORI.w #$205F,D1
0002C832 <AmiBlitz3.ab3@16624>      BSR.w writeword
0002C836 <AmiBlitz3.ab3@16625>   DBF D3,JL_0_AC80
0002C83C <AmiBlitz3.ab3@16628>   MOVE.w (A7)+,libjsr+2
0002C842 <AmiBlitz3.ab3@16629>   MOVE.w (A7)+,libbase+2
0002C848 <AmiBlitz3.ab3@16630>   MOVE.l libbase,D1
0002C84C <AmiBlitz3.ab3@16631>    BSR.w writelong
0002C852 <AmiBlitz3.ab3@16632>   MOVE.l libjsr,D1
0002C856 <AmiBlitz3.ab3@16633>    BSR.w writelong
0002C85C <AmiBlitz3.ab3@16634>   MOVE.w regnum,D1
0002C860 <AmiBlitz3.ab3@16635>    BEQ.w JL_0_ACF4
0002C862 <AmiBlitz3.ab3@16636>   LSL.w #8,D1
0002C864 <AmiBlitz3.ab3@16637>   LSL.w #1,D1
0002C868 <AmiBlitz3.ab3@16638>   ORI.w #$2000,D1
0002C86C <AmiBlitz3.ab3@16639>    BSR.w writeword
0002C86E <AmiBlitz3.ab3@16642>   MOVE.l (A7)+,D1
0002C872 <AmiBlitz3.ab3@16643>    BSR.w JL_0_AD38
0002C878 <AmiBlitz3.ab3@16644>    JSR restorea4a5
0002C87A <AmiBlitz3.ab3@16645>   MOVEQ.l #$03,D2
0002C87E <AmiBlitz3.ab3@16646>    BSR.w reget
0002C882 <AmiBlitz3.ab3@16647> BRA.w JL_0_AF66
0002C884 <AmiBlitz3.ab3@16650>   TST.w D3
0002C888 <AmiBlitz3.ab3@16651>    BEQ.w JL_0_AD1E
0002C88C <AmiBlitz3.ab3@16652>   CMP.w #$28,D1
0002C890 <AmiBlitz3.ab3@16653>    BNE.w syntaxerr
0002C894 <AmiBlitz3.ab3@16654>   CMP.w #$29,D0
0002C898 <AmiBlitz3.ab3@16655>    BNE.w syntaxerr
0002C89C <AmiBlitz3.ab3@16656> BRA.w get1bytemain
0002C8A0 <AmiBlitz3.ab3@16659>   CMP.w #$28,D1
0002C8A4 <AmiBlitz3.ab3@16660>    BNE.w JL_0_AD36
0002C8A8 <AmiBlitz3.ab3@16661>    BSR.w get1bytemain
0002C8AC <AmiBlitz3.ab3@16662>   CMP.w #$29,D0
0002C8B0 <AmiBlitz3.ab3@16663>    BNE.w syntaxerr
0002C8B4 <AmiBlitz3.ab3@16664> BRA.w get1bytemain
0002C8B6 <AmiBlitz3.ab3@16667> RTS
0002C8B8 <AmiBlitz3.ab3@16670>   TST.w D1
0002C8BC <AmiBlitz3.ab3@16671>    BNE.w writelong
0002C8BE <AmiBlitz3.ab3@16672> RTS
0002C8C2 <AmiBlitz3.ab3@16676>   MOVE.w #$48E7,D4
0002C8C4 <AmiBlitz3.ab3@16677>   SWAP D4
0002C8C6 <AmiBlitz3.ab3@16678>   CLR.w D4
0002C8CA <AmiBlitz3.ab3@16679>   MOVE.w #$4CDF,D5
0002C8CC <AmiBlitz3.ab3@16680>   SWAP D5
0002C8CE <AmiBlitz3.ab3@16681>   CLR.w D5
0002C8D4 <AmiBlitz3.ab3@16682>   MOVE.w regnum,D1
0002C8D8 <AmiBlitz3.ab3@16683>    BEQ.w JL_0_AD74
0002C8DC <AmiBlitz3.ab3@16684>   BSET #$F,D4
0002C8E0 <AmiBlitz3.ab3@16685>   BSET #$0,D5
0002C8E4 <AmiBlitz3.ab3@16686>   CMP.w #$2,D1
0002C8E8 <AmiBlitz3.ab3@16687>    BCS.w JL_0_AD72
0002C8EC <AmiBlitz3.ab3@16690>   BSET #$E,D4
0002C8F0 <AmiBlitz3.ab3@16691>   BSET #$1,D5
0002C8F2 <AmiBlitz3.ab3@16694> RTS
0002C8F8 <AmiBlitz3.ab3@16697>   TST.w fuckpos
0002C8FC <AmiBlitz3.ab3@16698>   BNE.w JL_0_AD6A
0002C8FE <AmiBlitz3.ab3@16699> RTS
0002C900 <AmiBlitz3.ab3@16702> fuckpos:  Ds.w 1
0002C906 <AmiBlitz3.ab3@16706>   MOVE.w sbasegot,D1
0002C90A <AmiBlitz3.ab3@16707>    BEQ.w makesbase__skip
0002C90E <AmiBlitz3.ab3@16711>   MOVE.w sbgot(PC),D1
0002C912 <AmiBlitz3.ab3@16712>    BNE.w makesbase__skip2
0002C91A <AmiBlitz3.ab3@16716>   MOVE.w #$0002,sbgot
0002C920 <AmiBlitz3.ab3@16717>   MOVE.w movea3a7,D1
0002C924 <AmiBlitz3.ab3@16718> BRA.w writeword
0002C926 <AmiBlitz3.ab3@16721> RTS
0002C92E <AmiBlitz3.ab3@16726>   MOVE.w #$0001,sbgot                                      ;voodoo magic! - Will it work?
0002C934 <AmiBlitz3.ab3@16729>   MOVE.l #$C601,D1
0002C93C <AmiBlitz3.ab3@16730>   MOVE.w #-1,sbasegot
0002C942 <AmiBlitz3.ab3@16731>   MOVE.l d1,lastinstruction
0002C946 <AmiBlitz3.ab3@16732>   BSR.w Atokejsr
0002C948 <AmiBlitz3.ab3@16733> RTS
0002C952 <AmiBlitz3.ab3@16738>   MOVE.l data1,litdata1
0002C958 <AmiBlitz3.ab3@16739>   TST.b fast
0002C95C <AmiBlitz3.ab3@16740>   BEQ 'l50                                                 ;optistring  seem impossible to get work
0002C960 <AmiBlitz3.ab3@16744> BRA 'l50                                                   ;to deactivate
0002C966 <AmiBlitz3.ab3@16750>   TST.b optistring
0002C96A <AmiBlitz3.ab3@16751>   BNE.s 'l21
0002C970 <AmiBlitz3.ab3@16752>   CLR.b string1
0002C978 <AmiBlitz3.ab3@16753>   MOVE.b #1,optistring
0002C97E <AmiBlitz3.ab3@16754>   TST.b nostringopt
0002C982 <AmiBlitz3.ab3@16755>   BNE 'l21
0002C984 <AmiBlitz3.ab3@16756>   MOVE.l a5,a4
0002C986 <AmiBlitz3.ab3@16757>   SUBQ.l #1,a4
0002C988 <AmiBlitz3.ab3@16760>     TST.b (a4)
0002C98C <AmiBlitz3.ab3@16761>     BMI 'l19a
0002C990 <AmiBlitz3.ab3@16762>     BEQ.s 'l20
0002C994 <AmiBlitz3.ab3@16763>     CMP.b #$22,(a4)
0002C998 <AmiBlitz3.ab3@16764>     BEQ.s 'l19
0002C99E <AmiBlitz3.ab3@16767>     TST.w string1
0002C9A2 <AmiBlitz3.ab3@16768>     BNE 'l11
0002C9A6 <AmiBlitz3.ab3@16769>     CMP.b #":",(a4)
0002C9AA <AmiBlitz3.ab3@16770>     BEQ.s 'l20
0002C9AE <AmiBlitz3.ab3@16771>     CMP.b #";",(a4)
0002C9B2 <AmiBlitz3.ab3@16772>     BEQ.s 'l20
0002C9B6 <AmiBlitz3.ab3@16773>     CMP.b #"+",(a4)
0002C9BA <AmiBlitz3.ab3@16774>     BEQ.s 'l21
0002C9BE <AmiBlitz3.ab3@16775>     CMP.b #",",(a4)
0002C9C2 <AmiBlitz3.ab3@16776>     BEQ.s 'l20                                             ;was l21
0002C9C6 <AmiBlitz3.ab3@16777>     CMP.b #")",(a4)
0002C9CA <AmiBlitz3.ab3@16778>     BEQ.s 'l20                                             ;was l21
0002C9CC <AmiBlitz3.ab3@16781>     ADDQ.l #1,a4
0002C9D0 <AmiBlitz3.ab3@16782> BRA.s 'l10
0002C9D8 <AmiBlitz3.ab3@16785>   BCHG #0,string1
0002C9DC <AmiBlitz3.ab3@16786> BRA 'l18
0002C9DE <AmiBlitz3.ab3@16789>   ADDQ.l #1,a4
0002C9E0 <AmiBlitz3.ab3@16790>   TST.b (a4)
0002C9E4 <AmiBlitz3.ab3@16791>   BEQ 'l21
0002C9E8 <AmiBlitz3.ab3@16792> BRA 'l11
0002C9EA <AmiBlitz3.ab3@16795>   MOVE.l a5,a4
0002C9EC <AmiBlitz3.ab3@16796>   SUBQ.l #1,a4
0002C9F0 <AmiBlitz3.ab3@16799>   CMP.b #$20,-(a4)
0002C9F4 <AmiBlitz3.ab3@16800>   BEQ 'll1
0002C9F8 <AmiBlitz3.ab3@16801>   CMP.b #"+",(a4)
0002C9FC <AmiBlitz3.ab3@16802>   BEQ 'l21
0002CA04 <AmiBlitz3.ab3@16817>   MOVE.b #2,optistring
0002CA0C <AmiBlitz3.ab3@16820>   CMP.b #2,optistring
0002CA10 <AmiBlitz3.ab3@16821>   BEQ.s 'l100
0002CA14 <AmiBlitz3.ab3@16824>   BSR.w makesbase
0002CA18 <AmiBlitz3.ab3@16825>   BSR.w pokedata1                                          ;writestringsizespace
0002CA1C <AmiBlitz3.ab3@16826>   BSR.w pokedata1
0002CA1E <AmiBlitz3.ab3@16829>   MOVEQ.l #$00,D2
0002CA24 <AmiBlitz3.ab3@16832>     MOVE.l a5,lastsourcepos
0002CA26 <AmiBlitz3.ab3@16833>     MOVEQ #0,d0
0002CA28 <AmiBlitz3.ab3@16834>     MOVE.b (a5)+,d0
0002CA2A <AmiBlitz3.ab3@16835>     TST.w D0
0002CA2E <AmiBlitz3.ab3@16836>      BEQ.w notqerr
0002CA32 <AmiBlitz3.ab3@16837>     CMP.w #$22,D0                                          ; --- " ---
0002CA36 <AmiBlitz3.ab3@16838>      BEQ.w JL_0_ADF6
0002CA3A <AmiBlitz3.ab3@16839>     CMP.b #"\",d0
0002CA3E <AmiBlitz3.ab3@16840>      BNE 'l1
0002CA42 <AmiBlitz3.ab3@16841>     CMP.b #"\",(a5)
0002CA46 <AmiBlitz3.ab3@16842>      BNE 'l1
0002CA4C <AmiBlitz3.ab3@16843>     TST.b newsyntax
0002CA50 <AmiBlitz3.ab3@16844>      BEQ 'l1
0002CA56 <AmiBlitz3.ab3@16845>     CMP.w #"\\",1(a5)                                      ; new compiler constants
0002CA5A <AmiBlitz3.ab3@16846>     BNE 'l2
0002CA5C <AmiBlitz3.ab3@16847>     ADDQ #2,a5
0002CA5E <AmiBlitz3.ab3@16850>     ADDQ.w #1,D2
0002CA60 <AmiBlitz3.ab3@16851>     MOVE.w D0,D1
0002CA64 <AmiBlitz3.ab3@16852>     BSR.w pokedata1b                                        ;writestring
0002CA68 <AmiBlitz3.ab3@16853> BRA.w writestring
0002CA6E <AmiBlitz3.ab3@16856>     JSR check_newconstants
0002CA72 <AmiBlitz3.ab3@16857> BRA writestring
0002CA78 <AmiBlitz3.ab3@16860>   NOT instringon
0002CA7E <AmiBlitz3.ab3@16861>   MOVE.w dontwrite,D1
0002CA82 <AmiBlitz3.ab3@16862>   BNE.w JL_0_AE0A
0002CA8A <AmiBlitz3.ab3@16863>   CMP.b #2,optistring
0002CA8E <AmiBlitz3.ab3@16864>   BEQ 'l10
0002CA94 <AmiBlitz3.ab3@16865>     MOVEA.l litdata1,A0
0002CA96 <AmiBlitz3.ab3@16866>     CLR.w (A0)+                                            ;writesize
0002CA98 <AmiBlitz3.ab3@16867>     MOVE.w D2,(A0)
0002CA9C <AmiBlitz3.ab3@16871>   BSR.w JL_0_AEA4                                          ;writestringconstantcode
0002CAA2 <AmiBlitz3.ab3@16872>   ADDQ.l #1,data1
0002CAAA <AmiBlitz3.ab3@16873>   BCLR #$0,data1+3
0002CAAC <AmiBlitz3.ab3@16874>   MOVEQ.l #$07,D2
0002CAB0 <AmiBlitz3.ab3@16875> BRA.w get1bytemain
0002CAB4 <AmiBlitz3.ab3@16879>   BSR.w makename2
0002CAB8 <AmiBlitz3.ab3@16880>   BSR.w findlabel2
0002CABC <AmiBlitz3.ab3@16881>   BEQ.w JL_0_AE4A
0002CAC0 <AmiBlitz3.ab3@16882>   BSR.w addlabelhash
0002CAC4 <AmiBlitz3.ab3@16883>   CLR.l $4(A2)
0002CAC8 <AmiBlitz3.ab3@16884>   CLR.l $8(A2)
0002CAD0 <AmiBlitz3.ab3@16886>   MOVE.w linenumat+2,$10(A2)
0002CAD6 <AmiBlitz3.ab3@16887>   MOVE.w linenumat,d0
0002CAD8 <AmiBlitz3.ab3@16888>   MOVEQ #0,d1
0002CADC <AmiBlitz3.ab3@16889>   MOVE.b -1(a2,d7),d1
0002CAE0 <AmiBlitz3.ab3@16890>   MOVE.w d0,0(a2,d1)
0002CAE4 <AmiBlitz3.ab3@16891> BRA.w JL_0_AE52
0002CAE8 <AmiBlitz3.ab3@16894>   TST.l $8(A2)
0002CAEC <AmiBlitz3.ab3@16895>   BNE.w JL_0_AE88
0002CAF2 <AmiBlitz3.ab3@16898>   MOVEA.l _execbase,A6
0002CAF4 <AmiBlitz3.ab3@16899>   MOVEQ.l #$0C+2,D0
0002CAF6 <AmiBlitz3.ab3@16900>   MOVEQ.l #$01,D1
0002CAFC <AmiBlitz3.ab3@16901>   MOVE.l mempool,a0
0002CB00 <AmiBlitz3.ab3@16902>   JSR _AllocPooled(a6)
0002CB02 <AmiBlitz3.ab3@16904>   MOVEA.l D0,A0
0002CB06 <AmiBlitz3.ab3@16905>   MOVE.l $4(A2),(A0)
0002CB0A <AmiBlitz3.ab3@16906>   MOVE.l A0,$4(A2)
0002CB12 <AmiBlitz3.ab3@16907>   MOVE.l destpointer,$4(A0)
0002CB16 <AmiBlitz3.ab3@16908>   ADDQ.l #2,$4(A0)
0002CB1E <AmiBlitz3.ab3@16909>   MOVE.w procnum,$8(A0)
0002CB26 <AmiBlitz3.ab3@16910>   MOVE.w linenumat+2,$A(A0)
0002CB2E <AmiBlitz3.ab3@16911>   MOVE.w linenumat,$c(a0)
0002CB30 <AmiBlitz3.ab3@16912> RTS
0002CB34 <AmiBlitz3.ab3@16915>   MOVE.l $4(A2),D1
0002CB38 <AmiBlitz3.ab3@16916>   BTST #$0,D1
0002CB3C <AmiBlitz3.ab3@16917>    BNE.w illlaberr
0002CB42 <AmiBlitz3.ab3@16918>   MOVE.w procnum,D1
0002CB46 <AmiBlitz3.ab3@16919>   CMP.w $10(A2),D1
0002CB4A <AmiBlitz3.ab3@16920>    BNE.w referr
0002CB4C <AmiBlitz3.ab3@16921> RTS
0002CB4E <AmiBlitz3.ab3@16925>   MOVE.w D0,-(A7)
0002CB56 <AmiBlitz3.ab3@16926>   CMP.b #2,optistring
0002CB5A <AmiBlitz3.ab3@16927>   BEQ 'l10
0002CB60 <AmiBlitz3.ab3@16930>   MOVE.w numtoa0,D1
0002CB64 <AmiBlitz3.ab3@16931>    BSR.w writeword
0002CB68 <AmiBlitz3.ab3@16932>    BSR.w addoff
0002CB6E <AmiBlitz3.ab3@16933>   MOVE.l litdata1,D1
0002CB72 <AmiBlitz3.ab3@16934>    BSR.w writelong
0002CB78 <AmiBlitz3.ab3@16935>   MOVE.w pushlen,D1
0002CB7C <AmiBlitz3.ab3@16936>    BSR.w writeword
0002CB80 <AmiBlitz3.ab3@16937>   MOVE.w #$C600,D1
0002CB84 <AmiBlitz3.ab3@16938>    BSR.w Atokejsr
0002CB86 <AmiBlitz3.ab3@16939>   MOVE.w (A7)+,D0
0002CB88 <AmiBlitz3.ab3@16940> RTS
0002CB8A <AmiBlitz3.ab3@16943>   MOVEQ #0,d1
0002CB8E <AmiBlitz3.ab3@16944>   BSR.w pokedata1b
0002CB94 <AmiBlitz3.ab3@16945>   MOVE.l destpointer,a4
0002CB98 <AmiBlitz3.ab3@16946>   MOVE.w #$203c,d1
0002CB9E <AmiBlitz3.ab3@16947>   TST.w mode
0002CBA2 <AmiBlitz3.ab3@16948>   BNE 'lm10
0002CBA8 <AmiBlitz3.ab3@16949>    ADDQ.w #4,a2offset
0002CBAC <AmiBlitz3.ab3@16950>   MOVE.w #$2f3c,d1
0002CBB2 <AmiBlitz3.ab3@16953>   TST.w mode
0002CBB6 <AmiBlitz3.ab3@16954>   BEQ 'lm3
0002CBBC <AmiBlitz3.ab3@16955>   MOVE.w regnum,D0
0002CBBE <AmiBlitz3.ab3@16956>   LSL.w #8,D0
0002CBC0 <AmiBlitz3.ab3@16957>   LSL.w #1,D0
0002CBC2 <AmiBlitz3.ab3@16958>   OR.w d0,d1
0002CBC6 <AmiBlitz3.ab3@16959>   BSR writeword
0002CBCA <AmiBlitz3.ab3@16960>   BSR.w addoff
0002CBD0 <AmiBlitz3.ab3@16961>   MOVE.l litdata1,D1
0002CBD4 <AmiBlitz3.ab3@16962>   BSR.w writelong
0002CBDC <AmiBlitz3.ab3@16963>   CMP.w #3,mode
0002CBE0 <AmiBlitz3.ab3@16964>   BEQ 'l30
0002CBE6 <AmiBlitz3.ab3@16965>    ADDQ.w #4,a2offset
0002CBEA <AmiBlitz3.ab3@16966>   MOVE.w #$4878,D1
0002CBEE <AmiBlitz3.ab3@16967>   BSR.w writeword
0002CBF0 <AmiBlitz3.ab3@16968>   MOVE.l d2,d1
0002CBF4 <AmiBlitz3.ab3@16969>   BSR writeword
0002CBF6 <AmiBlitz3.ab3@16972>   MOVE.w (A7)+,D0
0002CBF8 <AmiBlitz3.ab3@16973> RTS
0002CBFE <AmiBlitz3.ab3@16976>   MOVE.l #$3f3c0007,d1
0002CC02 <AmiBlitz3.ab3@16977>   BSR writelong
0002CC08 <AmiBlitz3.ab3@16978>   MOVE.w regnum,D1
0002CC0A <AmiBlitz3.ab3@16979>   LSL.w #8,D1
0002CC0C <AmiBlitz3.ab3@16980>   LSL.w #1,D1
0002CC10 <AmiBlitz3.ab3@16981>   ORI.w #$2f3c,d1
0002CC14 <AmiBlitz3.ab3@16982>   BSR writeword
0002CC1A <AmiBlitz3.ab3@16983>    ADDQ.w #4,a2offset
0002CC1C <AmiBlitz3.ab3@16984>   MOVE.l d2,d1
0002CC20 <AmiBlitz3.ab3@16985>   BSR writelong
0002CC24 <AmiBlitz3.ab3@16986>   MOVE.w #$2f3c,d1
0002CC28 <AmiBlitz3.ab3@16987>   BSR writeword
0002CC2C <AmiBlitz3.ab3@16988>   BSR.w addoff
0002CC32 <AmiBlitz3.ab3@16989>   MOVE.l litdata1,D1
0002CC36 <AmiBlitz3.ab3@16990>   BSR.w writelong
0002CC38 <AmiBlitz3.ab3@16991>   MOVE.w (A7)+,D0
0002CC3A <AmiBlitz3.ab3@16992> RTS
0002CC3E <AmiBlitz3.ab3@16996>   BSR.w get1bytemain
0002CC42 <AmiBlitz3.ab3@16997>    BSR.w JL_0_AE22
0002CC48 <AmiBlitz3.ab3@16998>   MOVE.w regnum,D1
0002CC4A <AmiBlitz3.ab3@16999>   LSL.w #8,D1
0002CC4C <AmiBlitz3.ab3@17000>   LSL.w #1,D1
0002CC50 <AmiBlitz3.ab3@17001>   ORI.w #$203C,D1
0002CC54 <AmiBlitz3.ab3@17002>    BSR.w writeword
0002CC58 <AmiBlitz3.ab3@17003>    BSR.w addoff
0002CC5C <AmiBlitz3.ab3@17004>   MOVE.l $8(A2),D1
0002CC60 <AmiBlitz3.ab3@17005>    BSR.w writelong
0002CC62 <AmiBlitz3.ab3@17006>   MOVEQ.l #$03,D2
0002CC68 <AmiBlitz3.ab3@17007>   CLR.b peekaddrsize
0002CC6C <AmiBlitz3.ab3@17008> BRA.w reget
0002CC6E <AmiBlitz3.ab3@17011>   MOVEQ.l #$00,D3
0002CC72 <AmiBlitz3.ab3@17014>   BSR.w get1bytemain
0002CC76 <AmiBlitz3.ab3@17015>    BEQ.w syntaxerr
0002CC7A <AmiBlitz3.ab3@17016>   CMP.w #$22,D0
0002CC7E <AmiBlitz3.ab3@17017>    BEQ.w JL_0_AF1A
0002CC80 <AmiBlitz3.ab3@17018>   LSL.l #8,D3
0002CC82 <AmiBlitz3.ab3@17019>   MOVE.b D0,D3
0002CC86 <AmiBlitz3.ab3@17020> BRA.w JL_0_AF02
0002CC8A <AmiBlitz3.ab3@17023>   BSR.w get1bytemain
0002CC8E <AmiBlitz3.ab3@17024> BRA.w JL_0_B46E
0002CC90 <AmiBlitz3.ab3@17027>   MOVE.w D2,-(A7)                                          ;basicvarsforasm
0002CC94 <AmiBlitz3.ab3@17028>    BSR.w makename2
0002CC98 <AmiBlitz3.ab3@17029>    BSR.w findlabel2
0002CC9C <AmiBlitz3.ab3@17030>    BEQ.w 'l10
0002CCA2 <AmiBlitz3.ab3@17031>    LEA ptr_parameterstore,a0
0002CCA8 <AmiBlitz3.ab3@17032>    CMP.b #"@",-1(a0,d2.w)
0002CCAC <AmiBlitz3.ab3@17033>    BNE cnferr
0002CCB0 <AmiBlitz3.ab3@17034>    CLR.b -1(a0,d2.w)
0002CCB2 <AmiBlitz3.ab3@17035>    SUBQ.l #1,d2
0002CCB8 <AmiBlitz3.ab3@17036>    LEA varbase,a2
0002CCBC <AmiBlitz3.ab3@17037>    BSR findvariable
0002CCC0 <AmiBlitz3.ab3@17038>    BNE cnferr
0002CCC4 <AmiBlitz3.ab3@17039>    CMP.b #"\",d0
0002CCC8 <AmiBlitz3.ab3@17040>    BNE 'l6
0002CCCE <AmiBlitz3.ab3@17041>    ADDQ #1,lastsourcepos
0002CCD2 <AmiBlitz3.ab3@17042>    MOVE.l $a(a2),a2
0002CCD4 <AmiBlitz3.ab3@17043>    ADDQ.l #4,a2
0002CCD8 <AmiBlitz3.ab3@17044>    BSR.w makename2
0002CCDC <AmiBlitz3.ab3@17045>    BSR findvariable2
0002CCE0 <AmiBlitz3.ab3@17046>    BNE cnferr
0002CCE4 <AmiBlitz3.ab3@17047> BRA.s 'l6                                                  ;???
0002CCE8 <AmiBlitz3.ab3@17050>    MOVE.w $4(a2),d3
0002CCEA <AmiBlitz3.ab3@17051>    EXT.l d3
0002CCEE <AmiBlitz3.ab3@17052> BRA JL_0_AF46
0002CCF2 <AmiBlitz3.ab3@17055>   MOVE.l $8(A2),D3
0002CCFA <AmiBlitz3.ab3@17056>   CMPI.l #$1,$4(A2)
0002CCFE <AmiBlitz3.ab3@17057>    BEQ.w JL_0_AF46
0002CD04 <AmiBlitz3.ab3@17058>   NOT.w asmtype
0002CD06 <AmiBlitz3.ab3@17061>   MOVE.w (A7)+,D2
0002CD0A <AmiBlitz3.ab3@17062> BRA.w JL_0_B46E
0002CD0C <AmiBlitz3.ab3@17066>   MOVE.w D2,-(A7)
0002CD10 <AmiBlitz3.ab3@17067>    BSR.w getparameter
0002CD14 <AmiBlitz3.ab3@17068>   CMP.w #"{",D0                                          ;test if var = function{}
0002CD18 <AmiBlitz3.ab3@17069>    BEQ.w isfunction
0002CD1C <AmiBlitz3.ab3@17070>    BSR.w JL_0_8E3C
0002CD20 <AmiBlitz3.ab3@17072>    BSR.w calcvar                                         ;getvaroffset+type
0002CD24 <AmiBlitz3.ab3@17073>    BSR.w JL_0_B150
0002CD2A <AmiBlitz3.ab3@17074>    MOVE.l a2,rightsidetype
0002CD30 <AmiBlitz3.ab3@17085>    TST.b typecheck
0002CD34 <AmiBlitz3.ab3@17086>    BEQ JL_0_AF66
0002CD3E <AmiBlitz3.ab3@17087>    CMP.l #$da01,lasttoken                                  ;poke
0002CD42 <AmiBlitz3.ab3@17088>    BEQ 'l1
0002CD4C <AmiBlitz3.ab3@17089>    CMP.l #$da02,lasttoken                                  ;peek
0002CD50 <AmiBlitz3.ab3@17090>    BNE 'l2
0002CD58 <AmiBlitz3.ab3@17093>    CMP.w #1,parnum                                         ; is not call when & is used in parameter
0002CD5C <AmiBlitz3.ab3@17094>    BNE JL_0_AF66
0002CD62 <AmiBlitz3.ab3@17095>    MOVE.b d2,peekaddrsize
0002CD66 <AmiBlitz3.ab3@17096>    BRA JL_0_AF66
0002CD6C <AmiBlitz3.ab3@17099>   CLR.b peekaddrsize
0002CD70 <AmiBlitz3.ab3@17102>   CMP.w #$1,D2
0002CD74 <AmiBlitz3.ab3@17103>    BNE.w JL_0_AF7C
0002CD7A <AmiBlitz3.ab3@17104>   MOVE.w regnum,D1
0002CD7E <AmiBlitz3.ab3@17105>   ORI.w #$4880,D1
0002CD82 <AmiBlitz3.ab3@17106>    BSR.w writeword
0002CD84 <AmiBlitz3.ab3@17109>   MOVE.w (A7)+,D3
0002CD88 <AmiBlitz3.ab3@17110>    BEQ.w JL_0_AF9E
0002CD8E <AmiBlitz3.ab3@17111>    MOVE.l lastinstructionaddr,a0
0002CD92 <AmiBlitz3.ab3@17112>   CMP.w #$3,D3
0002CD96 <AmiBlitz3.ab3@17113>    BNE.w JL_0_AF92
0002CD9A <AmiBlitz3.ab3@17114>   CMP.w #$4,D2
0002CD9E <AmiBlitz3.ab3@17115>    BEQ.w JL_0_AF98
0002CDA0 <AmiBlitz3.ab3@17118>   CMP.w D2,D3
0002CDA4 <AmiBlitz3.ab3@17119>    BLS.w JL_0_AF9E
0002CDA6 <AmiBlitz3.ab3@17122>   EXG.l D2,D3
0002CDA8 <AmiBlitz3.ab3@17123>   MOVE.l a0,-(a7)
0002CDAE <AmiBlitz3.ab3@17124>   TST.b typecheck
0002CDB2 <AmiBlitz3.ab3@17125>   BEQ 'ok
0002CDB8 <AmiBlitz3.ab3@17126>   TST.b notypecheck
0002CDBC <AmiBlitz3.ab3@17127>   BNE 'ok
0002CDC2 <AmiBlitz3.ab3@17128>   MOVE.l leftsidetype,a0
0002CDCC <AmiBlitz3.ab3@17129>   CMP.l #0,leftsidetype
0002CDD0 <AmiBlitz3.ab3@17130>   BEQ 'ok
0002CDD8 <AmiBlitz3.ab3@17131>   CMP.l #$100,4(a0)
0002CDDC <AmiBlitz3.ab3@17132>   BLE 'ok
0002CDE0 <AmiBlitz3.ab3@17133>   CMP.b #3,d3
0002CDE4 <AmiBlitz3.ab3@17134>   BEQ 'ok
0002CDE8 <AmiBlitz3.ab3@17135>   CMP.b #7,d3
0002CDEC <AmiBlitz3.ab3@17136>   BEQ 'ok
0002CDF2 <AmiBlitz3.ab3@17137>   JMP   error_convert_types      ;for all syntax only long and string allowed to assign to a type
0002CDF4 <AmiBlitz3.ab3@17139>   MOVE.l (a7)+,a0
0002CDF8 <AmiBlitz3.ab3@17140>   BSR.w writeconvertcode         ;called from var assign
0002CDFC <AmiBlitz3.ab3@17143> BRA.w reget
0002CDFE <AmiBlitz3.ab3@17146>   MOVEQ.l #$00,D3
0002CE04 <AmiBlitz3.ab3@17147>   MOVE.w regnum,D1
0002CE08 <AmiBlitz3.ab3@17148>    BEQ.w JL_0_AFC8
0002CE0A <AmiBlitz3.ab3@17149>   SUBQ.w #1,D1
0002CE0C <AmiBlitz3.ab3@17152>      LSR.l #1,D3
0002CE10 <AmiBlitz3.ab3@17153>      BSET #$F,D3
0002CE14 <AmiBlitz3.ab3@17154>   DBF D1,JL_0_AFB0b
0002CE1A <AmiBlitz3.ab3@17156>    TST.b fpu
0002CE1E <AmiBlitz3.ab3@17157>    BEQ 'l1
0002CE24 <AmiBlitz3.ab3@17158>    ADDQ.l #2,stacktrack                                    ;intern command
0002CE26 <AmiBlitz3.ab3@17159>     MOVE.l a0,-(a7)
0002CE2C <AmiBlitz3.ab3@17160>     MOVE.l stacktrack,d1
0002CE32 <AmiBlitz3.ab3@17161>     LEA fpustackbase,a0
0002CE36 <AmiBlitz3.ab3@17162>     CLR.w 0(a0,d1)
0002CE3C <AmiBlitz3.ab3@17163>     CLR.w regmask
0002CE3E <AmiBlitz3.ab3@17164>     MOVE.l (a7)+,a0
0002CE42 <AmiBlitz3.ab3@17167>   MOVE.w #$48E7,D1
0002CE46 <AmiBlitz3.ab3@17168>    BSR.w writeword                                         ;write movem.l d0/d1,-(a7)
0002CE48 <AmiBlitz3.ab3@17169>   MOVE.w D3,D1
0002CE4C <AmiBlitz3.ab3@17170> BRA.w writeword
0002CE4E <AmiBlitz3.ab3@17175>   MOVEQ.l #$00,D3
0002CE54 <AmiBlitz3.ab3@17176>   MOVE.w regnum,D1
0002CE58 <AmiBlitz3.ab3@17177>    BEQ.w JL_0_AFC8
0002CE5A <AmiBlitz3.ab3@17178>   SUBQ.w #1,D1
0002CE5C <AmiBlitz3.ab3@17181>     LSR.l #1,D3
0002CE60 <AmiBlitz3.ab3@17182>     BSET #$F,D3
0002CE64 <AmiBlitz3.ab3@17183>   DBF D1,JL_0_AFB0
0002CE6A <AmiBlitz3.ab3@17185>    TST.b fpu
0002CE6E <AmiBlitz3.ab3@17186>    BEQ 'l1
0002CE74 <AmiBlitz3.ab3@17187>    ADDQ.l #2,stacktrack                                    ;intern command
0002CE76 <AmiBlitz3.ab3@17188>     MOVE.l a0,-(a7)
0002CE7C <AmiBlitz3.ab3@17189>     MOVE.l stacktrack,d1
0002CE82 <AmiBlitz3.ab3@17190>     LEA fpustackbase,a0
0002CE86 <AmiBlitz3.ab3@17191>     CLR.w 0(a0,d1)
0002CE8A <AmiBlitz3.ab3@17192>    CMP.b #5,(a3)                                           ;result float ?
0002CE8E <AmiBlitz3.ab3@17193>     BNE 'nofpu
0002CE98 <AmiBlitz3.ab3@17195>     MOVE.w regnum,regnumfunc
0002CE9E <AmiBlitz3.ab3@17198>   CLR.w regmask
0002CEA0 <AmiBlitz3.ab3@17199>     MOVE.l (a7)+,a0
0002CEA4 <AmiBlitz3.ab3@17202>   MOVE.w #$48E7,D1
0002CEA8 <AmiBlitz3.ab3@17203>    BSR.w writeword                                         ;write movem.l d0/d1,-(a7)
0002CEAA <AmiBlitz3.ab3@17204>   MOVE.w D3,D1
0002CEAE <AmiBlitz3.ab3@17205> BRA.w writeword
0002CEB0 <AmiBlitz3.ab3@17208> RTS
0002CEB2 <AmiBlitz3.ab3@17212>   MOVE.l D1,-(A7)
0002CEB6 <AmiBlitz3.ab3@17213>   MOVE.w #$4EB9,D1
0002CEBA <AmiBlitz3.ab3@17214>    BSR.w writeword
0002CEBE <AmiBlitz3.ab3@17215>    BSR.w addoff
0002CEC0 <AmiBlitz3.ab3@17216>   MOVE.l (A7)+,D1
0002CEC4 <AmiBlitz3.ab3@17217> BRA.w writelong
0002CEC8 <AmiBlitz3.ab3@17221>    BSR.w findproc                                          ;write function call
0002CECC <AmiBlitz3.ab3@17222>    BEQ 'l1
0002CED2 <AmiBlitz3.ab3@17223>    TST.l unusedfunc
0002CED6 <AmiBlitz3.ab3@17224>    BEQ noprocerr
0002CEDC <AmiBlitz3.ab3@17226>    JSR gotoendsource
0002CEE4 <AmiBlitz3.ab3@17229>   MOVE.l funcstruct_returntype(a2),rightsidetype
0002CEEA <AmiBlitz3.ab3@17230>   TST.l typetocast
0002CEEE <AmiBlitz3.ab3@17231>   BEQ 'nocast
0002CEF8 <AmiBlitz3.ab3@17232>   MOVE.l typetocast,rightsidetype
0002CEFE <AmiBlitz3.ab3@17233>   CLR.l typetocast
0002CF00 <AmiBlitz3.ab3@17234>   MOVE.l a1,-(a7)
0002CF06 <AmiBlitz3.ab3@17235>   MOVE.l rightsidetype,a1
0002CF0C <AmiBlitz3.ab3@17236>   CMP.l leftsidetype,a1
0002CF10 <AmiBlitz3.ab3@17237>   BEQ 'ok
0002CF16 <AmiBlitz3.ab3@17238>   JMP errorconvertreturntype2
0002CF18 <AmiBlitz3.ab3@17239> 'ok  MOVE.l (a7)+,a1
0002CF1A <AmiBlitz3.ab3@17241>   MOVEQ.l #$00,D1
0002CF1E <AmiBlitz3.ab3@17242>   MOVE.b $5(A2),D1
0002CF24 <AmiBlitz3.ab3@17243>   MOVE.b d1,retmode
0002CF28 <AmiBlitz3.ab3@17244>    BMI.w illprocerr
0002CF2E <AmiBlitz3.ab3@17245>    MOVE.b #1,isfunc(a2)
0002CF30 <AmiBlitz3.ab3@17246>   MOVE.w D1,-(A7)
0002CF32 <AmiBlitz3.ab3@17247>   MOVEQ.l #$00,D1
0002CF36 <AmiBlitz3.ab3@17248>   MOVE.b $4(A2),D1
0002CF38 <AmiBlitz3.ab3@17249>   LSR.w #4,D1
0002CF3C <AmiBlitz3.ab3@17250>    BEQ.w JL_0_B006
0002CF3E <AmiBlitz3.ab3@17251>   LSL.w #2,D1
0002CF44 <AmiBlitz3.ab3@17252>   SUB.w D1,a2offset
0002CF48 <AmiBlitz3.ab3@17255>   CMPI.w #$7,(A7)
0002CF4C <AmiBlitz3.ab3@17256>    BNE.b JL_0_B014
0002CF4E <AmiBlitz3.ab3@17257>   MOVE.l A2,-(A7)
0002CF52 <AmiBlitz3.ab3@17258>    BSR.w makesbase
0002CF54 <AmiBlitz3.ab3@17259>   MOVEA.l (A7)+,A2
0002CF5A <AmiBlitz3.ab3@17262>   MOVE.w sbasegot,-(A7)
0002CF5E <AmiBlitz3.ab3@17263>    BEQ.b JL_0_B020
0002CF62 <AmiBlitz3.ab3@17264>    BSR.w dopusha3
0002CF66 <AmiBlitz3.ab3@17267>   BSR.w JL_0_AFA2func
0002CF68 <AmiBlitz3.ab3@17268>   MOVE.w D3,-(A7)
0002CF6C <AmiBlitz3.ab3@17269>   MOVE.l $E(A2),D1
0002CF70 <AmiBlitz3.ab3@17270>   TST.b $20(a2)                                            ;increase if morepar
0002CF74 <AmiBlitz3.ab3@17271>   BNE 'no0par
0002CF76 <AmiBlitz3.ab3@17272>   MOVE.l a5,a4
0002CF7A <AmiBlitz3.ab3@17275>   CMP.b #$20,(a4)+
0002CF7E <AmiBlitz3.ab3@17276>   BEQ 'l1
0002CF84 <AmiBlitz3.ab3@17277>   CMP.b #"}",-1(a4)
0002CF88 <AmiBlitz3.ab3@17278>   BNE  'no0par
0002CF8A <AmiBlitz3.ab3@17279>   MOVEQ #0,d0
0002CF8E <AmiBlitz3.ab3@17282>   LEA $16(A2),A1
0002CF90 <AmiBlitz3.ab3@17285>   MOVE.l d1,-(a7)
0002CF92 <AmiBlitz3.ab3@17286>   MOVE.b (a1),d2
0002CF94 <AmiBlitz3.ab3@17287>   MOVE.l d0,d1
0002CF98 <AmiBlitz3.ab3@17288>   CMP.w #4,d2
0002CF9C <AmiBlitz3.ab3@17289>   BNE 'l1b
0002CFA2 <AmiBlitz3.ab3@17290>   ADD.l #$203c,d1
0002CFA6 <AmiBlitz3.ab3@17291>   BSR writeword
0002CFAC <AmiBlitz3.ab3@17292>   MOVE.l #$ffff0000,d1
0002CFB0 <AmiBlitz3.ab3@17293>   BSR writelong
0002CFB4 <AmiBlitz3.ab3@17294> BRA 'l2b
0002CFBA <AmiBlitz3.ab3@17297>    TST.b fpu
0002CFBE <AmiBlitz3.ab3@17298>    BNE 'l1c
0002CFC2 <AmiBlitz3.ab3@17299>    CMP.w #5,d2
0002CFC6 <AmiBlitz3.ab3@17300>    BNE 'l1c
0002CFCC <AmiBlitz3.ab3@17301>    ADD.l #$203c,d1
0002CFD0 <AmiBlitz3.ab3@17302>    BSR writeword
0002CFD6 <AmiBlitz3.ab3@17303>    MOVE.l #$800000c1,d1
0002CFDA <AmiBlitz3.ab3@17304>    BSR writelong
0002CFDE <AmiBlitz3.ab3@17305> BRA 'l2b
0002CFE4 <AmiBlitz3.ab3@17308>   ADD.l #$70ff,d1
0002CFE8 <AmiBlitz3.ab3@17309>   BSR writeword
0002CFEC <AmiBlitz3.ab3@17310>   CMP.w #7,d2
0002CFF0 <AmiBlitz3.ab3@17311>   BNE 'l1d
0002CFF6 <AmiBlitz3.ab3@17312>   MOVE.l #$2f3c0000,d1      ; write code move.l #0,-(a7)
0002CFFA <AmiBlitz3.ab3@17313>   BSR writelong
0002CFFC <AmiBlitz3.ab3@17314>   MOVEQ #0,d1
0002D000 <AmiBlitz3.ab3@17315>   BSR writeword
0002D006 <AmiBlitz3.ab3@17316>   MOVE.l #$2f3c0000,d1      ; write code move.l #0,-(a7)
0002D00A <AmiBlitz3.ab3@17317>   BSR writelong
0002D00C <AmiBlitz3.ab3@17318>   MOVEQ #0,d1
0002D010 <AmiBlitz3.ab3@17319>   BSR writeword
0002D016 <AmiBlitz3.ab3@17321> 'l1d  MOVE.l #$f23c5000,d1
0002D018 <AmiBlitz3.ab3@17322>   MOVE.l d0,d2
0002D01A <AmiBlitz3.ab3@17323>   ASR.l #2,d2
0002D01C <AmiBlitz3.ab3@17324>   ADD.l d2,d1
0002D020 <AmiBlitz3.ab3@17325>   BSR writelong
0002D024 <AmiBlitz3.ab3@17326>   MOVE.w #$ffff,d1
0002D028 <AmiBlitz3.ab3@17327>   BSR writeword
0002D02A <AmiBlitz3.ab3@17331>   MOVE.l (a7)+,d1
0002D02C <AmiBlitz3.ab3@17332>      ADDQ.l #1,a1
0002D032 <AmiBlitz3.ab3@17333>      ADD.l #$0200,d0
0002D038 <AmiBlitz3.ab3@17334>      CMP.l #$0e00,d0
0002D03C <AmiBlitz3.ab3@17335>      BEQ syntaxerr
0002D03E <AmiBlitz3.ab3@17336>      TST.b (a1)
0002D042 <AmiBlitz3.ab3@17337>      BNE 'again
0002D046 <AmiBlitz3.ab3@17338> BRA 'p1
0002D04A <AmiBlitz3.ab3@17341>   TST.b $4(A2)
0002D04E <AmiBlitz3.ab3@17342>    BNE.w JL_0_B03E
0002D052 <AmiBlitz3.ab3@17345>   BSR.w JL_0_AFCA
0002D056 <AmiBlitz3.ab3@17346>    BSR.w get1bytemain
0002D05A <AmiBlitz3.ab3@17347> BRA.w JL_0_B06C
0002D060 <AmiBlitz3.ab3@17351>   MOVE.w regnum,-(A7)
0002D06A <AmiBlitz3.ab3@17352>   MOVE.w regnum,regnumfunc
0002D06C <AmiBlitz3.ab3@17355>   MOVE.l D1,-(A7)                                          ;write functioncall with pars
0002D074 <AmiBlitz3.ab3@17356>   MOVE.b #1,funccall
0002D076 <AmiBlitz3.ab3@17357>   MOVEQ.l #$00,D0
0002D07A <AmiBlitz3.ab3@17358>   MOVE.b $4(A2),D0
0002D084 <AmiBlitz3.ab3@17359>   MOVE.w a2offset,a2offset2
0002D08C <AmiBlitz3.ab3@17360>   MOVE.b 5(a2),retmode
0002D092 <AmiBlitz3.ab3@17361>   MOVE.l a2,currentfunccall
0002D096 <AmiBlitz3.ab3@17362>   LEA $16(A2),A2
0002D09C <AmiBlitz3.ab3@17363>   CLR.w regnum
0002D0A2 <AmiBlitz3.ab3@17364>   CLR.w regmask
0002D0A8 <AmiBlitz3.ab3@17365>   MOVE.b isconstantvalue,-(a7)
0002D0AE <AmiBlitz3.ab3@17366>   MOVE.b funcparloop,-(a7)
0002D0B6 <AmiBlitz3.ab3@17367>   MOVE.b #1,funcparloop
0002D0BC <AmiBlitz3.ab3@17368>   MOVE.l rightsidetype,-(a7)
0002D0C2 <AmiBlitz3.ab3@17369>   MOVE.l leftsidetype,-(a7)                               ;store values To stack so it can work recursive
0002D0C8 <AmiBlitz3.ab3@17370>   MOVE.b blitzparloop,-(a7)
0002D0CE <AmiBlitz3.ab3@17371>   CLR.b blitzparloop
0002D0D4 <AmiBlitz3.ab3@17372>   JSR fetchpees2
0002D0DA <AmiBlitz3.ab3@17373>   MOVE.b (a7)+,blitzparloop
0002D0E0 <AmiBlitz3.ab3@17374>   MOVE.l (a7)+,leftsidetype
0002D0E6 <AmiBlitz3.ab3@17375>   MOVE.l (a7)+,rightsidetype
0002D0EC <AmiBlitz3.ab3@17376>   MOVE.b (a7)+,funcparloop
0002D0F2 <AmiBlitz3.ab3@17377>   MOVE.b (a7)+,isconstantvalue
0002D0F8 <AmiBlitz3.ab3@17378>   JSR chkstak
0002D0FA <AmiBlitz3.ab3@17379>   MOVE.l (A7)+,D1
0002D0FE <AmiBlitz3.ab3@17395>    BTST #0,d1
0002D102 <AmiBlitz3.ab3@17396>    BNE intern1
0002D106 <AmiBlitz3.ab3@17397>    BSR.w JL_0_AFCA
0002D10C <AmiBlitz3.ab3@17419>   MOVE.w (A7)+,regnum
0002D110 <AmiBlitz3.ab3@17422>   CMP.w #"}",D0
0002D114 <AmiBlitz3.ab3@17423>    BNE.w errorbracketmiss2
0002D116 <AmiBlitz3.ab3@17424>    MOVEQ #0,d1                                            ; end of function call pars
0002D11C <AmiBlitz3.ab3@17425>   MOVE.w regnum,D1
0002D120 <AmiBlitz3.ab3@17426>    BEQ.w JL_0_B08A
0002D126 <AmiBlitz3.ab3@17427>    TST.b fpu
0002D12A <AmiBlitz3.ab3@17428>    BEQ 'old
0002D132 <AmiBlitz3.ab3@17429>    CMP.b #5,retmode
0002D136 <AmiBlitz3.ab3@17430>    BNE 'old
0002D138 <AmiBlitz3.ab3@17431>    ASL.l #7,d1
0002D13E <AmiBlitz3.ab3@17432>    OR.l #$f2000000,d1
0002D142 <AmiBlitz3.ab3@17433>    BSR writelong
0002D146 <AmiBlitz3.ab3@17434> BRA JL_0_B08A
0002D148 <AmiBlitz3.ab3@17436>  'old  LSL.w #8,D1
0002D14A <AmiBlitz3.ab3@17437>   LSL.w #1,D1
0002D14E <AmiBlitz3.ab3@17438>   ORI.w #$2000,D1
0002D152 <AmiBlitz3.ab3@17439>    BSR.w writeword
0002D154 <AmiBlitz3.ab3@17442>    MOVE.w (A7)+,D3
0002D158 <AmiBlitz3.ab3@17443>    BEQ.w JL_0_B0A8
0002D15E <AmiBlitz3.ab3@17444>    TST.b fpu
0002D162 <AmiBlitz3.ab3@17445>    BEQ 'old
0002D164 <AmiBlitz3.ab3@17446>    MOVE.l d0,-(a7)
0002D168 <AmiBlitz3.ab3@17447>    MOVE.w #8,d0
0002D16A <AmiBlitz3.ab3@17448>    MOVE.l a0,-(a7)
0002D170 <AmiBlitz3.ab3@17449>    MOVE.l stacktrack,d1
0002D176 <AmiBlitz3.ab3@17450>    LEA fpustackbase,a0
0002D17E <AmiBlitz3.ab3@17451>    MOVE.w 0(a0,d1),regmask
0002D180 <AmiBlitz3.ab3@17452>    MOVE.l (a7)+,a0
0002D184 <AmiBlitz3.ab3@17455>   BEQ 'ready
0002D18A <AmiBlitz3.ab3@17456>    BTST d0,regmask
0002D18E <AmiBlitz3.ab3@17457>    BEQ 'noa7
0002D190 <AmiBlitz3.ab3@17458>    MOVEQ #0,d1
0002D192 <AmiBlitz3.ab3@17459>    MOVE.w d0,d1
0002D194 <AmiBlitz3.ab3@17460>    SUBQ.w #1,d1
0002D196 <AmiBlitz3.ab3@17461>    ASL #7,d1
0002D19C <AmiBlitz3.ab3@17463>    OR.l #$f21f5400,d1                                      ;fmove.d (a7)+
0002D1A0 <AmiBlitz3.ab3@17464>    BSR writelong
0002D1A6 <AmiBlitz3.ab3@17465>    SUBQ.l #2,stacktrack
0002D1A8 <AmiBlitz3.ab3@17468>    SUBQ.w #1,d0
0002D1AC <AmiBlitz3.ab3@17469>    BNE 'loop
0002D1B2 <AmiBlitz3.ab3@17472>   SUBQ.l #2,stacktrack                                     ;integer sub
0002D1B4 <AmiBlitz3.ab3@17473>   MOVE.l (a7)+,d0
0002D1B8 <AmiBlitz3.ab3@17476>   MOVE.w #$4CDF,D1
0002D1BC <AmiBlitz3.ab3@17477>    BSR.w writeword
0002D1BE <AmiBlitz3.ab3@17478>   MOVEQ.l #$00,D1
0002D1C0 <AmiBlitz3.ab3@17479>   MOVEQ.l #$0F,D4
0002D1C2 <AmiBlitz3.ab3@17482>     LSL.w #1,D3
0002D1C4 <AmiBlitz3.ab3@17483>     ROXR.w #1,D1
0002D1C8 <AmiBlitz3.ab3@17484>   DBF D4,JL_0_B09C                                         ;movem.l (a7)+,dx
0002D1CC <AmiBlitz3.ab3@17486>     BSR.w writeword
0002D1D2 <AmiBlitz3.ab3@17487>    CLR.w regnumfunc
0002D1D4 <AmiBlitz3.ab3@17490>   MOVE.w (A7)+,D1
0002D1D8 <AmiBlitz3.ab3@17491>    BEQ.b JL_0_B0D2
0002D1DC <AmiBlitz3.ab3@17492>   CMPI.w #$7,(A7)
0002D1E0 <AmiBlitz3.ab3@17493>    BEQ.b JL_0_B0C4
0002D1E6 <AmiBlitz3.ab3@17494>   LEA geta3,A0
0002D1EC <AmiBlitz3.ab3@17495>   LEA numtoa0,A1
0002D1F0 <AmiBlitz3.ab3@17496>    BSR.w pokecode
0002D1F4 <AmiBlitz3.ab3@17497> BRA.b JL_0_B0CE
0002D1FA <AmiBlitz3.ab3@17500>   MOVE.w deca3,D1
0002D1FE <AmiBlitz3.ab3@17501>    BSR.w writeword
0002D202 <AmiBlitz3.ab3@17504>   BSR.w dopulla3                                           ;fix up string base
0002D204 <AmiBlitz3.ab3@17507>   MOVE.w (A7)+,D2                                          ;what it returns!
0002D208 <AmiBlitz3.ab3@17508>   CMP.w #$7,D2
0002D20C <AmiBlitz3.ab3@17509>    BNE.w JL_0_B0EC
0002D212 <AmiBlitz3.ab3@17510>   MOVE.w putstlen,D1
0002D218 <AmiBlitz3.ab3@17511>   OR.w regnum,D1
0002D21C <AmiBlitz3.ab3@17512>    BSR.w writeword
0002D220 <AmiBlitz3.ab3@17515>   BSR.w get1bytemain
0002D224 <AmiBlitz3.ab3@17516> BRA.w JL_0_AF66
0002D226 <AmiBlitz3.ab3@17520> deca3:   Dc.b $53,$4B                                      ;SUBQ.W  #1,A3
0002D22E <AmiBlitz3.ab3@17525>   CMP.b #2,optistring
0002D232 <AmiBlitz3.ab3@17526>   BEQ fs2
0002D236 <AmiBlitz3.ab3@17527>   BSR.w makesbase                                          ;writestringvariable
0002D23A <AmiBlitz3.ab3@17528>   BTST #$F,D2
0002D23E <AmiBlitz3.ab3@17529>    BNE.w JL_0_B112
0002D244 <AmiBlitz3.ab3@17530>   MOVE.w D3,leaa5d3a2+2
0002D24A <AmiBlitz3.ab3@17531>   MOVE.l leaa5d3a2,D1
0002D24E <AmiBlitz3.ab3@17532>    BSR.w pokela5s
0002D254 <AmiBlitz3.ab3@17535>   MOVE.w regnum,D1
0002D256 <AmiBlitz3.ab3@17536>   LSL.w #8,D1
0002D258 <AmiBlitz3.ab3@17537>   LSL.w #1,D1
0002D25C <AmiBlitz3.ab3@17538>   ORI.w #$7000,D1
0002D262 <AmiBlitz3.ab3@17539>   LEA stvarget2,A0
0002D264 <AmiBlitz3.ab3@17540>   MOVE.w D1,(A0)
0002D26A <AmiBlitz3.ab3@17541>   MOVE.w regnum,D1
0002D270 <AmiBlitz3.ab3@17542>   ANDI.w #$FFF8,$2(A0)
0002D274 <AmiBlitz3.ab3@17543>   OR.w D1,$2(A0)
0002D27A <AmiBlitz3.ab3@17544>   LEA stvarget2f,A1
0002D27E <AmiBlitz3.ab3@17545>    BSR.w pokecode
0002D282 <AmiBlitz3.ab3@17546>   MOVE.w #$C600,D1
0002D286 <AmiBlitz3.ab3@17547>    BSR.w Atokejsr
0002D288 <AmiBlitz3.ab3@17548>   MOVEQ.l #$07,D2
0002D28C <AmiBlitz3.ab3@17549> BRA.w reget
0002D292 <AmiBlitz3.ab3@17552>      TST.w stackpar
0002D296 <AmiBlitz3.ab3@17553>      BMI 'l10
0002D29C <AmiBlitz3.ab3@17554>      MOVE.l #$3f3c0007,d1
0002D2A2 <AmiBlitz3.ab3@17555>      ADDQ.w #2,a2offset
0002D2A6 <AmiBlitz3.ab3@17556>      BSR writelong
0002D2AA <AmiBlitz3.ab3@17559>   MOVE.w #$4878,d1
0002D2B0 <AmiBlitz3.ab3@17560>      CLR.w stackpar
0002D2B4 <AmiBlitz3.ab3@17561>      BSR writeword
0002D2B8 <AmiBlitz3.ab3@17562>      MOVE.w #$0,d1
0002D2BC <AmiBlitz3.ab3@17563>      BSR writeword
0002D2C0 <AmiBlitz3.ab3@17564>      MOVE.w #$246d,d1
0002D2C4 <AmiBlitz3.ab3@17565>      BSR writeword
0002D2C6 <AmiBlitz3.ab3@17566>      MOVE.w d3,d1
0002D2CA <AmiBlitz3.ab3@17567>      BSR writeword
0002D2D0 <AmiBlitz3.ab3@17568>      MOVE.l #$4a926704,d1
0002D2D4 <AmiBlitz3.ab3@17569>      BSR writelong
0002D2DA <AmiBlitz3.ab3@17570>      MOVE.l #$2eaafffc,d1
0002D2DE <AmiBlitz3.ab3@17571>      BSR writelong
0002D2E2 <AmiBlitz3.ab3@17572>      MOVE.w #$2f0a,d1
0002D2E8 <AmiBlitz3.ab3@17573>      ADDQ.w #8,a2offset
0002D2EC <AmiBlitz3.ab3@17574>      BSR writeword
0002D2F0 <AmiBlitz3.ab3@17575> BRA.w reget
0002D2F4 <AmiBlitz3.ab3@17578>   CMP.b #$7,D2                                             ;load basic var
0002D2F8 <AmiBlitz3.ab3@17579>    BEQ.w JL_0_B0F6
0002D2FE <AmiBlitz3.ab3@17581>    TST.b iee
0002D302 <AmiBlitz3.ab3@17582>    BEQ 'noiee
0002D306 <AmiBlitz3.ab3@17583>    CMP.b #5,d2
0002D30A <AmiBlitz3.ab3@17584>    BNE 'noiee
0002D30C <AmiBlitz3.ab3@17585>    MOVE.l d0,-(a7)                                         ;fpu load var
0002D310 <AmiBlitz3.ab3@17586>    BTST #15,d2
0002D314 <AmiBlitz3.ab3@17587>    BEQ 'var
0002D31A <AmiBlitz3.ab3@17588>    CMP.l #$7fff,d3
0002D31E <AmiBlitz3.ab3@17589>    BGT 'longoffset
0002D324 <AmiBlitz3.ab3@17590>    MOVE.l #$f22a4400,d1                                    ;newtype     >32kb
0002D326 <AmiBlitz3.ab3@17591>    TST.w d3                                                ;offset =0
0002D32A <AmiBlitz3.ab3@17592>    BNE 'offset
0002D330 <AmiBlitz3.ab3@17595>   MOVE.l #$f2124400,d1
0002D332 <AmiBlitz3.ab3@17596>    MOVEQ #0,d3
0002D336 <AmiBlitz3.ab3@17597> BRA 'glob
0002D33C <AmiBlitz3.ab3@17600>   SUBQ.l #4,destpointer
0002D340 <AmiBlitz3.ab3@17601> BRA 'glob
0002D346 <AmiBlitz3.ab3@17604>   TST.b fast
0002D34A <AmiBlitz3.ab3@17605>    BEQ 'nofastload
0002D350 <AmiBlitz3.ab3@17606>    TST.w regnum
0002D354 <AmiBlitz3.ab3@17607>    BNE 'nofastload
0002D35A <AmiBlitz3.ab3@17608>    CMP.l fp0addr,a4
0002D35E <AmiBlitz3.ab3@17609>    BNE 'nofastload
0002D364 <AmiBlitz3.ab3@17610>    MOVE.l fp0iff,d1
0002D36A <AmiBlitz3.ab3@17611>    CMP.l firstiff,d1
0002D36E <AmiBlitz3.ab3@17612>    BNE 'nofastload
0002D374 <AmiBlitz3.ab3@17613>    MOVE.w varmode,d1
0002D37A <AmiBlitz3.ab3@17614>    CMP.w fp0mode,d1
0002D37E <AmiBlitz3.ab3@17615>    BNE 'nofastload
0002D384 <AmiBlitz3.ab3@17616>    CMP.w fp0var,d3
0002D388 <AmiBlitz3.ab3@17617>    BNE 'nofastload
0002D38C <AmiBlitz3.ab3@17618>    BCLR #16,d2
0002D38E <AmiBlitz3.ab3@17619>    MOVE.l (a7)+,d0
0002D390 <AmiBlitz3.ab3@17620> RTS
0002D392 <AmiBlitz3.ab3@17623>    MOVEQ #0,d0
0002D398 <AmiBlitz3.ab3@17624>    MOVE.w regnum,d0
0002D39E <AmiBlitz3.ab3@17625>    CMP.l maxregs,d0
0002D3A2 <AmiBlitz3.ab3@17626>    BLE 'ok
0002D3A8 <AmiBlitz3.ab3@17627>    LEA cmplxerr,a0
0002D3AA <AmiBlitz3.ab3@17628>   MOVE.l a0,-(a7)
0002D3B0 <AmiBlitz3.ab3@17629> JMP handle_compileerror
0002D3B6 <AmiBlitz3.ab3@17632>    LEA regtable,a4
0002D3B8 <AmiBlitz3.ab3@17633>    TST.l (a4)
0002D3BC <AmiBlitz3.ab3@17634>    BEQ 'noreg
0002D3C0 <AmiBlitz3.ab3@17635>    CMP.w 0+4(a4),d3
0002D3C4 <AmiBlitz3.ab3@17636>    BNE 'doreg1
0002D3CA <AmiBlitz3.ab3@17637>    MOVE.l #$f2001c00,d1
0002D3D0 <AmiBlitz3.ab3@17638>    MOVE.w regnum,d0
0002D3D2 <AmiBlitz3.ab3@17639>    ASL.w #7,d0
0002D3D4 <AmiBlitz3.ab3@17640>    OR.w d0,d1
0002D3D8 <AmiBlitz3.ab3@17641>    BSR writelong
0002D3DA <AmiBlitz3.ab3@17642>    MOVE.l (a7)+,d0
0002D3DC <AmiBlitz3.ab3@17643> RTS
0002D3E0 <AmiBlitz3.ab3@17646>   CMP.w 8+4(a4),d3
0002D3E4 <AmiBlitz3.ab3@17647>    BNE 'doreg2
0002D3EA <AmiBlitz3.ab3@17648>    MOVE.l #$f2001800,d1
0002D3F0 <AmiBlitz3.ab3@17649>    MOVE.w regnum,d0
0002D3F2 <AmiBlitz3.ab3@17650>    ASL.w #7,d0
0002D3F4 <AmiBlitz3.ab3@17651>    OR.w d0,d1
0002D3F8 <AmiBlitz3.ab3@17652>    BSR writelong
0002D3FA <AmiBlitz3.ab3@17653>    MOVE.l (a7)+,d0
0002D3FC <AmiBlitz3.ab3@17654> RTS
0002D400 <AmiBlitz3.ab3@17657>   CMP.w 16+4(a4),d3
0002D404 <AmiBlitz3.ab3@17658>    BNE 'doreg3
0002D40A <AmiBlitz3.ab3@17659>    MOVE.l #$f2001400,d1
0002D410 <AmiBlitz3.ab3@17660>    MOVE.w regnum,d0
0002D412 <AmiBlitz3.ab3@17661>    ASL.w #7,d0
0002D414 <AmiBlitz3.ab3@17662>    OR.w d0,d1
0002D418 <AmiBlitz3.ab3@17663>    BSR  writelong
0002D41A <AmiBlitz3.ab3@17664>    MOVE.l (a7)+,d0
0002D41C <AmiBlitz3.ab3@17665> RTS
0002D420 <AmiBlitz3.ab3@17668>   CMP.w 24+4(a4),d3
0002D424 <AmiBlitz3.ab3@17669>    BNE 'doreg4
0002D42A <AmiBlitz3.ab3@17670>    MOVE.l #$f2001000,d1
0002D430 <AmiBlitz3.ab3@17671>    MOVE.w regnum,d0
0002D432 <AmiBlitz3.ab3@17672>    ASL.w #7,d0
0002D434 <AmiBlitz3.ab3@17673>    OR.w d0,d1
0002D438 <AmiBlitz3.ab3@17674>    BSR writelong
0002D43A <AmiBlitz3.ab3@17675>    MOVE.l (a7)+,d0
0002D43C <AmiBlitz3.ab3@17676> RTS
0002D440 <AmiBlitz3.ab3@17679>    CMP.w 32+4(a4),d3
0002D444 <AmiBlitz3.ab3@17680>    BNE 'noreg
0002D44A <AmiBlitz3.ab3@17681>    MOVE.l #$f2000c00,d1
0002D450 <AmiBlitz3.ab3@17682>    MOVE.w regnum,d0
0002D452 <AmiBlitz3.ab3@17683>    ASL.w #7,d0
0002D454 <AmiBlitz3.ab3@17684>    OR.w d0,d1
0002D458 <AmiBlitz3.ab3@17685>    BSR writelong
0002D45A <AmiBlitz3.ab3@17686>    MOVE.l (a7)+,d0
0002D45C <AmiBlitz3.ab3@17687> RTS
0002D462 <AmiBlitz3.ab3@17690>    MOVE.l #$f22d4400,d1                                    ;var
0002D468 <AmiBlitz3.ab3@17691>    TST.w varmode
0002D46C <AmiBlitz3.ab3@17692>   BEQ 'glob
0002D470 <AmiBlitz3.ab3@17693>   BCLR #16,d1                                              ;local
0002D472 <AmiBlitz3.ab3@17696>    MOVEQ #0,d0
0002D478 <AmiBlitz3.ab3@17697>    MOVE.w regnum,d0
0002D47C <AmiBlitz3.ab3@17698>    CMP.w #7,d0
0002D480 <AmiBlitz3.ab3@17699>    BLE 'ok2
0002D486 <AmiBlitz3.ab3@17700>    LEA cmplxerr,a0
0002D488 <AmiBlitz3.ab3@17701>   MOVE.l a0,-(a7)
0002D48E <AmiBlitz3.ab3@17702> JMP handle_compileerror
0002D490 <AmiBlitz3.ab3@17705>      ASL.w #7,d0
0002D492 <AmiBlitz3.ab3@17706>    OR.l d0,d1
0002D49A <AmiBlitz3.ab3@17707>    CMP.l #doublecheck,8(a2)
0002D49E <AmiBlitz3.ab3@17708>    BNE 'dbl
0002D4A4 <AmiBlitz3.ab3@17709>    OR.l #$00001000,d1
0002D4A8 <AmiBlitz3.ab3@17712>   BSR writelong
0002D4AA <AmiBlitz3.ab3@17713>    MOVE.l (a7)+,d0
0002D4AE <AmiBlitz3.ab3@17714>    AND.w #$ff,d2
0002D4B0 <AmiBlitz3.ab3@17715>    MOVE.w d3,d1
0002D4B4 <AmiBlitz3.ab3@17716>    BEQ 'nooffs
0002D4B8 <AmiBlitz3.ab3@17717> BRA writeword
0002D4BA <AmiBlitz3.ab3@17722> RTS
0002D4C0 <AmiBlitz3.ab3@17725>   MOVE.w regnum,D1
0002D4C6 <AmiBlitz3.ab3@17726>   MOVE.w d1,load_var_reg
0002D4C8 <AmiBlitz3.ab3@17727>   LSL.w #8,D1
0002D4D2 <AmiBlitz3.ab3@17728>   MOVE.l destpointer,load_var_addr
0002D4D8 <AmiBlitz3.ab3@17729>   MOVE.w d2,load_var_size
0002D4DA <AmiBlitz3.ab3@17730>   LSL.w #1,D1
0002D4DE <AmiBlitz3.ab3@17731>   BTST #$E,D2
0002D4E2 <AmiBlitz3.ab3@17732>    BNE.w JL_0_B17A
0002D4E4 <AmiBlitz3.ab3@17733>   TST.b D2
0002D4E8 <AmiBlitz3.ab3@17734>    BNE.w JL_0_B17E
0002D4EA <AmiBlitz3.ab3@17735>   MOVEQ.l #$03,D2
0002D4EE <AmiBlitz3.ab3@17736>   ORI.w #$200A,D1
0002D4F2 <AmiBlitz3.ab3@17737> BRA.w writeword
0002D4F6 <AmiBlitz3.ab3@17740>   MOVE.b #$3,D2
0002D4FA <AmiBlitz3.ab3@17743>   BTST #$F,D2
0002D4FE <AmiBlitz3.ab3@17744>    BEQ.w JL_0_B19A                                         ;loadarray
0002D504 <AmiBlitz3.ab3@17745>    TST.b fast                                              ;lea->move xx(a2)
0002D508 <AmiBlitz3.ab3@17746>    BEQ 'la10
0002D50E <AmiBlitz3.ab3@17751>    CLR.l load_var_addr
0002D512 <AmiBlitz3.ab3@17752> BRA 'la10
0002D51A <AmiBlitz3.ab3@17754>    CMP.w #$2012,movea2dn                                  ;??Looks like dead code??
0002D51E <AmiBlitz3.ab3@17755>    BNE 'la10
0002D524 <AmiBlitz3.ab3@17756>    TST.b optiarray
0002D528 <AmiBlitz3.ab3@17757>    BNE 'la10
0002D52E <AmiBlitz3.ab3@17758>    MOVE.l destpointer,a4
0002D534 <AmiBlitz3.ab3@17759>    SUB.l loada,a4
0002D538 <AmiBlitz3.ab3@17760>    CMP.w #4,a4
0002D53C <AmiBlitz3.ab3@17761>    BEQ 'la100
0002D540 <AmiBlitz3.ab3@17762>    CMP.w #2,a4
0002D544 <AmiBlitz3.ab3@17763>    BNE 'la10
0002D54A <AmiBlitz3.ab3@17764>    MOVE.l destpointer,a4
0002D54E <AmiBlitz3.ab3@17765>    CMP.b #3,d2
0002D552 <AmiBlitz3.ab3@17766>    BCS 'la110
0002D558 <AmiBlitz3.ab3@17767>    MOVE.w #$202a,-2(a4)
0002D55C <AmiBlitz3.ab3@17768>    OR.w d1,-2(a4)
0002D562 <AmiBlitz3.ab3@17769>    MOVE.w arrayoffset,d1
0002D566 <AmiBlitz3.ab3@17770>    BSR writeword
0002D56A <AmiBlitz3.ab3@17771> BRA JL_0_B194
0002D56E <AmiBlitz3.ab3@17774>    CMP.b #2,d2
0002D572 <AmiBlitz3.ab3@17775>    BNE 'la120
0002D578 <AmiBlitz3.ab3@17776>     MOVE.w #$302a,-2(a4)
0002D57C <AmiBlitz3.ab3@17777>    OR.w d1,-2(a4)
0002D582 <AmiBlitz3.ab3@17779>    MOVE.w arrayoffset,d1
0002D586 <AmiBlitz3.ab3@17780>    BSR writeword
0002D58A <AmiBlitz3.ab3@17781> BRA JL_0_B194
0002D58E <AmiBlitz3.ab3@17784>   CMP.b #1,d2
0002D592 <AmiBlitz3.ab3@17785>    BNE.s 'la10
0002D598 <AmiBlitz3.ab3@17786>     MOVE.w #$102a,-2(a4)
0002D59C <AmiBlitz3.ab3@17787>    OR.w d1,-2(a4)
0002D5A2 <AmiBlitz3.ab3@17788>    MOVE.w arrayoffset,d1
0002D5A6 <AmiBlitz3.ab3@17789>    BSR writeword
0002D5AA <AmiBlitz3.ab3@17790> BRA JL_0_B194
0002D5B0 <AmiBlitz3.ab3@17793>   MOVE.l destpointer,a4
0002D5B6 <AmiBlitz3.ab3@17794>    CMP.w #$45ea,-2(a4)
0002D5BA <AmiBlitz3.ab3@17795>    BNE 'la10
0002D5BE <AmiBlitz3.ab3@17796>    CMP.b #3,d2
0002D5C2 <AmiBlitz3.ab3@17797>    BCS 'la11
0002D5C8 <AmiBlitz3.ab3@17798>    MOVE.w #$202a,-4(a4)
0002D5CC <AmiBlitz3.ab3@17799>    OR.w d1,-4(a4)
0002D5D0 <AmiBlitz3.ab3@17800> BRA JL_0_B194
0002D5D4 <AmiBlitz3.ab3@17803>    CMP.b #2,d2
0002D5D8 <AmiBlitz3.ab3@17804>    BNE 'la12
0002D5DE <AmiBlitz3.ab3@17805>     MOVE.w #$302a,-4(a4)
0002D5E2 <AmiBlitz3.ab3@17806>    OR.w d1,-4(a4)
0002D5E6 <AmiBlitz3.ab3@17807> BRA JL_0_B194
0002D5EA <AmiBlitz3.ab3@17810>   CMP.b #1,d2
0002D5EE <AmiBlitz3.ab3@17811>    BNE.s 'la10
0002D5F4 <AmiBlitz3.ab3@17812>     MOVE.w #$102a,-4(a4)
0002D5F8 <AmiBlitz3.ab3@17813>    OR.w d1,-4(a4)
0002D5FC <AmiBlitz3.ab3@17814> BRA JL_0_B194
0002D602 <AmiBlitz3.ab3@17817>    OR.w movea2dn,D1
0002D606 <AmiBlitz3.ab3@17818>    BSR.w JL_0_B1B2
0002D60A <AmiBlitz3.ab3@17819>    BSR.w writeword
0002D60E <AmiBlitz3.ab3@17822>   ANDI.w #$FF,D2
0002D610 <AmiBlitz3.ab3@17823> RTS
0002D616 <AmiBlitz3.ab3@17827>    MOVE.l destpointer,a4
0002D61E <AmiBlitz3.ab3@17828>    MOVE.l #$f22a4400,-4(a4)
0002D624 <AmiBlitz3.ab3@17829>    MOVE.w arrayoffset,d1
0002D628 <AmiBlitz3.ab3@17830> BRA writeword
0002D62E <AmiBlitz3.ab3@17834>   OR.w moved3a5dn,D1                                        ;write move.l 0(a5),reg
0002D632 <AmiBlitz3.ab3@17835>    BSR.w JL_0_B1B2
0002D636 <AmiBlitz3.ab3@17836>    BSR.w pokewda5s
0002D638 <AmiBlitz3.ab3@17837>   MOVE.w D3,D1
0002D63C <AmiBlitz3.ab3@17838>    BSR.w writeword
0002D640 <AmiBlitz3.ab3@17839> BRA.w JL_0_B194
0002D644 <AmiBlitz3.ab3@17842>   BTST #$E,D2
0002D648 <AmiBlitz3.ab3@17843>    BNE.w JL_0_B1CA
0002D64C <AmiBlitz3.ab3@17844>   CMP.b #$1,D2
0002D650 <AmiBlitz3.ab3@17845>    BEQ.w JL_0_B1CC
0002D654 <AmiBlitz3.ab3@17846>   CMP.b #$2,D2
0002D658 <AmiBlitz3.ab3@17847>    BEQ.w JL_0_B1D2
0002D65A <AmiBlitz3.ab3@17850> RTS
0002D65E <AmiBlitz3.ab3@17853>   EORI.w #$3000,D1
0002D660 <AmiBlitz3.ab3@17854> RTS
0002D664 <AmiBlitz3.ab3@17857>   ORI.w #$1000,D1
0002D666 <AmiBlitz3.ab3@17858> RTS
0002D66E <AmiBlitz3.ab3@17862>   MOVE.w #$FFFF,dfetch
0002D672 <AmiBlitz3.ab3@17863>   BSR.w get1bytemain
0002D676 <AmiBlitz3.ab3@17864>   CMP.w #$2D,D0
0002D67A <AmiBlitz3.ab3@17865>    BNE.w JL_0_B206
0002D67E <AmiBlitz3.ab3@17866>   BSR.w get1bytemain
0002D682 <AmiBlitz3.ab3@17867>   BSR.w JL_0_B206
0002D686 <AmiBlitz3.ab3@17868>   CMP.w #$5,D2
0002D68A <AmiBlitz3.ab3@17869>    BCC.w JL_0_B200
0002D68C <AmiBlitz3.ab3@17870>   NEG.l D0
0002D68E <AmiBlitz3.ab3@17871> RTS
0002D694 <AmiBlitz3.ab3@17874>   TST.b fpu
0002D698 <AmiBlitz3.ab3@17875>   BEQ 'noneg
0002D69C <AmiBlitz3.ab3@17876>   fneg.x fp0
0002D69E <AmiBlitz3.ab3@17877> RTS
0002D6A2 <AmiBlitz3.ab3@17880>   BCHG #$7,D0
0002D6A4 <AmiBlitz3.ab3@17881> RTS
0002D6A8 <AmiBlitz3.ab3@17884>   CMP.w #$24,D0
0002D6AC <AmiBlitz3.ab3@17885>    BEQ.w get_hexconstant
0002D6B0 <AmiBlitz3.ab3@17886>   CMP.w #$25,D0
0002D6B4 <AmiBlitz3.ab3@17887>    BEQ.w JL_0_A8C0
0002D6B8 <AmiBlitz3.ab3@17888>   CMP.w #$2E,D0
0002D6BC <AmiBlitz3.ab3@17889>    BNE.w JL_0_B224
0002D6BE <AmiBlitz3.ab3@17892>   MOVEQ.l #$00,D3
0002D6C2 <AmiBlitz3.ab3@17893> BRA.w JL_0_B272
0002D6C4 <AmiBlitz3.ab3@17896>   MOVEQ.l #$00,D3                                          ;number
0002D6C8 <AmiBlitz3.ab3@17897>    BSR.w atoi
0002D6CC <AmiBlitz3.ab3@17898>   CMP.w #$2E,D0
0002D6D0 <AmiBlitz3.ab3@17899>    BEQ.w JL_0_B268
0002D6D4 <AmiBlitz3.ab3@17900>   ORI.w #$20,D0
0002D6D8 <AmiBlitz3.ab3@17901>   CMP.w #$65,D0
0002D6DC <AmiBlitz3.ab3@17902>    BNE.w JL_0_B46E
0002D6E2 <AmiBlitz3.ab3@17903>   CMP.l #$800000,D3
0002D6E6 <AmiBlitz3.ab3@17904>    BCC.w overerr
0002D6E8 <AmiBlitz3.ab3@17905>   MOVEQ.l #-$01,D6
0002D6EC <AmiBlitz3.ab3@17906>   fmove.l d3,fp0
0002D6EE <AmiBlitz3.ab3@17907>   MOVE.l D3,D0
0002D6F4 <AmiBlitz3.ab3@17908>   MOVEA.l _mathffpbase,A6
0002D6F8 <AmiBlitz3.ab3@17909>    JSR -$24(A6)
0002D6FA <AmiBlitz3.ab3@17910>   MOVE.l D0,D3
0002D6FE <AmiBlitz3.ab3@17911>    BSR.w JL_0_B2E6
0002D702 <AmiBlitz3.ab3@17912>    BSR.w reget
0002D706 <AmiBlitz3.ab3@17913>    BSR.w JL_0_B480
0002D70A <AmiBlitz3.ab3@17914> BRA.w JL_0_B3DC
0002D70E <AmiBlitz3.ab3@17917>   CMP.b #4,d2
0002D712 <AmiBlitz3.ab3@17918>   BEQ 'l4
0002D716 <AmiBlitz3.ab3@17919>   MOVE.b #5,d2                                             ;nprint 2/0.5 bugfix
0002D71C <AmiBlitz3.ab3@17922>    TST.b fpu
0002D720 <AmiBlitz3.ab3@17923>    BNE 'l1
0002D726 <AmiBlitz3.ab3@17924>    CMP.l #$800000,D3
0002D72A <AmiBlitz3.ab3@17925>    BCC.w overerr
0002D72E <AmiBlitz3.ab3@17926> BRA JL_0_B272
0002D734 <AmiBlitz3.ab3@17929>   CMP.l #$7fffffff,d3
0002D738 <AmiBlitz3.ab3@17930>     BCC.w overerr
0002D73A <AmiBlitz3.ab3@17933>   MOVEQ.l #-$01,D6
0002D73C <AmiBlitz3.ab3@17934>   MOVE.l D3,D0
0002D740 <AmiBlitz3.ab3@17935>   fmove.l d3,fp0
0002D746 <AmiBlitz3.ab3@17936>   MOVEA.l _mathffpbase,A6
0002D74A <AmiBlitz3.ab3@17937>    JSR -$24(A6)                                            ;integer to ffp
0002D74C <AmiBlitz3.ab3@17938>   MOVE.l D0,-(A7)
0002D750 <AmiBlitz3.ab3@17939>    BSR.w get1bytemain
0002D754 <AmiBlitz3.ab3@17940>    BSR.w tstnum
0002D758 <AmiBlitz3.ab3@17941>    BNE.w syntaxerr
0002D75A <AmiBlitz3.ab3@17942>   MOVEQ.l #$00,D3
0002D75E <AmiBlitz3.ab3@17943>    BSR.w atoi
0002D760 <AmiBlitz3.ab3@17944>   TST.l D3
0002D764 <AmiBlitz3.ab3@17945>    BEQ.w JL_0_B2E0
0002D76A <AmiBlitz3.ab3@17946>   TST.b fpu
0002D76E <AmiBlitz3.ab3@17947>   BNE 'l1
0002D774 <AmiBlitz3.ab3@17948>   CMP.l #$800000,D3
0002D778 <AmiBlitz3.ab3@17949>    BCC.w overerr
0002D77C <AmiBlitz3.ab3@17950> BRA 'l2
0002D782 <AmiBlitz3.ab3@17953>   CMP.l #$7fffffff,d3
0002D786 <AmiBlitz3.ab3@17954>   BCC overerr
0002D78A <AmiBlitz3.ab3@17957>   fmove.l d5,fp1
0002D78C <AmiBlitz3.ab3@17958>   MOVE.l D5,D0
0002D790 <AmiBlitz3.ab3@17959>    JSR -$24(A6)
0002D792 <AmiBlitz3.ab3@17960>   MOVE.l D0,D5
0002D796 <AmiBlitz3.ab3@17961>   fmove.l d3,fp2
0002D798 <AmiBlitz3.ab3@17962>   MOVE.l D3,D0
0002D79C <AmiBlitz3.ab3@17963>    JSR -$24(A6)
0002D7A0 <AmiBlitz3.ab3@17964>   fdiv.x fp1,fp2
0002D7A2 <AmiBlitz3.ab3@17965>   MOVE.l D5,D1
0002D7A6 <AmiBlitz3.ab3@17966>    JSR -$54(A6)
0002D7AA <AmiBlitz3.ab3@17967>   fadd.x fp2,fp0
0002D7AC <AmiBlitz3.ab3@17968>   MOVE.l (A7)+,D1
0002D7B0 <AmiBlitz3.ab3@17969>    JSR -$42(A6)
0002D7B2 <AmiBlitz3.ab3@17970>   MOVE.l D0,D3
0002D7B6 <AmiBlitz3.ab3@17971>    BSR.w reget
0002D7BA <AmiBlitz3.ab3@17972>   ORI.w #$20,D0
0002D7BE <AmiBlitz3.ab3@17973>   CMP.w #$65,D0
0002D7C2 <AmiBlitz3.ab3@17974>    BNE.w JL_0_B2D4
0002D7C6 <AmiBlitz3.ab3@17975>    BSR.w JL_0_B2E6
0002D7CA <AmiBlitz3.ab3@17978>    BSR.w reget
0002D7CE <AmiBlitz3.ab3@17979>    BSR.w JL_0_B480
0002D7D2 <AmiBlitz3.ab3@17980> BRA.w JL_0_B3DC
0002D7D4 <AmiBlitz3.ab3@17983>   MOVE.l (A7)+,D3
0002D7D8 <AmiBlitz3.ab3@17984> BRA.w JL_0_B2D4
0002D7DC <AmiBlitz3.ab3@17987>   BSR.w get1bytemain
0002D7E0 <AmiBlitz3.ab3@17988>   CMP.w #$2B,D0
0002D7E4 <AmiBlitz3.ab3@17989>    BEQ.w JL_0_B30E
0002D7E8 <AmiBlitz3.ab3@17990>   CMP.w #$2D,D0
0002D7EC <AmiBlitz3.ab3@17991>    BNE.w JL_0_B312
0002D7F0 <AmiBlitz3.ab3@17992>    BSR.w get1bytemain
0002D7F4 <AmiBlitz3.ab3@17993>    BSR.w getsign
0002D7F6 <AmiBlitz3.ab3@17994>   MOVE.l D3,D0
0002D7FA <AmiBlitz3.ab3@17995>   fdiv.x fp1,fp0
0002D7FC <AmiBlitz3.ab3@17996>   MOVE.l D4,D1
0002D800 <AmiBlitz3.ab3@17997>    JSR -$54(A6)
0002D802 <AmiBlitz3.ab3@17998>   MOVE.l D0,D3
0002D804 <AmiBlitz3.ab3@17999> RTS
0002D808 <AmiBlitz3.ab3@18002>   BSR.w get1bytemain
0002D80C <AmiBlitz3.ab3@18005>   BSR.w getsign
0002D810 <AmiBlitz3.ab3@18006>   fmul.x fp1,fp0
0002D812 <AmiBlitz3.ab3@18007>   MOVE.l D3,D0
0002D814 <AmiBlitz3.ab3@18008>   MOVE.l D4,D1
0002D818 <AmiBlitz3.ab3@18009>    JSR -$4E(A6)
0002D81A <AmiBlitz3.ab3@18010>   MOVE.l D0,D3
0002D81C <AmiBlitz3.ab3@18011> RTS
0002D820 <AmiBlitz3.ab3@18014>   BSR.w tstnum
0002D824 <AmiBlitz3.ab3@18015>    BNE.w syntaxerr
0002D826 <AmiBlitz3.ab3@18016>   MOVE.w D0,D4
0002D82A <AmiBlitz3.ab3@18017>   SUBI.w #$30,D4
0002D82E <AmiBlitz3.ab3@18018>    BSR.w get1bytemain
0002D832 <AmiBlitz3.ab3@18019>    BSR.w tstnum
0002D836 <AmiBlitz3.ab3@18020>    BNE.w getsign__skip
0002D83A <AmiBlitz3.ab3@18021>   MULU #$A,D4
0002D83E <AmiBlitz3.ab3@18022>   SUBI.w #$30,D0
0002D840 <AmiBlitz3.ab3@18023>   ADD.w D0,D4
0002D844 <AmiBlitz3.ab3@18024>    BSR.w get1bytemain
0002D848 <AmiBlitz3.ab3@18027>   CMP.w #$12,D4
0002D84C <AmiBlitz3.ab3@18028>    BHI.w overerr
0002D84E <AmiBlitz3.ab3@18029>   LSL.w #3,D4
0002D854 <AmiBlitz3.ab3@18030>   LEA fputab,a0
0002D856 <AmiBlitz3.ab3@18031>   ADD.l d4,a0
0002D85C <AmiBlitz3.ab3@18032>   fmove.d 0(a0),fp1
0002D85E <AmiBlitz3.ab3@18033>   LSR.w #1,d4
0002D862 <AmiBlitz3.ab3@18034>   MOVE.l facts(PC,D4.W),D4
0002D864 <AmiBlitz3.ab3@18035> RTS
0002D8AC <AmiBlitz3.ab3@18039>   Dc.d 1,10,100,1000,10000,100000,1000000,10000000,100000000  ;,1000000000,10000000000
0002D8B0 <AmiBlitz3.ab3@18044>   Dc.l $80000041
0002D8B4 <AmiBlitz3.ab3@18045>   Dc.l $A0000044
0002D8B8 <AmiBlitz3.ab3@18046>   Dc.l $C8000047
0002D8BC <AmiBlitz3.ab3@18047>   Dc.l $FA00004A
0002D8C0 <AmiBlitz3.ab3@18048>   Dc.l $9C40004E
0002D8C4 <AmiBlitz3.ab3@18049>   Dc.l $C3500051
0002D8C8 <AmiBlitz3.ab3@18050>   Dc.l $F4240054
0002D8CC <AmiBlitz3.ab3@18051>   Dc.l $98968058
0002D8D0 <AmiBlitz3.ab3@18052>   Dc.l $BEBC205B
0002D8D4 <AmiBlitz3.ab3@18053>   Dc.l $EE6B285E
0002D8D8 <AmiBlitz3.ab3@18054>   Dc.l $9502F962
0002D8DC <AmiBlitz3.ab3@18055>   Dc.l $BA43B765
0002D8E0 <AmiBlitz3.ab3@18056>   Dc.l $E8D4A568
0002D8E4 <AmiBlitz3.ab3@18057>   Dc.l $9184E76C
0002D8E8 <AmiBlitz3.ab3@18058>   Dc.l $B5E6A96F
0002D8EC <AmiBlitz3.ab3@18059>   Dc.l $E35F2972
0002D8F0 <AmiBlitz3.ab3@18060>   Dc.l $8E1BCA76
0002D8F4 <AmiBlitz3.ab3@18061>   Dc.l $B1A2BD79
0002D8F8 <AmiBlitz3.ab3@18062>   Dc.l $DE0B6C7C
0002D8FA <AmiBlitz3.ab3@18066>   MOVEQ.l #$01,D5
0002D8FC <AmiBlitz3.ab3@18069>   LSL.l #1,D5
0002D8FE <AmiBlitz3.ab3@18070>   MOVE.l D5,D1
0002D900 <AmiBlitz3.ab3@18071>   LSL.l #2,D5
0002D902 <AmiBlitz3.ab3@18072>   ADD.l D1,D5                                              ;divisor for frac convert!
0002D904 <AmiBlitz3.ab3@18073>   LSL.l #1,D3
0002D908 <AmiBlitz3.ab3@18074>    BCS.w overerr
0002D90A <AmiBlitz3.ab3@18075>   MOVE.l D3,D1
0002D90C <AmiBlitz3.ab3@18076>   LSL.l #1,D3
0002D910 <AmiBlitz3.ab3@18077>    BCS.w overerr
0002D912 <AmiBlitz3.ab3@18078>   LSL.l #1,D3
0002D916 <AmiBlitz3.ab3@18079>    BCS.w overerr
0002D918 <AmiBlitz3.ab3@18080>   ADD.l D1,D3
0002D91C <AmiBlitz3.ab3@18081>   SUBI.w #$30,D0
0002D91E <AmiBlitz3.ab3@18082>   ADD.l D0,D3
0002D94A <AmiBlitz3.ab3@18083>    !fget                                                   ;bsr.w get1bytemain
0002D94E <AmiBlitz3.ab3@18084>    CMP.b #1,d0
0002D952 <AmiBlitz3.ab3@18085>    BNE 'cm1
0002D954 <AmiBlitz3.ab3@18086>    SUBQ.l #1,a5
0002D958 <AmiBlitz3.ab3@18087>    BSR get1bytemain                                        ;??wy not !fget
0002D95C <AmiBlitz3.ab3@18090>   CMP.b #$7e,d0
0002D960 <AmiBlitz3.ab3@18091>    BNE 'cm2
0002D962 <AmiBlitz3.ab3@18092>    SUBQ.l #1,a5
0002D966 <AmiBlitz3.ab3@18093>    BSR get1bytemain
0002D968 <AmiBlitz3.ab3@18096>   TST.b d0
0002D96C <AmiBlitz3.ab3@18097>    BPL 'l10
0002D96E <AmiBlitz3.ab3@18098>    LSL.w #8,d0
0002D970 <AmiBlitz3.ab3@18099>    MOVE.b (a5)+,d0
0002D976 <AmiBlitz3.ab3@18100>    MOVE.w d0,lastchar
0002D988 <AmiBlitz3.ab3@18103>   !compare2                                                ;bsr.w tstnum ;cmake bug
0002D98C <AmiBlitz3.ab3@18104>    BEQ.w atoi__loop
0002D98E <AmiBlitz3.ab3@18105> RTS
0002D990 <AmiBlitz3.ab3@18108> dfetch:  Ds.w 1                                            ;fetching data?
0002D994 <AmiBlitz3.ab3@18112>   MOVE.w dfetch(PC),D1
0002D998 <AmiBlitz3.ab3@18113>    BEQ.w JL_0_B3EC
0002D99E <AmiBlitz3.ab3@18114>   CLR.w dfetch
0002D9A0 <AmiBlitz3.ab3@18115> RTS
0002D9A6 <AmiBlitz3.ab3@18118>   MOVE.b d2,isconstantvalue
0002D9AC <AmiBlitz3.ab3@18119>   MOVE.l d0,lastconstantvalue
0002D9B2 <AmiBlitz3.ab3@18120>   MOVE.w d2,imm_size
0002D9BC <AmiBlitz3.ab3@18121>   MOVE.w regnum,imm_reg
0002D9C6 <AmiBlitz3.ab3@18122>   MOVE.l destpointer,imm_addr                           ; long
0002D9CA <AmiBlitz3.ab3@18123>   CMP.w #$3,D2
0002D9CE <AmiBlitz3.ab3@18124>   BEQ.w JL_0_B434
0002D9D2 <AmiBlitz3.ab3@18125>   CMP.w #$5,D2                                          ;float
0002D9D6 <AmiBlitz3.ab3@18126>   BEQ.w JL_0_B434
0002D9DA <AmiBlitz3.ab3@18127>   CMP.w #$1,D2
0002D9DE <AmiBlitz3.ab3@18128>   BEQ.w JL_0_B418
0002D9E2 <AmiBlitz3.ab3@18129>   CMP.w #$2,D2
0002D9E6 <AmiBlitz3.ab3@18130>   BEQ.w JL_0_B418
0002D9EA <AmiBlitz3.ab3@18131>   CMP.w #$4,D2
0002D9EE <AmiBlitz3.ab3@18132>   BEQ.w JL_0_B434
0002D9F2 <AmiBlitz3.ab3@18134> BRA.w mismatcherr
0002D9F8 <AmiBlitz3.ab3@18137>   MOVE.w regnum,D1
0002D9FA <AmiBlitz3.ab3@18138>   LSL.w #8,D1
0002D9FC <AmiBlitz3.ab3@18139>   LSL.w #1,D1
0002DA00 <AmiBlitz3.ab3@18140>   ORI.w #$303C,D1
0002DA04 <AmiBlitz3.ab3@18141>    BSR.w writeword
0002DA06 <AmiBlitz3.ab3@18142>   MOVE.w D0,D1
0002DA0A <AmiBlitz3.ab3@18143>    BSR.w writeword
0002DA0E <AmiBlitz3.ab3@18144> BRA.w reget
0002DA10 <AmiBlitz3.ab3@18147>   MOVEQ #0,d1
0002DA16 <AmiBlitz3.ab3@18148>   MOVE.w regnum,D1
0002DA1C <AmiBlitz3.ab3@18149>   TST.b fpu
0002DA20 <AmiBlitz3.ab3@18150>   BEQ 'f1
0002DA24 <AmiBlitz3.ab3@18151>   CMP.w #5,d2
0002DA28 <AmiBlitz3.ab3@18152>   BEQ 'l10
0002DA2C <AmiBlitz3.ab3@18153> BRA 'f2
0002DA32 <AmiBlitz3.ab3@18156>   TST.b iee
0002DA36 <AmiBlitz3.ab3@18157>   BNE 'l10
0002DA38 <AmiBlitz3.ab3@18160>   LSL.w #8,D1
0002DA3A <AmiBlitz3.ab3@18161>   LSL.w #1,D1
0002DA3E <AmiBlitz3.ab3@18162>   ORI.w #$203C,D1
0002DA42 <AmiBlitz3.ab3@18163>    BSR.w writeword
0002DA44 <AmiBlitz3.ab3@18164>   MOVE.l D0,D1
0002DA48 <AmiBlitz3.ab3@18165>    BSR.w writelong
0002DA4C <AmiBlitz3.ab3@18166> BRA.w reget
0002DA4E <AmiBlitz3.ab3@18169>   MOVEQ #5,d2
0002DA50 <AmiBlitz3.ab3@18170>   ASL.l #7,d1
0002DA52 <AmiBlitz3.ab3@18171>   SUBQ.l #8,a7
0002DA58 <AmiBlitz3.ab3@18176>       OR.l #$f23c4400,d1                                   ;fmove.s
0002DA5E <AmiBlitz3.ab3@18177>        fmove.s fp0,0(a7)
0002DA62 <AmiBlitz3.ab3@18179>   BSR writelong
0002DA64 <AmiBlitz3.ab3@18180>   MOVE.l (a7)+,d1
0002DA68 <AmiBlitz3.ab3@18181>   BSR writelong
0002DA6A <AmiBlitz3.ab3@18182>   MOVE.l (a7)+,d1
0002DA6E <AmiBlitz3.ab3@18186> BRA.w reget
0002DA70 <AmiBlitz3.ab3@18192>  MOVE.l D3,D0
0002DA72 <AmiBlitz3.ab3@18193>   TST.w D6
0002DA76 <AmiBlitz3.ab3@18194>    BEQ.w JL_0_B46C
0002DA7C <AmiBlitz3.ab3@18195>   MOVEA.l _mathffpbase,A6
0002DA80 <AmiBlitz3.ab3@18196>    JSR -$1E(A6)
0002DA84 <AmiBlitz3.ab3@18197>    BVC.w JL_0_B46C
0002DA86 <AmiBlitz3.ab3@18198>   ADDQ.w #4,A7
0002DA8A <AmiBlitz3.ab3@18199> BRA.w JL_0_B5A0
0002DA8C <AmiBlitz3.ab3@18202> RTS
0002DA8E <AmiBlitz3.ab3@18206>   MOVEQ.l #$00,D6
0002DA92 <AmiBlitz3.ab3@18207>    fmove.l d3,fp0
0002DA96 <AmiBlitz3.ab3@18210>   BSR.w JL_0_B480
0002DA9A <AmiBlitz3.ab3@18211> BRA.w JL_0_B3DC
0002DA9C <AmiBlitz3.ab3@18214>   MOVE.w D2,-(A7)
0002DAA0 <AmiBlitz3.ab3@18215>    BSR.w JL_0_BF6A
0002DAA2 <AmiBlitz3.ab3@18216>   MOVE.w (A7)+,D2
0002DAA4 <AmiBlitz3.ab3@18219>   TST.w D2
0002DAA8 <AmiBlitz3.ab3@18220>    BNE.w JL_0_B498
0002DAAA <AmiBlitz3.ab3@18221>   TST.w D6
0002DAAE <AmiBlitz3.ab3@18222>    BEQ.w JL_0_B492
0002DAB0 <AmiBlitz3.ab3@18223>   MOVEQ.l #$04,D2
0002DAB4 <AmiBlitz3.ab3@18224> BRA.w JL_0_B510
0002DAB6 <AmiBlitz3.ab3@18227>   MOVEQ.l #$02,D2
0002DABA <AmiBlitz3.ab3@18228> BRA.w JL_0_B4C4
0002DABE <AmiBlitz3.ab3@18231>   CMP.w #$1,D2
0002DAC2 <AmiBlitz3.ab3@18232>    BEQ.w JL_0_B4C4
0002DAC6 <AmiBlitz3.ab3@18233>   CMP.w #$2,D2
0002DACA <AmiBlitz3.ab3@18234>    BEQ.w JL_0_B4F8
0002DACE <AmiBlitz3.ab3@18235>   CMP.w #$3,D2
0002DAD2 <AmiBlitz3.ab3@18236>    BEQ.w JL_0_B57A
0002DAD6 <AmiBlitz3.ab3@18237>   CMP.w #$4,D2
0002DADA <AmiBlitz3.ab3@18238>    BEQ.w JL_0_B506
0002DADE <AmiBlitz3.ab3@18239>   CMP.w #$5,D2
0002DAE2 <AmiBlitz3.ab3@18240>    BEQ.w JL_0_B586
0002DAE6 <AmiBlitz3.ab3@18241> BRA.w mismatcherr
0002DAEA <AmiBlitz3.ab3@18244>   BSR.w JL_0_B450                                          ;bugfix if a.b=$90 bug fix
0002DAF0 <AmiBlitz3.ab3@18245>   CMP.l #$7f,D0
0002DAF4 <AmiBlitz3.ab3@18246>    BGT.w JL_0_B4DC
0002DAFA <AmiBlitz3.ab3@18247>   CMP.l #$FFFFFF80,D0
0002DAFE <AmiBlitz3.ab3@18248>    BGE.w JL_0_B59E
0002DB00 <AmiBlitz3.ab3@18251>   MOVEQ.l #$02,D2                                          ;was 2 before
0002DB06 <AmiBlitz3.ab3@18252>   CMP.l #$7fff,D0
0002DB0A <AmiBlitz3.ab3@18253>    BGT.w JL_0_B4F2
0002DB10 <AmiBlitz3.ab3@18254>   CMP.l #$FFFF8000,D0
0002DB14 <AmiBlitz3.ab3@18255>    BGE.w JL_0_B59E
0002DB16 <AmiBlitz3.ab3@18258>   MOVEQ.l #$03,D2
0002DB1A <AmiBlitz3.ab3@18259> BRA.w JL_0_B59E
0002DB1C <AmiBlitz3.ab3@18285>   TST.w D6
0002DB20 <AmiBlitz3.ab3@18286>    BNE.w JL_0_B510
0002DB24 <AmiBlitz3.ab3@18287>    BSR.w JL_0_B450
0002DB28 <AmiBlitz3.ab3@18288> BRA.w JL_0_B4DC
0002DB2C <AmiBlitz3.ab3@18291>   BSR.w JL_0_B450
0002DB2E <AmiBlitz3.ab3@18292>   TST.w D6
0002DB32 <AmiBlitz3.ab3@18293>   BEQ.w JL_0_B560
0002DB38 <AmiBlitz3.ab3@18296>   CMP.l #MaxWordSgnd,D0
0002DB3C <AmiBlitz3.ab3@18297>    BGT.w JL_0_B5A0
0002DB42 <AmiBlitz3.ab3@18298>   CMP.l #$FFFF8000,D0
0002DB46 <AmiBlitz3.ab3@18299>    BLT.w JL_0_B5A0
0002DB48 <AmiBlitz3.ab3@18300>   MOVE.w D0,-(A7)
0002DB4C <AmiBlitz3.ab3@18301>    JSR -$24(A6)
0002DB4E <AmiBlitz3.ab3@18302>   MOVE.l D0,D1
0002DB50 <AmiBlitz3.ab3@18303>   MOVE.l D3,D0
0002DB54 <AmiBlitz3.ab3@18304>    JSR -$48(A6)
0002DB5A <AmiBlitz3.ab3@18305>   MOVE.l #$80000051,D1
0002DB5E <AmiBlitz3.ab3@18306>    JSR -$4E(A6)
0002DB62 <AmiBlitz3.ab3@18307>    JSR -$1E(A6)
0002DB66 <AmiBlitz3.ab3@18308>    BEQ.w JL_0_B55A
0002DB6C <AmiBlitz3.ab3@18309>   CMP.l #$10000,D0
0002DB70 <AmiBlitz3.ab3@18310>    BCC.w JL_0_B55A
0002DB72 <AmiBlitz3.ab3@18311>   MOVE.w D0,D1
0002DB74 <AmiBlitz3.ab3@18312>   MOVE.w (A7)+,D0
0002DB76 <AmiBlitz3.ab3@18313>   SWAP D0
0002DB78 <AmiBlitz3.ab3@18314>   MOVE.w D1,D0
0002DB7C <AmiBlitz3.ab3@18315> BRA.w JL_0_B59E
0002DB7E <AmiBlitz3.ab3@18318>   ADDQ.w #2,A7
0002DB82 <AmiBlitz3.ab3@18319> BRA.w JL_0_B5A0
0002DB88 <AmiBlitz3.ab3@18322>   CMP.l #MaxWordSgnd,D0
0002DB8C <AmiBlitz3.ab3@18323>    BGT.w JL_0_B4F2
0002DB92 <AmiBlitz3.ab3@18324>   CMP.l #$FFFF8000,D0
0002DB96 <AmiBlitz3.ab3@18325>    BLT.w JL_0_B4F2
0002DB98 <AmiBlitz3.ab3@18326>   SWAP D0
0002DB9C <AmiBlitz3.ab3@18327> BRA.w JL_0_B59E
0002DB9E <AmiBlitz3.ab3@18330>   TST.w D6
0002DBA2 <AmiBlitz3.ab3@18331>   BNE.w JL_0_B5A0
0002DBA4 <AmiBlitz3.ab3@18332>   MOVE.l D3,D0
0002DBA8 <AmiBlitz3.ab3@18333> BRA.w JL_0_B59E
0002DBAA <AmiBlitz3.ab3@18336>   TST.w D6
0002DBAE <AmiBlitz3.ab3@18337>   BNE.w JL_0_B5A0
0002DBB0 <AmiBlitz3.ab3@18338>   MOVE.l D3,D0
0002DBB6 <AmiBlitz3.ab3@18339>   MOVEA.l _mathffpbase,A6
0002DBBA <AmiBlitz3.ab3@18340>   JSR -$24(A6)
0002DBBC <AmiBlitz3.ab3@18341>   MOVE.l D0,D3
0002DBC0 <AmiBlitz3.ab3@18342> BRA.w JL_0_B5A0
0002DBC2 <AmiBlitz3.ab3@18345> RTS
0002DBC4 <AmiBlitz3.ab3@18348>   MOVEQ.l #$05,D2
0002DBC6 <AmiBlitz3.ab3@18349>   MOVE.l D3,D0
0002DBC8 <AmiBlitz3.ab3@18350> RTS
0002DBCC <AmiBlitz3.ab3@18354>             Ds.l 1                                         ;??Looks like unused data??
0002DBD0 <AmiBlitz3.ab3@18355> pushpc:     Ds.l 1
0002DBD4 <AmiBlitz3.ab3@18356> pushoff:    Ds.l 1
0002DBD8 <AmiBlitz3.ab3@18357> pushdooff:  Ds.l 1
0002DBDA <AmiBlitz3.ab3@18358> pushclen:   Ds.w 1
0002DBDE <AmiBlitz3.ab3@18359> pushat:     Ds.l 1
0002DBE8 <AmiBlitz3.ab3@18363>   MOVE.l destpointer,pushpc
0002DBF2 <AmiBlitz3.ab3@18364>   MOVE.l hunkoffsetbase,pushoff
0002DBF4 <AmiBlitz3.ab3@18365> RTS
0002DBF8 <AmiBlitz3.ab3@18369>   MOVEM.l D0-D1/A0-A1,-(A7)
0002DBFE <AmiBlitz3.ab3@18370>   MOVE.l destpointer,D0
0002DC02 <AmiBlitz3.ab3@18371>   MOVE.l pushpc(PC),D1
0002DC08 <AmiBlitz3.ab3@18372>   MOVE.l D1,destpointer
0002DC0A <AmiBlitz3.ab3@18373>   SUB.l D1,D0
0002DC10 <AmiBlitz3.ab3@18374>   MOVE.w D0,pushclen
0002DC14 <AmiBlitz3.ab3@18375>    BEQ.w JL_0_B636
0002DC1A <AmiBlitz3.ab3@18376>   MOVE.w dontwrite,D1
0002DC1E <AmiBlitz3.ab3@18377>    BNE.w JL_0_B636
0002DC26 <AmiBlitz3.ab3@18378>    CMP.w #1000,pushclen
0002DC2A <AmiBlitz3.ab3@18379>    BGE conmemerr
0002DC30 <AmiBlitz3.ab3@18380>    MOVE.l pushat,d0
0002DC34 <AmiBlitz3.ab3@18381>    BNE 'nomem
0002DC3A <AmiBlitz3.ab3@18382>    MOVE.l #1024,d0
0002DC3C <AmiBlitz3.ab3@18383>   MOVEQ.l #$01,D1
0002DC42 <AmiBlitz3.ab3@18384>   MOVEA.l _execbase,A6
0002DC48 <AmiBlitz3.ab3@18385>   MOVE.l mempool,a0
0002DC4C <AmiBlitz3.ab3@18386>   JSR _AllocPooled(a6)
0002DC52 <AmiBlitz3.ab3@18388>   MOVE.l D0,pushat
0002DC54 <AmiBlitz3.ab3@18391>   MOVEA.l D0,A0
0002DC5A <AmiBlitz3.ab3@18392>   MOVEA.l pushpc,A1
0002DC60 <AmiBlitz3.ab3@18393>   MOVE.l A1,destpointer
0002DC66 <AmiBlitz3.ab3@18394>   MOVE.w pushclen,D0
0002DC68 <AmiBlitz3.ab3@18395>   LSR.w #1,D0
0002DC6A <AmiBlitz3.ab3@18396>   SUBQ.w #1,D0
0002DC6C <AmiBlitz3.ab3@18399>     MOVE.w (A1)+,(A0)+
0002DC70 <AmiBlitz3.ab3@18400>   DBF D0,JL_0_B626
0002DC7A <AmiBlitz3.ab3@18402>    MOVE.l hunkoffsetbase,pushdooff
0002DC7E <AmiBlitz3.ab3@18405>   MOVEM.l (A7)+,D0-D1/A0-A1
0002DC80 <AmiBlitz3.ab3@18406> RTS
0002DC84 <AmiBlitz3.ab3@18410>   MOVEM.l D0-D1/A0-A1,-(A7)
0002DC86 <AmiBlitz3.ab3@18411>   MOVEQ.l #$00,D0
0002DC8C <AmiBlitz3.ab3@18412>   MOVE.w pushclen,D0
0002DC90 <AmiBlitz3.ab3@18413>    BEQ.w JL_0_B6D8
0002DC96 <AmiBlitz3.ab3@18414>   MOVE.l destpointer,D1
0002DC9C <AmiBlitz3.ab3@18415>   ADD.l D0,destpointer
0002DCA2 <AmiBlitz3.ab3@18416>   TST.w dontwrite
0002DCA6 <AmiBlitz3.ab3@18417>    BNE.w JL_0_B6D8
0002DCA8 <AmiBlitz3.ab3@18418>   LSR.w #1,D0
0002DCAA <AmiBlitz3.ab3@18419>   SUBQ.w #1,D0
0002DCAC <AmiBlitz3.ab3@18420>   MOVEA.l D1,A1
0002DCB2 <AmiBlitz3.ab3@18421>   MOVEA.l pushat,A0
0002DCB8 <AmiBlitz3.ab3@18424>     CMPA.l destbufferend,A1
0002DCBC <AmiBlitz3.ab3@18425>     BCS.w JL_0_B684
0002DCC4 <AmiBlitz3.ab3@18427>     MOVE.w #$FFFF,dontwrite
0002DCC8 <AmiBlitz3.ab3@18428>   BRA.w JL_0_B6D8
0002DCCA <AmiBlitz3.ab3@18431>      MOVE.w (A0)+,(A1)+                                    ;copylibcode
0002DCCE <AmiBlitz3.ab3@18432>   DBF D0,JL_0_B66E
0002DCD4 <AmiBlitz3.ab3@18434>   SUB.l pushpc,D1
0002DCD8 <AmiBlitz3.ab3@18435>   BEQ.w JL_0_B6C2
0002DCDE <AmiBlitz3.ab3@18436>   MOVEA.l pushdooff,A0
0002DCE4 <AmiBlitz3.ab3@18439>   CMPA.l pushoff,A0
0002DCE8 <AmiBlitz3.ab3@18440>   BEQ.w JL_0_B6C2
0002DCEC <AmiBlitz3.ab3@18441>   MOVEA.l $4(A0),A1
0002DCF2 <AmiBlitz3.ab3@18442>   ADDA.l destbufferstart,A1
0002DCF8 <AmiBlitz3.ab3@18443>   CMPA.l destbufferend,A1
0002DCFC <AmiBlitz3.ab3@18444>   BCC.w JL_0_B6BC
0002DD00 <AmiBlitz3.ab3@18445>   ADD.l D1,$4(A0)
0002DD02 <AmiBlitz3.ab3@18448>   MOVEA.l (A0),A0
0002DD06 <AmiBlitz3.ab3@18449> BRA.w JL_0_B69A
0002DD0C <AmiBlitz3.ab3@18452>   MOVEA.l pushat,A1
0002DD0E <AmiBlitz3.ab3@18453>   MOVEQ.l #$00,D0
0002DD14 <AmiBlitz3.ab3@18454>   MOVE.w pushclen,D0
0002DD1A <AmiBlitz3.ab3@18455>   MOVEA.l _execbase,A6
0002DD20 <AmiBlitz3.ab3@18456>   MOVE.l mempool,a0
0002DD24 <AmiBlitz3.ab3@18460>   MOVEM.l (A7)+,D0-D1/A0-A1
0002DD26 <AmiBlitz3.ab3@18461> RTS
0002DD28 <AmiBlitz3.ab3@18464>   MOVE.l D1,-(A7)                                          ;array mul
0002DD2A <AmiBlitz3.ab3@18465>   MOVEQ.l #$00,D2
0002DD2C <AmiBlitz3.ab3@18466>   MOVEQ.l #$0F,D3
0002DD2E <AmiBlitz3.ab3@18469>     LSL.w #1,D1
0002DD32 <AmiBlitz3.ab3@18470>     BCC.w JL_0_B6EE
0002DD34 <AmiBlitz3.ab3@18471>     ADDQ.w #1,D2
0002DD36 <AmiBlitz3.ab3@18472>     MOVE.w D3,D4
0002DD3A <AmiBlitz3.ab3@18475>   DBF D3,JL_0_B6E4
0002DD3C <AmiBlitz3.ab3@18477>   SUBQ.w #1,D2
0002DD40 <AmiBlitz3.ab3@18478>    BNE.w JL_0_B726
0002DD42 <AmiBlitz3.ab3@18479>   ADDQ.w #4,A7
0002DD44 <AmiBlitz3.ab3@18480>   MOVE.w D4,D1
0002DD48 <AmiBlitz3.ab3@18481>    BEQ.w JL_0_B724
0002DD4C <AmiBlitz3.ab3@18482>   CMP.w #$8,D1
0002DD50 <AmiBlitz3.ab3@18483>    BCS.w JL_0_B712
0002DD54 <AmiBlitz3.ab3@18484>   SUBI.w #$8,D1
0002DD58 <AmiBlitz3.ab3@18485>    BSR.w JL_0_B712
0002DD5A <AmiBlitz3.ab3@18486>   MOVEQ.l #$00,D1
0002DD5C <AmiBlitz3.ab3@18489>   LSL.w #8,D1
0002DD5E <AmiBlitz3.ab3@18490>   LSL.w #1,D1
0002DD62 <AmiBlitz3.ab3@18491>   ORI.w #$E188,D1
0002DD68 <AmiBlitz3.ab3@18492>   OR.w regnum,D1
0002DD6C <AmiBlitz3.ab3@18493> BRA.w writeword
0002DD6E <AmiBlitz3.ab3@18496> RTS
0002DD70 <AmiBlitz3.ab3@18499>   MOVEQ #0,d1
0002DD76 <AmiBlitz3.ab3@18500>   MOVE.w regnum,D1
0002DD78 <AmiBlitz3.ab3@18501>   LSL.l #8,D1
0002DD7A <AmiBlitz3.ab3@18503>   LSL.l #4,d1
0002DD80 <AmiBlitz3.ab3@18505>   OR.l #$4c3c0000,d1
0002DD86 <AmiBlitz3.ab3@18506>   OR.w regnum,d1
0002DD8A <AmiBlitz3.ab3@18507>   BSR.w writelong
0002DD8C <AmiBlitz3.ab3@18508>   MOVE.l (A7)+,D1
0002DD90 <AmiBlitz3.ab3@18510> BRA writelong
0002DD96 <AmiBlitz3.ab3@18513>   MOVE.l destpointer,-(A7)
0002DD98 <AmiBlitz3.ab3@18514>   MOVEQ.l #-$01,D7
0002DD9C <AmiBlitz3.ab3@18517>     BSR.w findhilib
0002DDA0 <AmiBlitz3.ab3@18518>      BEQ.w JL_0_B8A4
0002DDA4 <AmiBlitz3.ab3@18519>     TST.w $C(A2)
0002DDA8 <AmiBlitz3.ab3@18520>      BPL.w JL_0_B746
0002DDAC <AmiBlitz3.ab3@18522>     MOVE.l $16(A2),D1
0002DDB0 <AmiBlitz3.ab3@18523>     BEQ.w JL_0_B746
0002DDB4 <AmiBlitz3.ab3@18525>     MOVE.w $4(A2),D1                                       ; check state in D1 and do some things
0002DDB8 <AmiBlitz3.ab3@18526>     CMP.w #-$2,D1
0002DDBC <AmiBlitz3.ab3@18527>      BNE.w JL_0_B772
0002DDC0 <AmiBlitz3.ab3@18528>     BSR.w makevsize
0002DDC4 <AmiBlitz3.ab3@18529> BRA.w JL_0_B7FE
0002DDC8 <AmiBlitz3.ab3@18532>     CMP.w #-$5C4,D1
0002DDCC <AmiBlitz3.ab3@18533>      BNE.w JL_0_B790
0002DDD0 <AmiBlitz3.ab3@18534>     MOVE.w #$7000,D1
0002DDD8 <AmiBlitz3.ab3@18535>     BTST #$7,autorun
0002DDDA <AmiBlitz3.ab3@18536>     SNE D1
0002DDDE <AmiBlitz3.ab3@18537>     BSR.w writeword
0002DDE2 <AmiBlitz3.ab3@18538> BRA.w JL_0_B7FE
0002DDE6 <AmiBlitz3.ab3@18541>     CMP.w #-$12D,D1
0002DDEA <AmiBlitz3.ab3@18542>      BNE.w JL_0_B7A0
0002DDEE <AmiBlitz3.ab3@18543>     BSR.w makessize
0002DDF2 <AmiBlitz3.ab3@18544> BRA.w JL_0_B7FE
0002DDF6 <AmiBlitz3.ab3@18547>     CMP.w #-$1F5,D1
0002DDFA <AmiBlitz3.ab3@18548>      BNE.w JL_0_B7C2
0002DDFE <AmiBlitz3.ab3@18549>     MOVE.w #$203C,D1
0002DE02 <AmiBlitz3.ab3@18550>     BSR.w writeword
0002DE06 <AmiBlitz3.ab3@18551>     BSR.w addoff
0002DE0C <AmiBlitz3.ab3@18552>     MOVE.l endop,D1
0002DE10 <AmiBlitz3.ab3@18553>     BSR.w writelong
0002DE14 <AmiBlitz3.ab3@18554> BRA.w JL_0_B7FE
0002DE18 <AmiBlitz3.ab3@18557>     CMP.w #-$3E9,D1
0002DE1C <AmiBlitz3.ab3@18558>      BNE.w JL_0_B7E4
0002DE20 <AmiBlitz3.ab3@18559>     MOVE.w #$203C,D1
0002DE24 <AmiBlitz3.ab3@18560>     BSR.w writeword
0002DE28 <AmiBlitz3.ab3@18561>     BSR.w addoff
0002DE2E <AmiBlitz3.ab3@18562>     MOVE.l data2at,D1
0002DE32 <AmiBlitz3.ab3@18563>     BSR.w writelong
0002DE36 <AmiBlitz3.ab3@18564> BRA.w JL_0_B7FE
0002DE3A <AmiBlitz3.ab3@18567>     CMP.w #$1,D1
0002DE3E <AmiBlitz3.ab3@18568>      BNE.w JL_0_B7FE
0002DE42 <AmiBlitz3.ab3@18569>     MOVE.w #$203C,D1
0002DE46 <AmiBlitz3.ab3@18570>     BSR.w writeword
0002DE4C <AmiBlitz3.ab3@18571>     MOVE.l ptr_seg_debugger,D1
0002DE50 <AmiBlitz3.ab3@18572>     BSR.w writelong
0002DE54 <AmiBlitz3.ab3@18575>     MOVE.l $16(A2),D1
0002DE5C <AmiBlitz3.ab3@18576>     MOVE.w #$FFFF,lasta6
0002DE60 <AmiBlitz3.ab3@18577>     BSR.w Amakelibsub
0002DE66 <AmiBlitz3.ab3@18578>     CMPI.w #$FFFE,$4(A2)
0002DE6A <AmiBlitz3.ab3@18579>      BNE.w JL_0_B83A
0002DE70 <AmiBlitz3.ab3@18580>     MOVE.l intdata1,D1
0002DE74 <AmiBlitz3.ab3@18581>      BEQ.w JL_0_B83A
0002DE7A <AmiBlitz3.ab3@18582>     MOVE.w putidata1,D1
0002DE7E <AmiBlitz3.ab3@18583>     BSR.w writeword
0002DE82 <AmiBlitz3.ab3@18584>     BSR.w addoff
0002DE88 <AmiBlitz3.ab3@18585>     MOVE.l intdata1,D1
0002DE8C <AmiBlitz3.ab3@18586>     BSR.w writelong
0002DE90 <AmiBlitz3.ab3@18589>     MOVE.w #$2B40,D1
0002DE94 <AmiBlitz3.ab3@18590>     TST.w $1A(A2)
0002DE98 <AmiBlitz3.ab3@18591>      BEQ.w JL_0_B746
0002DE9C <AmiBlitz3.ab3@18592>      BPL.w JL_0_B84E
0002DEA0 <AmiBlitz3.ab3@18593>     MOVE.w #$3B40,D1
0002DEA4 <AmiBlitz3.ab3@18596>     BSR.w writeword
0002DEA8 <AmiBlitz3.ab3@18597>     MOVE.w $A(A2),D1
0002DEAC <AmiBlitz3.ab3@18598>      BSR.w writeword
0002DEB2 <AmiBlitz3.ab3@18599>     CMPI.w #$FFFA,$4(A2)
0002DEB6 <AmiBlitz3.ab3@18600>      BNE.w JL_0_B746
0002DEB8 <AmiBlitz3.ab3@18601>     MOVE.w D7,-(A7)
0002DEBE <AmiBlitz3.ab3@18602>     MOVE.w numstatic,D4
0002DEC2 <AmiBlitz3.ab3@18603>      BEQ.w JL_0_B882
0002DEC8 <AmiBlitz3.ab3@18604>     MOVE.l staticdata,D3
0002DECE <AmiBlitz3.ab3@18605>      JSR datastart
0002DED2 <AmiBlitz3.ab3@18606>     MOVE.w #$C500,D1
0002DED6 <AmiBlitz3.ab3@18607>      BSR.w tokejsr2
0002DEDC <AmiBlitz3.ab3@18610>     MOVE.w maxsused,D4
0002DEE0 <AmiBlitz3.ab3@18611>      BEQ.w JL_0_B89E
0002DEE6 <AmiBlitz3.ab3@18612>     MOVE.l maxsat,D3
0002DEEC <AmiBlitz3.ab3@18613>      JSR datastart
0002DEF0 <AmiBlitz3.ab3@18614>     MOVE.w #$CF00,D1
0002DEF4 <AmiBlitz3.ab3@18615>      BSR.w tokejsr2
0002DEF6 <AmiBlitz3.ab3@18618>     MOVE.w (A7)+,D7
0002DEFA <AmiBlitz3.ab3@18619> BRA.w JL_0_B746
0002DF00 <AmiBlitz3.ab3@18622>   MOVE.l destpointer,D1
0002DF02 <AmiBlitz3.ab3@18623>   CMP.l (A7),D1
0002DF06 <AmiBlitz3.ab3@18624>    BNE.w JL_0_B8BC
0002DF0E <AmiBlitz3.ab3@18625>   MOVE.w #$0008,noinits+2
0002DF12 <AmiBlitz3.ab3@18626> BRA.w JL_0_B8E6
0002DF18 <AmiBlitz3.ab3@18629>   CLR.w noinits+2
0002DF1E <AmiBlitz3.ab3@18630>   MOVE.w dontwrite,D1
0002DF22 <AmiBlitz3.ab3@18631>    BNE.w JL_0_B8DE
0002DF28 <AmiBlitz3.ab3@18632>   TST.l newinitaddr
0002DF2C <AmiBlitz3.ab3@18633>    BEQ 'l10
0002DF32 <AmiBlitz3.ab3@18634>   MOVE.l newinitaddr,D2
0002DF38 <AmiBlitz3.ab3@18635>   SUB.l destbufferstart,D2
0002DF3A <AmiBlitz3.ab3@18636>   ADDQ.l #2,d2
0002DF40 <AmiBlitz3.ab3@18637>   MOVEA.l newinitaddr,A0                                   ;write newinitcode
0002DF44 <AmiBlitz3.ab3@18639>   MOVE.w #$4EB9,(A0)+
0002DF46 <AmiBlitz3.ab3@18640>   MOVE.l (A7),(A0)+
0002DF4A <AmiBlitz3.ab3@18642> BRA 'l20
0002DF50 <AmiBlitz3.ab3@18645>   MOVEA.l destbufferstart,A0                               ;write initcode
0002DF56 <AmiBlitz3.ab3@18646>   TST.b saved0
0002DF5A <AmiBlitz3.ab3@18647>   BEQ 'l1
0002DF5E <AmiBlitz3.ab3@18648>   MOVE.w #$23c0,(a0)+
0002DF60 <AmiBlitz3.ab3@18649>   MOVE.l a0,a1
0002DF62 <AmiBlitz3.ab3@18650>   ADDQ.l #6,a1
0002DF64 <AmiBlitz3.ab3@18651>   MOVE.l a1,(a0)+
0002DF66 <AmiBlitz3.ab3@18652>   MOVEQ.l #$02,D2
0002DF6A <AmiBlitz3.ab3@18653>   BSR.w addhunkoffset
0002DF6E <AmiBlitz3.ab3@18654>   MOVE.w #$6004,(a0)+
0002DF74 <AmiBlitz3.ab3@18655>   MOVE.l #$4e714e71,(a0)+
0002DF78 <AmiBlitz3.ab3@18658>   MOVE.w #$4EB9,(A0)+
0002DF7A <AmiBlitz3.ab3@18659>   MOVE.l (A7),(A0)+
0002DF7C <AmiBlitz3.ab3@18660>   MOVEQ #2,d2
0002DF82 <AmiBlitz3.ab3@18661>   TST.b saved0
0002DF86 <AmiBlitz3.ab3@18662>   BEQ 'l20
0002DF88 <AmiBlitz3.ab3@18663>   MOVEQ.l #14,D2
0002DF8C <AmiBlitz3.ab3@18666>   BSR.w addhunkoffset
0002DF90 <AmiBlitz3.ab3@18667>   MOVE.w #$2039,(a0)+
0002DF92 <AmiBlitz3.ab3@18668>   MOVE.l a1,(a0)+
0002DF94 <AmiBlitz3.ab3@18669>   MOVEQ.l #20,d2
0002DF98 <AmiBlitz3.ab3@18672>   BSR.w addhunkoffset
0002DF9C <AmiBlitz3.ab3@18675>   MOVE.w #$4E75,D1
0002DFA0 <AmiBlitz3.ab3@18676>   BSR.w writeword
0002DFA2 <AmiBlitz3.ab3@18679>   ADDQ.w #4,A7
0002DFA4 <AmiBlitz3.ab3@18680> RTS
0002DFA8 <AmiBlitz3.ab3@18685>   Dc.b $22,$2D,$00,$00                                     ;MOVE.L  $0000(A5),D1
0002DFAE <AmiBlitz3.ab3@18687>   Dc.b $23,$CD,$00,$00,$00,$00                             ;MOVE.L  A5,$00000000
0002DFB4 <AmiBlitz3.ab3@18689>   Dc.b $24,$7C,$00,$00,$00,$00                             ;MOVEA.L #$00000000,A2
0002DFBA <AmiBlitz3.ab3@18694>   MOVE.l stringbuffer,D1
0002DFBE <AmiBlitz3.ab3@18695> BRA.w makesize
0002DFC0 <AmiBlitz3.ab3@18698>   MOVEQ.l #$00,D1
0002DFC6 <AmiBlitz3.ab3@18699>   MOVE.w globalvarpointer,D1
0002DFCA <AmiBlitz3.ab3@18700>   SUBI.w #$8000,D1
0002DFCE <AmiBlitz3.ab3@18701>   BNE.w makesize
0002DFD0 <AmiBlitz3.ab3@18702>     MOVEQ.l #$08,D1
0002DFD2 <AmiBlitz3.ab3@18705>   MOVE.l D1,-(A7)
0002DFD6 <AmiBlitz3.ab3@18706>   MOVE.w #$203C,D1
0002DFDA <AmiBlitz3.ab3@18707>   BSR.w writeword
0002DFDC <AmiBlitz3.ab3@18708>   MOVE.l (A7)+,D1
0002DFE0 <AmiBlitz3.ab3@18709> BRA.w writelong
0002DFE2 <AmiBlitz3.ab3@18717>   MOVEQ.l #$00,D1
0002DFE8 <AmiBlitz3.ab3@18718>   MOVEA.l libpointer,A1
0002DFEC <AmiBlitz3.ab3@18721>     CMPA.w #$0,A1
0002DFF0 <AmiBlitz3.ab3@18722>     BEQ.w findhilib__done
0002DFF4 <AmiBlitz3.ab3@18723>       CMP.w $4(A1),D7
0002DFF8 <AmiBlitz3.ab3@18724>       BLS.w findhilib__next
0002DFFC <AmiBlitz3.ab3@18725>         CMP.w $4(A1),D1
0002E000 <AmiBlitz3.ab3@18726>         BCC.w findhilib__next
0002E004 <AmiBlitz3.ab3@18727>           MOVE.w $4(A1),D1
0002E006 <AmiBlitz3.ab3@18728>           MOVEA.l A1,A2
0002E008 <AmiBlitz3.ab3@18731>     MOVEA.l (A1),A1
0002E00C <AmiBlitz3.ab3@18732> BRA.w findhilib__loop
0002E00E <AmiBlitz3.ab3@18735>   MOVE.w D1,D7
0002E010 <AmiBlitz3.ab3@18736> RTS
0002E012 <AmiBlitz3.ab3@18744>   MOVEQ.l #-$01,D1
0002E018 <AmiBlitz3.ab3@18745>   MOVEA.l libpointer,A1
0002E01C <AmiBlitz3.ab3@18748>     CMPA.w #$0,A1
0002E020 <AmiBlitz3.ab3@18749>      BEQ.w findlolib__done
0002E024 <AmiBlitz3.ab3@18750>     CMP.w $4(A1),D7
0002E028 <AmiBlitz3.ab3@18751>      BCC.w findlolib__next
0002E02C <AmiBlitz3.ab3@18752>     CMP.w $4(A1),D1
0002E030 <AmiBlitz3.ab3@18753>      BLS.w findlolib__next
0002E034 <AmiBlitz3.ab3@18754>     MOVE.w $4(A1),D1
0002E036 <AmiBlitz3.ab3@18755>     MOVEA.l A1,A2
0002E038 <AmiBlitz3.ab3@18758>     MOVEA.l (A1),A1
0002E03C <AmiBlitz3.ab3@18759> BRA.w findlolib__loop
0002E03E <AmiBlitz3.ab3@18762>   MOVE.w D1,D7
0002E042 <AmiBlitz3.ab3@18763>   CMP.w #-$1,D1
0002E044 <AmiBlitz3.ab3@18764> RTS
0002E04A <AmiBlitz3.ab3@18768>   ADDQ.w #1,globalvarpointer
0002E052 <AmiBlitz3.ab3@18769>   BCLR #$0,globalvarpointer+1
0002E054 <AmiBlitz3.ab3@18770>   MOVEQ.l #$00,D7
0002E058 <AmiBlitz3.ab3@18773>     BSR.w findlolib
0002E05C <AmiBlitz3.ab3@18774>     BEQ.w JL_0_BA74
0002E060 <AmiBlitz3.ab3@18775>     TST.w $C(A2)
0002E064 <AmiBlitz3.ab3@18776>     BPL.w JL_0_B99A
0002E066 <AmiBlitz3.ab3@18777>     MOVEA.l A2,A1
0002E06A <AmiBlitz3.ab3@18778>     ADDA.l $12(A1),A1
0002E06E <AmiBlitz3.ab3@18779>     TST.w -$2(A1)
0002E072 <AmiBlitz3.ab3@18780>     BEQ.w JL_0_BA34
0002E076 <AmiBlitz3.ab3@18781>     MOVE.l -$A(A1),D1
0002E07A <AmiBlitz3.ab3@18782>     LEA $6(A2,D1.L),A3
0002E07C <AmiBlitz3.ab3@18785>       TST.w (A3)+
0002E080 <AmiBlitz3.ab3@18786>       BEQ.w JL_0_B9CC
0002E082 <AmiBlitz3.ab3@18787>         ADDQ.w #2,A3
0002E086 <AmiBlitz3.ab3@18788> BRA.w JL_0_B9C0
0002E08A <AmiBlitz3.ab3@18791>     TST.l $4(A3)
0002E08E <AmiBlitz3.ab3@18792>     BEQ.w JL_0_BA34
0002E092 <AmiBlitz3.ab3@18793>       MOVE.w freemax(PC),D1
0002E096 <AmiBlitz3.ab3@18794>       BSR.w writeword
0002E09A <AmiBlitz3.ab3@18795>       MOVE.w -$4(A1),D1
0002E09E <AmiBlitz3.ab3@18796>       BSR.w writeword
0002E0A4 <AmiBlitz3.ab3@18797>       MOVE.l free,D1
0002E0A8 <AmiBlitz3.ab3@18798>       MOVE.w -$6(A1),D1
0002E0AC <AmiBlitz3.ab3@18799>       BSR.w writelong
0002E0B2 <AmiBlitz3.ab3@18800>       MOVE.l destpointer,-(A7)
0002E0B4 <AmiBlitz3.ab3@18801>       MOVEQ.l #$01,D1
0002E0B8 <AmiBlitz3.ab3@18802>       MOVE.w -$2(A1),D2
0002E0BA <AmiBlitz3.ab3@18803>       LSL.w D2,D1
0002E0BC <AmiBlitz3.ab3@18804>       MOVE.w D1,-(A7)
0002E0C0 <AmiBlitz3.ab3@18805>       MOVE.l -$A(A1),D1
0002E0C4 <AmiBlitz3.ab3@18806>       BSR.w Amakelibsub
0002E0C8 <AmiBlitz3.ab3@18807>       MOVE.w freemax3(PC),D1
0002E0CC <AmiBlitz3.ab3@18808>       BSR.w writeword
0002E0CE <AmiBlitz3.ab3@18809>       MOVE.w (A7)+,D1
0002E0D2 <AmiBlitz3.ab3@18810>       BSR.w writeword
0002E0D6 <AmiBlitz3.ab3@18811>       MOVE.l freemax2(PC),D1
0002E0DA <AmiBlitz3.ab3@18812>       BSR.w writelong
0002E0DC <AmiBlitz3.ab3@18813>       MOVE.l (A7)+,D1
0002E0E2 <AmiBlitz3.ab3@18814>       SUB.l destpointer,D1
0002E0E6 <AmiBlitz3.ab3@18815>       BSR.w writeword
0002E0EA <AmiBlitz3.ab3@18816>       MOVE.w freemax4(PC),D1
0002E0EE <AmiBlitz3.ab3@18817>       BSR.w writeword
0002E0F2 <AmiBlitz3.ab3@18820>     MOVE.l $1C(A2),D1
0002E0F6 <AmiBlitz3.ab3@18821>     BEQ.w JL_0_B99A
0002E0FA <AmiBlitz3.ab3@18823>     MOVE.w $4(A2),D1
0002E0FE <AmiBlitz3.ab3@18824>     CMP.w #-$2,D1
0002E102 <AmiBlitz3.ab3@18825>     BNE.w JL_0_BA50
0002E106 <AmiBlitz3.ab3@18826>       BSR.w makevsize
0002E10A <AmiBlitz3.ab3@18827> BRA.w JL_0_BA60
0002E10E <AmiBlitz3.ab3@18830>     CMP.w #-$12D,D1
0002E112 <AmiBlitz3.ab3@18831>     BNE.w JL_0_BA60
0002E116 <AmiBlitz3.ab3@18832>       BSR.w makessize
0002E11A <AmiBlitz3.ab3@18833> BRA.w JL_0_BA60
0002E11E <AmiBlitz3.ab3@18836>     MOVE.l $1C(A2),D1
0002E126 <AmiBlitz3.ab3@18837>     MOVE.w #$FFFF,lasta6
0002E12A <AmiBlitz3.ab3@18838>     BSR.w Amakelibsub
0002E12E <AmiBlitz3.ab3@18839> BRA.w JL_0_B99A
0002E130 <AmiBlitz3.ab3@18842> RTS
0002E134 <AmiBlitz3.ab3@18846> freemax:   Dc.b $3F,$3C,$00,$00                            ;MOVE.W  #$0000,-(A7)
0002E136 <AmiBlitz3.ab3@18848> freemax2:  Dc.b $53,$57                                    ;SUBQ.W  #1,(A7)
0002E13A <AmiBlitz3.ab3@18849>            Dc.b $66,$00,$FF,$FC                            ;BNE.W freemax2
0002E13C <AmiBlitz3.ab3@18850> freemax4:  Dc.b $54,$4F                                    ;ADDQ.W  #2,A7
0002E140 <AmiBlitz3.ab3@18851> freemax3:  Dc.b $47,$EB,$00,$00                            ;LEA $0000(A3),A3
0002E146 <AmiBlitz3.ab3@18856>   TST.b debugmode
0002E14A <AmiBlitz3.ab3@18857>    BEQ.b chkstak__skip
0002E150 <AmiBlitz3.ab3@18858>   TST.w debugversion
0002E154 <AmiBlitz3.ab3@18859>    BNE.b chkstak__skip
0002E158 <AmiBlitz3.ab3@18860>   MOVE.w #$C308,D1
0002E15C <AmiBlitz3.ab3@18861> BRA.w Atokejsr
0002E15E <AmiBlitz3.ab3@18864> RTS
0002E166 <AmiBlitz3.ab3@18868>   MOVE.w #$FFFF,lasta6
0002E16A <AmiBlitz3.ab3@18873>   MOVEM.l D0-d7/A0-a6,-(A7)
0002E172 <AmiBlitz3.ab3@18874>   MOVE.b #1,nostringopt
0002E178 <AmiBlitz3.ab3@18875>   JSR searchinstr
0002E17A <AmiBlitz3.ab3@18876>   MOVE.l A3,D1
0002E17C <AmiBlitz3.ab3@18877>   SUB.l A2,D1
0002E180 <AmiBlitz3.ab3@18878>   BSR.w Amakelibsub
0002E184 <AmiBlitz3.ab3@18879>   MOVEM.l (A7)+,d0-d7/a0-a6
0002E186 <AmiBlitz3.ab3@18880> RTS
0002E18C <AmiBlitz3.ab3@18887>   MOVE.l libisat,-(A7)                                   ;library write
0002E192 <AmiBlitz3.ab3@18888>   MOVE.l A2,libisat
0002E194 <AmiBlitz3.ab3@18890>   MOVEA.l A1,A2
0002E196 <AmiBlitz3.ab3@18891>   MOVE.w (A2)+,D1
0002E19C <AmiBlitz3.ab3@18892>   MOVE.l a2,lastinstructionaddr
0002E1A0 <AmiBlitz3.ab3@18893>   ANDI.w #$FF,D1
0002E1A2 <AmiBlitz3.ab3@18894>   ADDA.w D1,A2
0002E1A4 <AmiBlitz3.ab3@18895>   EXG.l D0,A2
0002E1A6 <AmiBlitz3.ab3@18896>   ADDQ.l #1,D0
0002E1AA <AmiBlitz3.ab3@18897>   BCLR #$0,D0
0002E1AC <AmiBlitz3.ab3@18898>   EXG.l D0,A2
0002E1B0 <AmiBlitz3.ab3@18899> BRA.w JL_0_BB08
0002E1B6 <AmiBlitz3.ab3@18903>   MOVE.l libisat,-(A7)
0002E1BC <AmiBlitz3.ab3@18904>   MOVE.l A2,libisat
0002E1BE <AmiBlitz3.ab3@18905>   MOVEA.l A3,A2
0002E1C2 <AmiBlitz3.ab3@18906> BRA.w JL_0_BB08
0002E1C4 <AmiBlitz3.ab3@18910>   MOVE.l a1,-(a7)
0002E1C6 <AmiBlitz3.ab3@18913>   MOVE.l d0,a0
0002E1CA <AmiBlitz3.ab3@18914>   MOVE.l $a(a0),d0
0002E1CC <AmiBlitz3.ab3@18915>   MOVE.l d0,a1
0002E1D4 <AmiBlitz3.ab3@18916>   CMP.l #8,4(a1)
0002E1D8 <AmiBlitz3.ab3@18917>   BLE 'norec
0002E1DA <AmiBlitz3.ab3@18918>   MOVE.l a0,-(a7)
0002E1E0 <AmiBlitz3.ab3@18919>   MOVE.l typebase,-(a7)
0002E1E2 <AmiBlitz3.ab3@18920>   MOVEQ #0,d0
0002E1E6 <AmiBlitz3.ab3@18921>   MOVE.w 4(a0),d0
0002E1EC <AmiBlitz3.ab3@18922>   ADD.l d0,typebase
0002E1F0 <AmiBlitz3.ab3@18923>   MOVE.l $4(a1),d0
0002E1F4 <AmiBlitz3.ab3@18924>   BSR scantype
0002E1FA <AmiBlitz3.ab3@18925>   MOVE.l (a7)+,typebase
0002E1FC <AmiBlitz3.ab3@18926>   MOVE.l (a7)+,a0
0002E202 <AmiBlitz3.ab3@18929>   CMP.l #newtype_string,d0
0002E206 <AmiBlitz3.ab3@18930>   BNE 'nostring
0002E20C <AmiBlitz3.ab3@18931>   ADDQ #2,a2offset
0002E212 <AmiBlitz3.ab3@18932>   MOVE.l #$3f3c0000,d1
0002E214 <AmiBlitz3.ab3@18933>   MOVEQ #0,d0
0002E218 <AmiBlitz3.ab3@18934>   MOVE.w 4(a0),d0
0002E21E <AmiBlitz3.ab3@18935>   ADD.l typebase,d0
0002E220 <AmiBlitz3.ab3@18936>   MOVE.w d0,d1
0002E224 <AmiBlitz3.ab3@18937>   BSR writelong
0002E22A <AmiBlitz3.ab3@18938>   TST.b debugmode
0002E22E <AmiBlitz3.ab3@18939>   BEQ 'l1a
0002E230 <AmiBlitz3.ab3@18940>   MOVE.l d1,-(a7)
0002E236 <AmiBlitz3.ab3@18941>   MOVE.l #$c308,d1
0002E23C <AmiBlitz3.ab3@18942>   JSR Atokejsr
0002E23E <AmiBlitz3.ab3@18943>   MOVE.l (a7)+,d1
0002E242 <AmiBlitz3.ab3@18946>   TST.w 8(a0)
0002E246 <AmiBlitz3.ab3@18947>   BEQ 'nostring
0002E24A <AmiBlitz3.ab3@18948>   MOVEM.l d2/d3,-(a7)
0002E24C <AmiBlitz3.ab3@18949>   MOVE.l d1,d2
0002E24E <AmiBlitz3.ab3@18950>   MOVEQ #0,d3
0002E252 <AmiBlitz3.ab3@18951>   MOVE.w 8(a0),d3
0002E254 <AmiBlitz3.ab3@18952>   SUBQ.l #1,d3
0002E258 <AmiBlitz3.ab3@18953>   BEQ 'nostring2
0002E25A <AmiBlitz3.ab3@18956>   ADDQ.l #4,d2
0002E25C <AmiBlitz3.ab3@18957>   MOVE.l d2,d1
0002E260 <AmiBlitz3.ab3@18958>   BSR writelong
0002E266 <AmiBlitz3.ab3@18959>   TST.b debugmode
0002E26A <AmiBlitz3.ab3@18960>   BEQ 'l1
0002E270 <AmiBlitz3.ab3@18961>   MOVE.l #$c308,d1
0002E276 <AmiBlitz3.ab3@18962>   JSR Atokejsr
0002E27C <AmiBlitz3.ab3@18965>   ADDQ #2,a2offset
0002E27E <AmiBlitz3.ab3@18966>   SUBQ.l #1,d3
0002E282 <AmiBlitz3.ab3@18967>   BNE 'loop
0002E286 <AmiBlitz3.ab3@18970>   MOVEM.l (a7)+,d2/d3
0002E288 <AmiBlitz3.ab3@18973>   MOVE.l (a0),d0
0002E28C <AmiBlitz3.ab3@18974>   BNE 'more
0002E28E <AmiBlitz3.ab3@18975>   MOVE.l (a7)+,a1
0002E290 <AmiBlitz3.ab3@18976> RTS
0002E294 <AmiBlitz3.ab3@18979> libisat:   Ds.l 1
0002E29A <AmiBlitz3.ab3@18985>   MOVE.l libisat,-(A7)                                   
0002E2A0 <AmiBlitz3.ab3@18986>   MOVE.l A2,libisat
0002E2A4 <AmiBlitz3.ab3@18987>   LEA $6(A2,D1.L),A2
0002E2AC <AmiBlitz3.ab3@18991>   CMP.l #$3e19436c,$1c-8(a2)                               ;clear type
0002E2B0 <AmiBlitz3.ab3@18992>   BEQ 'dowritevar
0002E2B8 <AmiBlitz3.ab3@18993>   CMP.l #$3e18436f,$1c-8(a2)                               ;copy type
0002E2BC <AmiBlitz3.ab3@18994>   BEQ 'dowritevar
0002E2C4 <AmiBlitz3.ab3@18995>   CMP.l #$3e175265,$1c(a2)
0002E2C8 <AmiBlitz3.ab3@18996>   BEQ 'dowritevar
0002E2D0 <AmiBlitz3.ab3@18997>   CMP.l #$3e165772,$1c(a2)
0002E2D4 <AmiBlitz3.ab3@18998>   BNE 'nowritef
0002E2D8 <AmiBlitz3.ab3@19001>   MOVEM.l a0-a2/d2,-(a7)
0002E2DA <AmiBlitz3.ab3@19002>   MOVEQ #0,d1
0002E2E4 <AmiBlitz3.ab3@19003>   MOVE.l #0,typebase
0002E2E8 <AmiBlitz3.ab3@19004>   MOVE.l $a(a3),a0
0002E2EC <AmiBlitz3.ab3@19005>   MOVE.l $4(a0),d0
0002E2F2 <AmiBlitz3.ab3@19006>   CMP.l #8,d0
0002E2F6 <AmiBlitz3.ab3@19007>   BLE 'notype
0002E2FA <AmiBlitz3.ab3@19008>   BSR scantype
0002E300 <AmiBlitz3.ab3@19011>   MOVE.l #$3f3c0000,d1
0002E306 <AmiBlitz3.ab3@19012>   MOVE.w a2offset,d1
0002E30A <AmiBlitz3.ab3@19013>   BSR writelong
0002E310 <AmiBlitz3.ab3@19014>   MOVE.l #$3f3c0000,d1
0002E314 <AmiBlitz3.ab3@19015>   MOVE.l $a(a3),a0
0002E318 <AmiBlitz3.ab3@19016>   MOVE.w 8(a0),d1
0002E31C <AmiBlitz3.ab3@19017>   BSR writelong
0002E322 <AmiBlitz3.ab3@19018>   MOVE.l #$3f3cab12,d1
0002E326 <AmiBlitz3.ab3@19019>   BSR writelong
0002E32C <AmiBlitz3.ab3@19020>   ADDQ.w #6,a2offset
0002E330 <AmiBlitz3.ab3@19021>   MOVEM.l (a7)+,a0-a2/d2
0002E336 <AmiBlitz3.ab3@19024>   TST.b fpu
0002E33A <AmiBlitz3.ab3@19025>   BEQ 'nofpu2
0002E342 <AmiBlitz3.ab3@19026>   CMP.l #$496e7400,$1a(a2)
0002E346 <AmiBlitz3.ab3@19027>   BNE 'noint
0002E348 <AmiBlitz3.ab3@19028>   MOVEQ #0,d1
0002E34E <AmiBlitz3.ab3@19029>   SUBQ.l #8,destpointer                                    ;fpu int
0002E354 <AmiBlitz3.ab3@19030>   CLR.w a2offset
0002E358 <AmiBlitz3.ab3@19031>   CMP.b #2,d2
0002E35C <AmiBlitz3.ab3@19032>   BGT 'noword
0002E360 <AmiBlitz3.ab3@19033>   MOVE.w #$48c0,d1
0002E366 <AmiBlitz3.ab3@19034>   OR.w regnumstore,d1
0002E36A <AmiBlitz3.ab3@19035>   BSR writeword
0002E36E <AmiBlitz3.ab3@19036> BRA 'exit2
0002E372 <AmiBlitz3.ab3@19039>    CMP.b #3,d2
0002E376 <AmiBlitz3.ab3@19040>         BNE 'nolong
0002E37A <AmiBlitz3.ab3@19041> BRA 'exit2
0002E37E <AmiBlitz3.ab3@19044>    CMP.b #4,d2
0002E382 <AmiBlitz3.ab3@19045>         BNE 'noquick
0002E386 <AmiBlitz3.ab3@19046>         MOVE.w #$e080,d1
0002E38C <AmiBlitz3.ab3@19047>         OR.w regnumstore,d1
0002E390 <AmiBlitz3.ab3@19048>         BSR writeword
0002E394 <AmiBlitz3.ab3@19049>         MOVE.w #$e080,d1
0002E39A <AmiBlitz3.ab3@19050>         OR.w regnumstore,d1
0002E39E <AmiBlitz3.ab3@19051>         BSR writeword
0002E3A2 <AmiBlitz3.ab3@19052> BRA 'exit2
0002E3A4 <AmiBlitz3.ab3@19055>         MOVEQ #0,d0
0002E3A6 <AmiBlitz3.ab3@19056>         MOVEQ #0,d1
0002E3AC <AmiBlitz3.ab3@19057>         MOVE.w regnumstore,d0
0002E3AE <AmiBlitz3.ab3@19058>         ASL.l #7,d0
0002E3B4 <AmiBlitz3.ab3@19059>         OR.l #$f23c4428,d1                                 ;fsub.s 0.5,fpx
0002E3B6 <AmiBlitz3.ab3@19060>         OR.l d0,d1
0002E3BC <AmiBlitz3.ab3@19062>         MOVE.l #$3f000000,d1
0002E3BE <AmiBlitz3.ab3@19064>         MOVEQ #0,d0
0002E3C0 <AmiBlitz3.ab3@19065>         MOVEQ #0,d1
0002E3C6 <AmiBlitz3.ab3@19066>         MOVE.w regnumstore,d0
0002E3C8 <AmiBlitz3.ab3@19067>         ASL.l #7,d0
0002E3CA <AmiBlitz3.ab3@19068>         MOVE.l d0,d1
0002E3D0 <AmiBlitz3.ab3@19069>         OR.l #$f2000003,d1                                 ;fintrz fpx
0002E3D2 <AmiBlitz3.ab3@19070>         ASL.l #3,d0
0002E3D4 <AmiBlitz3.ab3@19071>         OR.l d0,d1
0002E3D8 <AmiBlitz3.ab3@19072>         BSR writelong
0002E3DA <AmiBlitz3.ab3@19073>         MOVEQ #0,d0
0002E3E0 <AmiBlitz3.ab3@19074>         MOVE.w regnumstore,d0
0002E3E2 <AmiBlitz3.ab3@19075>         ASL.l #7,d0
0002E3E8 <AmiBlitz3.ab3@19076>         MOVE.l #$f2006000,d1                               ;fmove.l fp0,d0
0002E3EA <AmiBlitz3.ab3@19077>         OR.l d0,d1
0002E3EC <AmiBlitz3.ab3@19078>         ASL.l #1,d0
0002E3EE <AmiBlitz3.ab3@19079>         ASL.l #8,d0
0002E3F0 <AmiBlitz3.ab3@19080>         OR.l d0,d1
0002E3F4 <AmiBlitz3.ab3@19081> BRA 'exit
0002E3FA <AmiBlitz3.ab3@19084>   CMP.w #$3c01,24(a2)
0002E3FE <AmiBlitz3.ab3@19085>   BNE 'noval
0002E400 <AmiBlitz3.ab3@19086>   MOVE.l a2,-(a7)
0002E404 <AmiBlitz3.ab3@19087>   BSR.w JL_0_BB14
0002E406 <AmiBlitz3.ab3@19088>   MOVE.l (a7)+,a2
0002E40A <AmiBlitz3.ab3@19089> BRA 'exit2
0002E412 <AmiBlitz3.ab3@19106>   CMP.l #$41627300,$1a(a2)
0002E416 <AmiBlitz3.ab3@19107>   BNE 'noabs
0002E418 <AmiBlitz3.ab3@19108>   MOVEQ #0,d1
0002E41E <AmiBlitz3.ab3@19109>   MOVE.w regnumstore,d1
0002E420 <AmiBlitz3.ab3@19110>   MOVE.w d1,d0
0002E422 <AmiBlitz3.ab3@19111>   ASL.w #7,d1
0002E424 <AmiBlitz3.ab3@19112>   ASL.w #8,d0
0002E426 <AmiBlitz3.ab3@19113>   ASL.w #2,d0
0002E428 <AmiBlitz3.ab3@19114>   OR.w d0,d1
0002E42E <AmiBlitz3.ab3@19115>   SUBQ.l #8,destpointer                                    ;fpu abs
0002E432 <AmiBlitz3.ab3@19116>   MOVEM.l d3/d1,-(a7)
0002E436 <AmiBlitz3.ab3@19117>   MOVE.w #5,d3
0002E438 <AmiBlitz3.ab3@19118>   EXG d2,d3
0002E43E <AmiBlitz3.ab3@19119>   MOVE.w regnum,-(a7)
0002E448 <AmiBlitz3.ab3@19120>   MOVE.w regnumstore,regnum
0002E44C <AmiBlitz3.ab3@19121>   BSR writeconvertcode
0002E452 <AmiBlitz3.ab3@19122>   MOVE.w (a7)+,regnum
0002E454 <AmiBlitz3.ab3@19123>   EXG d2,d3
0002E458 <AmiBlitz3.ab3@19124>   MOVEM.l (a7)+,d3/d1
0002E45E <AmiBlitz3.ab3@19125>   OR.l #$f2000018,d1
0002E464 <AmiBlitz3.ab3@19126>   CLR.w a2offset
0002E468 <AmiBlitz3.ab3@19127> BRA 'exit
0002E46C <AmiBlitz3.ab3@19130>   CMP.b #5,d2
0002E470 <AmiBlitz3.ab3@19131>   BNE 'nofpu2
0002E474 <AmiBlitz3.ab3@19132>   MOVE.b 24(a2),d0
0002E478 <AmiBlitz3.ab3@19133>   CMP.b #$60,d0                                            ;nolib $edxx
0002E47C <AmiBlitz3.ab3@19134>   BNE 'nofpu
0002E47E <AmiBlitz3.ab3@19135>   MOVEQ #0,d1
0002E484 <AmiBlitz3.ab3@19136>   MOVE.w regnumstore,d1
0002E486 <AmiBlitz3.ab3@19137>   MOVE.w d1,d0
0002E488 <AmiBlitz3.ab3@19138>   ASL.w #7,d1
0002E48A <AmiBlitz3.ab3@19139>   ASL.w #8,d0
0002E48C <AmiBlitz3.ab3@19140>   ASL.w #2,d0
0002E48E <AmiBlitz3.ab3@19141>   OR.w d0,d1
0002E492 <AmiBlitz3.ab3@19142>   MOVE.b 25(a2),d0
0002E496 <AmiBlitz3.ab3@19143>   CMP.b #5,d0
0002E49A <AmiBlitz3.ab3@19144>   BNE 'nocos
0002E4A0 <AmiBlitz3.ab3@19145>   OR.l #$f200001d,d1                                       ;fpu cos
0002E4A4 <AmiBlitz3.ab3@19146> BRA 'exit
0002E4A8 <AmiBlitz3.ab3@19149>   CMP.b #$c,d0
0002E4AC <AmiBlitz3.ab3@19150>   BNE 'nosqr
0002E4B2 <AmiBlitz3.ab3@19151>   OR.l #$f2000004,d1                                       ;fpu sqr
0002E4B6 <AmiBlitz3.ab3@19152> BRA 'exit
0002E4BA <AmiBlitz3.ab3@19155>   CMP.b #$d,d0
0002E4BE <AmiBlitz3.ab3@19156>   BNE 'notan
0002E4C4 <AmiBlitz3.ab3@19157>   OR.l #$f200000f,d1                                       ;fpu tan
0002E4C8 <AmiBlitz3.ab3@19158> BRA 'exit
0002E4CC <AmiBlitz3.ab3@19161>   CMP.b #$a,d0
0002E4D0 <AmiBlitz3.ab3@19162>   BNE 'nosin
0002E4D6 <AmiBlitz3.ab3@19163>   OR.l #$f200000e,d1                                       ;fpu sin
0002E4DA <AmiBlitz3.ab3@19164> BRA 'exit
0002E4DE <AmiBlitz3.ab3@19167>   CMP.b #$3,d0
0002E4E2 <AmiBlitz3.ab3@19168>   BNE 'noasin
0002E4E8 <AmiBlitz3.ab3@19169>   OR.l #$f200000c,d1                                       ;fpu asin
0002E4EC <AmiBlitz3.ab3@19170> BRA 'exit
0002E4F0 <AmiBlitz3.ab3@19173>   CMP.b #$2,d0
0002E4F4 <AmiBlitz3.ab3@19174>   BNE 'noacos
0002E4FA <AmiBlitz3.ab3@19175>   OR.l #$f200001c,d1                                       ;fpu acos
0002E4FE <AmiBlitz3.ab3@19176> BRA 'exit
0002E502 <AmiBlitz3.ab3@19179>   CMP.b #$4,d0
0002E506 <AmiBlitz3.ab3@19180>   BNE 'noatan
0002E50C <AmiBlitz3.ab3@19181>   OR.l #$f200000a,d1                                       ;fpu atan
0002E510 <AmiBlitz3.ab3@19182> BRA 'exit
0002E514 <AmiBlitz3.ab3@19185>   CMP.b #$e,d0
0002E518 <AmiBlitz3.ab3@19186>   BNE 'nohtan
0002E51E <AmiBlitz3.ab3@19187>   OR.l #$f2000009,d1                                       ;fpu htan
0002E522 <AmiBlitz3.ab3@19188> BRA 'exit
0002E526 <AmiBlitz3.ab3@19191>   CMP.b #$6,d0
0002E52A <AmiBlitz3.ab3@19192>   BNE 'nohcos
0002E530 <AmiBlitz3.ab3@19193>   OR.l #$f2000019,d1                                       ;fpu hcos
0002E534 <AmiBlitz3.ab3@19194> BRA 'exit
0002E538 <AmiBlitz3.ab3@19197>   CMP.b #$b,d0
0002E53C <AmiBlitz3.ab3@19198>   BNE 'nohsin
0002E542 <AmiBlitz3.ab3@19199>   OR.l #$f2000002,d1                                       ;fpu hsin
0002E546 <AmiBlitz3.ab3@19200> BRA 'exit
0002E54A <AmiBlitz3.ab3@19203>   CMP.b #$9,d0
0002E54E <AmiBlitz3.ab3@19204>   BNE 'nolog
0002E554 <AmiBlitz3.ab3@19205>   OR.l #$f2000014,d1                                       ;fpu log
0002E558 <AmiBlitz3.ab3@19206> BRA 'exit
0002E55C <AmiBlitz3.ab3@19209>   CMP.b #$8,d0
0002E560 <AmiBlitz3.ab3@19210>   BNE 'nolog10
0002E566 <AmiBlitz3.ab3@19211>   OR.l #$f2000015,d1                                       ;fpu log10
0002E56A <AmiBlitz3.ab3@19212> BRA 'exit
0002E56E <AmiBlitz3.ab3@19215>   CMP.b #$7,d0
0002E572 <AmiBlitz3.ab3@19216>   BNE 'noexp
0002E578 <AmiBlitz3.ab3@19217>   OR.l #$f2000010,d1                                       ;fpu exp
0002E57C <AmiBlitz3.ab3@19218> BRA 'exit
0002E582 <AmiBlitz3.ab3@19221>   LEA fpuerr,a0
0002E584 <AmiBlitz3.ab3@19222>   MOVE.l a0,-(a7)
0002E58A <AmiBlitz3.ab3@19223> JMP handle_compileerror
0002E58E <AmiBlitz3.ab3@19227>   CMP.b #$3c,d0
0002E592 <AmiBlitz3.ab3@19228>   BNE 'nofpu2
0002E594 <AmiBlitz3.ab3@19229>   MOVEQ #0,d1
0002E59A <AmiBlitz3.ab3@19230>       MOVE.w regnumstore,d1
0002E59C <AmiBlitz3.ab3@19231>       MOVE.w d1,d0
0002E59E <AmiBlitz3.ab3@19232>       ASL.w #7,d1
0002E5A0 <AmiBlitz3.ab3@19233>       ASL.w #8,d0
0002E5A2 <AmiBlitz3.ab3@19234>       ASL.w #2,d0
0002E5A4 <AmiBlitz3.ab3@19235>       OR.w d0,d1
0002E5AA <AmiBlitz3.ab3@19236>       CMP.b #$03,25(a2)
0002E5AE <AmiBlitz3.ab3@19237>       BNE 'nosgn
0002E5B4 <AmiBlitz3.ab3@19240>       SUBQ.l #8,destpointer                                ;fpu sgn
0002E5BA <AmiBlitz3.ab3@19241>         OR.l #$f200003a,d1
0002E5BE <AmiBlitz3.ab3@19242>         BSR writelong
0002E5C4 <AmiBlitz3.ab3@19243>         CLR.w a2offset
0002E5CA <AmiBlitz3.ab3@19244>          MOVE.l #$F28E0006,d1
0002E5CE <AmiBlitz3.ab3@19245>          BSR writelong
0002E5D4 <AmiBlitz3.ab3@19246>   MOVE.l #$7000600a,d1
0002E5D8 <AmiBlitz3.ab3@19247>   BSR writelong
0002E5DE <AmiBlitz3.ab3@19248>   MOVE.l #$70014840,d1
0002E5E2 <AmiBlitz3.ab3@19249>   BSR writelong
0002E5E8 <AmiBlitz3.ab3@19250>   MOVE.l #$F292,d1
0002E5EC <AmiBlitz3.ab3@19251>   BSR writeword
0002E5F2 <AmiBlitz3.ab3@19252>   MOVE.l #$000470FF,d1
0002E5F6 <AmiBlitz3.ab3@19253> BRA 'exit
0002E5FE <AmiBlitz3.ab3@19256>   CMP.l #"Frac",$1a(a2)
0002E602 <AmiBlitz3.ab3@19257>   BNE 'nofrac
0002E608 <AmiBlitz3.ab3@19258> JMP notwork
0002E60C <AmiBlitz3.ab3@19299> BRA 'exit
0002E610 <AmiBlitz3.ab3@19303>   BSR.w JL_0_BB14                                          ;write lib code
0002E616 <AmiBlitz3.ab3@19304>   MOVE.l (A7)+,libisat
0002E618 <AmiBlitz3.ab3@19305> RTS
0002E61C <AmiBlitz3.ab3@19308>   BSR writelong
0002E622 <AmiBlitz3.ab3@19311>   MOVE.l (A7)+,libisat
0002E624 <AmiBlitz3.ab3@19312> RTS
0002E628 <AmiBlitz3.ab3@19316>   BSR.w fetchregs
0002E62E <AmiBlitz3.ab3@19317>   TST.b debugmode
0002E632 <AmiBlitz3.ab3@19318>    BEQ.w JL_0_BB76
0002E634 <AmiBlitz3.ab3@19319>   MOVE.l (A2),D1
0002E638 <AmiBlitz3.ab3@19320>   OR.l $8(A2),D1
0002E63C <AmiBlitz3.ab3@19321>   BCLR #$0,D1
0002E63E <AmiBlitz3.ab3@19322>   TST.l D1
0002E642 <AmiBlitz3.ab3@19323>    BEQ.w JL_0_BB76
0002E644 <AmiBlitz3.ab3@19324>   MOVE.l (A2)+,D1
0002E648 <AmiBlitz3.ab3@19325>   BTST #$0,D1
0002E64C <AmiBlitz3.ab3@19326>    BEQ.w JL_0_BB60
0002E652 <AmiBlitz3.ab3@19327>   TST.w blitzmode
0002E656 <AmiBlitz3.ab3@19328>    BPL.w blitzerr
0002E65C <AmiBlitz3.ab3@19329>   TST.b debugmode
0002E660 <AmiBlitz3.ab3@19330>    BEQ.w JL_0_BB5C
0002E662 <AmiBlitz3.ab3@19331>   MOVE.l D1,-(A7)
0002E666 <AmiBlitz3.ab3@19332>   MOVE.w #$C311,D1
0002E66A <AmiBlitz3.ab3@19333>    BSR.w makebtst
0002E66C <AmiBlitz3.ab3@19334>   MOVE.l (A7)+,D1
0002E670 <AmiBlitz3.ab3@19337>   BCLR #$0,D1
0002E672 <AmiBlitz3.ab3@19340>   TST.l D1
0002E676 <AmiBlitz3.ab3@19341>    BSR.w JL_0_BBC6
0002E678 <AmiBlitz3.ab3@19342>   MOVE.l (A2)+,D1
0002E67C <AmiBlitz3.ab3@19343>    BSR.w JL_0_BB98
0002E67E <AmiBlitz3.ab3@19344>   MOVE.l (A2)+,D1
0002E682 <AmiBlitz3.ab3@19345>    BSR.w JL_0_BBC6
0002E686 <AmiBlitz3.ab3@19346> BRA.w JL_0_BB90
0002E68C <AmiBlitz3.ab3@19349>   BTST #$0,$3(A2)
0002E690 <AmiBlitz3.ab3@19350>    BEQ.w JL_0_BB88
0002E694 <AmiBlitz3.ab3@19351>   MOVE.w blitzmode(PC),D1
0002E698 <AmiBlitz3.ab3@19352>    BPL.w blitzerr
0002E69C <AmiBlitz3.ab3@19355>   MOVE.l $4(A2),D1
0002E6A0 <AmiBlitz3.ab3@19356>    BSR.w JL_0_BB98
0002E6A6 <AmiBlitz3.ab3@19359>   MOVEA.l libisat,A2
0002E6A8 <AmiBlitz3.ab3@19360> RTS
0002E6AC <AmiBlitz3.ab3@19363>   BTST #$0,D1
0002E6B0 <AmiBlitz3.ab3@19364>    BEQ.w JL_0_BBC4
0002E6B6 <AmiBlitz3.ab3@19365>   TST.w blitzmode
0002E6BA <AmiBlitz3.ab3@19366>    BMI.w amigaerr
0002E6C0 <AmiBlitz3.ab3@19367>   TST.b debugmode
0002E6C4 <AmiBlitz3.ab3@19368>    BEQ.w JL_0_BBC0
0002E6C6 <AmiBlitz3.ab3@19369>   MOVE.l D1,-(A7)
0002E6CA <AmiBlitz3.ab3@19370>   MOVE.w #$C312,D1
0002E6CE <AmiBlitz3.ab3@19371>    BSR.w makebtst
0002E6D0 <AmiBlitz3.ab3@19372>   MOVE.l (A7)+,D1
0002E6D4 <AmiBlitz3.ab3@19375>   BCLR #$0,D1
0002E6D6 <AmiBlitz3.ab3@19378>   TST.l D1
0002E6DA <AmiBlitz3.ab3@19381>    BEQ.w JL_0_BBD2
0002E6DC <AmiBlitz3.ab3@19382>   MOVE.l A1,-(A7)
0002E6E0 <AmiBlitz3.ab3@19383>    BSR.w JL_0_BBD4
0002E6E2 <AmiBlitz3.ab3@19384>   MOVEA.l (A7)+,A1
0002E6E4 <AmiBlitz3.ab3@19387> RTS
0002E6EA <AmiBlitz3.ab3@19390>   MOVEA.l libisat,A0
0002E6F0 <AmiBlitz3.ab3@19391>   TST.w cfetchmode
0002E6F4 <AmiBlitz3.ab3@19392>    BEQ.w JL_0_BBF6
0002E6F6 <AmiBlitz3.ab3@19393>   ADD.l A0,D1
0002E6F8 <AmiBlitz3.ab3@19394>   MOVE.l D1,-(A7)
0002E6FC <AmiBlitz3.ab3@19395>   MOVE.w #$4EB9,D1
0002E700 <AmiBlitz3.ab3@19396>    BSR.w writeword
0002E702 <AmiBlitz3.ab3@19397>   MOVE.l (A7)+,D1
0002E706 <AmiBlitz3.ab3@19398> BRA.w writelong
0002E70A <AmiBlitz3.ab3@19401>   LEA $0(A0,D1.L),A1
0002E710 <AmiBlitz3.ab3@19402>   CLR.w inline
0002E714 <AmiBlitz3.ab3@19405>   CMPI.b #$A0,(A1)+
0002E718 <AmiBlitz3.ab3@19406>    BNE.w JL_0_BC68
0002E71A <AmiBlitz3.ab3@19407>   TST.b (A1)+
0002E71E <AmiBlitz3.ab3@19408>    BEQ.w JL_0_BC18
0002E724 <AmiBlitz3.ab3@19409>   CMPI.b #$1,-$1(A1)
0002E728 <AmiBlitz3.ab3@19410>    BEQ.w JL_0_BC24
0002E72E <AmiBlitz3.ab3@19413>   MOVE.w (A1)+,inline
0002E730 <AmiBlitz3.ab3@19414>   ADDQ.l #4,D1
0002E734 <AmiBlitz3.ab3@19415> BRA.w JL_0_BC00
0002E73A <AmiBlitz3.ab3@19418>   TST.w blitzmode
0002E73E <AmiBlitz3.ab3@19419>    BPL.w JL_0_BC4A
0002E744 <AmiBlitz3.ab3@19420>   TST.b debugmode
0002E748 <AmiBlitz3.ab3@19421>    BEQ.w JL_0_BC40
0002E74C <AmiBlitz3.ab3@19422>   MOVE.w #$C311,D1
0002E750 <AmiBlitz3.ab3@19423>    BSR.w makebtst
0002E752 <AmiBlitz3.ab3@19426>   MOVE.l (A1)+,D1
0002E756 <AmiBlitz3.ab3@19427>   LEA $0(A0,D1.L),A1
0002E75A <AmiBlitz3.ab3@19428> BRA.w JL_0_BC00
0002E760 <AmiBlitz3.ab3@19431>   TST.b debugmode
0002E764 <AmiBlitz3.ab3@19432>    BEQ.w JL_0_BC60
0002E766 <AmiBlitz3.ab3@19433>   MOVE.l D1,-(A7)
0002E76A <AmiBlitz3.ab3@19434>   MOVE.w #$C312,D1
0002E76E <AmiBlitz3.ab3@19435>    BSR.w makebtst
0002E770 <AmiBlitz3.ab3@19436>   MOVE.l (A7)+,D1
0002E772 <AmiBlitz3.ab3@19439>   ADDQ.w #4,A1
0002E774 <AmiBlitz3.ab3@19440>   ADDQ.l #6,D1
0002E778 <AmiBlitz3.ab3@19441> BRA.w JL_0_BC00
0002E77E <AmiBlitz3.ab3@19444>   TST.w inline
0002E782 <AmiBlitz3.ab3@19445>    BEQ.w JL_0_BC7E
0002E784 <AmiBlitz3.ab3@19446>   SUBQ.w #1,A1
0002E786 <AmiBlitz3.ab3@19447>   MOVEA.l A1,A0
0002E78A <AmiBlitz3.ab3@19448>   ADDA.w inline(PC),A1
0002E78E <AmiBlitz3.ab3@19449> BRA.w pokecode2
0002E792 <AmiBlitz3.ab3@19452>   MOVEM.l a0/D1,-(A7)
0002E798 <AmiBlitz3.ab3@19453>   TST.w debugversion
0002E79C <AmiBlitz3.ab3@19454>   BEQ 'l11
0002E7A4 <AmiBlitz3.ab3@19455>   BTST #$7,link_debuginfo
0002E7A8 <AmiBlitz3.ab3@19456>   BEQ.w 'l11
0002E7AE <AmiBlitz3.ab3@19457>   MOVE.l lastinstruction,d1
0002E7B2 <AmiBlitz3.ab3@19458>   BEQ 'l11
0002E7B8 <AmiBlitz3.ab3@19459>   CLR.l lastinstruction
0002E7BE <AmiBlitz3.ab3@19460>   CMP.l #$e000,d1
0002E7C2 <AmiBlitz3.ab3@19461>   BGE 'ln99
0002E7C8 <AmiBlitz3.ab3@19462>   LEA notf,a0
0002E7CE <AmiBlitz3.ab3@19463>   CMP.l #$c601,d1
0002E7D2 <AmiBlitz3.ab3@19464>   BNE 'ln1
0002E7D8 <AmiBlitz3.ab3@19465>   LEA strcpy,a0
0002E7DC <AmiBlitz3.ab3@19466> BRA 'ln3
0002E7E2 <AmiBlitz3.ab3@19469>   CMP.l #$c700,d1
0002E7E6 <AmiBlitz3.ab3@19470>   BNE 'ln2
0002E7EC <AmiBlitz3.ab3@19471>   LEA strvar,a0
0002E7F0 <AmiBlitz3.ab3@19472> BRA 'ln3
0002E7F6 <AmiBlitz3.ab3@19475>   CMP.l #$ce00,d1
0002E7FA <AmiBlitz3.ab3@19476>   BNE 'ln4
0002E800 <AmiBlitz3.ab3@19477>   LEA strcmp,a0
0002E804 <AmiBlitz3.ab3@19478> BRA 'ln3
0002E80A <AmiBlitz3.ab3@19481>   CMP.l #$ca00,d1
0002E80E <AmiBlitz3.ab3@19482>   BNE 'ln5
0002E814 <AmiBlitz3.ab3@19483>   LEA qmul,a0
0002E818 <AmiBlitz3.ab3@19484> BRA 'ln3
0002E81E <AmiBlitz3.ab3@19487>   CMP.l #$d000,d1
0002E822 <AmiBlitz3.ab3@19488>      BNE 'ln6
0002E828 <AmiBlitz3.ab3@19489>      LEA _MaxLen,a0
0002E82C <AmiBlitz3.ab3@19490> BRA 'ln3
0002E832 <AmiBlitz3.ab3@19493>   CMP.l #$cb00,d1
0002E836 <AmiBlitz3.ab3@19494>   BNE 'ln3
0002E83C <AmiBlitz3.ab3@19495>   LEA qdiv,a0
0002E840 <AmiBlitz3.ab3@19496> BRA 'ln3
0002E842 <AmiBlitz3.ab3@19499>   MOVE.l d1,a0
0002E846 <AmiBlitz3.ab3@19500>   LEA $8(a0),a0
0002E84A <AmiBlitz3.ab3@19503>   CMP.w #$ffff,(a0)+
0002E84E <AmiBlitz3.ab3@19504>   BNE 'l1
0002E852 <AmiBlitz3.ab3@19505>   LEA 6(a0),a0
0002E856 <AmiBlitz3.ab3@19508>   MOVEM.l a1/a2/d7/d2,-(a7)
0002E858 <AmiBlitz3.ab3@19509>   MOVEQ #0,d2
0002E85E <AmiBlitz3.ab3@19510>   LEA ptr_parameterstore,a1
0002E860 <AmiBlitz3.ab3@19513>   ADDQ.l #1,d2
0002E862 <AmiBlitz3.ab3@19514>   MOVE.b (a0)+,d0
0002E866 <AmiBlitz3.ab3@19515> 
0002E86A <AmiBlitz3.ab3@19516>   BNE 'nodollar
0002E86E <AmiBlitz3.ab3@19517>   MOVE.b #"S",d0
0002E872 <AmiBlitz3.ab3@19519>   CMP.b #"?",d0
0002E876 <AmiBlitz3.ab3@19520>   BEQ 'nolabelwrite
0002E878 <AmiBlitz3.ab3@19521>   MOVE.b d0,(a1)+
0002E87C <AmiBlitz3.ab3@19522>   BNE 'l2
0002E882 <AmiBlitz3.ab3@19523>   MOVE.w #"__",-1(a1)
0002E884 <AmiBlitz3.ab3@19524>   ADDQ.l #2,d2
0002E888 <AmiBlitz3.ab3@19525>   CLR.b 1(a1)
0002E88E <AmiBlitz3.ab3@19526>   JSR findlabel2
0002E892 <AmiBlitz3.ab3@19527>   BEQ 'l3
0002E898 <AmiBlitz3.ab3@19528>   JSR addlabelhash
0002E89C <AmiBlitz3.ab3@19531>   CLR.l 4(a2)
0002E8A0 <AmiBlitz3.ab3@19532>   MOVE.l $14(a7),a0
0002E8A4 <AmiBlitz3.ab3@19533>   MOVE.l $10(a7),d1
0002E8A8 <AmiBlitz3.ab3@19534>   SUB.l $12(a0),d1
0002E8AC <AmiBlitz3.ab3@19535>   ADD.l $28(a0),d1
0002E8B0 <AmiBlitz3.ab3@19536>   MOVE.l d1,8(a2)
0002E8B4 <AmiBlitz3.ab3@19537> 'nolabelwrite MOVEM.l (a7)+,a1/a2/d7/d2
0002E8BA <AmiBlitz3.ab3@19540>   TST.b typecheck
0002E8BE <AmiBlitz3.ab3@19541>   BEQ 'p1
0002E8C4 <AmiBlitz3.ab3@19542>   MOVE.l lasttoken,d1
0002E8CA <AmiBlitz3.ab3@19543>   CMP.l #$da01,d1                                          ;poke
0002E8CE <AmiBlitz3.ab3@19544>   BEQ 'lp1
0002E8D4 <AmiBlitz3.ab3@19545>   CMP.l #$da02,d1                                          ;peek
0002E8D8 <AmiBlitz3.ab3@19546>   BNE 'p1
0002E8DE <AmiBlitz3.ab3@19549>   TST.b peekaddrsize
0002E8E2 <AmiBlitz3.ab3@19550>   BEQ 'p1
0002E8EA <AmiBlitz3.ab3@19551>   CMP.b #3,peekaddrsize
0002E8EE <AmiBlitz3.ab3@19552>   BNE errormsg_onlylong
0002E8F4 <AmiBlitz3.ab3@19553>   CLR.b peekaddrsize
0002E8FA <AmiBlitz3.ab3@19561>    TST.b fpu
0002E8FE <AmiBlitz3.ab3@19562>   BNE 'optf
0002E904 <AmiBlitz3.ab3@19563>   TST.b fast
0002E908 <AmiBlitz3.ab3@19564>   BEQ JL11a2
0002E910 <AmiBlitz3.ab3@19571>   CMP.l #"Poke",20(a2)                                     ;poke
0002E914 <AmiBlitz3.ab3@19572>   BNE peekopt
0002E918 <AmiBlitz3.ab3@19573>   TST.b 24(a2)
0002E91C <AmiBlitz3.ab3@19574>   BNE peekopt
0002E920 <AmiBlitz3.ab3@19575>   CMP.b #3,d2
0002E924 <AmiBlitz3.ab3@19576>   BNE 'lw1
0002E92A <AmiBlitz3.ab3@19579>   MOVE.l #$21821990,d1
0002E92E <AmiBlitz3.ab3@19580> BRA.s 'lpx
0002E932 <AmiBlitz3.ab3@19583>   CMP.b #2,d2
0002E936 <AmiBlitz3.ab3@19584>   BNE 'lb1
0002E93C <AmiBlitz3.ab3@19585>   MOVE.l #$31821990,d1
0002E940 <AmiBlitz3.ab3@19586> BRA.s 'lpx
0002E944 <AmiBlitz3.ab3@19589>   CMP.b #1,d2
0002E948 <AmiBlitz3.ab3@19590>   BNE 'lp3
0002E94E <AmiBlitz3.ab3@19591>   MOVE.l #$11821990,d1
0002E952 <AmiBlitz3.ab3@19592> BRA.s 'lpx
0002E956 <AmiBlitz3.ab3@19595>   CMP.b #5,d2
0002E95A <AmiBlitz3.ab3@19596>     BNE JL11a2
0002E960 <AmiBlitz3.ab3@19597>     TST.b fpu
0002E964 <AmiBlitz3.ab3@19598>     BEQ 'll1
0002E96A <AmiBlitz3.ab3@19599>      MOVE.l destpointer,a4
0002E972 <AmiBlitz3.ab3@19600>     CMP.l #$f22d4500,-6(a4)
0002E976 <AmiBlitz3.ab3@19601>     BNE 'noglob
0002E97C <AmiBlitz3.ab3@19602>     TST.b doublepeek
0002E980 <AmiBlitz3.ab3@19603>     BNE 'noglob
0002E986 <AmiBlitz3.ab3@19604>     MOVE.w -2(a4),-4(a4)
0002E98C <AmiBlitz3.ab3@19605>     MOVE.w #$21ad,-6(a4)
0002E992 <AmiBlitz3.ab3@19606>     MOVE.w #$1990,-2(a4)
0002E99A <AmiBlitz3.ab3@19607>     MOVE.w #9,peeksize
0002E99C <AmiBlitz3.ab3@19608>     ADDQ #8,a7
0002E99E <AmiBlitz3.ab3@19609> RTS
0002E9A6 <AmiBlitz3.ab3@19612>     CMP.l #$f22c4500,-6(a4)
0002E9AA <AmiBlitz3.ab3@19613>     BNE 'nolocal
0002E9B0 <AmiBlitz3.ab3@19614>     MOVE.w -2(a4),-4(a4)
0002E9B6 <AmiBlitz3.ab3@19615>     TST.b doublepeek                                       ;dont move longfix on double floats
0002E9BA <AmiBlitz3.ab3@19616>     BNE 'nolocal
0002E9C0 <AmiBlitz3.ab3@19617>     MOVE.w #$21ac,-6(a4)
0002E9C6 <AmiBlitz3.ab3@19618>     MOVE.w #$1990,-2(a4)
0002E9CE <AmiBlitz3.ab3@19619>     MOVE.w #9,peeksize
0002E9D0 <AmiBlitz3.ab3@19620>     ADDQ #8,a7
0002E9D2 <AmiBlitz3.ab3@19621> RTS
0002E9D6 <AmiBlitz3.ab3@19624>     MOVE.w #$f230,d1
0002E9DA <AmiBlitz3.ab3@19625>     BSR writeword
0002E9E0 <AmiBlitz3.ab3@19626>   MOVE.l #$65001990,d1
0002E9E6 <AmiBlitz3.ab3@19627>   TST.b doublepeek
0002E9EA <AmiBlitz3.ab3@19628>   BEQ 'lpx
0002E9F0 <AmiBlitz3.ab3@19629>   OR.l   #$10000000,d1
0002E9F2 <AmiBlitz3.ab3@19633>   ADDQ #8,a7
0002E9FA <AmiBlitz3.ab3@19634>   MOVE.w #9,peeksize
0002E9FE <AmiBlitz3.ab3@19635> BRA writelong
0002EA06 <AmiBlitz3.ab3@19638>   CMP.l #"Peek",20(a2)
0002EA0A <AmiBlitz3.ab3@19639>   BNE 'l10
0002EA0E <AmiBlitz3.ab3@19640>   TST.b 24(a2)
0002EA12 <AmiBlitz3.ab3@19641>   BNE 'l10
0002EA1A <AmiBlitz3.ab3@19642>   CMP.w #7,peeksize
0002EA1E <AmiBlitz3.ab3@19643>   BEQ 'l10
0002EA26 <AmiBlitz3.ab3@19644>    CMP.w #3,peeksize
0002EA2A <AmiBlitz3.ab3@19645>    BNE.s 'lw1
0002EA30 <AmiBlitz3.ab3@19648>   MOVE.l #$20301990,d1
0002EA34 <AmiBlitz3.ab3@19649> BRA exitjsr
0002EA3C <AmiBlitz3.ab3@19652>   CMP.w #2,peeksize
0002EA40 <AmiBlitz3.ab3@19653>    BNE.s 'lb1
0002EA46 <AmiBlitz3.ab3@19654>    MOVE.l #$30301990,d1
0002EA4A <AmiBlitz3.ab3@19655> BRA exitjsr
0002EA52 <AmiBlitz3.ab3@19658>   CMP.w #1,peeksize
0002EA56 <AmiBlitz3.ab3@19659>    BNE.s 'lf1
0002EA5C <AmiBlitz3.ab3@19660>    MOVE.l #$10301990,d1
0002EA60 <AmiBlitz3.ab3@19661> BRA exitjsr
0002EA68 <AmiBlitz3.ab3@19664>   CMP.w #5,peeksize
0002EA6C <AmiBlitz3.ab3@19665>    BNE 'l10
0002EA72 <AmiBlitz3.ab3@19666>    TST.b fpu
0002EA76 <AmiBlitz3.ab3@19667>    BEQ 'll1
0002EA7A <AmiBlitz3.ab3@19668>    MOVE.w #$f230,d1
0002EA7E <AmiBlitz3.ab3@19669>    BSR writeword
0002EA80 <AmiBlitz3.ab3@19670>    MOVEQ #0,d1
0002EA86 <AmiBlitz3.ab3@19671>    MOVE.w tempregnum,d1
0002EA88 <AmiBlitz3.ab3@19672>    ASL.l #7,d1
0002EA8A <AmiBlitz3.ab3@19673>    ASL.l #8,d1
0002EA8C <AmiBlitz3.ab3@19674>    ASL.l #8,d1
0002EA92 <AmiBlitz3.ab3@19675>    ADD.l #$44001990,d1
0002EA98 <AmiBlitz3.ab3@19676>     TST.b doublepeek
0002EA9C <AmiBlitz3.ab3@19677>     BEQ 'lpx2
0002EAA2 <AmiBlitz3.ab3@19678>     OR.l   #$10000000,d1
0002EAA6 <AmiBlitz3.ab3@19680> BRA exitjsr
0002EAAA <AmiBlitz3.ab3@19684>   MOVE.w #$4EB9,D1
0002EAAE <AmiBlitz3.ab3@19685>    BSR.w writeword                                         ;writesysjsr
0002EAB2 <AmiBlitz3.ab3@19686>   MOVEM.l (A7)+,a0/D1
0002EAB8 <AmiBlitz3.ab3@19687>    JSR addoff
0002EABC <AmiBlitz3.ab3@19688>   SUB.l $12(A0),D1
0002EAC0 <AmiBlitz3.ab3@19689>   ADD.l $28(A0),D1
0002EAC4 <AmiBlitz3.ab3@19690> BRA.w writelong
0002EAC6 <AmiBlitz3.ab3@19695>   MOVE.w D1,-(A7)
0002EACA <AmiBlitz3.ab3@19696>   MOVE.w tstmode(PC),D1
0002EACE <AmiBlitz3.ab3@19697>    BSR.w writeword
0002EAD2 <AmiBlitz3.ab3@19698>    BSR.w getbbase
0002EAD6 <AmiBlitz3.ab3@19699>    BSR.w writeword
0002EAD8 <AmiBlitz3.ab3@19700>   MOVE.w (A7)+,D1
0002EADC <AmiBlitz3.ab3@19701>   MOVEM.l D0/D3-D7/A0-A2/A4,-(A7)
0002EAE0 <AmiBlitz3.ab3@19702>    BSR.w Atokejsr
0002EAE4 <AmiBlitz3.ab3@19703>   MOVEM.l (A7)+,D0/D3-D7/A0-A2/A4
0002EAE6 <AmiBlitz3.ab3@19704> RTS
0002EAEA <AmiBlitz3.ab3@19712>   MOVE.w blitzoff(PC),D1
0002EAEE <AmiBlitz3.ab3@19713>   CMP.w #-$1,D1
0002EAF2 <AmiBlitz3.ab3@19714>    BNE.w getbbase__done
0002EAF8 <AmiBlitz3.ab3@19715>   ADDQ.w #1,globalvarpointer
0002EB00 <AmiBlitz3.ab3@19716>   BCLR #$0,globalvarpointer+1
0002EB06 <AmiBlitz3.ab3@19717>   MOVE.w globalvarpointer,D1
0002EB0C <AmiBlitz3.ab3@19718>   MOVE.w D1,blitzoff
0002EB12 <AmiBlitz3.ab3@19719>   ADDQ.w #2,globalvarpointer
0002EB14 <AmiBlitz3.ab3@19722> RTS
0002EB18 <AmiBlitz3.ab3@19726> tstmode:    Dc.b $4A,$6D,$00,$00                           ;TST.W $0000(A5)
0002EB1A <AmiBlitz3.ab3@19729> inline:     Ds.w 1
0002EB1C <AmiBlitz3.ab3@19730> blitzoff:   Dc.w $FFFF                                   ;-1 org source
0002EB1E <AmiBlitz3.ab3@19731> blitzmode:  Ds.w 1                                       ;+=amiga, -=blitz
0002EB20 <AmiBlitz3.ab3@19735>   MOVE.w (A2)+,D1
0002EB24 <AmiBlitz3.ab3@19736>    BEQ.w fetchregs__done
0002EB26 <AmiBlitz3.ab3@19737>   MOVE.w (A2)+,D2
0002EB2A <AmiBlitz3.ab3@19738>    BSR.w toreg
0002EB2E <AmiBlitz3.ab3@19739> BRA.w fetchregs
0002EB30 <AmiBlitz3.ab3@19742> RTS
0002EB34 <AmiBlitz3.ab3@19747>   CMP.w #-$100,D2
0002EB38 <AmiBlitz3.ab3@19748>    BCC.w toreg__yeah
0002EB3C <AmiBlitz3.ab3@19750>   BCLR #$F,D2
0002EB40 <AmiBlitz3.ab3@19751>    BEQ.w toreg__nobm
0002EB46 <AmiBlitz3.ab3@19753>   TST.w blitzmode
0002EB4A <AmiBlitz3.ab3@19754>    BMI.w toreg__yeah
0002EB4C <AmiBlitz3.ab3@19755> RTS
0002EB50 <AmiBlitz3.ab3@19758>   BCLR #$E,D2
0002EB54 <AmiBlitz3.ab3@19759>    BEQ.w toreg__yeah
0002EB5A <AmiBlitz3.ab3@19761>   TST.w blitzmode
0002EB5E <AmiBlitz3.ab3@19762>    BPL.w toreg__yeah
0002EB60 <AmiBlitz3.ab3@19763> RTS
0002EB66 <AmiBlitz3.ab3@19766>   JSR uselib
0002EB68 <AmiBlitz3.ab3@19767>   TST.b D2
0002EB6C <AmiBlitz3.ab3@19768>    BEQ.w toreg__norm
0002EB70 <AmiBlitz3.ab3@19769>   CMP.b #$4,D2
0002EB74 <AmiBlitz3.ab3@19770>    BNE.w toreg__suv
0002EB78 <AmiBlitz3.ab3@19771>   MOVE.w #$0004,-(A7)
0002EB7E <AmiBlitz3.ab3@19772>   MOVE.l #$FFFFFFFA,-(A7)                                  ;#-6,-(a7) org source
0002EB82 <AmiBlitz3.ab3@19773> BRA.w toreg__sendmd
0002EB86 <AmiBlitz3.ab3@19776>   CMP.b #$3,D2
0002EB8A <AmiBlitz3.ab3@19777>    BNE.w toreg__notnmax
0002EB8C <AmiBlitz3.ab3@19778>   CLR.w -(A7)
0002EB92 <AmiBlitz3.ab3@19779>   MOVE.l #$FFFFFFFC,-(A7)                                  ;#-4,-(a7) org source
0002EB94 <AmiBlitz3.ab3@19785>   LSR.w #8,D2
0002EB98 <AmiBlitz3.ab3@19786>   MOVE.w #$303C,D1                                         ;move.w #x,dn
0002EB9C <AmiBlitz3.ab3@19787>   BTST #$7,D2
0002EBA0 <AmiBlitz3.ab3@19788>    BEQ.w toreg__skipad
0002EBA4 <AmiBlitz3.ab3@19789>   MOVE.w #$307C,D1                                         ;move.w #x,an
0002EBA8 <AmiBlitz3.ab3@19790>   CMP.w #$16,D2
0002EBAC <AmiBlitz3.ab3@19791>    BNE.w toreg__skipad
0002EBB4 <AmiBlitz3.ab3@19792>   MOVE.w #$FFFF,lasta6                                     ;-1 org source
0002EBB8 <AmiBlitz3.ab3@19795>   ANDI.w #$7,D2
0002EBBA <AmiBlitz3.ab3@19796>   LSL.w #8,D2
0002EBBC <AmiBlitz3.ab3@19797>   LSL.w #1,D2
0002EBBE <AmiBlitz3.ab3@19798>   OR.w D2,D1
0002EBC2 <AmiBlitz3.ab3@19799>    BSR.w writeword
0002EBC6 <AmiBlitz3.ab3@19800>   MOVE.l $12(A1),D1
0002EBC8 <AmiBlitz3.ab3@19801>   ADD.l (A7)+,D1
0002EBCC <AmiBlitz3.ab3@19802>   MOVE.w $0(A1,D1.L),D1
0002EBCE <AmiBlitz3.ab3@19803>   ADD.w (A7)+,D1
0002EBD2 <AmiBlitz3.ab3@19804> BRA.w writeword
0002EBD4 <AmiBlitz3.ab3@19807>   MOVE.w D2,-(A7)
0002EBD6 <AmiBlitz3.ab3@19808>   LSR.w #8,D2
0002EBDA <AmiBlitz3.ab3@19809>   CMP.w #$16,D2
0002EBDE <AmiBlitz3.ab3@19810>    BNE.w toreg__isnta6
0002EBE6 <AmiBlitz3.ab3@19811>   MOVE.w #$FFFF,lasta6                                     ;-1 org source
0002EBEA <AmiBlitz3.ab3@19814>   MOVE.l $12(A1),D1                                        ;objectspace
0002EBEE <AmiBlitz3.ab3@19815>   MOVE.w -$6(A1,D1.L),-(A7)
0002EBF2 <AmiBlitz3.ab3@19816>    BSR.w makeregop
0002EBF6 <AmiBlitz3.ab3@19817>    BSR.w writeword
0002EBF8 <AmiBlitz3.ab3@19818>   MOVE.w (A7)+,D1
0002EBFA <AmiBlitz3.ab3@19819>   MOVE.w (A7)+,D2
0002EBFC <AmiBlitz3.ab3@19820>   TST.b D2
0002EC00 <AmiBlitz3.ab3@19821>    BPL.w toreg__skippy1
0002EC04 <AmiBlitz3.ab3@19826>    BSR.w writeword                                         ;move.l x(a5),dn
0002EC06 <AmiBlitz3.ab3@19827>   MOVE.w D2,-(A7)                                          ;store reg used
0002EC0A <AmiBlitz3.ab3@19829>   ADDA.l $12(A1),A1
0002EC0C <AmiBlitz3.ab3@19830>   MOVE.b D2,D1
0002EC10 <AmiBlitz3.ab3@19831>   ANDI.w #$7,D1
0002EC16 <AmiBlitz3.ab3@19833>   TST.b debugmode
0002EC1A <AmiBlitz3.ab3@19834>    BEQ.w toreg__norerr
0002EC1C <AmiBlitz3.ab3@19836>   MOVE.w D1,-(A7)
0002EC1E <AmiBlitz3.ab3@19837>   LSL.w #8,D1
0002EC20 <AmiBlitz3.ab3@19838>   LSL.w #1,D1
0002EC24 <AmiBlitz3.ab3@19839>   ORI.w #$B07C,D1                                          ;cmp #x,dn
0002EC28 <AmiBlitz3.ab3@19840>    BSR.w writeword
0002EC2C <AmiBlitz3.ab3@19841>   MOVE.w -$4(A1),D1
0002EC30 <AmiBlitz3.ab3@19842>    BSR.w writeword
0002EC34 <AmiBlitz3.ab3@19843>   MOVE.l maxchk(PC),D1                                  ;bcs
0002EC38 <AmiBlitz3.ab3@19844>    BSR.w writelong
0002EC3A <AmiBlitz3.ab3@19845>   MOVE.l A2,-(A7)
0002EC3E <AmiBlitz3.ab3@19846>   MOVE.w #$C30A,D1
0002EC42 <AmiBlitz3.ab3@19847>    BSR.w Atokejsr
0002EC44 <AmiBlitz3.ab3@19848>   MOVEA.l (A7)+,A2
0002EC46 <AmiBlitz3.ab3@19849>   MOVE.w (A7)+,D1
0002EC4A <AmiBlitz3.ab3@19852>   MOVE.w -$2(A1),D2                                        ;shift amount
0002EC4E <AmiBlitz3.ab3@19855>   CMP.w #$9,D2
0002EC52 <AmiBlitz3.ab3@19856>    BCS.w toreg__simp
0002EC56 <AmiBlitz3.ab3@19857>   MOVEM.w D1-D2,-(A7)
0002EC58 <AmiBlitz3.ab3@19859>   MOVEQ.l #$00,D2                                          ;!!!!!
0002EC5A <AmiBlitz3.ab3@19861>   LSL.w #8,D2
0002EC5C <AmiBlitz3.ab3@19862>   LSL.w #1,D2
0002EC5E <AmiBlitz3.ab3@19863>   OR.w D2,D1
0002EC62 <AmiBlitz3.ab3@19864>   OR.w lsldn(PC),D1
0002EC66 <AmiBlitz3.ab3@19865>    BSR.w writeword
0002EC6A <AmiBlitz3.ab3@19866>   MOVEM.w (A7)+,D1-D2
0002EC6C <AmiBlitz3.ab3@19867>   SUBQ.w #8,D2
0002EC70 <AmiBlitz3.ab3@19868> BRA.w toreg__shloop
0002EC72 <AmiBlitz3.ab3@19871>   MOVE.w D1,-(A7)
0002EC76 <AmiBlitz3.ab3@19872>   OR.w #$48c0,d1
0002EC7A <AmiBlitz3.ab3@19873>   BSR writeword
0002EC7C <AmiBlitz3.ab3@19874>   MOVE.w (a7),d1
0002EC7E <AmiBlitz3.ab3@19875>   TST.w D2
0002EC82 <AmiBlitz3.ab3@19876>   BEQ.w toreg__simp2
0002EC86 <AmiBlitz3.ab3@19878>   ANDI.w #$7,D2                                            ;?????
0002EC88 <AmiBlitz3.ab3@19880>   LSL.w #8,D2
0002EC8A <AmiBlitz3.ab3@19881>   LSL.w #1,D2
0002EC8C <AmiBlitz3.ab3@19882>   OR.w D2,D1
0002EC90 <AmiBlitz3.ab3@19883>   OR.w lsldn(PC),D1
0002EC94 <AmiBlitz3.ab3@19884>    BSR.w writeword
0002EC96 <AmiBlitz3.ab3@19890>   MOVE.w (A7)+,D1
0002EC9A <AmiBlitz3.ab3@19891>   ANDI.w #$7,D1
0002EC9E <AmiBlitz3.ab3@19892>   OR.w maxdo(PC),D1
0002ECA0 <AmiBlitz3.ab3@19893>   MOVE.w (A7)+,D2
0002ECA2 <AmiBlitz3.ab3@19894>   LSL.w #1,D2
0002ECA6 <AmiBlitz3.ab3@19895>   ANDI.w #$E00,D2
0002ECA8 <AmiBlitz3.ab3@19896>   OR.w D2,D1
0002ECAC <AmiBlitz3.ab3@19897> BRA.w writeword
0002ECB0 <AmiBlitz3.ab3@19900>   CMP.b #$1,D2
0002ECB4 <AmiBlitz3.ab3@19901>    BEQ.w toreg__skippy
0002ECB6 <AmiBlitz3.ab3@19905>   ADDQ.w #4,D1
0002ECBC <AmiBlitz3.ab3@19907>   TST.b debugmode
0002ECC0 <AmiBlitz3.ab3@19908>    BEQ.w toreg__skippy
0002ECC4 <AmiBlitz3.ab3@19910>    BSR.w writeword
0002ECC6 <AmiBlitz3.ab3@19911>   SWAP D1
0002ECCA <AmiBlitz3.ab3@19912>   MOVE.w toreg__theretest(PC),D1
0002ECCC <AmiBlitz3.ab3@19913>   SWAP D1
0002ECD0 <AmiBlitz3.ab3@19914>    BSR.w writelong
0002ECD4 <AmiBlitz3.ab3@19915>   MOVE.l toreg__theretest+4(PC),D1
0002ECD8 <AmiBlitz3.ab3@19916>    BSR.w writelong
0002ECDC <AmiBlitz3.ab3@19917>   MOVE.l toreg__theretest+8(PC),D1
0002ECE0 <AmiBlitz3.ab3@19918> BRA.w writelong
0002ECE4 <AmiBlitz3.ab3@19921> BRA.w writeword
0002ECE8 <AmiBlitz3.ab3@19926>             Dc.b $4A,$AD,$00,$00                           ;TST.L  $0000(A5)
0002ECEC <AmiBlitz3.ab3@19927>             Dc.b $66,$00,$00,$06                           ;BNE.W  toreg__ttskip
0002ECEE <AmiBlitz3.ab3@19928>             Dc.b $70,$01                                   ;MOVEQ  #$01,D0
0002ECF0 <AmiBlitz3.ab3@19929>             Dc.b $4E,$40                                   ;TRAP   #00
0002ECF2 <AmiBlitz3.ab3@19934>   LSR.w #8,D2
0002ECF6 <AmiBlitz3.ab3@19935>   CMP.b #$16,D2
0002ECFA <AmiBlitz3.ab3@19936>    BNE.w toreg__nota6
0002ECFE <AmiBlitz3.ab3@19937>   MOVE.w $A(A1),D1
0002ED04 <AmiBlitz3.ab3@19938>   CMP.w lasta6,D1
0002ED08 <AmiBlitz3.ab3@19939>    BEQ.w toreg__sk
0002ED0E <AmiBlitz3.ab3@19940>   MOVE.w D1,lasta6
0002ED12 <AmiBlitz3.ab3@19943>    BSR.w makeregop
0002ED16 <AmiBlitz3.ab3@19944>   TST.w $1A(A1)
0002ED1A <AmiBlitz3.ab3@19945>    BPL.w toreg__long
0002ED1E <AmiBlitz3.ab3@19946>   CMP.w stackop(PC),D1
0002ED22 <AmiBlitz3.ab3@19947>    BNE.w toreg__notst
0002ED28 <AmiBlitz3.ab3@19948>   SUBQ.w #2,a2offset
0002ED2C <AmiBlitz3.ab3@19951>    ORI.w #$1000,D1
0002ED30 <AmiBlitz3.ab3@19954>    BSR.w writeword
0002ED34 <AmiBlitz3.ab3@19955>   MOVE.w $A(A1),D1
0002ED38 <AmiBlitz3.ab3@19956>    BSR.w writeword
0002ED3A <AmiBlitz3.ab3@19959> RTS
0002ED3C <AmiBlitz3.ab3@19963> lsldn:      Dc.b $E1,$88                 ;Dc.b $48 ;object long acsess    ;LSL.L   #8,D0
0002ED40 <AmiBlitz3.ab3@19964> maxchk:     Dc.b $65,$00,$00,$08                                          ;BCS.W   maxchk__ok
0002ED46 <AmiBlitz3.ab3@19965>             Dc.b $4E,$B9,$00,$00,$00,$00                                  ;JSR     $00000000
0002ED48 <AmiBlitz3.ab3@19968> 
0002ED4A <AmiBlitz3.ab3@19971>             Dc.b $00,$00
0002ED4E <AmiBlitz3.ab3@19972> stackop:    Dc.b $2F,$2D,$00,$00                                          ;MOVE.L  $0000(A5),-(A7)
0002ED52 <AmiBlitz3.ab3@19979>   CMP.b #$FF,D2
0002ED56 <AmiBlitz3.ab3@19980>    BNE.w makeregop__notst
0002ED5A <AmiBlitz3.ab3@19981>   MOVE.w stackop(PC),D1
0002ED60 <AmiBlitz3.ab3@19982>   ADDQ.w #4,a2offset
0002ED62 <AmiBlitz3.ab3@19983> RTS
0002ED64 <AmiBlitz3.ab3@19986>   MOVE.l A3,-(A7)
0002ED6A <AmiBlitz3.ab3@19987>   LEA regtransd,A3
0002ED6E <AmiBlitz3.ab3@19988>   BTST #$4,D2
0002ED72 <AmiBlitz3.ab3@19989>    BEQ.w makeregop__skip
0002ED78 <AmiBlitz3.ab3@19990>   LEA regtransa,A3
0002ED7C <AmiBlitz3.ab3@19993>   ANDI.w #$7,D2
0002ED7E <AmiBlitz3.ab3@19994>   MOVE.w D2,D1
0002ED80 <AmiBlitz3.ab3@19995>   LSL.w #8,D1
0002ED82 <AmiBlitz3.ab3@19996>   LSL.w #1,D1
0002ED84 <AmiBlitz3.ab3@19997>   OR.w (A3),D1
0002ED86 <AmiBlitz3.ab3@19998>   MOVEA.l (A7)+,A3
0002ED88 <AmiBlitz3.ab3@19999> RTS
0002ED8C <AmiBlitz3.ab3@20005>   CMP.w #$3C,D0
0002ED90 <AmiBlitz3.ab3@20006>    BCS.w ifchar__no
0002ED94 <AmiBlitz3.ab3@20007>   CMP.w #$3E,D0
0002ED98 <AmiBlitz3.ab3@20008>    BHI.w ifchar__no
0002ED9C <AmiBlitz3.ab3@20009>   SUBI.w #$3C,D0
0002ED9E <AmiBlitz3.ab3@20010>   CMP.w D0,D0
0002EDA0 <AmiBlitz3.ab3@20013> RTS
0002EDAA <AmiBlitz3.ab3@20018>   MOVE.w oldqflag,instringon
0002EDB0 <AmiBlitz3.ab3@20019>   MOVEA.l lastsourcepos,A5
0002EDB6 <AmiBlitz3.ab3@20024>   MOVE.w regnum,-(A7)
0002EDBC <AmiBlitz3.ab3@20025>   CLR.w regnum
0002EDC2 <AmiBlitz3.ab3@20026>   MOVE.l destpointer,-(A7)
0002EDC8 <AmiBlitz3.ab3@20027>   MOVE.l destbufferend,-(A7)
0002EDCE <AmiBlitz3.ab3@20028>   MOVE.w dontwrite,-(A7)
0002EDD4 <AmiBlitz3.ab3@20029>   MOVE.w lasta6,-(A7)
0002EDDA <AmiBlitz3.ab3@20030>   MOVE.w cfetchmode,-(A7)
0002EDDE <AmiBlitz3.ab3@20031>    BNE.w JL_0_BFB6
0002EDE8 <AmiBlitz3.ab3@20032>   MOVE.l destbufferend,oldlibat
0002EDEE <AmiBlitz3.ab3@20033>   MOVEA.l constpcat,A0
0002EDF4 <AmiBlitz3.ab3@20034>   MOVE.l A0,destpointer
0002EDF8 <AmiBlitz3.ab3@20035> BRA.w JL_0_BFBC
0002EDFE <AmiBlitz3.ab3@20038>   MOVEA.l destpointer,A0
0002EE00 <AmiBlitz3.ab3@20041>   MOVE.l A0,-(A7)
0002EE0A <AmiBlitz3.ab3@20042>   MOVE.l constlibat,destbufferend
0002EE10 <AmiBlitz3.ab3@20043>   CLR.w dontwrite
0002EE18 <AmiBlitz3.ab3@20045>   MOVE.w #$FFFF,lasta6
0002EE20 <AmiBlitz3.ab3@20046>   MOVE.w #$FFFF,cfetchmode
0002EE24 <AmiBlitz3.ab3@20048>     BSR.w arreval
0002EE26 <AmiBlitz3.ab3@20049>    MOVE.l (a7),a0
0002EF62 <AmiBlitz3.ab3@20051>  !newcalc
0002EF66 <AmiBlitz3.ab3@20052>    BEQ 'l10
0002EF68 <AmiBlitz3.ab3@20053>    MOVE.l d0,d3
0002EF6A <AmiBlitz3.ab3@20054>    MOVEA.l (A7)+,A0
0002EF6E <AmiBlitz3.ab3@20055> BRA bc1
0002EF72 <AmiBlitz3.ab3@20058>    MOVE.w #$2600,D1
0002EF78 <AmiBlitz3.ab3@20059>   OR.w regnum,D1
0002EF7C <AmiBlitz3.ab3@20060>    BSR.w writeword
0002EF80 <AmiBlitz3.ab3@20061>   MOVE.w #$4E75,D1
0002EF84 <AmiBlitz3.ab3@20062>    BSR.w writeword
0002EF8A <AmiBlitz3.ab3@20063>   MOVE.w dontwrite,D1
0002EF8E <AmiBlitz3.ab3@20064>    BNE.w conmemerr
0002EF90 <AmiBlitz3.ab3@20065>   MOVEA.l (A7)+,A0
0002EF92 <AmiBlitz3.ab3@20066>   NOP
0002EF98 <AmiBlitz3.ab3@20067>    JSR Aclearcache                                         ;simple expression
0002EF9A <AmiBlitz3.ab3@20070>    JSR (A0)                                                ;writeresult
0002EFA0 <AmiBlitz3.ab3@20073>   MOVE.w (A7)+,cfetchmode
0002EFA6 <AmiBlitz3.ab3@20074>   MOVE.w (A7)+,lasta6
0002EFAC <AmiBlitz3.ab3@20075>   MOVE.w (A7)+,dontwrite
0002EFB2 <AmiBlitz3.ab3@20076>   MOVE.l (A7)+,destbufferend
0002EFB8 <AmiBlitz3.ab3@20077>   MOVE.l (A7)+,destpointer
0002EFBE <AmiBlitz3.ab3@20078>   MOVE.w (A7)+,regnum
0002EFC4 <AmiBlitz3.ab3@20081> JMP reget
0002EFC8 <AmiBlitz3.ab3@20084> oldlibat:   Ds.l 1
0002EFCE <AmiBlitz3.ab3@20088>   LEA incdir,A0
0002EFD2 <AmiBlitz3.ab3@20091>   CMP.w #$22,D0
0002EFD6 <AmiBlitz3.ab3@20092>    BEQ.w JL_0_C052
0002EFD8 <AmiBlitz3.ab3@20093>   MOVE.b D0,(A0)+
0002EFDA <AmiBlitz3.ab3@20094>   TST.w D0
0002EFDE <AmiBlitz3.ab3@20095>    BEQ.w JL_0_C05A
0002EFE2 <AmiBlitz3.ab3@20096>    BMI.w syntaxerr
0002EFE8 <AmiBlitz3.ab3@20099>   JSR get1bytemain                                         ;_long
0002EFEC <AmiBlitz3.ab3@20100> BRA.w JL_0_C03E
0002EFEE <AmiBlitz3.ab3@20103> RTS
0002EFF4 <AmiBlitz3.ab3@20107>   LEA ptr_parameterstore,A1                                ;getparameter
0002EFFA <AmiBlitz3.ab3@20108>   LEA incdir,A0
0002EFFC <AmiBlitz3.ab3@20109>   MOVEQ.l #-$01,D2
0002EFFE <AmiBlitz3.ab3@20112>     ADDQ.w #1,D2
0002F000 <AmiBlitz3.ab3@20113>     MOVE.b (A0)+,(A1)+
0002F004 <AmiBlitz3.ab3@20114>   BNE.w JL_0_C06A
0002F006 <AmiBlitz3.ab3@20115>   SUBQ.w #1,A1
0002F010 <AmiBlitz3.ab3@20117>   MOVE.w oldqflag,instringon
0002F016 <AmiBlitz3.ab3@20118>   MOVEA.l lastsourcepos,A5
0002F01C <AmiBlitz3.ab3@20122>   JSR get1bytemain
0002F01E <AmiBlitz3.ab3@20123>   TST.w D0
0002F022 <AmiBlitz3.ab3@20124>    BMI.w syntaxerr
0002F026 <AmiBlitz3.ab3@20125>   CMP.b #$22,D0
0002F02A <AmiBlitz3.ab3@20126>    BEQ.w JL_0_C078
0002F02C <AmiBlitz3.ab3@20127>   MOVE.b D0,(A1)+
0002F030 <AmiBlitz3.ab3@20128>    BEQ.w JL_0_C096
0002F032 <AmiBlitz3.ab3@20129>   ADDQ.w #1,D2
0002F036 <AmiBlitz3.ab3@20130> BRA.w JL_0_C078
0002F038 <AmiBlitz3.ab3@20133>   TST.w D2
0002F03C <AmiBlitz3.ab3@20134>    BEQ.w syntaxerr
0002F03E <AmiBlitz3.ab3@20135> RTS
0002F044 <AmiBlitz3.ab3@20139>   MOVEA.l constantbase,A2
0002F048 <AmiBlitz3.ab3@20140>   MOVEA.l $E(A2),A5
0002F04E <AmiBlitz3.ab3@20141>   MOVE.l a5,includesourceline
0002F054 <AmiBlitz3.ab3@20142>   LEA inctab,a0
0002F05A <AmiBlitz3.ab3@20143>   MOVE.w ininclude,d0
0002F05E <AmiBlitz3.ab3@20144>   MOVE.l $0(a0,d0*4),d0
0002F062 <AmiBlitz3.ab3@20145>   MOVEA.l $4(A2),A0
0002F066 <AmiBlitz3.ab3@20147>   LEA $0(A0,D0.l),A0
0002F068 <AmiBlitz3.ab3@20148>   MOVEA.l A5,A1
0002F06A <AmiBlitz3.ab3@20151>     CMPA.l A0,A1
0002F06E <AmiBlitz3.ab3@20152>      BCC.w JL_0_C0C6
0002F070 <AmiBlitz3.ab3@20153>   TST.b (A1)+
0002F074 <AmiBlitz3.ab3@20154>   BNE.w JL_0_C0B6
0002F078 <AmiBlitz3.ab3@20155> BRA.w JL_0_C112
0002F07C <AmiBlitz3.ab3@20158>   MOVEA.l $4(A2),A1
0002F07E <AmiBlitz3.ab3@20161>   CMPA.l A0,A5
0002F082 <AmiBlitz3.ab3@20162>   BCC.w JL_0_C0D6
0002F084 <AmiBlitz3.ab3@20163>   MOVE.b (A5)+,(A1)+
0002F088 <AmiBlitz3.ab3@20164> BRA.w JL_0_C0CA
0002F08A <AmiBlitz3.ab3@20167>   MOVE.l A1,D0
0002F08E <AmiBlitz3.ab3@20168>   SUB.l $4(A2),D0
0002F094 <AmiBlitz3.ab3@20169>   LEA inctab,a0
0002F096 <AmiBlitz3.ab3@20170>   MOVEQ #0,d1
0002F09C <AmiBlitz3.ab3@20171>   MOVE.w ininclude,d1
0002F0A0 <AmiBlitz3.ab3@20172>   MOVE.l d0,0(a0,d1*4)
0002F0A6 <AmiBlitz3.ab3@20174>   MOVEA.l _dosbase,A6
0002F0AA <AmiBlitz3.ab3@20175>   MOVE.l $8(A2),D1
0002F0AC <AmiBlitz3.ab3@20176>   MOVE.l A1,D2
0002F0B2 <AmiBlitz3.ab3@20177>   MOVE.l D2,include_base
0002F0B8 <AmiBlitz3.ab3@20179>   MOVE.l #$10000000,d3                                     ;load whole file
0002F0BA <AmiBlitz3.ab3@20180>   SUB.l D0,D3
0002F0BE <AmiBlitz3.ab3@20181>    JSR _Read(A6)
0002F0C0 <AmiBlitz3.ab3@20182>   TST.l D0
0002F0C4 <AmiBlitz3.ab3@20183>    BMI.w error_reading_file
0002F0C8 <AmiBlitz3.ab3@20184>    BEQ.w JL_0_C120
0002F0CE <AmiBlitz3.ab3@20185>    MOVE.l D0,include_length
0002F110 <AmiBlitz3.ab3@20186>    !ComData_GetL{comPtr_PreProcessor,include_preprocessor}
0002F13A <AmiBlitz3.ab3@20187>    !basic
0002F14A <AmiBlitz3.ab3@20188>    ilen.l  = Peek.l(?include_length)
0002F15A <AmiBlitz3.ab3@20189>    ibase.l = Peek.l(?include_base)
0002F16A <AmiBlitz3.ab3@20190>    ido.l   = Peek.l(?include_process)
0002F17A <AmiBlitz3.ab3@20191>    *tn.preprocessor = Peek.l(?include_preprocessor)
0002F184 <AmiBlitz3.ab3@20192>    If ido
0002F196 <AmiBlitz3.ab3@20193>      ioffset.l = SkipXtraHeader{ibase,ilen}
0002F1BC <AmiBlitz3.ab3@20194>      nilen.l = preproc_Tokenize{*tn,ibase+ioffset,ibase,ilen-ioffset}
0002F1CE <AmiBlitz3.ab3@20195>      If nilen>0
0002F1DE <AmiBlitz3.ab3@20199>        Poke.l ?include_length,nilen
0002F1FC <AmiBlitz3.ab3@20202>    !asm
0002F206 <AmiBlitz3.ab3@20203>    MOVE.l #0,include_process
0002F20C <AmiBlitz3.ab3@20204>    MOVE.l include_length,D0
0002F212 <AmiBlitz3.ab3@20205>    LEA inctab,a0
0002F214 <AmiBlitz3.ab3@20206>    MOVEQ #0,d1
0002F21A <AmiBlitz3.ab3@20207>    MOVE.w ininclude,d1
0002F21E <AmiBlitz3.ab3@20208>    ADD.l d0,0(a0,d1*4)
0002F222 <AmiBlitz3.ab3@20210>   MOVEA.l $4(A2),A5
0002F226 <AmiBlitz3.ab3@20212>    MOVE.l 0(a0,d1*4),d0
0002F22A <AmiBlitz3.ab3@20213>   CLR.b $0(A5,D0.l)
0002F22C <AmiBlitz3.ab3@20216>   MOVEA.l A5,A0
0002F22E <AmiBlitz3.ab3@20219>     TST.b (A0)+
0002F232 <AmiBlitz3.ab3@20220>   BNE.w JL_0_C114
0002F236 <AmiBlitz3.ab3@20221>   MOVE.l A0,$E(A2)
0002F238 <AmiBlitz3.ab3@20222> RTS
0002F23C <AmiBlitz3.ab3@20225> include_length:        Dc.l 0                              ; for tokenizer!
0002F240 <AmiBlitz3.ab3@20226> include_base:          Dc.l 0
0002F244 <AmiBlitz3.ab3@20227> include_process:       Dc.l 0
0002F248 <AmiBlitz3.ab3@20228> include_preprocessor:  Dc.l 0
0002F24C <AmiBlitz3.ab3@20232>   MOVE.l $8(A2),D1
0002F252 <AmiBlitz3.ab3@20234>   MOVEA.l _dosbase,A6
0002F256 <AmiBlitz3.ab3@20235>   JSR _Close(a6)
0002F25C <AmiBlitz3.ab3@20236>   MOVEA.l _execbase,A6
0002F260 <AmiBlitz3.ab3@20237>   MOVEA.l $4(A2),A1
0002F266 <AmiBlitz3.ab3@20238>   MOVE.l #$400*8,D0                                        ;exit include
0002F26A <AmiBlitz3.ab3@20240>   JSR _FreeVec(a6)
0002F270 <AmiBlitz3.ab3@20243>   MOVE.l (A2),constantbase
0002F272 <AmiBlitz3.ab3@20244>   MOVEA.l A2,A1
0002F274 <AmiBlitz3.ab3@20245>   MOVEQ.l #$00,D0
0002F278 <AmiBlitz3.ab3@20246>   MOVE.b $12(A2),D0
0002F27E <AmiBlitz3.ab3@20247>   MOVEA.l _execbase,A6
0002F284 <AmiBlitz3.ab3@20248>   MOVE.l mempool2,a0
0002F288 <AmiBlitz3.ab3@20249>   JSR _FreePooled(A6)
0002F28E <AmiBlitz3.ab3@20250>   JSR zero_includename
0002F294 <AmiBlitz3.ab3@20251>   SUBQ.w #1,ininclude
0002F298 <AmiBlitz3.ab3@20252>   BNE.w AJL_0_C09E
0002F29E <AmiBlitz3.ab3@20255>   LEA _include,a0
0002F2A2 <AmiBlitz3.ab3@20256>   MOVEM.l a0-a6/d0-d7,-(a7)
0002F2A8 <AmiBlitz3.ab3@20257>   LEA ptr_parameterstore,a1
0002F2AA <AmiBlitz3.ab3@20260>     MOVE.b (a0)+,(a1)+
0002F2AE <AmiBlitz3.ab3@20261>   BNE 'l1b
0002F2B0 <AmiBlitz3.ab3@20262>   MOVEQ #9,d2
0002F2B6 <AmiBlitz3.ab3@20263>   JSR findlabel2
0002F2BA <AmiBlitz3.ab3@20264>   BNE 'd
0002F2BE <AmiBlitz3.ab3@20265>   CLR.l 8(a2)
0002F2C2 <AmiBlitz3.ab3@20268>   MOVEM.l (a7)+,a0-a6/d0-d7
0002F2C4 <AmiBlitz3.ab3@20269> RTS
0002F2CA <AmiBlitz3.ab3@20273>   MOVE.l unusedfunc,d0
0002F2CE <AmiBlitz3.ab3@20274>   BEQ 'noclear
0002F2D2 <AmiBlitz3.ab3@20275>   MOVEM.l d0-d2/a0-a1/a6,-(a7)
0002F2D4 <AmiBlitz3.ab3@20278>     MOVE.l d0,a1
0002F2D8 <AmiBlitz3.ab3@20279>     MOVE.l 4(a1),d0
0002F2DA <AmiBlitz3.ab3@20280>     MOVE.l (a1),d2
0002F2E0 <AmiBlitz3.ab3@20281>     MOVE.l _execbase,a6
0002F2E4 <AmiBlitz3.ab3@20282>     JSR _FreeMem(a6)
0002F2E6 <AmiBlitz3.ab3@20283>     MOVE.l d2,d0
0002F2EA <AmiBlitz3.ab3@20284>   BNE 'f1
0002F2F0 <AmiBlitz3.ab3@20285>   CLR.l unusedfunc
0002F2F4 <AmiBlitz3.ab3@20286>   MOVEM.l (a7)+,a0-a1/a6/d0-d2
0002F2F6 <AmiBlitz3.ab3@20289> RTS
0002F2FC <AmiBlitz3.ab3@20293>   MOVEA.l xinclude_base,A2
0002F302 <AmiBlitz3.ab3@20294>   CLR.l xinclude_base
0002F306 <AmiBlitz3.ab3@20297>     CMPA.w #$0,A2
0002F30A <AmiBlitz3.ab3@20298>      BEQ.w JL_0_C186
0002F30C <AmiBlitz3.ab3@20299>     MOVEQ.l #$00,D0
0002F310 <AmiBlitz3.ab3@20300>     MOVE.b 4+8(A2),D0
0002F312 <AmiBlitz3.ab3@20301>     MOVEA.l A2,A1
0002F314 <AmiBlitz3.ab3@20302>     MOVEA.l (A2),A2
0002F31A <AmiBlitz3.ab3@20303>     MOVEA.l _execbase,A6
0002F320 <AmiBlitz3.ab3@20304>     MOVE.l mempool2,a0
0002F324 <AmiBlitz3.ab3@20305>     JSR _FreePooled(A6)
0002F328 <AmiBlitz3.ab3@20306> BRA.w JL_0_C168
0002F32A <AmiBlitz3.ab3@20309> RTS
0002F330 <AmiBlitz3.ab3@20313>   MOVEA.l constantbase,A2
0002F336 <AmiBlitz3.ab3@20314>   CLR.l constantbase
0002F33A <AmiBlitz3.ab3@20317>     CMPA.w #$0,A2
0002F33E <AmiBlitz3.ab3@20318>      BEQ.w JL_0_C1DC
0002F342 <AmiBlitz3.ab3@20319>     MOVE.l $8(A2),D1
0002F346 <AmiBlitz3.ab3@20320>      BEQ.w JL_0_C1AE
0002F34C <AmiBlitz3.ab3@20321>     MOVEA.l _dosbase,A6
0002F350 <AmiBlitz3.ab3@20322>      JSR _Close(A6)
0002F354 <AmiBlitz3.ab3@20325>     MOVE.l $4(A2),D0
0002F358 <AmiBlitz3.ab3@20326>      BEQ.w JL_0_C1C6
0002F35A <AmiBlitz3.ab3@20327>     MOVEA.l D0,A1
0002F360 <AmiBlitz3.ab3@20328>     MOVE.l #$400*8,D0
0002F366 <AmiBlitz3.ab3@20329>     MOVEA.l _execbase,A6
0002F36C <AmiBlitz3.ab3@20330>     MOVE.l mempool,a0
0002F370 <AmiBlitz3.ab3@20331>     JSR _FreeVec(a6)
0002F372 <AmiBlitz3.ab3@20334>     MOVEQ.l #$00,D0
0002F376 <AmiBlitz3.ab3@20335>     MOVE.b $12(A2),D0
0002F378 <AmiBlitz3.ab3@20336>     MOVEA.l A2,A1
0002F37A <AmiBlitz3.ab3@20337>     MOVEA.l (A2),A2
0002F380 <AmiBlitz3.ab3@20338>     MOVEA.l _execbase,A6
0002F386 <AmiBlitz3.ab3@20339>     MOVE.l mempool2,a0
0002F38A <AmiBlitz3.ab3@20340>     JSR _FreePooled(A6)
0002F38E <AmiBlitz3.ab3@20341> BRA.w JL_0_C194
0002F390 <AmiBlitz3.ab3@20344> RTS
0002F392 <AmiBlitz3.ab3@20348>   SWAP D0
0002F396 <AmiBlitz3.ab3@20349>    BSR.w JL_0_C1E6
0002F398 <AmiBlitz3.ab3@20350>   SWAP D0
0002F39E <AmiBlitz3.ab3@20353>   MOVEA.l data2,A4
0002F3A4 <AmiBlitz3.ab3@20354>   CMPA.l allat,A4
0002F3A8 <AmiBlitz3.ab3@20355>    BCC.w JL_0_C200
0002F3AA <AmiBlitz3.ab3@20356>   MOVE.w D0,(A4)+
0002F3B0 <AmiBlitz3.ab3@20357>   MOVE.l A4,data2
0002F3B2 <AmiBlitz3.ab3@20358> RTS
0002F3BA <AmiBlitz3.ab3@20361>   MOVE.w #$FFFF,dontwrite
0002F3C0 <AmiBlitz3.ab3@20362>   ADDQ.l #2,data2
0002F3C2 <AmiBlitz3.ab3@20363> RTS
0002F3C8 <AmiBlitz3.ab3@20367>   MOVEA.l data2,A4
0002F3CE <AmiBlitz3.ab3@20368>   CMPA.l allat,A4
0002F3D2 <AmiBlitz3.ab3@20369>    BCC.w JL_0_C22A
0002F3D4 <AmiBlitz3.ab3@20370>   MOVE.b D0,(A4)+
0002F3DA <AmiBlitz3.ab3@20371>   MOVE.l A4,data2
0002F3DC <AmiBlitz3.ab3@20372> RTS
0002F3E4 <AmiBlitz3.ab3@20375>   MOVE.w #$FFFF,dontwrite
0002F3EA <AmiBlitz3.ab3@20376>   ADDQ.l #1,data2
0002F3EC <AmiBlitz3.ab3@20377> RTS
0002F3F0 <AmiBlitz3.ab3@20381>   CMP.w #$22,D0
0002F3F4 <AmiBlitz3.ab3@20382>    BNE.w syntaxerr
0002F3FA <AmiBlitz3.ab3@20386>   JSR get1bytemain
0002F3FE <AmiBlitz3.ab3@20387>   CMP.b #$22,D0
0002F402 <AmiBlitz3.ab3@20388>    BEQ.w JL_0_C25A
0002F404 <AmiBlitz3.ab3@20389>   TST.w D0
0002F408 <AmiBlitz3.ab3@20390>    BEQ.w syntaxerr
0002F40A <AmiBlitz3.ab3@20391>   MOVE.b D0,(A0)+
0002F40E <AmiBlitz3.ab3@20392> BRA.w JL_0_C242
0002F410 <AmiBlitz3.ab3@20395>   CLR.b (A0)
0002F412 <AmiBlitz3.ab3@20396> RTS
0002F414 <AmiBlitz3.ab3@20399>   TST.l D3
0002F416 <AmiBlitz3.ab3@20400> RTS
0002F41C <AmiBlitz3.ab3@20403>   LEA ptr_parameterstore,A0
0002F422 <AmiBlitz3.ab3@20404>   LEA namebuff2,A1
0002F424 <AmiBlitz3.ab3@20407>     MOVE.b (A0)+,D0
0002F428 <AmiBlitz3.ab3@20408>     BEQ.w JL_0_C27C
0002F42A <AmiBlitz3.ab3@20409>   CMP.b (A1)+,D0
0002F42E <AmiBlitz3.ab3@20410>   BEQ.w JL_0_C26E
0002F430 <AmiBlitz3.ab3@20411> RTS
0002F432 <AmiBlitz3.ab3@20414>   TST.b (A1)
0002F436 <AmiBlitz3.ab3@20415>   BNE.w JL_0_C284
0002F438 <AmiBlitz3.ab3@20416> RTS
0002F43C <AmiBlitz3.ab3@20419>   CMP.w #$1,D0
0002F43E <AmiBlitz3.ab3@20420> RTS
0002F442 <AmiBlitz3.ab3@20424>   CMP.w #$2E,D0                                            ;dodeftype
0002F446 <AmiBlitz3.ab3@20425>    BNE.w syntaxerr
0002F44A <AmiBlitz3.ab3@20426>   BSR.w getparameter2
0002F450 <AmiBlitz3.ab3@20427>   LEA newtypebase,A2
0002F454 <AmiBlitz3.ab3@20428>   BSR.w findtype
0002F458 <AmiBlitz3.ab3@20429>    BNE.w notypeerr
0002F45E <AmiBlitz3.ab3@20430>   TST.b declare
0002F462 <AmiBlitz3.ab3@20431>    BNE 'l1
0002F468 <AmiBlitz3.ab3@20432>   TST.b declare2
0002F46C <AmiBlitz3.ab3@20433>    BEQ 'l2
0002F474 <AmiBlitz3.ab3@20436>   MOVE.b #2,nowdeclare
0002F47A <AmiBlitz3.ab3@20440>   JSR reget
0002F47E <AmiBlitz3.ab3@20441>    BNE.w JL_0_C2B4
0002F484 <AmiBlitz3.ab3@20442>   MOVE.l A2,defaulttype
0002F486 <AmiBlitz3.ab3@20443> RTS
0002F48C <AmiBlitz3.ab3@20446>   MOVE.l defaulttype,-(A7)
0002F492 <AmiBlitz3.ab3@20447>   MOVE.l A2,defaulttype
0002F496 <AmiBlitz3.ab3@20450>   BSR.w getparameter
0002F49A <AmiBlitz3.ab3@20451>    BSR.w JL_0_8E3C
0002F49E <AmiBlitz3.ab3@20452>   CMP.w #$2C,D0
0002F4A2 <AmiBlitz3.ab3@20453>    BNE.w JL_0_C2D8
0002F4A8 <AmiBlitz3.ab3@20454>    JSR get1bytemain                                        ; was BSR.w
0002F4AC <AmiBlitz3.ab3@20455> BRA.w JL_0_C2C0
0002F4B2 <AmiBlitz3.ab3@20458>   MOVE.l (A7)+,defaulttype
0002F4B4 <AmiBlitz3.ab3@20459> RTS
0002F4B8 <AmiBlitz3.ab3@20463>   LEA $4(A5),A2                                            ;fehler function
0002F4BA <AmiBlitz3.ab3@20466>   MOVE.l A2,D0
0002F4BE <AmiBlitz3.ab3@20469>   BSR.w getparameter
0002F4C2 <AmiBlitz3.ab3@20470>   BSR.w JL_0_8E3C
0002F4C6 <AmiBlitz3.ab3@20471>   BSR.w calcvar
0002F4CA <AmiBlitz3.ab3@20472>   CMP.b #$7,D2
0002F4CE <AmiBlitz3.ab3@20473>    BNE.w mismatcherr
0002F4D2 <AmiBlitz3.ab3@20474>   MOVE.w varmode(PC),-(A7)
0002F4D6 <AmiBlitz3.ab3@20475>   CMP.w #$3D,D0
0002F4DA <AmiBlitz3.ab3@20476>    BNE.w syntaxerr
0002F4DE <AmiBlitz3.ab3@20477>   BTST #$F,D2
0002F4E2 <AmiBlitz3.ab3@20478>    BNE.w JL_0_C31C
0002F4E6 <AmiBlitz3.ab3@20479>   MOVE.w JL_0_C2E0(PC),D1
0002F4EA <AmiBlitz3.ab3@20480>   BSR.w pokewda5s
0002F4EC <AmiBlitz3.ab3@20481>   MOVE.w D3,D1
0002F4F0 <AmiBlitz3.ab3@20482>   BSR.w writeword
0002F4F4 <AmiBlitz3.ab3@20485>   MOVE.w L_0_C2E4(PC),D1
0002F4F8 <AmiBlitz3.ab3@20486>   BSR.w writeword
0002F4FE <AmiBlitz3.ab3@20487>   ADDQ.w #1,regnum
0002F500 <AmiBlitz3.ab3@20488>   MOVEQ.l #$03,D2
0002F504 <AmiBlitz3.ab3@20489>   BSR.w eval
0002F50A <AmiBlitz3.ab3@20490>   MOVE.l #$D000,D1
0002F510 <AmiBlitz3.ab3@20491>   MOVE.l d1,lastinstruction
0002F512 <AmiBlitz3.ab3@20492>   TST.w (A7)+
0002F516 <AmiBlitz3.ab3@20493>    BEQ.w Atokejsr
0002F518 <AmiBlitz3.ab3@20494>   ADDQ.w #1,D1
0002F51C <AmiBlitz3.ab3@20495> BRA.w Atokejsr
0002F51E <AmiBlitz3.ab3@20499>   MOVE.w D0,D1
0002F522 <AmiBlitz3.ab3@20500>    BPL.w syntaxerr
0002F526 <AmiBlitz3.ab3@20501>   BCLR #$F,D1
0002F52C <AmiBlitz3.ab3@20502>    JSR searchinstr
0002F530 <AmiBlitz3.ab3@20503>   MOVE.l $12(A2),D0
0002F534 <AmiBlitz3.ab3@20504>   TST.w -$2(A2,D0.L)
0002F538 <AmiBlitz3.ab3@20505>    BEQ.w freeerr
0002F53A <AmiBlitz3.ab3@20506>   MOVEQ.l #$02,D2
0002F53C <AmiBlitz3.ab3@20507>   MOVE.l A2,-(A7)
0002F540 <AmiBlitz3.ab3@20508>    BSR.w eval
0002F542 <AmiBlitz3.ab3@20509>   MOVEA.l (A7)+,A2
0002F548 <AmiBlitz3.ab3@20510>   MOVE.l A2,mymaxlib
0002F54C <AmiBlitz3.ab3@20511>   ADDA.l $12(A2),A2
0002F552 <AmiBlitz3.ab3@20512>   TST.b debugmode
0002F556 <AmiBlitz3.ab3@20513>    BEQ.w JL_0_C3A8
0002F55C <AmiBlitz3.ab3@20514>   MOVE.w regnum,D1
0002F55E <AmiBlitz3.ab3@20515>   LSL.w #8,D1
0002F560 <AmiBlitz3.ab3@20516>   LSL.w #1,D1
0002F564 <AmiBlitz3.ab3@20517>   ORI.w #$B07C,D1
0002F568 <AmiBlitz3.ab3@20518>    BSR.w writeword
0002F56C <AmiBlitz3.ab3@20519>   MOVE.w -$4(A2),D1
0002F570 <AmiBlitz3.ab3@20520>    BSR.w writeword
0002F576 <AmiBlitz3.ab3@20521>   MOVE.l maxchk,D1
0002F57A <AmiBlitz3.ab3@20522>    BSR.w writelong
0002F57C <AmiBlitz3.ab3@20523>   MOVE.l A2,-(A7)
0002F580 <AmiBlitz3.ab3@20524>   MOVE.w #$C30A,D1
0002F584 <AmiBlitz3.ab3@20525>    BSR.w Atokejsr
0002F586 <AmiBlitz3.ab3@20526>   MOVEA.l (A7)+,A2
0002F58A <AmiBlitz3.ab3@20529>   MOVE.w -$2(A2),D2
0002F590 <AmiBlitz3.ab3@20532>   MOVE.w regnum,D1
0002F596 <AmiBlitz3.ab3@20533>   OR.w lslimm,D1
0002F59A <AmiBlitz3.ab3@20534>   CMP.w #$8,D2
0002F59E <AmiBlitz3.ab3@20535>    BCS.w JL_0_C3CE
0002F5A2 <AmiBlitz3.ab3@20536>    BSR.w writeword
0002F5A4 <AmiBlitz3.ab3@20537>   SUBQ.w #8,D2
0002F5A8 <AmiBlitz3.ab3@20538>    BNE.w JL_0_C3AC
0002F5AC <AmiBlitz3.ab3@20539> BRA.w JL_0_C3DA
0002F5AE <AmiBlitz3.ab3@20542>   MOVE.w D2,D0
0002F5B0 <AmiBlitz3.ab3@20543>   LSL.w #8,D0
0002F5B2 <AmiBlitz3.ab3@20544>   LSL.w #1,D0
0002F5B4 <AmiBlitz3.ab3@20545>   OR.w D0,D1
0002F5B8 <AmiBlitz3.ab3@20546>   BSR.w writeword
0002F5BA <AmiBlitz3.ab3@20549> RTS
0002F5BE <AmiBlitz3.ab3@20554>   Dc.b $26,$6D,$00,$00                                     ;MOVEA.L $0000(A5),A3
0002F5C0 <AmiBlitz3.ab3@20555>   Dc.b $D6,$C0                                             ;ADDA.W  D0,A3
0002F5C4 <AmiBlitz3.ab3@20559> mymaxlib:  Ds.l 1
0002F5C8 <AmiBlitz3.ab3@20563>   BSR.w JL_0_C340
0002F5CC <AmiBlitz3.ab3@20564>   LEA free(PC),A0
0002F5D0 <AmiBlitz3.ab3@20565>   LEA freef(PC),A1
0002F5D6 <AmiBlitz3.ab3@20566>   MOVE.w -$6(A2),$2(A0)
0002F5DA <AmiBlitz3.ab3@20567>   BSR.w pokecode
0002F5DE <AmiBlitz3.ab3@20568>   MOVE.l -$A(A2),D1
0002F5E2 <AmiBlitz3.ab3@20571>   BEQ.w nosuperr
0002F5E6 <AmiBlitz3.ab3@20572>   MOVEA.l mymaxlib(PC),A2
0002F5EA <AmiBlitz3.ab3@20573> BRA.w Amakelibsub
0002F5EE <AmiBlitz3.ab3@20578>   BSR.w JL_0_C340
0002F5F4 <AmiBlitz3.ab3@20579>   LEA use,A0
0002F5FA <AmiBlitz3.ab3@20580>   LEA usef,A1
0002F600 <AmiBlitz3.ab3@20581>   MOVE.w -$6(A2),$2(A0)
0002F606 <AmiBlitz3.ab3@20582>   MOVE.w -$6(A2),-$2(A1)
0002F60A <AmiBlitz3.ab3@20583>   ADDQ.w #4,-$2(A1)
0002F60E <AmiBlitz3.ab3@20584>   BSR.w pokecode
0002F612 <AmiBlitz3.ab3@20585>   MOVE.l -$E(A2),D1
0002F616 <AmiBlitz3.ab3@20586> BRA.w maxjsr
0002F61C <AmiBlitz3.ab3@20590>   JSR get1bytemain
0002F622 <AmiBlitz3.ab3@20594>   MOVE.l firstiff,D0
0002F626 <AmiBlitz3.ab3@20595>    BEQ.w noiferr
0002F628 <AmiBlitz3.ab3@20596>   MOVEA.l D0,A0
0002F62E <AmiBlitz3.ab3@20597>   CMPI.b #$1,$D(A0)
0002F632 <AmiBlitz3.ab3@20598>    BEQ.w illelseerr
0002F636 <AmiBlitz3.ab3@20599>   MOVE.w #$6000,D1
0002F63C <AmiBlitz3.ab3@20601>     TST.b fast
0002F640 <AmiBlitz3.ab3@20602>     BEQ 'l1
0002F646 <AmiBlitz3.ab3@20603>     OR.l #$ff,d1
0002F64A <AmiBlitz3.ab3@20604>     BSR writeword
0002F64C <AmiBlitz3.ab3@20608>   SWAP D1
0002F650 <AmiBlitz3.ab3@20609>   BSR.w writelong
0002F652 <AmiBlitz3.ab3@20610>   MOVEQ.l #$00,D1
0002F656 <AmiBlitz3.ab3@20611>   BSR.w AJL_0_D7B8
0002F65E <AmiBlitz3.ab3@20612>   MOVE.l destpointer,$8(A0)
0002F662 <AmiBlitz3.ab3@20613> BRA.w do_then
0002F668 <AmiBlitz3.ab3@20617>   LEA ptr_parameterstore,A0
0002F66A <AmiBlitz3.ab3@20618>   MOVE.l A0,-(A7)
0002F66E <AmiBlitz3.ab3@20619>   BSR.w JL_0_C23A
0002F672 <AmiBlitz3.ab3@20620> BRA.w handle_compileerror
0002F676 <AmiBlitz3.ab3@20624>   BSR.w JL_0_BF6A
0002F678 <AmiBlitz3.ab3@20625>   MOVEQ.l #$05,D1
0002F682 <AmiBlitz3.ab3@20627>   MOVE.w oldqflag,instringon
0002F688 <AmiBlitz3.ab3@20628>   MOVEA.l lastsourcepos,A5
0002F68E <AmiBlitz3.ab3@20629>   LEA AJL_0_C25E,A0
0002F692 <AmiBlitz3.ab3@20630> BRA.w JL_0_C4B4
0002F698 <AmiBlitz3.ab3@20634>   LEA ptr_parameterstore,A0
0002F69C <AmiBlitz3.ab3@20635>   BSR.w JL_0_C23A
0002F6A2 <AmiBlitz3.ab3@20636>   JSR get1bytemain
0002F6A6 <AmiBlitz3.ab3@20637>   BSR.w JL_0_CCA8
0002F6AC <AmiBlitz3.ab3@20638>   LEA namebuff2,A0
0002F6B0 <AmiBlitz3.ab3@20639>   BSR.w JL_0_C23A
0002F6B6 <AmiBlitz3.ab3@20640>   LEA AJL_0_C262,A0
0002F6B8 <AmiBlitz3.ab3@20643>   LSL.w #2,D1
0002F6BE <AmiBlitz3.ab3@20644>   LEA CIF_branches,A1
0002F6C2 <AmiBlitz3.ab3@20645>   MOVE.l $0(A1,D1.W),-(A7)
0002F6C4 <AmiBlitz3.ab3@20646>   MOVEQ.l #-$01,D1
0002F6C6 <AmiBlitz3.ab3@20649>   JSR (A0)
0002F6C8 <AmiBlitz3.ab3@20651>   MOVEA.l (A7)+,A1
0002F6CA <AmiBlitz3.ab3@20653> JMP (A1)
0002F6CE <AmiBlitz3.ab3@20657>   BEQ.w JL_0_C4F6
0002F6D2 <AmiBlitz3.ab3@20658> BRA.w JL_0_C4F4
0002F6D6 <AmiBlitz3.ab3@20662>   BNE.w JL_0_C4F6
0002F6DA <AmiBlitz3.ab3@20663> BRA.w JL_0_C4F4
0002F6DE <AmiBlitz3.ab3@20667>   BLT.w JL_0_C4F6
0002F6E2 <AmiBlitz3.ab3@20668> BRA.w JL_0_C4F4
0002F6E6 <AmiBlitz3.ab3@20672>   BLE.w JL_0_C4F6
0002F6EA <AmiBlitz3.ab3@20673> BRA.w JL_0_C4F4
0002F6EE <AmiBlitz3.ab3@20677>   BGT.w JL_0_C4F6
0002F6F2 <AmiBlitz3.ab3@20678> BRA.w JL_0_C4F4
0002F6F6 <AmiBlitz3.ab3@20682>   BGE.w JL_0_C4F6
0002F6F8 <AmiBlitz3.ab3@20685>   MOVEQ.l #$00,D1
0002F6FE <AmiBlitz3.ab3@20688>   MOVEA.l concomsp,A0
0002F704 <AmiBlitz3.ab3@20689>   MOVE.w skipcode,(A0)+
0002F70A <AmiBlitz3.ab3@20690>   MOVE.l A0,concomsp
0002F710 <AmiBlitz3.ab3@20691>   MOVE.w D1,skipcode
0002F716 <AmiBlitz3.ab3@20692>   JSR get1bytemain
0002F71A <AmiBlitz3.ab3@20693>    BNE.w syntaxerr
0002F720 <AmiBlitz3.ab3@20694> JMP bakup
0002F728 <AmiBlitz3.ab3@20698> rescode:   Dc.b $2B,$7c,$00,$00,$00,$00 :   Ds.w 1         ;MOVE.L  #$00000000,$0000(A5)
0002F72C <AmiBlitz3.ab3@20699> rescode2:  Dc.b $2B,$40                 :   Ds.w 1         ;MOVE.L  D0,$0000(A5)
0002F730 <AmiBlitz3.ab3@20706>   MOVE.w #$FC17,D1
0002F736 <AmiBlitz3.ab3@20707>   JSR uselib
0002F73C <AmiBlitz3.ab3@20709>   JSR reget
0002F740 <AmiBlitz3.ab3@20710>    BEQ.w do_Restore__resbeg
0002F744 <AmiBlitz3.ab3@20711>   BSR.w JL_0_AE22                                          ;get label name!
0002F748 <AmiBlitz3.ab3@20712>   MOVE.w rescode(PC),D1
0002F74C <AmiBlitz3.ab3@20713>   BSR.w writeword
0002F752 <AmiBlitz3.ab3@20714>   JSR addoff                                               ;add offset
0002F756 <AmiBlitz3.ab3@20715>   MOVE.l $C(A2),D1
0002F75A <AmiBlitz3.ab3@20716>   BSR.w writelong
0002F75E <AmiBlitz3.ab3@20717>   MOVE.w rescode+6(PC),D1
0002F762 <AmiBlitz3.ab3@20718>   BSR.w writeword
0002F766 <AmiBlitz3.ab3@20719>   MOVE.l $4(A2),D1                                         ;is it outstanding?
0002F76A <AmiBlitz3.ab3@20720>   BEQ.w do_Restore__no
0002F76C <AmiBlitz3.ab3@20722>   MOVEA.l D1,A1
0002F770 <AmiBlitz3.ab3@20723>   ADDQ.l #1,$4(A1)                                         ;make odd - flag for data reference.
0002F772 <AmiBlitz3.ab3@20724> RTS
0002F774 <AmiBlitz3.ab3@20729> RTS
0002F778 <AmiBlitz3.ab3@20732>   MOVE.w #$CD00,D1
0002F77E <AmiBlitz3.ab3@20733>   JSR Atokejsr
0002F782 <AmiBlitz3.ab3@20734>   MOVE.l rescode2(PC),D1
0002F788 <AmiBlitz3.ab3@20735> JMP writelong
0002F78C <AmiBlitz3.ab3@20739>   MOVE.w #$FC17,D1
0002F792 <AmiBlitz3.ab3@20740>   JSR uselib
0002F798 <AmiBlitz3.ab3@20743>   MOVE.l dataget,D1
0002F79C <AmiBlitz3.ab3@20744>   BSR.w writelong
0002F7A0 <AmiBlitz3.ab3@20745>   BSR.w getparameter
0002F7A4 <AmiBlitz3.ab3@20746>   BSR.w JL_0_8E3C
0002F7A8 <AmiBlitz3.ab3@20747>   BSR.w calcvar
0002F7AC <AmiBlitz3.ab3@20748>   BTST #$E,D2
0002F7B0 <AmiBlitz3.ab3@20749>    BEQ.w JL_0_C5A6
0002F7B4 <AmiBlitz3.ab3@20750>   MOVE.b #$6,D2
0002F7B6 <AmiBlitz3.ab3@20753>   TST.b D2
0002F7BA <AmiBlitz3.ab3@20754>    BEQ.w noleterr
0002F7C0 <AmiBlitz3.ab3@20755>   TST.b debugmode
0002F7C4 <AmiBlitz3.ab3@20756>    BEQ.w JL_0_C5D0
0002F7C8 <AmiBlitz3.ab3@20757>   MOVE.w #$7000,D1
0002F7CA <AmiBlitz3.ab3@20758>   MOVE.b D2,D1
0002F7CE <AmiBlitz3.ab3@20759>   ANDI.b #$F,D1
0002F7D2 <AmiBlitz3.ab3@20760>   BSR.w writeword
0002F7D6 <AmiBlitz3.ab3@20761>   MOVE.w #$C310,D1
0002F7D8 <AmiBlitz3.ab3@20762>   MOVE.w D2,-(A7)
0002F7DC <AmiBlitz3.ab3@20763>   BSR.w Atokejsr
0002F7DE <AmiBlitz3.ab3@20764>   MOVE.w (A7)+,D2
0002F7E2 <AmiBlitz3.ab3@20767>   CMP.b #$7,D2
0002F7E6 <AmiBlitz3.ab3@20768>    BEQ.w JL_0_C684
0002F7EA <AmiBlitz3.ab3@20769>   CMP.b #$1,D2
0002F7EE <AmiBlitz3.ab3@20770>    BNE.w JL_0_C62A
0002F7F4 <AmiBlitz3.ab3@20771>   LEA dataletb2,A0
0002F7FA <AmiBlitz3.ab3@20772>   LEA dataletb2f,A1
0002F7FE <AmiBlitz3.ab3@20773>   BTST #$F,D2
0002F802 <AmiBlitz3.ab3@20774>    BEQ.w JL_0_C5FC
0002F806 <AmiBlitz3.ab3@20775>   BSR.w pokecode
0002F80A <AmiBlitz3.ab3@20776> BRA.w JL_0_C668
0002F810 <AmiBlitz3.ab3@20779>   LEA dataletb,A0
0002F816 <AmiBlitz3.ab3@20780>   LEA dataletbf,A1
0002F81C <AmiBlitz3.ab3@20781>   TST.w varmode
0002F820 <AmiBlitz3.ab3@20782>    BEQ.w JL_0_C61E
0002F826 <AmiBlitz3.ab3@20783>   LEA dataletbl,A0
0002F82C <AmiBlitz3.ab3@20784>   LEA dataletblf,A1
0002F830 <AmiBlitz3.ab3@20787>   MOVE.w D3,$4(A0)
0002F834 <AmiBlitz3.ab3@20788>   BSR.w pokecode
0002F838 <AmiBlitz3.ab3@20789> BRA.w JL_0_C668
0002F83E <AmiBlitz3.ab3@20792>   LEA dataletw,A0
0002F842 <AmiBlitz3.ab3@20793>   CMP.b #$3,D2
0002F846 <AmiBlitz3.ab3@20794>    BCS.w JL_0_C63E
0002F84C <AmiBlitz3.ab3@20795>   LEA dataletl,A0
0002F850 <AmiBlitz3.ab3@20798>   BTST #$F,D2
0002F854 <AmiBlitz3.ab3@20799>    BEQ.w JL_0_C652
0002F858 <AmiBlitz3.ab3@20800>   MOVE.w $4(A0),D1
0002F85C <AmiBlitz3.ab3@20801>    BSR.w writeword
0002F860 <AmiBlitz3.ab3@20802> BRA.w JL_0_C668
0002F866 <AmiBlitz3.ab3@20805>   TST.w varmode
0002F86A <AmiBlitz3.ab3@20806>    BEQ.w JL_0_C65E
0002F86C <AmiBlitz3.ab3@20807>   ADDQ.w #6,A0
0002F870 <AmiBlitz3.ab3@20810>   MOVE.w D3,$2(A0)
0002F872 <AmiBlitz3.ab3@20811>   MOVE.l (A0),D1
0002F876 <AmiBlitz3.ab3@20812>   BSR.w writelong
0002F87C <AmiBlitz3.ab3@20815>   MOVE.l dataput,D1
0002F880 <AmiBlitz3.ab3@20816>    BSR.w writelong
0002F884 <AmiBlitz3.ab3@20817>   CMP.w #$2C,D0
0002F888 <AmiBlitz3.ab3@20818>    BEQ.w JL_0_C67C
0002F88A <AmiBlitz3.ab3@20819> RTS
0002F890 <AmiBlitz3.ab3@20822>   JSR get1bytemain
0002F894 <AmiBlitz3.ab3@20823> BRA.w JL_0_C584
0002F89A <AmiBlitz3.ab3@20827>   MOVE.w stlenget,D1
0002F89E <AmiBlitz3.ab3@20828>    BSR.w writeword
0002F8A2 <AmiBlitz3.ab3@20829>   BTST #$F,D2
0002F8A6 <AmiBlitz3.ab3@20830>    BNE.w JL_0_C6C0
0002F8AC <AmiBlitz3.ab3@20831>   TST.w varmode
0002F8B0 <AmiBlitz3.ab3@20832>    BEQ.w JL_0_C6B0
0002F8B6 <AmiBlitz3.ab3@20833>   MOVE.w D3,leaampl+2
0002F8BC <AmiBlitz3.ab3@20834>   MOVE.l leaampl,D1
0002F8C0 <AmiBlitz3.ab3@20835> BRA.w JL_0_C6BC
0002F8C6 <AmiBlitz3.ab3@20838>   MOVE.w D3,leaamp+2
0002F8CC <AmiBlitz3.ab3@20839>   MOVE.l leaamp,D1
0002F8D0 <AmiBlitz3.ab3@20842>   BSR.w writelong
0002F8D4 <AmiBlitz3.ab3@20845>   MOVE.w #$C701,D1
0002F8DA <AmiBlitz3.ab3@20846>   MOVE.w varmode,D2
0002F8DE <AmiBlitz3.ab3@20847>    BEQ.w JL_0_C6D0
0002F8E0 <AmiBlitz3.ab3@20848>   SUBQ.w #1,D1
0002F8E4 <AmiBlitz3.ab3@20851>   BSR.w Atokejsr
0002F8EC <AmiBlitz3.ab3@20852>   MOVE.w #$FFFF,lasta6
0002F8F2 <AmiBlitz3.ab3@20853>   LEA stalign,A0
0002F8F8 <AmiBlitz3.ab3@20854>   LEA stalignf,A1
0002F8FC <AmiBlitz3.ab3@20855>   BSR.w pokecode
0002F900 <AmiBlitz3.ab3@20856> BRA.w JL_0_C668
0002F904 <AmiBlitz3.ab3@20860>   CMP.w #$2E,D0                                            ;definecode 'lb 'lw 'll
0002F908 <AmiBlitz3.ab3@20861>    BNE.w JL_0_C720
0002F90E <AmiBlitz3.ab3@20862>   JSR get1bytemain
0002F912 <AmiBlitz3.ab3@20863>   CMP.w #$77,D0
0002F916 <AmiBlitz3.ab3@20864>    BEQ.w JL_0_C71C
0002F91A <AmiBlitz3.ab3@20865>   CMP.w #$62,D0
0002F91E <AmiBlitz3.ab3@20866>    BEQ.w JL_0_C718
0002F922 <AmiBlitz3.ab3@20867>   CMP.w #"s",d0
0002F926 <AmiBlitz3.ab3@20868>   BEQ single3
0002F92A <AmiBlitz3.ab3@20869>   CMP.w #"d",d0
0002F92E <AmiBlitz3.ab3@20870>   BEQ double3
0002F932 <AmiBlitz3.ab3@20871>   CMP.w #$6C,D0
0002F936 <AmiBlitz3.ab3@20872>    BNE.w syntaxerr
0002F938 <AmiBlitz3.ab3@20873>   MOVEQ.l #$02,D1
0002F93A <AmiBlitz3.ab3@20874> RTS
0002F942 <AmiBlitz3.ab3@20878>   MOVE.b #1,iee
0002F944 <AmiBlitz3.ab3@20879>   MOVEQ.l #$3,d1
0002F946 <AmiBlitz3.ab3@20880> RTS
0002F94E <AmiBlitz3.ab3@20884>   MOVE.b #1,iee
0002F950 <AmiBlitz3.ab3@20885>   MOVEQ.l #$4,d1
0002F952 <AmiBlitz3.ab3@20886> RTS
0002F954 <AmiBlitz3.ab3@20890>   MOVEQ.l #$00,D1
0002F956 <AmiBlitz3.ab3@20891> RTS
0002F958 <AmiBlitz3.ab3@20895>   MOVEQ.l #$01,D1
0002F95A <AmiBlitz3.ab3@20896> RTS
0002F95C <AmiBlitz3.ab3@20900>   MOVEQ.l #$01,D1
0002F962 <AmiBlitz3.ab3@20901> JMP bakup
0002F966 <AmiBlitz3.ab3@20905>   BSR.w JL_0_C6F0
0002F968 <AmiBlitz3.ab3@20907>   MOVE.w D1,-(A7)
0002F96C <AmiBlitz3.ab3@20908>    BSR.w AJL_0_BF6E
0002F970 <AmiBlitz3.ab3@20909>   CMP.w #$2C,D0
0002F974 <AmiBlitz3.ab3@20910>    BNE.w syntaxerr
0002F976 <AmiBlitz3.ab3@20911>   MOVE.l D3,-(A7)
0002F97A <AmiBlitz3.ab3@20912>    BSR.w AJL_0_BF6E
0002F97C <AmiBlitz3.ab3@20913>   MOVE.l D3,D1
0002F97E <AmiBlitz3.ab3@20914>   MOVE.l (A7)+,D3
0002F980 <AmiBlitz3.ab3@20915>   MOVE.w (A7)+,D2
0002F984 <AmiBlitz3.ab3@20916>    BEQ.w JL_0_C774
0002F988 <AmiBlitz3.ab3@20920>   CMP.w #$1,D2
0002F98C <AmiBlitz3.ab3@20921>    BEQ.w JL_0_C768
0002F98E <AmiBlitz3.ab3@20924>   SWAP D1
0002F992 <AmiBlitz3.ab3@20925>    BSR.w writeword
0002F994 <AmiBlitz3.ab3@20926>   SWAP D1
0002F998 <AmiBlitz3.ab3@20927>    BSR.w writeword
0002F99A <AmiBlitz3.ab3@20928>   SUBQ.l #1,D3
0002F99E <AmiBlitz3.ab3@20929>    BNE.w JL_0_C754
0002F9A0 <AmiBlitz3.ab3@20930> RTS
0002F9A4 <AmiBlitz3.ab3@20933>    BSR.w writeword
0002F9A6 <AmiBlitz3.ab3@20934>   SUBQ.l #1,D3
0002F9AA <AmiBlitz3.ab3@20935>    BNE.w JL_0_C768
0002F9AC <AmiBlitz3.ab3@20936> RTS
0002F9B0 <AmiBlitz3.ab3@20939>    BSR.w writebyte
0002F9B2 <AmiBlitz3.ab3@20940>   SUBQ.l #1,D3
0002F9B6 <AmiBlitz3.ab3@20941>    BNE.w JL_0_C774
0002F9B8 <AmiBlitz3.ab3@20942> RTS
0002F9BC <AmiBlitz3.ab3@20946>   BSR.w JL_0_C6F0                                          ;definestorage
0002F9BE <AmiBlitz3.ab3@20947>   MOVE.w D1,-(A7)
0002F9C2 <AmiBlitz3.ab3@20948>   BSR.w AJL_0_BF6E
0002F9C4 <AmiBlitz3.ab3@20949>   MOVE.w (A7)+,D1
0002F9C6 <AmiBlitz3.ab3@20950>   LSL.l D1,D3
0002F9C8 <AmiBlitz3.ab3@20951>   MOVE.l d3,d0
0002F9CC <AmiBlitz3.ab3@20952>   BEQ 'll5
0002F9CE <AmiBlitz3.ab3@20953>   MOVEQ #0,d1
0002F9D4 <AmiBlitz3.ab3@20956>     JSR writebyte
0002F9D6 <AmiBlitz3.ab3@20957>     SUBQ.l #1,d3
0002F9DA <AmiBlitz3.ab3@20958>   BNE.s 'll10
0002F9DC <AmiBlitz3.ab3@20961> RTS
0002F9DE <AmiBlitz3.ab3@20965>   MOVE.w D0,-(A7)
0002F9E4 <AmiBlitz3.ab3@20966>   LEA dummyasm,A0
0002F9EA <AmiBlitz3.ab3@20967>   MOVEA.l destpointer,A1
0002F9F4 <AmiBlitz3.ab3@20968>   MOVE.w asmlen2,asmlen
0002F9FA <AmiBlitz3.ab3@20969>   JSR insasm
0002F9FC <AmiBlitz3.ab3@20970>   MOVE.w (A7)+,D0
0002F9FE <AmiBlitz3.ab3@20971> RTS
0002FA02 <AmiBlitz3.ab3@20975>   BSR.w JL_0_C6F0
0002FA0C <AmiBlitz3.ab3@20977>   MOVE.l #ptr_parameterstore,asmbuff
0002FA0E <AmiBlitz3.ab3@20978>   TST.w D1
0002FA12 <AmiBlitz3.ab3@20979>    BEQ.w JL_0_C7EE
0002FA16 <AmiBlitz3.ab3@20980>   CMP.w #$1,D1
0002FA1A <AmiBlitz3.ab3@20981>    BEQ.w JL_0_C844
0002FA1E <AmiBlitz3.ab3@20982>   CMP.w #$2,d1
0002FA22 <AmiBlitz3.ab3@20983>    BEQ long
0002FA26 <AmiBlitz3.ab3@20984>   CMP.w #$3,d1
0002FA2A <AmiBlitz3.ab3@20985>    BEQ single
0002FA2C <AmiBlitz3.ab3@20986>    MOVEQ.l #$0d,D3
0002FA32 <AmiBlitz3.ab3@20992>    JSR asmconst
0002FA36 <AmiBlitz3.ab3@20993>    BSR.w JL_0_C796
0002FA3A <AmiBlitz3.ab3@20994>    BSR.w writelong
0002FA3E <AmiBlitz3.ab3@20995>    BSR   writelong
0002FA42 <AmiBlitz3.ab3@20996>   CMP.w #$2C,D0
0002FA46 <AmiBlitz3.ab3@20997>    BEQ.w JL_0_C7D8b
0002FA48 <AmiBlitz3.ab3@20998> RTS
0002FA4A <AmiBlitz3.ab3@21002>   MOVEQ.l #$0B,D3
0002FA52 <AmiBlitz3.ab3@21006>   MOVE.b #1,_dcb
0002FA58 <AmiBlitz3.ab3@21009>   JSR asmconst
0002FA5E <AmiBlitz3.ab3@21010>   CLR.b _dcb
0002FA62 <AmiBlitz3.ab3@21011>   BSR.w JL_0_C796
0002FA66 <AmiBlitz3.ab3@21012>   BSR writebyte
0002FA6A <AmiBlitz3.ab3@21013>   BSR writebyte
0002FA6E <AmiBlitz3.ab3@21014>   BSR writebyte                                            ;long
0002FA72 <AmiBlitz3.ab3@21015>   BSR writebyte
0002FA76 <AmiBlitz3.ab3@21016>   CMP.w #$2C,D0
0002FA7A <AmiBlitz3.ab3@21017>    BEQ.w JL_0_C7D8
0002FA7C <AmiBlitz3.ab3@21018> RTS
0002FA7E <AmiBlitz3.ab3@21022>   MOVEQ.l #$0c,D3
0002FA86 <AmiBlitz3.ab3@21026>   MOVE.b #1,_dcb
0002FA8C <AmiBlitz3.ab3@21029>   JSR asmconst
0002FA92 <AmiBlitz3.ab3@21030>   CLR.b _dcb
0002FA96 <AmiBlitz3.ab3@21031>   BSR.w JL_0_C796
0002FA9A <AmiBlitz3.ab3@21032>   BSR.w writebyte
0002FA9E <AmiBlitz3.ab3@21033>   BSR.w writebyte
0002FAA2 <AmiBlitz3.ab3@21034>   BSR.w writebyte
0002FAA6 <AmiBlitz3.ab3@21035>   BSR.w writebyte
0002FAAA <AmiBlitz3.ab3@21036>   CMP.w #$2C,D0
0002FAAE <AmiBlitz3.ab3@21037>    BEQ.w JL_0_C7D8a
0002FAB0 <AmiBlitz3.ab3@21038> RTS
0002FAB2 <AmiBlitz3.ab3@21043>   MOVEQ.l #$11,D3
0002FAB8 <AmiBlitz3.ab3@21046>   JSR get1bytemain
0002FABC <AmiBlitz3.ab3@21047>   CMP.w #$22,D0
0002FAC0 <AmiBlitz3.ab3@21048>    BNE.w JL_0_C81E
0002FAC2 <AmiBlitz3.ab3@21051>   MOVE.b (a5)+,d0                                          ;bsr.w get1bytemain ascii dc.b
0002FAC6 <AmiBlitz3.ab3@21052>    BEQ.w syntaxerr
0002FACA <AmiBlitz3.ab3@21053>   CMP.w #$22,D0
0002FACE <AmiBlitz3.ab3@21054>    BEQ.w JL_0_C816
0002FAD2 <AmiBlitz3.ab3@21055>   CMP.b #"\",d0
0002FAD6 <AmiBlitz3.ab3@21056>    BNE 'n1
0002FADA <AmiBlitz3.ab3@21057>   CMP.b #"\",(a5)
0002FADE <AmiBlitz3.ab3@21058>    BEQ 'do1
0002FAE0 <AmiBlitz3.ab3@21061>   MOVE.w D0,D1
0002FAE4 <AmiBlitz3.ab3@21062>   BSR.w writebyte
0002FAE8 <AmiBlitz3.ab3@21063> BRA.w JL_0_C7FC
0002FAF0 <AmiBlitz3.ab3@21066>   CMP.l #"__DA",1(a5)
0002FAF4 <AmiBlitz3.ab3@21067>    BNE 'nodate1
0002FAFC <AmiBlitz3.ab3@21068>   CMP.l #"TE__",5(a5)
0002FB00 <AmiBlitz3.ab3@21069>    BEQ 'c1
0002FB08 <AmiBlitz3.ab3@21070>   CMP.l #"TE_G",5(a5)
0002FB0C <AmiBlitz3.ab3@21071>    BNE 'nodate1
0002FB14 <AmiBlitz3.ab3@21072>   CMP.l #"ER__",9(a5)
0002FB18 <AmiBlitz3.ab3@21073>    BNE 'nodate1
0002FB1E <AmiBlitz3.ab3@21074>   JSR compiledatedc_ger
0002FB22 <AmiBlitz3.ab3@21075> BRA 'n1
0002FB28 <AmiBlitz3.ab3@21078>   JSR compiledatedc
0002FB2C <AmiBlitz3.ab3@21079> BRA 'n1
0002FB34 <AmiBlitz3.ab3@21082>   CMP.l #"__VE",1(a5)
0002FB38 <AmiBlitz3.ab3@21083>    BNE 'n1
0002FB3E <AmiBlitz3.ab3@21084>   CMP.w #"R_",5(a5)
0002FB42 <AmiBlitz3.ab3@21085>    BNE 'n1
0002FB48 <AmiBlitz3.ab3@21086>   JSR version_string_dc
0002FB4C <AmiBlitz3.ab3@21087> BRA.w JL_0_C7FC
0002FB52 <AmiBlitz3.ab3@21091>   CLR.w instringon
0002FB58 <AmiBlitz3.ab3@21092>   JSR get1bytemain
0002FB5C <AmiBlitz3.ab3@21093> BRA.w JL_0_C83A
0002FB66 <AmiBlitz3.ab3@21098>    MOVE.w oldqflag,instringon
0002FB6C <AmiBlitz3.ab3@21099>   MOVEA.l lastsourcepos,A5
0002FB72 <AmiBlitz3.ab3@21100>    JSR asmconst
0002FB78 <AmiBlitz3.ab3@21101>   SUBQ.l #1,destpointer
0002FB7C <AmiBlitz3.ab3@21102>    BSR.w JL_0_C796
0002FB82 <AmiBlitz3.ab3@21103>   ADDQ.l #1,destpointer
0002FB86 <AmiBlitz3.ab3@21104>    BSR.w writebyte
0002FB8A <AmiBlitz3.ab3@21107>   CMP.w #$2C,D0
0002FB8E <AmiBlitz3.ab3@21108>    BEQ.w JL_0_C7F0
0002FB90 <AmiBlitz3.ab3@21109> RTS
0002FB92 <AmiBlitz3.ab3@21113>   MOVEQ.l #$10,D3
0002FB9A <AmiBlitz3.ab3@21119>   MOVE.b #1,_dcb
0002FBA0 <AmiBlitz3.ab3@21120>   JSR asmconst
0002FBA6 <AmiBlitz3.ab3@21121>   CLR.b _dcb
0002FBAA <AmiBlitz3.ab3@21122>   BSR.w JL_0_C796
0002FBAE <AmiBlitz3.ab3@21123>   BSR.w writebyte
0002FBB2 <AmiBlitz3.ab3@21124>   BSR.w writebyte
0002FBB6 <AmiBlitz3.ab3@21125>   CMP.w #$2C,D0
0002FBBA <AmiBlitz3.ab3@21126>    BEQ.w JL_0_C84A
0002FBBC <AmiBlitz3.ab3@21127> RTS
0002FBC2 <AmiBlitz3.ab3@21131>   ADDQ.l #3,destpointer
0002FBCA <AmiBlitz3.ab3@21132>   ANDI.w #$FFFC,destpointer+2
0002FBCC <AmiBlitz3.ab3@21133> RTS
0002FBD2 <AmiBlitz3.ab3@21137>   ADDQ.l #7,destpointer
0002FBDA <AmiBlitz3.ab3@21138>   ANDI.w #$FFF8,destpointer+2
0002FBDC <AmiBlitz3.ab3@21139> RTS
0002FBE2 <AmiBlitz3.ab3@21143>   ADDQ.l #1,destpointer                                    ;even
0002FBEA <AmiBlitz3.ab3@21144>   BCLR #$0,destpointer+3
0002FBEC <AmiBlitz3.ab3@21145> RTS
0002FBEE <AmiBlitz3.ab3@21148> datasize: Ds.w 1
0002FBF4 <AmiBlitz3.ab3@21158>   TST.b debugmode
0002FBF8 <AmiBlitz3.ab3@21159>   BEQ.w pdt__skip
0002FBFC <AmiBlitz3.ab3@21160>   MOVE.w #$4420,D0                                         ;'D '
0002FC00 <AmiBlitz3.ab3@21161>   MOVE.b datasize+1(PC),D0
0002FC04 <AmiBlitz3.ab3@21162> BRA.w JL_0_C1E6
0002FC06 <AmiBlitz3.ab3@21165> RTS
0002FC0A <AmiBlitz3.ab3@21169>   MOVE.w #$FC17,D1
0002FC10 <AmiBlitz3.ab3@21170>    JSR uselib
0002FC1A <AmiBlitz3.ab3@21172>    MOVE.w oldqflag,instringon
0002FC20 <AmiBlitz3.ab3@21173>   MOVEA.l lastsourcepos,A5
0002FC26 <AmiBlitz3.ab3@21174>    JSR AJL_0_498A
0002FC2C <AmiBlitz3.ab3@21175>   MOVE.w D1,datasize
0002FC30 <AmiBlitz3.ab3@21176>   CMP.w #$7,D1
0002FC34 <AmiBlitz3.ab3@21177>    BEQ.w JL_0_C944
0002FC36 <AmiBlitz3.ab3@21178>   MOVE.w D1,-(A7)
0002FC3A <AmiBlitz3.ab3@21181>   BSR.w pdt
0002FC3C <AmiBlitz3.ab3@21182>   MOVE.w (A7),D2
0002FC40 <AmiBlitz3.ab3@21183>    BSR.w JL_0_B1D8
0002FC42 <AmiBlitz3.ab3@21184>   CMP.w (A7),D2                                            ;datamode
0002FC46 <AmiBlitz3.ab3@21185>    BEQ.w JL_0_C920
0002FC48 <AmiBlitz3.ab3@21186>   MOVE.w D2,D1
0002FC4A <AmiBlitz3.ab3@21187>   MOVE.w (A7),D2
0002FC4E <AmiBlitz3.ab3@21188>   CMP.w #$2,D2
0002FC52 <AmiBlitz3.ab3@21189>    BNE.w JL_0_C8FE
0002FC56 <AmiBlitz3.ab3@21190>   CMP.w #$3,D1
0002FC5A <AmiBlitz3.ab3@21191>    BNE.w baddaterr
0002FC60 <AmiBlitz3.ab3@21192>   CMP.l #$10000,D3
0002FC64 <AmiBlitz3.ab3@21193>    BCC.w baddaterr
0002FC68 <AmiBlitz3.ab3@21194> BRA.w JL_0_C920
0002FC6C <AmiBlitz3.ab3@21197>   CMP.w #$1,D2
0002FC70 <AmiBlitz3.ab3@21198>    BNE.w JL_0_C91C
0002FC74 <AmiBlitz3.ab3@21199>   CMP.w #$2,D1
0002FC78 <AmiBlitz3.ab3@21200>    BNE.w baddaterr
0002FC7E <AmiBlitz3.ab3@21201>   CMP.l #$100,D3
0002FC82 <AmiBlitz3.ab3@21202>    BCC.w baddaterr
0002FC86 <AmiBlitz3.ab3@21203> BRA.w JL_0_C920
0002FC8A <AmiBlitz3.ab3@21206> BRA.w baddaterr
0002FC8E <AmiBlitz3.ab3@21209>   CMP.w #$3,D2
0002FC92 <AmiBlitz3.ab3@21210>   BCC.w JL_0_C930
0002FC96 <AmiBlitz3.ab3@21211>   BSR.w JL_0_C1E6
0002FC9A <AmiBlitz3.ab3@21212> BRA.w JL_0_C934
0002FCA0 <AmiBlitz3.ab3@21215>   TST.b iee
0002FCA4 <AmiBlitz3.ab3@21216>   BEQ 'old
0002FCA8 <AmiBlitz3.ab3@21217>   CMP.b #5,d2
0002FCAC <AmiBlitz3.ab3@21218>   BNE 'old
0002FCB0 <AmiBlitz3.ab3@21219>   Dc.l $f2006400                                           ;  fpu data write fmove.s fp0,d0
0002FCB4 <AmiBlitz3.ab3@21223>   BSR.w JL_0_C1DE                                          ;write data >3
0002FCBA <AmiBlitz3.ab3@21226>   JSR reget
0002FCBE <AmiBlitz3.ab3@21227>   CMP.w #$2C,D0
0002FCC2 <AmiBlitz3.ab3@21228>    BEQ.w JL_0_C8CC
0002FCC4 <AmiBlitz3.ab3@21229>   ADDQ.w #2,A7
0002FCC6 <AmiBlitz3.ab3@21230> RTS
0002FCCA <AmiBlitz3.ab3@21233>    BSR.w pdt
0002FCD0 <AmiBlitz3.ab3@21234>   MOVE.l data2,-(A7)
0002FCD4 <AmiBlitz3.ab3@21235>    BSR.w JL_0_C1DE
0002FCD6 <AmiBlitz3.ab3@21236>   MOVEQ.l #$00,D1
0002FCDC <AmiBlitz3.ab3@21237>    JSR get1bytemain
0002FCE0 <AmiBlitz3.ab3@21238>    BEQ.w JL_0_C9A6
0002FCE4 <AmiBlitz3.ab3@21239>   CMP.w #$22,D0
0002FCE8 <AmiBlitz3.ab3@21240>    BEQ.w JL_0_C988
0002FCEC <AmiBlitz3.ab3@21241>   CMP.w #$2C,D0
0002FCF0 <AmiBlitz3.ab3@21242>    BEQ.w JL_0_C9A6
0002FCF4 <AmiBlitz3.ab3@21245>    BSR.w JL_0_C210
0002FCF6 <AmiBlitz3.ab3@21246>   ADDQ.w #1,D1
0002FCFC <AmiBlitz3.ab3@21247>    JSR getchar
0002FCFE <AmiBlitz3.ab3@21248>   TST.w D0
0002FD02 <AmiBlitz3.ab3@21249>    BEQ.w JL_0_C9A6
0002FD06 <AmiBlitz3.ab3@21250>   CMP.w #$2C,D0
0002FD0A <AmiBlitz3.ab3@21251>    BEQ.w JL_0_C9A6
0002FD0E <AmiBlitz3.ab3@21252> BRA.w JL_0_C96C
0002FD10 <AmiBlitz3.ab3@21256>    MOVEQ #0,d0
0002FD12 <AmiBlitz3.ab3@21257>    MOVE.b (a5)+,d0
0002FD16 <AmiBlitz3.ab3@21258>    BEQ.w notqerr2
0002FD1A <AmiBlitz3.ab3@21259>   CMP.w #$22,D0
0002FD1E <AmiBlitz3.ab3@21260>    BEQ.w JL_0_C9A2
0002FD22 <AmiBlitz3.ab3@21261>    BSR.w JL_0_C210
0002FD24 <AmiBlitz3.ab3@21262>   ADDQ.w #1,D1
0002FD28 <AmiBlitz3.ab3@21263> BRA.w JL_0_C988
0002FD2E <AmiBlitz3.ab3@21264> notqerr2 JMP notqerr
0002FD34 <AmiBlitz3.ab3@21266>   CLR.w instringon
0002FD3A <AmiBlitz3.ab3@21267>   JSR get1bytemain
0002FD3C <AmiBlitz3.ab3@21270>   MOVEA.l (A7)+,A0
0002FD42 <AmiBlitz3.ab3@21271>   MOVE.w dontwrite,D2
0002FD46 <AmiBlitz3.ab3@21272>    BNE.w JL_0_C9B4
0002FD48 <AmiBlitz3.ab3@21273>   MOVE.l D1,(A0)
0002FD4E <AmiBlitz3.ab3@21276>   ADDQ.l #1,data2
0002FD56 <AmiBlitz3.ab3@21277>   BCLR #$0,data2+3
0002FD5A <AmiBlitz3.ab3@21278>   CMP.w #$2C,D0
0002FD5E <AmiBlitz3.ab3@21279>    BEQ.w JL_0_C944
0002FD60 <AmiBlitz3.ab3@21280> RTS
0002FD66 <AmiBlitz3.ab3@21284> JMP vardeclareerr
0002FD6C <AmiBlitz3.ab3@21287>   MOVE.w proceduremode,D1                                  ;doshared
0002FD70 <AmiBlitz3.ab3@21289>   BNE.w 'l1
0002FD72 <AmiBlitz3.ab3@21290>   MOVE.w D1,-(A7)
0002FD78 <AmiBlitz3.ab3@21291>   CLR.w proceduremode
0002FD7E <AmiBlitz3.ab3@21294>   LEA varbase,a2
0002FD82 <AmiBlitz3.ab3@21295>   BSR.w getparameter
0002FD84 <AmiBlitz3.ab3@21296>   MOVE.w d2,-(a7)
0002FD8A <AmiBlitz3.ab3@21297>    JSR findvariable
0002FD8E <AmiBlitz3.ab3@21298>    BEQ 'checkdim
0002FD94 <AmiBlitz3.ab3@21299>    LEA sharebase,a2
0002FD96 <AmiBlitz3.ab3@21300>    MOVEQ #$f+4,d7
0002FD9A <AmiBlitz3.ab3@21301>    BSR.w findlab                                         ;find var
0002FD9E <AmiBlitz3.ab3@21302>    BEQ.b dupsherr
0002FDA2 <AmiBlitz3.ab3@21303>    BSR addlabel
0002FDA6 <AmiBlitz3.ab3@21304>    CMP.b #".",d0
0002FDAA <AmiBlitz3.ab3@21305>    BNE JUMP_vardeclareerr
0002FDAC <AmiBlitz3.ab3@21306>    MOVE.l a2,a3
0002FDB2 <AmiBlitz3.ab3@21307>    JSR JL_0_8EB8b
0002FDB4 <AmiBlitz3.ab3@21338>   MOVE.w (a7)+,d2
0002FDB8 <AmiBlitz3.ab3@21339>    CMP.b #",",d0
0002FDBC <AmiBlitz3.ab3@21340>    BNE 'ret
0002FDC2 <AmiBlitz3.ab3@21341>    JSR get1bytemain
0002FDC6 <AmiBlitz3.ab3@21342> BRA 'again2
0002FDCC <AmiBlitz3.ab3@21345>   MOVE.w (A7)+,proceduremode
0002FDCE <AmiBlitz3.ab3@21346> RTS
0002FDD4 <AmiBlitz3.ab3@21353>    CMP.w #2,6(a2)
0002FDD8 <AmiBlitz3.ab3@21354>    BEQ 'do
0002FDDE <AmiBlitz3.ab3@21355>    CMP.w #$102,6(a2)
0002FDE2 <AmiBlitz3.ab3@21356>    BEQ 'do
0002FDE8 <AmiBlitz3.ab3@21357> JMP errormsg_declaredtwice                                 ;was BRA 'errormsg_declaredtwice_
0002FDEE <AmiBlitz3.ab3@21360>   LEA varbase,a0
0002FDF0 <AmiBlitz3.ab3@21363>   MOVE.l (A0),D0                                           ;find label
0002FDF4 <AmiBlitz3.ab3@21364>    BEQ.b 'z1
0002FDF6 <AmiBlitz3.ab3@21365>    CMP.l d0,a2
0002FDFA <AmiBlitz3.ab3@21366>    BEQ 'z1
0002FDFC <AmiBlitz3.ab3@21367>    MOVE.l d0,a0
0002FE00 <AmiBlitz3.ab3@21368> BRA 'm1
0002FE02 <AmiBlitz3.ab3@21371>   MOVE.l (a2),d1
0002FE04 <AmiBlitz3.ab3@21372>     MOVE.l d1,(a0)
0002FE06 <AmiBlitz3.ab3@21373>     CLR.l (a2)
0002FE0C <AmiBlitz3.ab3@21374>     LEA sharebase,a0
0002FE0E <AmiBlitz3.ab3@21375>     MOVE.l (a0),(a2)
0002FE10 <AmiBlitz3.ab3@21376>     MOVE.l a2,(a0)
0002FE16 <AmiBlitz3.ab3@21377>     JSR get1bytemain
0002FE1C <AmiBlitz3.ab3@21378>     JSR get1bytemain
0002FE20 <AmiBlitz3.ab3@21379> BRA 'domore
0002FE28 <AmiBlitz3.ab3@21382>   MOVE.b #1,nowdeclare
0002FE2A <AmiBlitz3.ab3@21383>   MOVE.w D1,-(A7)
0002FE30 <AmiBlitz3.ab3@21384>   CLR.w proceduremode
0002FE34 <AmiBlitz3.ab3@21387>    BSR.w getparameter
0002FE36 <AmiBlitz3.ab3@21388>   MOVE.w D2,-(A7)
0002FE3C <AmiBlitz3.ab3@21389>   LEA firstglob,A2
0002FE40 <AmiBlitz3.ab3@21390>    BSR.w findvariable2
0002FE44 <AmiBlitz3.ab3@21391>    BNE.b JL_0_CA06
0002FE4A <AmiBlitz3.ab3@21394>   MOVE.b flagmask+1,D1
0002FE4E <AmiBlitz3.ab3@21395>   MOVE.b $7(A2),D3
0002FE50 <AmiBlitz3.ab3@21396>   EOR.b D3,D1
0002FE54 <AmiBlitz3.ab3@21397>    BEQ.w dupsherr
0002FE58 <AmiBlitz3.ab3@21398>    BSR.w findlab
0002FE5C <AmiBlitz3.ab3@21399>    BEQ.b JL_0_C9F0
0002FE60 <AmiBlitz3.ab3@21402>    BSR.w addlabel
0002FE62 <AmiBlitz3.ab3@21403>   MOVE.w (A7)+,D2
0002FE64 <AmiBlitz3.ab3@21404>   MOVE.l A2,-(A7)
0002FE68 <AmiBlitz3.ab3@21405>    BSR.w JL_0_8E3C
0002FE6A <AmiBlitz3.ab3@21406>   MOVEA.l (A7)+,A2
0002FE6C <AmiBlitz3.ab3@21407>   MOVEQ.l #$04,D1
0002FE6E <AmiBlitz3.ab3@21408>   ADDQ.w #4,A2
0002FE70 <AmiBlitz3.ab3@21409>   ADDQ.w #4,A3
0002FE72 <AmiBlitz3.ab3@21412>     MOVE.w (A3)+,(A2)+
0002FE76 <AmiBlitz3.ab3@21413>   DBF D1,JL_0_CA1A
0002FE7E <AmiBlitz3.ab3@21415>   BTST #$1,flagmask+1
0002FE82 <AmiBlitz3.ab3@21416>    BEQ.w JL_0_CA3C
0002FE88 <AmiBlitz3.ab3@21417>    JSR get1bytemain
0002FE8C <AmiBlitz3.ab3@21418>   CMP.w #$29,D0
0002FE90 <AmiBlitz3.ab3@21419>    BNE.w syntaxerrc
0002FE96 <AmiBlitz3.ab3@21420>    JSR get1bytemain
0002FE9A <AmiBlitz3.ab3@21423>    CMP.w #$2C,D0
0002FE9E <AmiBlitz3.ab3@21424>    BNE.w JL_0_CA4C
0002FEA4 <AmiBlitz3.ab3@21425>    JSR get1bytemain
0002FEA8 <AmiBlitz3.ab3@21426> BRA.w JL_0_C9DE
0002FEAE <AmiBlitz3.ab3@21429>   MOVE.w (A7)+,proceduremode
0002FEB0 <AmiBlitz3.ab3@21430> RTS
0002FEB6 <AmiBlitz3.ab3@21432> syntaxerrc JMP syntaxerr
0002FEBA <AmiBlitz3.ab3@21435>    BSR.w JL_0_C05C
0002FEC0 <AmiBlitz3.ab3@21436>    JSR check_incdir                                        ; ergebnis in d2
0002FEC6 <AmiBlitz3.ab3@21438>    LEA ptr_parameterstore,a1
0002FEC8 <AmiBlitz3.ab3@21439>    MOVE.l d2,-(a7)
0002FECE <AmiBlitz3.ab3@21440>    LEA includetemp,a0                                      ; filename in includetemp packen
0002FED0 <AmiBlitz3.ab3@21443>      MOVE.b (a1)+,(a0)+
0002FED4 <AmiBlitz3.ab3@21444>    BNE 'l4
0002FEDA <AmiBlitz3.ab3@21446>    LEA ptr_parameterstore,a1
0002FEDC <AmiBlitz3.ab3@21447>    MOVE.l a1,a0
0002FEDE <AmiBlitz3.ab3@21450>     TST.b (a0)+
0002FEE2 <AmiBlitz3.ab3@21451>    BNE 'l1
0002FEE4 <AmiBlitz3.ab3@21454>      MOVE.b -(a0),d0
0002FEE8 <AmiBlitz3.ab3@21455>      CMP.b #":",d0
0002FEEC <AmiBlitz3.ab3@21456>       BEQ 'out
0002FEF0 <AmiBlitz3.ab3@21457>      CMP.b #"/",d0
0002FEF4 <AmiBlitz3.ab3@21458>       BEQ 'out
0002FEF6 <AmiBlitz3.ab3@21459>      CMP.l a1,a0
0002FEFA <AmiBlitz3.ab3@21460>       BEQ 'out2
0002FEFE <AmiBlitz3.ab3@21461> BRA 'l2
0002FF00 <AmiBlitz3.ab3@21464>    ADDQ.l #1,a0                                            ; dateinamen vom pfad extrahiert
0002FF02 <AmiBlitz3.ab3@21467>    MOVEQ.l #-$01,D2
0002FF04 <AmiBlitz3.ab3@21470>      ADDQ.w #1,D2
0002FF06 <AmiBlitz3.ab3@21471>      MOVE.b (a0)+,(a1)+
0002FF0A <AmiBlitz3.ab3@21472>    BNE 'l3
0002FF0C <AmiBlitz3.ab3@21473>    CLR.b (a1)+
0002FF12 <AmiBlitz3.ab3@21475>    LEA ptr_parameterstore,a1
0002FF16 <AmiBlitz3.ab3@21476>    BSR.w findxinc                                         ;find include
0002FF1A <AmiBlitz3.ab3@21477>     BEQ.w 'outb
0002FF1C <AmiBlitz3.ab3@21479>    MOVE.w D2,-(A7)
0002FF20 <AmiBlitz3.ab3@21480>    BSR.w addlabel
0002FF22 <AmiBlitz3.ab3@21481>    MOVE.w (A7)+,D2
0002FF28 <AmiBlitz3.ab3@21483>    LEA ptr_parameterstore,a1
0002FF2E <AmiBlitz3.ab3@21484>    LEA includetemp,a0                                      ; namen in includetemp schreiben
0002FF30 <AmiBlitz3.ab3@21487>     MOVE.b (a0)+,(a1)+
0002FF34 <AmiBlitz3.ab3@21488>    BNE 'l4b
0002FF36 <AmiBlitz3.ab3@21490>    MOVE.l (a7)+,d2
0002FF3C <AmiBlitz3.ab3@21491>    LEA ptr_parameterstore,a1
0002FF40 <AmiBlitz3.ab3@21492> BRA.w JL_0_CB18
0002FF46 <AmiBlitz3.ab3@21495>    LEA ptr_parameterstore,a1
0002FF4C <AmiBlitz3.ab3@21496>    LEA includetemp,a0
0002FF4E <AmiBlitz3.ab3@21499>     MOVE.b (a0)+,(a1)+
0002FF52 <AmiBlitz3.ab3@21500>    BNE 'l4b2
0002FF54 <AmiBlitz3.ab3@21502>    MOVE.l (a7)+,d2
0002FF5A <AmiBlitz3.ab3@21503>    LEA ptr_parameterstore,a1
0002FF5C <AmiBlitz3.ab3@21506> RTS
0002FF60 <AmiBlitz3.ab3@21510>   BSR.w JL_0_C05C                                              ; test and get the parameter (includestring)
0002FF66 <AmiBlitz3.ab3@21512>   JSR check_IncBinDir                                          ; to fix the path problem in CLIMode  tomsmart1
0002FF6C <AmiBlitz3.ab3@21514>   MOVEA.l _dosbase,A6
0002FF6E <AmiBlitz3.ab3@21515>   MOVE.l D0,D7                                                 ; store Lockpointer
0002FF72 <AmiBlitz3.ab3@21516>    BEQ.w error_cant_open_include                               ; no pointer => errormessage
0002FF74 <AmiBlitz3.ab3@21517>   MOVE.l D7,D1                                                 ; begin get the size of the file to include
0002FF7A <AmiBlitz3.ab3@21518>   MOVE.l ptr_macrobuffer_begin,D2
0002FF7E <AmiBlitz3.ab3@21519>    JSR _Examine(A6)
0002FF84 <AmiBlitz3.ab3@21520>   MOVEA.l ptr_macrobuffer_begin,A0
0002FF88 <AmiBlitz3.ab3@21521>   MOVE.l $4(A0),D0
0002FF8C <AmiBlitz3.ab3@21522>    BPL.w error_cant_open_include                               ; something went wrong => errormessage
0002FF90 <AmiBlitz3.ab3@21523>   MOVE.l $7C(A0),D3                                            ; store the size of the file to include
0002FF92 <AmiBlitz3.ab3@21524>   MOVE.l D7,D1                                                 ; begin unlock the file
0002FF96 <AmiBlitz3.ab3@21525>    JSR _UnLock(A6)
0002FF9C <AmiBlitz3.ab3@21527>   MOVE.l #ptr_parameterstore,D1                                ; begin Open and Load the file
0002FFA2 <AmiBlitz3.ab3@21528>   MOVE.l #HUNK_RELOC_16__MODE_OLDFILE,D2                       
0002FFA6 <AmiBlitz3.ab3@21529>    JSR _Open(A6)
0002FFA8 <AmiBlitz3.ab3@21530>   MOVE.l D0,D7
0002FFAC <AmiBlitz3.ab3@21531>    BEQ.w error_cant_open_include
0002FFB2 <AmiBlitz3.ab3@21532>   MOVE.l destpointer,D0
0002FFB4 <AmiBlitz3.ab3@21533>   ADD.l D3,D0
0002FFBA <AmiBlitz3.ab3@21534>   CMP.l destbufferend,D0
0002FFBE <AmiBlitz3.ab3@21535>    BHI.w JL_0_CAF6
0002FFC4 <AmiBlitz3.ab3@21536>   MOVE.l destpointer,D2
0002FFC6 <AmiBlitz3.ab3@21537>   MOVE.l D7,D1
0002FFCA <AmiBlitz3.ab3@21538>    JSR _Read(A6)
0002FFD0 <AmiBlitz3.ab3@21539>   CMP.l #$FFFFFFFF,D0
0002FFD4 <AmiBlitz3.ab3@21540>    BEQ.w error_reading_file
0002FFDA <AmiBlitz3.ab3@21541>   ADD.l D0,destpointer
0002FFDE <AmiBlitz3.ab3@21542> BRA.w JL_0_CB04
0002FFE6 <AmiBlitz3.ab3@21545>   MOVE.w #$FFFF,dontwrite
0002FFEC <AmiBlitz3.ab3@21546>   MOVE.l D0,destpointer
0002FFEE <AmiBlitz3.ab3@21549>   MOVE.l D7,D1
0002FFF2 <AmiBlitz3.ab3@21550> JMP _Close(A6)
0002FFF8 <AmiBlitz3.ab3@21554> JMP illdirerr
0002FFFE <AmiBlitz3.ab3@21557>   TST.w dirmode                                            ;include  open
00030002 <AmiBlitz3.ab3@21558>    BNE.w JUMP_illdirerr
00030006 <AmiBlitz3.ab3@21559>   BSR.w JL_0_C05C
0003000C <AmiBlitz3.ab3@21560>   JSR check_incdir
00030010 <AmiBlitz3.ab3@21563>   BSR.w findconstant
00030014 <AmiBlitz3.ab3@21564>    BEQ.w alincerr
0003001A <AmiBlitz3.ab3@21566>   LEA constantbase,A2
0003001E <AmiBlitz3.ab3@21567>   BSR.w addhere2
00030022 <AmiBlitz3.ab3@21568>   CLR.w $C(A2)
00030026 <AmiBlitz3.ab3@21569>   CLR.l $4(A2)
0003002C <AmiBlitz3.ab3@21571>   MOVE.l #ptr_parameterstore,D1
0003002E <AmiBlitz3.ab3@21572>   MOVE.l d1,a0
00030034 <AmiBlitz3.ab3@21573>   LEA includetemp2,a1
00030036 <AmiBlitz3.ab3@21576>     MOVE.b (a0)+,(a1)+
0003003A <AmiBlitz3.ab3@21577>   BNE 'l1
00030040 <AmiBlitz3.ab3@21578>   JSR save_includename
0003004A <AmiBlitz3.ab3@21579>   MOVE.l #0,include_process
00030052 <AmiBlitz3.ab3@21581>   CMP.l #$62623200,-4(a0)                                  ;.bb2
00030056 <AmiBlitz3.ab3@21582>   BEQ 'ok
0003005E <AmiBlitz3.ab3@21583>   CMP.l #$61623300,-4(a0)                                  ;.ab3
00030062 <AmiBlitz3.ab3@21584>   BEQ 'ok_tokenize
0003006A <AmiBlitz3.ab3@21585>   CMP.l #$61623200,-4(a0)                                  ;.ab2
0003006E <AmiBlitz3.ab3@21586>   BEQ 'ok_tokenize
00030076 <AmiBlitz3.ab3@21587>   CMP.l #$2e626200,-4(a0)                                  ;.bb files
0003007A <AmiBlitz3.ab3@21588>   BEQ 'ok
00030080 <AmiBlitz3.ab3@21589> JMP errortoken                                             ;can only include
0003008A <AmiBlitz3.ab3@21592>    MOVE.l #-1,include_process                              ; must tokenize the include
00030090 <AmiBlitz3.ab3@21595>   MOVE.l #HUNK_RELOC_16__MODE_OLDFILE,D2
00030096 <AmiBlitz3.ab3@21596>   MOVEA.l _dosbase,A6
0003009A <AmiBlitz3.ab3@21597>   JSR _Open(A6)
0003009E <AmiBlitz3.ab3@21598>   MOVE.l D0,$8(A2)
000300A2 <AmiBlitz3.ab3@21599>   BEQ.w error_cant_open_include
000300A8 <AmiBlitz3.ab3@21600>   CLR.l includeline
000300AC <AmiBlitz3.ab3@21601>   MOVE.l 8(a2),d1
000300AE <AmiBlitz3.ab3@21602>   MOVE.l d3,-(a7)
000300B0 <AmiBlitz3.ab3@21603>   MOVEQ #0,d2
000300B2 <AmiBlitz3.ab3@21604>   MOVEQ #1,d3
000300B6 <AmiBlitz3.ab3@21605>   JSR _Seek(a6)                                            ; -66
000300BA <AmiBlitz3.ab3@21606>   MOVE.l 8(a2),d1
000300BC <AmiBlitz3.ab3@21607>   MOVEQ #0,d2
000300BE <AmiBlitz3.ab3@21608>   MOVEQ #-1,d3
000300C2 <AmiBlitz3.ab3@21609>   JSR _Seek(a6)                                            ; -66
000300C4 <AmiBlitz3.ab3@21610>   MOVE.l (a7)+,d3
000300C6 <AmiBlitz3.ab3@21611>   ADDQ.l #4,d0
000300CC <AmiBlitz3.ab3@21613>   MOVE.l #$10000,D1
000300D2 <AmiBlitz3.ab3@21614>   MOVEA.l _execbase,A6
000300D6 <AmiBlitz3.ab3@21617>   JSR _AllocVec(a6)
000300DA <AmiBlitz3.ab3@21619>   MOVE.l D0,$4(A2)
000300DE <AmiBlitz3.ab3@21620>   MOVE.l D0,$E(A2)
000300E0 <AmiBlitz3.ab3@21621>   MOVEA.l D0,A5
000300E6 <AmiBlitz3.ab3@21628>   ADDQ.w #1,ininclude                                      ;enter include
000300EC <AmiBlitz3.ab3@21631>   LEA _include,a0
000300F0 <AmiBlitz3.ab3@21632>   MOVEM.l a0-a6/d0-d7,-(a7)
000300F6 <AmiBlitz3.ab3@21633>   LEA ptr_parameterstore,a1
000300F8 <AmiBlitz3.ab3@21636>     MOVE.b (a0)+,(a1)+
000300FC <AmiBlitz3.ab3@21637>   BNE 'l1b
000300FE <AmiBlitz3.ab3@21639>   MOVEQ #9,d2
00030104 <AmiBlitz3.ab3@21640>   JSR findlabel2
00030108 <AmiBlitz3.ab3@21641>   BNE 'd
00030110 <AmiBlitz3.ab3@21642>   MOVE.l #1,8(a2)
00030114 <AmiBlitz3.ab3@21643>   MOVEM.l (a7)+,a0-a6/d0-d7
00030118 <AmiBlitz3.ab3@21644> BRA 'd2
0003011E <AmiBlitz3.ab3@21647>   JSR addlabelhash
00030126 <AmiBlitz3.ab3@21648>   MOVE.l #$1,$4(A2)
0003012E <AmiBlitz3.ab3@21649>   MOVE.l #1,8(a2)
00030132 <AmiBlitz3.ab3@21650>   MOVEM.l (a7)+,a0-a6/d0-d7
00030138 <AmiBlitz3.ab3@21653>   LEA inctab,a0
0003013A <AmiBlitz3.ab3@21654>   MOVEQ #0,d1
00030140 <AmiBlitz3.ab3@21655>   MOVE.w ininclude,d1
00030144 <AmiBlitz3.ab3@21656>   CLR.l $0(a0,d1*4)
0003014A <AmiBlitz3.ab3@21657>   MOVEA.l passstack,A7
00030150 <AmiBlitz3.ab3@21658> JMP AJL_0_413A
00030156 <AmiBlitz3.ab3@21660> JUMP_dupmacerr JMP dupmacerr
00030158 <AmiBlitz3.ab3@21662> coolnest:   Ds.w 1
0003015C <AmiBlitz3.ab3@21663> macline:    Ds.l 1
00030166 <AmiBlitz3.ab3@21667>   MOVE.l linenumat,macline
0003016A <AmiBlitz3.ab3@21668>    BSR.w makename2
0003016E <AmiBlitz3.ab3@21669>    BEQ.w JUMP_syntaxerr
00030174 <AmiBlitz3.ab3@21671>    CLR.b thenmode
0003017E <AmiBlitz3.ab3@21673>    MOVE.w oldqflag,instringon
00030184 <AmiBlitz3.ab3@21674>   MOVEA.l lastsourcepos,A5
00030188 <AmiBlitz3.ab3@21675>    BSR.w findmac
0003018C <AmiBlitz3.ab3@21676>    BEQ.w JUMP_dupmacerr
00030190 <AmiBlitz3.ab3@21677>    BSR.w addlabel
00030194 <AmiBlitz3.ab3@21678>   CLR.w $A(A2)
0003019A <AmiBlitz3.ab3@21679>   MOVEA.l ptr_macrobuffer_begin,A0
0003019C <AmiBlitz3.ab3@21680>   MOVEQ.l #$00,D2
000301A2 <AmiBlitz3.ab3@21681>   CLR.w coolnest
000301A4 <AmiBlitz3.ab3@21684>   MOVE.b (a5),d0
000301A8 <AmiBlitz3.ab3@21685>      BEQ 'l3
000301AC <AmiBlitz3.ab3@21686>      CMP.b #" ",d0
000301B0 <AmiBlitz3.ab3@21687>       BNE 'l2                                              ;space macro
000301B2 <AmiBlitz3.ab3@21688>       ADDQ.l #1,a5
000301B6 <AmiBlitz3.ab3@21689> BRA 'l1
000301BA <AmiBlitz3.ab3@21692>    CMP.b #";",d0
000301BE <AmiBlitz3.ab3@21693>       BNE 'l3
000301C0 <AmiBlitz3.ab3@21696>    MOVE.b (a5),d0
000301C4 <AmiBlitz3.ab3@21697>       BEQ 'l5
000301C8 <AmiBlitz3.ab3@21698>       BSR.w JL_0_CC98                                      ;add comment
000301CA <AmiBlitz3.ab3@21699>       ADDQ.l #1,a5
000301CE <AmiBlitz3.ab3@21700> BRA 'l4
000301D2 <AmiBlitz3.ab3@21703>    MOVE.b #":",d0
000301D6 <AmiBlitz3.ab3@21704>       BSR.w JL_0_CC98
000301DA <AmiBlitz3.ab3@21705>       MOVE.b #"@",d0
000301DE <AmiBlitz3.ab3@21706>       BSR.w JL_0_CC98
000301E6 <AmiBlitz3.ab3@21709>    MOVE.b #0,temp
000301EE <AmiBlitz3.ab3@21710>       MOVE.b #0,thenmode
000301F4 <AmiBlitz3.ab3@21713>   JSR getcharb
000301F6 <AmiBlitz3.ab3@21714>   TST.w D0
000301FA <AmiBlitz3.ab3@21715>    BNE.w JL_0_CBDE
000301FE <AmiBlitz3.ab3@21716>   MOVEM.l D2/A0/A2,-(A7)
00030204 <AmiBlitz3.ab3@21717>   CMP.w #"@@",-3(a5)
00030208 <AmiBlitz3.ab3@21718>   BNE 'l2a
0003020E <AmiBlitz3.ab3@21719>   JSR nextline
00030212 <AmiBlitz3.ab3@21720>   BEQ.w JUMP_macenderr
00030216 <AmiBlitz3.ab3@21721>   MOVEM.l (A7)+,D2/A0/A2
0003021A <AmiBlitz3.ab3@21722> BRA.w JL_0_CBB6
00030220 <AmiBlitz3.ab3@21725>    JSR nextline
00030224 <AmiBlitz3.ab3@21726>    BEQ.w JUMP_macenderr
00030228 <AmiBlitz3.ab3@21727>   MOVEM.l (A7)+,D2/A0/A2
0003022A <AmiBlitz3.ab3@21728>   TST.w D2
0003022E <AmiBlitz3.ab3@21729>    BEQ.w JL_0_CBB6
00030230 <AmiBlitz3.ab3@21732>   MOVE.b (a5),d0
00030234 <AmiBlitz3.ab3@21733>       CMP.b #" ",d0
00030238 <AmiBlitz3.ab3@21734>       BNE 'l1
0003023A <AmiBlitz3.ab3@21735>       ADDQ.w #1,a5
0003023E <AmiBlitz3.ab3@21736> BRA 'l2
00030244 <AmiBlitz3.ab3@21739>   TST.b thenmode
00030248 <AmiBlitz3.ab3@21740>      BEQ 'l3
0003024A <AmiBlitz3.ab3@21741>      MOVEQ #":",d0
0003024E <AmiBlitz3.ab3@21742>      BSR.w JL_0_CC98
00030252 <AmiBlitz3.ab3@21743>      MOVE.w #-$7FFE,D0                                     ;write end if
00030256 <AmiBlitz3.ab3@21744>      BSR macputw
0003025A <AmiBlitz3.ab3@21745>      MOVE.w #$800b,d0
0003025E <AmiBlitz3.ab3@21746>      BSR.w macputw
00030264 <AmiBlitz3.ab3@21747>      CLR.b thenmode
00030266 <AmiBlitz3.ab3@21750>    MOVEQ.l #$3A,D0
0003026E <AmiBlitz3.ab3@21751>      MOVE.b #1,temp
00030272 <AmiBlitz3.ab3@21753> BRA.w JL_0_CC2A
00030276 <AmiBlitz3.ab3@21757>   BPL.w JL_0_CC2A
0003027A <AmiBlitz3.ab3@21758>   CMP.w #-$7FF3,D0                                         ;macro ?
0003027E <AmiBlitz3.ab3@21759>    BNE.w JL_0_CBF4
00030284 <AmiBlitz3.ab3@21760>   ADDQ.w #1,coolnest
00030288 <AmiBlitz3.ab3@21761> BRA.w JL_0_CC22
0003028E <AmiBlitz3.ab3@21763> JUMP_macnesterr JMP macnesterr
00030292 <AmiBlitz3.ab3@21766>   CMP.w #$80d7,d0                                          ;object ?
00030296 <AmiBlitz3.ab3@21767>     BNE 'l1x
0003029C <AmiBlitz3.ab3@21768>     TST.b objectcount
000302A0 <AmiBlitz3.ab3@21769>     BNE JUMP_macnesterr
000302A4 <AmiBlitz3.ab3@21772>   CMP.w #$8021,d0
000302A8 <AmiBlitz3.ab3@21773>     BNE 'nothen
000302B0 <AmiBlitz3.ab3@21774>     MOVE.b #1,thenmode
000302B6 <AmiBlitz3.ab3@21777>   TST.b thenmode
000302BA <AmiBlitz3.ab3@21778>         BEQ 'l1
000302BE <AmiBlitz3.ab3@21779>    CMP.w #$8002,d0                                         ;end if
000302C2 <AmiBlitz3.ab3@21780>    BNE 'l1
000302C6 <AmiBlitz3.ab3@21781>    MOVEM.l d0/a5,-(a7)
000302CC <AmiBlitz3.ab3@21782>    JSR get1bytemain
000302CE <AmiBlitz3.ab3@21783>    MOVE.w d0,d1
000302D2 <AmiBlitz3.ab3@21784>    MOVEM.l (a7)+,a5/d0
000302D6 <AmiBlitz3.ab3@21785>    CMP.w #$800b,d1
000302DA <AmiBlitz3.ab3@21786>    BNE 'l1
000302E0 <AmiBlitz3.ab3@21787>    CLR.b thenmode
000302E4 <AmiBlitz3.ab3@21790>    CMP.w #-$7FFE,D0                                        ;end ?
000302E8 <AmiBlitz3.ab3@21791>    BNE.w JL_0_CC22
000302EA <AmiBlitz3.ab3@21792>    MOVE.l a5,-(a7)
000302F0 <AmiBlitz3.ab3@21793>    JSR get1bytemain
000302F2 <AmiBlitz3.ab3@21794>    MOVE.l (a7)+,a5
000302F4 <AmiBlitz3.ab3@21795>    TST.w d0
000302F8 <AmiBlitz3.ab3@21796>    BEQ 'doend
000302FC <AmiBlitz3.ab3@21797>    CMP.w #":",d0
00030300 <AmiBlitz3.ab3@21798>    BEQ 'doend
00030304 <AmiBlitz3.ab3@21799>    CMP.w #";",d0
00030308 <AmiBlitz3.ab3@21800>    BEQ 'doend
0003030A <AmiBlitz3.ab3@21801>    MOVE.l a5,-(a7)
00030310 <AmiBlitz3.ab3@21802>    JSR get1bytemain
00030314 <AmiBlitz3.ab3@21803>    MOVE.l -1(a5),d0
00030316 <AmiBlitz3.ab3@21804>    MOVE.l (a7)+,a5
0003031C <AmiBlitz3.ab3@21805>    CMP.l #"noa7",d0
00030320 <AmiBlitz3.ab3@21806>    BEQ 'doend
00030324 <AmiBlitz3.ab3@21807> BRA 'morechar
00030328 <AmiBlitz3.ab3@21810>   MOVE.w #$8002,D0
0003032C <AmiBlitz3.ab3@21811>    BSR.w macputw
00030330 <AmiBlitz3.ab3@21812> BRA JL_0_CBB6
00030336 <AmiBlitz3.ab3@21815>   JSR get1bytemain
0003033A <AmiBlitz3.ab3@21816>    CMP.w #-$7FF3,D0                                        ;end macro
0003033E <AmiBlitz3.ab3@21817>    BEQ.w 'lo1
00030342 <AmiBlitz3.ab3@21818>   CMP.w #$80d7,d0                                          ;end object
00030346 <AmiBlitz3.ab3@21819>   BNE JL_0_CC12
0003034C <AmiBlitz3.ab3@21820>   SUBQ.b #1,objectcount
00030352 <AmiBlitz3.ab3@21821>   TST.b developobject
00030356 <AmiBlitz3.ab3@21822>   BEQ 'lo1
0003035A <AmiBlitz3.ab3@21823>   BSR skiprest
0003035C <AmiBlitz3.ab3@21824> RTS
00030362 <AmiBlitz3.ab3@21827>   SUBQ.w #1,coolnest
00030366 <AmiBlitz3.ab3@21828>    BMI.w JL_0_CC32
00030368 <AmiBlitz3.ab3@21831>   MOVE.w D0,-(A7)
0003036C <AmiBlitz3.ab3@21832>   MOVE.w #$8002,D0
00030370 <AmiBlitz3.ab3@21833>    BSR.w macputw
00030372 <AmiBlitz3.ab3@21834>   MOVE.w (A7)+,D0
00030376 <AmiBlitz3.ab3@21835> BRA.w JL_0_CC22
0003037A <AmiBlitz3.ab3@21838>   BSR.w macputw
0003037E <AmiBlitz3.ab3@21839> BRA.w JL_0_CBB6
00030384 <AmiBlitz3.ab3@21841> JUMP_macenderr JMP macenderr
0003038A <AmiBlitz3.ab3@21844>     CMP.w #"@@",-1(a5)                                     ;merge lines
0003038E <AmiBlitz3.ab3@21845>     BNE 'no
00030392 <AmiBlitz3.ab3@21846>      MOVEM.l D2/A0/A2,-(A7)
00030398 <AmiBlitz3.ab3@21847>    JSR nextline
0003039C <AmiBlitz3.ab3@21848>    BEQ.w JUMP_macenderr
000303A0 <AmiBlitz3.ab3@21849>   MOVEM.l (A7)+,D2/A0/A2
000303A2 <AmiBlitz3.ab3@21850>     TST.w D2
000303A6 <AmiBlitz3.ab3@21851>    BEQ.w JL_0_CBB6
000303AA <AmiBlitz3.ab3@21852> BRA JL_0_CBB6
000303AE <AmiBlitz3.ab3@21856>   BSR.w JL_0_CC98
000303B2 <AmiBlitz3.ab3@21857> BRA.w JL_0_CBB6
000303B4 <AmiBlitz3.ab3@21860>   ADDQ.w #4,A7
000303B6 <AmiBlitz3.ab3@21861>   MOVE.l A0,D0
000303BC <AmiBlitz3.ab3@21862>   SUB.l ptr_macrobuffer_begin,D0
000303C0 <AmiBlitz3.ab3@21865>    BEQ.w JL_0_CC5E
000303C4 <AmiBlitz3.ab3@21866>   CMPI.b #":",-(A0)
000303C8 <AmiBlitz3.ab3@21867>    BNE.w JL_0_CC5E
000303CC <AmiBlitz3.ab3@21868>   CMP.w #$1,D0
000303D0 <AmiBlitz3.ab3@21869>    BEQ.w JL_0_CC58
000303D4 <AmiBlitz3.ab3@21870>   TST.b -$1(A0)
000303D8 <AmiBlitz3.ab3@21871>    BMI.w JL_0_CC5E
000303DA <AmiBlitz3.ab3@21874>   SUBQ.w #1,D0
000303DE <AmiBlitz3.ab3@21875> BRA.w JL_0_CC3C
000303E2 <AmiBlitz3.ab3@21878>   MOVE.w D0,$8(A2)
000303E6 <AmiBlitz3.ab3@21879>    BEQ.w JL_0_CC8E
000303E8 <AmiBlitz3.ab3@21880>   MOVEQ.l #$01,D1
000303EE <AmiBlitz3.ab3@21881>   MOVEA.l _execbase,A6
000303F4 <AmiBlitz3.ab3@21882>   MOVE.l mempool,a0
000303F8 <AmiBlitz3.ab3@21883>   JSR _AllocPooled(a6)
000303FA <AmiBlitz3.ab3@21885>   MOVEA.l D0,A0
000303FE <AmiBlitz3.ab3@21886>   MOVE.l A0,$4(A2)
00030402 <AmiBlitz3.ab3@21887>   MOVE.w $8(A2),D1
00030406 <AmiBlitz3.ab3@21888>    BEQ.w JL_0_CC8E
00030408 <AmiBlitz3.ab3@21889>   SUBQ.w #1,D1
0003040E <AmiBlitz3.ab3@21890>   MOVEA.l ptr_macrobuffer_begin,A1
00030410 <AmiBlitz3.ab3@21893>     MOVE.b (A1)+,(A0)+
00030414 <AmiBlitz3.ab3@21894>   DBF D1,JL_0_CC88
0003041A <AmiBlitz3.ab3@21897> JMP get1bytemain
0003041C <AmiBlitz3.ab3@21901>   MOVE.w D0,D1
0003041E <AmiBlitz3.ab3@21902>   LSR.w #8,D1
00030420 <AmiBlitz3.ab3@21903>   MOVE.b D1,(A0)+
00030422 <AmiBlitz3.ab3@21906>   MOVEQ.l #-$01,D2
00030424 <AmiBlitz3.ab3@21907>   MOVE.b D0,(A0)+
0003042A <AmiBlitz3.ab3@21908>   CMPA.l ptr_macrobuffer_end,A0
0003042E <AmiBlitz3.ab3@21909>    BCC.w macbigerr2
00030430 <AmiBlitz3.ab3@21910> RTS
00030436 <AmiBlitz3.ab3@21911> macbigerr2 JMP macbigerr
00030438 <AmiBlitz3.ab3@21914>   MOVE.l d0,-(a7)
0003043A <AmiBlitz3.ab3@21915>   MOVEQ #0,d0
00030440 <AmiBlitz3.ab3@21916>   CLR.b skiptoggle
00030442 <AmiBlitz3.ab3@21919>     MOVE.b (a5),d0
00030446 <AmiBlitz3.ab3@21920>     BEQ 'l3
0003044A <AmiBlitz3.ab3@21921>     CMP.b #";",d0
0003044E <AmiBlitz3.ab3@21922>     BNE 'l2
00030456 <AmiBlitz3.ab3@21923>     MOVE.b #1,skiptoggle
0003045C <AmiBlitz3.ab3@21926>     TST.b skiptoggle
00030460 <AmiBlitz3.ab3@21927>     BNE 'l4
00030464 <AmiBlitz3.ab3@21928>     CMP.b #":",d0
00030468 <AmiBlitz3.ab3@21929>     BEQ 'l3
0003046A <AmiBlitz3.ab3@21932>     ADDQ #1,a5
0003046E <AmiBlitz3.ab3@21933> BRA 'loop
00030474 <AmiBlitz3.ab3@21936>   MOVE.w d0,lastchar
00030476 <AmiBlitz3.ab3@21937>   MOVE.l (a7)+,d0
00030478 <AmiBlitz3.ab3@21938> RTS
0003047C <AmiBlitz3.ab3@21942>   BSR.w ifchar
00030480 <AmiBlitz3.ab3@21943>    BNE.w JUMP_syntaxerr
00030482 <AmiBlitz3.ab3@21944>   MOVE.w D0,D1
00030488 <AmiBlitz3.ab3@21945>   JSR get1bytemain
0003048C <AmiBlitz3.ab3@21946>   BSR.w ifchar
00030490 <AmiBlitz3.ab3@21947>    BNE.w JL_0_CCDA
00030492 <AmiBlitz3.ab3@21948>   ADDQ.w #1,D0
00030494 <AmiBlitz3.ab3@21949>   MOVE.w D0,D2
00030496 <AmiBlitz3.ab3@21950>   ADD.w D0,D0
00030498 <AmiBlitz3.ab3@21951>   ADD.w D2,D0
0003049A <AmiBlitz3.ab3@21952>   ADD.w D0,D1
0003049C <AmiBlitz3.ab3@21953>   MOVE.w D1,D0
000304A0 <AmiBlitz3.ab3@21954>   ANDI.w #$3,D0
000304A4 <AmiBlitz3.ab3@21955>   CMP.w #$3,D0
000304A8 <AmiBlitz3.ab3@21956>    BEQ.w JUMP_syntaxerr
000304AE <AmiBlitz3.ab3@21958>   JSR get1bytemain
000304B0 <AmiBlitz3.ab3@21961> RTS
000304B2 <AmiBlitz3.ab3@21967> thetst1:  TST.b D0
000304B4 <AmiBlitz3.ab3@21968> thetst2:  TST.w D0
000304B6 <AmiBlitz3.ab3@21969> thetst3:  TST.l D0
000304B8 <AmiBlitz3.ab3@21970> thetst4:  TST.l (A7)+                                      ;Any Length?
000304BC <AmiBlitz3.ab3@21971> thetst5:  JSR _Reschedule(A6)
000304C0 <AmiBlitz3.ab3@21973> posbr:    BEQ.w posbr
000304C4 <AmiBlitz3.ab3@21974> negbr:    BNE.w negbr
000304C6 <AmiBlitz3.ab3@21978>   MOVEQ.l #-$01,D2
000304CA <AmiBlitz3.ab3@21979> BRA.w JL_0_D04C
000304D0 <AmiBlitz3.ab3@21983>   CLR.l fp0addr
000304D2 <AmiBlitz3.ab3@21984>   MOVEQ.l #$01,D1                                          ;while flag
000304D4 <AmiBlitz3.ab3@21985>   MOVEQ.l #$00,D2                                          ;negate flag
000304D8 <AmiBlitz3.ab3@21986> BRA.w JL_0_D04E
000304DE <AmiBlitz3.ab3@21990>   LEA firstrep,A2
000304E0 <AmiBlitz3.ab3@21991>   MOVEQ.l #$08,D2
000304E4 <AmiBlitz3.ab3@21992> BRA.w freeslist
000304E8 <AmiBlitz3.ab3@21996>   LEA firstsel(PC),A2
000304EA <AmiBlitz3.ab3@21997>   MOVEQ.l #$0E,D2
000304EC <AmiBlitz3.ab3@22002>   MOVEQ.l #$00,D3
000304EE <AmiBlitz3.ab3@22010>   MOVE.l (A2),D0
000304F0 <AmiBlitz3.ab3@22011>   CLR.l (A2)
000304F2 <AmiBlitz3.ab3@22012>   MOVEA.l D0,A2
000304F8 <AmiBlitz3.ab3@22013>   MOVEA.l _execbase,A6
000304FC <AmiBlitz3.ab3@22016>     CMPA.w #$0,A2
00030500 <AmiBlitz3.ab3@22017>      BEQ.w freelist__done
00030502 <AmiBlitz3.ab3@22018>     TST.w D3
00030506 <AmiBlitz3.ab3@22019>      BEQ.w freelist__skip
0003050A <AmiBlitz3.ab3@22020>     MOVEM.l D2-D3/A2,-(A7)
0003050C <AmiBlitz3.ab3@22021>     ADDA.w D3,A2
0003050E <AmiBlitz3.ab3@22022>     MOVE.l D4,D2
00030512 <AmiBlitz3.ab3@22023>     BSR.w freeslist
00030516 <AmiBlitz3.ab3@22024>     MOVEM.l (A7)+,D2-D3/A2
00030518 <AmiBlitz3.ab3@22027>     MOVEA.l A2,A1
0003051A <AmiBlitz3.ab3@22028>     MOVE.l D2,D0
0003051C <AmiBlitz3.ab3@22029>     MOVEA.l (A2),A2
00030522 <AmiBlitz3.ab3@22030>     MOVE.l mempool,a0
00030526 <AmiBlitz3.ab3@22031>     JSR _FreePooled(A6)
0003052A <AmiBlitz3.ab3@22032> BRA.w freelist__loop
0003052C <AmiBlitz3.ab3@22035> RTS
00030532 <AmiBlitz3.ab3@22038> JMP eselerr
00030536 <AmiBlitz3.ab3@22041> firstsel:  Ds.l 1
0003053A <AmiBlitz3.ab3@22044> selpushb:   Dc.b $02,$40,$00,$FF                           ;ANDI.W  #$00FF,D0
0003053C <AmiBlitz3.ab3@22047> selpushw:   MOVE.w D0,-(A7)
0003053E <AmiBlitz3.ab3@22049> selpushl:   MOVE.l D0,-(A7)
00030542 <AmiBlitz3.ab3@22051> selpushs:   LEA $4(A7),A2                                  ;(a7)=len of string!
00030546 <AmiBlitz3.ab3@22054> selcomb:    ANDI.w #$FF,D0
00030548 <AmiBlitz3.ab3@22055> selcomw:    CMP.w (A7),D0
0003054A <AmiBlitz3.ab3@22057> selcoml:    CMP.l (A7),D0
0003054E <AmiBlitz3.ab3@22059> selbne:     BNE.w selbne
00030550 <AmiBlitz3.ab3@22061> endsel:     ADDQ.w #8,A7
00030554 <AmiBlitz3.ab3@22067>   MOVE.l firstsel(PC),D0                                  
00030558 <AmiBlitz3.ab3@22068>    BEQ.w JUMP_eselerr
0003055A <AmiBlitz3.ab3@22069>   MOVEA.l D0,A2
0003055E <AmiBlitz3.ab3@22070>    BSR.w JL_0_CDFC
00030564 <AmiBlitz3.ab3@22073>   MOVEA.l _execbase,A6
00030568 <AmiBlitz3.ab3@22076>   MOVE.l $4(A2),D0
0003056C <AmiBlitz3.ab3@22077>    BEQ.w doendsel__done
0003056E <AmiBlitz3.ab3@22078>   MOVEA.l D0,A3
00030572 <AmiBlitz3.ab3@22079>   MOVEA.l $4(A3),A0
00030578 <AmiBlitz3.ab3@22080>   MOVE.l destpointer,D1
0003057A <AmiBlitz3.ab3@22081>   SUB.l A0,D1
00030580 <AmiBlitz3.ab3@22083>     TST.b fast
00030584 <AmiBlitz3.ab3@22084>     BEQ doendsel__loop_l1
0003058A <AmiBlitz3.ab3@22085>     MOVE.w dontwrite,D0
0003058E <AmiBlitz3.ab3@22086>     BNE.w doendsel__skip
00030590 <AmiBlitz3.ab3@22087>     ADDQ.l #2,d1
00030594 <AmiBlitz3.ab3@22088>     MOVE.l d1,-2(a0)
00030598 <AmiBlitz3.ab3@22089>   BRA doendsel__skip
0003059E <AmiBlitz3.ab3@22093>   TST.w dontwrite
000305A2 <AmiBlitz3.ab3@22094>      BNE.w doendsel__skip
000305A8 <AmiBlitz3.ab3@22095>   CMP.l #MaxWordSgnd,D1
000305AC <AmiBlitz3.ab3@22096>    BHI.w JUMP_cbraerr
000305AE <AmiBlitz3.ab3@22097>   MOVE.w D1,(A0)
000305B2 <AmiBlitz3.ab3@22100>   MOVE.l (A3),$4(A2)                                       ;next of me is new first
000305B4 <AmiBlitz3.ab3@22101>   MOVEA.l A3,A1
000305B6 <AmiBlitz3.ab3@22102>   MOVEQ.l #$08,D0
000305BC <AmiBlitz3.ab3@22103>   MOVE.l mempool,a0
000305C0 <AmiBlitz3.ab3@22104>    JSR _FreePooled(A6)
000305C4 <AmiBlitz3.ab3@22105> BRA.w doendsel__loop
000305CA <AmiBlitz3.ab3@22108>   JSR popselect                                            ;fix stack on select
000305CE <AmiBlitz3.ab3@22109>   MOVEA.l firstsel(PC),A1
000305D4 <AmiBlitz3.ab3@22110>   MOVE.l (A1),firstsel
000305D6 <AmiBlitz3.ab3@22111>   MOVEQ.l #$0E,D0
000305DC <AmiBlitz3.ab3@22112>   MOVEA.l _execbase,A6
000305E2 <AmiBlitz3.ab3@22113>   MOVE.l mempool,a0
000305E6 <AmiBlitz3.ab3@22114>   JSR _FreePooled(A6)
000305EC <AmiBlitz3.ab3@22115> JMP get1bytemain
000305EE <AmiBlitz3.ab3@22119>   MOVEA.l (A7)+,A1
000305F0 <AmiBlitz3.ab3@22120>   SUBQ.w #8,A1
000305F2 <AmiBlitz3.ab3@22121>   MOVEQ.l #$09,D0
000305F4 <AmiBlitz3.ab3@22122>   ADD.l (A1),D0
000305F6 <AmiBlitz3.ab3@22125>   ADDQ.w #2,A7                                             ;for runtime errs!
000305FA <AmiBlitz3.ab3@22130>   MOVE.l firstsel(PC),D0
000305FE <AmiBlitz3.ab3@22131>    BEQ.w JUMP_defaerr
00030600 <AmiBlitz3.ab3@22132>   MOVEA.l D0,A2
00030604 <AmiBlitz3.ab3@22133>   BSR.w JL_0_CE26
00030608 <AmiBlitz3.ab3@22134>   BSR.w JL_0_CDFC
0003060C <AmiBlitz3.ab3@22135>   CLR.l $8(A2)
00030610 <AmiBlitz3.ab3@22136>   MOVE.w $C(A2),D2
00030614 <AmiBlitz3.ab3@22137> BRA.w JL_0_CE5E
0003061A <AmiBlitz3.ab3@22140> JMP defaerr
0003061E <AmiBlitz3.ab3@22143>   MOVE.l $8(A2),D0
00030622 <AmiBlitz3.ab3@22144>    BEQ.w JL_0_CE24
00030624 <AmiBlitz3.ab3@22145>   MOVEA.l D0,A0
0003062A <AmiBlitz3.ab3@22146>   MOVE.l destpointer,D1
0003062C <AmiBlitz3.ab3@22147>   SUB.l A0,D1
00030632 <AmiBlitz3.ab3@22149>     TST.b fast
00030636 <AmiBlitz3.ab3@22150>     BEQ 'l1
0003063C <AmiBlitz3.ab3@22151>     TST.w dontwrite
00030640 <AmiBlitz3.ab3@22152>     BNE.w JL_0_CE24
00030642 <AmiBlitz3.ab3@22153>     ADDQ.l #2,d1
00030646 <AmiBlitz3.ab3@22154>     MOVE.l D1,-2(A0)
0003064A <AmiBlitz3.ab3@22155>   BRA JL_0_CE24
00030650 <AmiBlitz3.ab3@22159>   TST.w dontwrite
00030654 <AmiBlitz3.ab3@22160>      BNE.w JL_0_CE24
0003065A <AmiBlitz3.ab3@22161>    CMP.l #MaxWordSgnd,D1
0003065E <AmiBlitz3.ab3@22162>    BHI.w JUMP_cbraerr
00030660 <AmiBlitz3.ab3@22163>   MOVE.w D1,(A0)
00030662 <AmiBlitz3.ab3@22166> RTS
00030668 <AmiBlitz3.ab3@22169> JMP cbraerr
0003066C <AmiBlitz3.ab3@22173>   MOVE.l $8(A2),D0
00030670 <AmiBlitz3.ab3@22174>    BEQ.w JL_0_CE5C
00030672 <AmiBlitz3.ab3@22175>   MOVEA.l D0,A3
00030676 <AmiBlitz3.ab3@22176>   MOVE.w #$6000,D1
0003067C <AmiBlitz3.ab3@22178>    TST.b fast
00030680 <AmiBlitz3.ab3@22179>    BEQ 'l1
00030686 <AmiBlitz3.ab3@22180>    OR.l #$ff,d1
0003068A <AmiBlitz3.ab3@22181>    BSR writeword
0003068E <AmiBlitz3.ab3@22185>   BSR.w writeword
00030690 <AmiBlitz3.ab3@22186>   MOVEQ.l #$08,D0
00030692 <AmiBlitz3.ab3@22187>   MOVEQ.l #$01,D1
00030698 <AmiBlitz3.ab3@22188>   MOVEA.l _execbase,A6
0003069E <AmiBlitz3.ab3@22189>   MOVE.l mempool,a0
000306A2 <AmiBlitz3.ab3@22190>   JSR _AllocPooled(a6)
000306A4 <AmiBlitz3.ab3@22192>   MOVEA.l D0,A0
000306A8 <AmiBlitz3.ab3@22193>   MOVE.l $4(A2),(A0)
000306AC <AmiBlitz3.ab3@22194>   MOVE.l A0,$4(A2)
000306B4 <AmiBlitz3.ab3@22195>   MOVE.l destpointer,$4(A0)
000306B8 <AmiBlitz3.ab3@22196> BRA.w writeword
000306BA <AmiBlitz3.ab3@22199> RTS
000306C0 <AmiBlitz3.ab3@22203>   TST.b debugmode
000306C4 <AmiBlitz3.ab3@22204>    BEQ.w JL_0_CE7A
000306C8 <AmiBlitz3.ab3@22205>   MOVE.w #$C313,D1
000306CC <AmiBlitz3.ab3@22206>   CMP.w #$3,D2
000306D0 <AmiBlitz3.ab3@22207>    BCS.w JL_0_CE76
000306D2 <AmiBlitz3.ab3@22208>   ADDQ.w #1,D1
000306D6 <AmiBlitz3.ab3@22211> BRA.w Atokejsr
000306D8 <AmiBlitz3.ab3@22214> RTS
000306DE <AmiBlitz3.ab3@22218> JMP caseerr
000306E2 <AmiBlitz3.ab3@22221>   MOVE.l firstsel(PC),D0
000306E6 <AmiBlitz3.ab3@22222>    BEQ.w JUMP_caseerr
000306E8 <AmiBlitz3.ab3@22223>   MOVEA.l D0,A2
000306EC <AmiBlitz3.ab3@22224>    BSR.w JL_0_CE26
000306F0 <AmiBlitz3.ab3@22225>    BSR.w JL_0_CDFC
000306F4 <AmiBlitz3.ab3@22226>   MOVE.w $C(A2),D2
000306F6 <AmiBlitz3.ab3@22227>   MOVE.w D2,-(A7)
000306FA <AmiBlitz3.ab3@22228>    BSR.w JL_0_CE5E
000306FC <AmiBlitz3.ab3@22229>   MOVE.w (A7),D2
00030700 <AmiBlitz3.ab3@22230>    BSR.w bakeval
00030702 <AmiBlitz3.ab3@22231>   MOVE.w (A7)+,D2
00030706 <AmiBlitz3.ab3@22232>   LEA selcomb(PC),A0
0003070A <AmiBlitz3.ab3@22233>   LEA selcombf(PC),A1
0003070E <AmiBlitz3.ab3@22234>   CMP.w #$1,D2
00030712 <AmiBlitz3.ab3@22235>    BEQ.w JL_0_CED8
00030716 <AmiBlitz3.ab3@22236>   LEA selcomw(PC),A0
0003071A <AmiBlitz3.ab3@22237>   CMP.w #$2,D2
0003071E <AmiBlitz3.ab3@22238>    BEQ.w JL_0_CED8
00030722 <AmiBlitz3.ab3@22239>   LEA selcoml(PC),A0
00030726 <AmiBlitz3.ab3@22240>   LEA selcomlf(PC),A1
0003072A <AmiBlitz3.ab3@22241>   CMP.w #$7,D2
0003072E <AmiBlitz3.ab3@22242>    BCS.w JL_0_CED8
00030732 <AmiBlitz3.ab3@22244>   MOVE.w #$CE01,D1
00030736 <AmiBlitz3.ab3@22245>    BSR.w Atokejsr
0003073A <AmiBlitz3.ab3@22246> BRA.w JL_0_CEDC
0003073E <AmiBlitz3.ab3@22249>   BSR.w pokecode
00030742 <AmiBlitz3.ab3@22252>   MOVE.w selbne(PC),D1
00030748 <AmiBlitz3.ab3@22254>     TST.b fast
0003074C <AmiBlitz3.ab3@22255>     BEQ 'l1
00030752 <AmiBlitz3.ab3@22256>     ORI.l #$ff,d1
00030756 <AmiBlitz3.ab3@22257>     BSR writeword
0003075A <AmiBlitz3.ab3@22260>   BSR.w writeword
0003075E <AmiBlitz3.ab3@22261>   MOVEA.l firstsel(PC),A0
00030766 <AmiBlitz3.ab3@22262>   MOVE.l destpointer,$8(A0)
0003076A <AmiBlitz3.ab3@22263> BRA.w writeword
0003076E <AmiBlitz3.ab3@22267> pcchk:      Dc.b $3F,$3C,$73,$45                           ;MOVE.W  #$7345,-(A7)   ;#"sE",-(a7) org source
00030770 <AmiBlitz3.ab3@22268> clrst:      Dc.b $42,$A7                                   ;CLR.L   -(A7)
00030774 <AmiBlitz3.ab3@22271> sellineat:  Ds.l 1
0003077A <AmiBlitz3.ab3@22277>   TST.b debugmode
0003077E <AmiBlitz3.ab3@22278>    BEQ.w JL_0_CF0E
00030782 <AmiBlitz3.ab3@22279>   MOVE.l pcchk(PC),D1                                      ;move #"sE",-(a7)
00030786 <AmiBlitz3.ab3@22280>    BSR.w writelong
00030790 <AmiBlitz3.ab3@22283>   MOVE.l linenumat,sellineat
0003079A <AmiBlitz3.ab3@22285>    MOVE.l destpointer,pushpc
000307A4 <AmiBlitz3.ab3@22286>   MOVE.l hunkoffsetbase,pushoff
000307A6 <AmiBlitz3.ab3@22287>   MOVEQ.l #$00,D2
000307AA <AmiBlitz3.ab3@22288>    BSR.w bakevalu                                          ;Evaluate
000307AE <AmiBlitz3.ab3@22289>    BSR.w JL_0_B5D2
000307B2 <AmiBlitz3.ab3@22290>   CMP.w #$7,D2
000307B6 <AmiBlitz3.ab3@22291>    BNE.w JL_0_CF36
000307BA <AmiBlitz3.ab3@22292>   MOVE.w clrst(PC),D1
000307BE <AmiBlitz3.ab3@22293>    BSR.w writeword
000307C2 <AmiBlitz3.ab3@22296>    BSR.w JL_0_B63C
000307C6 <AmiBlitz3.ab3@22297>   LEA selpushb(PC),A0
000307CA <AmiBlitz3.ab3@22298>   LEA selpushbf(PC),A1
000307CE <AmiBlitz3.ab3@22299>   CMP.w #$1,D2
000307D2 <AmiBlitz3.ab3@22300>    BEQ.w JL_0_CF88
000307D6 <AmiBlitz3.ab3@22301>   LEA selpushw(PC),A0
000307DA <AmiBlitz3.ab3@22302>   CMP.w #$2,D2
000307DE <AmiBlitz3.ab3@22303>    BEQ.w JL_0_CF88
000307E2 <AmiBlitz3.ab3@22304>   LEA selpushl(PC),A0
000307E6 <AmiBlitz3.ab3@22305>   LEA selpushlf(PC),A1
000307EA <AmiBlitz3.ab3@22306>   CMP.w #$7,D2
000307EE <AmiBlitz3.ab3@22307>    BCS.w JL_0_CF88
000307F4 <AmiBlitz3.ab3@22309>   MOVE.w moved0a3,D1                                       ;d0 to a3!
000307F8 <AmiBlitz3.ab3@22310>    BSR.w writeword
000307FC <AmiBlitz3.ab3@22311>   LEA selpushs(PC),A0
00030800 <AmiBlitz3.ab3@22312>   LEA selpushsf(PC),A1
00030804 <AmiBlitz3.ab3@22313>    BSR.w pokecode
00030808 <AmiBlitz3.ab3@22314>   MOVE.w #$C701,D1
0003080C <AmiBlitz3.ab3@22315>    BSR.w Atokejsr
00030810 <AmiBlitz3.ab3@22316> BRA.w JL_0_CF8C
00030814 <AmiBlitz3.ab3@22319>   BSR.w pokecode
00030816 <AmiBlitz3.ab3@22322>   MOVEQ.l #$0E,D0
00030818 <AmiBlitz3.ab3@22323>   MOVEQ.l #$01,D1
0003081E <AmiBlitz3.ab3@22324>   MOVEA.l _execbase,A6
00030824 <AmiBlitz3.ab3@22326>   MOVE.l mempool,a0
00030828 <AmiBlitz3.ab3@22327>   JSR _AllocPooled(a6)
0003082A <AmiBlitz3.ab3@22328>   MOVEA.l D0,A0
0003082E <AmiBlitz3.ab3@22329>   MOVE.l firstsel(PC),(A0)
00030834 <AmiBlitz3.ab3@22330>   MOVE.l A0,firstsel
00030838 <AmiBlitz3.ab3@22331>   CLR.l $4(A0)
0003083C <AmiBlitz3.ab3@22332>   CLR.l $8(A0)
00030840 <AmiBlitz3.ab3@22333>   MOVE.w D2,$C(A0)
00030842 <AmiBlitz3.ab3@22334> RTS
00030848 <AmiBlitz3.ab3@22338>   MOVE.l firstrep,D0
0003084C <AmiBlitz3.ab3@22339>    BEQ.w JUMP_unterr1
00030850 <AmiBlitz3.ab3@22340>   MOVE.w #$6000,D1
00030854 <AmiBlitz3.ab3@22341>   BSR.w writeword
00030856 <AmiBlitz3.ab3@22342>   MOVEA.l D0,A0
0003085A <AmiBlitz3.ab3@22343>   MOVE.l $4(A0),D1
00030860 <AmiBlitz3.ab3@22344>   SUB.l destpointer,D1
00030862 <AmiBlitz3.ab3@22345>   TST.w D1
00030866 <AmiBlitz3.ab3@22346>    BPL.w JUMP_unterr2
0003086A <AmiBlitz3.ab3@22347>   BSR.w writeword
00030870 <AmiBlitz3.ab3@22348>   MOVEA.l _execbase,A6
00030874 <AmiBlitz3.ab3@22349> BRA.w JL_0_D036
0003087A <AmiBlitz3.ab3@22352> JMP unterr2
00030880 <AmiBlitz3.ab3@22355> JMP unterr1
00030886 <AmiBlitz3.ab3@22359>   MOVE.l firstrep,D0
0003088A <AmiBlitz3.ab3@22360>    BEQ.w JUMP_unterr1
0003088E <AmiBlitz3.ab3@22361>   BSR.w do_if
00030894 <AmiBlitz3.ab3@22362>   JSR reget
00030898 <AmiBlitz3.ab3@22363>    BNE.w JUMP_syntaxerr
0003089E <AmiBlitz3.ab3@22364>   MOVE.w dontwrite,D1
000308A2 <AmiBlitz3.ab3@22365>    BNE.w JL_0_D020
000308A8 <AmiBlitz3.ab3@22366>   MOVEA.l firstrep,A0
000308AE <AmiBlitz3.ab3@22367>   MOVEA.l destpointer,A1
000308B4 <AmiBlitz3.ab3@22369>     TST.b fast
000308B8 <AmiBlitz3.ab3@22370>     BEQ 'l1
000308BA <AmiBlitz3.ab3@22371>     SUBQ.w #4,a1
000308BE <AmiBlitz3.ab3@22372>     MOVE.l $4(A0),D2
000308C0 <AmiBlitz3.ab3@22373>     SUB.l A1,D2
000308C2 <AmiBlitz3.ab3@22374>     MOVE.l d2,(a1)
000308C6 <AmiBlitz3.ab3@22375>   BRA JL_0_D020
000308C8 <AmiBlitz3.ab3@22379>   SUBQ.w #2,A1
000308CC <AmiBlitz3.ab3@22380>   MOVE.l $4(A0),D2
000308CE <AmiBlitz3.ab3@22381>   SUB.l A1,D2
000308D0 <AmiBlitz3.ab3@22382>   TST.w D2
000308D4 <AmiBlitz3.ab3@22383>    BPL.w JUMP_unterr2
000308D6 <AmiBlitz3.ab3@22384>   MOVE.w D2,(A1)
000308DC <AmiBlitz3.ab3@22387>   MOVEA.l firstiff,A1
000308E2 <AmiBlitz3.ab3@22388>   MOVE.l (A1),firstiff
000308E4 <AmiBlitz3.ab3@22389>   MOVEQ.l #$0E,D0
000308EA <AmiBlitz3.ab3@22390>   MOVEA.l _execbase,A6
000308F0 <AmiBlitz3.ab3@22391>   MOVE.l mempool,a0
000308F4 <AmiBlitz3.ab3@22392>   JSR _FreePooled(A6)
000308FA <AmiBlitz3.ab3@22395>   MOVEA.l firstrep,A1
00030900 <AmiBlitz3.ab3@22396>   MOVE.l (A1),firstrep
00030902 <AmiBlitz3.ab3@22397>   MOVEQ.l #$08,D0
00030908 <AmiBlitz3.ab3@22398>   MOVE.l mempool,a0
0003090C <AmiBlitz3.ab3@22399> JMP _FreePooled(A6)
00030910 <AmiBlitz3.ab3@22402> iflineat:   Ds.l 1
00030912 <AmiBlitz3.ab3@22406>   MOVEQ.l #$00,D2
00030918 <AmiBlitz3.ab3@22407>   TST.b fast
0003091C <AmiBlitz3.ab3@22408>   BEQ 'l1
00030924 <AmiBlitz3.ab3@22409>   MOVE.b #1,nostringopt
0003092C <AmiBlitz3.ab3@22410>   MOVE.b #1,iniffcommand
0003092E <AmiBlitz3.ab3@22414>   MOVEQ.l #$00,D1
00030930 <AmiBlitz3.ab3@22417>   MOVE.w D1,-(A7)
00030936 <AmiBlitz3.ab3@22418>   MOVE.l destpointer,-(A7)
00030938 <AmiBlitz3.ab3@22419>   MOVE.w D2,-(A7)
00030942 <AmiBlitz3.ab3@22420>   MOVE.l linenumat,iflineat
00030944 <AmiBlitz3.ab3@22421>   MOVEQ.l #$00,D2
0003094E <AmiBlitz3.ab3@22422>   MOVE.b optistring,optistring2
00030956 <AmiBlitz3.ab3@22423>   MOVE.b #1,optistring
0003095A <AmiBlitz3.ab3@22424>   BSR.w bakevalu
00030964 <AmiBlitz3.ab3@22425>   MOVE.b optistring2,optistring
00030968 <AmiBlitz3.ab3@22426>   CMP.w #$5,D2
0003096C <AmiBlitz3.ab3@22427>    BEQ.w JL_0_D09C
00030970 <AmiBlitz3.ab3@22428>   MOVE.w thetst1(PC),D1
00030974 <AmiBlitz3.ab3@22429>   CMP.w #$1,D2
00030978 <AmiBlitz3.ab3@22430>    BEQ.w writebranchcode
0003097C <AmiBlitz3.ab3@22431>   MOVE.w thetst2(PC),D1
00030980 <AmiBlitz3.ab3@22432>   CMP.w #$2,D2
00030984 <AmiBlitz3.ab3@22433>    BEQ.w writebranchcode
00030988 <AmiBlitz3.ab3@22434>   MOVE.w thetst4(PC),D1
0003098C <AmiBlitz3.ab3@22435>   CMP.w #$7,D2
00030990 <AmiBlitz3.ab3@22436>    BEQ.w writebranchcode
00030994 <AmiBlitz3.ab3@22437>   MOVE.w thetst3(PC),D1
00030998 <AmiBlitz3.ab3@22438> BRA.w writebranchcode
0003099E <AmiBlitz3.ab3@22441>   TST.b fpu
000309A2 <AmiBlitz3.ab3@22442>   BEQ 'dofpu
000309A8 <AmiBlitz3.ab3@22443>   MOVE.l #$f200003a,d1
000309AC <AmiBlitz3.ab3@22444>   BSR writelong
000309B0 <AmiBlitz3.ab3@22445>   MOVE.w #$f2c1,d1
000309B4 <AmiBlitz3.ab3@22446>   BSR writeword
000309B8 <AmiBlitz3.ab3@22447>   BSR writelong
000309BA <AmiBlitz3.ab3@22448>   ADDQ.l #2,a7
000309BE <AmiBlitz3.ab3@22449> BRA.w br2
000309C2 <AmiBlitz3.ab3@22452>    MOVE.w #$C900,D1
000309C6 <AmiBlitz3.ab3@22453>    BSR.w Atokejsr
000309CA <AmiBlitz3.ab3@22454>   MOVE.l thetst5(PC),D1
000309CE <AmiBlitz3.ab3@22455>    BSR.w writelong
000309D2 <AmiBlitz3.ab3@22456> BRA.w JL_0_D0B4
000309D8 <AmiBlitz3.ab3@22460>          CLR.b iniffcommand
000309DE <AmiBlitz3.ab3@22461>          TST.b fast                                        ;branchcode
000309E2 <AmiBlitz3.ab3@22462>          BEQ b6
000309E8 <AmiBlitz3.ab3@22463>          TST.b fpu
000309EC <AmiBlitz3.ab3@22464>          BEQ 'nofpu
000309F2 <AmiBlitz3.ab3@22468>           MOVE.l destpointer,a0
000309F8 <AmiBlitz3.ab3@22469>          SUB.l load_var_addr,a0
000309FE <AmiBlitz3.ab3@22470>          CMP.l #4,a0
00030A02 <AmiBlitz3.ab3@22471>          BEQ 'nofpu
00030A0A <AmiBlitz3.ab3@22472>          CMP.l #$f2400014,-4(a4)                           ;<
00030A0E <AmiBlitz3.ab3@22473>          BNE 'nolt
00030A14 <AmiBlitz3.ab3@22474>          SUBQ.l #2,destpointer
00030A1A <AmiBlitz3.ab3@22475>          MOVE.w #$f293,-4(a4)                              ;
00030A1E <AmiBlitz3.ab3@22476> BRA 'brf
00030A26 <AmiBlitz3.ab3@22479>   CMP.l #$f2400015,-4(a4)                                  ;<=
00030A2A <AmiBlitz3.ab3@22480>          BNE 'nole
00030A30 <AmiBlitz3.ab3@22481>          SUBQ.l #2,destpointer
00030A36 <AmiBlitz3.ab3@22482>          MOVE.w #$f292,-4(a4)
00030A3A <AmiBlitz3.ab3@22483> BRA 'brf
00030A42 <AmiBlitz3.ab3@22486>   CMP.l #$f2400013,-4(a4)                                  ;=>
00030A46 <AmiBlitz3.ab3@22487>          BNE 'noge
00030A4C <AmiBlitz3.ab3@22488>          SUBQ.l #2,destpointer
00030A52 <AmiBlitz3.ab3@22489>          MOVE.w #$f294,-4(a4)
00030A56 <AmiBlitz3.ab3@22490> BRA 'brf
00030A5E <AmiBlitz3.ab3@22493>   CMP.l #$f2400012,-4(a4)                                  ;>
00030A62 <AmiBlitz3.ab3@22494>          BNE 'nogt
00030A68 <AmiBlitz3.ab3@22495>          SUBQ.l #2,destpointer
00030A6E <AmiBlitz3.ab3@22496>          MOVE.w #$f295,-4(a4)
00030A72 <AmiBlitz3.ab3@22497> BRA 'brf
00030A7A <AmiBlitz3.ab3@22500>   CMP.l #$f2400001,-4(a4)                                  ;=
00030A7E <AmiBlitz3.ab3@22501>          BNE 'noeq
00030A84 <AmiBlitz3.ab3@22502>          SUBQ.l #2,destpointer
00030A8A <AmiBlitz3.ab3@22503>          MOVE.w #$f28e,-4(a4)
00030A8E <AmiBlitz3.ab3@22504> BRA 'brf
00030A96 <AmiBlitz3.ab3@22507>   CMP.l #$f240000e,-4(a4)                                  ;<>
00030A9A <AmiBlitz3.ab3@22508>          BNE 'none
00030AA0 <AmiBlitz3.ab3@22509>          SUBQ.l #2,destpointer
00030AA6 <AmiBlitz3.ab3@22510>          MOVE.w #$f281,-4(a4)
00030AA8 <AmiBlitz3.ab3@22513>   ADDQ.l #2,a7
00030AAE <AmiBlitz3.ab3@22515>     TST.b fast
00030AB2 <AmiBlitz3.ab3@22516>     BEQ 'l1
00030AB8 <AmiBlitz3.ab3@22517>     OR.b #$40,-3(a4)
00030ABC <AmiBlitz3.ab3@22518>     BSR writeword
00030AC0 <AmiBlitz3.ab3@22522>  BSR writeword
00030AC4 <AmiBlitz3.ab3@22523> BRA.s br2
00030ACA <AmiBlitz3.ab3@22527>   MOVE.l destpointer,a0
00030AD0 <AmiBlitz3.ab3@22528>          SUB.l load_var_addr,a0
00030AD6 <AmiBlitz3.ab3@22529>          CMP.l #4,a0
00030ADA <AmiBlitz3.ab3@22530>          BEQ JL_0_D0B4
00030AE0 <AmiBlitz3.ab3@22531>          CMP.w #$4eb9,-6(a4)
00030AE4 <AmiBlitz3.ab3@22532>          BEQ b6
00030AEA <AmiBlitz3.ab3@22533>          CMP.w #$5ec0,-2(a4)                               ;>
00030AEE <AmiBlitz3.ab3@22534>      BNE.s 'lb1
00030AF4 <AmiBlitz3.ab3@22535>          MOVE.w #$6f00,-2(a4)                              ;ble
00030AF8 <AmiBlitz3.ab3@22536> BRA.s br
00030AFE <AmiBlitz3.ab3@22539>  CMP.w #$5dc0,-2(a4)                                       ;<
00030B02 <AmiBlitz3.ab3@22540>   BNE.s 'lb2
00030B08 <AmiBlitz3.ab3@22541>          MOVE.w #$6c00,-2(a4)                              ;bge
00030B0C <AmiBlitz3.ab3@22542> BRA.s br
00030B12 <AmiBlitz3.ab3@22545>   CMP.w #$57c0,-2(a4)                                      ;=
00030B16 <AmiBlitz3.ab3@22546>   BNE.s 'lb3
00030B1C <AmiBlitz3.ab3@22547>          MOVE.w #$6600,-2(a4)                              ;bne
00030B20 <AmiBlitz3.ab3@22548> BRA.s br
00030B26 <AmiBlitz3.ab3@22551>   CMP.w #$56c0,-2(a4)                                      ;<>
00030B2A <AmiBlitz3.ab3@22552>   BNE.s 'lb4
00030B30 <AmiBlitz3.ab3@22553>          MOVE.w #$6700,-2(a4)                              ;beq
00030B34 <AmiBlitz3.ab3@22554> BRA.s br
00030B3A <AmiBlitz3.ab3@22557>   CMP.w #$5cc0,-2(a4)                                      ;>=
00030B3E <AmiBlitz3.ab3@22558>   BNE.s 'lb5
00030B44 <AmiBlitz3.ab3@22559>          MOVE.w #$6d00,-2(a4)                              ;blt
00030B48 <AmiBlitz3.ab3@22560> BRA.s br
00030B4E <AmiBlitz3.ab3@22563>   CMP.w #$5fc0,-2(a4)                                      ;<=
00030B52 <AmiBlitz3.ab3@22564>         BNE.s b6
00030B58 <AmiBlitz3.ab3@22565>          MOVE.w #$6e00,-2(a4)                              ;bgt
00030B5A <AmiBlitz3.ab3@22568>   TST.w (a7)+
00030B60 <AmiBlitz3.ab3@22570>         TST.b fast
00030B64 <AmiBlitz3.ab3@22571>         BEQ 'l1
00030B6A <AmiBlitz3.ab3@22572>         OR.b #$ff,-1(a4)                                   ;long branches
00030B6E <AmiBlitz3.ab3@22573>         BSR writeword
00030B72 <AmiBlitz3.ab3@22577>         BSR writeword
00030B76 <AmiBlitz3.ab3@22578> BRA.s br2
00030B7A <AmiBlitz3.ab3@22581>   BSR.w writeword
00030B7E <AmiBlitz3.ab3@22584>   MOVE.l posbr(PC),D1
00030B80 <AmiBlitz3.ab3@22585>   TST.w (A7)+
00030B84 <AmiBlitz3.ab3@22586>    BEQ.w JL_0_D0C2
00030B88 <AmiBlitz3.ab3@22587>   MOVE.l negbr(PC),D1
00030B8E <AmiBlitz3.ab3@22590>   TST.b fast
00030B92 <AmiBlitz3.ab3@22591>            BEQ 'l1
00030B98 <AmiBlitz3.ab3@22592>            OR.l #$00ff0000,d1
00030B9C <AmiBlitz3.ab3@22593>            BSR writelong
00030BA0 <AmiBlitz3.ab3@22594>            BSR writeword
00030BA4 <AmiBlitz3.ab3@22595> BRA br2
00030BA8 <AmiBlitz3.ab3@22598>   BSR.w writelong
00030BAA <AmiBlitz3.ab3@22601>  MOVEQ.l #$0E,D0
00030BAC <AmiBlitz3.ab3@22602>   MOVEQ.l #$01,D1
00030BB2 <AmiBlitz3.ab3@22603>   MOVEA.l _execbase,A6
00030BB8 <AmiBlitz3.ab3@22605>   MOVE.l mempool,a0
00030BBC <AmiBlitz3.ab3@22606>   JSR _AllocPooled(a6)
00030BBE <AmiBlitz3.ab3@22607>   MOVEA.l D0,A0
00030BC4 <AmiBlitz3.ab3@22608>   MOVE.l firstiff,(A0)
00030BCA <AmiBlitz3.ab3@22609>   MOVE.l A0,firstiff
00030BCE <AmiBlitz3.ab3@22610>   MOVE.l (A7)+,$4(A0)
00030BD6 <AmiBlitz3.ab3@22611>   MOVE.l destpointer,$8(A0)
00030BDA <AmiBlitz3.ab3@22612>   MOVE.w (A7)+,$C(A0)
00030BE0 <AmiBlitz3.ab3@22613>    JSR reget
00030BE4 <AmiBlitz3.ab3@22614>    BEQ.w JL_0_D10C
00030BEA <AmiBlitz3.ab3@22615>   BSET #$7,$C(A0)
00030BF4 <AmiBlitz3.ab3@22619>   MOVE.w oldqflag,instringon
00030BFA <AmiBlitz3.ab3@22620>   MOVEA.l lastsourcepos,A5
00030C02 <AmiBlitz3.ab3@22621>   MOVE.w #$003A,lastchar
00030C04 <AmiBlitz3.ab3@22624> RTS
00030C08 <AmiBlitz3.ab3@22628>   CMP.w #$1,D0
00030C0C <AmiBlitz3.ab3@22629>    BLT.w JL_0_D128
00030C10 <AmiBlitz3.ab3@22630>   CMP.w #$0,D0
00030C14 <AmiBlitz3.ab3@22631>    BGT.w JL_0_D128
00030C16 <AmiBlitz3.ab3@22632>   ADD.w D0,D0
00030C18 <AmiBlitz3.ab3@22633>   ADD.w D0,D0
00030C1C <AmiBlitz3.ab3@22634>   MOVEA.l JL_0_D128(PC,D0.W),A0
00030C1E <AmiBlitz3.ab3@22637> JMP (A0)
00030C22 <AmiBlitz3.ab3@22640> BRA.w JL_0_D128
00030C26 <AmiBlitz3.ab3@22644>   CMP.w #$1,D0
00030C2A <AmiBlitz3.ab3@22645>    BLT.w JL_0_D146
00030C2E <AmiBlitz3.ab3@22646>   CMP.w #$0,D0
00030C32 <AmiBlitz3.ab3@22647>    BGT.w JL_0_D146
00030C34 <AmiBlitz3.ab3@22648>   ADD.w D0,D0
00030C36 <AmiBlitz3.ab3@22649>   ADD.w D0,D0
00030C3A <AmiBlitz3.ab3@22650>   MOVEA.l JL_0_D146(PC,D0.W),A0
00030C3C <AmiBlitz3.ab3@22653>   JSR (A0)
00030C40 <AmiBlitz3.ab3@22656> BRA.w JL_0_D146
00030C44 <AmiBlitz3.ab3@22660>   CMP.w #$1,D0
00030C48 <AmiBlitz3.ab3@22661>    BLT.w JL_0_D168
00030C4C <AmiBlitz3.ab3@22662>   CMP.w #$0,D0
00030C50 <AmiBlitz3.ab3@22663>    BGT.w JL_0_D168
00030C52 <AmiBlitz3.ab3@22664>   ADD.w D0,D0
00030C54 <AmiBlitz3.ab3@22665>   ADD.w D0,D0
00030C58 <AmiBlitz3.ab3@22666>   MOVEA.l JL_0_D168(PC,D0.W),A0
00030C5C <AmiBlitz3.ab3@22669>   MOVE.w #$6753,-(A7)                                      ;#'gS' ;for runtime error checking!
00030C5E <AmiBlitz3.ab3@22672>    JSR (A0)
00030C62 <AmiBlitz3.ab3@22675> BRA.w JL_0_D168
00030C64 <AmiBlitz3.ab3@22678> labcnt:   Ds.w 1
00030C66 <AmiBlitz3.ab3@22685>   MOVEQ.l #$02,D2
00030C6A <AmiBlitz3.ab3@22686>    BSR.w bakeval
00030C6E <AmiBlitz3.ab3@22687>   LEA JL_0_D10E(PC),A0
00030C72 <AmiBlitz3.ab3@22688>   LEA JL_0_D12C(PC),A1
00030C76 <AmiBlitz3.ab3@22689>   MOVE.w #$001A,D1
00030C7A <AmiBlitz3.ab3@22690>   CMP.w #-$7FFB,D0
00030C7E <AmiBlitz3.ab3@22691>    BEQ.w JL_0_D1B6
00030C82 <AmiBlitz3.ab3@22692>   CMP.w #-$7FFA,D0
00030C86 <AmiBlitz3.ab3@22693>    BNE.w JUMP_syntaxerr
00030C8A <AmiBlitz3.ab3@22694>   LEA JL_0_D12C(PC),A0
00030C8E <AmiBlitz3.ab3@22695>   LEA JL_0_D14A(PC),A1
00030C92 <AmiBlitz3.ab3@22696>   MOVE.w #$001A,D1
00030C98 <AmiBlitz3.ab3@22697>   TST.b debugmode
00030C9C <AmiBlitz3.ab3@22698>    BEQ.b JL_0_D1B6
00030CA2 <AmiBlitz3.ab3@22699>    JSR chkstak
00030CA6 <AmiBlitz3.ab3@22700>   LEA JL_0_D14A(PC),A0
00030CAA <AmiBlitz3.ab3@22701>   LEA labcnt(PC),A1
00030CAE <AmiBlitz3.ab3@22702>   MOVE.w #$001E,D1
00030CB0 <AmiBlitz3.ab3@22705>   MOVE.w D1,-(A7)
00030CB6 <AmiBlitz3.ab3@22706>   MOVE.l destpointer,-(A7)                                 ;for when we know number of labels!
00030CBA <AmiBlitz3.ab3@22707>    BSR.w pokecode
00030CC0 <AmiBlitz3.ab3@22708>   CLR.w labcnt
00030CC6 <AmiBlitz3.ab3@22713>    JSR get1bytemain
00030CCC <AmiBlitz3.ab3@22714>   SUBQ.l #2,destpointer                                    ;for makealab!
00030CD0 <AmiBlitz3.ab3@22715>    BSR.w JL_0_AE22
00030CD6 <AmiBlitz3.ab3@22716>   ADDQ.l #2,destpointer
00030CDC <AmiBlitz3.ab3@22717>    JSR addoff
00030CE0 <AmiBlitz3.ab3@22718>   MOVE.l $8(A2),D1
00030CE4 <AmiBlitz3.ab3@22719>    BSR.w writelong
00030CEA <AmiBlitz3.ab3@22720>   ADDQ.w #1,labcnt
00030CF0 <AmiBlitz3.ab3@22721>    JSR reget
00030CF4 <AmiBlitz3.ab3@22722>   CMP.w #$2C,D0
00030CF8 <AmiBlitz3.ab3@22723>    BEQ.w JL_0_D1C8
00030CFA <AmiBlitz3.ab3@22724>   MOVEA.l (A7)+,A0
00030CFC <AmiBlitz3.ab3@22725>   MOVE.w (A7)+,D2
00030D02 <AmiBlitz3.ab3@22726>   MOVE.w dontwrite,D1
00030D06 <AmiBlitz3.ab3@22727>    BNE.w JL_0_D21A
00030D0A <AmiBlitz3.ab3@22728>   MOVE.w labcnt(PC),D1
00030D0E <AmiBlitz3.ab3@22729>   MOVE.w D1,$A(A0)
00030D10 <AmiBlitz3.ab3@22730>   ADD.w D1,D1
00030D12 <AmiBlitz3.ab3@22731>   ADD.w D1,D1
00030D14 <AmiBlitz3.ab3@22732>   ADDQ.w #2,D1
00030D18 <AmiBlitz3.ab3@22733>   MOVE.w D1,$2(A0,D2.W)
00030D1A <AmiBlitz3.ab3@22736> RTS
00030D20 <AmiBlitz3.ab3@22740>   TST.b debugmode
00030D24 <AmiBlitz3.ab3@22741>    BEQ.w JL_0_D236
00030D2A <AmiBlitz3.ab3@22742>    JSR chkstak
00030D30 <AmiBlitz3.ab3@22743>   MOVE.l AL_0_D162,D1
00030D34 <AmiBlitz3.ab3@22744>    BSR.w writelong
00030D3A <AmiBlitz3.ab3@22746>   MOVE.w gosubcode,D1
00030D3E <AmiBlitz3.ab3@22747> BRA.w JL_0_D246
00030D44 <AmiBlitz3.ab3@22751>   MOVE.w gotocode,D1
00030D46 <AmiBlitz3.ab3@22754>   MOVE.w D1,-(A7)
00030D4A <AmiBlitz3.ab3@22755>    BSR.w JL_0_AE22
00030D4C <AmiBlitz3.ab3@22756>   MOVE.w (A7)+,D1
00030D50 <AmiBlitz3.ab3@22757>    BSR.w writeword
00030D56 <AmiBlitz3.ab3@22758>    JSR addoff
00030D5A <AmiBlitz3.ab3@22759>   MOVE.l $8(A2),D1
00030D5E <AmiBlitz3.ab3@22760> BRA.w writelong
00030D64 <AmiBlitz3.ab3@22764>   MOVE.w proceduremode,D1
00030D68 <AmiBlitz3.ab3@22765>    BEQ.w JUMP_badpenderr
00030D6C <AmiBlitz3.ab3@22766>   MOVE.w #$4EF9,D1
00030D70 <AmiBlitz3.ab3@22767>    BSR.w writeword
00030D76 <AmiBlitz3.ab3@22768>    JSR addoff
00030D7C <AmiBlitz3.ab3@22769>   MOVEA.l _execbase,A6
00030D7E <AmiBlitz3.ab3@22770>   MOVEQ.l #$08,D0
00030D80 <AmiBlitz3.ab3@22771>   MOVEQ.l #$01,D1
00030D86 <AmiBlitz3.ab3@22773>   MOVE.l mempool,a0
00030D8A <AmiBlitz3.ab3@22774>   JSR _AllocPooled(a6)
00030D8C <AmiBlitz3.ab3@22775>   MOVEA.l D0,A0
00030D92 <AmiBlitz3.ab3@22776>   MOVE.l firstpend,(A0)
00030D98 <AmiBlitz3.ab3@22777>   MOVE.l A0,firstpend
00030DA0 <AmiBlitz3.ab3@22778>   MOVE.l destpointer,$4(A0)
00030DA4 <AmiBlitz3.ab3@22779> BRA.w writelong
00030DA8 <AmiBlitz3.ab3@22783>   BSR.w do_AsmExit
00030DAE <AmiBlitz3.ab3@22784> JMP get1bytemain
00030DB6 <AmiBlitz3.ab3@22788>   MOVE.b #1,nostringopt
00030DBA <AmiBlitz3.ab3@22789>   MOVEM.l a0/a1/d1,-(a7)
00030DC0 <AmiBlitz3.ab3@22790>   MOVEA.l currentfunction,A0
00030DC6 <AmiBlitz3.ab3@22791>     CMP.l #0,a0
00030DCA <AmiBlitz3.ab3@22792>     BNE 'l1
00030DD0 <AmiBlitz3.ab3@22793>     JMP errorasmexit
00030DD2 <AmiBlitz3.ab3@22794> 'l1 MOVEQ.l #$00,D2
00030DD6 <AmiBlitz3.ab3@22795>   MOVE.b $5(A0),D2
00030DDA <AmiBlitz3.ab3@22796>   BSR.w eval
00030DE0 <AmiBlitz3.ab3@22798>   MOVEA.l currentfunction,A0
00030DE4 <AmiBlitz3.ab3@22799>   MOVE.l funcstruct_returntype(a0),a0
00030DEA <AmiBlitz3.ab3@22800>   CMP.l #0,a0
00030DEE <AmiBlitz3.ab3@22801>   BEQ 'isstatement
00030DF6 <AmiBlitz3.ab3@22802>   CMP.l #$100,4(a0)
00030DFA <AmiBlitz3.ab3@22803>   BLT.w 'isvar
00030DFC <AmiBlitz3.ab3@22804>   MOVE.l a2,a1
00030E02 <AmiBlitz3.ab3@22805>   TST.l typetocast
00030E06 <AmiBlitz3.ab3@22806>   BEQ 'nocast
00030E0C <AmiBlitz3.ab3@22807>   MOVE.l typetocast,a1
00030E0E <AmiBlitz3.ab3@22808> 'nocast  CMP.l a0,a1
00030E12 <AmiBlitz3.ab3@22809>   BEQ 'ok
00030E18 <AmiBlitz3.ab3@22810>   CLR.l typetocast
00030E1E <AmiBlitz3.ab3@22811>   MOVE.l lasttoken,d1
00030E22 <AmiBlitz3.ab3@22812>   CMP.w #$b581,d1                   ; ok, when token for null
00030E26 <AmiBlitz3.ab3@22813>   BEQ 'isnull
00030E2C <AmiBlitz3.ab3@22814> 'error  JMP errorconvertreturntype
00030E30 <AmiBlitz3.ab3@22821>   MOVEM.l (a7)+,a0/a1/d1
00030E34 <AmiBlitz3.ab3@22822> BRA.w do_AsmExit
00030E3A <AmiBlitz3.ab3@22824> error_convert_types2 JMP error_convert_types
00030E40 <AmiBlitz3.ab3@22837>   TST.b debugmode
00030E44 <AmiBlitz3.ab3@22838>    BEQ.w JL_0_D2CA
00030E48 <AmiBlitz3.ab3@22839>   MOVE.w #$C305,D1
00030E4C <AmiBlitz3.ab3@22840> BRA.w Atokejsr
00030E50 <AmiBlitz3.ab3@22843>   MOVE.w #$4E75,D1
00030E54 <AmiBlitz3.ab3@22844> BRA.w writeword
00030E58 <AmiBlitz3.ab3@22847> localslist:  Ds.l 1                                        ;all locals for procs.;??Looks like obsovled data??
00030E5C <AmiBlitz3.ab3@22848> proclocals:  Ds.l 1                                        ;for debugga!
00030E5E <AmiBlitz3.ab3@22849> procnum:     Ds.w 1
00030E60 <AmiBlitz3.ab3@22850> procnum2:    Ds.w 1
00030E64 <AmiBlitz3.ab3@22851> prolineat:   Ds.l 1
00030E6A <AmiBlitz3.ab3@22855>    TST.w proceduremode
00030E6E <AmiBlitz3.ab3@22856>    BGT JUMP_sreterr
00030E72 <AmiBlitz3.ab3@22857>    CMP.w #-$7FF9,D0
00030E76 <AmiBlitz3.ab3@22858>    BEQ.w JL_0_D29C
00030E78 <AmiBlitz3.ab3@22859>    MOVEQ.l #-$01,D1
00030E7C <AmiBlitz3.ab3@22860> BRA.w do_function2
00030E82 <AmiBlitz3.ab3@22863> JMP sreterr
00030E88 <AmiBlitz3.ab3@22867>   CLR.b skipfunc
00030E8E <AmiBlitz3.ab3@22868>   TST.l unusedfunc
00030E92 <AmiBlitz3.ab3@22869>   BEQ 'ex
00030E96 <AmiBlitz3.ab3@22870>   MOVEM.l d0-d7/a0-a6,-(a7)
00030E9C <AmiBlitz3.ab3@22871>   MOVE.l unusedfunc,d1
00030EA2 <AmiBlitz3.ab3@22872>   LEA ptr_parameterstore,a5
00030EA4 <AmiBlitz3.ab3@22875>   MOVE.l d1,a0
00030EA8 <AmiBlitz3.ab3@22876>   LEA 12(a0),a2
00030EAA <AmiBlitz3.ab3@22877>   MOVE.l a5,a1
00030EAC <AmiBlitz3.ab3@22879>   CMPM.b (a1)+,(a2)+
00030EB0 <AmiBlitz3.ab3@22880>   BNE 'neq
00030EB2 <AmiBlitz3.ab3@22881>   TST.b (a2)
00030EB6 <AmiBlitz3.ab3@22882>   BNE 'ch
00030EB8 <AmiBlitz3.ab3@22883>   TST.b (a1)
00030EBC <AmiBlitz3.ab3@22884>   BNE 'neq
00030EC4 <AmiBlitz3.ab3@22885>   MOVE.b #1,skipfunc
00030EC8 <AmiBlitz3.ab3@22886> BRA 'out
00030ECA <AmiBlitz3.ab3@22889>   MOVE.l (a0),d1
00030ECE <AmiBlitz3.ab3@22890>   BNE 'ag
00030ED2 <AmiBlitz3.ab3@22893>   MOVEM.l (a7)+,d0-d7/a0-a6
00030ED4 <AmiBlitz3.ab3@22896> RTS
00030EDA <AmiBlitz3.ab3@22900> JMP dupprocerr
00030EE0 <AmiBlitz3.ab3@22903> JMP illprocperr
00030EE8 <AmiBlitz3.ab3@22910>   CMP.w #-1,proceduremode                                  ;was JUMP_sreterr_2
00030EEC <AmiBlitz3.ab3@22911>    BEQ JUMP_sreterr
00030EF0 <AmiBlitz3.ab3@22912>   CMP.w #-$7FF9,D0
00030EF4 <AmiBlitz3.ab3@22913>    BEQ.w do_function_return
00030EFE <AmiBlitz3.ab3@22916>   MOVE.w oldqflag,instringon
00030F04 <AmiBlitz3.ab3@22917>   MOVEA.l lastsourcepos,A5
00030F0A <AmiBlitz3.ab3@22918>   JSR getfunctionreturntype
00030F10 <AmiBlitz3.ab3@22919>   JSR get1bytemain
00030F16 <AmiBlitz3.ab3@22922>   TST.b declare
00030F1A <AmiBlitz3.ab3@22923>   BEQ 'l1
00030F22 <AmiBlitz3.ab3@22924>   MOVE.b #1,nowdeclare
00030F28 <AmiBlitz3.ab3@22927>   JSR errchx                                           ;writejumpoverfunction
00030F2E <AmiBlitz3.ab3@22930>   CLR.b fastfunc
00030F38 <AmiBlitz3.ab3@22931>   MOVE.l firstiff,firstiffstore
00030F40 <AmiBlitz3.ab3@22932>   CMP.l #"FAST",-1(a5)
00030F44 <AmiBlitz3.ab3@22933>   BNE 'nofast
00030F4A <AmiBlitz3.ab3@22934>   CMP.b #" ",3(a5)
00030F4E <AmiBlitz3.ab3@22935>   BNE 'nofast
00030F50 <AmiBlitz3.ab3@22936>   ADDQ.l #3,a5
00030F54 <AmiBlitz3.ab3@22939>     CMP.b #" ",(a5)
00030F58 <AmiBlitz3.ab3@22940>      BNE 'x1
00030F5A <AmiBlitz3.ab3@22941>     ADDQ #1,a5
00030F5E <AmiBlitz3.ab3@22942> BRA 'x2
00030F64 <AmiBlitz3.ab3@22945>   MOVE.l a5,lastsourcepos
00030F6C <AmiBlitz3.ab3@22946>   MOVE.b #1,fastfunc
00030F74 <AmiBlitz3.ab3@22949>   CMP.l #"NOOP",-1(a5)                                     ;compile 3* so its deactivate
00030F78 <AmiBlitz3.ab3@22950> BRA 'noopt
00030F7E <AmiBlitz3.ab3@22952>   CMP.w #"T ",3(a5)                                        ;??Looks like dead code??
00030F82 <AmiBlitz3.ab3@22953>   BNE 'noopt
00030F84 <AmiBlitz3.ab3@22954>   ADDQ.l #4,a5
00030F88 <AmiBlitz3.ab3@22957>     CMP.b #" ",(a5)
00030F8C <AmiBlitz3.ab3@22958>      BNE 'x1b
00030F8E <AmiBlitz3.ab3@22959>     ADDQ #1,a5
00030F92 <AmiBlitz3.ab3@22960> BRA 'x2b
00030F98 <AmiBlitz3.ab3@22963>   MOVE.l a5,lastsourcepos
00030F9E <AmiBlitz3.ab3@22965>   JSR makename2
00030FA2 <AmiBlitz3.ab3@22966> BRA 'l1
00030FA8 <AmiBlitz3.ab3@22970>   JSR makename2
00030FAE <AmiBlitz3.ab3@22971>   JSR checkused
00030FB4 <AmiBlitz3.ab3@22972>   TST.b skipfunc
00030FB8 <AmiBlitz3.ab3@22973>    BEQ 'l1
00030FBE <AmiBlitz3.ab3@22974>   JSR skipme
00030FC4 <AmiBlitz3.ab3@22975>   CLR.b fastfunc
00030FC6 <AmiBlitz3.ab3@22976> RTS
00030FD0 <AmiBlitz3.ab3@22979>   MOVE.l linenumat,prolineat
00030FD6 <AmiBlitz3.ab3@22980>   ADDQ.w #1,procnum2
00030FDE <AmiBlitz3.ab3@22981>   MOVE.w procnum2(PC),procnum
00030FE4 <AmiBlitz3.ab3@22982>   MOVE.w D1,proceduremode
00030FEA <AmiBlitz3.ab3@22983>   CLR.w locvaroff
00030FEE <AmiBlitz3.ab3@22984>   CMP.w #$7B,D0
00030FF2 <AmiBlitz3.ab3@22985>    BNE.w JUMP_syntaxerr
00030FFA <AmiBlitz3.ab3@22986>    MOVE.b #1,infunctioncode
00031000 <AmiBlitz3.ab3@22987>   MOVEA.l tempvm,A0
00031008 <AmiBlitz3.ab3@22988>   MOVE.w $C(A0),memlibstat
0003100E <AmiBlitz3.ab3@22989>   BCLR #$7,$C(A0)                                          ;Bit out of range
00031012 <AmiBlitz3.ab3@22990>   MOVE.w #$4EF9,D1
00031016 <AmiBlitz3.ab3@22991>    BSR.w writeword
0003101C <AmiBlitz3.ab3@22992>    JSR addoff
00031020 <AmiBlitz3.ab3@22993>    BSR.w writelong
00031026 <AmiBlitz3.ab3@22994>    JSR findproc                                          ;findproc function
0003102A <AmiBlitz3.ab3@22995>    BEQ.w JUMP_dupprocerr
00031030 <AmiBlitz3.ab3@22996>    JSR addlabel
00031036 <AmiBlitz3.ab3@22997>    MOVE.b #31,$20(a2)                                      ;increase if more pars
0003103C <AmiBlitz3.ab3@22998>    MOVE.b #0,isfunc(a2)
00031044 <AmiBlitz3.ab3@22999>    MOVE.l functionreturntype,funcstruct_returntype(a2)
0003104C <AmiBlitz3.ab3@23000>   MOVE.l destpointer,$E(A2)
00031052 <AmiBlitz3.ab3@23001>   MOVE.l A2,currentfunction
00031058 <AmiBlitz3.ab3@23002>   LEA nops8,A0
0003105E <AmiBlitz3.ab3@23003>   LEA dataget,A1
00031062 <AmiBlitz3.ab3@23004>    BSR.w pokecode2
00031068 <AmiBlitz3.ab3@23005>   TST.b debugmode
0003106C <AmiBlitz3.ab3@23006>    BEQ.b JL_0_D3AA
0003106E <AmiBlitz3.ab3@23007>   MOVEQ.l #$04,D1
00031074 <AmiBlitz3.ab3@23008>    JSR writetrap
0003107E <AmiBlitz3.ab3@23009>   MOVE.l destpointer,proclocals
00031082 <AmiBlitz3.ab3@23010>    BSR.w writelong
00031086 <AmiBlitz3.ab3@23011>    BSR.w writelong
0003108A <AmiBlitz3.ab3@23014>    LEA $16(A2),A4
00031092 <AmiBlitz3.ab3@23015>   MOVE.b proceduremode+1,$5(A2)
00031094 <AmiBlitz3.ab3@23016>   MOVEQ.l #$00,D6
00031096 <AmiBlitz3.ab3@23017>   MOVEQ.l #$00,D5
0003109C <AmiBlitz3.ab3@23018>    JSR get1bytemain
000310A0 <AmiBlitz3.ab3@23019>   CMP.w #$7D,D0
000310A4 <AmiBlitz3.ab3@23020>    BEQ.w JL_0_D466
000310A8 <AmiBlitz3.ab3@23023>    CMP.b #"@",d0
000310AC <AmiBlitz3.ab3@23024>    BNE 'l2
000310AE <AmiBlitz3.ab3@23025>    MOVE.l a0,-(a7)
000310B4 <AmiBlitz3.ab3@23026>    MOVE.l currentfunction,a0
000310BA <AmiBlitz3.ab3@23027>    CMP.b #31,$20(a0)                                       ;increase if morepars
000310BE <AmiBlitz3.ab3@23028>    BNE 'l1
000310C2 <AmiBlitz3.ab3@23029>    MOVE.b d6,$20(a0)                                       ;increase if morepar
000310C8 <AmiBlitz3.ab3@23032>    JSR get1bytemain
000310CA <AmiBlitz3.ab3@23033>    MOVE.l (a7)+,a0
000310CE <AmiBlitz3.ab3@23036>    BSR.w getparameter
000310D2 <AmiBlitz3.ab3@23037>    BSR.w JL_0_8E3C
000310DA <AmiBlitz3.ab3@23038>   CMPI.l #$7,$4(A2)
000310DE <AmiBlitz3.ab3@23039>    BNE.w JL_0_D3F6
000310E4 <AmiBlitz3.ab3@23040>   LEA stbuff,A0
000310E6 <AmiBlitz3.ab3@23041>   MOVE.w D5,D1
000310E8 <AmiBlitz3.ab3@23042>   LSL.w #2,D1
000310EC <AmiBlitz3.ab3@23043>   MOVE.w D6,$0(A0,D1.W)
000310F2 <AmiBlitz3.ab3@23044>   MOVE.w $4(A3),$2(A0,D1.W)
000310F4 <AmiBlitz3.ab3@23045>   ADDQ.w #1,D5
000310F6 <AmiBlitz3.ab3@23046>   MOVEQ.l #$07,D2
000310FA <AmiBlitz3.ab3@23047> BRA.w JL_0_D442
00031100 <AmiBlitz3.ab3@23050> JMP toovarerr
00031104 <AmiBlitz3.ab3@23053>   MOVE.w #$2940,D1
00031106 <AmiBlitz3.ab3@23054>   MOVEQ.l #$03,D2
0003110E <AmiBlitz3.ab3@23055>   BTST #$0,flagmask+1
00031112 <AmiBlitz3.ab3@23056>    BNE.w JL_0_D430
0003111A <AmiBlitz3.ab3@23057>   CMPI.l #$100,$4(A2)
0003111E <AmiBlitz3.ab3@23058>    BCC.w JUMP_illprocperr
00031122 <AmiBlitz3.ab3@23059>   MOVE.w $6(A2),D2
00031126 <AmiBlitz3.ab3@23060>   CMP.w #$2,D2
0003112A <AmiBlitz3.ab3@23061>    BHI.w JL_0_D430
0003112E <AmiBlitz3.ab3@23062>    BEQ.w JL_0_D42C
00031132 <AmiBlitz3.ab3@23063>   EORI.w #$3000,D1
00031136 <AmiBlitz3.ab3@23064> BRA.w JL_0_D430
0003113C <AmiBlitz3.ab3@23067> JMP more6pard
00031140 <AmiBlitz3.ab3@23070>   ORI.w #$1000,D1
00031142 <AmiBlitz3.ab3@23073>   OR.w D6,D1
00031148 <AmiBlitz3.ab3@23074>   TST.b fpu
0003114C <AmiBlitz3.ab3@23075>   BEQ 'nofpu
00031150 <AmiBlitz3.ab3@23076>   CMP.b #5,d2
00031154 <AmiBlitz3.ab3@23077>   BNE 'nofpu
00031158 <AmiBlitz3.ab3@23078>   CMP.w #6,d6
0003115C <AmiBlitz3.ab3@23079>   BLT 'l10a
00031162 <AmiBlitz3.ab3@23080>   CMP.l #newtype_double,a2
00031166 <AmiBlitz3.ab3@23081>   BEQ JUMP_more6pard
0003116A <AmiBlitz3.ab3@23082> BRA 'nofpu
00031170 <AmiBlitz3.ab3@23085>   MOVE.l #$f22c6400,d1
00031174 <AmiBlitz3.ab3@23086>   MOVEM.l d0/a4,-(a7)
00031176 <AmiBlitz3.ab3@23087>   MOVE.l d6,d0
00031178 <AmiBlitz3.ab3@23088>   ASL.l #7,d0
0003117A <AmiBlitz3.ab3@23089>   OR.w d0,d1
00031180 <AmiBlitz3.ab3@23090>   CMP.l #newtype_double,a2
00031184 <AmiBlitz3.ab3@23091>   BNE 'l1
0003118A <AmiBlitz3.ab3@23092>   OR.l #$1000,d1
0003118E <AmiBlitz3.ab3@23095>   BSR writelong
00031192 <AmiBlitz3.ab3@23096>   MOVE.w 4(a3),d1
00031196 <AmiBlitz3.ab3@23097>   BSR writeword
0003119A <AmiBlitz3.ab3@23098>   MOVEM.l (a7)+,a4/d0
0003119E <AmiBlitz3.ab3@23099> BRA JL_0_D442
000311A0 <AmiBlitz3.ab3@23102>   MOVE.l A4,-(A7)
000311A4 <AmiBlitz3.ab3@23103>    CMP.w #6,d6
000311A8 <AmiBlitz3.ab3@23104>    BLT 'l10
000311AC <AmiBlitz3.ab3@23105>    MOVE.w #$c500-4,d1                                      ;savetemp+regnum
000311AE <AmiBlitz3.ab3@23106>    ADD.w d6,d1
000311B4 <AmiBlitz3.ab3@23107>    JSR Atokejsr
000311BA <AmiBlitz3.ab3@23108>    TST.w dontwrite
000311BE <AmiBlitz3.ab3@23109>    BNE 'l10
000311C4 <AmiBlitz3.ab3@23110>    MOVE.l data1start,d1
000311CA <AmiBlitz3.ab3@23111>    MOVE.l destpointer,a4
000311CE <AmiBlitz3.ab3@23112>    ADD.l d1,-6(a4)
000311D4 <AmiBlitz3.ab3@23113>    MOVE.l destpointer,d1
000311D6 <AmiBlitz3.ab3@23114>    SUBQ.l #6,d1
000311DC <AmiBlitz3.ab3@23115>    SUB.l destbufferstart,d1
000311DE <AmiBlitz3.ab3@23117>    MOVE.l d2,-(a7)
000311E0 <AmiBlitz3.ab3@23118>    MOVE.l d1,d2
000311E6 <AmiBlitz3.ab3@23119>    JSR addhunkoffset                                       ;move.l $0,-x(a4)
000311E8 <AmiBlitz3.ab3@23120>    MOVE.l (a7)+,d2
000311EE <AmiBlitz3.ab3@23121>    MOVE.l destpointer,a4
000311F2 <AmiBlitz3.ab3@23122>    CMP.w #2,d2
000311F6 <AmiBlitz3.ab3@23123>    BNE 'nw1
000311FC <AmiBlitz3.ab3@23125>    MOVE.w #$3979,-8(a4)                                    ;move.w $0,-x(a4)
00031204 <AmiBlitz3.ab3@23126>    ADD.l #2,-6(a4)
00031208 <AmiBlitz3.ab3@23129>    CMP.w #1,d2
0003120C <AmiBlitz3.ab3@23130>    BNE 'nb
00031212 <AmiBlitz3.ab3@23131>    MOVE.w #$1979,-8(a4)                                    ;move.b $0,-x(a4)
0003121A <AmiBlitz3.ab3@23132>    ADD.l #3,-6(a4)
00031220 <AmiBlitz3.ab3@23135>    MOVE.w $4(a3),-2(a4)
00031224 <AmiBlitz3.ab3@23136> BRA 'ne1
00031228 <AmiBlitz3.ab3@23139>   BSR.w writeword                                          ;write storeparameter
0003122C <AmiBlitz3.ab3@23142>   MOVE.w $4(A3),D1
00031230 <AmiBlitz3.ab3@23143>    BSR.w writeword
00031232 <AmiBlitz3.ab3@23146>   MOVEA.l (A7)+,A4
00031238 <AmiBlitz3.ab3@23149>   CLR.l functionreturntype
0003123A <AmiBlitz3.ab3@23150>   ADDQ.w #1,D6
0003123E <AmiBlitz3.ab3@23151>   CMP.w #11,D6                                             ;max function parameters
00031242 <AmiBlitz3.ab3@23152>    BCC.w JUMP_toovarerr
00031248 <AmiBlitz3.ab3@23153>   MOVE.l currentfunction,a0
0003124C <AmiBlitz3.ab3@23154>   MOVE.l a2,funcstruct_parametertype-4(a0,d6*4)                                    ;-4 because d6 is increment before
0003124E <AmiBlitz3.ab3@23155>   MOVE.b D2,(A4)+
00031252 <AmiBlitz3.ab3@23156>   CMP.w #$2C,D0
00031256 <AmiBlitz3.ab3@23157>    BNE.w JL_0_D45E
0003125C <AmiBlitz3.ab3@23158>    JSR get1bytemain
00031260 <AmiBlitz3.ab3@23170> BRA.w JL_0_D3C6
00031264 <AmiBlitz3.ab3@23173>   CMP.w #$7D,D0
00031268 <AmiBlitz3.ab3@23174>    BNE.w JUMP_syntaxerr
0003126E <AmiBlitz3.ab3@23177>   MOVEA.l currentfunction,A2
00031270 <AmiBlitz3.ab3@23178>   LSL.w #4,D5
00031272 <AmiBlitz3.ab3@23179>   OR.w D5,D6
00031276 <AmiBlitz3.ab3@23180>   MOVE.b D6,$4(A2)
00031278 <AmiBlitz3.ab3@23181>   LSR.w #4,D6
0003127C <AmiBlitz3.ab3@23182>    BEQ.w JL_0_D4C4
00031282 <AmiBlitz3.ab3@23183>   LEA stbuff,A0
00031284 <AmiBlitz3.ab3@23184>   SUBQ.w #1,D6
00031286 <AmiBlitz3.ab3@23187>     MOVE.w D6,D1                                           ;function stringpars
00031288 <AmiBlitz3.ab3@23188>     LSL.w #2,D1                                            ;stringsize was 2
0003128A <AmiBlitz3.ab3@23190>       LSL.w #1,d1
0003128C <AmiBlitz3.ab3@23191>       ADDQ.w #4,d1
0003128E <AmiBlitz3.ab3@23193>     ADDQ.w #8,D1
00031294 <AmiBlitz3.ab3@23194>     MOVE.w D1,funcst+2
0003129A <AmiBlitz3.ab3@23195>     MOVE.l funcst,D1
0003129E <AmiBlitz3.ab3@23196>     BSR.w writelong
000312A0 <AmiBlitz3.ab3@23197>     MOVE.w (A0)+,D1
000312A4 <AmiBlitz3.ab3@23198>     CMP.b #5,d1
000312A8 <AmiBlitz3.ab3@23199>     BLE 's1
000312AC <AmiBlitz3.ab3@23200>     MOVE.w #$266c,d1                                       ;native move.l 4(a4),a3
000312B0 <AmiBlitz3.ab3@23201>     BSR writeinstruction
000312B2 <AmiBlitz3.ab3@23202>     MOVE.w D6,D1                                           ;function stringpars
000312B4 <AmiBlitz3.ab3@23203>     LSL.w #2,D1                                            ;stringsize was 2
000312B6 <AmiBlitz3.ab3@23205>       LSL.w #1,d1
000312B8 <AmiBlitz3.ab3@23207>     ADDQ.w #8,D1
000312BC <AmiBlitz3.ab3@23208>     BSR writeword
000312C0 <AmiBlitz3.ab3@23209>   BRA 's2
000312C6 <AmiBlitz3.ab3@23212>     OR.w movedna3,D1
000312CA <AmiBlitz3.ab3@23213>      BSR.w writeword
000312D0 <AmiBlitz3.ab3@23216>     MOVE.w (A0)+,least+2
000312D6 <AmiBlitz3.ab3@23217>     MOVE.l least,D1
000312DA <AmiBlitz3.ab3@23218>      BSR.w writelong
000312DC <AmiBlitz3.ab3@23219>     MOVE.l A0,-(A7)
000312E0 <AmiBlitz3.ab3@23220>     MOVE.w #$C700,D1
000312E4 <AmiBlitz3.ab3@23221>      BSR.w Atokejsr
000312E6 <AmiBlitz3.ab3@23222>     MOVEA.l (A7)+,A0
000312EA <AmiBlitz3.ab3@23223>   DBF D6,JL_0_D482
000312F0 <AmiBlitz3.ab3@23226> JMP get1bytemain
000312F6 <AmiBlitz3.ab3@23230>   MOVE.w dontwrite,D1
000312FA <AmiBlitz3.ab3@23231>    BNE.w JL_0_D4F6
00031300 <AmiBlitz3.ab3@23232>   MOVE.l destpointer,-(A7)
00031306 <AmiBlitz3.ab3@23233>   MOVE.l A0,destpointer
0003130C <AmiBlitz3.ab3@23234>   MOVE.l linksize,D1
00031310 <AmiBlitz3.ab3@23235>    BSR.w writelong                                         ;writefunctions jumppos
00031316 <AmiBlitz3.ab3@23236>    TST.b fastfunc
0003131A <AmiBlitz3.ab3@23237>    BNE 'skip
0003131E <AmiBlitz3.ab3@23238>   MOVE.w #$CC00,D1
00031322 <AmiBlitz3.ab3@23239>    BSR.w tokejsr2                                          ;write clearvars
00031328 <AmiBlitz3.ab3@23242>   MOVE.l (A7)+,destpointer
0003132A <AmiBlitz3.ab3@23245> RTS
00031330 <AmiBlitz3.ab3@23249>   MOVEA.l currentfunction,A2
00031334 <AmiBlitz3.ab3@23250>   MOVEA.l $E(A2),A0
00031338 <AmiBlitz3.ab3@23251>   MOVE.w $6(A2),D1
0003133C <AmiBlitz3.ab3@23252>    BEQ.w JL_0_D538
00031342 <AmiBlitz3.ab3@23253>   MOVE.w D1,linksize+2
00031346 <AmiBlitz3.ab3@23254>   MOVE.w $8(A2),D1                                         ;check if function memalloc need
0003134A <AmiBlitz3.ab3@23255>    BNE.w JL_0_D522
0003134C <AmiBlitz3.ab3@23256>   ADDQ.w #6,A0
00031350 <AmiBlitz3.ab3@23257>   MOVE.l A0,$E(A2)
00031354 <AmiBlitz3.ab3@23258> BRA.w JL_0_D4C8
00031356 <AmiBlitz3.ab3@23261>   MOVE.l A0,-(A7)
0003135A <AmiBlitz3.ab3@23262>    BSR.w JL_0_D4C8
0003135C <AmiBlitz3.ab3@23263>   MOVEA.l (A7)+,A0
00031360 <AmiBlitz3.ab3@23264>   LEA $A(A0),A0
00031366 <AmiBlitz3.ab3@23265>   MOVEA.l currentfunction,A2
0003136A <AmiBlitz3.ab3@23266> BRA.w JL_0_D54A
0003136E <AmiBlitz3.ab3@23269>   MOVE.w $8(A2),D1
00031372 <AmiBlitz3.ab3@23270>    BNE.w JL_0_D54A
00031376 <AmiBlitz3.ab3@23271>   LEA $10(A0),A0
0003137A <AmiBlitz3.ab3@23272>   MOVE.l A0,$E(A2)
0003137C <AmiBlitz3.ab3@23273> RTS
00031382 <AmiBlitz3.ab3@23277> JMP errormsg_nofast
00031388 <AmiBlitz3.ab3@23280>    MOVE.w dontwrite,D1                                     ;writeallocmem for functions (after releasemem called)
0003138C <AmiBlitz3.ab3@23281>    BNE.w JL_0_D580
00031392 <AmiBlitz3.ab3@23282>    TST.b fastfunc
00031396 <AmiBlitz3.ab3@23283>    BNE JUMP_errormsg_nofast
0003139C <AmiBlitz3.ab3@23284>   MOVE.l destpointer,-(A7)
000313A2 <AmiBlitz3.ab3@23285>   MOVE.l A0,destpointer
000313A6 <AmiBlitz3.ab3@23286>   MOVE.w #$4EB9,D1
000313AA <AmiBlitz3.ab3@23287>    BSR.w writeword
000313B0 <AmiBlitz3.ab3@23288>    JSR addoff
000313B4 <AmiBlitz3.ab3@23289>    BSR.w writelong
000313B6 <AmiBlitz3.ab3@23290>   MOVEA.l (A7)+,A0
000313BC <AmiBlitz3.ab3@23291>   MOVEA.l destpointer,A1
000313BE <AmiBlitz3.ab3@23292>   MOVE.l A0,-(A1)
000313C4 <AmiBlitz3.ab3@23293>   MOVE.l A0,destpointer
000313C8 <AmiBlitz3.ab3@23296>   MOVE.w $8(A2),D4
000313CC <AmiBlitz3.ab3@23297>    BPL.w JL_0_D59E
000313D0 <AmiBlitz3.ab3@23298>   MOVE.w #$C004,D1
000313D4 <AmiBlitz3.ab3@23299>    BSR.w tokejsr2
000313DA <AmiBlitz3.ab3@23300>   MOVEA.l currentfunction,A2
000313DE <AmiBlitz3.ab3@23301>   MOVE.w $8(A2),D4
000313E2 <AmiBlitz3.ab3@23302>   ANDI.w #$7FFF,D4
000313E6 <AmiBlitz3.ab3@23305>    BEQ.w JL_0_D5E0
000313EA <AmiBlitz3.ab3@23306>   MOVE.b $4(A2),D1
000313EE <AmiBlitz3.ab3@23307>   ANDI.w #$F,D1
000313F0 <AmiBlitz3.ab3@23308>   MOVE.w D1,-(A7)
000313F4 <AmiBlitz3.ab3@23309>   CMP.w #$5,D1
000313F8 <AmiBlitz3.ab3@23310>    BCS.w JL_0_D5BC
000313FC <AmiBlitz3.ab3@23311>   MOVE.w #$2F04,D1
00031400 <AmiBlitz3.ab3@23312>    BSR.w writeword
00031406 <AmiBlitz3.ab3@23315>   MOVE.l locdatast,D3
0003140C <AmiBlitz3.ab3@23316>    JSR datastart
00031410 <AmiBlitz3.ab3@23317>   MOVE.w #$C501,D1
00031414 <AmiBlitz3.ab3@23318>    BSR.w tokejsr2
00031416 <AmiBlitz3.ab3@23319>   MOVE.w (A7)+,D1
0003141A <AmiBlitz3.ab3@23320>   CMP.w #$5,D1
0003141E <AmiBlitz3.ab3@23321>    BCS.w JL_0_D5E0
00031422 <AmiBlitz3.ab3@23322>   MOVE.w #$281F,D1
00031426 <AmiBlitz3.ab3@23323>    BSR.w writeword
0003142A <AmiBlitz3.ab3@23325>   MOVE.w #$4E75,D1
0003142E <AmiBlitz3.ab3@23326> BRA.w writeword
00031434 <AmiBlitz3.ab3@23330>   LEA mwait,A0
0003143A <AmiBlitz3.ab3@23331>   LEA mwaitf,A1
0003143E <AmiBlitz3.ab3@23332> BRA.w pokecode
00031444 <AmiBlitz3.ab3@23336> JMP laberr
00031448 <AmiBlitz3.ab3@23339>   CMP.w #$2E,D0
0003144C <AmiBlitz3.ab3@23340>   BNE.w JUMP_syntaxerr
00031452 <AmiBlitz3.ab3@23341>   JSR getparameter2
00031456 <AmiBlitz3.ab3@23342>   BEQ.w JUMP_laberr
0003145C <AmiBlitz3.ab3@23343>   LEA newtypebase,A2
00031462 <AmiBlitz3.ab3@23344>   JSR findtype
00031466 <AmiBlitz3.ab3@23345>   BNE.w JL_0_D626
0003146E <AmiBlitz3.ab3@23346>   CMPI.l #MaxByte,$4(A2)
00031472 <AmiBlitz3.ab3@23347>   BNE.w JUMP_typeerr
00031476 <AmiBlitz3.ab3@23348> BRA.w JL_0_D62A
0003147C <AmiBlitz3.ab3@23351> JMP typeerr
00031482 <AmiBlitz3.ab3@23354>   JSR addlabel
00031486 <AmiBlitz3.ab3@23357>   CLR.l $4(A2)
0003148C <AmiBlitz3.ab3@23358>   MOVE.l A2,thistype
00031492 <AmiBlitz3.ab3@23359>   CLR.l prevtype
00031498 <AmiBlitz3.ab3@23360>   CLR.w typelen
0003149E <AmiBlitz3.ab3@23361>   CLR.w linemode
000314A4 <AmiBlitz3.ab3@23362>   JSR reget
000314A8 <AmiBlitz3.ab3@23363>   BNE.w typemode
000314AA <AmiBlitz3.ab3@23364> RTS
000314AE <AmiBlitz3.ab3@23367>   CMP.w #-$7FFE,D0
000314B2 <AmiBlitz3.ab3@23368>   BEQ.w JL_0_D82E
000314BC <AmiBlitz3.ab3@23370>   MOVE.w oldqflag,instringon
000314C2 <AmiBlitz3.ab3@23371>   MOVEA.l lastsourcepos,A5
000314C4 <AmiBlitz3.ab3@23372>   MOVEQ.l #$00,D6
000314C8 <AmiBlitz3.ab3@23373>   CMP.w #$2A,D0
000314CC <AmiBlitz3.ab3@23374>   BNE.w JL_0_D670
000314CE <AmiBlitz3.ab3@23375>   MOVEQ.l #$01,D6
000314D4 <AmiBlitz3.ab3@23376>   JSR get1bytemain
000314D8 <AmiBlitz3.ab3@23377> BRA.w JL_0_D67E
000314DC <AmiBlitz3.ab3@23380>   CMP.w #$40,D0
000314E0 <AmiBlitz3.ab3@23381>   BNE.w JL_0_D67E
000314E2 <AmiBlitz3.ab3@23382>   MOVEQ.l #$05,D6
000314E8 <AmiBlitz3.ab3@23383>   JSR get1bytemain
000314EE <AmiBlitz3.ab3@23386>   MOVE.w D6,flagmask
000314F4 <AmiBlitz3.ab3@23387>   JSR getparameter2
000314F8 <AmiBlitz3.ab3@23388>   BEQ.w JUMP_syntaxerr
000314FE <AmiBlitz3.ab3@23389>   MOVEA.l thistype,A2
00031500 <AmiBlitz3.ab3@23390>   ADDQ.w #4,A2
00031506 <AmiBlitz3.ab3@23391>   JSR findvariable2
0003150A <AmiBlitz3.ab3@23392>   BEQ.w JUMP_dupofferr
00031510 <AmiBlitz3.ab3@23393>   JSR addlabel
00031512 <AmiBlitz3.ab3@23394>   MOVE.l A2,-(A7)
00031516 <AmiBlitz3.ab3@23395>   CMP.w #$2E,D0
0003151A <AmiBlitz3.ab3@23396>    BEQ.w JL_0_D6CE
0003151E <AmiBlitz3.ab3@23397>   CMP.w #$24,D0
00031522 <AmiBlitz3.ab3@23398>    BNE.w JL_0_D6C0
00031528 <AmiBlitz3.ab3@23399>   MOVE.l #newtype_string,D2
0003152E <AmiBlitz3.ab3@23400>    JSR get1bytemain
00031532 <AmiBlitz3.ab3@23401> BRA.w JL_0_D710
00031538 <AmiBlitz3.ab3@23404> JMP dupofferr
0003153E <AmiBlitz3.ab3@23407>   MOVE.l prevtype,D2
00031542 <AmiBlitz3.ab3@23408>   BEQ.w JUMP_notypeerr
00031546 <AmiBlitz3.ab3@23409> BRA.w JL_0_D706
0003154C <AmiBlitz3.ab3@23412> JMP notypeerr
00031552 <AmiBlitz3.ab3@23415>   JSR getparameter2
00031556 <AmiBlitz3.ab3@23416>    BEQ.w JUMP_syntaxerr
0003155C <AmiBlitz3.ab3@23417>   LEA newtypebase,A2
00031562 <AmiBlitz3.ab3@23418>    JSR findtype
00031566 <AmiBlitz3.ab3@23419>    BEQ.w JL_0_D704
0003156E <AmiBlitz3.ab3@23420>   BTST #$0,flagmask+1
00031572 <AmiBlitz3.ab3@23421>    BEQ.w JUMP_notypeerr
00031578 <AmiBlitz3.ab3@23422>   JSR addlabel
00031580 <AmiBlitz3.ab3@23425>   MOVE.w linenumat+2,$8(A2)
00031588 <AmiBlitz3.ab3@23426>   MOVE.l #MaxByte,$4(A2)
0003158A <AmiBlitz3.ab3@23429>   MOVE.l A2,D2
00031590 <AmiBlitz3.ab3@23432>   CMP.l #newtype_byte,D2
00031594 <AmiBlitz3.ab3@23433>    BEQ.w JL_0_D71E
0003159A <AmiBlitz3.ab3@23436>   ADDQ.w #1,typelen
000315A2 <AmiBlitz3.ab3@23437>   BCLR #$0,typelen+1
000315A4 <AmiBlitz3.ab3@23440>   MOVEQ.l #$00,D3
000315A6 <AmiBlitz3.ab3@23441>   MOVEA.l D2,A2
000315AC <AmiBlitz3.ab3@23442>   MOVE.l A2,prevtype
000315B0 <AmiBlitz3.ab3@23443>   MOVE.w $8(A2),D3
000315B2 <AmiBlitz3.ab3@23444>   MOVEA.l (A7)+,A2
000315B6 <AmiBlitz3.ab3@23445>   MOVE.l D2,$A(A2)
000315B8 <AmiBlitz3.ab3@23446>   MOVEQ.l #$00,D4
000315BE <AmiBlitz3.ab3@23447>   MOVE.w typelen,D4
000315C2 <AmiBlitz3.ab3@23448>   MOVE.w D4,$4(A2)
000315CA <AmiBlitz3.ab3@23449>   BTST #$0,flagmask+1
000315CE <AmiBlitz3.ab3@23450>    BEQ.w JL_0_D74C
000315D0 <AmiBlitz3.ab3@23451>   MOVEQ.l #$04,D3
000315D4 <AmiBlitz3.ab3@23454>   CMP.w #$5B,D0
000315D8 <AmiBlitz3.ab3@23455>    BNE.w JL_0_D782
000315DC <AmiBlitz3.ab3@23456>   MOVEM.l D3-D4/A2,-(A7)
000315E0 <AmiBlitz3.ab3@23457>    BSR.w AJL_0_BF6E
000315E4 <AmiBlitz3.ab3@23458>   CMP.w #$5D,D0
000315E8 <AmiBlitz3.ab3@23459>    BNE.w JUMP_syntaxerr
000315EA <AmiBlitz3.ab3@23460>   TST.w D6
000315EE <AmiBlitz3.ab3@23461>    BNE.w JUMP_fpconerr
000315F0 <AmiBlitz3.ab3@23462>   MOVE.l D3,D1
000315F4 <AmiBlitz3.ab3@23463>   MOVEM.l (A7)+,D3-D4/A2
000315FA <AmiBlitz3.ab3@23464>    JSR get1bytemain
000315FE <AmiBlitz3.ab3@23465>   MOVE.w D1,$8(A2)
00031602 <AmiBlitz3.ab3@23466>   MULU.l d1,d3                                             ;>32k fix was mulu.w
0003160A <AmiBlitz3.ab3@23467>   ORI.w #$2,flagmask
0003160C <AmiBlitz3.ab3@23470>   ADD.l D3,D4
00031612 <AmiBlitz3.ab3@23473>     CMP.l #65532,d4
00031616 <AmiBlitz3.ab3@23478>   BCC JUMP_toolongerr
0003161E <AmiBlitz3.ab3@23479>   MOVE.w flagmask,$6(A2)
00031624 <AmiBlitz3.ab3@23480>   MOVE.w D4,typelen
00031626 <AmiBlitz3.ab3@23481> RTS
0003162C <AmiBlitz3.ab3@23484> JMP badenderr
00031632 <AmiBlitz3.ab3@23487> JMP noiferr
00031638 <AmiBlitz3.ab3@23490> JMP toolongerr
0003163E <AmiBlitz3.ab3@23493> JMP fpconerr
00031644 <AmiBlitz3.ab3@23496>   MOVE.l firstiff,D0
00031648 <AmiBlitz3.ab3@23497>    BEQ.w JUMP_noiferr
0003164A <AmiBlitz3.ab3@23498>   MOVEA.l D0,A0
0003164E <AmiBlitz3.ab3@23499>   MOVE.w $C(A0),D0
00031652 <AmiBlitz3.ab3@23500>   ANDI.w #$FF,D0
00031654 <AmiBlitz3.ab3@23501>   CMP.w D0,D1
00031658 <AmiBlitz3.ab3@23502>    BNE.w JUMP_badenderr
0003165C <AmiBlitz3.ab3@23505>   CMP.w #$1,D1
00031660 <AmiBlitz3.ab3@23506>   BNE.w JL_0_D7D8
00031664 <AmiBlitz3.ab3@23507>   MOVE.w #$6000,D1
0003166A <AmiBlitz3.ab3@23510>     TST.b fast
0003166E <AmiBlitz3.ab3@23511>     BEQ 'l1
00031674 <AmiBlitz3.ab3@23512>     OR.l #$ff,d1
00031678 <AmiBlitz3.ab3@23516>   BSR.w writeword
0003167E <AmiBlitz3.ab3@23517>   MOVEA.l destpointer,A1
00031682 <AmiBlitz3.ab3@23518>   MOVE.l $4(A0),D1
00031684 <AmiBlitz3.ab3@23519>   SUB.l A1,D1
0003168A <AmiBlitz3.ab3@23522>     TST.b fast
0003168E <AmiBlitz3.ab3@23523>     BEQ 'l2
00031692 <AmiBlitz3.ab3@23524>     BSR writelong
00031696 <AmiBlitz3.ab3@23525>   BRA JL_0_D7D8
0003169A <AmiBlitz3.ab3@23529>   BSR.w writeword
0003169E <AmiBlitz3.ab3@23532>   MOVEA.l $8(A0),A1                                        ;write if branch destination
000316A4 <AmiBlitz3.ab3@23533>   MOVE.l destpointer,D1
000316A6 <AmiBlitz3.ab3@23534>   SUB.l A1,D1
000316AC <AmiBlitz3.ab3@23537>     TST.b fast
000316B0 <AmiBlitz3.ab3@23538>     BEQ 'l1
000316B2 <AmiBlitz3.ab3@23539>     ADDQ.l #4,D1
000316B8 <AmiBlitz3.ab3@23540>     MOVE.w dontwrite,D0
000316BC <AmiBlitz3.ab3@23541>     BNE.w JL_0_D7FE
000316C0 <AmiBlitz3.ab3@23542>     MOVE.l d1,-$4(a1)
000316C4 <AmiBlitz3.ab3@23543>   BRA JL_0_D7FE
000316C6 <AmiBlitz3.ab3@23547>   ADDQ.l #2,d1
000316CC <AmiBlitz3.ab3@23548>   TST.w dontwrite
000316D0 <AmiBlitz3.ab3@23549>   BNE JL_0_D7FE
000316D6 <AmiBlitz3.ab3@23550>   CMP.l #MinWordSgnd,D1
000316DA <AmiBlitz3.ab3@23551>   BCC.w JUMP_bigiferr
000316DE <AmiBlitz3.ab3@23552>   MOVE.w D1,-$2(A1)
000316E0 <AmiBlitz3.ab3@23555> RTS
000316E6 <AmiBlitz3.ab3@23558> JMP bigiferr
000316F0 <AmiBlitz3.ab3@23563>   MOVE.w oldqflag,instringon
000316F6 <AmiBlitz3.ab3@23564>   MOVEA.l lastsourcepos,A5
000316F8 <AmiBlitz3.ab3@23567>   MOVEQ.l #$01,D1
000316FC <AmiBlitz3.ab3@23568> BRA.w JL_0_D810
00031706 <AmiBlitz3.ab3@23572>   MOVE.w oldqflag,instringon
0003170C <AmiBlitz3.ab3@23573>   MOVEA.l lastsourcepos,A5
0003170E <AmiBlitz3.ab3@23576>   MOVEQ.l #$00,D1
00031712 <AmiBlitz3.ab3@23579>   BSR.w JL_0_D79E
00031716 <AmiBlitz3.ab3@23580>   BSR.w AJL_0_D81C
0003171C <AmiBlitz3.ab3@23581> JMP get1bytemain
00031722 <AmiBlitz3.ab3@23584>   MOVE.l (A0),firstiff
00031724 <AmiBlitz3.ab3@23585>   MOVEA.l A0,A1
00031726 <AmiBlitz3.ab3@23586>   MOVEQ.l #$0E,D0
0003172C <AmiBlitz3.ab3@23587>   MOVEA.l _execbase,A6
00031732 <AmiBlitz3.ab3@23588>   MOVE.l mempool,a0
00031736 <AmiBlitz3.ab3@23589> JMP _FreePooled(A6)
0003173C <AmiBlitz3.ab3@23593>   JSR get1bytemain
00031740 <AmiBlitz3.ab3@23596>   BEQ.w JL_0_D980
00031748 <AmiBlitz3.ab3@23597>   CMP.l #"noa7",-1(a5)
0003174C <AmiBlitz3.ab3@23598>   BNE 'l1
00031752 <AmiBlitz3.ab3@23599>   JSR get1bytemain
00031758 <AmiBlitz3.ab3@23600>   JSR get1bytemain
0003175E <AmiBlitz3.ab3@23601>   JSR get1bytemain
00031766 <AmiBlitz3.ab3@23602>   MOVE.w #$3a,lastchar
0003176A <AmiBlitz3.ab3@23603> BRA JL_0_D980
00031770 <AmiBlitz3.ab3@23606>   CMP.w #"d0",-1(a5)
00031774 <AmiBlitz3.ab3@23607>   BNE 'l2
0003177C <AmiBlitz3.ab3@23608>   MOVE.b #1,returncode
00031782 <AmiBlitz3.ab3@23609>   CLR.w lastchar
00031786 <AmiBlitz3.ab3@23610> BRA JL_0_D980
0003178A <AmiBlitz3.ab3@23613>   CMP.w #$80d7,d0
0003178E <AmiBlitz3.ab3@23614>   BNE JL_0_D836
00031794 <AmiBlitz3.ab3@23615>   JSR skiprest
00031796 <AmiBlitz3.ab3@23616> RTS
0003179A <AmiBlitz3.ab3@23619>   BSR.w JL_0_D844
000317A0 <AmiBlitz3.ab3@23620>   JSR reget
000317A4 <AmiBlitz3.ab3@23621>   BNE.w JL_0_D836
000317A6 <AmiBlitz3.ab3@23622> RTS
000317AA <AmiBlitz3.ab3@23625>   CMP.w #-$7FFF,D0
000317AE <AmiBlitz3.ab3@23626>    BNE.w JL_0_D87E
000317B4 <AmiBlitz3.ab3@23627>   MOVE.w linemode,D1
000317B8 <AmiBlitz3.ab3@23628>    BNE.w JUMP_modeerr
000317BE <AmiBlitz3.ab3@23629>   ADDQ.w #1,typelen
000317C6 <AmiBlitz3.ab3@23630>   BCLR #$0,typelen+1
000317CC <AmiBlitz3.ab3@23631>   MOVEA.l thistype,A0
000317D4 <AmiBlitz3.ab3@23632>   MOVE.w typelen,$8(A0)
000317DC <AmiBlitz3.ab3@23633>   MOVE.w #$FFFF,linemode
000317E2 <AmiBlitz3.ab3@23634> JMP get1bytemain
000317E8 <AmiBlitz3.ab3@23637> JMP modeerr
000317EC <AmiBlitz3.ab3@23640>   CMP.w #-$7FF5,D0
000317F0 <AmiBlitz3.ab3@23641>    BEQ.w JL_0_D80E
000317F4 <AmiBlitz3.ab3@23642>   CMP.w #-$7FF4,D0
000317F8 <AmiBlitz3.ab3@23643>    BEQ.w JL_0_D804
000317FC <AmiBlitz3.ab3@23644>   CMP.w #-$7FF8,D0
00031800 <AmiBlitz3.ab3@23645>    BNE.w JL_0_D89A
00031804 <AmiBlitz3.ab3@23648> BRA.w JL_0_D9E8
0003180A <AmiBlitz3.ab3@23651> JMP interr3
0003180E <AmiBlitz3.ab3@23654>   CMP.w #-$7FF7,D0
00031812 <AmiBlitz3.ab3@23655>    BNE.w JL_0_D8C8
00031818 <AmiBlitz3.ab3@23656>    TST.b fpu
0003181C <AmiBlitz3.ab3@23657>    BEQ 'nof
00031822 <AmiBlitz3.ab3@23658>    MOVEA.l currentfunction,A0
00031828 <AmiBlitz3.ab3@23659>    CMP.l #0,a0
0003182C <AmiBlitz3.ab3@23660>    BEQ 'nof
00031832 <AmiBlitz3.ab3@23661>    CMP.b #5,$5(a0)
00031836 <AmiBlitz3.ab3@23662>     BNE 'nof
0003183C <AmiBlitz3.ab3@23663>    MOVE.l #$f23c5000,d1
00031840 <AmiBlitz3.ab3@23664>    BSR writelong
00031844 <AmiBlitz3.ab3@23665>    MOVE.w #0,d1
00031848 <AmiBlitz3.ab3@23666>    BSR writeword
0003184C <AmiBlitz3.ab3@23669>   MOVE.w #$7000,D1                                         ;end function moveq #0,d0
00031850 <AmiBlitz3.ab3@23670>    BSR.w writeword
00031856 <AmiBlitz3.ab3@23671>   MOVEA.l currentfunction,A0
0003185C <AmiBlitz3.ab3@23672>   CMP.l #0,a0
00031860 <AmiBlitz3.ab3@23673>   BEQ JL_0_D896
00031866 <AmiBlitz3.ab3@23674>   MOVE.l destpointer,d1
0003186A <AmiBlitz3.ab3@23675>   SUB.l $e(a0),d1
0003186E <AmiBlitz3.ab3@23676>   MOVE.l d1,isfunc+1(a0)
00031874 <AmiBlitz3.ab3@23677>   CMPI.b #$7,$5(A0)
00031878 <AmiBlitz3.ab3@23678>    BNE.w JL_0_D896
0003187E <AmiBlitz3.ab3@23679>   MOVE.w putstlen,D1
00031882 <AmiBlitz3.ab3@23680>    BSR.w writeword
00031886 <AmiBlitz3.ab3@23681> BRA.w JL_0_D896
0003188C <AmiBlitz3.ab3@23684> JMP interr
00031890 <AmiBlitz3.ab3@23687>  CMP.w #-$7FD0,D0
00031894 <AmiBlitz3.ab3@23688>    BNE.w JL_0_D966
0003189A <AmiBlitz3.ab3@23689>   MOVE.w proceduremode,D1
0003189E <AmiBlitz3.ab3@23690>    BNE.w JUMP_interr3
000318A4 <AmiBlitz3.ab3@23691>   TST.b debugmode
000318A8 <AmiBlitz3.ab3@23692>    BEQ.w JL_0_D90A
000318AA <AmiBlitz3.ab3@23693>   MOVEQ.l #$03,D1
000318B0 <AmiBlitz3.ab3@23694>    JSR writetrap
000318B6 <AmiBlitz3.ab3@23695>   MOVE.w dontwrite,D1
000318BA <AmiBlitz3.ab3@23696>    BNE.w JL_0_D90A
000318C0 <AmiBlitz3.ab3@23697>   MOVEA.l intcleanat,A0
000318C6 <AmiBlitz3.ab3@23698>   MOVE.l destpointer,(A0)
000318CA <AmiBlitz3.ab3@23699>   MOVE.w #$C30C,D1
000318CE <AmiBlitz3.ab3@23700>    BSR.w Atokejsr
000318D4 <AmiBlitz3.ab3@23703>   MOVE.w intstring,D1
000318D8 <AmiBlitz3.ab3@23704>    BEQ.w JUMP_interr
000318DC <AmiBlitz3.ab3@23705>    BPL.w JL_0_D934
000318E2 <AmiBlitz3.ab3@23706>   MOVE.w intlevel,D1
000318E6 <AmiBlitz3.ab3@23707>   ORI.w #$7200,D1
000318EA <AmiBlitz3.ab3@23708>    BSR.w writeword
000318EE <AmiBlitz3.ab3@23709>   MOVE.w #$C103,D1
000318F2 <AmiBlitz3.ab3@23710>    BSR.w Atokejsr
000318F8 <AmiBlitz3.ab3@23711>   CLR.w intlevel
000318FE <AmiBlitz3.ab3@23714>  CLR.w intstring
00031904 <AmiBlitz3.ab3@23715>   MOVE.l intfin,D1
00031908 <AmiBlitz3.ab3@23716>    BSR.w writelong
0003190E <AmiBlitz3.ab3@23717>   MOVE.l #$70004E75,D1
00031912 <AmiBlitz3.ab3@23718>    BSR.w writelong
00031918 <AmiBlitz3.ab3@23719>   MOVE.w dontwrite,D1
0003191C <AmiBlitz3.ab3@23720>    BNE.w JL_0_D962
00031922 <AmiBlitz3.ab3@23721>   MOVEA.l intjmpat,A0
00031926 <AmiBlitz3.ab3@23722>   MOVE.l destpointer(PC),(A0)
0003192C <AmiBlitz3.ab3@23725> JMP get1bytemain
00031930 <AmiBlitz3.ab3@23729>   CMP.w #-$7FF2,D0
00031934 <AmiBlitz3.ab3@23730>    BEQ.w doendsel
00031938 <AmiBlitz3.ab3@23731>   CMP.w #-$7F4C,D0
0003193C <AmiBlitz3.ab3@23732>    BNE.w JL_0_D97C
00031942 <AmiBlitz3.ab3@23733> JMP doendseterr
00031948 <AmiBlitz3.ab3@23737> JMP syntaxerr
0003194E <AmiBlitz3.ab3@23741>   TST.w dirmode
00031952 <AmiBlitz3.ab3@23742>   BNE.w JUMP_baddirerr
00031956 <AmiBlitz3.ab3@23743>   MOVE.w #$C800,D1
0003195C <AmiBlitz3.ab3@23744>   JSR Atokejsr                                            ;end
00031964 <AmiBlitz3.ab3@23745>   CMP.l #"noa7",-4(a5)
00031968 <AmiBlitz3.ab3@23746>   BNE 'l10
0003196E <AmiBlitz3.ab3@23747>   TST.w dontwrite
00031972 <AmiBlitz3.ab3@23748>   BNE 'l10
00031978 <AmiBlitz3.ab3@23749>   MOVE.l destpointer,d1
0003197A <AmiBlitz3.ab3@23750>   SUBQ.l #4,d1
0003197C <AmiBlitz3.ab3@23751>   MOVE.l a0,-(a7)
0003197E <AmiBlitz3.ab3@23752>   MOVE.l d1,a0
00031980 <AmiBlitz3.ab3@23753>   MOVE.l (a0),a0
00031986 <AmiBlitz3.ab3@23754>   MOVE.l #$60000002,(a0)+
0003198A <AmiBlitz3.ab3@23755>   MOVE.w #$588f,(a0)
0003198C <AmiBlitz3.ab3@23756>   MOVE.l (a7)+,a0
0003198E <AmiBlitz3.ab3@23759> RTS
00031994 <AmiBlitz3.ab3@23763>   TST.w dirmode                                            ;stop
00031998 <AmiBlitz3.ab3@23764>   BNE.w JUMP_baddirerr
0003199A <AmiBlitz3.ab3@23765>   MOVE.w d0,d1
0003199E <AmiBlitz3.ab3@23766>   BEQ 'l10
000319A2 <AmiBlitz3.ab3@23767>   CMP.b #$3a,d0
000319A6 <AmiBlitz3.ab3@23768>   BEQ 'l10
000319AC <AmiBlitz3.ab3@23769>   JSR get1bytemain
000319B2 <AmiBlitz3.ab3@23772>   TST.b debugmode
000319B6 <AmiBlitz3.ab3@23773>   BEQ.w newstop
000319BA <AmiBlitz3.ab3@23774>   MOVE.w #$D501,D1
000319BE <AmiBlitz3.ab3@23775> BRA.w Atokejsr
000319C0 <AmiBlitz3.ab3@23779>     RTS
000319C2 <AmiBlitz3.ab3@23781>   MOVE.w d1,d0
000319C6 <AmiBlitz3.ab3@23782>   BEQ 'l10
000319CA <AmiBlitz3.ab3@23783>   CMP.b #$3a,d0
000319CE <AmiBlitz3.ab3@23784>   BEQ 'l10
000319D2 <AmiBlitz3.ab3@23785>   SUB.b #$30,d0
000319D6 <AmiBlitz3.ab3@23786>   MOVE.w #$4e40,d1
000319DA <AmiBlitz3.ab3@23787> BRA 'l11
000319DE <AmiBlitz3.ab3@23790>   MOVE.w #$4e4a,d1
000319E2 <AmiBlitz3.ab3@23791> BRA writeword
000319E4 <AmiBlitz3.ab3@23794>   ADD.b d0,d1
000319E8 <AmiBlitz3.ab3@23795> BRA writeword
000319EE <AmiBlitz3.ab3@23799> JMP badconterr
000319F2 <AmiBlitz3.ab3@23802>   MOVE.w #$4E71,D1
000319F6 <AmiBlitz3.ab3@23803> BRA.w writeword
000319FC <AmiBlitz3.ab3@23806>   MOVEA.l firstfor,A2
00031A02 <AmiBlitz3.ab3@23807>   CLR.l firstfor
00031A08 <AmiBlitz3.ab3@23808>   MOVEA.l _execbase,A6
00031A0C <AmiBlitz3.ab3@23811>   CMPA.w #$0,A2
00031A10 <AmiBlitz3.ab3@23812>   BEQ.w JL_0_D9E6
00031A12 <AmiBlitz3.ab3@23813>   MOVEA.l A2,A1
00031A14 <AmiBlitz3.ab3@23814>   MOVEA.l (A1),A2
00031A16 <AmiBlitz3.ab3@23815>   MOVEQ.l #$00,D0
00031A1C <AmiBlitz3.ab3@23816>   MOVE.l mempool2,a0
00031A20 <AmiBlitz3.ab3@23817>   MOVE.b $10(A1),D0
00031A24 <AmiBlitz3.ab3@23818>   JSR _FreePooled(A6)                                      ;freememfor_error
00031A28 <AmiBlitz3.ab3@23819> BRA.w JL_0_D9CC
00031A2A <AmiBlitz3.ab3@23822> RTS
00031A30 <AmiBlitz3.ab3@23826> JMP badpenderr
00031A36 <AmiBlitz3.ab3@23832>   MOVE.w proceduremode,D1
00031A3A <AmiBlitz3.ab3@23833>    BEQ.w JUMP_badpenderr
00031A40 <AmiBlitz3.ab3@23835>   MOVE.w dontwrite,D1
00031A44 <AmiBlitz3.ab3@23836>    BNE.w JL_0_DA1A
00031A4A <AmiBlitz3.ab3@23837>   MOVEA.l firstpend,A2
00031A4E <AmiBlitz3.ab3@23840>   CMPA.w #$0,A2
00031A52 <AmiBlitz3.ab3@23841>    BEQ.w JL_0_DA1A
00031A56 <AmiBlitz3.ab3@23842>   MOVEA.l $4(A2),A0
00031A5C <AmiBlitz3.ab3@23843>   MOVE.l destpointer,(A0)
00031A5E <AmiBlitz3.ab3@23844>   MOVEA.l (A2),A2
00031A62 <AmiBlitz3.ab3@23845> BRA.w JL_0_DA02
00031A68 <AmiBlitz3.ab3@23848>   TST.b debugmode
00031A6C <AmiBlitz3.ab3@23849>    BEQ.b JL_0_DA2A
00031A6E <AmiBlitz3.ab3@23850>   MOVEQ.l #$05,D1
00031A74 <AmiBlitz3.ab3@23851>   JSR writetrap
00031A7A <AmiBlitz3.ab3@23854>   MOVEA.l firstlocal,A2                                    ;firstlocal
00031A80 <AmiBlitz3.ab3@23855>   JSR calcstatic2b                                           ;calcstatic
00031A86 <AmiBlitz3.ab3@23856>   MOVEA.l currentfunction,A0
00031A8C <AmiBlitz3.ab3@23857>   MOVE.l destpointer,d1
00031A90 <AmiBlitz3.ab3@23858>   SUB.l $e(a0),d1
00031A94 <AmiBlitz3.ab3@23859>   MOVE.l d1,isfunc+1(a0)                                   ;store function size
00031A98 <AmiBlitz3.ab3@23860>   MOVE.w D4,$8(A0)                                         ;set if memalloc need
00031A9E <AmiBlitz3.ab3@23861>   MOVE.l D3,locdatast
00031AA4 <AmiBlitz3.ab3@23862>   MOVEA.l tempvm,A1
00031AAA <AmiBlitz3.ab3@23863>  CLR.b infunctioncode
00031AB0 <AmiBlitz3.ab3@23864>   MOVE.l firstiffstore,d1
00031AB6 <AmiBlitz3.ab3@23865>   CMP.l firstiff,d1
00031ABA <AmiBlitz3.ab3@23866>   BNE JUMP_noenderr
00031ABE <AmiBlitz3.ab3@23867>   TST.w $C(A1)                                             ;dim
00031AC2 <AmiBlitz3.ab3@23868>    BPL.w JL_0_DA64
00031AC8 <AmiBlitz3.ab3@23869>  BSET #$7,$8(A0)
00031ACC <AmiBlitz3.ab3@23870>   MOVE.w #$C005,D1
00031AD0 <AmiBlitz3.ab3@23871>    BSR.w tokejsr2                                          ;writefreememstatement
00031AD4 <AmiBlitz3.ab3@23872> BRA.w JL_0_DA6C
00031ADA <AmiBlitz3.ab3@23875> JMP noenderr
00031AE2 <AmiBlitz3.ab3@23878>   MOVE.w memlibstat,$C(A1)
00031AE8 <AmiBlitz3.ab3@23881>   MOVEA.l currentfunction,A0
00031AEC <AmiBlitz3.ab3@23882>   MOVE.l $E(A0),-(A7)
00031AF4 <AmiBlitz3.ab3@23883>   MOVE.w locvaroff,$6(A0)
00031AFA <AmiBlitz3.ab3@23884>   BCLR #$1,$7(A0)
00031B00 <AmiBlitz3.ab3@23885>   BCLR #$0,$7(A0)
00031B06 <AmiBlitz3.ab3@23886>   CMPI.b #$7,$5(A0)
00031B0A <AmiBlitz3.ab3@23887>    BNE.w JL_0_DA9E
00031B10 <AmiBlitz3.ab3@23888>   MOVE.w getstlen,D1
00031B14 <AmiBlitz3.ab3@23889>    BSR.w writeword
00031B18 <AmiBlitz3.ab3@23892>   TST.w $6(A0)
00031B1C <AmiBlitz3.ab3@23893>    BEQ.w JL_0_DAB8
00031B20 <AmiBlitz3.ab3@23894>   MOVE.w #$FC7B,D1
00031B26 <AmiBlitz3.ab3@23895>    JSR uselib
00031B2C <AmiBlitz3.ab3@23896>   MOVE.w unlinka4,D1
00031B30 <AmiBlitz3.ab3@23897>    BSR.w writeword
00031B36 <AmiBlitz3.ab3@23900>   MOVEA.l currentfunction,A0
00031B38 <AmiBlitz3.ab3@23901>   MOVEQ.l #$00,D1
00031B3C <AmiBlitz3.ab3@23902>   MOVE.b $4(A0),D1
00031B3E <AmiBlitz3.ab3@23903>   LSR.w #4,D1
00031B42 <AmiBlitz3.ab3@23904>    BEQ.w JL_0_DB24
00031B44 <AmiBlitz3.ab3@23906>      LSL.w #1,d1
00031B48 <AmiBlitz3.ab3@23908>   CMP.w #$1,D1
00031B4C <AmiBlitz3.ab3@23909>    BNE.w JL_0_DAE0
00031B52 <AmiBlitz3.ab3@23910>   MOVE.w fix1,D1
00031B56 <AmiBlitz3.ab3@23911>    BSR.w writeword
00031B5A <AmiBlitz3.ab3@23912> BRA.w JL_0_DB24
00031B5C <AmiBlitz3.ab3@23915>   LSL.w #2,D1
00031B5E <AmiBlitz3.ab3@23916>   MOVE.w D1,-(A7)
00031B64 <AmiBlitz3.ab3@23917>   MOVE.w D1,moverts+2
00031B6A <AmiBlitz3.ab3@23918>   MOVE.l moverts,D1
00031B70 <AmiBlitz3.ab3@23919>    JSR writelong
00031B72 <AmiBlitz3.ab3@23920>   MOVE.w (A7)+,D1
00031B76 <AmiBlitz3.ab3@23921>   CMP.w #$8,D1
00031B7A <AmiBlitz3.ab3@23922>    BHI.w JL_0_DB14
00031B7E <AmiBlitz3.ab3@23923>   ANDI.w #$7,D1
00031B80 <AmiBlitz3.ab3@23924>   LSL.w #8,D1
00031B82 <AmiBlitz3.ab3@23925>   LSL.w #1,D1
00031B88 <AmiBlitz3.ab3@23926>   OR.w fixq,D1
00031B8E <AmiBlitz3.ab3@23927>    JSR writeword
00031B92 <AmiBlitz3.ab3@23928> BRA.w JL_0_DB24
00031B98 <AmiBlitz3.ab3@23932>    MOVE.w D1,fixstack+2
00031B9E <AmiBlitz3.ab3@23933>   MOVE.l fixstack,D1
00031BA4 <AmiBlitz3.ab3@23934>    JSR writelong
00031BA8 <AmiBlitz3.ab3@23937>    BSR.w JL_0_D2CA
00031BAC <AmiBlitz3.ab3@23938>    BSR.w JL_0_D4F8
00031BAE <AmiBlitz3.ab3@23939>   MOVEA.l (A7)+,A0
00031BB4 <AmiBlitz3.ab3@23940>   MOVE.w dontwrite,D1
00031BB8 <AmiBlitz3.ab3@23941>    BNE.w JL_0_DB3E
00031BBE <AmiBlitz3.ab3@23942>   MOVE.l destpointer,-(A0)
00031BC4 <AmiBlitz3.ab3@23945>   CLR.w proceduremode
00031BCA <AmiBlitz3.ab3@23946>   CLR.l currentfunction
00031BD0 <AmiBlitz3.ab3@23947>   CLR.w procnum
00031BD4 <AmiBlitz3.ab3@23948>    BSR.w JL_0_DB5C
00031BDA <AmiBlitz3.ab3@23949>    JSR freepends
00031BE0 <AmiBlitz3.ab3@23950> JMP get1bytemain
00031BE2 <AmiBlitz3.ab3@23953>   MOVEQ.l #$0C,D0
00031BE4 <AmiBlitz3.ab3@23954>   MOVEQ.l #$01,D1
00031BEA <AmiBlitz3.ab3@23955>   MOVEA.l _execbase,A6
00031BF0 <AmiBlitz3.ab3@23957>   MOVE.l mempool,a0
00031BF4 <AmiBlitz3.ab3@23958>   JSR _AllocPooled(a6)
00031BF6 <AmiBlitz3.ab3@23959>   MOVEA.l D0,A0
00031BFC <AmiBlitz3.ab3@23960>   MOVE.l alllocals,(A0)
00031C02 <AmiBlitz3.ab3@23961>   MOVE.l A0,alllocals
00031C08 <AmiBlitz3.ab3@23962>   MOVE.l firstlocal,D0
00031C0E <AmiBlitz3.ab3@23963>   CLR.l firstlocal
00031C12 <AmiBlitz3.ab3@23964>   MOVE.l D0,$4(A0)
00031C18 <AmiBlitz3.ab3@23965>   MOVE.l firstglob,D1
00031C1E <AmiBlitz3.ab3@23966>   CLR.l firstglob
00031C22 <AmiBlitz3.ab3@23967>   MOVE.l D1,$8(A0)
00031C28 <AmiBlitz3.ab3@23968>   TST.b debugmode
00031C2C <AmiBlitz3.ab3@23969>    BEQ.b JL_0_DBB0
00031C32 <AmiBlitz3.ab3@23970>   TST.w dontwrite
00031C36 <AmiBlitz3.ab3@23971>    BNE.b JL_0_DBB0
00031C3A <AmiBlitz3.ab3@23972>   MOVEA.l proclocals(PC),A0
00031C3C <AmiBlitz3.ab3@23973>   MOVE.l D0,(A0)+
00031C3E <AmiBlitz3.ab3@23974>   MOVE.l D1,(A0)
00031C40 <AmiBlitz3.ab3@23977> RTS
00031C46 <AmiBlitz3.ab3@23980> JMP baddirerr
00031C4C <AmiBlitz3.ab3@23984>   TST.w dirmode
00031C50 <AmiBlitz3.ab3@23985>    BNE.w JUMP_baddirerr
00031C56 <AmiBlitz3.ab3@23986>   MOVE.l firstfor,D1
00031C5A <AmiBlitz3.ab3@23987>    BEQ.w JUMP_noforerr
00031C60 <AmiBlitz3.ab3@23988>   JSR reget
00031C64 <AmiBlitz3.ab3@23989>    BEQ.w JL_0_DC18
00031C68 <AmiBlitz3.ab3@23992>   BSR.w getparameter
00031C6C <AmiBlitz3.ab3@23993>   MOVEA.l firstfor(PC),A2
00031C6E <AmiBlitz3.ab3@23994>   MOVEQ.l #$00,D1
00031C72 <AmiBlitz3.ab3@23995>   MOVE.b $10(A2),D1
00031C76 <AmiBlitz3.ab3@23996>   SUBI.w #$12,D1
00031C78 <AmiBlitz3.ab3@23997>   CMP.w D1,D2
00031C7C <AmiBlitz3.ab3@23998>    BNE.w JUMP_noforerr
00031C80 <AmiBlitz3.ab3@23999>   LEA ptr_parameterstore(PC),A0
00031C84 <AmiBlitz3.ab3@24000>   LEA $11(A2),A1
00031C86 <AmiBlitz3.ab3@24001>   SUBQ.w #1,D2
00031C88 <AmiBlitz3.ab3@24004>     CMPM.b (A0)+,(A1)+
00031C8C <AmiBlitz3.ab3@24005>     BNE.w JUMP_noforerr
00031C90 <AmiBlitz3.ab3@24006>   DBF D2,JL_0_DBF0
00031C94 <AmiBlitz3.ab3@24008>    BSR.w JL_0_DC1A
00031C9A <AmiBlitz3.ab3@24009>    JSR reget
00031C9E <AmiBlitz3.ab3@24010>    BEQ.w JL_0_DC16
00031CA2 <AmiBlitz3.ab3@24011>   CMP.w #$2C,D0
00031CA6 <AmiBlitz3.ab3@24012>    BNE.w JUMP_syntaxerr
00031CAC <AmiBlitz3.ab3@24013>    JSR get1bytemain
00031CB0 <AmiBlitz3.ab3@24014> BRA.w JL_0_DBCE
00031CB6 <AmiBlitz3.ab3@24017> JMP noforerr
00031CB8 <AmiBlitz3.ab3@24020> RTS
00031CBC <AmiBlitz3.ab3@24024>   MOVE.l 8(a7),a2
00031CC0 <AmiBlitz3.ab3@24025>   Dc.l  $f2124400                                          ;fmove.s (a2),fp0
00031CC4 <AmiBlitz3.ab3@24026>   Dc.l  $F2174422                                          ;fadd.s (a7),fp0
00031CC8 <AmiBlitz3.ab3@24027>   Dc.l  $F2126400                                          ;fmove.s fp0,(a2)
00031CCA <AmiBlitz3.ab3@24031>   MOVEA.l D1,A2
00031CD0 <AmiBlitz3.ab3@24034>   JSR popnext                                           ;error checking for next.
00031CD4 <AmiBlitz3.ab3@24035>   MOVE.w $C(A2),D0
00031CDA <AmiBlitz3.ab3@24036>   LEA nextb,A0
00031CE0 <AmiBlitz3.ab3@24037>   LEA nextbf,A1
00031CE4 <AmiBlitz3.ab3@24038>   CMP.w #$1,D0
00031CE8 <AmiBlitz3.ab3@24039>    BEQ.w JL_0_DC74
00031CEE <AmiBlitz3.ab3@24040>   LEA nextw,A0
00031CF4 <AmiBlitz3.ab3@24041>   LEA nextwf,A1
00031CF8 <AmiBlitz3.ab3@24042>   CMP.w #$2,D0
00031CFC <AmiBlitz3.ab3@24043>    BEQ.w JL_0_DC74
00031D02 <AmiBlitz3.ab3@24044>   LEA nextl,A0
00031D08 <AmiBlitz3.ab3@24045>   LEA nextlf,A1
00031D0C <AmiBlitz3.ab3@24046>   CMP.w #$5,D0
00031D10 <AmiBlitz3.ab3@24047>    BNE.w JL_0_DC74
00031D16 <AmiBlitz3.ab3@24048>    TST.b fpu
00031D1A <AmiBlitz3.ab3@24049>    BEQ 'old
00031D20 <AmiBlitz3.ab3@24050>    LEA fpu2dats,a0                                         ;fpu next code
00031D26 <AmiBlitz3.ab3@24051>    LEA fpu2date,a1
00031D2A <AmiBlitz3.ab3@24052> BRA JL_0_DC74
00031D2E <AmiBlitz3.ab3@24055>   MOVE.w #$C900,D1
00031D32 <AmiBlitz3.ab3@24056>    BSR.w Atokejsr
00031D38 <AmiBlitz3.ab3@24057>   LEA nextf,A0
00031D3E <AmiBlitz3.ab3@24058>   LEA nextff,A1
00031D44 <AmiBlitz3.ab3@24061>   JSR pokecode
00031D4A <AmiBlitz3.ab3@24062>     TST.b fast                                             ;fast for next deactivate
00031D4E <AmiBlitz3.ab3@24063> BRA 'l1
00031D54 <AmiBlitz3.ab3@24065>     TST.b onestep
00031D58 <AmiBlitz3.ab3@24066>     BEQ 'l1
00031D5E <AmiBlitz3.ab3@24067>     CLR.b onestep
00031D64 <AmiBlitz3.ab3@24068>     SUBQ.l #4,destpointer
00031D68 <AmiBlitz3.ab3@24069>     MOVE.w #$5292,d1
00031D6E <AmiBlitz3.ab3@24070>     JSR writeword
00031D72 <AmiBlitz3.ab3@24073>   MOVE.l JL_0_DCF4(PC),D1
00031D78 <AmiBlitz3.ab3@24074>    JSR writelong
00031D7E <AmiBlitz3.ab3@24075>   MOVEA.l firstfor,A2
00031D84 <AmiBlitz3.ab3@24076>   MOVE.l (A2),firstfor
00031D88 <AmiBlitz3.ab3@24077>   MOVEA.l $8(A2),A0
00031D8E <AmiBlitz3.ab3@24078>   MOVEA.l destpointer,A1
00031D90 <AmiBlitz3.ab3@24079>   MOVE.l A1,D1
00031D92 <AmiBlitz3.ab3@24080>   SUB.l A0,D1
00031D94 <AmiBlitz3.ab3@24081>   ADDQ.l #2,D1
00031D9A <AmiBlitz3.ab3@24082>   CMP.l #MinWordSgnd,D1
00031D9E <AmiBlitz3.ab3@24083>    BCC.w JUMP_bigforerr
00031DA4 <AmiBlitz3.ab3@24084>   TST.w dontwrite
00031DA8 <AmiBlitz3.ab3@24085>    BNE.w JL_0_DCB4
00031DAC <AmiBlitz3.ab3@24086>   MOVE.w D1,-$2(A0)
00031DAE <AmiBlitz3.ab3@24089>   MOVE.l A1,D1
00031DB2 <AmiBlitz3.ab3@24090>   SUB.l $4(A2),D1
00031DB4 <AmiBlitz3.ab3@24091>   SUBQ.l #6,D1
00031DBA <AmiBlitz3.ab3@24092>   CMP.l #MinWordSgnd,D1
00031DBE <AmiBlitz3.ab3@24093>    BCC.w JUMP_bigforerr
00031DC4 <AmiBlitz3.ab3@24094>   TST.w dontwrite
00031DC8 <AmiBlitz3.ab3@24095>    BNE.w JL_0_DCD6
00031DCA <AmiBlitz3.ab3@24096>   NEG.w D1
00031DCE <AmiBlitz3.ab3@24097>   MOVE.w D1,-$2(A1)
00031DD4 <AmiBlitz3.ab3@24100>   JSR popnext3
00031DDA <AmiBlitz3.ab3@24101>   MOVEA.l _execbase,A6
00031DDC <AmiBlitz3.ab3@24102>   MOVEA.l A2,A1
00031DDE <AmiBlitz3.ab3@24103>   MOVEQ.l #$00,D0
00031DE2 <AmiBlitz3.ab3@24104>   MOVE.b $10(A1),D0
00031DE8 <AmiBlitz3.ab3@24105>   MOVE.l mempool2,a0
00031DEC <AmiBlitz3.ab3@24106>   JSR _FreePooled(A6)
00031DF2 <AmiBlitz3.ab3@24107> JMP reget
00031DF8 <AmiBlitz3.ab3@24110> JMP notallowd
00031DFE <AmiBlitz3.ab3@24113> JMP bigforerr
00031E02 <AmiBlitz3.ab3@24120>   MOVE.w #$664F,-(A7)
00031E06 <AmiBlitz3.ab3@24123> BRA.w JL_0_DCF4
00031E0C <AmiBlitz3.ab3@24126> JMP error_dublicate_for
00031E10 <AmiBlitz3.ab3@24129> forlineat:   Ds.l 1
00031E12 <AmiBlitz3.ab3@24130> fortemp:     Ds.w 1
00031E18 <AmiBlitz3.ab3@24137>   CLR.l fp0addr
00031E1E <AmiBlitz3.ab3@24138>   TST.w dirmode
00031E22 <AmiBlitz3.ab3@24139>    BNE.w JUMP_baddirerr
00031E2C <AmiBlitz3.ab3@24140>   MOVE.l linenumat,forlineat
00031E32 <AmiBlitz3.ab3@24144>   MOVE.l A5,letstart
00031E36 <AmiBlitz3.ab3@24145>   BSR.w getparameter
00031E3C <AmiBlitz3.ab3@24146>   MOVE.w D2,fortemp
00031E42 <AmiBlitz3.ab3@24147>   JSR findfor
00031E46 <AmiBlitz3.ab3@24148>    BEQ.w JUMP_error_dublicate_for
00031E4C <AmiBlitz3.ab3@24149>   LEA firstfor,A2
00031E52 <AmiBlitz3.ab3@24150>   JSR addhere2
00031E54 <AmiBlitz3.ab3@24151>   MOVE.l A2,-(A7)
00031E5A <AmiBlitz3.ab3@24152>   TST.b debugmode
00031E5E <AmiBlitz3.ab3@24153>    BEQ.b JL_0_DD4C
00031E64 <AmiBlitz3.ab3@24154>   JSR chkstak
00031E6A <AmiBlitz3.ab3@24155>   MOVE.l AJL_0_DCF0,D1
00031E70 <AmiBlitz3.ab3@24156>   JSR  writelong
00031E74 <AmiBlitz3.ab3@24159>   MOVE.w fortemp(PC),D2
00031E7C <AmiBlitz3.ab3@24160>   MOVE.b #1,formode
00031E80 <AmiBlitz3.ab3@24161>   BSR.w AJL_0_DEA6                                         ;for get 1. value
00031E86 <AmiBlitz3.ab3@24162>   CLR.b formode
00031E8A <AmiBlitz3.ab3@24163>   CMP.w #-$7FE8,D0
00031E8E <AmiBlitz3.ab3@24164>    BNE.w JUMP_syntaxerr
00031E94 <AmiBlitz3.ab3@24165>   MOVE.w commode,D1
00031E98 <AmiBlitz3.ab3@24166>    BNE.w JUMP_syntaxerr
00031E9C <AmiBlitz3.ab3@24167>   CMP.b #$6,D2
00031EA0 <AmiBlitz3.ab3@24168>    BCC.w JUMP_badforerr
00031EA4 <AmiBlitz3.ab3@24169>   BTST #$F,D2
00031EA8 <AmiBlitz3.ab3@24170>    BNE.w JL_0_DD86
00031EAE <AmiBlitz3.ab3@24171>   MOVE.w leaamp,D1
00031EB4 <AmiBlitz3.ab3@24172>   JSR pokewda5s
00031EB6 <AmiBlitz3.ab3@24173>   MOVE.w D3,D1
00031EBC <AmiBlitz3.ab3@24174>   JSR  writeword
00031EC2 <AmiBlitz3.ab3@24177>   MOVE.w pushindex,D1
00031EC8 <AmiBlitz3.ab3@24178>   JSR  writeword
00031ECC <AmiBlitz3.ab3@24179>   ANDI.w #$FF,D2
00031ECE <AmiBlitz3.ab3@24181>   MOVEA.l (A7),A1
00031ED2 <AmiBlitz3.ab3@24182>   MOVE.w D2,$C(A1)
00031ED4 <AmiBlitz3.ab3@24183>   MOVE.w D2,-(A7)
00031ED8 <AmiBlitz3.ab3@24184>    BSR.w eval
00031EDE <AmiBlitz3.ab3@24185>    CLR.b onestep
00031EE2 <AmiBlitz3.ab3@24186>    CMP.w #$8019,d0
00031EE6 <AmiBlitz3.ab3@24187>    BEQ 'l1
00031EEE <AmiBlitz3.ab3@24188>    MOVE.b #1,onestep
00031EF0 <AmiBlitz3.ab3@24191>   MOVE.w (A7),D2
00031EF6 <AmiBlitz3.ab3@24192>   MOVE.w pushd0l,D1
00031EFA <AmiBlitz3.ab3@24193>   CMP.w #$3,D2
00031EFE <AmiBlitz3.ab3@24194>    BCC.w JL_0_DDB6
00031F04 <AmiBlitz3.ab3@24195>   MOVE.w pushd0wd,D1
00031F06 <AmiBlitz3.ab3@24198>    MOVE.w D1,-(A7)
00031F0C <AmiBlitz3.ab3@24199>    TST.b fpu
00031F10 <AmiBlitz3.ab3@24200>    BEQ 'old
00031F14 <AmiBlitz3.ab3@24201>    CMP.b #5,d2
00031F18 <AmiBlitz3.ab3@24202>    BNE 'old
00031F1E <AmiBlitz3.ab3@24203>    MOVE.l #$f2276400,d1
00031F24 <AmiBlitz3.ab3@24205>    JSR writelong
00031F28 <AmiBlitz3.ab3@24206> BRA 'weit
00031F2E <AmiBlitz3.ab3@24209>    JSR  writeword                                          ;fpu for end value
00031F32 <AmiBlitz3.ab3@24212>   CMP.w #-$7FE7,D0
00031F36 <AmiBlitz3.ab3@24213>    BNE.w JL_0_DDCC
00031F3A <AmiBlitz3.ab3@24214>    BSR.w eval
00031F40 <AmiBlitz3.ab3@24215>    TST.b fpu
00031F44 <AmiBlitz3.ab3@24216>    BEQ JL_0_DE0C
00031F48 <AmiBlitz3.ab3@24217>    CMP.b #5,d2
00031F4C <AmiBlitz3.ab3@24218>    BNE JL_0_DE0C
00031F52 <AmiBlitz3.ab3@24219>    MOVE.l #$f2276400,d1                                    ;write step <> 1
00031F58 <AmiBlitz3.ab3@24221>   JSR writelong
00031F5A <AmiBlitz3.ab3@24224>    MOVE.w (a7)+,d1
00031F5E <AmiBlitz3.ab3@24225> BRA fpur
00031F62 <AmiBlitz3.ab3@24228>   CMP.w #$4,D2
00031F66 <AmiBlitz3.ab3@24229>    BCC.w JL_0_DDE0
00031F6A <AmiBlitz3.ab3@24230>   MOVE.w #$7001,D1
00031F70 <AmiBlitz3.ab3@24231>   JSR writeword
00031F74 <AmiBlitz3.ab3@24232> BRA.w JL_0_DE0C
00031F7A <AmiBlitz3.ab3@24235> JMP badforerr
00031F7E <AmiBlitz3.ab3@24238>   BNE.w JL_0_DDFA
00031F82 <AmiBlitz3.ab3@24239>   MOVE.w #$7001,D1
00031F88 <AmiBlitz3.ab3@24240>   JSR writeword
00031F8E <AmiBlitz3.ab3@24241>   MOVE.w swapd0,D1
00031F94 <AmiBlitz3.ab3@24242>   JSR writeword
00031F98 <AmiBlitz3.ab3@24243> BRA.w JL_0_DE0C
00031F9E <AmiBlitz3.ab3@24246>   TST.b fpu
00031FA2 <AmiBlitz3.ab3@24247>    BEQ 'old
00031FA6 <AmiBlitz3.ab3@24248>   CMP.b #5,d2
00031FAA <AmiBlitz3.ab3@24249>    BNE 'old
00031FB0 <AmiBlitz3.ab3@24250>   MOVE.l #$f23c5000,d1
00031FB6 <AmiBlitz3.ab3@24251>   JSR writelong
00031FBA <AmiBlitz3.ab3@24252>   MOVE.w #$1,d1
00031FC0 <AmiBlitz3.ab3@24253>   JSR writeword
00031FC6 <AmiBlitz3.ab3@24254>   MOVE.l #$f2276400,d1
00031FCC <AmiBlitz3.ab3@24255>   JSR writelong
00031FCE <AmiBlitz3.ab3@24256>   MOVE.w (a7)+,d1
00031FD2 <AmiBlitz3.ab3@24257> BRA fpur
00031FD6 <AmiBlitz3.ab3@24260>   MOVE.w #$203C,D1                                         ;write step 1
00031FDC <AmiBlitz3.ab3@24261>   JSR writeword
00031FE2 <AmiBlitz3.ab3@24262>   MOVE.l #SA_BackFill,D1                                   ;#$80000041,d1 org source  ;ffp '1'
00031FE8 <AmiBlitz3.ab3@24263>   JSR writelong
00031FEA <AmiBlitz3.ab3@24266>   MOVE.w (A7)+,D1
00031FF0 <AmiBlitz3.ab3@24267>   JSR writeword                                            ;push step on stack
00031FF2 <AmiBlitz3.ab3@24270>   MOVE.w (A7)+,D2
00031FF4 <AmiBlitz3.ab3@24271>   MOVEA.l (A7),A1
00031FFC <AmiBlitz3.ab3@24272>   MOVE.l destpointer,$4(A1)
00032002 <AmiBlitz3.ab3@24273>   LEA forcompb,A0
00032008 <AmiBlitz3.ab3@24274>   LEA forcompbf,A1
0003200C <AmiBlitz3.ab3@24275>   CMP.w #$1,D2
00032010 <AmiBlitz3.ab3@24276>    BEQ.w JL_0_DE7E
00032016 <AmiBlitz3.ab3@24277>   LEA forcompw,A0
0003201C <AmiBlitz3.ab3@24278>   LEA forcompwf,A1
00032020 <AmiBlitz3.ab3@24279>   CMP.w #$2,D2
00032024 <AmiBlitz3.ab3@24280>    BEQ.w JL_0_DE7E
0003202A <AmiBlitz3.ab3@24281>   LEA forcompl,A0
00032030 <AmiBlitz3.ab3@24282>   LEA forcomplf,A1
00032034 <AmiBlitz3.ab3@24283>   CMP.w #$5,D2
00032038 <AmiBlitz3.ab3@24284>    BNE.w JL_0_DE7E
0003203E <AmiBlitz3.ab3@24285>   TST.b fpu
00032042 <AmiBlitz3.ab3@24286>    BEQ 'old
00032048 <AmiBlitz3.ab3@24287>   LEA fpu_start,a0
0003204E <AmiBlitz3.ab3@24288>   LEA fpu_end,a1
00032054 <AmiBlitz3.ab3@24289>   JSR pokecode
00032058 <AmiBlitz3.ab3@24290> BRA fpu3
0003205E <AmiBlitz3.ab3@24293>   LEA forcompf,A0                                         ;
00032064 <AmiBlitz3.ab3@24294>   LEA forcompff,A1
0003206A <AmiBlitz3.ab3@24295>   JSR pokecode
0003206E <AmiBlitz3.ab3@24296>   MOVE.w #$C900,D1
00032072 <AmiBlitz3.ab3@24297>   BSR.w Atokejsr
00032078 <AmiBlitz3.ab3@24298>   LEA forcompf2,A0
0003207E <AmiBlitz3.ab3@24299>   LEA forcompf2f,A1
00032084 <AmiBlitz3.ab3@24302>   JSR pokecode
0003208A <AmiBlitz3.ab3@24303>   TST.b fast                                               ;fast for next
0003208E <AmiBlitz3.ab3@24304>    BEQ 's1
00032092 <AmiBlitz3.ab3@24305>   CMP.w #3,d2
00032096 <AmiBlitz3.ab3@24306>    BNE 's1
0003209C <AmiBlitz3.ab3@24307>   TST.b onestep
000320A0 <AmiBlitz3.ab3@24308>    BEQ 's1
000320AA <AmiBlitz3.ab3@24309>   SUB.l #10,destpointer
000320AE <AmiBlitz3.ab3@24310>   MOVE.w #$b081,d1
000320B4 <AmiBlitz3.ab3@24311>   JSR writeword
000320B8 <AmiBlitz3.ab3@24315>   MOVE.l thebgt(PC),D1
000320BE <AmiBlitz3.ab3@24316>   JSR writelong
000320C0 <AmiBlitz3.ab3@24319>   MOVEA.l (A7)+,A1
000320C8 <AmiBlitz3.ab3@24320>   MOVE.l destpointer,$8(A1)
000320CE <AmiBlitz3.ab3@24321> JMP reget
000320D2 <AmiBlitz3.ab3@24324>   MOVEA.l 8(a7),a2
000320D6 <AmiBlitz3.ab3@24325>   Dc.l $f2124400                                           ;fmove.s (a2),fp0
000320DC <AmiBlitz3.ab3@24326>   fmove.s 4(a7),fp1
000320E0 <AmiBlitz3.ab3@24327>   BTST.b #7,(a7)
000320E4 <AmiBlitz3.ab3@24328>   BNE 'negi
000320E8 <AmiBlitz3.ab3@24329>   fcmp.x fp1,fp0
000320EC <AmiBlitz3.ab3@24330> BRA 'negi2
000320F0 <AmiBlitz3.ab3@24333>   fcmp.x fp0,fp1
000320F4 <AmiBlitz3.ab3@24336>   Dc.l $f2920000                                           ;fbgt.w
000320F8 <AmiBlitz3.ab3@24340>   BGT.w thebgt
000320FE <AmiBlitz3.ab3@24343>   MOVE.l A5,letstart
00032102 <AmiBlitz3.ab3@24344>   BSR.w getparameter
0003210C <AmiBlitz3.ab3@24350>   MOVE.l destpointer,pushpc
00032116 <AmiBlitz3.ab3@24351>   MOVE.l hunkoffsetbase,pushoff
0003211C <AmiBlitz3.ab3@24352>   CLR.l rightsidetype
00032124 <AmiBlitz3.ab3@24353>   MOVE.w #$0001,regnum
0003212A <AmiBlitz3.ab3@24354>   JSR JL_0_8E3C
00032130 <AmiBlitz3.ab3@24355>   JSR calcvar
00032136 <AmiBlitz3.ab3@24356>   TST.b formode
0003213A <AmiBlitz3.ab3@24357>   BEQ 'lf1
00032140 <AmiBlitz3.ab3@24358>   CMP.l #newtype_double,A2
00032144 <AmiBlitz3.ab3@24359>   BEQ JUMP_notallowd
0003214A <AmiBlitz3.ab3@24360>   MOVE.l a2,currtype
00032150 <AmiBlitz3.ab3@24363>   CLR.w startoffsetmore
00032154 <AmiBlitz3.ab3@24364>   CMP.w #$3d,d0
00032158 <AmiBlitz3.ab3@24365>   BNE 'l1a
0003215C <AmiBlitz3.ab3@24366>   BTST #15,d2
00032160 <AmiBlitz3.ab3@24367>   BEQ 'l1a
00032164 <AmiBlitz3.ab3@24368>   CMP.b #1,d2
00032168 <AmiBlitz3.ab3@24369>   BNE 'l1a
00032172 <AmiBlitz3.ab3@24370>   MOVE.w leaa0a0+2,startoffsetmore
00032178 <AmiBlitz3.ab3@24373>   CLR.w regnum
0003217C <AmiBlitz3.ab3@24374>   BSR.w JL_0_B5D2
00032182 <AmiBlitz3.ab3@24375>   CLR.w commode
00032188 <AmiBlitz3.ab3@24376>   CLR.w stackcorrect
0003218E <AmiBlitz3.ab3@24377>   CLR.w pcodd
00032194 <AmiBlitz3.ab3@24378>   MOVE.w startoffsetmore,d1
00032198 <AmiBlitz3.ab3@24379>   BTST #0,d1
0003219C <AmiBlitz3.ab3@24380>   BEQ 'l2a
000321A4 <AmiBlitz3.ab3@24381>   MOVE.w #1,pcodd
000321A8 <AmiBlitz3.ab3@24384>   CMP.w #$3D,D0                                            ;=
000321AC <AmiBlitz3.ab3@24385>   BEQ.w JL_0_DEE0
000321AE <AmiBlitz3.ab3@24388>   MOVE.b (a5)+,d1
000321B2 <AmiBlitz3.ab3@24389>   BEQ 'l10
000321B6 <AmiBlitz3.ab3@24390>   CMP.b #":",d1
000321BA <AmiBlitz3.ab3@24391>   BEQ 'l10
000321BE <AmiBlitz3.ab3@24392>   CMP.b #";",d1
000321C2 <AmiBlitz3.ab3@24393>   BEQ 'l10
000321C6 <AmiBlitz3.ab3@24394>   CMP.b #"0",d1
000321CA <AmiBlitz3.ab3@24395>   BLT 'l11
000321CE <AmiBlitz3.ab3@24396>   CMP.b #"9",d1
000321D2 <AmiBlitz3.ab3@24397>   BGT 'l11
000321D6 <AmiBlitz3.ab3@24398> BRA.s 'l1
000321DE <AmiBlitz3.ab3@24401>   MOVE.b #1,quickadd
000321E4 <AmiBlitz3.ab3@24404>   MOVEA.l letstart,A5
000321E6 <AmiBlitz3.ab3@24405>   SUBQ.w #1,A5
000321EA <AmiBlitz3.ab3@24408>   CMP.b #$7,D2
000321EE <AmiBlitz3.ab3@24409>    BNE.w JL_0_DF8A
000321F2 <AmiBlitz3.ab3@24415>   MOVEM.w D2-D3,-(A7)
000321F8 <AmiBlitz3.ab3@24416>   MOVE.l lastoffset_org,-(A7)
000321FE <AmiBlitz3.ab3@24417>   MOVE.w varmode,-(A7)
00032208 <AmiBlitz3.ab3@24419>    MOVE.l #forthstack,forthsp
00032212 <AmiBlitz3.ab3@24420>    MOVE.l #precstack,precsp
00032218 <AmiBlitz3.ab3@24421>    CLR.w regnum
0003221E <AmiBlitz3.ab3@24422>    CLR.w nonew
00032224 <AmiBlitz3.ab3@24423>    CLR.w sbasegot
0003222E <AmiBlitz3.ab3@24424>    MOVE.w varcodelen,oldvcodelen
00032234 <AmiBlitz3.ab3@24425>    CLR.w varcodelen
0003223C <AmiBlitz3.ab3@24426>    MOVE.w #$FFFF,lasta6
0003223E <AmiBlitz3.ab3@24429>   MOVEQ.l #$07,D2
00032242 <AmiBlitz3.ab3@24430>    BSR.w eval
00032248 <AmiBlitz3.ab3@24431>   MOVE.w (A7)+,varmode
0003224E <AmiBlitz3.ab3@24432>   MOVE.l (A7)+,lastoffset_org
00032254 <AmiBlitz3.ab3@24433>   MOVE.w moved0a3,D1
0003225A <AmiBlitz3.ab3@24434>    JSR writeword
00032260 <AmiBlitz3.ab3@24435>   MOVE.w commode,D1
00032264 <AmiBlitz3.ab3@24436>    BEQ.w JL_0_DF38
0003226A <AmiBlitz3.ab3@24437>   LEA pulla2st,A0
00032270 <AmiBlitz3.ab3@24438>   LEA pulla2stf,A1
00032276 <AmiBlitz3.ab3@24439>    JSR pokecode
0003227A <AmiBlitz3.ab3@24440> BRA.w JL_0_DF3C
0003227E <AmiBlitz3.ab3@24443>   BSR.w JL_0_B63C
00032282 <AmiBlitz3.ab3@24446>   MOVEM.w (A7)+,D2-D3
00032286 <AmiBlitz3.ab3@24447>   BTST #$F,D2
0003228A <AmiBlitz3.ab3@24448>   BNE.w JL_0_DF58
00032290 <AmiBlitz3.ab3@24449>     MOVE.w D3,leaa5d3a2+2
00032296 <AmiBlitz3.ab3@24450>     MOVE.l leaa5d3a2,D1
0003229C <AmiBlitz3.ab3@24451>     JSR pokela5s
000322A0 <AmiBlitz3.ab3@24454>   MOVE.w #$FE6F,D1
000322A6 <AmiBlitz3.ab3@24455>   JSR uselib
000322AC <AmiBlitz3.ab3@24456>   MOVE.l #$C700,D1
000322B2 <AmiBlitz3.ab3@24457>   MOVE.l d1,lastinstruction
000322B8 <AmiBlitz3.ab3@24458>   MOVE.w varmode,D2
000322BC <AmiBlitz3.ab3@24459>   BNE.w JL_0_DF70
000322BE <AmiBlitz3.ab3@24460>     ADDQ.w #1,D1
000322C2 <AmiBlitz3.ab3@24463>   BSR.w Atokejsr
000322C6 <AmiBlitz3.ab3@24464>   CMP.w #$2C,D0
000322CA <AmiBlitz3.ab3@24465>   BNE.w JL_0_E0C6
000322D0 <AmiBlitz3.ab3@24467>   MOVE.w addq4a2,D1
000322D6 <AmiBlitz3.ab3@24468>   JSR writeword
000322DA <AmiBlitz3.ab3@24469> BRA.w JL_0_E018
000322E0 <AmiBlitz3.ab3@24472> JMP error4char
000322E6 <AmiBlitz3.ab3@24475> JMP error_convert_types
000322EA <AmiBlitz3.ab3@24479>    BTST #$E,D2
000322EE <AmiBlitz3.ab3@24480>    BNE.w JL_0_DF9C
000322F0 <AmiBlitz3.ab3@24481>   TST.b D2
000322F4 <AmiBlitz3.ab3@24482>    BEQ.w JUMP_noleterr
000322FA <AmiBlitz3.ab3@24483>    TST.b newsyntax
000322FE <AmiBlitz3.ab3@24484>    BEQ JL_0_DFA0
00032302 <AmiBlitz3.ab3@24487>    CMP.w #$4022,(a5)
00032306 <AmiBlitz3.ab3@24488>    BNE JL_0_DFA0
0003230C <AmiBlitz3.ab3@24489>    CMP.l #3,d2
00032310 <AmiBlitz3.ab3@24490>    BNE  JUMP_error_convert_types
00032312 <AmiBlitz3.ab3@24491>    ADDQ #2,a5
00032314 <AmiBlitz3.ab3@24492>    MOVEQ #0,d0
00032316 <AmiBlitz3.ab3@24493>    MOVE.b (a5)+,d0
0003231A <AmiBlitz3.ab3@24494>    BEQ JL_0_DFA0
0003231E <AmiBlitz3.ab3@24495>    CMP.b #$22,d0
00032322 <AmiBlitz3.ab3@24496>    BNE 'l1
00032326 <AmiBlitz3.ab3@24497>    MOVE.b #0,d0
0003232A <AmiBlitz3.ab3@24498> BRA 'do
0003232C <AmiBlitz3.ab3@24501>   ASL.l #8,d0
0003232E <AmiBlitz3.ab3@24502>    MOVE.b (a5)+,d0
00032332 <AmiBlitz3.ab3@24503>    BEQ JL_0_DFA0
00032336 <AmiBlitz3.ab3@24504>    CMP.b #$22,d0
0003233A <AmiBlitz3.ab3@24505>    BNE 'l2
0003233E <AmiBlitz3.ab3@24506>    MOVE.b #0,d0
00032340 <AmiBlitz3.ab3@24507>    ASR.l #8,d0
00032344 <AmiBlitz3.ab3@24508> BRA 'do
00032346 <AmiBlitz3.ab3@24511>   ASL.l #8,d0
00032348 <AmiBlitz3.ab3@24512>     MOVE.b (a5)+,d0
0003234C <AmiBlitz3.ab3@24513>    BEQ JL_0_DFA0
00032350 <AmiBlitz3.ab3@24514>    CMP.b #$22,d0
00032354 <AmiBlitz3.ab3@24515>    BNE 'l3
00032358 <AmiBlitz3.ab3@24516>    MOVE.b #0,d0
0003235A <AmiBlitz3.ab3@24517>    ASR.l #8,d0
0003235E <AmiBlitz3.ab3@24518> BRA 'do
00032360 <AmiBlitz3.ab3@24521>   ASL.l #8,d0
00032362 <AmiBlitz3.ab3@24522>     MOVE.b (a5)+,d0
00032366 <AmiBlitz3.ab3@24523>    BEQ JL_0_DFA0
0003236A <AmiBlitz3.ab3@24524>    CMP.b #$22,d0
0003236E <AmiBlitz3.ab3@24525>    BNE 'l4
00032372 <AmiBlitz3.ab3@24526>    MOVE.b #0,d0
00032374 <AmiBlitz3.ab3@24527>    ASR.l #8,d0
00032378 <AmiBlitz3.ab3@24528> BRA 'do
0003237C <AmiBlitz3.ab3@24531>    CMP.b #$22,(a5)+
00032380 <AmiBlitz3.ab3@24532>    BNE JUMP_error4char
00032384 <AmiBlitz3.ab3@24535>   MOVE.w #$2b7c,d1
0003238A <AmiBlitz3.ab3@24536>    TST.w varmode
0003238E <AmiBlitz3.ab3@24537>    BEQ 'g3
00032392 <AmiBlitz3.ab3@24538>    BCLR #9,d1
00032398 <AmiBlitz3.ab3@24541>     JSR writeword
0003239A <AmiBlitz3.ab3@24542>     MOVE.l d0,d1
000323A0 <AmiBlitz3.ab3@24543>     JSR writelong
000323A2 <AmiBlitz3.ab3@24544>     MOVE.w d3,d1
000323A8 <AmiBlitz3.ab3@24545>     JSR writeword
000323AE <AmiBlitz3.ab3@24546>     JSR get1bytemain
000323B0 <AmiBlitz3.ab3@24547> RTS
000323B6 <AmiBlitz3.ab3@24553> JMP noleterr
000323BC <AmiBlitz3.ab3@24557>   MOVE.w d2,vartype
000323C0 <AmiBlitz3.ab3@24558>   MOVE.b #$3,D2
000323C4 <AmiBlitz3.ab3@24561>   CMP.b #5,d2
000323C8 <AmiBlitz3.ab3@24562>   BNE 'l1
000323CE <AmiBlitz3.ab3@24563>   MOVE.l a2,currtype
000323D2 <AmiBlitz3.ab3@24567>   MOVEM.w D2-D3,-(A7)
000323D8 <AmiBlitz3.ab3@24568>   MOVE.w varmode,-(A7)
000323DE <AmiBlitz3.ab3@24569>   MOVE.l a2,leftsidetype
000323E2 <AmiBlitz3.ab3@24570>   BTST #$f,d2
000323E6 <AmiBlitz3.ab3@24571>   BEQ 'nomultiassign
000323EC <AmiBlitz3.ab3@24572>   CLR.l leftsidetype                        ;its multiassign to type entries so no typecheck need
000323F0 <AmiBlitz3.ab3@24573> 'nomultiassign  ANDI.w #$FF,D2
000323F6 <AmiBlitz3.ab3@24574>   MOVE.l lastoffset_org,-(A7)
000323FA <AmiBlitz3.ab3@24575>   BSR.w eval                                ; calc right side of var assign
000323FE <AmiBlitz3.ab3@24577>   MOVEM.l a0/a1,-(a7)
00032404 <AmiBlitz3.ab3@24578>   MOVE.l leftsidetype,a0
0003240A <AmiBlitz3.ab3@24579>   CMP.l #0,a0
0003240E <AmiBlitz3.ab3@24580>   BEQ 'nocheck
00032416 <AmiBlitz3.ab3@24581>   CMP.l #$100,4(a0)
0003241A <AmiBlitz3.ab3@24582>   BLE 'nocheck
00032420 <AmiBlitz3.ab3@24583>   TST.l typetocast
00032424 <AmiBlitz3.ab3@24584>   BEQ 'nocast
0003242A <AmiBlitz3.ab3@24585>   MOVE.l typetocast,a1
0003242E <AmiBlitz3.ab3@24586>   BRA 'typecheck
00032434 <AmiBlitz3.ab3@24587> 'nocast  TST.l rightsidetype
00032438 <AmiBlitz3.ab3@24588>   BEQ 'nocheck
0003243E <AmiBlitz3.ab3@24589>   MOVE.l rightsidetype,a1
00032446 <AmiBlitz3.ab3@24590>   CMP.l #$100,4(a1)
0003244A <AmiBlitz3.ab3@24591>   BGE 'typecheck
00032452 <AmiBlitz3.ab3@24592>   CMP.l #$3,4(a1)
00032456 <AmiBlitz3.ab3@24593>   BEQ 'ok                              ;long assign is allow with this codelines
0003245A <AmiBlitz3.ab3@24594>   BRA 'error
00032460 <AmiBlitz3.ab3@24596>   TST.b typecheck
00032464 <AmiBlitz3.ab3@24597>   BEQ 'nocheck
0003246A <AmiBlitz3.ab3@24598>   TST.b notypecheck
0003246E <AmiBlitz3.ab3@24599>   BNE 'ok
00032470 <AmiBlitz3.ab3@24600>   CMP.l a0,a1
00032474 <AmiBlitz3.ab3@24601>   BEQ 'ok
00032478 <AmiBlitz3.ab3@24603>   MOVE.l 4(a1),a1                   ; load the address of 1. type.
0003247C <AmiBlitz3.ab3@24604>   CMP.l $a(a1),a0                   ; check if the bigger type contain in first place same type as the function need
00032480 <AmiBlitz3.ab3@24605>   BEQ 'ok
00032486 <AmiBlitz3.ab3@24607>  JMP   error_convert_types     ;for syntax 4  = typecheck
0003248C <AmiBlitz3.ab3@24610>    CLR.l typetocast
00032490 <AmiBlitz3.ab3@24611>    MOVEM.l (a7)+, a0/a1
00032496 <AmiBlitz3.ab3@24612>   MOVE.l (A7)+,lastoffset_org
0003249C <AmiBlitz3.ab3@24613>   MOVE.w commode,D1
000324A0 <AmiBlitz3.ab3@24614>    BNE.w JL_0_DFCC
000324A4 <AmiBlitz3.ab3@24615>    BSR.w JL_0_B63C
000324AA <AmiBlitz3.ab3@24618>   MOVE.w (A7)+,varmode
000324AE <AmiBlitz3.ab3@24619>   MOVEM.w (A7)+,D2-D3
000324B2 <AmiBlitz3.ab3@24621>   MOVE.w #$2B40,D1
000324B8 <AmiBlitz3.ab3@24622>   MOVE.w varmode,D4
000324BC <AmiBlitz3.ab3@24623>    BEQ.w JL_0_DFE8
000324C0 <AmiBlitz3.ab3@24624>   BCLR #$9,D1
000324C4 <AmiBlitz3.ab3@24627>   BTST #$F,D2
000324C8 <AmiBlitz3.ab3@24628>    BEQ.w JL_0_E090
000324CE <AmiBlitz3.ab3@24629>    TST.b stackcorrect
000324D2 <AmiBlitz3.ab3@24630>    BNE 'st1
000324D8 <AmiBlitz3.ab3@24631>   MOVE.w commode,D1
000324DC <AmiBlitz3.ab3@24632>    BEQ.w JL_0_E004
000324E2 <AmiBlitz3.ab3@24635>   MOVE.w pulla2,D1
000324E8 <AmiBlitz3.ab3@24636>    JSR writeword
000324EC <AmiBlitz3.ab3@24639>   MOVE.w #$2480,D1
000324F0 <AmiBlitz3.ab3@24640>    MOVEM.l a0/d0,-(a7)
000324F6 <AmiBlitz3.ab3@24641>    MOVEA.l lastoffset_org,A0
000324F8 <AmiBlitz3.ab3@24642>    MOVE.l A0,D0
000324FC <AmiBlitz3.ab3@24643>    BEQ.w 'skip
000324FE <AmiBlitz3.ab3@24644>    MOVEA.l D0,A0
00032506 <AmiBlitz3.ab3@24645>    MOVE.l $A(A0),currtype
0003250A <AmiBlitz3.ab3@24648>   MOVEM.l (a7)+,a0/d0
0003250E <AmiBlitz3.ab3@24649>   CMP.w #$2C,D0
00032512 <AmiBlitz3.ab3@24650>    BNE.w JL_0_E090
00032516 <AmiBlitz3.ab3@24651>     MOVE.w #$24C0,D1
0003251A <AmiBlitz3.ab3@24652>    BSR.w JL_0_E090                                         ;write store
00032520 <AmiBlitz3.ab3@24655>    MOVE.l lastoffset_org,D0
00032528 <AmiBlitz3.ab3@24659>   MOVE.w #$FFFF,commode
0003252E <AmiBlitz3.ab3@24660>   CLR.w varcodelen
00032536 <AmiBlitz3.ab3@24661>   MOVE.b #1,optiarray
0003253C <AmiBlitz3.ab3@24662>   MOVE.w pusha2,D1
00032542 <AmiBlitz3.ab3@24663>    JSR writeword
00032548 <AmiBlitz3.ab3@24664>   TST.l lastoffset_org
0003254C <AmiBlitz3.ab3@24665>   BEQ dimmore
00032552 <AmiBlitz3.ab3@24666>   MOVEA.l lastoffset_org,A0
00032554 <AmiBlitz3.ab3@24667>   MOVE.l (A0),D0
00032558 <AmiBlitz3.ab3@24668>    BEQ.w JUMP_comerr
0003255A <AmiBlitz3.ab3@24669>   MOVEA.l D0,A0
00032560 <AmiBlitz3.ab3@24670>   MOVE.l A0,lastoffset_org
00032566 <AmiBlitz3.ab3@24671>   BTST #$1,$7(A0)
0003256A <AmiBlitz3.ab3@24672>    BNE.w JUMP_nocomerr
0003256E <AmiBlitz3.ab3@24673>   MOVEA.l $A(A0),A1
00032572 <AmiBlitz3.ab3@24674>   MOVE.l $4(A1),D2
00032578 <AmiBlitz3.ab3@24677>   BTST #$0,$7(A0)
0003257C <AmiBlitz3.ab3@24678>    BNE.w JL_0_E078
00032582 <AmiBlitz3.ab3@24679>   CMP.l #$100,D2
00032586 <AmiBlitz3.ab3@24680>    BCC.l JUMP_nocomerr
0003258A <AmiBlitz3.ab3@24681> BRA.w JL_0_E088                                     ; do do type\x= 10,20,30....
00032590 <AmiBlitz3.ab3@24684>         CLR.b optiarray
00032594 <AmiBlitz3.ab3@24685>         CMP.w #"@@",(a5)
00032598 <AmiBlitz3.ab3@24686>         BEQ 'n1
0003259C <AmiBlitz3.ab3@24687> BRA 'd1
000325A2 <AmiBlitz3.ab3@24690>   JSR nextline
000325A4 <AmiBlitz3.ab3@24691>         MOVE.l a5,-(a7)
000325A6 <AmiBlitz3.ab3@24694>   MOVE.b (a5)+,d0
000325AA <AmiBlitz3.ab3@24695>         CMP.b #$20,d0
000325AE <AmiBlitz3.ab3@24696>         BEQ 'l2
000325B0 <AmiBlitz3.ab3@24697>         MOVE.l (a7)+,a5
000325B4 <AmiBlitz3.ab3@24698>         CMP.b #";",d0
000325B8 <AmiBlitz3.ab3@24699>         BEQ 'n1
000325BE <AmiBlitz3.ab3@24702>         TST.w debugmode
000325C2 <AmiBlitz3.ab3@24703>         BEQ JL_0_DEE0
000325C4 <AmiBlitz3.ab3@24704>         MOVE.l a0,-(a7)
000325CA <AmiBlitz3.ab3@24705>         MOVE.l pushat,a0
000325D0 <AmiBlitz3.ab3@24706>         CMP.l #0,a0
000325D4 <AmiBlitz3.ab3@24707>         BNE 'o1
000325D8 <AmiBlitz3.ab3@24708> BRA 'skip
000325E0 <AmiBlitz3.ab3@24711>         ADD.l #1,2(a0)
000325E6 <AmiBlitz3.ab3@24714>   CLR.w commode
000325EE <AmiBlitz3.ab3@24715>         MOVE.b #1,stackcorrect
000325F0 <AmiBlitz3.ab3@24716>         MOVE.l (a7)+,a0
000325F6 <AmiBlitz3.ab3@24717> JMP JL_0_DEE0
000325FC <AmiBlitz3.ab3@24720> JMP nocomerr
00032602 <AmiBlitz3.ab3@24723>   CMP.l #$100,D2
00032606 <AmiBlitz3.ab3@24724>    BCS.w JL_0_E084
00032608 <AmiBlitz3.ab3@24725>   MOVEQ.l #$00,D2
0003260C <AmiBlitz3.ab3@24728>   BSET #$E,D2
00032610 <AmiBlitz3.ab3@24731>   BSET #$F,D2
00032614 <AmiBlitz3.ab3@24732> BRA.w JL_0_DEE0
0003261A <AmiBlitz3.ab3@24735>    MOVE.l destpointer,a4
00032622 <AmiBlitz3.ab3@24736>    MOVE.l #$f22a6400,-4(a4)
00032628 <AmiBlitz3.ab3@24737>    MOVE.w arrayoffset,d1
0003262E <AmiBlitz3.ab3@24738> JMP writeword
00032634 <AmiBlitz3.ab3@24741> JMP comerr
0003263A <AmiBlitz3.ab3@24744>    TST.b fpu
0003263E <AmiBlitz3.ab3@24745>    BEQ 'nofloat
00032642 <AmiBlitz3.ab3@24746>    CMP.b #5,d2
00032646 <AmiBlitz3.ab3@24747>    BNE 'nofloat
0003264C <AmiBlitz3.ab3@24748>    CLR.w fp0var
00032652 <AmiBlitz3.ab3@24749>    LEA regtable,a4
00032654 <AmiBlitz3.ab3@24750>    TST.l (a4)
00032658 <AmiBlitz3.ab3@24751>    BEQ 'noreg
0003265C <AmiBlitz3.ab3@24752>    BTST #15,d2                                             ;regvars
00032660 <AmiBlitz3.ab3@24753>    BNE 'noreg
00032664 <AmiBlitz3.ab3@24754>    CMP.w 0+4(a4),d3
00032668 <AmiBlitz3.ab3@24755>    BNE 'doreg1
0003266E <AmiBlitz3.ab3@24756>    MOVE.l #$f2000380,d1
00032674 <AmiBlitz3.ab3@24757>    MOVE.w regnum,d0
00032678 <AmiBlitz3.ab3@24758>    BNE 'noopt
0003267E <AmiBlitz3.ab3@24764>    MOVE.l destpointer,a4
00032686 <AmiBlitz3.ab3@24765>    CMP.l #$f2001c80,-8(a4)
0003268A <AmiBlitz3.ab3@24766>    BNE 'noopt
00032692 <AmiBlitz3.ab3@24767>    CMP.l #$f2000422,-4(a4)
00032696 <AmiBlitz3.ab3@24768>    BNE 'noopt
0003269C <AmiBlitz3.ab3@24769>    MOVE.l #$f20003a2,d1
000326A6 <AmiBlitz3.ab3@24770>    SUB.l #8,destpointer
000326A8 <AmiBlitz3.ab3@24773>    ASL.w #7,d0
000326AA <AmiBlitz3.ab3@24774>    OR.w d0,d1
000326B0 <AmiBlitz3.ab3@24775>    JSR writelong
000326B2 <AmiBlitz3.ab3@24776> RTS
000326B6 <AmiBlitz3.ab3@24779>   CMP.w 8+4(a4),d3
000326BA <AmiBlitz3.ab3@24780>    BNE 'doreg2
000326C0 <AmiBlitz3.ab3@24781>    MOVE.l #$f2000300,d1
000326C6 <AmiBlitz3.ab3@24782>    MOVE.w regnum,d0
000326C8 <AmiBlitz3.ab3@24783>    ASL.w #7,d0
000326CA <AmiBlitz3.ab3@24784>    OR.w d0,d1
000326D0 <AmiBlitz3.ab3@24785>    JSR writelong
000326D2 <AmiBlitz3.ab3@24786> RTS
000326D6 <AmiBlitz3.ab3@24789>   CMP.w 16+4(a4),d3
000326DA <AmiBlitz3.ab3@24790>    BNE 'doreg3
000326E0 <AmiBlitz3.ab3@24791>    MOVE.l #$f2000280,d1
000326E6 <AmiBlitz3.ab3@24792>    MOVE.w regnum,d0
000326E8 <AmiBlitz3.ab3@24793>    ASL.w #7,d0
000326EA <AmiBlitz3.ab3@24794>    OR.w d0,d1
000326F0 <AmiBlitz3.ab3@24795>    JSR  writelong
000326F2 <AmiBlitz3.ab3@24796>  RTS
000326F6 <AmiBlitz3.ab3@24799>   CMP.w 24+4(a4),d3
000326FA <AmiBlitz3.ab3@24800>    BNE 'doreg4
00032700 <AmiBlitz3.ab3@24801>    MOVE.l #$f2000200,d1
00032706 <AmiBlitz3.ab3@24802>    MOVE.w regnum,d0
00032708 <AmiBlitz3.ab3@24803>    ASL.w #7,d0
0003270A <AmiBlitz3.ab3@24804>    OR.w d0,d1
00032710 <AmiBlitz3.ab3@24805>    JSR writelong
00032712 <AmiBlitz3.ab3@24806> RTS
00032716 <AmiBlitz3.ab3@24809>   CMP.w 32+4(a4),d3
0003271A <AmiBlitz3.ab3@24810>    BNE 'noreg
00032720 <AmiBlitz3.ab3@24811>    MOVE.l #$f2000180,d1
00032726 <AmiBlitz3.ab3@24812>    MOVE.w regnum,d0
00032728 <AmiBlitz3.ab3@24813>    ASL.w #7,d0
0003272A <AmiBlitz3.ab3@24814>    OR.w d0,d1
00032730 <AmiBlitz3.ab3@24815>    JSR writelong
00032732 <AmiBlitz3.ab3@24816> RTS
00032738 <AmiBlitz3.ab3@24819>    TST.w regnum
0003273C <AmiBlitz3.ab3@24820>    BNE 'nofp0
00032742 <AmiBlitz3.ab3@24821>    MOVE.l destpointer ,a4
0003274A <AmiBlitz3.ab3@24822>    CMP.l #$f2304400,-6(a4)
0003274E <AmiBlitz3.ab3@24823>    BNE 'do
00032754 <AmiBlitz3.ab3@24824>    CMP.w #$1990,-2(a4)
00032758 <AmiBlitz3.ab3@24825>    BNE 'do
0003275C <AmiBlitz3.ab3@24826>    BTST #15,d2                                             ;types ?
00032760 <AmiBlitz3.ab3@24827>    BNE 'do
00032766 <AmiBlitz3.ab3@24828>   MOVE.l #$2b701990,d1                                     ;var
0003276C <AmiBlitz3.ab3@24829>   TST.w varmode
00032770 <AmiBlitz3.ab3@24830>   BEQ 'glob1
00032774 <AmiBlitz3.ab3@24831>   BCLR #25,d1
00032778 <AmiBlitz3.ab3@24834>   MOVE.l d1,-6(a4)
0003277C <AmiBlitz3.ab3@24835>   MOVE.w d3,-2(a4)
00032782 <AmiBlitz3.ab3@24836>   CLR.w fp0var
0003278A <AmiBlitz3.ab3@24837>   MOVE.w #$ffff,fp0mode
0003278C <AmiBlitz3.ab3@24838> RTS
00032794 <AmiBlitz3.ab3@24841>    CMP.l #$f22d4400,-6(a4)                                 ;fmove.s (a5),fp0
00032798 <AmiBlitz3.ab3@24842>    BNE 'do3
000327A2 <AmiBlitz3.ab3@24843>    CMP.l #newtype_double,currtype
000327A6 <AmiBlitz3.ab3@24844>    BEQ 'do4
000327AA <AmiBlitz3.ab3@24847>   MOVE.w #$2b6d,d1
000327B0 <AmiBlitz3.ab3@24848>    TST.w varmode
000327B4 <AmiBlitz3.ab3@24849>    BEQ 'g2
000327B8 <AmiBlitz3.ab3@24850>     BCLR #9,d1
000327BC <AmiBlitz3.ab3@24853>     CMP.w #$2b6d,d1
000327C0 <AmiBlitz3.ab3@24854>     BNE 'd1
000327C4 <AmiBlitz3.ab3@24855>     CMP.w -2(a4),d3
000327C8 <AmiBlitz3.ab3@24856>     BNE 'd1
000327CE <AmiBlitz3.ab3@24857>     SUBQ.l #6,destpointer
000327D2 <AmiBlitz3.ab3@24858> BRA 'd12
000327D6 <AmiBlitz3.ab3@24861>     MOVE.w d1,-6(a4)                                       ;fmove.s to move.l mem,mem
000327DC <AmiBlitz3.ab3@24862>     MOVE.w -2(a4),-4(a4)
000327E0 <AmiBlitz3.ab3@24863>     MOVE.w d3,-2(a4)
000327E6 <AmiBlitz3.ab3@24866>   CLR.w fp0var
000327EE <AmiBlitz3.ab3@24867>     MOVE.w #$ffff,fp0mode
000327F0 <AmiBlitz3.ab3@24868> RTS
000327F8 <AmiBlitz3.ab3@24871>   CMP.l #$f22c4400,-6(a4)                                  ;fmove.s (a4)
000327FC <AmiBlitz3.ab3@24872>    BNE 'do4
00032800 <AmiBlitz3.ab3@24873>    MOVE.w #$2b6c,d1
00032806 <AmiBlitz3.ab3@24874>       TST.w varmode
0003280A <AmiBlitz3.ab3@24875>    BEQ 'g3
0003280E <AmiBlitz3.ab3@24876>    BCLR #9,d1
00032812 <AmiBlitz3.ab3@24879>   MOVE.w d1,-6(a4)
00032818 <AmiBlitz3.ab3@24880>     MOVE.w -2(a4),-4(a4)
0003281C <AmiBlitz3.ab3@24881>     MOVE.w d3,-2(a4)
00032822 <AmiBlitz3.ab3@24882>     CLR.w fp0var
0003282A <AmiBlitz3.ab3@24883>     MOVE.w #$ffff,fp0mode
0003282C <AmiBlitz3.ab3@24884> RTS
00032832 <AmiBlitz3.ab3@24887>   MOVE.w d3,fp0var
0003283C <AmiBlitz3.ab3@24888>    MOVE.w varmode,fp0mode
0003283E <AmiBlitz3.ab3@24889>    ADDQ.l #6,a4
00032844 <AmiBlitz3.ab3@24890>    MOVE.l a4,fp0addr
0003284E <AmiBlitz3.ab3@24891>    MOVE.l firstiff,fp0iff
00032852 <AmiBlitz3.ab3@24894>   MOVEM.l d0/d4,-(a7)
00032854 <AmiBlitz3.ab3@24895>    MOVEQ #0,d0
0003285A <AmiBlitz3.ab3@24896>     MOVE.w regnum,d0
0003285C <AmiBlitz3.ab3@24897>    ASL.w #7,d0                                             ;fpu store var
00032860 <AmiBlitz3.ab3@24898>   BTST #15,d2
00032864 <AmiBlitz3.ab3@24899>    BEQ 'var
00032866 <AmiBlitz3.ab3@24900>    MOVE.w d1,d4
0003286A <AmiBlitz3.ab3@24901>    CMP.w #$24c0,d4
0003286E <AmiBlitz3.ab3@24902>    BNE 'nopl
00032874 <AmiBlitz3.ab3@24903>    MOVE.l #$f21a6400,d1
00032876 <AmiBlitz3.ab3@24904>    MOVEQ #0,d3
0003287A <AmiBlitz3.ab3@24905> BRA 'glob
00032880 <AmiBlitz3.ab3@24909>   MOVE.l #$f2126400,d1
00032882 <AmiBlitz3.ab3@24910>    TST.w d3                                                ;offset =0
00032886 <AmiBlitz3.ab3@24911>    BNE 'offset
0003288C <AmiBlitz3.ab3@24912>    MOVE.l #$f2126400,d1
0003288E <AmiBlitz3.ab3@24920>    MOVEQ #0,d3
00032892 <AmiBlitz3.ab3@24921> BRA 'glob
00032898 <AmiBlitz3.ab3@24924>   MOVE.l #$f22d6400,d1                                     ;var
0003289E <AmiBlitz3.ab3@24925>   TST.w varmode
000328A2 <AmiBlitz3.ab3@24926>   BEQ 'glob
000328A6 <AmiBlitz3.ab3@24927>   BCLR #16,d1
000328A8 <AmiBlitz3.ab3@24928>  'glob OR.l d0,d1
000328B2 <AmiBlitz3.ab3@24931>   CMP.l #newtype_double,currtype
000328B6 <AmiBlitz3.ab3@24932>   BNE 'dbl1
000328BC <AmiBlitz3.ab3@24933>   OR.l #$00001000,d1
000328C2 <AmiBlitz3.ab3@24936>   JSR writelong
000328C8 <AmiBlitz3.ab3@24937>   CLR.l currtype
000328CC <AmiBlitz3.ab3@24938>   MOVEM.l (a7)+,d0/d4
000328CE <AmiBlitz3.ab3@24939>   MOVE.l d3,d1
000328D2 <AmiBlitz3.ab3@24940>   BEQ 'nooffs
000328D8 <AmiBlitz3.ab3@24941> JMP writeword
000328DA <AmiBlitz3.ab3@24944> RTS
000328E0 <AmiBlitz3.ab3@24958>     TST.b fast                                             ;write lea->xx(a2)
000328E4 <AmiBlitz3.ab3@24959>    BEQ 'la10
000328EA <AmiBlitz3.ab3@24963>    TST.b quickadd
000328F0 <AmiBlitz3.ab3@24965>      CLR.b quickadd
000328F4 <AmiBlitz3.ab3@24966>    CMP.w #$2480,d1
000328F8 <AmiBlitz3.ab3@24967>    BNE 'la10
000328FE <AmiBlitz3.ab3@24968>    TST.b optiarray
00032902 <AmiBlitz3.ab3@24969>    BNE 'la10
00032908 <AmiBlitz3.ab3@24970>    MOVE.l destpointer,a4
0003290E <AmiBlitz3.ab3@24971>    CMP.w #$45ea,-4(a4)
00032912 <AmiBlitz3.ab3@24972>    BNE 'la10
0003291A <AmiBlitz3.ab3@24973>    CMP.w #8,pushclen
0003291E <AmiBlitz3.ab3@24974>    BEQ 'la100
00032926 <AmiBlitz3.ab3@24975>    CMP.w #6,pushclen
0003292A <AmiBlitz3.ab3@24976>    BNE 'la10
0003292E <AmiBlitz3.ab3@24977>    CMP.b #3,d2
00032932 <AmiBlitz3.ab3@24978>    BCS 'la110
00032938 <AmiBlitz3.ab3@24980>    MOVE.w #$2540,-2(a4)
0003293E <AmiBlitz3.ab3@24981>    MOVE.w arrayoffset,d1
00032944 <AmiBlitz3.ab3@24982> JMP writeword
0003294A <AmiBlitz3.ab3@24985>    CLR.b quickadd
0003294C <AmiBlitz3.ab3@24986> RTS
00032950 <AmiBlitz3.ab3@24989>    CMP.b #2,d2
00032954 <AmiBlitz3.ab3@24990>    BNE 'la120
0003295A <AmiBlitz3.ab3@24991>     MOVE.w #$3540,-2(a4)
00032960 <AmiBlitz3.ab3@24992>    MOVE.w arrayoffset,d1
00032966 <AmiBlitz3.ab3@24993> JMP writeword
0003296A <AmiBlitz3.ab3@24996>   CMP.b #1,d2
0003296E <AmiBlitz3.ab3@24997>    BNE.s 'la10
00032974 <AmiBlitz3.ab3@24998>     MOVE.w #$1540,-2(a4)
0003297A <AmiBlitz3.ab3@24999>    MOVE.w arrayoffset,d1
00032980 <AmiBlitz3.ab3@25000> JMP writeword
00032984 <AmiBlitz3.ab3@25003>    CMP.b #3,d2
00032988 <AmiBlitz3.ab3@25004>    BCS 'la11
0003298E <AmiBlitz3.ab3@25005>    MOVE.w #$2540,-4(a4)
00032990 <AmiBlitz3.ab3@25006> RTS
00032994 <AmiBlitz3.ab3@25009>    CMP.b #2,d2
00032998 <AmiBlitz3.ab3@25010>    BNE 'la12
0003299E <AmiBlitz3.ab3@25011>     MOVE.w #$3540,-4(a4)
000329A0 <AmiBlitz3.ab3@25012> RTS
000329A4 <AmiBlitz3.ab3@25014>  'la12 CMP.b #1,d2
000329A8 <AmiBlitz3.ab3@25015>    BNE.s 'la10
000329AE <AmiBlitz3.ab3@25016>     MOVE.w #$1540,-4(a4)
000329B0 <AmiBlitz3.ab3@25017> RTS
000329B6 <AmiBlitz3.ab3@25020>   CLR.b optiarray
000329BA <AmiBlitz3.ab3@25021>    CMP.b #$1,D2
000329BE <AmiBlitz3.ab3@25022>    BEQ.w JL_0_E0AC
000329C2 <AmiBlitz3.ab3@25023>    BSR.w varalign
000329C6 <AmiBlitz3.ab3@25024>    CMP.b #$3,D2
000329CA <AmiBlitz3.ab3@25025>    BCC.w writevarlong
000329D0 <AmiBlitz3.ab3@25026>    TST.b fast                                              ;optiimmi
000329D4 <AmiBlitz3.ab3@25027>    BEQ 'l10b
000329DA <AmiBlitz3.ab3@25032>    MOVE.l destpointer,a0
000329E0 <AmiBlitz3.ab3@25033>    SUB.l imm_addr,a0
000329E6 <AmiBlitz3.ab3@25034>    CMP.l #4,a0
000329EA <AmiBlitz3.ab3@25035>    BNE 'l10
000329F0 <AmiBlitz3.ab3@25036>    CLR.l imm_addr
000329F6 <AmiBlitz3.ab3@25037>    MOVE.l destpointer,a4
000329FA <AmiBlitz3.ab3@25038>    OR.w #$107c,d1
000329FE <AmiBlitz3.ab3@25039>    MOVE.w d1,-4(a4)
00032A00 <AmiBlitz3.ab3@25040>     MOVE.w D3,D1
00032A06 <AmiBlitz3.ab3@25041> JMP writeword
00032A0C <AmiBlitz3.ab3@25044>   MOVE.l destpointer,a0
00032A12 <AmiBlitz3.ab3@25045>   SUB.l load_var_addr,a0
00032A18 <AmiBlitz3.ab3@25046>   CMP.l #4,a0
00032A1C <AmiBlitz3.ab3@25047>   BNE 'l10b
00032A22 <AmiBlitz3.ab3@25048>   CMP.w #$302d,-4(a4)                                      ;check 68k opcode
00032A26 <AmiBlitz3.ab3@25049>   BNE 'l10b
00032A2C <AmiBlitz3.ab3@25051>   CLR.l load_var_addr
00032A32 <AmiBlitz3.ab3@25052>   MOVE.l destpointer,a4
00032A36 <AmiBlitz3.ab3@25053>   OR.w #$102d,d1
00032A3A <AmiBlitz3.ab3@25054>   MOVE.w d1,-4(a4)
00032A3C <AmiBlitz3.ab3@25055>   MOVE.w d3,d1
00032A42 <AmiBlitz3.ab3@25056> JMP writeword
00032A46 <AmiBlitz3.ab3@25059>   ORI.w #$1000,D1                                          ;word
00032A4A <AmiBlitz3.ab3@25060> BRA.w writestorevar
00032A50 <AmiBlitz3.ab3@25064>    TST.b fast                                              ;optiimmi
00032A54 <AmiBlitz3.ab3@25065>    BEQ 'l10b
00032A5A <AmiBlitz3.ab3@25070>    MOVE.l destpointer,a0
00032A60 <AmiBlitz3.ab3@25071>    SUB.l imm_addr,a0
00032A66 <AmiBlitz3.ab3@25072>    CMP.l #4,a0
00032A6A <AmiBlitz3.ab3@25073>    BNE 'l10
00032A70 <AmiBlitz3.ab3@25074>    CLR.l imm_addr
00032A76 <AmiBlitz3.ab3@25075>    MOVE.l destpointer,a4
00032A7A <AmiBlitz3.ab3@25076>    OR.w #$7c,d1
00032A7E <AmiBlitz3.ab3@25077>    EORI #$3000,d1
00032A82 <AmiBlitz3.ab3@25078>    MOVE.w d1,-4(a4)
00032A84 <AmiBlitz3.ab3@25079>       MOVE.w D3,D1
00032A8A <AmiBlitz3.ab3@25080> JMP writeword
00032A90 <AmiBlitz3.ab3@25083>   MOVE.l destpointer,a0
00032A96 <AmiBlitz3.ab3@25084>   SUB.l load_var_addr,a0
00032A9C <AmiBlitz3.ab3@25085>   CMP.l #4,a0
00032AA0 <AmiBlitz3.ab3@25086>   BNE 'l10b
00032AA6 <AmiBlitz3.ab3@25087>   CLR.l load_var_addr
00032AAC <AmiBlitz3.ab3@25088>   MOVE.l destpointer,a4
00032AB2 <AmiBlitz3.ab3@25089>    CMP.w #$1b6d,-4(a4)
00032AB6 <AmiBlitz3.ab3@25090>    BNE 'l10b
00032ABA <AmiBlitz3.ab3@25091>    OR.w #$2d,d1
00032ABE <AmiBlitz3.ab3@25092>    EORI #$3000,d1
00032AC2 <AmiBlitz3.ab3@25093>    MOVE.w d1,-4(a4)
00032AC4 <AmiBlitz3.ab3@25094>   MOVE.w d3,d1
00032ACA <AmiBlitz3.ab3@25095> JMP writeword
00032AD0 <AmiBlitz3.ab3@25098>   ADDQ.w #1,pcodd                                          ;byte
00032AD4 <AmiBlitz3.ab3@25099>   EORI.w #$3000,D1
00032ADA <AmiBlitz3.ab3@25102>   JSR writeword
00032ADE <AmiBlitz3.ab3@25103>   BTST #$7,D1
00032AE2 <AmiBlitz3.ab3@25104>    BNE JL_0_E0C6
00032AE4 <AmiBlitz3.ab3@25105>   MOVE.w D3,D1
00032AEA <AmiBlitz3.ab3@25106> JMP writeword
00032AF0 <AmiBlitz3.ab3@25109>    TST.b fast                                              ;optiimmi
00032AF4 <AmiBlitz3.ab3@25110>    BEQ 'l10b
00032AFA <AmiBlitz3.ab3@25114>    MOVE.l destpointer,a0
00032B00 <AmiBlitz3.ab3@25115>    SUB.l imm_addr,a0
00032B06 <AmiBlitz3.ab3@25116>    CMP.l #6,a0
00032B0A <AmiBlitz3.ab3@25117>    BNE 'l10
00032B10 <AmiBlitz3.ab3@25118>    CLR.l imm_addr
00032B16 <AmiBlitz3.ab3@25119>    MOVE.l destpointer,a4
00032B1A <AmiBlitz3.ab3@25120>    OR.w #$7c,d1
00032B1E <AmiBlitz3.ab3@25121>    MOVE.w d1,-6(a4)
00032B20 <AmiBlitz3.ab3@25122>     MOVE.w D3,D1
00032B26 <AmiBlitz3.ab3@25123> JMP writeword
00032B2C <AmiBlitz3.ab3@25126>   MOVE.l destpointer,a0
00032B32 <AmiBlitz3.ab3@25127>   SUB.l load_var_addr,a0
00032B38 <AmiBlitz3.ab3@25128>   CMP.l #4,a0
00032B3C <AmiBlitz3.ab3@25129>   BNE 'l10b
00032B42 <AmiBlitz3.ab3@25130>   CLR.l load_var_addr
00032B48 <AmiBlitz3.ab3@25131>   MOVE.l destpointer,a4
00032B4E <AmiBlitz3.ab3@25132>   CMP.w #$245f,-2(a4)
00032B52 <AmiBlitz3.ab3@25133>   BEQ 'l10b
00032B56 <AmiBlitz3.ab3@25134>   OR.w #$28,d1
00032B5A <AmiBlitz3.ab3@25135>   OR.w d1,-4(a4)
00032B60 <AmiBlitz3.ab3@25136>   CMP.w #$2b6d,-4(a4)
00032B64 <AmiBlitz3.ab3@25137>   BNE 'd1
00032B68 <AmiBlitz3.ab3@25138>   CMP.w -2(a4),d3
00032B6C <AmiBlitz3.ab3@25139>   BNE 'd1
00032B72 <AmiBlitz3.ab3@25140>   SUBQ.l #4,destpointer
00032B74 <AmiBlitz3.ab3@25141> RTS
00032B76 <AmiBlitz3.ab3@25144>   MOVE.w d3,d1
00032B7C <AmiBlitz3.ab3@25145> JMP writeword
00032B82 <AmiBlitz3.ab3@25148>   JSR writeword
00032B86 <AmiBlitz3.ab3@25149>   BTST #$7,D1
00032B8A <AmiBlitz3.ab3@25150>    BNE.b JL_0_E0C6
00032B8C <AmiBlitz3.ab3@25151>   MOVE.w D3,D1
00032B92 <AmiBlitz3.ab3@25152> JMP writeword
00032B94 <AmiBlitz3.ab3@25155> RTS
00032B96 <AmiBlitz3.ab3@25159>   MOVE.w D1,-(A7)
00032B9A <AmiBlitz3.ab3@25160>   MOVE.w pcodd(PC),D1
00032B9C <AmiBlitz3.ab3@25161>   LSR.w #1,D1
00032BA0 <AmiBlitz3.ab3@25162>    BCC.b JL_0_E0E2
00032BA6 <AmiBlitz3.ab3@25163>   CLR.w pcodd
00032BAC <AmiBlitz3.ab3@25164>   MOVE.w add1a2,D1
00032BB2 <AmiBlitz3.ab3@25165>    JSR writeword
00032BB4 <AmiBlitz3.ab3@25168>   MOVE.w (A7)+,D1
00032BB6 <AmiBlitz3.ab3@25169> RTS
00032BB8 <AmiBlitz3.ab3@25173> add1a2:     Dc.b $52,$4A                                   ;ADDQ.W  #1,A2
00032BBA <AmiBlitz3.ab3@25176> pcodd:     Ds.w 1                                          ;add 1 to this for bytes
00032BBC <AmiBlitz3.ab3@25177> listadd:   Ds.w 1                                          ;set to 8 if it's a list
00032BBE <AmiBlitz3.ab3@25178> listsize:  Ds.w 1
00032BC4 <AmiBlitz3.ab3@25182>   ADDQ.w #1,regnum
00032BCC <AmiBlitz3.ab3@25183>   MOVE.b #1,nowdeclare
00032BD2 <AmiBlitz3.ab3@25184>   CLR.b dimkeep
00032BDA <AmiBlitz3.ab3@25185>    CMP.l #"KEEP",-1(a5)
00032BDE <AmiBlitz3.ab3@25186>   BNE 'nokeep
00032BE4 <AmiBlitz3.ab3@25187>   CMP.b #" ",3(a5)
00032BE8 <AmiBlitz3.ab3@25188>   BNE 'nokeep
00032BEA <AmiBlitz3.ab3@25189>   ADDQ.l #3,a5
00032BEE <AmiBlitz3.ab3@25192>     CMP.b #" ",(a5)
00032BF2 <AmiBlitz3.ab3@25193>     BNE '1
00032BF4 <AmiBlitz3.ab3@25194>    ADDQ #1,a5
00032BF8 <AmiBlitz3.ab3@25195> BRA '2
00032BFE <AmiBlitz3.ab3@25198>   MOVE.l a5,lastsourcepos
00032C06 <AmiBlitz3.ab3@25199>   MOVE.b #1,dimkeep
00032C0A <AmiBlitz3.ab3@25207>   MOVE.w #$FF9A,D1
00032C10 <AmiBlitz3.ab3@25208>   JSR uselib
00032C16 <AmiBlitz3.ab3@25211>   CLR.w listadd
00032C1A <AmiBlitz3.ab3@25212>   CMP.w #-$7F4D,D0
00032C1E <AmiBlitz3.ab3@25213>    BNE.w JL_0_E11E
00032C26 <AmiBlitz3.ab3@25214>   MOVE.w #$0008,listadd
00032C2A <AmiBlitz3.ab3@25215>   MOVE.w #$FFFA,D1
00032C30 <AmiBlitz3.ab3@25216>    JSR uselib
00032C36 <AmiBlitz3.ab3@25217>    JSR get1bytemain
00032C3C <AmiBlitz3.ab3@25220>   CLR.w nonew
00032C42 <AmiBlitz3.ab3@25221>    JSR getparameter
00032C4A <AmiBlitz3.ab3@25222>   BTST #$1,flagmask+1
00032C4E <AmiBlitz3.ab3@25223>    BEQ.w JUMP_syntaxerr
00032C54 <AmiBlitz3.ab3@25224>    JSR JL_0_8E3C
00032C5A <AmiBlitz3.ab3@25225>   MOVE.w notshared,D1
00032C5E <AmiBlitz3.ab3@25226>    BNE.w JL_0_E198
00032C66 <AmiBlitz3.ab3@25227>   MOVE.w $8(A3),temp1
00032C6C <AmiBlitz3.ab3@25228>   MOVE.w proceduremode,D2
00032C70 <AmiBlitz3.ab3@25229>    BNE.w JL_0_E176
00032C76 <AmiBlitz3.ab3@25230>   MOVE.w globalvarpointer,-(A7)
00032C7E <AmiBlitz3.ab3@25231>   MOVE.w $4(A3),globalvarpointer
00032C84 <AmiBlitz3.ab3@25232>   ADDQ.w #4,globalvarpointer
00032C88 <AmiBlitz3.ab3@25233>    BSR.w write_dim_code
00032C8E <AmiBlitz3.ab3@25234>   MOVE.w (A7)+,globalvarpointer
00032C92 <AmiBlitz3.ab3@25235> BRA.w JL_0_E1BA
00032C98 <AmiBlitz3.ab3@25246>   MOVE.w globalvarpointer,-(A7)
00032C9E <AmiBlitz3.ab3@25247>             MOVE.w proceduremode,-(a7)
00032CA4 <AmiBlitz3.ab3@25248>             CLR.w proceduremode
00032CAC <AmiBlitz3.ab3@25249>   MOVE.w $4(A3),globalvarpointer
00032CB2 <AmiBlitz3.ab3@25250>   ADDQ.w #4,globalvarpointer
00032CB6 <AmiBlitz3.ab3@25251>    BSR.w write_dim_code
00032CBC <AmiBlitz3.ab3@25252>    MOVE.w (a7)+,proceduremode
00032CC2 <AmiBlitz3.ab3@25253>   MOVE.w (A7)+,globalvarpointer
00032CC6 <AmiBlitz3.ab3@25254> BRA.w JL_0_E1BA
00032CCE <AmiBlitz3.ab3@25257>   MOVE.w #$FFFF,temp1
00032CD2 <AmiBlitz3.ab3@25258>   MOVE.w listadd(PC),D1
00032CD6 <AmiBlitz3.ab3@25259>    BEQ.w JL_0_E1B6
00032CDE <AmiBlitz3.ab3@25260>   MOVE.w #$4000,temp1
00032CE4 <AmiBlitz3.ab3@25261>   BSET #$0,$6(A3)
00032CEA <AmiBlitz3.ab3@25264>         TST.w proceduremode
00032CEE <AmiBlitz3.ab3@25265>        BNE 'l1
00032CF4 <AmiBlitz3.ab3@25266>        MOVE.w locvaroff,-(a7)
00032CF8 <AmiBlitz3.ab3@25269>   BSR.w write_dim_code
00032CFE <AmiBlitz3.ab3@25270>         TST.w proceduremode
00032D02 <AmiBlitz3.ab3@25271>         BNE JL_0_E1BA
00032D08 <AmiBlitz3.ab3@25272>        MOVE.w (A7)+,locvaroff
00032D0E <AmiBlitz3.ab3@25275>   JSR get1bytemain
00032D12 <AmiBlitz3.ab3@25276>   CMP.w #$2C,D0
00032D16 <AmiBlitz3.ab3@25277>    BNE.w JL_0_E1CE
00032D1C <AmiBlitz3.ab3@25278>    JSR get1bytemain
00032D20 <AmiBlitz3.ab3@25279> BRA.w JL_0_E0FC
00032D22 <AmiBlitz3.ab3@25282> RTS
00032D2A <AmiBlitz3.ab3@25285>   MOVE.w #$FFFF,nonew                                      ;#-1,nonew org source
00032D30 <AmiBlitz3.ab3@25286>   MOVE.w beginarr,D1
00032D36 <AmiBlitz3.ab3@25287>    JSR writeword
00032D38 <AmiBlitz3.ab3@25288>   MOVEQ.l #$00,D1
00032D3E <AmiBlitz3.ab3@25289>    JSR writeword
00032D40 <AmiBlitz3.ab3@25290>   MOVEQ.l #$04,D1
00032D48 <AmiBlitz3.ab3@25291>   BTST #$0,flagmask+1
00032D4C <AmiBlitz3.ab3@25292>    BNE.w write_dim_code__pointer
00032D50 <AmiBlitz3.ab3@25293>   MOVE.w $8(A2),D1
00032D54 <AmiBlitz3.ab3@25296>   ADD.w listadd(PC),D1                                     ;size of one element.
00032D5A <AmiBlitz3.ab3@25297>   MOVE.w D1,listsize
00032D60 <AmiBlitz3.ab3@25298>    JSR writeword
00032D66 <AmiBlitz3.ab3@25299>   CLR.w temp2                                              ;# dim's got
00032D68 <AmiBlitz3.ab3@25300>   MOVE.l A3,-(A7)
00032D6E <AmiBlitz3.ab3@25303>   ADDQ.w #1,temp2
00032D70 <AmiBlitz3.ab3@25304>   MOVEQ.l #$03,D2                                          ;get word
00032D76 <AmiBlitz3.ab3@25305>   MOVE.w notshared,-(a7)
00032D7C <AmiBlitz3.ab3@25306>    JSR eval
00032D82 <AmiBlitz3.ab3@25307>   MOVE.w (a7)+,notshared
00032D88 <AmiBlitz3.ab3@25308>   TST.b debugmode
00032D8C <AmiBlitz3.ab3@25309>    BEQ.w write_dim_code__norerr0
00032D90 <AmiBlitz3.ab3@25310>   MOVE.w #$C30F,D1
00032D94 <AmiBlitz3.ab3@25316>       MOVE.w #$5281,d1
00032D9A <AmiBlitz3.ab3@25317>       JSR writeword
00032DA0 <AmiBlitz3.ab3@25318>       MOVE.l #$4c010800,d1                                 ;dim >65536 fix
00032DA6 <AmiBlitz3.ab3@25319>       JSR writelong
00032DAC <AmiBlitz3.ab3@25320>   MOVE.w proceduremode,D2
00032DB0 <AmiBlitz3.ab3@25321>    BEQ.w write_dim_code__global
00032DB6 <AmiBlitz3.ab3@25322>   SUBQ.w #4,locvaroff
00032DC0 <AmiBlitz3.ab3@25323>   MOVE.w locvaroff,putarr+2
00032DC4 <AmiBlitz3.ab3@25324> BRA.w write_dim_code__doit
00032DCA <AmiBlitz3.ab3@25327> JMP syntaxerr
00032DD4 <AmiBlitz3.ab3@25330>   MOVE.w globalvarpointer,putarr+2
00032DDA <AmiBlitz3.ab3@25331>   ADDQ.w #4,globalvarpointer
00032DE0 <AmiBlitz3.ab3@25334>   TST.b dimkeep
00032DE4 <AmiBlitz3.ab3@25335>            BEQ write_dim_code__doit_l1
00032DE6 <AmiBlitz3.ab3@25336>       MOVEQ #0,d1
00032DEC <AmiBlitz3.ab3@25337>       MOVE.w putarr+2,d1
00032DF2 <AmiBlitz3.ab3@25338>       OR.l  #$222d0000,d1
00032DF8 <AmiBlitz3.ab3@25339>       MOVE.w proceduremode,D2
00032DFC <AmiBlitz3.ab3@25340>       BEQ write_dim_code__doit_l2
00032E02 <AmiBlitz3.ab3@25341>       TST.w notshared
00032E06 <AmiBlitz3.ab3@25342>       BEQ write_dim_code__doit_l2
00032E0C <AmiBlitz3.ab3@25343>       SUB.l #$00010000,d1
00032E12 <AmiBlitz3.ab3@25346>   JSR writelong
00032E18 <AmiBlitz3.ab3@25349>   MOVE.l putarr,D1
00032E1E <AmiBlitz3.ab3@25350>       TST.w notshared
00032E22 <AmiBlitz3.ab3@25351>       BNE write_dim_code__doit_l1a
00032E28 <AmiBlitz3.ab3@25352>       JSR writelong
00032E2C <AmiBlitz3.ab3@25353> BRA write_dim_code__doit_l4
00032E32 <AmiBlitz3.ab3@25356>   JSR pokela5d
00032E36 <AmiBlitz3.ab3@25359>   CMP.w #$2C,D0
00032E3A <AmiBlitz3.ab3@25360>    BEQ.w write_dim_code__loop
00032E3E <AmiBlitz3.ab3@25361>   CMP.w #$29,D0
00032E42 <AmiBlitz3.ab3@25362>    BNE.w JUMP_syntaxerr
00032E44 <AmiBlitz3.ab3@25363>   MOVEA.l (A7)+,A3
00032E4A <AmiBlitz3.ab3@25364>   MOVE.w temp1,D1
00032E4E <AmiBlitz3.ab3@25365>    BMI.w write_dim_code__nocare
00032E52 <AmiBlitz3.ab3@25369>   BTST #$E,D1
00032E56 <AmiBlitz3.ab3@25370>    BEQ.w write_dim_code__notl
00032E5E <AmiBlitz3.ab3@25371>   CMPI.w #$1,temp2
00032E62 <AmiBlitz3.ab3@25372>    BNE.w JUMP_redimerr
00032E66 <AmiBlitz3.ab3@25373> BRA.w write_dim_code__nocare
00032E6C <AmiBlitz3.ab3@25376> JMP redimerr
00032E72 <AmiBlitz3.ab3@25379>   CMP.w temp2,D1
00032E76 <AmiBlitz3.ab3@25380>    BNE.w JUMP_redimerr                                      ;range too long
00032E7C <AmiBlitz3.ab3@25383>   LEA globalvarpointer,A0
00032E82 <AmiBlitz3.ab3@25384>   MOVE.w proceduremode,D1
00032E86 <AmiBlitz3.ab3@25385>   BEQ.w write_dim_code__gskip
00032E8C <AmiBlitz3.ab3@25386>   LEA locvaroff,A0
00032E92 <AmiBlitz3.ab3@25389>   MOVE.W  extraword,(A0)
00032E96 <AmiBlitz3.ab3@25390>   BRA.W   write_dim_code__care
00032E9E <AmiBlitz3.ab3@25393>   MOVE.w temp2,$8(A3)                                      ;set # dim's
00032EA4 <AmiBlitz3.ab3@25396>   LEA doarr,A0
00032EAA <AmiBlitz3.ab3@25397>   MOVE.w $4(A3),$2(A0)
00032EB2 <AmiBlitz3.ab3@25398>   MOVE.w putarr+2,$6(A0)
00032EB4 <AmiBlitz3.ab3@25399>   MOVE.l (A0)+,D1
00032EBA <AmiBlitz3.ab3@25400>    JSR writelong
00032EBC <AmiBlitz3.ab3@25401>   MOVE.l (A0),D1
00032EC2 <AmiBlitz3.ab3@25402>    JSR writelong
00032EC8 <AmiBlitz3.ab3@25403>    TST.b dimkeep
00032ECC <AmiBlitz3.ab3@25404>   BNE write_dim_code__care_l3
00032ED0 <AmiBlitz3.ab3@25407>   MOVE.w #$C400,D1
00032ED4 <AmiBlitz3.ab3@25408> BRA write_dim_code__care_l2
00032ED8 <AmiBlitz3.ab3@25411>   MOVE.w #$C405,d1
00032EDE <AmiBlitz3.ab3@25414>   MOVE.w proceduremode,D2
00032EE2 <AmiBlitz3.ab3@25415>    BEQ.w write_dim_code__isg
00032EE8 <AmiBlitz3.ab3@25416>    TST.w notshared
00032EEC <AmiBlitz3.ab3@25417>    BEQ write_dim_code__isg
00032EEE <AmiBlitz3.ab3@25418>   ADDQ.w #1,D1
00032EF2 <AmiBlitz3.ab3@25421>   MOVE.w listadd(PC),D2
00032EF6 <AmiBlitz3.ab3@25422>    BEQ.w write_dim_code__isrg
00032EF8 <AmiBlitz3.ab3@25423>   MOVE.w D1,-(A7)
00032EFC <AmiBlitz3.ab3@25424>   MOVE.w setles(PC),D1
00032F02 <AmiBlitz3.ab3@25425>    JSR writeword
00032F06 <AmiBlitz3.ab3@25426>   MOVE.w listsize(PC),D1
00032F0C <AmiBlitz3.ab3@25427>    JSR writeword
00032F0E <AmiBlitz3.ab3@25428>   MOVE.w (A7)+,D1
00032F10 <AmiBlitz3.ab3@25429>   ADDQ.w #3,D1
00032F14 <AmiBlitz3.ab3@25432> BRA.w Atokejsr
00032F1A <AmiBlitz3.ab3@25439>     MOVE.l #$f23c4400,d1
00032F20 <AmiBlitz3.ab3@25441>   MOVE.w regnum,d0
00032F22 <AmiBlitz3.ab3@25442>   ASL.w #7,d0
00032F24 <AmiBlitz3.ab3@25443>   OR.w d0,d1
00032F2A <AmiBlitz3.ab3@25444>   JSR writelong
00032F30 <AmiBlitz3.ab3@25450>     MOVE.l #$40490fd9,d1
00032F36 <AmiBlitz3.ab3@25452>   JSR writelong
00032F3C <AmiBlitz3.ab3@25453> JMP get1bytemain
00032F40 <AmiBlitz3.ab3@25457> setles:   Dc.b $38,$3C,$00,$00                             ;MOVE.W  #$0000,D4
00032F44 <AmiBlitz3.ab3@25464> vbr:                Ds.l 1
00032F46 <AmiBlitz3.ab3@25465> cfetchmode:         Ds.w 1                               ;1=fetching a constant
00032F4C <AmiBlitz3.ab3@25467> constlibs           Dc.w $FDA7,$FCDF,$FD43               ;64935,64735,64835  org source
00032F50 <AmiBlitz3.ab3@25471> constpcat:          Ds.l 1
00032F54 <AmiBlitz3.ab3@25472> constlibat:         Ds.l 1
00032F58 <AmiBlitz3.ab3@25473> constmaxpc:         Dc.l $400
00032F5C <AmiBlitz3.ab3@25475> stacksize:          Dc.l 32768                           ;stackfuck org source
00032F60 <AmiBlitz3.ab3@25476> currentlabeladdr:   Dc.l labelbase                       ;lastrescon org source
00032F64 <AmiBlitz3.ab3@25477> currentmacroaddr:   Dc.l macrobase                       ;lastresmac org source
00032F68 <AmiBlitz3.ab3@25478> lastrestype:        Dc.l newtype_string
00032F6A <AmiBlitz3.ab3@25479> rescnt:             Ds.w 1                               ;# resident
00032F6C <AmiBlitz3.ab3@25480> state_of_residents: Ds.w 1                               ;reschg org source ;flag for if res's have changed
00032F70 <AmiBlitz3.ab3@25481> resat:              Dc.l residents_table                 ;??looks like not used anymore??
00032F72 <AmiBlitz3.ab3@25482> linedone:           Ds.w 1
00032F88 <AmiBlitz3.ab3@25483> directbuffer:       Ds.w 11                              ;dirpcat  dc.w 0 org source
00032F8C <AmiBlitz3.ab3@25492>   Dc.l 0                                        ; bytetobyte
00032F90 <AmiBlitz3.ab3@25493>   Dc.l convert_byte_to_word                     ; bytetoword
00032F94 <AmiBlitz3.ab3@25494>   Dc.l convert_byte_to_long                     ; bytetolong
00032F98 <AmiBlitz3.ab3@25495>   Dc.l convert_byte_to_quick                    ; bytetoquick
00032F9C <AmiBlitz3.ab3@25496>   Dc.l convert_byte_to_float                    ; bytetofloat
00032FA0 <AmiBlitz3.ab3@25497>   Dc.l convert_byte_to_long                     ; bytetolong
00032FA4 <AmiBlitz3.ab3@25498>   Dc.l error_convert_types                      ; noconerr
00032FA8 <AmiBlitz3.ab3@25501>   Dc.l convert_word_to_byte                     ; wordtobyte
00032FAC <AmiBlitz3.ab3@25502>   Dc.l 0                                        ; wordtoword
00032FB0 <AmiBlitz3.ab3@25503>   Dc.l convert_word_to_long                     ; wordtolong
00032FB4 <AmiBlitz3.ab3@25504>   Dc.l convert_word_to_quick                    ; wordtoquick
00032FB8 <AmiBlitz3.ab3@25505>   Dc.l convert_word_to_float                    ; wordtofloat
00032FBC <AmiBlitz3.ab3@25506>   Dc.l convert_word_to_long                     ; wordtolong
00032FC0 <AmiBlitz3.ab3@25507>   Dc.l error_convert_types                      ; noconerr
00032FC4 <AmiBlitz3.ab3@25510>   Dc.l convert_long_to_byte                     ; longtobyte
00032FC8 <AmiBlitz3.ab3@25511>   Dc.l convert_long_to_word                     ; longtoword
00032FCC <AmiBlitz3.ab3@25512>   Dc.l 0                                        ; longtolong
00032FD0 <AmiBlitz3.ab3@25513>   Dc.l convert_long_to_quick                    ; longtoquick
00032FD4 <AmiBlitz3.ab3@25514>   Dc.l convert_long_to_float                    ; longtofloat
00032FD8 <AmiBlitz3.ab3@25515>   Dc.l 0                                        ; longtolong
00032FDC <AmiBlitz3.ab3@25516>   Dc.l error_convert_types                      ; noconerr
00032FE0 <AmiBlitz3.ab3@25519>   Dc.l convert_quick_to_byte                    ; quicktobyte
00032FE4 <AmiBlitz3.ab3@25520>   Dc.l convert_quick_to_word                    ; quicktoword
00032FE8 <AmiBlitz3.ab3@25521>   Dc.l convert_quick_to_long                    ; quicktolong
00032FEC <AmiBlitz3.ab3@25522>   Dc.l 0                                        ; quicktoquick
00032FF0 <AmiBlitz3.ab3@25523>   Dc.l convert_quick_to_float                   ; quicktofloat
00032FF4 <AmiBlitz3.ab3@25524>   Dc.l convert_quick_to_long                    ; quicktolong
00032FF8 <AmiBlitz3.ab3@25525>   Dc.l error_convert_types                      ; noconerr
00032FFC <AmiBlitz3.ab3@25528>   Dc.l convert_float_to_byte                    ; floattobyte
00033000 <AmiBlitz3.ab3@25529>   Dc.l convert_float_to_word                    ; floattoword
00033004 <AmiBlitz3.ab3@25530>   Dc.l convert_float_to_long                    ; floattolong
00033008 <AmiBlitz3.ab3@25531>   Dc.l convert_float_to_quick                   ; floattoquick
0003300C <AmiBlitz3.ab3@25532>   Dc.l 0                                        ; floattofloat
00033010 <AmiBlitz3.ab3@25533>   Dc.l convert_float_to_long                    ; floattolong
00033014 <AmiBlitz3.ab3@25534>   Dc.l error_convert_types                      ; noconerr
00033018 <AmiBlitz3.ab3@25537>   Dc.l convert_long_to_byte                     ; longtobyte
0003301C <AmiBlitz3.ab3@25538>   Dc.l convert_long_to_word                     ; longtoword
00033020 <AmiBlitz3.ab3@25539>   Dc.l 0                                        ; longtolong
00033024 <AmiBlitz3.ab3@25540>   Dc.l convert_long_to_quick                    ; longtoquick
00033028 <AmiBlitz3.ab3@25541>   Dc.l convert_long_to_float                    ; longtofloat
0003302C <AmiBlitz3.ab3@25542>   Dc.l 0                                        ; longtolong
00033030 <AmiBlitz3.ab3@25543>   Dc.l error_convert_types                      ; noconerr
00033034 <AmiBlitz3.ab3@25546>   Dc.l error_convert_types                      ; noconerr
00033038 <AmiBlitz3.ab3@25547>   Dc.l error_convert_types                      ; noconerr
0003303C <AmiBlitz3.ab3@25548>   Dc.l string_to_long                           ; stringtolong
00033040 <AmiBlitz3.ab3@25549>   Dc.l error_convert_types                      ; noconerr
00033044 <AmiBlitz3.ab3@25550>   Dc.l error_convert_types                      ; noconerr
00033048 <AmiBlitz3.ab3@25551>   Dc.l string_to_long                           ; stringtolong
0003304C <AmiBlitz3.ab3@25552>   Ds.l 1
0003304E <AmiBlitz3.ab3@25558>   Dc.b $00,$2B                                  ;+ ; add
00033052 <AmiBlitz3.ab3@25559>   Dc.l do_plus_byte                             ;doplusb
00033056 <AmiBlitz3.ab3@25560>   Dc.l do_plus_word                             ;doplusw
0003305A <AmiBlitz3.ab3@25561>   Dc.l do_plus_long                             ;doplusl
0003305E <AmiBlitz3.ab3@25562>   Dc.l do_plus_long                             ;doplusl
00033062 <AmiBlitz3.ab3@25563>   Dc.l do_plus_float                            ;doplusf
00033066 <AmiBlitz3.ab3@25564>   Ds.l 1
0003306A <AmiBlitz3.ab3@25565>   Dc.l add_strings                              ;addstrings
0003306C <AmiBlitz3.ab3@25566>   Dc.b $0B,$B8
0003306E <AmiBlitz3.ab3@25568>   Dc.b $00,$2D                                  ;- ; sub
00033072 <AmiBlitz3.ab3@25569>   Dc.l do_minus_byte                            ;dominusb
00033076 <AmiBlitz3.ab3@25570>   Dc.l do_minus_word                            ;dominusw
0003307A <AmiBlitz3.ab3@25571>   Dc.l do_minus_long                            ;dominusl
0003307E <AmiBlitz3.ab3@25572>   Dc.l do_minus_long                            ;dominusl
00033082 <AmiBlitz3.ab3@25573>   Dc.l do_minus_float                           ;dominusf
0003308A <AmiBlitz3.ab3@25574>   Ds.l 2
0003308C <AmiBlitz3.ab3@25575>   Dc.b $0B,$B8
0003308E <AmiBlitz3.ab3@25577>   Dc.b $00,$2A                                  ;* ; mul
00033092 <AmiBlitz3.ab3@25578>   Dc.l do_times_byte                            ;dotimesb
00033096 <AmiBlitz3.ab3@25579>   Dc.l do_times_word                            ;dotimesw
0003309A <AmiBlitz3.ab3@25580>   Dc.l do_times_long                            ;dotimesl
0003309E <AmiBlitz3.ab3@25581>   Dc.l do_times_quick                           ;dotimesq
000330A2 <AmiBlitz3.ab3@25582>   Dc.l do_times_float                           ;dotimesf
000330AA <AmiBlitz3.ab3@25583>   Ds.l 2
000330AC <AmiBlitz3.ab3@25584>   Dc.b $0F,$A0
000330AE <AmiBlitz3.ab3@25586>   Dc.b $00,$2F                                  ;/ ; div
000330B2 <AmiBlitz3.ab3@25587>   Dc.l do_Div_byte                              ;dodivb
000330B6 <AmiBlitz3.ab3@25588>   Dc.l do_Div_word                              ;dodivb
000330BA <AmiBlitz3.ab3@25589>   Dc.l do_Div_long                              ;dodivl
000330BE <AmiBlitz3.ab3@25590>   Dc.l do_Div_quick                             ;dodivq
000330C2 <AmiBlitz3.ab3@25591>   Dc.l do_Div_float                             ;dodivf
000330CA <AmiBlitz3.ab3@25592>   Ds.l 2
000330CC <AmiBlitz3.ab3@25593>   Dc.b $0F,$A0
000330CE <AmiBlitz3.ab3@25595>   Dc.b $00,$26                                  ;& ; & int
000330D2 <AmiBlitz3.ab3@25596>   Dc.l do_AND_byte                              ;doandb
000330D6 <AmiBlitz3.ab3@25597>   Dc.l do_AND_word                              ;doandw
000330DA <AmiBlitz3.ab3@25598>   Dc.l do_AND_long                              ;doandl
000330DE <AmiBlitz3.ab3@25599>   Dc.l do_AND_long                              ;doandl
000330EA <AmiBlitz3.ab3@25600>   Ds.l 3
000330EC <AmiBlitz3.ab3@25601>   Dc.b $13,$88
000330EE <AmiBlitz3.ab3@25603>   Dc.b $00,$7C                                  ;| ;or int ;
000330F2 <AmiBlitz3.ab3@25604>   Dc.l do_OR_byte                               ;doorb
000330F6 <AmiBlitz3.ab3@25605>   Dc.l do_OR_word                               ;doorw
000330FA <AmiBlitz3.ab3@25606>   Dc.l do_OR_long                               ;doorl
000330FE <AmiBlitz3.ab3@25607>   Dc.l do_OR_long                               ;doorl
0003310A <AmiBlitz3.ab3@25608>   Ds.l 3
0003310C <AmiBlitz3.ab3@25609>   Dc.b $13,$88
0003310E <AmiBlitz3.ab3@25611>   Dc.b $80,$42                                  ; AND int  ;(opand-opabcd)/$1c+$8000+fnum
00033112 <AmiBlitz3.ab3@25612>   Dc.l do_AND_byte                              ;doandb
00033116 <AmiBlitz3.ab3@25613>   Dc.l do_AND_word                              ;doandw
0003311A <AmiBlitz3.ab3@25614>   Dc.l do_AND_long                              ;doandl
0003311E <AmiBlitz3.ab3@25615>   Dc.l do_AND_long                              ;doandl
0003312A <AmiBlitz3.ab3@25616>   Ds.l 3
0003312C <AmiBlitz3.ab3@25617>   Dc.b $03,$E8
0003312E <AmiBlitz3.ab3@25619>   Dc.b $80,$8A                                  ; OR int   ;(opor-opabcd)/$1c+$8000+fnum
00033132 <AmiBlitz3.ab3@25620>   Dc.l do_OR_byte                               ;doorb
00033136 <AmiBlitz3.ab3@25621>   Dc.l do_OR_word                               ;doorw
0003313A <AmiBlitz3.ab3@25622>   Dc.l do_OR_long                               ;doorl
0003313E <AmiBlitz3.ab3@25623>   Dc.l do_OR_long                               ;doorl
0003314A <AmiBlitz3.ab3@25624>   Ds.l 3
0003314C <AmiBlitz3.ab3@25625>   Dc.b $03,$E8
0003314E <AmiBlitz3.ab3@25627>   Dc.b $80,$73                                  ; EOR int  ;(opeor-opabcd)/$1c+$8000+fnum
00033152 <AmiBlitz3.ab3@25628>   Dc.l do_EOR_byte                              ;doeorb
00033156 <AmiBlitz3.ab3@25629>   Dc.l do_EOR_word                              ;doeorw
0003315A <AmiBlitz3.ab3@25630>   Dc.l do_EOR_long                              ;doeorl
0003315E <AmiBlitz3.ab3@25631>   Dc.l do_EOR_long                              ;doeorl
0003316A <AmiBlitz3.ab3@25632>   Ds.l 3
0003316C <AmiBlitz3.ab3@25633>   Dc.b $03,$E8
0003316E <AmiBlitz3.ab3@25635>   Dc.b $80,$7C                                  ; LSL int  ;(oplsl-opabcd)/$1c+$8000+fnum
00033172 <AmiBlitz3.ab3@25636>   Dc.l do_LSL                                   ;dolslb
00033176 <AmiBlitz3.ab3@25637>   Dc.l do_LSL                                   ;dolslw
0003317A <AmiBlitz3.ab3@25638>   Dc.l do_LSL                                   ;dolsll
0003317E <AmiBlitz3.ab3@25639>   Dc.l do_LSL                                   ;dolsll
0003318A <AmiBlitz3.ab3@25640>   Ds.l 3
0003318C <AmiBlitz3.ab3@25641>   Dc.b $17,$70
0003318E <AmiBlitz3.ab3@25643>   Dc.b $80,$44                                  ; ASL int  ;(opasl-opabcd)/$1c+$8000+fnum
00033192 <AmiBlitz3.ab3@25644>   Dc.l do_LSL                                   ;dolslb
00033196 <AmiBlitz3.ab3@25645>   Dc.l do_LSL                                   ;dolslw
0003319A <AmiBlitz3.ab3@25646>   Dc.l do_LSL                                   ;dolsll
0003319E <AmiBlitz3.ab3@25647>   Dc.l do_LSL                                   ;dolsll
000331AA <AmiBlitz3.ab3@25648>   Ds.l 3
000331AC <AmiBlitz3.ab3@25649>   Dc.b $17,$70
000331AE <AmiBlitz3.ab3@25651>   Dc.b $80,$7D                                  ; LSR int  ;(oplsr-opabcd)/$1c+$8000+fnum
000331B2 <AmiBlitz3.ab3@25652>   Dc.l do_LSR                                   ;dolsrb
000331B6 <AmiBlitz3.ab3@25653>   Dc.l do_LSR                                   ;dolsrw
000331BA <AmiBlitz3.ab3@25654>   Dc.l do_LSR                                   ;dolsrl
000331BE <AmiBlitz3.ab3@25655>   Dc.l do_LSR                                   ;dolsrl
000331CA <AmiBlitz3.ab3@25656>   Ds.l 3
000331CC <AmiBlitz3.ab3@25657>   Dc.b $17,$70
000331CE <AmiBlitz3.ab3@25659>   Dc.b $80,$45                                  ; ASR int  ;(opasr-opabcd)/$1c+$8000+fnum
000331D2 <AmiBlitz3.ab3@25660>   Dc.l do_ASR                                   ;doasrb
000331D6 <AmiBlitz3.ab3@25661>   Dc.l do_ASR                                   ;doasrw
000331DA <AmiBlitz3.ab3@25662>   Dc.l do_ASR                                   ;doasrl
000331DE <AmiBlitz3.ab3@25663>   Dc.l do_ASR                                   ;doasrl
000331EA <AmiBlitz3.ab3@25664>   Ds.l 3
000331EC <AmiBlitz3.ab3@25665>   Dc.b $17,$70
000331EE <AmiBlitz3.ab3@25667>   Dc.b $80,$B9                                  ;mod       ;$8006+tnum
000331F2 <AmiBlitz3.ab3@25668>   Dc.l do_mod_byte                              ;domodb
000331F6 <AmiBlitz3.ab3@25669>   Dc.l do_mod_word                              ;domodw
000331FA <AmiBlitz3.ab3@25670>   Dc.l do_mod_long                              ;domodl
000331FE <AmiBlitz3.ab3@25671>   Dc.l do_mod_quick                             ;domodq
00033202 <AmiBlitz3.ab3@25672>   Dc.l do_mod_float                             ;domodf
0003320A <AmiBlitz3.ab3@25673>   Ds.l 2
0003320C <AmiBlitz3.ab3@25674>   Dc.b $13,$88
0003320E <AmiBlitz3.ab3@25677>   Dc.b $00,$5E                                  ;^
00033212 <AmiBlitz3.ab3@25678>   Dc.l do_pow                                   ;dopow
00033216 <AmiBlitz3.ab3@25679>   Dc.l do_pow                                   ;dopow
0003321A <AmiBlitz3.ab3@25680>   Dc.l do_pow                                   ;dopow
0003321E <AmiBlitz3.ab3@25681>   Dc.l do_pow                                   ;dopow
00033222 <AmiBlitz3.ab3@25682>   Dc.l do_pow                                   ;dopow
0003322A <AmiBlitz3.ab3@25683>   Ds.l 2
0003322C <AmiBlitz3.ab3@25684>   Dc.b $1B,$58                                  ;7000
0003322E <AmiBlitz3.ab3@25687>   Dc.b $00,$3D                                  ;=
00033232 <AmiBlitz3.ab3@25688>   Dc.l do_equal_byte                            ;doeqb
00033236 <AmiBlitz3.ab3@25689>   Dc.l do_equal_word                            ;doeqw
0003323A <AmiBlitz3.ab3@25690>   Dc.l do_equal_long                            ;doeql
0003323E <AmiBlitz3.ab3@25691>   Dc.l do_equal_long                            ;doeql
00033242 <AmiBlitz3.ab3@25692>   Dc.l do_equal_float                           ;doeqf
00033246 <AmiBlitz3.ab3@25693>   Dc.l do_equal_long                            ;doeql
0003324A <AmiBlitz3.ab3@25694>   Dc.l do_equal_string                          ;doeqs
0003324C <AmiBlitz3.ab3@25695>   Dc.b $07,$D0                                  ;2000
0003324E <AmiBlitz3.ab3@25698>   Dc.b $3C,$3E                                  ;<>
00033252 <AmiBlitz3.ab3@25699>   Dc.l do_not_equal_byte                        ;doneb
00033256 <AmiBlitz3.ab3@25700>   Dc.l do_not_equal_word                        ;donew
0003325A <AmiBlitz3.ab3@25701>   Dc.l do_not_equal_long                        ;donel
0003325E <AmiBlitz3.ab3@25702>   Dc.l do_not_equal_long                        ;donel
00033262 <AmiBlitz3.ab3@25703>   Dc.l do_not_equal_float                       ;donef
00033266 <AmiBlitz3.ab3@25704>   Dc.l do_not_equal_long                        ;donel
0003326A <AmiBlitz3.ab3@25705>   Dc.l do_not_equal_string                      ;dones
0003326C <AmiBlitz3.ab3@25706>   Dc.b $07,$D0                                  ;2000
0003326E <AmiBlitz3.ab3@25709>   Dc.b $00,$3C                                  ;<
00033272 <AmiBlitz3.ab3@25710>   Dc.l do_littler_byte                          ;doltb
00033276 <AmiBlitz3.ab3@25711>   Dc.l do_littler_word                          ;doltw
0003327A <AmiBlitz3.ab3@25712>   Dc.l do_littler_long                          ;doltl
0003327E <AmiBlitz3.ab3@25713>   Dc.l do_littler_long                          ;doltl
00033282 <AmiBlitz3.ab3@25714>   Dc.l do_littler_float                         ;doltf
00033286 <AmiBlitz3.ab3@25715>   Dc.l do_littler_long                          ;doltl
0003328A <AmiBlitz3.ab3@25716>   Dc.l do_littler_string                        ;dolts
0003328C <AmiBlitz3.ab3@25717>   Dc.b $07,$D0                                  ;2000
0003328E <AmiBlitz3.ab3@25720>   Dc.b $3C,$3D                                  ;<=
00033292 <AmiBlitz3.ab3@25721>   Dc.l do_littler_equal_byte                    ;doleb
00033296 <AmiBlitz3.ab3@25722>   Dc.l do_littler_equal_word                    ;doleb
0003329A <AmiBlitz3.ab3@25723>   Dc.l do_littler_equal_long                    ;dolel
0003329E <AmiBlitz3.ab3@25724>   Dc.l do_littler_equal_long                    ;dolel
000332A2 <AmiBlitz3.ab3@25725>   Dc.l do_littler_equal_float                   ;dolef
000332A6 <AmiBlitz3.ab3@25726>   Dc.l do_littler_equal_long                    ;dolel
000332AA <AmiBlitz3.ab3@25727>   Dc.l do_littler_equal_string                  ;doles
000332AC <AmiBlitz3.ab3@25728>   Dc.b $07,$D0                                  ;2000
000332AE <AmiBlitz3.ab3@25731>   Dc.b $00,$3E                                  ;>
000332B2 <AmiBlitz3.ab3@25732>   Dc.l do_greater_byte                          ;dogtb
000332B6 <AmiBlitz3.ab3@25733>   Dc.l do_greater_word                          ;dogtw
000332BA <AmiBlitz3.ab3@25734>   Dc.l do_greater_long                          ;dogtl
000332BE <AmiBlitz3.ab3@25735>   Dc.l do_greater_long                          ;dogtl
000332C2 <AmiBlitz3.ab3@25736>   Dc.l do_greater_float                         ;dogtf
000332C6 <AmiBlitz3.ab3@25737>   Dc.l do_greater_long                          ;dogtl
000332CA <AmiBlitz3.ab3@25738>   Dc.l do_greater_string                        ;dogts
000332CC <AmiBlitz3.ab3@25739>   Dc.b $07,$D0                                  ;2000
000332CE <AmiBlitz3.ab3@25742>   Dc.b $3E,$3D                                  ;>=
000332D2 <AmiBlitz3.ab3@25743>   Dc.l do_greater_equal_byte                    ;dogeb
000332D6 <AmiBlitz3.ab3@25744>   Dc.l do_greater_equal_word                    ;dogew
000332DA <AmiBlitz3.ab3@25745>   Dc.l do_greater_equal_long                    ;dogel
000332DE <AmiBlitz3.ab3@25746>   Dc.l do_greater_equal_long                    ;dogel
000332E2 <AmiBlitz3.ab3@25747>   Dc.l do_greater_equal_float                   ;dogef
000332E6 <AmiBlitz3.ab3@25748>   Dc.l do_greater_equal_long                    ;dogel
000332EA <AmiBlitz3.ab3@25749>   Dc.l do_greater_equal_string                  ;doges
000332EC <AmiBlitz3.ab3@25750>   Dc.b $07,$D0                                  ;2000
000332EE <AmiBlitz3.ab3@25752>   Dc.b $80,$CD                                  ;$8000+26+tnum
000332F2 <AmiBlitz3.ab3@25753>   Dc.l _BitTst
000332F6 <AmiBlitz3.ab3@25754>   Dc.l _BitTst
000332FA <AmiBlitz3.ab3@25755>   Dc.l _BitTst
000332FE <AmiBlitz3.ab3@25756>   Dc.l _BitTst
0003330A <AmiBlitz3.ab3@25757>   Ds.l 3
0003330C <AmiBlitz3.ab3@25758>   Dc.b $1F,$40                                  ;8000
0003330E <AmiBlitz3.ab3@25760>   Dc.b $80,$CE                                  ;$8000+27+tnum
00033312 <AmiBlitz3.ab3@25761>   Dc.l _BitSet
00033316 <AmiBlitz3.ab3@25762>   Dc.l _BitSet
0003331A <AmiBlitz3.ab3@25763>   Dc.l _BitSet
0003331E <AmiBlitz3.ab3@25764>   Dc.l _BitSet
0003332A <AmiBlitz3.ab3@25765>   Ds.l 3
0003332C <AmiBlitz3.ab3@25766>   Dc.b $1F,$40                                  ;8000
0003332E <AmiBlitz3.ab3@25768>   Dc.b $80,$CF                                  ;$8000+28+tnum
00033332 <AmiBlitz3.ab3@25769>   Dc.l _BitClr
00033336 <AmiBlitz3.ab3@25770>   Dc.l _BitClr
0003333A <AmiBlitz3.ab3@25771>   Dc.l _BitClr
0003333E <AmiBlitz3.ab3@25772>   Dc.l _BitClr
0003334A <AmiBlitz3.ab3@25773>   Ds.l 3
0003334C <AmiBlitz3.ab3@25774>   Dc.b $1F,$40                                  ;8000
0003334E <AmiBlitz3.ab3@25776>   Dc.b $80,$D0                                  ;$8000+29+tnum
00033352 <AmiBlitz3.ab3@25777>   Dc.l _BitChg
00033356 <AmiBlitz3.ab3@25778>   Dc.l _BitChg
0003335A <AmiBlitz3.ab3@25779>   Dc.l _BitChg
0003335E <AmiBlitz3.ab3@25780>   Dc.l _BitChg
0003336A <AmiBlitz3.ab3@25781>   Ds.l 3
0003336C <AmiBlitz3.ab3@25782>   Dc.b $1F,$40                                  ;8000
0003336E <AmiBlitz3.ab3@25784>   Dc.b $00,$00
00033372 <AmiBlitz3.ab3@25789> modetable:   Dc.l typemode
00033376 <AmiBlitz3.ab3@25792> newtypebase: Dc.l newtype_byte
0003337E <AmiBlitz3.ab3@25795>   Dc.l newtype_word,$01                                    
00033380 <AmiBlitz3.ab3@25796>   Dc.w $0001
00033384 <AmiBlitz3.ab3@25797>   Dc.b 13,"b",0,0
0003338C <AmiBlitz3.ab3@25800>   Dc.l newtype_long,$02
0003338E <AmiBlitz3.ab3@25801>   Dc.w $0002
00033392 <AmiBlitz3.ab3@25802>   Dc.b 13,"w",0,0
0003339A <AmiBlitz3.ab3@25805>   Dc.l newtype_quick,$03                                   
0003339C <AmiBlitz3.ab3@25806>   Dc.w $0004
000333A0 <AmiBlitz3.ab3@25807>   Dc.b 13,"l",0,0
000333A8 <AmiBlitz3.ab3@25810>   Dc.l newtype_float,$04                                   
000333AA <AmiBlitz3.ab3@25811>   Dc.w $0004
000333AE <AmiBlitz3.ab3@25812>   Dc.b 13,"q",0,0
000333B6 <AmiBlitz3.ab3@25816>   Dc.l newtype_double,$05                                  ;make problems on old residents
000333B8 <AmiBlitz3.ab3@25817>   Dc.w $0004
000333BC <AmiBlitz3.ab3@25818>   Dc.b 13,"f",0,0
000333C4 <AmiBlitz3.ab3@25821>   Dc.l newtype_double,$06
000333C6 <AmiBlitz3.ab3@25822>   Dc.w $0004
000333CA <AmiBlitz3.ab3@25823>   Dc.b 13,"a",0,0
000333D2 <AmiBlitz3.ab3@25826>   Dc.l newtype_string,$05                                  ;?? has to by $06 becous is number 6 not 5
000333D4 <AmiBlitz3.ab3@25827>   Dc.w $0008
000333D8 <AmiBlitz3.ab3@25828>   Dc.b 13,"d",0,0
000333E0 <AmiBlitz3.ab3@25832>   Dc.l $0000000,$07                                        ;stringtype
000333E2 <AmiBlitz3.ab3@25833>   Dc.w $0004
000333E6 <AmiBlitz3.ab3@25834>   Dc.b 13,"s",0,0
000333EE <AmiBlitz3.ab3@25837>   Dc.l $00,$00
000333F0 <AmiBlitz3.ab3@25838>   Dc.w $0000
000333F4 <AmiBlitz3.ab3@25839>   Dc.b $01,$00,$00,$00
00033454 <AmiBlitz3.ab3@25842> incdir:               Ds.l 24                              ;dcb.b   96,0    org source
00033456 <AmiBlitz3.ab3@25846> dirmode:              Ds.w 1                               ;shows if directmode is on
0003345A <AmiBlitz3.ab3@25848>                       Ds.l 1                               ;int org source ;intuition!
0003345C <AmiBlitz3.ab3@25849> maxobject_pos:        Ds.w 1                               ;maxat org source ;max at
00033460 <AmiBlitz3.ab3@25850> maxsat:               Ds.l 1                               ;data1 info pos
00033462 <AmiBlitz3.ab3@25851> number_of_objects:    Ds.w 1                               ;nummaxs org source ;number of maximums
00033464 <AmiBlitz3.ab3@25853> maxsused:             Ds.w 1                               ;maximums used in prog
00033466 <AmiBlitz3.ab3@25857> dark:                 Ds.w 1                               ;dark compile?
00033468 <AmiBlitz3.ab3@25858> qlab:                 Ds.w 1                               ;quick lab allocate
0003346C <AmiBlitz3.ab3@25859> defaulttype:          Dc.l newtype_quick                   ;dc.l quicktype org source
0003346E <AmiBlitz3.ab3@25864> anyerrs:              Dc.w -1                              ;Any Errors in compile ?
00033470 <AmiBlitz3.ab3@25865> debugversion:         Ds.w 1                               ;makeexec org source ;make an executable file!
00033474 <AmiBlitz3.ab3@25866> noinits:              Ds.l 1                               ;flag for if we have any init routines!
00033478 <AmiBlitz3.ab3@25868> letstart:             Ds.l 1
0003347A <AmiBlitz3.ab3@25869> dontwrite:            Ds.w 1                               ;nomemleft org source
000334FA <AmiBlitz3.ab3@25870> lastgloballabel:      Ds.l 32                              ;lastbiglab ds.b 128 org source
000334FE <AmiBlitz3.ab3@25872> locdatast:            Ds.l 1
00033502 <AmiBlitz3.ab3@25873> firstpend:            Ds.l 1
00033506 <AmiBlitz3.ab3@25877> data2at:              Ds.l 1
0003350A <AmiBlitz3.ab3@25878> data2:                Ds.l 1
0003350E <AmiBlitz3.ab3@25879> data1start:           Ds.l 1                               ;data1at org source
00033512 <AmiBlitz3.ab3@25880> data1:                Ds.l 1                               ;pc for initialized data!
00033516 <AmiBlitz3.ab3@25881> destbufferstart:      Ds.l 1                               ;pcat org source
0003351A <AmiBlitz3.ab3@25885> destbufferend:        Ds.l 1                               ;libat org source
0003351E <AmiBlitz3.ab3@25886> libend:               Ds.l 1                               ;lib org source
00033522 <AmiBlitz3.ab3@25887> allat:                Ds.l 1                               ;highest allocmemd location for code
0003352C <AmiBlitz3.ab3@25888> dummyasm:             Dc.w 0,0,0,0,0
00033530 <AmiBlitz3.ab3@25889>                       Dc.l 0
00033532 <AmiBlitz3.ab3@25890>                       Dc.w 0
00033536 <AmiBlitz3.ab3@25894> buff1:                Ds.l 1                               ;buffer for text get
0003353A <AmiBlitz3.ab3@25895> buff2:                Ds.l 1                               ;ditto for dest
0003353C <AmiBlitz3.ab3@25896> constmode:            Ds.w 1                               ;0 for norm, <>0 for assembler
0003353E <AmiBlitz3.ab3@25897> asmtype:              Ds.w 1                               ;0=contains no prog reference
00033540 <AmiBlitz3.ab3@25898> extraword:            Ds.w 1                               ;the extension word for assembler
00033542 <AmiBlitz3.ab3@25899> extraword2:           Ds.w 1                               ;ditto
00033544 <AmiBlitz3.ab3@25900> asmsize:              Ds.w 1
00033548 <AmiBlitz3.ab3@25901> asmbuff:              Ds.l 1
0003354A <AmiBlitz3.ab3@25902> asmlen:               Ds.w 1                               ;first (src) text len
0003354C <AmiBlitz3.ab3@25903> asmlen2:              Ds.w 1                               ;second (dest)
00033550 <AmiBlitz3.ab3@25904> templabel:            Ds.l 1                               ;linked list of expressions to resolve
00033552 <AmiBlitz3.ab3@25907> macnum:               Ds.w 1
00033556 <AmiBlitz3.ab3@25909>                       Dc.l 0                               ;address of next 0 in include fil
0003355A <AmiBlitz3.ab3@25910> titleat:              Ds.l 1                               ;5 longs for compile streaks
00033564 <AmiBlitz3.ab3@25911> progress_per_line:    Ds.w 5                               ;titleadd ds 5 org source ;5 adds for compile streaks
00033566 <AmiBlitz3.ab3@25912> connest:              Ds.w 1                               ;conditional nest level
0003356A <AmiBlitz3.ab3@25913> firstconst:           Ds.l 1                               ;first constant (#a)
0003356C <AmiBlitz3.ab3@25914> numarg:               Ds.w 1                               ;number of macro arguements
00033570 <AmiBlitz3.ab3@25915> myoline:              Ds.l 1                               ;macro done yet?
00033574 <AmiBlitz3.ab3@25916> myline:               Ds.l 1                               ;pointer to some memory to create
00033578 <AmiBlitz3.ab3@25919>                       Ds.l 1
000335B8 <AmiBlitz3.ab3@25920> concomstack:          Ds.l 16                              ;32 deep conditional compilation
000335BC <AmiBlitz3.ab3@25921> concomsp:             Dc.l concomstack                     ;stack pointer
000335BE <AmiBlitz3.ab3@25922> oldqflag:             Ds.w 1
000335C2 <AmiBlitz3.ab3@25925>                       Ds.l 1
000335C4 <AmiBlitz3.ab3@25927>                       Ds.w 1
000335C8 <AmiBlitz3.ab3@25928> firstfor:             Ds.l 1                               ;first for
000335CA <AmiBlitz3.ab3@25929> stackpar:             Ds.w 1                               ;pushflag org source ;1 par to stack 0 normal
000335CC <AmiBlitz3.ab3@25930> sbgot:                Ds.w 1                               ;flag for string got 2
000335CE <AmiBlitz3.ab3@25931> convsize:             Ds.w 1                               ;usertype org source
000335D0 <AmiBlitz3.ab3@25932> userp:                Ds.w 1
000335D4 <AmiBlitz3.ab3@25937> ptr_userlibs_list:    Ds.l 1                               ;libslist org source
000335D6 <AmiBlitz3.ab3@25938> a2offset:             Ds.w 1                               ;stackuse org source ;stack used when gathering lib parameters
000335D8 <AmiBlitz3.ab3@25939> numreps:              Ds.w 1                               ;number of repeats in a repeatable
000335DC <AmiBlitz3.ab3@25941> locloc:               Ds.l 1
000335DE <AmiBlitz3.ab3@25942> locchar:              Ds.w 1
0003365E <AmiBlitz3.ab3@25943> stbuff:               Ds.l 32                              ;was 8    ;six string varoffs
00033660 <AmiBlitz3.ab3@25944> commode:              Ds.w 1                               ;in comma mode...
00033664 <AmiBlitz3.ab3@25945> lastoffset_org:       Ds.l 1                               ;lastoffset org source ;last offset in calcvar!
00033668 <AmiBlitz3.ab3@25946> linenumat:            Dc.l $FFFFFFFF                       ;linecounter ;dc -1 org source ;line being processed
0003366C <AmiBlitz3.ab3@25947> compilelinecounter:   Dc.l $FFFFFFFF                       ;menuret dc -1 org source ;menu return code
0003366E <AmiBlitz3.ab3@25949>                       Ds.w 1                               ;opt reset offset
0003376E <AmiBlitz3.ab3@25951>                       Ds.l 64                              ;Ds.b vcodelen org source ;code used to generate
0003386E <AmiBlitz3.ab3@25953>                       Ds.l 64                              ;Ds.b vcodelen org source ;above for let.....
00033870 <AmiBlitz3.ab3@25954> varcodelen:           Ds.w 1                               ;and length
00033872 <AmiBlitz3.ab3@25956>                       Ds.w 1
00033878 <AmiBlitz3.ab3@25957> oldvcodelen:          Ds.w 3                               ;old varcodelen
0003387C <AmiBlitz3.ab3@25961> tempvm:               Ds.l 1                               ;memlib org source ;address of memory library
0003387E <AmiBlitz3.ab3@25962> memlibstat:           Ds.w 1                               ;status of memory library during
00033880 <AmiBlitz3.ab3@25965>                       Dc.w 0
00033882 <AmiBlitz3.ab3@25967>                       Dc.w 0
00033884 <AmiBlitz3.ab3@25969> varmode:              Ds.w 1                               ;0 a5 pointer to global
00033888 <AmiBlitz3.ab3@25971> currentfunction:      Ds.l 1                               ;thisproc org source
0003388C <AmiBlitz3.ab3@25972> firstproc:            Ds.l 1                               ;firstproc org source ;this procedure being 'done'
0003388E <AmiBlitz3.ab3@25973> 
00033890 <AmiBlitz3.ab3@25975> skipcode:             Ds.w 1                               ;nocompile ;comflag org source ;0 if no compile
00033894 <AmiBlitz3.ab3@25976> passstack:            Ds.l 1
00033898 <AmiBlitz3.ab3@25977> zero:                 Ds.l 1                               ;ZERO!
0003389A <AmiBlitz3.ab3@25978> ininclude:            Ds.w 1                               ;numincs org source ;number of include files
0003389E <AmiBlitz3.ab3@25980> xinclude_base:        Ds.l 1                               ;firstxinc org source ;first exclusive include.
000338A2 <AmiBlitz3.ab3@25981> constantbase:         Ds.l 1                               ;firstinc org source ;first include
000338A4 <AmiBlitz3.ab3@25982> lasta6:               Dc.w $FFFF                           ;-1 org source
000338A6 <AmiBlitz3.ab3@25983> instringon:           Ds.w 1                               ;quoteflag org source
000338AA <AmiBlitz3.ab3@25984> ptr_macrobuffer_begin:Ds.l 1                               ;macrobuff org source ;pointer to macro collection buffer ;begin
000338AE <AmiBlitz3.ab3@25985> ptr_macrobuffer_end:  Ds.l 1                               ;macrobufff org source ;end of above ;end of
000338B2 <AmiBlitz3.ab3@25986> macrobase:            Ds.l 1                               ;firstmacro org source ;linked list of macro's ;macrolist
000338B6 <AmiBlitz3.ab3@25987> endop:                Ds.l 1                               ;end of program pc - before finishups!
000338BA <AmiBlitz3.ab3@25988> labelbase:            Ds.l 1                               ;firstlabel org source ;first lib struct
000338BE <AmiBlitz3.ab3@25989> end_of_tokenlist:     Ds.l 1                               ;lasttoken org source
000338C0 <AmiBlitz3.ab3@25990> numstatic:            Ds.w 1                               ;number of static structs
000338C4 <AmiBlitz3.ab3@25991> staticdata:           Ds.l 1                               ;data1 val for statics
000338C8 <AmiBlitz3.ab3@25992> libpointer:           Ds.l 1                               ;firstlib org source ;first lib struct
000338CA <AmiBlitz3.ab3@25993> sbasegot:             Ds.w 1                               ;string base got?
000338CE <AmiBlitz3.ab3@25994> litdata1:             Ds.l 1
000338D2 <AmiBlitz3.ab3@25998> objlen:               Ds.l 1
000338D6 <AmiBlitz3.ab3@25999> hunkoffsetcounter:    Ds.l 1                               ;numoffs org source
000338DA <AmiBlitz3.ab3@26000> hunkoffsetbase:       Ds.l 1                               ;firstoff org source ;pointer to linked list
000338DC <AmiBlitz3.ab3@26002> flagmask:             Ds.w 1                               ;mask for flag of variable when
000338DE <AmiBlitz3.ab3@26004> notshared:            Ds.w 1                               ;added org source ;flag for seeing if variable was added!
000338E0 <AmiBlitz3.ab3@26005> nonew:                Ds.w 1                               ;1 to inhibit new variable creation
000338E4 <AmiBlitz3.ab3@26006> temp1:                Ds.l 1
000338E8 <AmiBlitz3.ab3@26007> temp2:                Ds.l 1
000338EC <AmiBlitz3.ab3@26009> ptr_parameterstore:   Ds.l 1                               ;namebuff ds.b 128 org source
000338F0 <AmiBlitz3.ab3@26010> fib_DirEntryType:     Ds.l 1                               ;namebuff+4 org source
00033964 <AmiBlitz3.ab3@26011> fib_FileName:         Ds.l 29                              ;namebuff+8 org source
00033968 <AmiBlitz3.ab3@26012> fib_Size:             Ds.l 1                               ;namebuff+124 org source
000339E8 <AmiBlitz3.ab3@26014> namebuff2:            Ds.b 128
000339F0 <AmiBlitz3.ab3@26015>                       Ds.b 8                               ;for fileinfoblock
00033A30 <AmiBlitz3.ab3@26018> optstuff:             Ds.b 64                              ;temp opt make buffer
00033A32 <AmiBlitz3.ab3@26035>   Dc.b $00,$01                                             ; 1 byte schreiben ;one byte stuff...
00033A36 <AmiBlitz3.ab3@26036>   Dc.l xtra_versionnumber                                  ; vers org source
00033A3A <AmiBlitz3.ab3@26037>   Dc.l create_iconfile                                     ; create icon for executable
00033A3E <AmiBlitz3.ab3@26038>   Ds.l 1
00033A40 <AmiBlitz3.ab3@26040>   Dc.b $00,$02                                             ; 2 bytes schreiben  ;two byte stuff...
00033A44 <AmiBlitz3.ab3@26043>   Dc.l set_use_debugger
00033A48 <AmiBlitz3.ab3@26044>   Dc.l AL_0_11010                                          ;+obsolet: debugger
00033A4C <AmiBlitz3.ab3@26045>   Dc.l AL_0_1103C                                          ;+obsolet: long arrays
00033A50 <AmiBlitz3.ab3@26046>   Dc.l AL_0_11068                                          ;+obsolet: expand macros
00033A54 <AmiBlitz3.ab3@26047>   Dc.l AL_0_11094                                          ;+obsolet: quoted macros
00033A58 <AmiBlitz3.ab3@26048>   Dc.l set_make_smallestcode
00033A5C <AmiBlitz3.ab3@26049>   Dc.l set_link_debuginfo
00033A60 <AmiBlitz3.ab3@26050>   Dc.l set_autorun
00033A64 <AmiBlitz3.ab3@26051>   Dc.l set_interruptcheck
00033A68 <AmiBlitz3.ab3@26052>   Dc.l set_assemblercheck
00033A6C <AmiBlitz3.ab3@26054>   Dc.l set_overflowcheck
00033A70 <AmiBlitz3.ab3@26055>   Dc.l default_obsolete                                    ;+obsolet: ohne inhalt
00033A74 <AmiBlitz3.ab3@26056>   Dc.l default_interruptcheck                              ;+obsolet: interruptcheck vorgabe
00033A78 <AmiBlitz3.ab3@26057>   Dc.l default_overflowcheck                               ;+obsolet: overflow vorgabe
00033A7C <AmiBlitz3.ab3@26060>   Ds.l 1
00033A7E <AmiBlitz3.ab3@26062>   Dc.b $00,$04                                             ; 4 bytes schreiben..  ;four byte stuff...
00033A82 <AmiBlitz3.ab3@26069>   Dc.l objectbuffer
00033A86 <AmiBlitz3.ab3@26070>   Dc.l libsbuffer
00033A8A <AmiBlitz3.ab3@26071>   Dc.l systembuffer
00033A8E <AmiBlitz3.ab3@26072>   Dc.l databuffer
00033A92 <AmiBlitz3.ab3@26073>   Dc.l macrobuffer_size
00033A96 <AmiBlitz3.ab3@26074>   Dc.l stringbuffer
00033A9A <AmiBlitz3.ab3@26077>   Ds.l 1
00033A9C <AmiBlitz3.ab3@26081>   Dc.b $02,$20                                             ;dc 68*8; 544 bytes schreiben.
00033AA4 <AmiBlitz3.ab3@26082>   Dc.l residents_table,0
00033AA6 <AmiBlitz3.ab3@26086>   Dc.b $01,$80                                             ;dc 192*2; 384 bytes schreiben
00033AAE <AmiBlitz3.ab3@26087>   Dc.l exepath,0                                           ; exepath und exefilename jeweils 192 bytes
00033AB0 <AmiBlitz3.ab3@26088>   Ds.w 1
00033BAC <AmiBlitz3.ab3@26092>   Ds.l 63
00033CA8 <AmiBlitz3.ab3@26093>   Ds.l 63
00033DA4 <AmiBlitz3.ab3@26094>   Ds.l 63
00033E86 <AmiBlitz3.ab3@26095>   Ds.w 113
00033E88 <AmiBlitz3.ab3@26098> comsettings_message:  Ds.w 1                               ;allchg org source
00033E8A <AmiBlitz3.ab3@26099> xtra_versionnumber:   Ds.w 1                               ;vers org source
00033E90 <AmiBlitz3.ab3@26103>   CLR.b exefilename
00033E92 <AmiBlitz3.ab3@26104>   TST.l d0
00033E96 <AmiBlitz3.ab3@26105>   BNE read_xtrafile__l10
00033E98 <AmiBlitz3.ab3@26106> RTS
00033E9E <AmiBlitz3.ab3@26109>   JSR free_residents                                       ;jsr freeres2 org source
00033EA4 <AmiBlitz3.ab3@26110> 
00033EAA <AmiBlitz3.ab3@26111>   LEA ptr_xtradata,A2
00033EAC <AmiBlitz3.ab3@26112>   MOVEQ.l #$00,D4
00033EAE <AmiBlitz3.ab3@26115>     MOVE.w (A2)+,D4                                        ; anzahl bytes zum lesen
00033EB2 <AmiBlitz3.ab3@26116>     BEQ.b read_xtrafile__done
00033EB4 <AmiBlitz3.ab3@26119>     MOVE.l (A2)+,D2
00033EB8 <AmiBlitz3.ab3@26120>   BEQ.b read_xtrafile__loop
00033EBA <AmiBlitz3.ab3@26122>   MOVE.l D4,D3
00033EBC <AmiBlitz3.ab3@26123>   MOVE.l D7,D1
00033EC0 <AmiBlitz3.ab3@26124>   JSR _Read(A6)                                            ; d1: file, d2: buffer, d3:length
00033EC2 <AmiBlitz3.ab3@26125>   TST.l D0
00033EC6 <AmiBlitz3.ab3@26126>   BNE.b read_xtrafile__loop2
00033ECA <AmiBlitz3.ab3@26127> BRA.w read_xtrafile__done2
00033ED0 <AmiBlitz3.ab3@26130>   TST.b xtra_versionnumber
00033ED4 <AmiBlitz3.ab3@26131>    BNE.b read_xtrafile__nover0
00033EDC <AmiBlitz3.ab3@26132>   MOVE.w #$0080,set_autorun                                ;auto run on
00033EE6 <AmiBlitz3.ab3@26133>   MOVE.w default_interruptcheck,set_interruptcheck         ;interupt checking on
00033EEC <AmiBlitz3.ab3@26134>   CLR.w set_assemblercheck                                 ;assembler checking off
00033EF6 <AmiBlitz3.ab3@26135>   MOVE.w default_overflowcheck,set_overflowcheck           ;overflow chex
00033EFA <AmiBlitz3.ab3@26136> BRA.b read_xtrafile__ver0
00033EFC <AmiBlitz3.ab3@26139>   MOVE.l D7,D1                                             ;load cli arg!
00033F02 <AmiBlitz3.ab3@26140>   MOVE.l #str_cliarguments,D2
00033F08 <AmiBlitz3.ab3@26141>   MOVE.l #116,D3                                           ; vorher 128 , jetzt 8 weniger fuer die Versionsdaten
00033F0C <AmiBlitz3.ab3@26142>   JSR _Read(A6)                                            ; d1: file, d2: buffer, d3:length
00033F12 <AmiBlitz3.ab3@26143>   MOVE.l #str_cliarguments,A0
00033F18 <AmiBlitz3.ab3@26144>   ADDA.l #115,A0
00033F1E <AmiBlitz3.ab3@26145>   MOVE.l #0,(a0) ; terminate it!
00033F20 <AmiBlitz3.ab3@26147>   MOVE.l D7,D1                                             ; I know, I know. Honitos started this horrible thing, see below...
00033F26 <AmiBlitz3.ab3@26148>   MOVE.l #stacksize,D2
00033F2C <AmiBlitz3.ab3@26149>   MOVE.l #4,D3
00033F30 <AmiBlitz3.ab3@26150>   JSR _Read(A6)
00033F3A <AmiBlitz3.ab3@26151>   CMP.l ##MIN_STACKSIZE,stacksize
00033F3E <AmiBlitz3.ab3@26152>   BGE 'stackok
00033F48 <AmiBlitz3.ab3@26153>   MOVE.l ##MIN_STACKSIZE,stacksize
00033F4A <AmiBlitz3.ab3@26156>   MOVE.l D7,D1
00033F50 <AmiBlitz3.ab3@26157>   MOVE.l #versioninformation,D2
00033F56 <AmiBlitz3.ab3@26158>   MOVE.l #4,D3
00033F5A <AmiBlitz3.ab3@26159>   JSR _Read(A6)
00033F5C <AmiBlitz3.ab3@26161>   MOVE.l D7,D1
00033F62 <AmiBlitz3.ab3@26162>   MOVE.l #number_of_builds,D2
00033F68 <AmiBlitz3.ab3@26163>   MOVE.l #4,D3
00033F6C <AmiBlitz3.ab3@26164>   JSR _Read(A6)
00033F72 <AmiBlitz3.ab3@26170>   MOVE.l A7,errstack
00033F7C <AmiBlitz3.ab3@26171>   MOVE.l #read_xtrafile__done2,errcont
00033F84 <AmiBlitz3.ab3@26172>   MOVE.w #$FFFF,ezerr
00033F8A <AmiBlitz3.ab3@26175>     MOVE.l #temp1,D2                                   ;LOAD maxobjectsvalues
00033F8C <AmiBlitz3.ab3@26176>     MOVEQ.l #$04,D3
00033F8E <AmiBlitz3.ab3@26177>     MOVE.l D7,D1
00033F92 <AmiBlitz3.ab3@26178>     JSR _Read(A6)
00033F94 <AmiBlitz3.ab3@26179>     TST.l D0
00033F98 <AmiBlitz3.ab3@26180>     BEQ.b read_xtrafile__done2
00033F9E <AmiBlitz3.ab3@26181>     MOVE.w temp1,D1
00033FA0 <AmiBlitz3.ab3@26182>     TST.w d1                                               ;new
00033FA4 <AmiBlitz3.ab3@26183>     BEQ read_xtrafile__done2                                         ;new
00033FAA <AmiBlitz3.ab3@26184>      JSR AJL_0_6F1A
00033FB0 <AmiBlitz3.ab3@26186>     CMP.l #0,a1
00033FB4 <AmiBlitz3.ab3@26187>     BEQ read_xtrafile__dloop
00033FB8 <AmiBlitz3.ab3@26188>     MOVE.l $12(A1),D0
00033FC0 <AmiBlitz3.ab3@26189>     MOVE.w temp1+2,-$4(A1,D0.L)
00033FC4 <AmiBlitz3.ab3@26190> BRA.b read_xtrafile__dloop
00033FC8 <AmiBlitz3.ab3@26196>   LEA residents_table(PC),A0
00033FCA <AmiBlitz3.ab3@26197>   MOVEQ.l #$07,D0
00033FCE <AmiBlitz3.ab3@26200>     CLR.l $40(A0)
00033FD2 <AmiBlitz3.ab3@26201>     LEA ResidentEntryStep(A0),A0   ; $44
00033FD6 <AmiBlitz3.ab3@26202>   DBF D0,read_xtrafile__loop3
00033FDA <AmiBlitz3.ab3@26204>   MOVEM.l D7/A6,-(A7)
00033FE0 <AmiBlitz3.ab3@26205>   JSR init_buffers
00033FE6 <AmiBlitz3.ab3@26206>   JSR reloadresident
00033FEA <AmiBlitz3.ab3@26207>   MOVEM.l (A7)+,D7/A6
00033FEC <AmiBlitz3.ab3@26208> RTS
00033FF4 <AmiBlitz3.ab3@26212>   MOVE.b #$1,xtra_versionnumber                            ;.xtra version number...
00033FFA <AmiBlitz3.ab3@26221>   LEA ptr_xtradata,A2
00033FFC <AmiBlitz3.ab3@26222>   MOVEQ.l #$00,D4
00033FFE <AmiBlitz3.ab3@26226>   MOVE.w (A2)+,D4                                          ; anzahl bytes zu schreiben
00034002 <AmiBlitz3.ab3@26227>   BEQ.b write_xtrafile__done
00034004 <AmiBlitz3.ab3@26230>    MOVE.l (A2)+,D2
00034008 <AmiBlitz3.ab3@26231>    BEQ.b write_xtrafile__loop
0003400A <AmiBlitz3.ab3@26233>    MOVE.l D4,D3
0003400C <AmiBlitz3.ab3@26234>    MOVE.l D7,D1                                            ; schreiben der daten in ptr_xtradata
00034010 <AmiBlitz3.ab3@26235>    JSR _Write(A6)                                          ; d1: file, d2: buffer, d3:length
00034014 <AmiBlitz3.ab3@26236> BRA.b write_xtrafile__loop2
00034016 <AmiBlitz3.ab3@26239>   MOVE.l D7,D1
0003401C <AmiBlitz3.ab3@26240>   MOVE.l #str_cliarguments,D2
00034022 <AmiBlitz3.ab3@26241>   MOVE.l #116,D3
00034026 <AmiBlitz3.ab3@26242>   JSR _Write(A6)                                           ; hier werden 116 bytes an cli_arguments geschrieben !!
00034028 <AmiBlitz3.ab3@26244>   MOVE.l D7,D1
0003402E <AmiBlitz3.ab3@26245>   MOVE.l #stacksize,D2
00034034 <AmiBlitz3.ab3@26246>   MOVE.l #4,D3
00034038 <AmiBlitz3.ab3@26247>   JSR _Write(A6)
0003403A <AmiBlitz3.ab3@26249>   MOVE.l D7,D1
00034040 <AmiBlitz3.ab3@26250>   MOVE.l #versioninformation,D2
00034046 <AmiBlitz3.ab3@26251>   MOVE.l #4,D3
0003404A <AmiBlitz3.ab3@26252>   JSR _Write(A6)
0003404C <AmiBlitz3.ab3@26254>   MOVE.l D7,D1
00034052 <AmiBlitz3.ab3@26255>   MOVE.l #number_of_builds,D2
00034058 <AmiBlitz3.ab3@26256>   MOVE.l #4,D3
0003405C <AmiBlitz3.ab3@26257>   JSR _Write(A6)
00034062 <AmiBlitz3.ab3@26263>   LEA libpointer,A2
00034064 <AmiBlitz3.ab3@26266>     MOVE.l (A2),D0
00034068 <AmiBlitz3.ab3@26267>     BEQ.w write_xtrafile__done2
0003406A <AmiBlitz3.ab3@26268>     MOVEA.l D0,A2
0003406E <AmiBlitz3.ab3@26269>     MOVE.l $12(A2),D4
00034072 <AmiBlitz3.ab3@26270>     TST.w -$2(A2,D4.L)
00034076 <AmiBlitz3.ab3@26271>     BEQ.w write_xtrafile__loop3
0003407A <AmiBlitz3.ab3@26273>     LEA $4(A2),A0
0003407C <AmiBlitz3.ab3@26274>     MOVE.l A0,D2
0003407E <AmiBlitz3.ab3@26275>     MOVEQ.l #$02,D3
00034080 <AmiBlitz3.ab3@26276>     MOVE.l D7,D1                                           ; schreiben der Libnum mit 2 bytes
00034084 <AmiBlitz3.ab3@26277>     JSR _Write(A6)                                         ; d1: file, d2: buffer, d3:length
00034088 <AmiBlitz3.ab3@26279>     LEA -$4(A2,D4.L),A0
0003408A <AmiBlitz3.ab3@26280>     MOVE.l A0,D2
0003408C <AmiBlitz3.ab3@26281>     MOVEQ.l #$02,D3
0003408E <AmiBlitz3.ab3@26282>     MOVE.l D7,D1                                           ; schreiben der Max Objects mit 2 bytes
00034092 <AmiBlitz3.ab3@26283>     JSR _Write(A6)                                         ; d1: file, d2: buffer, d3:length
00034096 <AmiBlitz3.ab3@26284> BRA.w write_xtrafile__loop3
0003409C <AmiBlitz3.ab3@26289>   LEA XTRAEndPadBytes,A2 ; get the start address off the 4 fill/pad/termination bytes
0003409E <AmiBlitz3.ab3@26290>   MOVE.l A2,D2           ; move the address to d2
000340A4 <AmiBlitz3.ab3@26291>   MOVE.l #4,D3           ; we only need 4 bytes to save
000340A6 <AmiBlitz3.ab3@26292>   MOVE.l D7,D1           ; we set the file handle
000340AA <AmiBlitz3.ab3@26293>   JSR _Write(A6)         ; and we write it.
000340AC <AmiBlitz3.ab3@26295> RTS
000340B2 <AmiBlitz3.ab3@26300>   LEA optssave,A0                      ; backup address
000340B8 <AmiBlitz3.ab3@26301>   LEA ptr_xtradata,A1                  ; source address
000340BA <AmiBlitz3.ab3@26304>   MOVE.w (A1)+,D0                                          ;length of data move
000340BE <AmiBlitz3.ab3@26305>   BEQ.b 'backupdone
000340C0 <AmiBlitz3.ab3@26306>   SUBQ.w #1,D0
000340C2 <AmiBlitz3.ab3@26309>     MOVE.l (A1)+,D1
000340C6 <AmiBlitz3.ab3@26310>     BEQ.b 'backuploop
000340C8 <AmiBlitz3.ab3@26311>     MOVEA.l D1,A2
000340CA <AmiBlitz3.ab3@26312>     MOVE.w D0,D1
000340CC <AmiBlitz3.ab3@26315>       MOVE.b (A2)+,(A0)+
000340D0 <AmiBlitz3.ab3@26316>   DBF D1,'backuploop3
000340D4 <AmiBlitz3.ab3@26318> BRA.w 'backuploop2
000340DA <AmiBlitz3.ab3@26322>   LEA bufferlist,A1
000340DC <AmiBlitz3.ab3@26325>     MOVE.l (A1)+,D2
000340E0 <AmiBlitz3.ab3@26326>     BEQ.b 'loop4done
000340E2 <AmiBlitz3.ab3@26328>     MOVEA.l D2,A0
000340E4 <AmiBlitz3.ab3@26329>     MOVE.l (A0),D2
000340E6 <AmiBlitz3.ab3@26330>     ADDQ.w #8,A0
000340EC <AmiBlitz3.ab3@26331>     JSR makelong
000340F0 <AmiBlitz3.ab3@26332> BRA.b 'loop4
000340F6 <AmiBlitz3.ab3@26335>   CLR.w state_of_residents                                 ;resident change
000340FC <AmiBlitz3.ab3@26336>   CLR.w comsettings_message                                ;alloc change
00034102 <AmiBlitz3.ab3@26337>   CLR.w maxobject_pos
00034104 <AmiBlitz3.ab3@26338> RTS   ; new tomsmart1
0003410A <AmiBlitz3.ab3@26342>   LEA optssave,A0
00034110 <AmiBlitz3.ab3@26343>   LEA ptr_xtradata,A1
00034112 <AmiBlitz3.ab3@26346>   MOVE.w (A1)+,D0
00034116 <AmiBlitz3.ab3@26347>   BEQ.b 'restoredone
00034118 <AmiBlitz3.ab3@26348>   SUBQ.w #1,D0
0003411A <AmiBlitz3.ab3@26351>     MOVE.l (A1)+,D1
0003411E <AmiBlitz3.ab3@26352>     BEQ.b 'restoreloop1
00034120 <AmiBlitz3.ab3@26353>     MOVEA.l D1,A2
00034122 <AmiBlitz3.ab3@26354>     MOVE.w D0,D1
00034124 <AmiBlitz3.ab3@26357>       MOVE.b (A0)+,(A2)+
00034128 <AmiBlitz3.ab3@26358>   DBF D1,'restoreloop3
0003412C <AmiBlitz3.ab3@26360> BRA.b 'restoreloop2
0003412E <AmiBlitz3.ab3@26363> RTS
00034134 <AmiBlitz3.ab3@26367>   JSR free_residents                    ; first free the allready loaded residents
0003413A <AmiBlitz3.ab3@26368>   JSR Clear_Residents_table             ; second clear the complete resident table
0003413C <AmiBlitz3.ab3@26369> RTS
00034144 <AmiBlitz3.ab3@26373>   MOVE.w #$FFFF,state_of_residents
0003414A <AmiBlitz3.ab3@26374>   MOVE.w state_of_residents,D0
00034150 <AmiBlitz3.ab3@26375>   JSR reloadresident
00034152 <AmiBlitz3.ab3@26376> RTS
00034154 <AmiBlitz3.ab3@26381>   MOVE.l d0,a1
0003415A <AmiBlitz3.ab3@26382>   MOVEA.l libpointer,A2
0003415E <AmiBlitz3.ab3@26385>     MOVE.l $12(A2),D0
00034162 <AmiBlitz3.ab3@26386>     TST.w -$2(A2,D0.L)
00034166 <AmiBlitz3.ab3@26387>      BEQ.w JL_0_102AAa
00034168 <AmiBlitz3.ab3@26388>     SUBQ.w #1,D1
0003416C <AmiBlitz3.ab3@26389>      BPL.w JL_0_102AAa
00034170 <AmiBlitz3.ab3@26390>     MOVEA.l -$1A(A2,D0.L),A3
00034172 <AmiBlitz3.ab3@26391>     ADDA.l A2,A3
00034174 <AmiBlitz3.ab3@26394>       MOVE.b (A3)+,(A1)+
00034178 <AmiBlitz3.ab3@26395>     BNE.w JL_0_10294a
0003417A <AmiBlitz3.ab3@26397>     CLR.b -(A1)
0003417E <AmiBlitz3.ab3@26398>     MOVE.w -$4(A2,D0.L),D0
00034184 <AmiBlitz3.ab3@26399>     AND.l #$ffff,d0
00034186 <AmiBlitz3.ab3@26400> RTS
00034188 <AmiBlitz3.ab3@26403>     MOVEA.l (A2),A2
0003418C <AmiBlitz3.ab3@26404> BRA.w JL_0_1027Ca
0003419C <AmiBlitz3.ab3@26409> str_maxobjects_name:   Dc.b "              ",0 : Even
000341AC <AmiBlitz3.ab3@26410> str_maxobjects_name2:  Dc.b "              ",0 : Even
000341B0 <AmiBlitz3.ab3@26411> objectbuffer:          Dc.l $00004000
000341B4 <AmiBlitz3.ab3@26412>                        Dc.l $00000000
000341C0 <AmiBlitz3.ab3@26413> str_objectbuffer:      Dc.b "16384",0,0,0,0,0,0,0      ; string max 12 columns
000341C4 <AmiBlitz3.ab3@26415> libsbuffer:            Dc.l $00008000
000341C8 <AmiBlitz3.ab3@26416>                        Dc.l $00000000
000341D4 <AmiBlitz3.ab3@26417> str_libsbuffer:        Dc.b "32768",0,0,0,0,0,0,0      ;was "16384"; string max 12 columns
000341D8 <AmiBlitz3.ab3@26419> systembuffer:          Dc.l $00001000                      ; systen buffer
000341DC <AmiBlitz3.ab3@26420>                        Dc.l $00000000
000341E8 <AmiBlitz3.ab3@26421> str_systembuffer:      Dc.b "4096",0,0,0,0,0,0,0,0     ; string max 12 columns
000341EC <AmiBlitz3.ab3@26423> databuffer:            Dc.l $00001000                      ; data buffer
000341F0 <AmiBlitz3.ab3@26424>                        Dc.l $00000000
000341FC <AmiBlitz3.ab3@26425> str_databuffer:        Dc.b "4096",0,0,0,0,0,0,0,0     ; string max 12 columns
00034200 <AmiBlitz3.ab3@26427> macrobuffer_size:      Dc.l $00002000                      ; macro buffer
00034204 <AmiBlitz3.ab3@26428>                        Dc.l $00000000
00034210 <AmiBlitz3.ab3@26429> str_macrobuffer:       Dc.b "8192",0,0,0,0,0,0,0,0     ; string max 12 columns
00034214 <AmiBlitz3.ab3@26431> stringbuffer:          Dc.l $00002800                      ; string buffer
00034218 <AmiBlitz3.ab3@26432>                        Dc.l $00000000
00034224 <AmiBlitz3.ab3@26433> str_stringbuffer:      Dc.b "10240",0,0,0,0,0,0,0      ; string max 12 columns
00034226 <AmiBlitz3.ab3@26435> maxobjects_value:      Dc.w $0064
0003422A <AmiBlitz3.ab3@26436>                        Dc.l $00000000
00034236 <AmiBlitz3.ab3@26437> str_maxobjects_value:  Dc.b "100",0,0,0,0,0,0,0,0,0    ; string max 12 columns
00034238 <AmiBlitz3.ab3@26439> maxobjects_value2:     Dc.w $0014
0003423A <AmiBlitz3.ab3@26440>                        Dc.w $0000
00034246 <AmiBlitz3.ab3@26442> str_maxobjects_value2: Dc.b "20",0,0,0,0,0,0,0,0,0,0   ; string max 12 columns
00034247 <AmiBlitz3.ab3@26446> set_create_iconfile:   Dc.b $00
0003424A <AmiBlitz3.ab3@26447> create_iconfile:       Dc.b $80,$01,$01                    ;create icon
0003424C <AmiBlitz3.ab3@26448>                        Dc.b $00,$01
0003424D <AmiBlitz3.ab3@26450> set_use_debugger:      Dc.b $00                            ; Flags.w
00034250 <AmiBlitz3.ab3@26451> use_debugger:          Dc.b $80,$01,$01                    ; Activation.w
00034252 <AmiBlitz3.ab3@26452>                        Dc.b $00,$01                        ; GadgetType.w
00034256 <AmiBlitz3.ab3@26453> AL_0_11010:            Dc.b $00,$80,$01,$01                ; flags, activation
0003425A <AmiBlitz3.ab3@26454> AL_0_1103C:            Dc.b $00,$80,$01,$01                ; flags, activation
0003425E <AmiBlitz3.ab3@26455> AL_0_11068:            Dc.b $00,$80,$01,$01                ; flags, activation
00034260 <AmiBlitz3.ab3@26456> AL_0_11094:            Ds.w 1
00034261 <AmiBlitz3.ab3@26458> set_make_smallestcode: Ds.b 1
00034264 <AmiBlitz3.ab3@26459> make_smallestcode:     Dc.b $00,$01,$01                    ;make smallest
00034266 <AmiBlitz3.ab3@26460>                        Dc.b $00,$01
00034267 <AmiBlitz3.ab3@26461> set_link_debuginfo:    Ds.b 1
0003426A <AmiBlitz3.ab3@26462> link_debuginfo:        Dc.b $00,$01,$01                    ;create debuginfo
0003426C <AmiBlitz3.ab3@26463>                        Dc.b $00,$01
0003448C <AmiBlitz3.ab3@26468>   Ds.l 136         ;resident files STEP $44 piece 8
0003450C <AmiBlitz3.ab3@26473> str_calcexpression:        Ds.l 32
00034510 <AmiBlitz3.ab3@26474> destbufferend_backup_calc: Ds.l 1
0003451A <AmiBlitz3.ab3@26479>   MOVE.l destbufferend,destbufferend_backup_calc
00034520 <AmiBlitz3.ab3@26480>   MOVE.l A7,errstack
0003452A <AmiBlitz3.ab3@26481>   MOVE.l #Calc_Error_Exit,errcont
00034554 <AmiBlitz3.ab3@26488>   !basic         ; get the flage for the conversion form the editor
00034598 <AmiBlitz3.ab3@26489>   !ComData_GetW{comWord_CalculatorButtonBinFlag,D0} : MOVE.w d0,CalculatorButtonBinFlag
000345DC <AmiBlitz3.ab3@26490>   !ComData_GetW{comWord_CalculatorButtonDecFlag,D0} : MOVE.w d0,CalculatorButtonDecFlag
000345FA <AmiBlitz3.ab3@26491>   !asm
00034600 <AmiBlitz3.ab3@26493>   LEA str_calcexpression,A0
00034606 <AmiBlitz3.ab3@26502>   JSR setcvars
0003460C <AmiBlitz3.ab3@26503>   JSR setsvars
00034612 <AmiBlitz3.ab3@26504>   CLR.w connest
00034618 <AmiBlitz3.ab3@26505>   LEA str_calcexpression,A5
0003461E <AmiBlitz3.ab3@26506>   JSR AJL_0_BF6E
00034624 <AmiBlitz3.ab3@26507>   LEA str_calcexpression,A0
00034626 <AmiBlitz3.ab3@26508>   TST.l D3
0003462A <AmiBlitz3.ab3@26509>    BPL.w JL_0_11AE8
0003462E <AmiBlitz3.ab3@26510>   MOVE.b #$2D,(A0)+
00034630 <AmiBlitz3.ab3@26511>   NEG.l D3
00034638 <AmiBlitz3.ab3@26514>   CMPI.w #$80,CalculatorButtonDecFlag
0003463C <AmiBlitz3.ab3@26515>    BEQ.w JL_0_11B74
0003463E <AmiBlitz3.ab3@26516>   MOVEQ.l #$00,D1
00034646 <AmiBlitz3.ab3@26517>   CMPI.w #$80,CalculatorButtonBinFlag
0003464A <AmiBlitz3.ab3@26518>    BNE.w JL_0_11B36
0003464C <AmiBlitz3.ab3@26519>   MOVEQ.l #$1F,D0
00034650 <AmiBlitz3.ab3@26520>   MOVE.b #$25,(A0)+
00034652 <AmiBlitz3.ab3@26523>       LSL.l #1,D3
00034656 <AmiBlitz3.ab3@26524>        BCC.w JL_0_11B18
0003465A <AmiBlitz3.ab3@26525>       MOVE.b #"1",(A0)+
0003465C <AmiBlitz3.ab3@26526>       MOVEQ.l #-$01,D1
00034660 <AmiBlitz3.ab3@26527>   BRA.w JL_0_11B22
00034662 <AmiBlitz3.ab3@26530>       TST.w D1
00034666 <AmiBlitz3.ab3@26531>       BEQ.w JL_0_11B22
0003466A <AmiBlitz3.ab3@26532>       MOVE.b #"0",(A0)+
0003466E <AmiBlitz3.ab3@26535>  DBF D0,JL_0_11B08
00034670 <AmiBlitz3.ab3@26538>   TST.w D1
00034674 <AmiBlitz3.ab3@26539>   BNE.w JL_0_11B30
00034678 <AmiBlitz3.ab3@26540>   MOVE.b #"0",(A0)+
0003467A <AmiBlitz3.ab3@26543>   CLR.b (A0)
0003467E <AmiBlitz3.ab3@26544> BRA.w JL_0_11B7C
00034680 <AmiBlitz3.ab3@26547>   MOVEQ.l #$07,D0
00034684 <AmiBlitz3.ab3@26548>   MOVE.b #$24,(A0)+
00034686 <AmiBlitz3.ab3@26551>     MOVE.l D3,D2
00034688 <AmiBlitz3.ab3@26552>     SWAP D2
0003468A <AmiBlitz3.ab3@26553>     LSR.w #8,D2
0003468C <AmiBlitz3.ab3@26554>     LSR.w #4,D2
00034690 <AmiBlitz3.ab3@26555>     ADDI.w #$30,D2
00034694 <AmiBlitz3.ab3@26556>     CMP.w #$3A,D2
00034698 <AmiBlitz3.ab3@26557>      BCS.w JL_0_11B52
0003469A <AmiBlitz3.ab3@26558>     ADDQ.w #7,D2
0003469E <AmiBlitz3.ab3@26561>     CMP.w #$30,D2
000346A2 <AmiBlitz3.ab3@26562>     BEQ.w JL_0_11B62
000346A4 <AmiBlitz3.ab3@26563>     MOVE.b D2,(A0)+
000346A6 <AmiBlitz3.ab3@26564>     MOVEQ.l #-$01,D1
000346AA <AmiBlitz3.ab3@26565>   BRA.w JL_0_11B6A
000346AC <AmiBlitz3.ab3@26568>     TST.w D1
000346B0 <AmiBlitz3.ab3@26569>      BEQ.w JL_0_11B6A
000346B2 <AmiBlitz3.ab3@26570>     MOVE.b D2,(A0)+
000346B4 <AmiBlitz3.ab3@26573>     LSL.l #4,D3
000346B8 <AmiBlitz3.ab3@26574>  DBF D0,JL_0_11B3C
000346BC <AmiBlitz3.ab3@26576> BRA.w JL_0_11B26
000346BE <AmiBlitz3.ab3@26579>   MOVE.l D3,D2
000346C4 <AmiBlitz3.ab3@26580>   JSR makelong
000346CE <AmiBlitz3.ab3@26587>   MOVE.l destbufferend_backup_calc,destbufferend
000346D0 <AmiBlitz3.ab3@26589> RTS                         ; added tomsmart 2012 03 07 vor Calculator in PED
000347CF <AmiBlitz3.ab3@26593> str_cliarguments: Ds.b 255   ; a command line can acutally be 255 characters long
000347D0 <AmiBlitz3.ab3@26595> Even
000347D2 <AmiBlitz3.ab3@26609>     MOVE.b (a5)+,d0
000347D6 <AmiBlitz3.ab3@26610>     BEQ 'l2
000347DA <AmiBlitz3.ab3@26611>     CMP.b #$80,d0
000347DE <AmiBlitz3.ab3@26612>     BNE 'l1
000347E0 <AmiBlitz3.ab3@26613>     MOVE.b (a5)+,d0
000347E4 <AmiBlitz3.ab3@26614>     BEQ 'l2
000347E8 <AmiBlitz3.ab3@26615>     CMP.b #$02,d0
000347EC <AmiBlitz3.ab3@26616>   BNE 'l1
000347F0 <AmiBlitz3.ab3@26619>     CMP.b #$20,(a5)+
000347F4 <AmiBlitz3.ab3@26620>   BEQ 'l3
000347F6 <AmiBlitz3.ab3@26621>   SUBQ.l #1,a5
000347F8 <AmiBlitz3.ab3@26622>   TST.b (a5)
000347FC <AmiBlitz3.ab3@26623>   BEQ 'l2
00034800 <AmiBlitz3.ab3@26624>   CMP.w #$8008,(a5)
00034804 <AmiBlitz3.ab3@26625>   BEQ 'l4
00034808 <AmiBlitz3.ab3@26626>   CMP.w #$8009,(a5)
0003480C <AmiBlitz3.ab3@26627>   BEQ 'l4
00034810 <AmiBlitz3.ab3@26628> BRA 'l1
00034812 <AmiBlitz3.ab3@26631>   ADDQ.l #2,a5
00034818 <AmiBlitz3.ab3@26632>   JSR skiprest
0003481A <AmiBlitz3.ab3@26633> RTS
00034820 <AmiBlitz3.ab3@26636>   JSR nextline
00034824 <AmiBlitz3.ab3@26637>   BNE 'l1
00034826 <AmiBlitz3.ab3@26638> RTS
00034850 <AmiBlitz3.ab3@26642>   !basic
0003485A <AmiBlitz3.ab3@26643>   DateFormat 1
00034868 <AmiBlitz3.ab3@26644>   i.l=SystemDate
0003488E <AmiBlitz3.ab3@26645>   a$=Date$ (i)
0003490C <AmiBlitz3.ab3@26646>   a$=Replace$(a$,"/",".")
00034912 <AmiBlitz3.ab3@26647>   GetD0 &a$
00034914 <AmiBlitz3.ab3@26648>   MOVEQ #8,d2
00034916 <AmiBlitz3.ab3@26649>   MOVE.l d0,a0
00034918 <AmiBlitz3.ab3@26652>     MOVE.b (a0)+,d1
0003491E <AmiBlitz3.ab3@26653>     JSR pokedata1b
00034922 <AmiBlitz3.ab3@26654>  DBF d2,'l1
00034924 <AmiBlitz3.ab3@26656>   MOVEQ #0,d0
00034926 <AmiBlitz3.ab3@26657>   MOVE.b (a0)+,d0
00034944 <AmiBlitz3.ab3@26658>   !asm
0003494A <AmiBlitz3.ab3@26659>   ADD.l #9,d2
00034950 <AmiBlitz3.ab3@26660>   ADD.l #9,a5
00034952 <AmiBlitz3.ab3@26661> RTS
0003497C <AmiBlitz3.ab3@26665>   !basic
00034986 <AmiBlitz3.ab3@26666>   DateFormat 0
00034994 <AmiBlitz3.ab3@26667>   i.l=SystemDate
000349BA <AmiBlitz3.ab3@26668>   a$=Date$ (i)
00034A38 <AmiBlitz3.ab3@26669>   a$=Replace$(a$,"/",".")
00034A3E <AmiBlitz3.ab3@26670>   GetD0 &a$
00034A40 <AmiBlitz3.ab3@26671>   MOVEQ #8,d2
00034A42 <AmiBlitz3.ab3@26672>   MOVE.l d0,a0
00034A44 <AmiBlitz3.ab3@26675>     MOVE.b (a0)+,d1
00034A4A <AmiBlitz3.ab3@26676>     JSR pokedata1b
00034A4E <AmiBlitz3.ab3@26677>  DBF d2,'l1
00034A50 <AmiBlitz3.ab3@26679>   MOVEQ #0,d0
00034A52 <AmiBlitz3.ab3@26680>   MOVE.b (a0)+,d0
00034A70 <AmiBlitz3.ab3@26681>   !asm
00034A76 <AmiBlitz3.ab3@26682>   ADD.l #9,d2
00034A7C <AmiBlitz3.ab3@26683>   ADD.l #13,a5
00034A7E <AmiBlitz3.ab3@26684> RTS
00034AA8 <AmiBlitz3.ab3@26688>   !basic
00034AB2 <AmiBlitz3.ab3@26689>   DateFormat 1
00034AC0 <AmiBlitz3.ab3@26690>   i.l = SystemDate
00034AE6 <AmiBlitz3.ab3@26691>   a$ = Date$ (i)
00034B64 <AmiBlitz3.ab3@26692>   a$ = Replace$(a$,"/",".")
00034B6A <AmiBlitz3.ab3@26693>   GetD0 &a$
00034B6C <AmiBlitz3.ab3@26694>   MOVEQ #8,d2
00034B6E <AmiBlitz3.ab3@26695>   MOVE.l d0,a0
00034B70 <AmiBlitz3.ab3@26698>     MOVE.b (a0)+,d1
00034B76 <AmiBlitz3.ab3@26699>     JSR writebyte
00034B7A <AmiBlitz3.ab3@26700>  DBF d2,'l1
00034B7C <AmiBlitz3.ab3@26702>   MOVEQ #0,d0
00034B7E <AmiBlitz3.ab3@26703>   MOVE.b (a0)+,d0
00034B9C <AmiBlitz3.ab3@26704>   !asm
00034BA2 <AmiBlitz3.ab3@26705>   ADD.l #9,a5
00034BA4 <AmiBlitz3.ab3@26706> RTS
00034BCE <AmiBlitz3.ab3@26710>   !basic
00034BD8 <AmiBlitz3.ab3@26711>   DateFormat 0
00034BE6 <AmiBlitz3.ab3@26712>   i.l=SystemDate
00034C0C <AmiBlitz3.ab3@26713>   a$=Date$ (i)
00034C8A <AmiBlitz3.ab3@26714>   a$=Replace$(a$,"/",".")
00034C90 <AmiBlitz3.ab3@26715>   GetD0 &a$
00034C92 <AmiBlitz3.ab3@26716>   MOVEQ #8,d2
00034C94 <AmiBlitz3.ab3@26717>   MOVE.l d0,a0
00034C96 <AmiBlitz3.ab3@26720>     MOVE.b (a0)+,d1
00034C9C <AmiBlitz3.ab3@26721>     JSR writebyte
00034CA0 <AmiBlitz3.ab3@26722>  DBF d2,'l1
00034CA2 <AmiBlitz3.ab3@26724>   MOVEQ #0,d0
00034CA4 <AmiBlitz3.ab3@26725>   MOVE.b (a0)+,d0
00034CC2 <AmiBlitz3.ab3@26726>   !asm
00034CC8 <AmiBlitz3.ab3@26727>   ADD.l #13,a5
00034CCA <AmiBlitz3.ab3@26728> RTS
00034CCC <AmiBlitz3.ab3@26732>   MOVE.l d2,-(a7)                                          ; D2 -> stack
00034CCE <AmiBlitz3.ab3@26733>   MOVE.l a5,d0
00034CF8 <AmiBlitz3.ab3@26734>   !basic
00034CFC <AmiBlitz3.ab3@26735>   _myD0.l = PutD0
00034D06 <AmiBlitz3.ab3@26736>   If _myD0
00034D4C <AmiBlitz3.ab3@26737>     verstring$ = Left$(Peek.s(_myD0),9+3)
00034D9E <AmiBlitz3.ab3@26738>     verstring$ = UnRight$(verstring$,3)                      ; Compilerkonstantenbeginn \__ entfernen
00034DA4 <AmiBlitz3.ab3@26739>   Else
00034DDE <AmiBlitz3.ab3@26740>     error{"INTERNAL: Invalid pointer in version_string!"}
00034DEE <AmiBlitz3.ab3@26745>   actual_version.l = Peek.l(?versioninformation)
00034DFE <AmiBlitz3.ab3@26746>   actual_build.l   = Peek.l(?number_of_builds)
00034E22 <AmiBlitz3.ab3@26748>   Format "00"
00034E58 <AmiBlitz3.ab3@26749>   Select verstring$
00034E7C <AmiBlitz3.ab3@26751>     Case "VER_MAJOR"
00034EB8 <AmiBlitz3.ab3@26752>      put_versionstr$ = Str$(actual_version LSR 24)
00034EE2 <AmiBlitz3.ab3@26754>     Case "VER_MINOR"
00034F26 <AmiBlitz3.ab3@26755>      put_versionstr$ = Str$((actual_version LSL 8) LSR 24)
00034F50 <AmiBlitz3.ab3@26757>     Case "VER_PATCH"
00034F94 <AmiBlitz3.ab3@26758>      put_versionstr$ = Str$((actual_version LSL 16) LSR 24 )
00034FBE <AmiBlitz3.ab3@26760>     Case "VER_BUILD"
00034FE2 <AmiBlitz3.ab3@26761>      Format ""
00035016 <AmiBlitz3.ab3@26762>      put_versionstr$ = Str$(actual_build)
0003501C <AmiBlitz3.ab3@26764>     Default
00035044 <AmiBlitz3.ab3@26765>      put_versionstr$ = "{unknown compilerconstant}"
00035052 <AmiBlitz3.ab3@26768>   End Select
00035076 <AmiBlitz3.ab3@26769>   Format ""
00035086 <AmiBlitz3.ab3@26771>   GetD0 FLen(put_versionstr$)                              ; laenge zielstring -> Stack
00035088 <AmiBlitz3.ab3@26772>   MOVE.l d0,d2
0003508A <AmiBlitz3.ab3@26773>   MOVE.l d2,-(a7)
0003508E <AmiBlitz3.ab3@26774>   SUB #1,d2
00035094 <AmiBlitz3.ab3@26776>   GetD0 &put_versionstr$                                   ; kopieren des neuen Strings in den Zielstring
00035096 <AmiBlitz3.ab3@26777>   MOVE.l d0,a0
00035098 <AmiBlitz3.ab3@26780>     MOVE.b (a0)+,d1
0003509E <AmiBlitz3.ab3@26781>     JSR pokedata1b
000350A2 <AmiBlitz3.ab3@26782>  DBF d2,'l1
000350A4 <AmiBlitz3.ab3@26784>   MOVEQ #0,d0
000350C2 <AmiBlitz3.ab3@26785>   !asm
000350C4 <AmiBlitz3.ab3@26786>   MOVE.l (a7)+,d0                                          ; laenge Zielstring <- Stack
000350C6 <AmiBlitz3.ab3@26787>   MOVE.l (a7)+,d2                                          ; d2 <-Stack
000350C8 <AmiBlitz3.ab3@26788>   ADD.l d0,d2
000350CE <AmiBlitz3.ab3@26789>   ADD.l #12,a5                                             ; string_ptr um konstante weitersetzen
000350D0 <AmiBlitz3.ab3@26790>   MOVEQ #0,d0
000350D2 <AmiBlitz3.ab3@26791> RTS
000350D4 <AmiBlitz3.ab3@26795>   MOVE.l a5,d0
000350FE <AmiBlitz3.ab3@26796>   !basic
00035102 <AmiBlitz3.ab3@26797>   _myD0.l = PutD0
0003510C <AmiBlitz3.ab3@26798>   If _myD0
00035152 <AmiBlitz3.ab3@26799>     verstring$ = Left$(Peek.s(_myD0),9+3)
000351A4 <AmiBlitz3.ab3@26800>     verstring$ = UnRight$(verstring$,3)                      ; Compilerkonstantenbeginn \__ entfernen
000351AA <AmiBlitz3.ab3@26801>   Else
000351E4 <AmiBlitz3.ab3@26802>     error{"INTERNAL: Invalid pointer in version_string_dc!"}
000351F4 <AmiBlitz3.ab3@26807>   actual_version.l = Peek.l(?versioninformation)
00035204 <AmiBlitz3.ab3@26808>   actual_build.l   = Peek.l(?number_of_builds)
00035228 <AmiBlitz3.ab3@26810>   Format ""
0003525E <AmiBlitz3.ab3@26811>   Select verstring$
00035282 <AmiBlitz3.ab3@26813>     Case "VER_MAJOR"
000352BE <AmiBlitz3.ab3@26814>      put_versionstr$ = Str$(actual_version LSR 24)
000352E8 <AmiBlitz3.ab3@26816>     Case "VER_MINOR"
0003532C <AmiBlitz3.ab3@26817>      put_versionstr$ = Str$((actual_version LSL 8) LSR 24)
00035356 <AmiBlitz3.ab3@26819>     Case "VER_PATCH"
0003539A <AmiBlitz3.ab3@26820>      put_versionstr$ = Str$((actual_version LSL 16) LSR 24 )
000353C4 <AmiBlitz3.ab3@26822>     Case "VER_BUILD"
000353E8 <AmiBlitz3.ab3@26823>      Format ""
0003541C <AmiBlitz3.ab3@26824>      put_versionstr$ = Str$(actual_build)
00035422 <AmiBlitz3.ab3@26826>     Default
0003544A <AmiBlitz3.ab3@26827>      put_versionstr$ = "{unknown compilerconstant}"
00035458 <AmiBlitz3.ab3@26829>   End Select
0003547C <AmiBlitz3.ab3@26830>   Format ""
00035492 <AmiBlitz3.ab3@26832>   GetD0 FLen(put_versionstr$)-1
00035494 <AmiBlitz3.ab3@26833>   MOVE.l d0,d2
0003549A <AmiBlitz3.ab3@26835>   GetD0 &put_versionstr$                                   ; kopieren des neuen Strings in den Zielstring
0003549C <AmiBlitz3.ab3@26836>   MOVE.l d0,a0
0003549E <AmiBlitz3.ab3@26839>     MOVE.b (a0)+,d1
000354A4 <AmiBlitz3.ab3@26840>     JSR writebyte
000354A8 <AmiBlitz3.ab3@26841>  DBF d2,'l1
000354AA <AmiBlitz3.ab3@26843>   MOVEQ #0,d0
000354AC <AmiBlitz3.ab3@26844>   MOVE.b -(a0),d0                                          ; letztes Zeichen in D0
000354CA <AmiBlitz3.ab3@26845>   !asm
000354D0 <AmiBlitz3.ab3@26846>   ADD.l #12,a5                                             ; string_ptr um konstante weitersetzen
000354D2 <AmiBlitz3.ab3@26847> RTS
000354D4 <AmiBlitz3.ab3@26949>  MOVE.l a5,-(a7)
00035500 <AmiBlitz3.ab3@26950>  !fget
00035504 <AmiBlitz3.ab3@26951>  CMP.w #".",d0
00035508 <AmiBlitz3.ab3@26952>  BNE 'skip
0003550C <AmiBlitz3.ab3@26953>  MOVEM.l a2/d2,-(a7)
00035512 <AmiBlitz3.ab3@26954>  LEA newtypebase,a2
00035518 <AmiBlitz3.ab3@26955>  JSR getparameter2
0003551C <AmiBlitz3.ab3@26956>  BEQ.w JUMP_syntaxerr
00035522 <AmiBlitz3.ab3@26957>  JSR findtype
00035526 <AmiBlitz3.ab3@26958>  BNE.w JUMP_notypeerr
0003552C <AmiBlitz3.ab3@26959>  MOVE.l a2,typetocast
00035530 <AmiBlitz3.ab3@26960>  MOVEM.l (a7)+,a2/d2
00035534 <AmiBlitz3.ab3@26961>  CMP.w #")",d0
00035538 <AmiBlitz3.ab3@26962>  BNE JUMP_errorbracketmiss
0003553A <AmiBlitz3.ab3@26963>  ADDQ.l #4,a7
00035566 <AmiBlitz3.ab3@26964>  !fget
0003556C <AmiBlitz3.ab3@26965>  JMP nocast
0003556E <AmiBlitz3.ab3@26967> 'skip MOVE.l (a7)+,a5
00035574 <AmiBlitz3.ab3@26968>  JMP JL_0_A410
0003557A <AmiBlitz3.ab3@26970> JUMP_errorbracketmiss JMP errorbracketmiss
000355A4 <AmiBlitz3.ab3@26972> Function.l ab3_GetIncludeLock{filename.s}
000355C4 <AmiBlitz3.ab3@26973>   incLock.l  = Lock_ (&filename,#ACCESS_READ)   ; try bla.blub
0003561C <AmiBlitz3.ab3@26974>   ex.s       = dos_GetExt{filename}
00035630 <AmiBlitz3.ab3@26976>   If incLock = False
000356A4 <AmiBlitz3.ab3@26977>     filename = dos_SetExt{filename,"ab3"}
000356C4 <AmiBlitz3.ab3@26978>     incLock  = Lock_ (&filename,#ACCESS_READ)   ; try bla.ab3
000356D8 <AmiBlitz3.ab3@26981>   If incLock = False
0003574C <AmiBlitz3.ab3@26982>     filename = dos_SetExt{filename,"ab2"}
0003576C <AmiBlitz3.ab3@26983>     incLock  = Lock_ (&filename,#ACCESS_READ)   ; try bla.ab2
00035780 <AmiBlitz3.ab3@26986>   If incLock = False
000357F4 <AmiBlitz3.ab3@26987>     filename = dos_SetExt{filename,"bb2"}
00035814 <AmiBlitz3.ab3@26988>     incLock  = Lock_ (&filename,#ACCESS_READ)   ; try bla.bb2
00035828 <AmiBlitz3.ab3@26991>   If incLock = False
000358BA <AmiBlitz3.ab3@26992>     filename = dos_SetExt{filename,ex+".ab3"}
000358DA <AmiBlitz3.ab3@26993>     incLock  = Lock_ (&filename,#ACCESS_READ)   ; try bla.blub.ab3
000358EE <AmiBlitz3.ab3@26996>   If incLock = False
00035962 <AmiBlitz3.ab3@26997>     filename = dos_SetExt{filename,"ab2"}
00035982 <AmiBlitz3.ab3@26998>     incLock  = Lock_ (&filename,#ACCESS_READ)   ; try bla.blub.ab2
00035996 <AmiBlitz3.ab3@27001>   If incLock = False
00035A0A <AmiBlitz3.ab3@27002>     filename = dos_SetExt{filename,"bb2"}
00035A2A <AmiBlitz3.ab3@27003>     incLock  = Lock_ (&filename,#ACCESS_READ)   ; try bla.blub.bb2
00035A34 <AmiBlitz3.ab3@27006>  Function Return incLock
00035A4E <AmiBlitz3.ab3@27007> End Function
00035A78 <AmiBlitz3.ab3@27011>   !basic
00035AA2 <AmiBlitz3.ab3@27012>   incString.s = Peek$(?ptr_parameterstore)
00035AD0 <AmiBlitz3.ab3@27014>   !ComData_LEA{comStr_CurrentDir,D0}                        ; get pointer to current Sourcefiledir
00035AD4 <AmiBlitz3.ab3@27015>   incDirP.l   = PutD0                                       ;    "
00035AFC <AmiBlitz3.ab3@27016>   incDir_.s   = Peek.s(incDirP)                             ; get current Sourcefiledir
00035B7C <AmiBlitz3.ab3@27017>   incFile.s   = dos_AddPart{incDir_,incString}              ; adding Sourcefiledir and Includestring
00035BAE <AmiBlitz3.ab3@27018>   incLock.l   = ab3_GetIncludeLock{incFile}                 ; check if file exist
00035BC2 <AmiBlitz3.ab3@27020>   If incLock = False ; not found => check default Include Directory
00035BD2 <AmiBlitz3.ab3@27021>     incDirP.l = Peek.l(?incd)
00035BDC <AmiBlitz3.ab3@27022>     If incDirP
00035C04 <AmiBlitz3.ab3@27023>       incDir_.s = Peek.s(incDirP)
00035C0A <AmiBlitz3.ab3@27024>     Else
00035C74 <AmiBlitz3.ab3@27025>       incDir_.s = dos_AddPart{Peek.s(?str_blitz3assign),"Sourcecodes/Includes"}
00035CF4 <AmiBlitz3.ab3@27027>     incFile.s = dos_AddPart{incDir_,incString}
00035D26 <AmiBlitz3.ab3@27028>     incLock.l = ab3_GetIncludeLock{incFile}
00035D3A <AmiBlitz3.ab3@27031>   If incLock = False ; not found => check relative to current source
00035D52 <AmiBlitz3.ab3@27032>     incDepth.l = Peek.w(?ininclude)-1
00035D78 <AmiBlitz3.ab3@27033>     If incDepth >= 0 AND incDepth < #maxincludes
00035DD8 <AmiBlitz3.ab3@27034>       incDir_.s = dos_PathPart{incdim (incDepth)} ;= Peek.s(?includetemp2)
00035E58 <AmiBlitz3.ab3@27035>       incFile.s = dos_AddPart{incDir_,incString}
00035E8A <AmiBlitz3.ab3@27036>       incLock.l = ab3_GetIncludeLock{incFile}
00035E9E <AmiBlitz3.ab3@27040>   If incLock = False ; still not found => check default Include Directory and name only
00035EAE <AmiBlitz3.ab3@27041>     incDirP.l = Peek.l(?incd)
00035EB8 <AmiBlitz3.ab3@27042>     If incDirP
00035EE0 <AmiBlitz3.ab3@27043>       incDir_.s = Peek.s(incDirP)
00035EE6 <AmiBlitz3.ab3@27044>     Else
00035F50 <AmiBlitz3.ab3@27045>       incDir_.s = dos_AddPart{Peek.s(?str_blitz3assign),"Sourcecodes/Includes"}
00035FFE <AmiBlitz3.ab3@27047>     incFile.s = dos_AddPart{incDir_,dos_FilePart{incString}}
00036030 <AmiBlitz3.ab3@27048>     incLock.l = ab3_GetIncludeLock{incFile}
0003603A <AmiBlitz3.ab3@27051>   If incLock
00036050 <AmiBlitz3.ab3@27052>     MaxLen incFile = 1024
00036074 <AmiBlitz3.ab3@27053>     NameFromLock_ incLock,&incFile,1024
0003609E <AmiBlitz3.ab3@27054>     incFile = Peek.s(&incFile)
000360D6 <AmiBlitz3.ab3@27055>     Poke$ ?ptr_parameterstore,incFile
000360EA <AmiBlitz3.ab3@27056>     i = FLen(incFile)
000360F6 <AmiBlitz3.ab3@27057>     GetReg d0,i
000360FC <AmiBlitz3.ab3@27058>     MOVE.l d0,tempstore
0003610C <AmiBlitz3.ab3@27059>     UnLock_ incLock
0003612A <AmiBlitz3.ab3@27062>   !asm
00036130 <AmiBlitz3.ab3@27063>   TST.l tempstore
00036134 <AmiBlitz3.ab3@27064>    BEQ 'l1
0003613A <AmiBlitz3.ab3@27065>   MOVE.l tempstore,d2
0003613C <AmiBlitz3.ab3@27068> RTS
00036166 <AmiBlitz3.ab3@27072>   !basic
00036190 <AmiBlitz3.ab3@27073>   incString.s = Peek$(?ptr_parameterstore)                  ; get the string
000361BE <AmiBlitz3.ab3@27074>   !ComData_LEA{comStr_CurrentDir,D0}                        ; get pointer to current Sourcefiledir
000361C2 <AmiBlitz3.ab3@27075>   incDirP.l   = PutD0                                       ;    "
000361EA <AmiBlitz3.ab3@27076>   incDir_.s   = Peek.s(incDirP)                             ; get current Sourcefiledir
0003626A <AmiBlitz3.ab3@27077>   incFile.s   = dos_AddPart{incDir_,incString}              ; adding Sourcefiledir and Includestring
0003628A <AmiBlitz3.ab3@27078>   incLock.l   = Lock_(&incFile,#ACCESS_READ)                ; check if file exist
0003629E <AmiBlitz3.ab3@27080>   If incLock = False                                        ; not found => try orignal string only to find
000362BE <AmiBlitz3.ab3@27081>     incLock.l = Lock_(&incString,#ACCESS_READ)
000362C8 <AmiBlitz3.ab3@27084>   If incLock                                                ; found => store full path
000362DE <AmiBlitz3.ab3@27085>     MaxLen incFile = 1024
00036302 <AmiBlitz3.ab3@27086>     NameFromLock_ incLock,&incFile,1024
0003632C <AmiBlitz3.ab3@27087>     incFile = Peek.s(&incFile)
00036364 <AmiBlitz3.ab3@27088>     Poke$ ?ptr_parameterstore,incFile
00036370 <AmiBlitz3.ab3@27091> 
0003638E <AmiBlitz3.ab3@27092>   !asm
00036390 <AmiBlitz3.ab3@27093> RTS
00036396 <AmiBlitz3.ab3@27104>   JSR Aclearallvars
0003639C <AmiBlitz3.ab3@27105>   JSR free_unusedfunctions
000363A6 <AmiBlitz3.ab3@27120>   MOVE.l #"NORE",reqmode
000363AC <AmiBlitz3.ab3@27121> JSR handle_compileerror
000363AE <AmiBlitz3.ab3@27124>   MOVE.l d0,-(a7)
000363B0 <AmiBlitz3.ab3@27125>   MOVE.l a5,d0
000363BA <AmiBlitz3.ab3@27126>   !basica7
000363BE <AmiBlitz3.ab3@27127>   i.l = PutD0
000363C8 <AmiBlitz3.ab3@27128>   If i
000363F0 <AmiBlitz3.ab3@27129>     a$ = Peek$(i)
00036422 <AmiBlitz3.ab3@27130>     b$ = Peeks$(i-7,7)
0003655A <AmiBlitz3.ab3@27132> 
00036560 <AmiBlitz3.ab3@27133>     MOVE.l d0,result
00036564 <AmiBlitz3.ab3@27135>   !asma7
00036566 <AmiBlitz3.ab3@27136>   MOVE.l (a7)+,d0
00036568 <AmiBlitz3.ab3@27137> RTS
00036592 <AmiBlitz3.ab3@27141>   !basic
000365C0 <AmiBlitz3.ab3@27142>   !ComData_LEA{comStr_CurrentDir,D0}
000365C4 <AmiBlitz3.ab3@27143>   currentDirP.l = PutD0
000365F2 <AmiBlitz3.ab3@27145>   !ComData_LEA{comStr_SourceName,D0}
000365F6 <AmiBlitz3.ab3@27146>   fileNameP.l = PutD0
0003661E <AmiBlitz3.ab3@27148>   check_dirname$  = Peek$(currentDirP)
00036646 <AmiBlitz3.ab3@27149>   check_filename$ = Peek$(fileNameP)
000366CC <AmiBlitz3.ab3@27150>   If (olddirname$<>check_dirname$) OR (oldfilename$<>check_filename$)
000366D2 <AmiBlitz3.ab3@27151>     JSR free_unusedfunctions
0003671C <AmiBlitz3.ab3@27153>   olddirname$ = Peek$(check_dirname$)
00036766 <AmiBlitz3.ab3@27154>   oldfilename$ = Peek$(check_filename$)
00036790 <AmiBlitz3.ab3@27155>   For i = 0 To #maxincludes-1
000367A4 <AmiBlitz3.ab3@27156>     incline(i) = 0
000367B4 <AmiBlitz3.ab3@27157>   Next
000367D2 <AmiBlitz3.ab3@27158>   !asm
000367D4 <AmiBlitz3.ab3@27159> RTS
000367D6 <AmiBlitz3.ab3@27163>   MOVEQ #0,d1
000367D8 <AmiBlitz3.ab3@27166>   MOVE.b (a5)+,d0
000367DC <AmiBlitz3.ab3@27167>   BEQ 'er1
000367E0 <AmiBlitz3.ab3@27168>   CMP.b #$20,d0
000367E4 <AmiBlitz3.ab3@27169>   BEQ 'l1
000367E6 <AmiBlitz3.ab3@27170>   ADDQ #1,d1
000367EA <AmiBlitz3.ab3@27171>   CMP.b #$22,d0
000367EE <AmiBlitz3.ab3@27172>   BNE 'l1
000367F0 <AmiBlitz3.ab3@27173> RTS
000367F6 <AmiBlitz3.ab3@27176> JMP syntaxerr
0003681A <AmiBlitz3.ab3@27187> erro1t   Dc.b "Only one BSS / Chip Segment allowed",0 : Even
00036838 <AmiBlitz3.ab3@27188> nodata   Dc.b "BSS Segment contains Data!!!!",0       : Even
0003683E <AmiBlitz3.ab3@27193>   TST.b exdebug
00036842 <AmiBlitz3.ab3@27194>   BNE 'l10
00036848 <AmiBlitz3.ab3@27195>   MOVE.l #$4e71,d1
0003684E <AmiBlitz3.ab3@27196>   JSR writeword
00036854 <AmiBlitz3.ab3@27197>   MOVE.l destpointer,d0
00036856 <AmiBlitz3.ab3@27198>   MOVE.l d0,d1
00036858 <AmiBlitz3.ab3@27199>   ADDQ.l #3,d1
0003685E <AmiBlitz3.ab3@27200>   AND.l #$fffffffc,d1
00036864 <AmiBlitz3.ab3@27201>   MOVE.l d1,destpointer
0003686A <AmiBlitz3.ab3@27202>   SUB.l destpointer,d0
0003686E <AmiBlitz3.ab3@27203>   BEQ 'lnf1
00036878 <AmiBlitz3.ab3@27204>   CMP.l #-1,bssstart
0003687C <AmiBlitz3.ab3@27205>   BNE 'lnf1
00036886 <AmiBlitz3.ab3@27206>   CMP.l #-1,chipstart
0003688A <AmiBlitz3.ab3@27207>   BNE 'lnf1
00036890 <AmiBlitz3.ab3@27208>   MOVE.l destpointer,a4
00036896 <AmiBlitz3.ab3@27209>   TST.w dontwrite
0003689A <AmiBlitz3.ab3@27210>   BNE 'lnf1
000368A0 <AmiBlitz3.ab3@27211>   MOVE.w #$4e71,-2(a4)
000368AA <AmiBlitz3.ab3@27214>   CMP.l #-1,bssstart
000368AE <AmiBlitz3.ab3@27215>   BEQ 'l11
000368B4 <AmiBlitz3.ab3@27216>   MOVE.l #erro1t,-(a7)
000368BA <AmiBlitz3.ab3@27217> JMP handle_compileerror
000368C4 <AmiBlitz3.ab3@27220>   MOVE.l destpointer,bssstart
000368CC <AmiBlitz3.ab3@27221>   MOVE.b #1,bssmode
000368D2 <AmiBlitz3.ab3@27224>   TST.b chipmode
000368D6 <AmiBlitz3.ab3@27225>   BEQ 'l10
000368E0 <AmiBlitz3.ab3@27226>   MOVE.l destpointer,chipend
000368E6 <AmiBlitz3.ab3@27227>   CLR.b chipmode
000368EC <AmiBlitz3.ab3@27230>   JSR get1bytemain
000368EE <AmiBlitz3.ab3@27231> RTS
000368F4 <AmiBlitz3.ab3@27235>    TST.b exdebug
000368F8 <AmiBlitz3.ab3@27236>   BNE 'x1
000368FE <AmiBlitz3.ab3@27237>   MOVE.l destpointer,d0
00036904 <AmiBlitz3.ab3@27238>   MOVE.l d0,realbssend
0003690A <AmiBlitz3.ab3@27239>   MOVE.l #$4e71,d1
00036910 <AmiBlitz3.ab3@27240>   JSR writeword
00036916 <AmiBlitz3.ab3@27241>   MOVE.l destpointer,d0
00036918 <AmiBlitz3.ab3@27242>   MOVE.l d0,d1
0003691A <AmiBlitz3.ab3@27243>   ADDQ.l #3,d1
00036920 <AmiBlitz3.ab3@27244>   AND.l #$fffffffc,d1
00036926 <AmiBlitz3.ab3@27245>   MOVE.l d1,destpointer
0003692C <AmiBlitz3.ab3@27246>   SUB.l destpointer,d0
00036930 <AmiBlitz3.ab3@27247>   BEQ 'lnf1
00036936 <AmiBlitz3.ab3@27248>   MOVE.l destpointer,a4
00036940 <AmiBlitz3.ab3@27249>   CMP.l #-1,bssstart
00036944 <AmiBlitz3.ab3@27250>   BNE 'lnf1
0003694E <AmiBlitz3.ab3@27251>   CMP.l #-1,chipstart
00036952 <AmiBlitz3.ab3@27252>   BNE 'lnf1
00036958 <AmiBlitz3.ab3@27253>   TST.w dontwrite
0003695C <AmiBlitz3.ab3@27254>   BNE 'lnf1
00036962 <AmiBlitz3.ab3@27255>   MOVE.w #$4e71,-2(a4)
00036968 <AmiBlitz3.ab3@27258>   TST.b bssmode
0003696C <AmiBlitz3.ab3@27259>   BEQ 'l10
00036976 <AmiBlitz3.ab3@27260>   MOVE.l destpointer,bssend
0003697C <AmiBlitz3.ab3@27261>   CLR.b bssmode
00036986 <AmiBlitz3.ab3@27266>   CMP.l #-1,chipstart
0003698A <AmiBlitz3.ab3@27267>   BEQ 'l11
00036990 <AmiBlitz3.ab3@27268>   MOVE.l #erro1t,-(a7)
00036996 <AmiBlitz3.ab3@27269> JMP handle_compileerror
000369A0 <AmiBlitz3.ab3@27272>   MOVE.l destpointer,chipstart
000369A8 <AmiBlitz3.ab3@27273>   MOVE.b #1,chipmode
000369AE <AmiBlitz3.ab3@27276>   JSR get1bytemain
000369B0 <AmiBlitz3.ab3@27277> RTS
000369DA <AmiBlitz3.ab3@27281>   !basic
000369EC <AmiBlitz3.ab3@27291>   i.l = Peek.w(?ininclude)
00036A12 <AmiBlitz3.ab3@27292>   If i>=0 AND i<#maxincludes
00036A44 <AmiBlitz3.ab3@27293>     incdim (i) = Peek.s(?includetemp2)
00036A5E <AmiBlitz3.ab3@27294>     incline(i) = Peek.l(?includeline)
00036A68 <AmiBlitz3.ab3@27296>     If CLIMode
00036B16 <AmiBlitz3.ab3@27297>       If cli_verbose>=2 Then NPrint "Include \\22",incdim(i),"\\22..."
00036B34 <AmiBlitz3.ab3@27301>   !asm
00036B36 <AmiBlitz3.ab3@27302> RTS
00036B60 <AmiBlitz3.ab3@27306>   !basic
00036B72 <AmiBlitz3.ab3@27307>   i.l = Peek.w(?ininclude)
00036B98 <AmiBlitz3.ab3@27308>   If i>=0 AND i<#maxincludes
00036BC8 <AmiBlitz3.ab3@27309>     incdim (i) = ""
00036BDC <AmiBlitz3.ab3@27310>     incline(i) = 0
00036C14 <AmiBlitz3.ab3@27311>     If i>0 Then Poke.l (?includeline),incline(i-1)+1
00036C32 <AmiBlitz3.ab3@27313>   !asm
00036C34 <AmiBlitz3.ab3@27314> RTS
00036C3A <AmiBlitz3.ab3@27318>   LEA replacedat,a0
00036C3E <AmiBlitz3.ab3@27319>   Dc.w $3181,$0A00                                         ;MOVE.w d1,0(a0,d0.l*2)
00036C40 <AmiBlitz3.ab3@27320> RTS
00036C46 <AmiBlitz3.ab3@27324>   TST.b fpu
00036C4A <AmiBlitz3.ab3@27325>   BEQ 'l1
00036C54 <AmiBlitz3.ab3@27328>   MOVE.l destpointer,newinitaddr
00036C5A <AmiBlitz3.ab3@27329>   JSR writeword
00036C60 <AmiBlitz3.ab3@27330>   JSR writelong
00036C62 <AmiBlitz3.ab3@27331> RTS
00036C64 <AmiBlitz3.ab3@27336>   TST.b (a5)
00036C68 <AmiBlitz3.ab3@27337>    BEQ.s 'll20
00036C6C <AmiBlitz3.ab3@27338>   CMP.b #$20,(a5)
00036C70 <AmiBlitz3.ab3@27339>    BNE.s 'll10
00036C72 <AmiBlitz3.ab3@27340>   ADDQ.l #1,a5
00036C76 <AmiBlitz3.ab3@27341> BRA.s 'll21
00036C7A <AmiBlitz3.ab3@27344>   CMP.b #";",(a5)
00036C7E <AmiBlitz3.ab3@27345>   BNE.s 'll20
00036C80 <AmiBlitz3.ab3@27348>   TST.b (a5)+
00036C84 <AmiBlitz3.ab3@27349>   BEQ.s 'll23
00036C88 <AmiBlitz3.ab3@27350> BRA.s 'll25
00036C8A <AmiBlitz3.ab3@27353>   SUBQ.l #1,a5
00036C8C <AmiBlitz3.ab3@27356> RTS
00036C90 <AmiBlitz3.ab3@27360>   MOVEM.l a2/d2,-(a7)
00036C92 <AmiBlitz3.ab3@27361>   MOVEQ #0,d2
00036C98 <AmiBlitz3.ab3@27362>   LEA ptr_parameterstore,a0
00036C9E <AmiBlitz3.ab3@27363>   LEA chartab,a2
00036CA0 <AmiBlitz3.ab3@27366>   MOVE.b (a5),d0
00036CA4 <AmiBlitz3.ab3@27367>   TST.b 0(a2,d0)
00036CA8 <AmiBlitz3.ab3@27368>   BNE 'l10
00036CAA <AmiBlitz3.ab3@27369>   ADDQ.l #1,a5
00036CAC <AmiBlitz3.ab3@27370>   MOVE.b d0,(a0)+
00036CAE <AmiBlitz3.ab3@27371>   ADDQ.l #1,d2
00036CB2 <AmiBlitz3.ab3@27372> BRA fc2
00036CB4 <AmiBlitz3.ab3@27375>   CLR.b (a0)+
00036CBA <AmiBlitz3.ab3@27376>   JSR findlabel2
00036CBC <AmiBlitz3.ab3@27377>   MOVE.l a2,a0
00036CC0 <AmiBlitz3.ab3@27378>   MOVEM.l (a7)+,a2/d2
00036CC2 <AmiBlitz3.ab3@27379> RTS
00036CC4 <AmiBlitz3.ab3@27383>   TST.l d0
00036CC8 <AmiBlitz3.ab3@27384>   BNE 'l10
00036CCE <AmiBlitz3.ab3@27385>     MOVE.l #syntax_,-(a7)
00036CD4 <AmiBlitz3.ab3@27386> JMP handle_compileerror
00036CDA <AmiBlitz3.ab3@27389>   CMP.l #1,d0
00036CDE <AmiBlitz3.ab3@27390>   BNE 'l20
00036CE4 <AmiBlitz3.ab3@27391>     MOVE.l #overflow,-(a7)
00036CEA <AmiBlitz3.ab3@27392> JMP handle_compileerror
00036CEC <AmiBlitz3.ab3@27395>   ADD.l a2,d0
00036CEE <AmiBlitz3.ab3@27396>   MOVE.l d0,-(a7)
00036CF4 <AmiBlitz3.ab3@27397> JMP handle_compileerror
00036CFA <AmiBlitz3.ab3@27401>   JMP _return
00036D00 <AmiBlitz3.ab3@27402>   JMP _return
00036D06 <AmiBlitz3.ab3@27403>   JMP _return
00036D0C <AmiBlitz3.ab3@27404>   JMP _return
00036D12 <AmiBlitz3.ab3@27405>   JMP _return
00036D18 <AmiBlitz3.ab3@27406>   JMP _return
00036D1E <AmiBlitz3.ab3@27407>   JMP _return
00036D24 <AmiBlitz3.ab3@27408>   JMP _return
00036D2A <AmiBlitz3.ab3@27409>   JMP _return
00036D30 <AmiBlitz3.ab3@27410>   JMP _return
00036D36 <AmiBlitz3.ab3@27411>   JMP Atokejsr
00036D3C <AmiBlitz3.ab3@27412>   JMP writeinit
00036D42 <AmiBlitz3.ab3@27413>   JMP macroexecute
00036D48 <AmiBlitz3.ab3@27414>   JMP findnext
00036D4E <AmiBlitz3.ab3@27415>   JMP replacelib
00036D54 <AmiBlitz3.ab3@27416>   JMP findconstant2
00036D5A <AmiBlitz3.ab3@27417>   JMP findchar                                             ;char in d1
00036D60 <AmiBlitz3.ab3@27418>   JMP stripspaces
00036D66 <AmiBlitz3.ab3@27419>   JMP calc                                                 ;d0 varmode
00036D6C <AmiBlitz3.ab3@27420>   JMP error
00036D72 <AmiBlitz3.ab3@27421>   JMP writelong                                            ;d1 value
00036D78 <AmiBlitz3.ab3@27422>   JMP writeword                                            ;d1 value
00036D7E <AmiBlitz3.ab3@27423>   JMP writebyte                                            ;d1 value
00036D84 <AmiBlitz3.ab3@27424> JMP exit
00036D88 <AmiBlitz3.ab3@27428>   destpointer:    Ds.l 1                                ;pc org source      ;Ds.w 1
00036D8A <AmiBlitz3.ab3@27431>   fast            Dc.w 0
00036D8C <AmiBlitz3.ab3@27432>   fpu             Dc.w 0
00036D8E <AmiBlitz3.ab3@27433>   newsyntax       Dc.w 0
00036D8F <AmiBlitz3.ab3@27435>   optistring      Dc.b 0
00036D90 <AmiBlitz3.ab3@27436>   optistring2     Dc.b 0
00036D91 <AmiBlitz3.ab3@27437>   optiarray       Dc.b 0
00036D92 <AmiBlitz3.ab3@27438>   quickadd        Dc.b 0
00036D94 <AmiBlitz3.ab3@27439>   newmode         Dc.w 0
00036D96 <AmiBlitz3.ab3@27440>   mode            Dc.w 0
00036D98 <AmiBlitz3.ab3@27441>   string1         Dc.w 0
00036D9A <AmiBlitz3.ab3@27442>   load_var_size   Dc.w 0
00036D9C <AmiBlitz3.ab3@27443>   load_var_reg    Dc.w 0
00036DA0 <AmiBlitz3.ab3@27444>   load_var_addr   Dc.l 0
00036DA2 <AmiBlitz3.ab3@27445>   imm_size        Dc.w 0
00036DA4 <AmiBlitz3.ab3@27446>   imm_reg         Dc.w 0
00036DA8 <AmiBlitz3.ab3@27447>   imm_addr        Dc.l 0
00036DA9 <AmiBlitz3.ab3@27448>   iee             Dc.b 0
00036DAA <AmiBlitz3.ab3@27449>   _dcb            Dc.b 0
00036DAE <AmiBlitz3.ab3@27450>   nohunkoffset    Dc.l 0
00036DB2 <AmiBlitz3.ab3@27453> teddata:        Dc.l tokens
00036DB6 <AmiBlitz3.ab3@27454>                 Dc.l 0 ;compilermenu_entries               ; NOT used anymore
00036DBA <AmiBlitz3.ab3@27455>                 Dc.l read_xtrafile
00036DBE <AmiBlitz3.ab3@27456>                 Dc.l write_xtrafile
00036DC2 <AmiBlitz3.ab3@27457>                 Dc.l call_menuentry                        ; compile AND RUN ?
00036DC6 <AmiBlitz3.ab3@27458>                 Dc.l 0
00036DCA <AmiBlitz3.ab3@27459>                 Dc.b ":",34,".;"
00036DCE <AmiBlitz3.ab3@27460>                 Dc.l "NEW1"
00036DD2 <AmiBlitz3.ab3@27461>                 Dc.l newtypebase
00036DD6 <AmiBlitz3.ab3@27462> realconstbase:  Dc.l labelbase
00036DDA <AmiBlitz3.ab3@27463> deflib          Dc.l 0
00036DDE <AmiBlitz3.ab3@27464> incd            Dc.l 0
00036DE2 <AmiBlitz3.ab3@27465>                 Dc.l 0
00036DE6 <AmiBlitz3.ab3@27466>                 Dc.l 0
00036DEA <AmiBlitz3.ab3@27467>                 Dc.l 0
00036DEC <AmiBlitz3.ab3@27468> _return         RTS
00036DED <AmiBlitz3.ab3@27469>                 Dc.b 0
000371ED <AmiBlitz3.ab3@27470> chartab2        Ds.l 256
000371F1 <AmiBlitz3.ab3@27471> codeend         Dc.l 0
000371F5 <AmiBlitz3.ab3@27472> hunkoffsetnum   Dc.l 0
000371F9 <AmiBlitz3.ab3@27473> chipsize        Dc.l 0
000371FD <AmiBlitz3.ab3@27474> bsssize         Dc.l 0
00037201 <AmiBlitz3.ab3@27475> bssstart        Dc.l -1
00037205 <AmiBlitz3.ab3@27476> bssend          Dc.l -1
00037209 <AmiBlitz3.ab3@27477> chipstart       Dc.l -1
0003720D <AmiBlitz3.ab3@27478> chipend         Dc.l -1
0003720E <AmiBlitz3.ab3@27479> bssmode         Dc.b 0
0003720F <AmiBlitz3.ab3@27480> chipmode        Dc.b 0
00037210 <AmiBlitz3.ab3@27481> newhunk         Dc.b 0
00037214 <AmiBlitz3.ab3@27482> bssnum          Dc.l 0
00037218 <AmiBlitz3.ab3@27483> chipnum         Dc.l 0
0003721C <AmiBlitz3.ab3@27484> lastinstruction Dc.l 0
00037220 <AmiBlitz3.ab3@27485> lastinstructionaddr Dc.l 0
00037234 <AmiBlitz3.ab3@27486> hunkbegin       Dc.l $03F3,$00,$02,$00,$01
00037238 <AmiBlitz3.ab3@27487> tstsize1b:      Ds.l 1
0003723C <AmiBlitz3.ab3@27488> bsssize2        Dc.l 1
00037240 <AmiBlitz3.ab3@27489>                 Dc.l $03E9
00037244 <AmiBlitz3.ab3@27490> tstsize2b:      Dc.l $100
00037258 <AmiBlitz3.ab3@27491> hunkbegin2      Dc.l $03F3,$00,$03,$00,$02
0003725C <AmiBlitz3.ab3@27492> tstsize1c:      Ds.l 1
00037260 <AmiBlitz3.ab3@27493> bsssize3        Dc.l 1
00037264 <AmiBlitz3.ab3@27494> chipsize2       Dc.l 1
00037268 <AmiBlitz3.ab3@27495>                 Dc.l $3e9
0003726C <AmiBlitz3.ab3@27496> tstsize2c       Dc.l 0
0003727C <AmiBlitz3.ab3@27497> hunkend         Dc.l $3f2,$3eb,0,$3f2
0003728C <AmiBlitz3.ab3@27498> hunkend2        Dc.l $3f2,$3ea,0,$3f2
00037293 <AmiBlitz3.ab3@27499> strcpy          Dc.b "strcpy",0
0003729A <AmiBlitz3.ab3@27500> strcmp          Dc.b "strcmp",0
000372A1 <AmiBlitz3.ab3@27501> strvar          Dc.b "strvar",0
000372A6 <AmiBlitz3.ab3@27502> qmul            Dc.b "qmul",0
000372AB <AmiBlitz3.ab3@27503> qdiv            Dc.b "qdiv",0
000372B2 <AmiBlitz3.ab3@27504> _MaxLen         Dc.b "maxlen",0
000372B7 <AmiBlitz3.ab3@27505> notf            Dc.b "????",0
000372DA <AmiBlitz3.ab3@27507> errtext         Dc.b "only reg addressing Mode supported",0
00037304 <AmiBlitz3.ab3@27508> fpuerr          Dc.b "Instruction not yet supported by 68K FPU ",0
00037346 <AmiBlitz3.ab3@27509> cmplxerr        Dc.b "Formula too complex for 68K FPU or too much regload register used",0 : Even
00037348 <AmiBlitz3.ab3@27510> peeksize        Dc.w 0
0003734C <AmiBlitz3.ab3@27512> mainstart       Dc.l 0
0003734D <AmiBlitz3.ab3@27514> infunctioncode  Dc.b 0
0003734F <AmiBlitz3.ab3@27515> regnumstore     Dc.w 0
0003737C <AmiBlitz3.ab3@27516>                 Dc.b "$VER: AmiBlitz3 \\__VER_MAJOR.\\__VER_MINOR (\\__DATE_GER__) Build \\__VER_PATCH.\\__VER_BUILD",0 : Even
00037384 <AmiBlitz3.ab3@27517> testcode        Dc.b "print i",0
000373E8 <AmiBlitz3.ab3@27518>                 Ds.b 100
000373F6 <AmiBlitz3.ab3@27519> devo            Dc.b "developobject",0 : Even
00037408 <AmiBlitz3.ab3@27520> autostorename   Dc.b "__autoconstantnum",0
00037412 <AmiBlitz3.ab3@27521> _include        Dc.b "__include",0
0003741A <AmiBlitz3.ab3@27522> _debug          Dc.b "__debug",0
0003741E <AmiBlitz3.ab3@27523> unusedfunc      Dc.l 0
00037420 <AmiBlitz3.ab3@27527> MOVE.l a0,d0
0003744A <AmiBlitz3.ab3@27528> !basic
0003744E <AmiBlitz3.ab3@27529> *olderror.l= PutD0
000374A8 <AmiBlitz3.ab3@27530> 
000374DC <AmiBlitz3.ab3@27531> error_type$ = error$
00037578 <AmiBlitz3.ab3@27532> 
0003758C <AmiBlitz3.ab3@27533> If Peek.l (?beforeparameterfetch)
000375A2 <AmiBlitz3.ab3@27534>   MaxLen detokenline.s = 65536
000375E4 <AmiBlitz3.ab3@27535>  !ComData_GetL{comPtr_PreProcessor,include_preprocessor}
000375F4 <AmiBlitz3.ab3@27536>  *tn.preprocessor = Peek.l(?include_preprocessor)
0003761E <AmiBlitz3.ab3@27537>   written.l = preproc_DetokenizeLine{*tn,Peek.l (?beforeparameterfetch),&detokenline}
00037646 <AmiBlitz3.ab3@27538>   If written>0 Then Poke.b &detokenline+written,0
00037670 <AmiBlitz3.ab3@27539>   sourceLineText.s = Peek.s(&detokenline)
00037676 <AmiBlitz3.ab3@27540> Else
0003769E <AmiBlitz3.ab3@27541>   sourceLineText = "NULL"
000376D2 <AmiBlitz3.ab3@27543> error_source$ = sourceLineText
00037724 <AmiBlitz3.ab3@27544> error$=error$+sourceLineText
0003772A <AmiBlitz3.ab3@27545> GetD0 &error$
00037748 <AmiBlitz3.ab3@27546> !asm
0003774A <AmiBlitz3.ab3@27547> MOVE.l d0,a0
0003774C <AmiBlitz3.ab3@27548> RTS
0003774E <AmiBlitz3.ab3@27552>   MOVE.l a0,-(a7)
00037750 <AmiBlitz3.ab3@27553>   MOVE.l a0,d0
00037752 <AmiBlitz3.ab3@27554>   MOVE.l a5,a0                                             ;macro title
0003777C <AmiBlitz3.ab3@27555>   !basic
00037780 <AmiBlitz3.ab3@27556>   i = PutD0
00037782 <AmiBlitz3.ab3@27557>   MOVEQ #20,d0
00037784 <AmiBlitz3.ab3@27560>     MOVE.b -(a0),d1
00037788 <AmiBlitz3.ab3@27561>     BEQ 'l1
0003778C <AmiBlitz3.ab3@27562>     CMP.b #":",d1
00037790 <AmiBlitz3.ab3@27563>     BEQ 'l1
00037792 <AmiBlitz3.ab3@27564>     SUBQ.l #1,d0
00037796 <AmiBlitz3.ab3@27565>     BNE 'l2
00037798 <AmiBlitz3.ab3@27568>   ADDQ #1,a0
0003779A <AmiBlitz3.ab3@27569>   MOVE.l a0,d0
0003779E <AmiBlitz3.ab3@27570>   i2.l = PutD0
000377BA <AmiBlitz3.ab3@27571>   If Peek.w (?ininclude)>0
00037814 <AmiBlitz3.ab3@27572>     Poke.s (?includetemp2),incdim(Peek.w(?ininclude)-1)
00037824 <AmiBlitz3.ab3@27573>     errorline.l = Peek.l(?includeline);-1
0003784C <AmiBlitz3.ab3@27574>     Poke.l ?compilelinecounter,Peek.l(?includeline) - 1
00037876 <AmiBlitz3.ab3@27575>     errorfile.s = Peek.s(?includetemp2)
0003787C <AmiBlitz3.ab3@27576>   Else
000378B4 <AmiBlitz3.ab3@27577>     Poke.s (?includetemp2),Peek.s(?ptr_parameterstore)
000378CA <AmiBlitz3.ab3@27578>     errorline.l = Peek.l(?compilelinecounter) + 1
000378FE <AmiBlitz3.ab3@27579>     errorfile.s = cli_sourcefile
00037908 <AmiBlitz3.ab3@27582>   If i
000379AC <AmiBlitz3.ab3@27583>     errortext.s = !TRANS{Replace$(Peek.s(i),"\\0a","\n")}
00037A2A <AmiBlitz3.ab3@27584>     errortext.s = Replace$(errortext,"\n","\\0a")
00037A30 <AmiBlitz3.ab3@27585>   Else
00037A58 <AmiBlitz3.ab3@27586>     errortext.s = "???"
00037BD0 <AmiBlitz3.ab3@27589>   NPrint "\\1b[1m",!TRANS{"Compiler Error"}," #",Peek.l(?errorcounter)," <",errorfile,"@",errorline,">\\1b[0m "
00037C98 <AmiBlitz3.ab3@27590>   NPrint "  ",error_type$,"\\n  ",error_source$
00037CB6 <AmiBlitz3.ab3@27594>   !asm
00037CB8 <AmiBlitz3.ab3@27595>   MOVE.l (a7)+,a0
00037CBA <AmiBlitz3.ab3@27596> RTS
00037CBC <AmiBlitz3.ab3@27600>   MOVE.l a0,-(a7)
00037CBE <AmiBlitz3.ab3@27601>   MOVE.l a0,d0
00037CC0 <AmiBlitz3.ab3@27602>   MOVE.l a5,a0                                             ;macro title
00037CEA <AmiBlitz3.ab3@27603>   !basic
00037CEE <AmiBlitz3.ab3@27604>   i = PutD0
00037CF0 <AmiBlitz3.ab3@27605>   MOVEQ #20,d0
00037CF2 <AmiBlitz3.ab3@27608>     MOVE.b -(a0),d1
00037CF6 <AmiBlitz3.ab3@27609>     BEQ 'l1
00037CFA <AmiBlitz3.ab3@27610>     CMP.b #":",d1
00037CFE <AmiBlitz3.ab3@27611>     BEQ 'l1
00037D00 <AmiBlitz3.ab3@27612>     SUBQ.l #1,d0
00037D04 <AmiBlitz3.ab3@27613>     BNE 'l2
00037D06 <AmiBlitz3.ab3@27616>   ADDQ #1,a0
00037D08 <AmiBlitz3.ab3@27617>   MOVE.l a0,d0
00037D0C <AmiBlitz3.ab3@27618>   i2.l = PutD0
00037D90 <AmiBlitz3.ab3@27619>   fid.l = file_Open{dos_AddPart{my_systemdir$,"ab_compileerror.txt"},#file_forcewrite}
00037DA4 <AmiBlitz3.ab3@27620>   If fid <> -1
00037DC0 <AmiBlitz3.ab3@27621>     If Peek.w (?ininclude)>0
00037E1A <AmiBlitz3.ab3@27622>       Poke$(?includetemp2),incdim(Peek.w(?ininclude)-1)
00037E20 <AmiBlitz3.ab3@27623>     Else
00037E4C <AmiBlitz3.ab3@27624>       Poke$(?includetemp2),""
00037E76 <AmiBlitz3.ab3@27626>     a$ = Peek$(?includetemp2)
00037EE8 <AmiBlitz3.ab3@27627>     x$ = Replace$(Peek$(i),"\\0a","\n")
00037F1A <AmiBlitz3.ab3@27628>     file_WriteLine{fid,x$}
00037F64 <AmiBlitz3.ab3@27629>     file_WriteLine{fid,Str$(Peek.l(?compilelinecounter) + 1)}
00037F90 <AmiBlitz3.ab3@27630>     If a$
00037FC2 <AmiBlitz3.ab3@27631>       file_WriteLine{fid,a$}
0003800C <AmiBlitz3.ab3@27632>       file_WriteLine{fid,Str$(Peek.l(?includeline)-1)}
00038034 <AmiBlitz3.ab3@27633>       Poke.l ?compilelinecounter,Peek.l(?includeline) - 1
0003803A <AmiBlitz3.ab3@27634>     Else
00038060 <AmiBlitz3.ab3@27635>       file_WriteLine{fid,"none"}
00038090 <AmiBlitz3.ab3@27637>     file_WriteLine{fid,Peek$(i2)}
000380E6 <AmiBlitz3.ab3@27638>     file_WriteLine{fid,Str$(Peek.l(?globallinecount))+" line(s) compiled"}
00038130 <AmiBlitz3.ab3@27639>     file_WriteLine{fid,Hex$(Peek.w(?globalvarpointer))+" global var base"}
0003813A <AmiBlitz3.ab3@27640>     file_Close{fid}
00038158 <AmiBlitz3.ab3@27642>   !asm
0003815A <AmiBlitz3.ab3@27643>   MOVE.l (a7)+,a0
0003815C <AmiBlitz3.ab3@27644> RTS
00038186 <AmiBlitz3.ab3@27648>   !basic
0003818A <AmiBlitz3.ab3@27649>   progress.l     = PutD0
0003819C <AmiBlitz3.ab3@27650>   total.l        = Peek.w(?progressbar_width)
000381BA <AmiBlitz3.ab3@27651>   calcpro        = (progress * 100) / total +1
000381CC <AmiBlitz3.ab3@27652>   pass.l         = Peek.w(?pass)
000381DE <AmiBlitz3.ab3@27653>   typ.l          = Peek.w(?compiler_job)
000381FC <AmiBlitz3.ab3@27656> If (pass><pass_old OR typ><typ_old)
0003820A <AmiBlitz3.ab3@27658>     If pass_old><pass
000382A6 <AmiBlitz3.ab3@27659>       passtatusstr.s = !TRANS{"Pass"}+" "+Str$(pass)+"..."
000382FC <AmiBlitz3.ab3@27660>       If cli_verbose>=2 Then NPrint passtatusstr
00038302 <AmiBlitz3.ab3@27663>     pass_old = pass
00038308 <AmiBlitz3.ab3@27664>     typ_old  = typ
0003830E <AmiBlitz3.ab3@27665>     update_comstatus_gui = True
00038320 <AmiBlitz3.ab3@27666>     If typ=0
00038400 <AmiBlitz3.ab3@27667>       comstatusstr = !TRANS{"Pass"}+" "+Str$(pass)+": "+!TRANS{"Compiling Sources..."}
00038408 <AmiBlitz3.ab3@27668>       calcpro = 0  ; set gauge to 0
0003841A <AmiBlitz3.ab3@27670>     If typ=1
000384FA <AmiBlitz3.ab3@27671>       comstatusstr = !TRANS{"Pass"}+" "+Str$(pass)+": "+!TRANS{"Building Executable..."}
00038502 <AmiBlitz3.ab3@27672>       calcpro = 0  ; set gauge to 0
00038558 <AmiBlitz3.ab3@27675>     If cli_verbose>=3 Then NPrint comstatusstr
00038566 <AmiBlitz3.ab3@27678>   If (calcpro >< calcpro_old)
000385BA <AmiBlitz3.ab3@27679>     If cli_verbose>=4 Then NPrint calcpro,"% compiled..."
000385C0 <AmiBlitz3.ab3@27680>     calcpro_old = calcpro
000385C6 <AmiBlitz3.ab3@27681>     update_comstatus_gui = True
000385E0 <AmiBlitz3.ab3@27684>   If update_comstatus_gui = True                                     ; check if a update of the gui nessecary
000385FE <AmiBlitz3.ab3@27685>     !asm
00038630 <AmiBlitz3.ab3@27686> 
0003865A <AmiBlitz3.ab3@27687>     !basic
00038660 <AmiBlitz3.ab3@27688>     update_comstatus_gui  = False ; because we update the gui
0003867E <AmiBlitz3.ab3@27690>   !asm
00038680 <AmiBlitz3.ab3@27691> RTS
00038686 <AmiBlitz3.ab3@27696>   MOVE.w maxobject_pos,D5                                  ;max objects 1. visible
0003868C <AmiBlitz3.ab3@27697>   LEA maxobjects_value,A3                                  ;current value
00038692 <AmiBlitz3.ab3@27698>   MOVEA.l libpointer,A2
00038696 <AmiBlitz3.ab3@27701>   CMPA.w #$0,A2
0003869A <AmiBlitz3.ab3@27702>   BEQ.w menu4c__igotb
0003869C <AmiBlitz3.ab3@27703>   MOVEA.l A2,A1
000386A0 <AmiBlitz3.ab3@27704>   ADDA.l $12(A1),A1
000386A4 <AmiBlitz3.ab3@27705>   TST.w -$2(A1)
000386A8 <AmiBlitz3.ab3@27706>   BEQ.w JL_0_FFF6b
000386AA <AmiBlitz3.ab3@27707>   SUBQ.w #1,D5
000386AE <AmiBlitz3.ab3@27708>   BMI.w JL_0_FFFCb
000386B0 <AmiBlitz3.ab3@27711>   MOVEA.l (A2),A2
000386B4 <AmiBlitz3.ab3@27712> BRA.w JL_0_FFDAb
000386B8 <AmiBlitz3.ab3@27715>   MOVE.w (A3),-$4(A1)
000386BA <AmiBlitz3.ab3@27718> RTS
000386C0 <AmiBlitz3.ab3@27722>   MOVE.w debugnest,d0
000386C6 <AmiBlitz3.ab3@27723>   LEA storedebugmode, a0
000386CE <AmiBlitz3.ab3@27724>   MOVE.b 0(a0,d0.w),debugmode
000386D4 <AmiBlitz3.ab3@27725>   TST.w debugnest
000386D8 <AmiBlitz3.ab3@27726>   BEQ JUMP_unpairrunerrs
000386DE <AmiBlitz3.ab3@27727>   SUBQ.w #1,debugnest
000386E0 <AmiBlitz3.ab3@27728> RTS
000386E6 <AmiBlitz3.ab3@27731> JMP runerrsoverflow
000386EC <AmiBlitz3.ab3@27734> JMP unpairrunerrs
000386F4 <AmiBlitz3.ab3@27738>   BCHG #$7,use_debugger
000386FC <AmiBlitz3.ab3@27740>   BTST #$7,use_debugger
00038700 <AmiBlitz3.ab3@27741>   BNE 'debugon
00038706 <AmiBlitz3.ab3@27742>   CLR.w debugmode
0003870A <AmiBlitz3.ab3@27743> BRA.b 'debugoff
00038710 <AmiBlitz3.ab3@27746>   SNE debugmode
00038712 <AmiBlitz3.ab3@27749>   MOVE.l a0,-(a7)
0003874A <AmiBlitz3.ab3@27752>   !ComData_SetB{comByte_DebugMode,debugmode}
0003874C <AmiBlitz3.ab3@27757>   MOVE.l (a7)+,a0
0003874E <AmiBlitz3.ab3@27758> RTS
00038756 <AmiBlitz3.ab3@27763>   BTST #$7,use_debugger
0003875A <AmiBlitz3.ab3@27764>   BNE 'debugon
00038760 <AmiBlitz3.ab3@27765>   CLR.w debugmode
00038764 <AmiBlitz3.ab3@27766> BRA.b 'debugoff
0003876A <AmiBlitz3.ab3@27769>   SNE debugmode
0003876C <AmiBlitz3.ab3@27772> RTS
00038772 <AmiBlitz3.ab3@27776>   ADDQ.w #1,debugnest
00038778 <AmiBlitz3.ab3@27777>   MOVE.w debugnest,d0
0003877C <AmiBlitz3.ab3@27778>   CMP.w #18,d0
00038780 <AmiBlitz3.ab3@27779>    BGE JUMP_runerrsoverflow
00038786 <AmiBlitz3.ab3@27780>   LEA storedebugmode, a0
0003878E <AmiBlitz3.ab3@27781>   MOVE.b debugmode,0( a0,d0.w)
00038794 <AmiBlitz3.ab3@27784>   SF debugmode
00038796 <AmiBlitz3.ab3@27785> RTS
00038816 <AmiBlitz3.ab3@27788> usedpath:  Ds.l 32
0003881A <AmiBlitz3.ab3@27792>   BEQ.w JUMP_syntaxerr
00038820 <AmiBlitz3.ab3@27793>   LEA lastpath,A0
00038824 <AmiBlitz3.ab3@27794>   MOVEM.l a0-a1/d0,-(a7)
0003882A <AmiBlitz3.ab3@27795>   LEA lastpath2,a1
0003882C <AmiBlitz3.ab3@27798>     MOVE.b (a0)+,(a1)+
00038830 <AmiBlitz3.ab3@27799>   BNE 'l2
00038834 <AmiBlitz3.ab3@27800>   MOVEM.l (a7)+,a0-a1/d0
00038838 <AmiBlitz3.ab3@27801>   LEA usedpath(PC),A0
0003883C <AmiBlitz3.ab3@27802>   MOVEM.l a0-a1/d0,-(a7)
00038842 <AmiBlitz3.ab3@27803>   LEA lastpath,a1
00038844 <AmiBlitz3.ab3@27806>     MOVE.b (a0)+,(a1)+
00038848 <AmiBlitz3.ab3@27807>   BNE 'l1
0003884C <AmiBlitz3.ab3@27808>   MOVEM.l (a7)+,a0-a1/d0
0003884E <AmiBlitz3.ab3@27811>   TST.w D0
00038852 <AmiBlitz3.ab3@27812>    BMI.w JUMP_syntaxerr
00038854 <AmiBlitz3.ab3@27813>   MOVE.b D0,(A0)+
00038858 <AmiBlitz3.ab3@27814>   BSR.w JUMP_get1bytemain
0003885C <AmiBlitz3.ab3@27815>    BNE.w JL_0_4AA8
00038860 <AmiBlitz3.ab3@27816>   MOVE.b #$2,(A0)
00038862 <AmiBlitz3.ab3@27817> RTS
00038866 <AmiBlitz3.ab3@27821>   BEQ.w JUMP_syntaxerr
0003886C <AmiBlitz3.ab3@27822>   LEA path2,A0
0003886E <AmiBlitz3.ab3@27832>   TST.w D0
00038872 <AmiBlitz3.ab3@27833>    BMI.w JUMP_syntaxerr
00038874 <AmiBlitz3.ab3@27834>   MOVE.b D0,(A0)+
00038878 <AmiBlitz3.ab3@27835>   BSR.w JUMP_get1bytemain
0003887C <AmiBlitz3.ab3@27836>    BNE.w JL_0_4AA8b
00038880 <AmiBlitz3.ab3@27837>   MOVE.b #$2,(A0)
00038882 <AmiBlitz3.ab3@27838> RTS
00038888 <AmiBlitz3.ab3@27847> JMP errormsg_reg
00038892 <AmiBlitz3.ab3@27851>   MOVE.l #$f22d6780,fpucodeglobal
0003889C <AmiBlitz3.ab3@27852>   MOVE.l #$f22c6780,fpucodelocal
000388A2 <AmiBlitz3.ab3@27853>   LEA regtable,a0
000388AC <AmiBlitz3.ab3@27854>   MOVE.l #7,maxregs
000388AE <AmiBlitz3.ab3@27857>   MOVE.l (a0),d0
000388B2 <AmiBlitz3.ab3@27858>   BEQ 'e1
000388B4 <AmiBlitz3.ab3@27859>   CLR.l (a0)
000388B8 <AmiBlitz3.ab3@27860>   MOVE.w 4(a0),d0
000388C2 <AmiBlitz3.ab3@27861>   MOVE.l fpucodeglobal,fpucode
000388C6 <AmiBlitz3.ab3@27862>   TST.w 6(a0)
000388CA <AmiBlitz3.ab3@27863>   BEQ 'glob
000388D4 <AmiBlitz3.ab3@27864>   MOVE.l fpucodelocal,fpucode
000388DA <AmiBlitz3.ab3@27867>   MOVE.l fpucode,d1
000388E0 <AmiBlitz3.ab3@27868>   JSR writelong
000388EA <AmiBlitz3.ab3@27869>   SUB.l #$80,fpucodelocal
000388F4 <AmiBlitz3.ab3@27870>   SUB.l #$80,fpucodeglobal
000388F6 <AmiBlitz3.ab3@27871>   MOVE.w d0,d1
000388FC <AmiBlitz3.ab3@27872>   JSR writeword
000388FE <AmiBlitz3.ab3@27873>   ADDQ #8,a0
00038902 <AmiBlitz3.ab3@27874> BRA 'again
00038904 <AmiBlitz3.ab3@27877> RTS
0003890A <AmiBlitz3.ab3@27884> JMP notypeerr
00038910 <AmiBlitz3.ab3@27887> JMP illtypeerr
0003891A <AmiBlitz3.ab3@27890>   MOVE.l #$f22d4780,fpucodeglobal
00038924 <AmiBlitz3.ab3@27891>   MOVE.l #$f22c4780,fpucodelocal
0003892A <AmiBlitz3.ab3@27892>   LEA regtable,a0
0003892C <AmiBlitz3.ab3@27893>   TST.l (a0)
00038930 <AmiBlitz3.ab3@27894>    BNE JUMP_errormsg_reg
00038932 <AmiBlitz3.ab3@27895>   MOVE.l d7,-(a7)
00038934 <AmiBlitz3.ab3@27896>   SUBQ.l #1,a5
0003893A <AmiBlitz3.ab3@27899>   JSR getparameter2
0003893E <AmiBlitz3.ab3@27900>   BEQ.w 'nopar
00038944 <AmiBlitz3.ab3@27901>   MOVE.w d0,lastchar
0003894A <AmiBlitz3.ab3@27902>   JSR findvariable
0003894E <AmiBlitz3.ab3@27903>   BNE 'islocal
00038958 <AmiBlitz3.ab3@27904>   MOVE.l fpucodeglobal,fpucode
00038962 <AmiBlitz3.ab3@27905>   MOVE.l #3,maxregs
00038964 <AmiBlitz3.ab3@27906>   MOVEQ #0,d7
0003896C <AmiBlitz3.ab3@27909>   CMP.l #newtype_float,$a(a2)                              ;is float type
00038970 <AmiBlitz3.ab3@27910>    BEQ 'doit
00038978 <AmiBlitz3.ab3@27911>   CMP.l #newtype_double,$a(a2)
0003897C <AmiBlitz3.ab3@27912>    BNE JUMP_illtypeerr
00038982 <AmiBlitz3.ab3@27915>   LEA regtable,a0
00038984 <AmiBlitz3.ab3@27916>   MOVEQ #0,d0
00038986 <AmiBlitz3.ab3@27919>   TST.l (a0)
0003898A <AmiBlitz3.ab3@27920>    BEQ 'store
0003898C <AmiBlitz3.ab3@27921>   ADDQ.l #4,d0
0003898E <AmiBlitz3.ab3@27922>   ADDQ.l #8,a0
00038994 <AmiBlitz3.ab3@27923>   CMP.l #16,d0
00038998 <AmiBlitz3.ab3@27924>    BCS 'loop
000389A2 <AmiBlitz3.ab3@27925>   MOVE.l #2,maxregs
000389A8 <AmiBlitz3.ab3@27926>   CMP.l #20,d0
000389AC <AmiBlitz3.ab3@27927>    BCS 'loop
000389B6 <AmiBlitz3.ab3@27928>   MOVE.l #1,maxregs
000389BC <AmiBlitz3.ab3@27929>   CMP.l #24,d0
000389C0 <AmiBlitz3.ab3@27930>    BCS 'loop
000389C6 <AmiBlitz3.ab3@27931> JMP toovarerr
000389CC <AmiBlitz3.ab3@27934>   TST.b fpu
000389D0 <AmiBlitz3.ab3@27935>    BEQ 'nofpu
000389D2 <AmiBlitz3.ab3@27936>   MOVE.l a2,(a0)
000389D8 <AmiBlitz3.ab3@27937>   MOVE.w 4(a2),4(a0)
000389DC <AmiBlitz3.ab3@27938>   MOVE.w d7,6(a0)
000389E2 <AmiBlitz3.ab3@27939>   MOVE.l fpucode,d1
000389EC <AmiBlitz3.ab3@27940>   SUB.l #$80,fpucodeglobal
000389F6 <AmiBlitz3.ab3@27941>   SUB.l #$80,fpucodelocal
000389FC <AmiBlitz3.ab3@27942>   JSR writelong
00038A00 <AmiBlitz3.ab3@27943>   MOVE.w 4(a2),d1
00038A06 <AmiBlitz3.ab3@27944>   JSR writeword
00038A0C <AmiBlitz3.ab3@27947>   MOVE.w lastchar,d0
00038A10 <AmiBlitz3.ab3@27948>   CMP.w #":",d0
00038A14 <AmiBlitz3.ab3@27949>    BEQ 'nopar
00038A16 <AmiBlitz3.ab3@27950>   TST.w d0
00038A1A <AmiBlitz3.ab3@27951>    BEQ 'nopar
00038A1E <AmiBlitz3.ab3@27952>   CMP.w #",",d0
00038A22 <AmiBlitz3.ab3@27953>   BNE JUMP_syntaxerr
00038A26 <AmiBlitz3.ab3@27954> BRA 'l2
00038A28 <AmiBlitz3.ab3@27957>    MOVE.l (a7)+,d7
00038A2A <AmiBlitz3.ab3@27958> RTS
00038A2C <AmiBlitz3.ab3@27961>   MOVEQ #1,d7
00038A34 <AmiBlitz3.ab3@27962>   MOVE.b #1,newvariable
00038A3A <AmiBlitz3.ab3@27963>   LEA firstlocal,a2
00038A40 <AmiBlitz3.ab3@27964>   JSR findvariable
00038A46 <AmiBlitz3.ab3@27965>   CLR.b newvariable
00038A4C <AmiBlitz3.ab3@27966>   CMP.l #-1,d0
00038A50 <AmiBlitz3.ab3@27967>   BEQ.w JUMP_notypeerr2
00038A5A <AmiBlitz3.ab3@27968>   MOVE.l fpucodelocal,fpucode
00038A5E <AmiBlitz3.ab3@27969> BRA 'go
00038A62 <AmiBlitz3.ab3@27972>   CMP.b #".",d0
00038A66 <AmiBlitz3.ab3@27973>    BNE 'l1
00038A6A <AmiBlitz3.ab3@27974>   BSR JUMP_get1bytemain
00038A6E <AmiBlitz3.ab3@27975>   BSR JUMP_get1bytemain
00038A72 <AmiBlitz3.ab3@27978>   ORI .b #$20,d0
00038A76 <AmiBlitz3.ab3@27979>   CMP.b #"d",d0
00038A7A <AmiBlitz3.ab3@27980>    BNE JUMP_illeaerr
00038A7E <AmiBlitz3.ab3@27981>   BSR JUMP_get1bytemain
00038A82 <AmiBlitz3.ab3@27982>   SUB.b #$30,d0
00038A86 <AmiBlitz3.ab3@27983>   CMP.b #$7,d0
00038A8A <AmiBlitz3.ab3@27984>    BGT JUMP_syntaxerr
00038A8E <AmiBlitz3.ab3@27985>   MOVE.w #$49c0,d1
00038A90 <AmiBlitz3.ab3@27986>   ADD.b d0,d1
00038A96 <AmiBlitz3.ab3@27987>   JSR writeword
00038A9A <AmiBlitz3.ab3@27988>   BSR JUMP_get1bytemain
00038A9C <AmiBlitz3.ab3@27989> RTS
00038AA2 <AmiBlitz3.ab3@27993>   LEA lastpath,a0
00038AA6 <AmiBlitz3.ab3@27994>   LEA usedpath(PC),A1
00038AA8 <AmiBlitz3.ab3@27997>     MOVE.b (a0)+,(a1)+
00038AAC <AmiBlitz3.ab3@27998>   BNE 'l1
00038AB2 <AmiBlitz3.ab3@28000>   LEA lastpath2,a0
00038AB8 <AmiBlitz3.ab3@28001>   LEA lastpath,A1
00038ABA <AmiBlitz3.ab3@28004>     MOVE.b (a0)+,(a1)+
00038ABE <AmiBlitz3.ab3@28005>   BNE 'l2
00038AC0 <AmiBlitz3.ab3@28006> RTS
00038AC6 <AmiBlitz3.ab3@28010>   TST.b objectcount
00038ACA <AmiBlitz3.ab3@28011>   BEQ 'l2a
00038AD0 <AmiBlitz3.ab3@28012> JMP macnesterr
00038AD6 <AmiBlitz3.ab3@28015>   LEA devo,a0
00038ADC <AmiBlitz3.ab3@28016>   ADDQ.b #1,objectcount
00038AE0 <AmiBlitz3.ab3@28017>   MOVEM.l a1/d2,-(a7)
00038AE6 <AmiBlitz3.ab3@28018>   LEA ptr_parameterstore,a1
00038AE8 <AmiBlitz3.ab3@28021>     MOVE.b (a0)+,(a1)+
00038AEC <AmiBlitz3.ab3@28022>   BNE 'l1
00038AEE <AmiBlitz3.ab3@28024>   MOVEQ #13,d2
00038AF4 <AmiBlitz3.ab3@28025>   JSR findlabel2
00038AF8 <AmiBlitz3.ab3@28026>   BNE 'd
00038AFC <AmiBlitz3.ab3@28027>   TST.l 8(a2)
00038B00 <AmiBlitz3.ab3@28028>   BEQ 'd
00038B06 <AmiBlitz3.ab3@28029>   SUBQ.b #1,objectcount
00038B0A <AmiBlitz3.ab3@28030>   MOVEM.l (a7)+,a1/d2
00038B10 <AmiBlitz3.ab3@28031>   JSR skiprest
00038B18 <AmiBlitz3.ab3@28032>   MOVE.b #1,developobject
00038B1A <AmiBlitz3.ab3@28033> RTS
00038B1E <AmiBlitz3.ab3@28036>   MOVEM.l (a7)+,a1/d2
00038B26 <AmiBlitz3.ab3@28037>   MOVE.b #1,resdisable
00038B2C <AmiBlitz3.ab3@28040>   CLR.b developobject
00038B32 <AmiBlitz3.ab3@28041> JMP do_Macro
00038B38 <AmiBlitz3.ab3@28045> JMP illeaerr
00038B3E <AmiBlitz3.ab3@28049>   CLR.b typecheck
00038B44 <AmiBlitz3.ab3@28050>   CLR.b declare
00038B4A <AmiBlitz3.ab3@28051>   CLR.b declare2
00038B4E <AmiBlitz3.ab3@28052>   SUB.b #$30,d0
00038B52 <AmiBlitz3.ab3@28053>   BTST #0,d0
00038B56 <AmiBlitz3.ab3@28054>   BEQ 'l1
00038B5E <AmiBlitz3.ab3@28055>   MOVE.b #1,declare
00038B62 <AmiBlitz3.ab3@28058>   BTST #1,d0
00038B66 <AmiBlitz3.ab3@28059>   BEQ 'l2
00038B6E <AmiBlitz3.ab3@28060>   MOVE.b #1,declare2
00038B72 <AmiBlitz3.ab3@28063>   BTST #2,d0
00038B76 <AmiBlitz3.ab3@28064>   BEQ 'l3
00038B7E <AmiBlitz3.ab3@28065>   MOVE.b #1,typecheck
00038B82 <AmiBlitz3.ab3@28067>   BSR.w JUMP_get1bytemain
00038B84 <AmiBlitz3.ab3@28068> RTS
00038B8A <AmiBlitz3.ab3@28071> JMP get1bytemain
00038BB4 <AmiBlitz3.ab3@28075>   !basic
00038BD4 <AmiBlitz3.ab3@28077>   FillMem ?residents_table,?residents_table_end-?residents_table,0
00038BF2 <AmiBlitz3.ab3@28078>   !asm
00038BF4 <AmiBlitz3.ab3@28079> Return
00038BF6 <AmiBlitz3.ab3@28084>   MOVE.l d2,-(a7)                                          ; D2 -> stack
00038BF8 <AmiBlitz3.ab3@28085>   ADDQ #1,a5
00038BFA <AmiBlitz3.ab3@28086>   MOVE.l a5,-(a7)
00038C24 <AmiBlitz3.ab3@28087>   !basic
00038C2A <AmiBlitz3.ab3@28088>   MOVE.l (a7)+,d0 : _myD0.l = PutD0
00038C34 <AmiBlitz3.ab3@28089>   If _myD0
00038C74 <AmiBlitz3.ab3@28090>     newconst$ = UCase$(Peek.s(_myD0))
00038C7A <AmiBlitz3.ab3@28091>   Else
00038CB4 <AmiBlitz3.ab3@28092>     error{"INTERNAL: invalid pointer in check_newconstants!"}
00038CDC <AmiBlitz3.ab3@28093>     nwconst$="xxx"
00038D04 <AmiBlitz3.ab3@28095>   condata$ =""
00038D14 <AmiBlitz3.ab3@28096>   Poke.b ?skip_bytes,0
00038D70 <AmiBlitz3.ab3@28097>   If Left$(newconst$,2) = "__"
00038DCA <AmiBlitz3.ab3@28098>     Select Mid$(newconst$,3,4)
00038DEE <AmiBlitz3.ab3@28100>      Case "DATE"
00038E48 <AmiBlitz3.ab3@28101>       Select Mid$(newconst$,3,6)
00038E86 <AmiBlitz3.ab3@28102>       Case "DATE__" : DateFormat 1 : Poke.b ?skip_bytes,8
00038ECA <AmiBlitz3.ab3@28103>       Case "DATE_G" : DateFormat 0 : Poke.b ?skip_bytes,12
00038ED8 <AmiBlitz3.ab3@28104>       End Select
00038EE6 <AmiBlitz3.ab3@28105>       i.l=SystemDate
00038F0C <AmiBlitz3.ab3@28106>       condata$ = Date$ (i)
00038F8A <AmiBlitz3.ab3@28107>       condata$ = Replace$(condata$,"/",".")
00038FB4 <AmiBlitz3.ab3@28109>      Case "VER_"
00038FC4 <AmiBlitz3.ab3@28112>       actual_version.l = Peek.l(?versioninformation)
00038FD4 <AmiBlitz3.ab3@28113>       actual_build.l   = Peek.l(?number_of_builds)
00038FF8 <AmiBlitz3.ab3@28115>       Format ""
00039052 <AmiBlitz3.ab3@28116>       Select Mid$(newconst$,3,9)
00039076 <AmiBlitz3.ab3@28118>        Case "VER_MAJOR"
000390B2 <AmiBlitz3.ab3@28119>         condata$ = Str$(actual_version LSR 24)
000390DC <AmiBlitz3.ab3@28121>        Case "VER_MINOR"
00039120 <AmiBlitz3.ab3@28122>         condata$ = Str$((actual_version LSL 8) LSR 24)
0003914A <AmiBlitz3.ab3@28124>        Case "VER_PATCH"
0003918E <AmiBlitz3.ab3@28125>         condata$ = Str$((actual_version LSL 16) LSR 24 )
000391B8 <AmiBlitz3.ab3@28127>        Case "VER_BUILD"
000391DC <AmiBlitz3.ab3@28128>         Format ""
00039210 <AmiBlitz3.ab3@28129>         condata$ = Str$(actual_build)
00039216 <AmiBlitz3.ab3@28131>        Default
0003923E <AmiBlitz3.ab3@28132>         condata$ = "{unknown compiler constant}"
0003924C <AmiBlitz3.ab3@28134>       End Select
00039270 <AmiBlitz3.ab3@28135>       Format ""
00039280 <AmiBlitz3.ab3@28136>       Poke.b ?skip_bytes,11
000392AA <AmiBlitz3.ab3@28138>      Case "THIS"
00039304 <AmiBlitz3.ab3@28139>       Select Mid$(newconst$,3,9)
00039328 <AmiBlitz3.ab3@28141>        Case "THIS_FUNC"
00039338 <AmiBlitz3.ab3@28142>         Poke.b ?skip_bytes,15
00039358 <AmiBlitz3.ab3@28143>         If Peek.l(?currentfunction)<>0
000393A4 <AmiBlitz3.ab3@28144>           condata$ = Peek.s(Peek.l(?currentfunction) + 32 + #funcentry_extend + 1)
000393AA <AmiBlitz3.ab3@28145>         Else
000393D2 <AmiBlitz3.ab3@28146>           condata$ = "GLOBAL"
000393FC <AmiBlitz3.ab3@28149>        Case "THIS_INCL"
0003940C <AmiBlitz3.ab3@28150>         Poke.b ?skip_bytes,14
0003942C <AmiBlitz3.ab3@28151>         If Peek.l(?includetemp2)<>0
0003947A <AmiBlitz3.ab3@28152>           condata$ = dos_FilePart{Peek$(?includetemp2)}
000394A4 <AmiBlitz3.ab3@28155>        Case "THIS_POIN"
000394B4 <AmiBlitz3.ab3@28156>         Poke.b ?skip_bytes,14
000394D4 <AmiBlitz3.ab3@28157>         If Peek.l(?currentfunction)<>0
00039502 <AmiBlitz3.ab3@28158>           condata$ = Hex$(Peek.l(?currentfunction))
00039510 <AmiBlitz3.ab3@28161>       End Select
0003953A <AmiBlitz3.ab3@28163>      Case "CODE"
0003954A <AmiBlitz3.ab3@28164>       Poke.b ?skip_bytes,10
000395AC <AmiBlitz3.ab3@28165>       If Mid$(newconst$,3,8) = "CODELINE"
000395E8 <AmiBlitz3.ab3@28166>         condata$ = Str$(Peek.l(?globallinecount))
000395F6 <AmiBlitz3.ab3@28169>     End Select
000395FC <AmiBlitz3.ab3@28171>   Else
00039650 <AmiBlitz3.ab3@28172>     Select Left$(newconst$,1)
00039674 <AmiBlitz3.ab3@28174>      Case "R"
00039684 <AmiBlitz3.ab3@28175>       Poke.b ?skip_bytes,3
000396FC <AmiBlitz3.ab3@28176>       For i = 1 To Vallong(Mid$(newconst$,2,2))
0003977C <AmiBlitz3.ab3@28177>         condata$ = condata$ + Mid$(newconst$,4,1)
0003978C <AmiBlitz3.ab3@28178>       Next
000397B6 <AmiBlitz3.ab3@28180>      Case "N"
000397C6 <AmiBlitz3.ab3@28181>       Poke.b ?skip_bytes,1
000397EA <AmiBlitz3.ab3@28182>       condata$ = Chr$(10)
000397F0 <AmiBlitz3.ab3@28184>      Default
00039802 <AmiBlitz3.ab3@28185>       char1.b = Peek.b(&newconst$)
0003981A <AmiBlitz3.ab3@28186>       char2.b = Peek.b(&newconst$+1)
00039826 <AmiBlitz3.ab3@28187>       nibble1.l = -1
00039832 <AmiBlitz3.ab3@28188>       nibble2.l = -1
00039870 <AmiBlitz3.ab3@28190>       If (char1>=@"0" AND char1<=@"9") Then nibble1 = char1-@"0"
000398AE <AmiBlitz3.ab3@28191>       If (char2>=@"0" AND char2<=@"9") Then nibble2 = char2-@"0"
000398F2 <AmiBlitz3.ab3@28193>       If (char1>=@"a" AND char1<=@"f") Then nibble1 = char1-@"a" + 10
00039936 <AmiBlitz3.ab3@28194>       If (char2>=@"a" AND char2<=@"f") Then nibble2 = char2-@"a" + 10
0003997A <AmiBlitz3.ab3@28196>       If (char1>=@"A" AND char1<=@"F") Then nibble1 = char1-@"A" + 10
000399BE <AmiBlitz3.ab3@28197>       If (char2>=@"A" AND char2<=@"F") Then nibble2 = char2-@"A" + 10
000399E4 <AmiBlitz3.ab3@28199>       If nibble1>=0 AND nibble2>=0
000399FA <AmiBlitz3.ab3@28200>         newchar.l = (nibble1 LSL 4) + (nibble2)
00039A1E <AmiBlitz3.ab3@28201>         condata$ = Chr$(newchar)
00039A2E <AmiBlitz3.ab3@28202>         Poke.b ?skip_bytes,2
00039A3C <AmiBlitz3.ab3@28205>     End Select
00039A9C <AmiBlitz3.ab3@28207>   If condata$ = "" AND Peek.b(?skip_bytes)=0
00039BC2 <AmiBlitz3.ab3@28208>     !cout{"detected unknown const: " + newconst$}
00039BF6 <AmiBlitz3.ab3@28209>     condata$ = newconst$
00039C0C <AmiBlitz3.ab3@28212>   GetD0 FLen(condata$)-1                                    ; laenge zielstring -> Stack
00039C0E <AmiBlitz3.ab3@28213>   MOVE.l d0,d2
00039C10 <AmiBlitz3.ab3@28214>   MOVE.l d2,-(a7)
00039C16 <AmiBlitz3.ab3@28216>   GetD0 &condata$                                          ; kopieren des neuen Strings in den Zielstring
00039C18 <AmiBlitz3.ab3@28217>   MOVE.l d0,a0
00039C1A <AmiBlitz3.ab3@28220>     MOVE.b (a0)+,d1
00039C20 <AmiBlitz3.ab3@28221>     JSR pokedata1b
00039C24 <AmiBlitz3.ab3@28222>  DBF d2,'l1
00039C42 <AmiBlitz3.ab3@28224>   !asm
00039C44 <AmiBlitz3.ab3@28225>   MOVE.l (a7)+,d0                                          ; laenge Zielstring <- Stack
00039C46 <AmiBlitz3.ab3@28226>   MOVE.l (a7)+,d2                                          ; d2 <-Stack
00039C48 <AmiBlitz3.ab3@28227>   ADD.l d0,d2                                              ; eingefuegte chars zu D2 dazu
00039C4E <AmiBlitz3.ab3@28228>   ADD.l #1,d2
00039C54 <AmiBlitz3.ab3@28230>   MOVE.l #0,d0                                             ; a5 um konstantennamen weiterschieben
00039C5A <AmiBlitz3.ab3@28231>   MOVE.b skip_bytes,D0
00039C5C <AmiBlitz3.ab3@28232>   ADD.l D0,a5
00039C5E <AmiBlitz3.ab3@28233> RTS
00039C62 <AmiBlitz3.ab3@28308> MOVEM.l a3/d1,-(a7)
00039C68 <AmiBlitz3.ab3@28310> CLR.b a4a5store
00039C6A <AmiBlitz3.ab3@28311> 'continue: MOVE.b (a3)+,d1
00039C6E <AmiBlitz3.ab3@28312> CMP.b #$15,d1
00039C72 <AmiBlitz3.ab3@28313> BEQ 'find
00039C76 <AmiBlitz3.ab3@28314> CMP.b #$14,d1
00039C7A <AmiBlitz3.ab3@28315> BEQ 'find
00039C7E <AmiBlitz3.ab3@28316> CMP.b #$ff,d1
00039C82 <AmiBlitz3.ab3@28317> BNE 'continue
00039C86 <AmiBlitz3.ab3@28318> BRA 'notfind
00039C8C <AmiBlitz3.ab3@28320> MOVE.l #$48e7000c,d1                  ; write 68k movem.l a4/a5,-(a7)
00039C92 <AmiBlitz3.ab3@28321> JSR writelong
00039C9A <AmiBlitz3.ab3@28322> MOVE.b #1,a4a5store
00039C9E <AmiBlitz3.ab3@28323> 'notfind: MOVEM.l (a7)+,a3/d1
00039CA0 <AmiBlitz3.ab3@28324> RTS
00039CA6 <AmiBlitz3.ab3@28327> TST.b a4a5store
00039CAA <AmiBlitz3.ab3@28328> BEQ 'no
00039CB0 <AmiBlitz3.ab3@28329> MOVE.l #$4cdf3000,d1                  ; write 68k movem.l (a7)+,a4/a5
00039CB6 <AmiBlitz3.ab3@28330> JSR writelong
00039CBC <AmiBlitz3.ab3@28331> CLR.b a4a5store
00039CBE <AmiBlitz3.ab3@28332> 'no RTS
00039CBE <internal_commands.ab3@1> INCLUDE "internal_commands.ab3"
00039CC2 <internal_commands.ab3@13> INCLUDE "internal_commands.ab3"
00039CC4 <internal_commands.ab3@15> INCLUDE "internal_commands.ab3"
00039CCC <internal_commands.ab3@16> INCLUDE "internal_commands.ab3"
00039CD8 <internal_commands.ab3@17> INCLUDE "internal_commands.ab3"
00039CDC <internal_commands.ab3@21> INCLUDE "internal_commands.ab3"
00039CDE <internal_commands.ab3@22> INCLUDE "internal_commands.ab3"
00039CE2 <internal_commands.ab3@23> INCLUDE "internal_commands.ab3"
00039D2B <internal_commands.ab3@24> INCLUDE "internal_commands.ab3"
00039D2C <internal_commands.ab3@25> INCLUDE "internal_commands.ab3"
00039D30 <internal_commands.ab3@28> INCLUDE "internal_commands.ab3"
00039D32 <internal_commands.ab3@29> INCLUDE "internal_commands.ab3"
00039D36 <internal_commands.ab3@30> INCLUDE "internal_commands.ab3"
00039D52 <internal_commands.ab3@31> INCLUDE "internal_commands.ab3"
00039D56 <internal_commands.ab3@35> INCLUDE "internal_commands.ab3"
00039D58 <internal_commands.ab3@36> INCLUDE "internal_commands.ab3"
00039D5C <internal_commands.ab3@37> INCLUDE "internal_commands.ab3"
00039DB9 <internal_commands.ab3@38> INCLUDE "internal_commands.ab3"
00039DBA <internal_commands.ab3@39> INCLUDE "internal_commands.ab3"
00039DBE <internal_commands.ab3@42> INCLUDE "internal_commands.ab3"
00039DC0 <internal_commands.ab3@43> INCLUDE "internal_commands.ab3"
00039DC5 <internal_commands.ab3@44> INCLUDE "internal_commands.ab3"
00039DD5 <internal_commands.ab3@45> INCLUDE "internal_commands.ab3"
00039DD6 <internal_commands.ab3@46> INCLUDE "internal_commands.ab3"
00039DDA <internal_commands.ab3@49> INCLUDE "internal_commands.ab3"
00039DDC <internal_commands.ab3@50> INCLUDE "internal_commands.ab3"
00039DE2 <internal_commands.ab3@51> INCLUDE "internal_commands.ab3"
00039DF2 <internal_commands.ab3@52> INCLUDE "internal_commands.ab3"
00039DF6 <internal_commands.ab3@56> INCLUDE "internal_commands.ab3"
00039DF8 <internal_commands.ab3@57> INCLUDE "internal_commands.ab3"
00039DFF <internal_commands.ab3@58> INCLUDE "internal_commands.ab3"
00039E00 <internal_commands.ab3@59> INCLUDE "internal_commands.ab3"
00039E04 <internal_commands.ab3@63> INCLUDE "internal_commands.ab3"
00039E06 <internal_commands.ab3@64> INCLUDE "internal_commands.ab3"
00039E10 <internal_commands.ab3@65> INCLUDE "internal_commands.ab3"
00039E43 <internal_commands.ab3@66> INCLUDE "internal_commands.ab3"
00039E44 <internal_commands.ab3@67> INCLUDE "internal_commands.ab3"
00039E48 <internal_commands.ab3@70> INCLUDE "internal_commands.ab3"
00039E4A <internal_commands.ab3@71> INCLUDE "internal_commands.ab3"
00039E53 <internal_commands.ab3@72> INCLUDE "internal_commands.ab3"
00039E8E <internal_commands.ab3@73> INCLUDE "internal_commands.ab3"
00039E92 <internal_commands.ab3@77> INCLUDE "internal_commands.ab3"
00039E94 <internal_commands.ab3@78> INCLUDE "internal_commands.ab3"
00039E9E <internal_commands.ab3@79> INCLUDE "internal_commands.ab3"
00039E9F <internal_commands.ab3@80> INCLUDE "internal_commands.ab3"
00039EA0 <internal_commands.ab3@81> INCLUDE "internal_commands.ab3"
00039EA4 <internal_commands.ab3@84> INCLUDE "internal_commands.ab3"
00039EA6 <internal_commands.ab3@85> INCLUDE "internal_commands.ab3"
00039EA9 <internal_commands.ab3@86> INCLUDE "internal_commands.ab3"
00039EC0 <internal_commands.ab3@87> INCLUDE "internal_commands.ab3"
00039EC4 <internal_commands.ab3@91> INCLUDE "internal_commands.ab3"
00039EC6 <internal_commands.ab3@92> INCLUDE "internal_commands.ab3"
00039ECC <internal_commands.ab3@93> INCLUDE "internal_commands.ab3"
00039ED9 <internal_commands.ab3@94> INCLUDE "internal_commands.ab3"
00039EDA <internal_commands.ab3@95> INCLUDE "internal_commands.ab3"
00039EDE <internal_commands.ab3@98> INCLUDE "internal_commands.ab3"
00039EE0 <internal_commands.ab3@99> INCLUDE "internal_commands.ab3"
00039EE6 <internal_commands.ab3@100> INCLUDE "internal_commands.ab3"
00039EF2 <internal_commands.ab3@101> INCLUDE "internal_commands.ab3"
00039EF6 <internal_commands.ab3@105> INCLUDE "internal_commands.ab3"
00039EF8 <internal_commands.ab3@106> INCLUDE "internal_commands.ab3"
00039EFF <internal_commands.ab3@107> INCLUDE "internal_commands.ab3"
00039F0C <internal_commands.ab3@108> INCLUDE "internal_commands.ab3"
00039F10 <internal_commands.ab3@112> INCLUDE "internal_commands.ab3"
00039F12 <internal_commands.ab3@113> INCLUDE "internal_commands.ab3"
00039F17 <internal_commands.ab3@114> INCLUDE "internal_commands.ab3"
00039F24 <internal_commands.ab3@115> INCLUDE "internal_commands.ab3"
00039F28 <internal_commands.ab3@119> INCLUDE "internal_commands.ab3"
00039F2A <internal_commands.ab3@120> INCLUDE "internal_commands.ab3"
00039F32 <internal_commands.ab3@121> INCLUDE "internal_commands.ab3"
00039F33 <internal_commands.ab3@122> INCLUDE "internal_commands.ab3"
00039F34 <internal_commands.ab3@123> INCLUDE "internal_commands.ab3"
00039F38 <internal_commands.ab3@126> INCLUDE "internal_commands.ab3"
00039F3A <internal_commands.ab3@127> INCLUDE "internal_commands.ab3"
00039F42 <internal_commands.ab3@128> INCLUDE "internal_commands.ab3"
00039F43 <internal_commands.ab3@129> INCLUDE "internal_commands.ab3"
00039F44 <internal_commands.ab3@130> INCLUDE "internal_commands.ab3"
00039F48 <internal_commands.ab3@133> INCLUDE "internal_commands.ab3"
00039F4A <internal_commands.ab3@134> INCLUDE "internal_commands.ab3"
00039F53 <internal_commands.ab3@135> INCLUDE "internal_commands.ab3"
00039F5E <internal_commands.ab3@136> INCLUDE "internal_commands.ab3"
00039F62 <internal_commands.ab3@140> INCLUDE "internal_commands.ab3"
00039F64 <internal_commands.ab3@141> INCLUDE "internal_commands.ab3"
00039F6C <internal_commands.ab3@142> INCLUDE "internal_commands.ab3"
00039F77 <internal_commands.ab3@143> INCLUDE "internal_commands.ab3"
00039F78 <internal_commands.ab3@144> INCLUDE "internal_commands.ab3"
00039F7C <internal_commands.ab3@147> INCLUDE "internal_commands.ab3"
00039F7E <internal_commands.ab3@148> INCLUDE "internal_commands.ab3"
00039F85 <internal_commands.ab3@149> INCLUDE "internal_commands.ab3"
00039FE7 <internal_commands.ab3@150> INCLUDE "internal_commands.ab3"
00039FE8 <internal_commands.ab3@151> INCLUDE "internal_commands.ab3"
00039FEC <internal_commands.ab3@154> INCLUDE "internal_commands.ab3"
00039FEE <internal_commands.ab3@155> INCLUDE "internal_commands.ab3"
00039FF5 <internal_commands.ab3@156> INCLUDE "internal_commands.ab3"
0003A004 <internal_commands.ab3@157> INCLUDE "internal_commands.ab3"
0003A008 <internal_commands.ab3@161> INCLUDE "internal_commands.ab3"
0003A00A <internal_commands.ab3@162> INCLUDE "internal_commands.ab3"
0003A00E <internal_commands.ab3@163> INCLUDE "internal_commands.ab3"
0003A044 <internal_commands.ab3@164> INCLUDE "internal_commands.ab3"
0003A048 <internal_commands.ab3@168> INCLUDE "internal_commands.ab3"
0003A04A <internal_commands.ab3@169> INCLUDE "internal_commands.ab3"
0003A04F <internal_commands.ab3@170> INCLUDE "internal_commands.ab3"
0003A05E <internal_commands.ab3@171> INCLUDE "internal_commands.ab3"
0003A062 <internal_commands.ab3@175> INCLUDE "internal_commands.ab3"
0003A064 <internal_commands.ab3@176> INCLUDE "internal_commands.ab3"
0003A067 <internal_commands.ab3@177> INCLUDE "internal_commands.ab3"
0003A088 <internal_commands.ab3@178> INCLUDE "internal_commands.ab3"
0003A08C <internal_commands.ab3@182> INCLUDE "internal_commands.ab3"
0003A08E <internal_commands.ab3@183> INCLUDE "internal_commands.ab3"
0003A093 <internal_commands.ab3@184> INCLUDE "internal_commands.ab3"
0003A09F <internal_commands.ab3@185> INCLUDE "internal_commands.ab3"
0003A0A0 <internal_commands.ab3@186> INCLUDE "internal_commands.ab3"
0003A0A4 <internal_commands.ab3@189> INCLUDE "internal_commands.ab3"
0003A0A6 <internal_commands.ab3@190> INCLUDE "internal_commands.ab3"
0003A0AB <internal_commands.ab3@191> INCLUDE "internal_commands.ab3"
0003A0C2 <internal_commands.ab3@192> INCLUDE "internal_commands.ab3"
0003A0C6 <internal_commands.ab3@196> INCLUDE "internal_commands.ab3"
0003A0C8 <internal_commands.ab3@197> INCLUDE "internal_commands.ab3"
0003A0CD <internal_commands.ab3@198> INCLUDE "internal_commands.ab3"
0003A0DC <internal_commands.ab3@199> INCLUDE "internal_commands.ab3"
0003A0E0 <internal_commands.ab3@203> INCLUDE "internal_commands.ab3"
0003A0E2 <internal_commands.ab3@204> INCLUDE "internal_commands.ab3"
0003A0E7 <internal_commands.ab3@205> INCLUDE "internal_commands.ab3"
0003A106 <internal_commands.ab3@206> INCLUDE "internal_commands.ab3"
0003A10A <internal_commands.ab3@210> INCLUDE "internal_commands.ab3"
0003A10C <internal_commands.ab3@211> INCLUDE "internal_commands.ab3"
0003A111 <internal_commands.ab3@212> INCLUDE "internal_commands.ab3"
0003A130 <internal_commands.ab3@213> INCLUDE "internal_commands.ab3"
0003A134 <internal_commands.ab3@217> INCLUDE "internal_commands.ab3"
0003A136 <internal_commands.ab3@218> INCLUDE "internal_commands.ab3"
0003A13C <internal_commands.ab3@219> INCLUDE "internal_commands.ab3"
0003A13D <internal_commands.ab3@220> INCLUDE "internal_commands.ab3"
0003A13E <internal_commands.ab3@221> INCLUDE "internal_commands.ab3"
0003A142 <internal_commands.ab3@224> INCLUDE "internal_commands.ab3"
0003A144 <internal_commands.ab3@225> INCLUDE "internal_commands.ab3"
0003A149 <internal_commands.ab3@226> INCLUDE "internal_commands.ab3"
0003A14A <internal_commands.ab3@227> INCLUDE "internal_commands.ab3"
0003A14E <internal_commands.ab3@231> INCLUDE "internal_commands.ab3"
0003A150 <internal_commands.ab3@232> INCLUDE "internal_commands.ab3"
0003A155 <internal_commands.ab3@233> INCLUDE "internal_commands.ab3"
0003A162 <internal_commands.ab3@234> INCLUDE "internal_commands.ab3"
0003A166 <internal_commands.ab3@238> INCLUDE "internal_commands.ab3"
0003A168 <internal_commands.ab3@239> INCLUDE "internal_commands.ab3"
0003A16D <internal_commands.ab3@240> INCLUDE "internal_commands.ab3"
0003A17C <internal_commands.ab3@241> INCLUDE "internal_commands.ab3"
0003A180 <internal_commands.ab3@245> INCLUDE "internal_commands.ab3"
0003A182 <internal_commands.ab3@246> INCLUDE "internal_commands.ab3"
0003A187 <internal_commands.ab3@247> INCLUDE "internal_commands.ab3"
0003A196 <internal_commands.ab3@248> INCLUDE "internal_commands.ab3"
0003A19A <internal_commands.ab3@252> INCLUDE "internal_commands.ab3"
0003A19C <internal_commands.ab3@253> INCLUDE "internal_commands.ab3"
0003A1A2 <internal_commands.ab3@254> INCLUDE "internal_commands.ab3"
0003A1BF <internal_commands.ab3@255> INCLUDE "internal_commands.ab3"
0003A1C0 <internal_commands.ab3@256> INCLUDE "internal_commands.ab3"
0003A1C4 <internal_commands.ab3@259> INCLUDE "internal_commands.ab3"
0003A1C6 <internal_commands.ab3@260> INCLUDE "internal_commands.ab3"
0003A1CC <internal_commands.ab3@261> INCLUDE "internal_commands.ab3"
0003A1E9 <internal_commands.ab3@262> INCLUDE "internal_commands.ab3"
0003A1EA <internal_commands.ab3@263> INCLUDE "internal_commands.ab3"
0003A1EE <internal_commands.ab3@266> INCLUDE "internal_commands.ab3"
0003A1F0 <internal_commands.ab3@267> INCLUDE "internal_commands.ab3"
0003A1F3 <internal_commands.ab3@268> INCLUDE "internal_commands.ab3"
0003A20A <internal_commands.ab3@269> INCLUDE "internal_commands.ab3"
0003A20E <internal_commands.ab3@273> INCLUDE "internal_commands.ab3"
0003A210 <internal_commands.ab3@274> INCLUDE "internal_commands.ab3"
0003A213 <internal_commands.ab3@275> INCLUDE "internal_commands.ab3"
0003A222 <internal_commands.ab3@276> INCLUDE "internal_commands.ab3"
0003A226 <internal_commands.ab3@280> INCLUDE "internal_commands.ab3"
0003A228 <internal_commands.ab3@281> INCLUDE "internal_commands.ab3"
0003A22D <internal_commands.ab3@282> INCLUDE "internal_commands.ab3"
0003A22E <internal_commands.ab3@283> INCLUDE "internal_commands.ab3"
0003A232 <internal_commands.ab3@287> INCLUDE "internal_commands.ab3"
0003A234 <internal_commands.ab3@288> INCLUDE "internal_commands.ab3"
0003A238 <internal_commands.ab3@289> INCLUDE "internal_commands.ab3"
0003A24D <internal_commands.ab3@290> INCLUDE "internal_commands.ab3"
0003A24E <internal_commands.ab3@291> INCLUDE "internal_commands.ab3"
0003A252 <internal_commands.ab3@294> INCLUDE "internal_commands.ab3"
0003A254 <internal_commands.ab3@295> INCLUDE "internal_commands.ab3"
0003A25B <internal_commands.ab3@296> INCLUDE "internal_commands.ab3"
0003A274 <internal_commands.ab3@297> INCLUDE "internal_commands.ab3"
0003A278 <internal_commands.ab3@301> INCLUDE "internal_commands.ab3"
0003A27A <internal_commands.ab3@302> INCLUDE "internal_commands.ab3"
0003A281 <internal_commands.ab3@303> INCLUDE "internal_commands.ab3"
0003A28C <internal_commands.ab3@304> INCLUDE "internal_commands.ab3"
0003A290 <internal_commands.ab3@308> INCLUDE "internal_commands.ab3"
0003A292 <internal_commands.ab3@309> INCLUDE "internal_commands.ab3"
0003A297 <internal_commands.ab3@310> INCLUDE "internal_commands.ab3"
0003A2AE <internal_commands.ab3@311> INCLUDE "internal_commands.ab3"
0003A2B2 <internal_commands.ab3@315> INCLUDE "internal_commands.ab3"
0003A2B4 <internal_commands.ab3@316> INCLUDE "internal_commands.ab3"
0003A2B8 <internal_commands.ab3@317> INCLUDE "internal_commands.ab3"
0003A2CF <internal_commands.ab3@318> INCLUDE "internal_commands.ab3"
0003A2D0 <internal_commands.ab3@319> INCLUDE "internal_commands.ab3"
0003A2D4 <internal_commands.ab3@322> INCLUDE "internal_commands.ab3"
0003A2D6 <internal_commands.ab3@323> INCLUDE "internal_commands.ab3"
0003A2DB <internal_commands.ab3@324> INCLUDE "internal_commands.ab3"
0003A2DC <internal_commands.ab3@325> INCLUDE "internal_commands.ab3"
0003A2E0 <internal_commands.ab3@329> INCLUDE "internal_commands.ab3"
0003A2E2 <internal_commands.ab3@330> INCLUDE "internal_commands.ab3"
0003A2E7 <internal_commands.ab3@331> INCLUDE "internal_commands.ab3"
0003A2EB <internal_commands.ab3@332> INCLUDE "internal_commands.ab3"
0003A2EC <internal_commands.ab3@333> INCLUDE "internal_commands.ab3"
0003A2F0 <internal_commands.ab3@336> INCLUDE "internal_commands.ab3"
0003A2F2 <internal_commands.ab3@337> INCLUDE "internal_commands.ab3"
0003A2F9 <internal_commands.ab3@338> INCLUDE "internal_commands.ab3"
0003A311 <internal_commands.ab3@339> INCLUDE "internal_commands.ab3"
0003A312 <internal_commands.ab3@340> INCLUDE "internal_commands.ab3"
0003A316 <internal_commands.ab3@343> INCLUDE "internal_commands.ab3"
0003A318 <internal_commands.ab3@344> INCLUDE "internal_commands.ab3"
0003A31F <internal_commands.ab3@345> INCLUDE "internal_commands.ab3"
0003A324 <internal_commands.ab3@346> INCLUDE "internal_commands.ab3"
0003A328 <internal_commands.ab3@350> INCLUDE "internal_commands.ab3"
0003A32A <internal_commands.ab3@351> INCLUDE "internal_commands.ab3"
0003A331 <internal_commands.ab3@352> INCLUDE "internal_commands.ab3"
0003A336 <internal_commands.ab3@353> INCLUDE "internal_commands.ab3"
0003A33A <internal_commands.ab3@357> INCLUDE "internal_commands.ab3"
0003A33C <internal_commands.ab3@358> INCLUDE "internal_commands.ab3"
0003A343 <internal_commands.ab3@359> INCLUDE "internal_commands.ab3"
0003A35E <internal_commands.ab3@360> INCLUDE "internal_commands.ab3"
0003A362 <internal_commands.ab3@364> INCLUDE "internal_commands.ab3"
0003A364 <internal_commands.ab3@365> INCLUDE "internal_commands.ab3"
0003A36C <internal_commands.ab3@366> INCLUDE "internal_commands.ab3"
0003A385 <internal_commands.ab3@367> INCLUDE "internal_commands.ab3"
0003A386 <internal_commands.ab3@368> INCLUDE "internal_commands.ab3"
0003A38A <internal_commands.ab3@371> INCLUDE "internal_commands.ab3"
0003A38C <internal_commands.ab3@372> INCLUDE "internal_commands.ab3"
0003A392 <internal_commands.ab3@373> INCLUDE "internal_commands.ab3"
0003A393 <internal_commands.ab3@374> INCLUDE "internal_commands.ab3"
0003A394 <internal_commands.ab3@375> INCLUDE "internal_commands.ab3"
0003A398 <internal_commands.ab3@378> INCLUDE "internal_commands.ab3"
0003A39A <internal_commands.ab3@379> INCLUDE "internal_commands.ab3"
0003A3A0 <internal_commands.ab3@380> INCLUDE "internal_commands.ab3"
0003A3A1 <internal_commands.ab3@381> INCLUDE "internal_commands.ab3"
0003A3A2 <internal_commands.ab3@382> INCLUDE "internal_commands.ab3"
0003A3A6 <internal_commands.ab3@385> INCLUDE "internal_commands.ab3"
0003A3A8 <internal_commands.ab3@386> INCLUDE "internal_commands.ab3"
0003A3AF <internal_commands.ab3@387> INCLUDE "internal_commands.ab3"
0003A3B0 <internal_commands.ab3@388> INCLUDE "internal_commands.ab3"
0003A3B4 <internal_commands.ab3@392> INCLUDE "internal_commands.ab3"
0003A3B6 <internal_commands.ab3@393> INCLUDE "internal_commands.ab3"
0003A3BC <internal_commands.ab3@394> INCLUDE "internal_commands.ab3"
0003A3C5 <internal_commands.ab3@395> INCLUDE "internal_commands.ab3"
0003A3C6 <internal_commands.ab3@396> INCLUDE "internal_commands.ab3"
0003A3CA <internal_commands.ab3@399> INCLUDE "internal_commands.ab3"
0003A3CC <internal_commands.ab3@400> INCLUDE "internal_commands.ab3"
0003A3D4 <internal_commands.ab3@401> INCLUDE "internal_commands.ab3"
0003A3E1 <internal_commands.ab3@402> INCLUDE "internal_commands.ab3"
0003A3E2 <internal_commands.ab3@403> INCLUDE "internal_commands.ab3"
0003A3E6 <internal_commands.ab3@406> INCLUDE "internal_commands.ab3"
0003A3E8 <internal_commands.ab3@407> INCLUDE "internal_commands.ab3"
0003A3F0 <internal_commands.ab3@408> INCLUDE "internal_commands.ab3"
0003A3FD <internal_commands.ab3@409> INCLUDE "internal_commands.ab3"
0003A3FE <internal_commands.ab3@410> INCLUDE "internal_commands.ab3"
0003A402 <internal_commands.ab3@413> INCLUDE "internal_commands.ab3"
0003A404 <internal_commands.ab3@414> INCLUDE "internal_commands.ab3"
0003A40C <internal_commands.ab3@415> INCLUDE "internal_commands.ab3"
0003A419 <internal_commands.ab3@416> INCLUDE "internal_commands.ab3"
0003A41A <internal_commands.ab3@417> INCLUDE "internal_commands.ab3"
0003A41E <internal_commands.ab3@420> INCLUDE "internal_commands.ab3"
0003A420 <internal_commands.ab3@421> INCLUDE "internal_commands.ab3"
0003A425 <internal_commands.ab3@422> INCLUDE "internal_commands.ab3"
0003A426 <internal_commands.ab3@423> INCLUDE "internal_commands.ab3"
0003A42A <internal_commands.ab3@437> INCLUDE "internal_commands.ab3"
0003A42C <internal_commands.ab3@438> INCLUDE "internal_commands.ab3"
0003A431 <internal_commands.ab3@439> INCLUDE "internal_commands.ab3"
0003A432 <internal_commands.ab3@440> INCLUDE "internal_commands.ab3"
0003A434 <internal_commands.ab3@443> INCLUDE "internal_commands.ab3"
0003A438 <internal_commands.ab3@444> INCLUDE "internal_commands.ab3"
0003A43A <internal_commands.ab3@445> INCLUDE "internal_commands.ab3"
0003A43C <internal_commands.ab3@446> INCLUDE "internal_commands.ab3"
0003A440 <internal_commands.ab3@447> INCLUDE "internal_commands.ab3"
0003A442 <internal_commands.ab3@448> INCLUDE "internal_commands.ab3"
0003A446 <internal_commands.ab3@452> INCLUDE "internal_commands.ab3"
0003A448 <internal_commands.ab3@453> INCLUDE "internal_commands.ab3"
0003A44C <internal_commands.ab3@454> INCLUDE "internal_commands.ab3"
0003A44D <internal_commands.ab3@455> INCLUDE "internal_commands.ab3"
0003A44E <internal_commands.ab3@456> INCLUDE "internal_commands.ab3"
0003A450 <internal_commands.ab3@458> INCLUDE "internal_commands.ab3"
0003A454 <internal_commands.ab3@459> INCLUDE "internal_commands.ab3"
0003A456 <internal_commands.ab3@460> INCLUDE "internal_commands.ab3"
0003A458 <internal_commands.ab3@461> INCLUDE "internal_commands.ab3"
0003A45C <internal_commands.ab3@462> INCLUDE "internal_commands.ab3"
0003A45E <internal_commands.ab3@463> INCLUDE "internal_commands.ab3"
0003A462 <internal_commands.ab3@467> INCLUDE "internal_commands.ab3"
0003A464 <internal_commands.ab3@468> INCLUDE "internal_commands.ab3"
0003A469 <internal_commands.ab3@469> INCLUDE "internal_commands.ab3"
0003A46A <internal_commands.ab3@470> INCLUDE "internal_commands.ab3"
0003A46C <internal_commands.ab3@473> INCLUDE "internal_commands.ab3"
0003A470 <internal_commands.ab3@474> INCLUDE "internal_commands.ab3"
0003A472 <internal_commands.ab3@475> INCLUDE "internal_commands.ab3"
0003A474 <internal_commands.ab3@476> INCLUDE "internal_commands.ab3"
0003A478 <internal_commands.ab3@477> INCLUDE "internal_commands.ab3"
0003A47A <internal_commands.ab3@478> INCLUDE "internal_commands.ab3"
0003A47E <internal_commands.ab3@482> INCLUDE "internal_commands.ab3"
0003A480 <internal_commands.ab3@483> INCLUDE "internal_commands.ab3"
0003A485 <internal_commands.ab3@484> INCLUDE "internal_commands.ab3"
0003A486 <internal_commands.ab3@485> INCLUDE "internal_commands.ab3"
0003A488 <internal_commands.ab3@488> INCLUDE "internal_commands.ab3"
0003A48C <internal_commands.ab3@489> INCLUDE "internal_commands.ab3"
0003A48E <internal_commands.ab3@490> INCLUDE "internal_commands.ab3"
0003A490 <internal_commands.ab3@491> INCLUDE "internal_commands.ab3"
0003A494 <internal_commands.ab3@492> INCLUDE "internal_commands.ab3"
0003A496 <internal_commands.ab3@493> INCLUDE "internal_commands.ab3"
0003A49A <internal_commands.ab3@497> INCLUDE "internal_commands.ab3"
0003A49C <internal_commands.ab3@498> INCLUDE "internal_commands.ab3"
0003A4A1 <internal_commands.ab3@499> INCLUDE "internal_commands.ab3"
0003A4A2 <internal_commands.ab3@500> INCLUDE "internal_commands.ab3"
0003A4A4 <internal_commands.ab3@503> INCLUDE "internal_commands.ab3"
0003A4A8 <internal_commands.ab3@504> INCLUDE "internal_commands.ab3"
0003A4AA <internal_commands.ab3@505> INCLUDE "internal_commands.ab3"
0003A4AC <internal_commands.ab3@506> INCLUDE "internal_commands.ab3"
0003A4B0 <internal_commands.ab3@507> INCLUDE "internal_commands.ab3"
0003A4B2 <internal_commands.ab3@508> INCLUDE "internal_commands.ab3"
0003A4B6 <internal_commands.ab3@512> INCLUDE "internal_commands.ab3"
0003A4B8 <internal_commands.ab3@513> INCLUDE "internal_commands.ab3"
0003A4BD <internal_commands.ab3@514> INCLUDE "internal_commands.ab3"
0003A4BE <internal_commands.ab3@515> INCLUDE "internal_commands.ab3"
0003A4C0 <internal_commands.ab3@518> INCLUDE "internal_commands.ab3"
0003A4C4 <internal_commands.ab3@519> INCLUDE "internal_commands.ab3"
0003A4C6 <internal_commands.ab3@520> INCLUDE "internal_commands.ab3"
0003A4C8 <internal_commands.ab3@521> INCLUDE "internal_commands.ab3"
0003A4CC <internal_commands.ab3@522> INCLUDE "internal_commands.ab3"
0003A4CE <internal_commands.ab3@523> INCLUDE "internal_commands.ab3"
0003A4D2 <internal_commands.ab3@527> INCLUDE "internal_commands.ab3"
0003A4D4 <internal_commands.ab3@528> INCLUDE "internal_commands.ab3"
0003A4D8 <internal_commands.ab3@529> INCLUDE "internal_commands.ab3"
0003A4D9 <internal_commands.ab3@530> INCLUDE "internal_commands.ab3"
0003A4DA <internal_commands.ab3@531> INCLUDE "internal_commands.ab3"
0003A4DC <internal_commands.ab3@533> INCLUDE "internal_commands.ab3"
0003A4E0 <internal_commands.ab3@534> INCLUDE "internal_commands.ab3"
0003A4E2 <internal_commands.ab3@535> INCLUDE "internal_commands.ab3"
0003A4E4 <internal_commands.ab3@536> INCLUDE "internal_commands.ab3"
0003A4E8 <internal_commands.ab3@537> INCLUDE "internal_commands.ab3"
0003A4EA <internal_commands.ab3@538> INCLUDE "internal_commands.ab3"
0003A4EE <internal_commands.ab3@542> INCLUDE "internal_commands.ab3"
0003A4F0 <internal_commands.ab3@543> INCLUDE "internal_commands.ab3"
0003A4F5 <internal_commands.ab3@544> INCLUDE "internal_commands.ab3"
0003A4F6 <internal_commands.ab3@545> INCLUDE "internal_commands.ab3"
0003A4F8 <internal_commands.ab3@548> INCLUDE "internal_commands.ab3"
0003A4FC <internal_commands.ab3@549> INCLUDE "internal_commands.ab3"
0003A4FE <internal_commands.ab3@550> INCLUDE "internal_commands.ab3"
0003A500 <internal_commands.ab3@551> INCLUDE "internal_commands.ab3"
0003A504 <internal_commands.ab3@552> INCLUDE "internal_commands.ab3"
0003A506 <internal_commands.ab3@553> INCLUDE "internal_commands.ab3"
0003A50A <internal_commands.ab3@557> INCLUDE "internal_commands.ab3"
0003A50C <internal_commands.ab3@558> INCLUDE "internal_commands.ab3"
0003A510 <internal_commands.ab3@559> INCLUDE "internal_commands.ab3"
0003A511 <internal_commands.ab3@560> INCLUDE "internal_commands.ab3"
0003A512 <internal_commands.ab3@561> INCLUDE "internal_commands.ab3"
0003A514 <internal_commands.ab3@563> INCLUDE "internal_commands.ab3"
0003A518 <internal_commands.ab3@564> INCLUDE "internal_commands.ab3"
0003A51A <internal_commands.ab3@565> INCLUDE "internal_commands.ab3"
0003A51C <internal_commands.ab3@566> INCLUDE "internal_commands.ab3"
0003A520 <internal_commands.ab3@567> INCLUDE "internal_commands.ab3"
0003A522 <internal_commands.ab3@568> INCLUDE "internal_commands.ab3"
0003A526 <internal_commands.ab3@572> INCLUDE "internal_commands.ab3"
0003A528 <internal_commands.ab3@573> INCLUDE "internal_commands.ab3"
0003A52C <internal_commands.ab3@574> INCLUDE "internal_commands.ab3"
0003A52D <internal_commands.ab3@575> INCLUDE "internal_commands.ab3"
0003A52E <internal_commands.ab3@576> INCLUDE "internal_commands.ab3"
0003A530 <internal_commands.ab3@578> INCLUDE "internal_commands.ab3"
0003A534 <internal_commands.ab3@579> INCLUDE "internal_commands.ab3"
0003A536 <internal_commands.ab3@580> INCLUDE "internal_commands.ab3"
0003A538 <internal_commands.ab3@581> INCLUDE "internal_commands.ab3"
0003A53C <internal_commands.ab3@582> INCLUDE "internal_commands.ab3"
0003A53E <internal_commands.ab3@583> INCLUDE "internal_commands.ab3"
0003A542 <internal_commands.ab3@587> INCLUDE "internal_commands.ab3"
0003A544 <internal_commands.ab3@588> INCLUDE "internal_commands.ab3"
0003A548 <internal_commands.ab3@589> INCLUDE "internal_commands.ab3"
0003A549 <internal_commands.ab3@590> INCLUDE "internal_commands.ab3"
0003A54A <internal_commands.ab3@591> INCLUDE "internal_commands.ab3"
0003A54C <internal_commands.ab3@593> INCLUDE "internal_commands.ab3"
0003A550 <internal_commands.ab3@594> INCLUDE "internal_commands.ab3"
0003A552 <internal_commands.ab3@595> INCLUDE "internal_commands.ab3"
0003A554 <internal_commands.ab3@596> INCLUDE "internal_commands.ab3"
0003A558 <internal_commands.ab3@597> INCLUDE "internal_commands.ab3"
0003A55A <internal_commands.ab3@598> INCLUDE "internal_commands.ab3"
0003A55E <internal_commands.ab3@602> INCLUDE "internal_commands.ab3"
0003A560 <internal_commands.ab3@603> INCLUDE "internal_commands.ab3"
0003A564 <internal_commands.ab3@604> INCLUDE "internal_commands.ab3"
0003A565 <internal_commands.ab3@605> INCLUDE "internal_commands.ab3"
0003A566 <internal_commands.ab3@606> INCLUDE "internal_commands.ab3"
0003A568 <internal_commands.ab3@608> INCLUDE "internal_commands.ab3"
0003A56C <internal_commands.ab3@609> INCLUDE "internal_commands.ab3"
0003A56E <internal_commands.ab3@610> INCLUDE "internal_commands.ab3"
0003A570 <internal_commands.ab3@611> INCLUDE "internal_commands.ab3"
0003A574 <internal_commands.ab3@612> INCLUDE "internal_commands.ab3"
0003A576 <internal_commands.ab3@613> INCLUDE "internal_commands.ab3"
0003A57A <internal_commands.ab3@617> INCLUDE "internal_commands.ab3"
0003A57C <internal_commands.ab3@618> INCLUDE "internal_commands.ab3"
0003A580 <internal_commands.ab3@619> INCLUDE "internal_commands.ab3"
0003A581 <internal_commands.ab3@620> INCLUDE "internal_commands.ab3"
0003A582 <internal_commands.ab3@621> INCLUDE "internal_commands.ab3"
0003A584 <internal_commands.ab3@623> INCLUDE "internal_commands.ab3"
0003A588 <internal_commands.ab3@624> INCLUDE "internal_commands.ab3"
0003A58A <internal_commands.ab3@625> INCLUDE "internal_commands.ab3"
0003A58C <internal_commands.ab3@626> INCLUDE "internal_commands.ab3"
0003A590 <internal_commands.ab3@627> INCLUDE "internal_commands.ab3"
0003A592 <internal_commands.ab3@628> INCLUDE "internal_commands.ab3"
0003A596 <internal_commands.ab3@632> INCLUDE "internal_commands.ab3"
0003A598 <internal_commands.ab3@633> INCLUDE "internal_commands.ab3"
0003A59C <internal_commands.ab3@634> INCLUDE "internal_commands.ab3"
0003A59D <internal_commands.ab3@635> INCLUDE "internal_commands.ab3"
0003A59E <internal_commands.ab3@636> INCLUDE "internal_commands.ab3"
0003A5A0 <internal_commands.ab3@638> INCLUDE "internal_commands.ab3"
0003A5A4 <internal_commands.ab3@639> INCLUDE "internal_commands.ab3"
0003A5A6 <internal_commands.ab3@640> INCLUDE "internal_commands.ab3"
0003A5A8 <internal_commands.ab3@641> INCLUDE "internal_commands.ab3"
0003A5AC <internal_commands.ab3@642> INCLUDE "internal_commands.ab3"
0003A5AE <internal_commands.ab3@643> INCLUDE "internal_commands.ab3"
0003A5B2 <internal_commands.ab3@647> INCLUDE "internal_commands.ab3"
0003A5B4 <internal_commands.ab3@648> INCLUDE "internal_commands.ab3"
0003A5B8 <internal_commands.ab3@649> INCLUDE "internal_commands.ab3"
0003A5B9 <internal_commands.ab3@650> INCLUDE "internal_commands.ab3"
0003A5BA <internal_commands.ab3@651> INCLUDE "internal_commands.ab3"
0003A5BC <internal_commands.ab3@653> INCLUDE "internal_commands.ab3"
0003A5C0 <internal_commands.ab3@654> INCLUDE "internal_commands.ab3"
0003A5C2 <internal_commands.ab3@655> INCLUDE "internal_commands.ab3"
0003A5C4 <internal_commands.ab3@656> INCLUDE "internal_commands.ab3"
0003A5C8 <internal_commands.ab3@657> INCLUDE "internal_commands.ab3"
0003A5CA <internal_commands.ab3@658> INCLUDE "internal_commands.ab3"
0003A5CE <internal_commands.ab3@662> INCLUDE "internal_commands.ab3"
0003A5D0 <internal_commands.ab3@663> INCLUDE "internal_commands.ab3"
0003A5D4 <internal_commands.ab3@664> INCLUDE "internal_commands.ab3"
0003A5D5 <internal_commands.ab3@665> INCLUDE "internal_commands.ab3"
0003A5D6 <internal_commands.ab3@666> INCLUDE "internal_commands.ab3"
0003A5D8 <internal_commands.ab3@668> INCLUDE "internal_commands.ab3"
0003A5DC <internal_commands.ab3@669> INCLUDE "internal_commands.ab3"
0003A5DE <internal_commands.ab3@670> INCLUDE "internal_commands.ab3"
0003A5E0 <internal_commands.ab3@671> INCLUDE "internal_commands.ab3"
0003A5E4 <internal_commands.ab3@672> INCLUDE "internal_commands.ab3"
0003A5E6 <internal_commands.ab3@673> INCLUDE "internal_commands.ab3"
0003A5EA <internal_commands.ab3@677> INCLUDE "internal_commands.ab3"
0003A5EC <internal_commands.ab3@678> INCLUDE "internal_commands.ab3"
0003A5F0 <internal_commands.ab3@679> INCLUDE "internal_commands.ab3"
0003A5F1 <internal_commands.ab3@680> INCLUDE "internal_commands.ab3"
0003A5F2 <internal_commands.ab3@681> INCLUDE "internal_commands.ab3"
0003A5F4 <internal_commands.ab3@683> INCLUDE "internal_commands.ab3"
0003A5F8 <internal_commands.ab3@684> INCLUDE "internal_commands.ab3"
0003A5FA <internal_commands.ab3@685> INCLUDE "internal_commands.ab3"
0003A5FC <internal_commands.ab3@686> INCLUDE "internal_commands.ab3"
0003A600 <internal_commands.ab3@687> INCLUDE "internal_commands.ab3"
0003A602 <internal_commands.ab3@688> INCLUDE "internal_commands.ab3"
0003A606 <internal_commands.ab3@692> INCLUDE "internal_commands.ab3"
0003A608 <internal_commands.ab3@693> INCLUDE "internal_commands.ab3"
0003A60C <internal_commands.ab3@694> INCLUDE "internal_commands.ab3"
0003A60D <internal_commands.ab3@695> INCLUDE "internal_commands.ab3"
0003A60E <internal_commands.ab3@696> INCLUDE "internal_commands.ab3"
0003A610 <internal_commands.ab3@698> INCLUDE "internal_commands.ab3"
0003A614 <internal_commands.ab3@699> INCLUDE "internal_commands.ab3"
0003A616 <internal_commands.ab3@700> INCLUDE "internal_commands.ab3"
0003A618 <internal_commands.ab3@701> INCLUDE "internal_commands.ab3"
0003A61C <internal_commands.ab3@702> INCLUDE "internal_commands.ab3"
0003A61E <internal_commands.ab3@703> INCLUDE "internal_commands.ab3"
0003A622 <internal_commands.ab3@707> INCLUDE "internal_commands.ab3"
0003A624 <internal_commands.ab3@708> INCLUDE "internal_commands.ab3"
0003A628 <internal_commands.ab3@709> INCLUDE "internal_commands.ab3"
0003A629 <internal_commands.ab3@710> INCLUDE "internal_commands.ab3"
0003A62A <internal_commands.ab3@711> INCLUDE "internal_commands.ab3"
0003A62C <internal_commands.ab3@713> INCLUDE "internal_commands.ab3"
0003A630 <internal_commands.ab3@714> INCLUDE "internal_commands.ab3"
0003A632 <internal_commands.ab3@715> INCLUDE "internal_commands.ab3"
0003A634 <internal_commands.ab3@716> INCLUDE "internal_commands.ab3"
0003A638 <internal_commands.ab3@717> INCLUDE "internal_commands.ab3"
0003A63A <internal_commands.ab3@718> INCLUDE "internal_commands.ab3"
0003A63E <internal_commands.ab3@722> INCLUDE "internal_commands.ab3"
0003A640 <internal_commands.ab3@723> INCLUDE "internal_commands.ab3"
0003A644 <internal_commands.ab3@724> INCLUDE "internal_commands.ab3"
0003A645 <internal_commands.ab3@725> INCLUDE "internal_commands.ab3"
0003A646 <internal_commands.ab3@726> INCLUDE "internal_commands.ab3"
0003A648 <internal_commands.ab3@728> INCLUDE "internal_commands.ab3"
0003A64C <internal_commands.ab3@729> INCLUDE "internal_commands.ab3"
0003A64E <internal_commands.ab3@730> INCLUDE "internal_commands.ab3"
0003A650 <internal_commands.ab3@731> INCLUDE "internal_commands.ab3"
0003A654 <internal_commands.ab3@732> INCLUDE "internal_commands.ab3"
0003A656 <internal_commands.ab3@733> INCLUDE "internal_commands.ab3"
0003A65A <internal_commands.ab3@737> INCLUDE "internal_commands.ab3"
0003A65C <internal_commands.ab3@738> INCLUDE "internal_commands.ab3"
0003A660 <internal_commands.ab3@739> INCLUDE "internal_commands.ab3"
0003A661 <internal_commands.ab3@740> INCLUDE "internal_commands.ab3"
0003A662 <internal_commands.ab3@741> INCLUDE "internal_commands.ab3"
0003A664 <internal_commands.ab3@743> INCLUDE "internal_commands.ab3"
0003A668 <internal_commands.ab3@744> INCLUDE "internal_commands.ab3"
0003A66A <internal_commands.ab3@745> INCLUDE "internal_commands.ab3"
0003A66C <internal_commands.ab3@746> INCLUDE "internal_commands.ab3"
0003A670 <internal_commands.ab3@747> INCLUDE "internal_commands.ab3"
0003A672 <internal_commands.ab3@748> INCLUDE "internal_commands.ab3"
0003A676 <internal_commands.ab3@752> INCLUDE "internal_commands.ab3"
0003A678 <internal_commands.ab3@753> INCLUDE "internal_commands.ab3"
0003A67C <internal_commands.ab3@754> INCLUDE "internal_commands.ab3"
0003A67D <internal_commands.ab3@755> INCLUDE "internal_commands.ab3"
0003A67E <internal_commands.ab3@756> INCLUDE "internal_commands.ab3"
0003A680 <internal_commands.ab3@758> INCLUDE "internal_commands.ab3"
0003A684 <internal_commands.ab3@759> INCLUDE "internal_commands.ab3"
0003A686 <internal_commands.ab3@760> INCLUDE "internal_commands.ab3"
0003A688 <internal_commands.ab3@761> INCLUDE "internal_commands.ab3"
0003A68C <internal_commands.ab3@762> INCLUDE "internal_commands.ab3"
0003A68E <internal_commands.ab3@763> INCLUDE "internal_commands.ab3"
0003A692 <internal_commands.ab3@767> INCLUDE "internal_commands.ab3"
0003A694 <internal_commands.ab3@768> INCLUDE "internal_commands.ab3"
0003A698 <internal_commands.ab3@769> INCLUDE "internal_commands.ab3"
0003A699 <internal_commands.ab3@770> INCLUDE "internal_commands.ab3"
0003A69A <internal_commands.ab3@771> INCLUDE "internal_commands.ab3"
0003A69C <internal_commands.ab3@773> INCLUDE "internal_commands.ab3"
0003A6A0 <internal_commands.ab3@774> INCLUDE "internal_commands.ab3"
0003A6A2 <internal_commands.ab3@775> INCLUDE "internal_commands.ab3"
0003A6A4 <internal_commands.ab3@776> INCLUDE "internal_commands.ab3"
0003A6A8 <internal_commands.ab3@777> INCLUDE "internal_commands.ab3"
0003A6AA <internal_commands.ab3@778> INCLUDE "internal_commands.ab3"
0003A6AE <internal_commands.ab3@782> INCLUDE "internal_commands.ab3"
0003A6B0 <internal_commands.ab3@783> INCLUDE "internal_commands.ab3"
0003A6B4 <internal_commands.ab3@784> INCLUDE "internal_commands.ab3"
0003A6B5 <internal_commands.ab3@785> INCLUDE "internal_commands.ab3"
0003A6B6 <internal_commands.ab3@786> INCLUDE "internal_commands.ab3"
0003A6B8 <internal_commands.ab3@788> INCLUDE "internal_commands.ab3"
0003A6BC <internal_commands.ab3@789> INCLUDE "internal_commands.ab3"
0003A6BE <internal_commands.ab3@790> INCLUDE "internal_commands.ab3"
0003A6C0 <internal_commands.ab3@791> INCLUDE "internal_commands.ab3"
0003A6C4 <internal_commands.ab3@792> INCLUDE "internal_commands.ab3"
0003A6C6 <internal_commands.ab3@793> INCLUDE "internal_commands.ab3"
0003A6CA <internal_commands.ab3@797> INCLUDE "internal_commands.ab3"
0003A6CC <internal_commands.ab3@798> INCLUDE "internal_commands.ab3"
0003A6D1 <internal_commands.ab3@799> INCLUDE "internal_commands.ab3"
0003A6D2 <internal_commands.ab3@800> INCLUDE "internal_commands.ab3"
0003A6D4 <internal_commands.ab3@803> INCLUDE "internal_commands.ab3"
0003A6D8 <internal_commands.ab3@804> INCLUDE "internal_commands.ab3"
0003A6DA <internal_commands.ab3@805> INCLUDE "internal_commands.ab3"
0003A6DC <internal_commands.ab3@806> INCLUDE "internal_commands.ab3"
0003A6E0 <internal_commands.ab3@807> INCLUDE "internal_commands.ab3"
0003A6E2 <internal_commands.ab3@808> INCLUDE "internal_commands.ab3"
0003A6E6 <internal_commands.ab3@812> INCLUDE "internal_commands.ab3"
0003A6E8 <internal_commands.ab3@813> INCLUDE "internal_commands.ab3"
0003A6ED <internal_commands.ab3@814> INCLUDE "internal_commands.ab3"
0003A6EE <internal_commands.ab3@815> INCLUDE "internal_commands.ab3"
0003A6F0 <internal_commands.ab3@818> INCLUDE "internal_commands.ab3"
0003A6F4 <internal_commands.ab3@819> INCLUDE "internal_commands.ab3"
0003A6F6 <internal_commands.ab3@820> INCLUDE "internal_commands.ab3"
0003A6F8 <internal_commands.ab3@821> INCLUDE "internal_commands.ab3"
0003A6FC <internal_commands.ab3@822> INCLUDE "internal_commands.ab3"
0003A6FE <internal_commands.ab3@823> INCLUDE "internal_commands.ab3"
0003A702 <internal_commands.ab3@827> INCLUDE "internal_commands.ab3"
0003A704 <internal_commands.ab3@828> INCLUDE "internal_commands.ab3"
0003A709 <internal_commands.ab3@829> INCLUDE "internal_commands.ab3"
0003A70A <internal_commands.ab3@830> INCLUDE "internal_commands.ab3"
0003A70C <internal_commands.ab3@833> INCLUDE "internal_commands.ab3"
0003A710 <internal_commands.ab3@834> INCLUDE "internal_commands.ab3"
0003A712 <internal_commands.ab3@835> INCLUDE "internal_commands.ab3"
0003A714 <internal_commands.ab3@836> INCLUDE "internal_commands.ab3"
0003A718 <internal_commands.ab3@837> INCLUDE "internal_commands.ab3"
0003A71A <internal_commands.ab3@838> INCLUDE "internal_commands.ab3"
0003A71E <internal_commands.ab3@842> INCLUDE "internal_commands.ab3"
0003A720 <internal_commands.ab3@843> INCLUDE "internal_commands.ab3"
0003A725 <internal_commands.ab3@844> INCLUDE "internal_commands.ab3"
0003A726 <internal_commands.ab3@845> INCLUDE "internal_commands.ab3"
0003A728 <internal_commands.ab3@848> INCLUDE "internal_commands.ab3"
0003A72C <internal_commands.ab3@849> INCLUDE "internal_commands.ab3"
0003A72E <internal_commands.ab3@850> INCLUDE "internal_commands.ab3"
0003A730 <internal_commands.ab3@851> INCLUDE "internal_commands.ab3"
0003A734 <internal_commands.ab3@852> INCLUDE "internal_commands.ab3"
0003A736 <internal_commands.ab3@853> INCLUDE "internal_commands.ab3"
0003A73A <internal_commands.ab3@857> INCLUDE "internal_commands.ab3"
0003A73C <internal_commands.ab3@858> INCLUDE "internal_commands.ab3"
0003A740 <internal_commands.ab3@859> INCLUDE "internal_commands.ab3"
0003A741 <internal_commands.ab3@860> INCLUDE "internal_commands.ab3"
0003A742 <internal_commands.ab3@861> INCLUDE "internal_commands.ab3"
0003A744 <internal_commands.ab3@863> INCLUDE "internal_commands.ab3"
0003A748 <internal_commands.ab3@864> INCLUDE "internal_commands.ab3"
0003A74A <internal_commands.ab3@865> INCLUDE "internal_commands.ab3"
0003A74C <internal_commands.ab3@866> INCLUDE "internal_commands.ab3"
0003A750 <internal_commands.ab3@867> INCLUDE "internal_commands.ab3"
0003A752 <internal_commands.ab3@868> INCLUDE "internal_commands.ab3"
0003A756 <internal_commands.ab3@872> INCLUDE "internal_commands.ab3"
0003A758 <internal_commands.ab3@873> INCLUDE "internal_commands.ab3"
0003A75C <internal_commands.ab3@874> INCLUDE "internal_commands.ab3"
0003A75D <internal_commands.ab3@875> INCLUDE "internal_commands.ab3"
0003A75E <internal_commands.ab3@876> INCLUDE "internal_commands.ab3"
0003A760 <internal_commands.ab3@878> INCLUDE "internal_commands.ab3"
0003A764 <internal_commands.ab3@879> INCLUDE "internal_commands.ab3"
0003A766 <internal_commands.ab3@880> INCLUDE "internal_commands.ab3"
0003A768 <internal_commands.ab3@881> INCLUDE "internal_commands.ab3"
0003A76C <internal_commands.ab3@882> INCLUDE "internal_commands.ab3"
0003A76E <internal_commands.ab3@883> INCLUDE "internal_commands.ab3"
0003A772 <internal_commands.ab3@887> INCLUDE "internal_commands.ab3"
0003A774 <internal_commands.ab3@888> INCLUDE "internal_commands.ab3"
0003A778 <internal_commands.ab3@889> INCLUDE "internal_commands.ab3"
0003A779 <internal_commands.ab3@890> INCLUDE "internal_commands.ab3"
0003A77A <internal_commands.ab3@891> INCLUDE "internal_commands.ab3"
0003A77C <internal_commands.ab3@893> INCLUDE "internal_commands.ab3"
0003A780 <internal_commands.ab3@894> INCLUDE "internal_commands.ab3"
0003A782 <internal_commands.ab3@895> INCLUDE "internal_commands.ab3"
0003A784 <internal_commands.ab3@896> INCLUDE "internal_commands.ab3"
0003A788 <internal_commands.ab3@897> INCLUDE "internal_commands.ab3"
0003A78A <internal_commands.ab3@898> INCLUDE "internal_commands.ab3"
0003A78E <internal_commands.ab3@902> INCLUDE "internal_commands.ab3"
0003A790 <internal_commands.ab3@903> INCLUDE "internal_commands.ab3"
0003A794 <internal_commands.ab3@904> INCLUDE "internal_commands.ab3"
0003A795 <internal_commands.ab3@905> INCLUDE "internal_commands.ab3"
0003A796 <internal_commands.ab3@906> INCLUDE "internal_commands.ab3"
0003A798 <internal_commands.ab3@908> INCLUDE "internal_commands.ab3"
0003A79C <internal_commands.ab3@909> INCLUDE "internal_commands.ab3"
0003A79E <internal_commands.ab3@910> INCLUDE "internal_commands.ab3"
0003A7A0 <internal_commands.ab3@911> INCLUDE "internal_commands.ab3"
0003A7A4 <internal_commands.ab3@912> INCLUDE "internal_commands.ab3"
0003A7A6 <internal_commands.ab3@913> INCLUDE "internal_commands.ab3"
0003A7AA <internal_commands.ab3@917> INCLUDE "internal_commands.ab3"
0003A7AC <internal_commands.ab3@918> INCLUDE "internal_commands.ab3"
0003A7B0 <internal_commands.ab3@919> INCLUDE "internal_commands.ab3"
0003A7B1 <internal_commands.ab3@920> INCLUDE "internal_commands.ab3"
0003A7B2 <internal_commands.ab3@921> INCLUDE "internal_commands.ab3"
0003A7B4 <internal_commands.ab3@923> INCLUDE "internal_commands.ab3"
0003A7B8 <internal_commands.ab3@924> INCLUDE "internal_commands.ab3"
0003A7BA <internal_commands.ab3@925> INCLUDE "internal_commands.ab3"
0003A7BC <internal_commands.ab3@926> INCLUDE "internal_commands.ab3"
0003A7C0 <internal_commands.ab3@927> INCLUDE "internal_commands.ab3"
0003A7C2 <internal_commands.ab3@928> INCLUDE "internal_commands.ab3"
0003A7C6 <internal_commands.ab3@932> INCLUDE "internal_commands.ab3"
0003A7C8 <internal_commands.ab3@933> INCLUDE "internal_commands.ab3"
0003A7CD <internal_commands.ab3@934> INCLUDE "internal_commands.ab3"
0003A7CE <internal_commands.ab3@935> INCLUDE "internal_commands.ab3"
0003A7D0 <internal_commands.ab3@938> INCLUDE "internal_commands.ab3"
0003A7D4 <internal_commands.ab3@939> INCLUDE "internal_commands.ab3"
0003A7D6 <internal_commands.ab3@940> INCLUDE "internal_commands.ab3"
0003A7D8 <internal_commands.ab3@941> INCLUDE "internal_commands.ab3"
0003A7DC <internal_commands.ab3@942> INCLUDE "internal_commands.ab3"
0003A7DE <internal_commands.ab3@943> INCLUDE "internal_commands.ab3"
0003A7E2 <internal_commands.ab3@947> INCLUDE "internal_commands.ab3"
0003A7E4 <internal_commands.ab3@948> INCLUDE "internal_commands.ab3"
0003A7E9 <internal_commands.ab3@949> INCLUDE "internal_commands.ab3"
0003A7EA <internal_commands.ab3@950> INCLUDE "internal_commands.ab3"
0003A7EC <internal_commands.ab3@953> INCLUDE "internal_commands.ab3"
0003A7F0 <internal_commands.ab3@954> INCLUDE "internal_commands.ab3"
0003A7F2 <internal_commands.ab3@955> INCLUDE "internal_commands.ab3"
0003A7F4 <internal_commands.ab3@956> INCLUDE "internal_commands.ab3"
0003A7F8 <internal_commands.ab3@957> INCLUDE "internal_commands.ab3"
0003A7FA <internal_commands.ab3@958> INCLUDE "internal_commands.ab3"
0003A7FE <internal_commands.ab3@962> INCLUDE "internal_commands.ab3"
0003A800 <internal_commands.ab3@963> INCLUDE "internal_commands.ab3"
0003A805 <internal_commands.ab3@964> INCLUDE "internal_commands.ab3"
0003A806 <internal_commands.ab3@965> INCLUDE "internal_commands.ab3"
0003A808 <internal_commands.ab3@968> INCLUDE "internal_commands.ab3"
0003A80C <internal_commands.ab3@969> INCLUDE "internal_commands.ab3"
0003A80E <internal_commands.ab3@970> INCLUDE "internal_commands.ab3"
0003A810 <internal_commands.ab3@971> INCLUDE "internal_commands.ab3"
0003A814 <internal_commands.ab3@972> INCLUDE "internal_commands.ab3"
0003A816 <internal_commands.ab3@973> INCLUDE "internal_commands.ab3"
0003A81A <internal_commands.ab3@977> INCLUDE "internal_commands.ab3"
0003A81C <internal_commands.ab3@978> INCLUDE "internal_commands.ab3"
0003A821 <internal_commands.ab3@979> INCLUDE "internal_commands.ab3"
0003A822 <internal_commands.ab3@980> INCLUDE "internal_commands.ab3"
0003A824 <internal_commands.ab3@983> INCLUDE "internal_commands.ab3"
0003A828 <internal_commands.ab3@984> INCLUDE "internal_commands.ab3"
0003A82A <internal_commands.ab3@985> INCLUDE "internal_commands.ab3"
0003A82C <internal_commands.ab3@986> INCLUDE "internal_commands.ab3"
0003A830 <internal_commands.ab3@987> INCLUDE "internal_commands.ab3"
0003A832 <internal_commands.ab3@988> INCLUDE "internal_commands.ab3"
0003A836 <internal_commands.ab3@992> INCLUDE "internal_commands.ab3"
0003A838 <internal_commands.ab3@993> INCLUDE "internal_commands.ab3"
0003A83D <internal_commands.ab3@994> INCLUDE "internal_commands.ab3"
0003A83E <internal_commands.ab3@995> INCLUDE "internal_commands.ab3"
0003A840 <internal_commands.ab3@998> INCLUDE "internal_commands.ab3"
0003A844 <internal_commands.ab3@999> INCLUDE "internal_commands.ab3"
0003A846 <internal_commands.ab3@1000> INCLUDE "internal_commands.ab3"
0003A848 <internal_commands.ab3@1001> INCLUDE "internal_commands.ab3"
0003A84C <internal_commands.ab3@1002> INCLUDE "internal_commands.ab3"
0003A84E <internal_commands.ab3@1003> INCLUDE "internal_commands.ab3"
0003A852 <internal_commands.ab3@1007> INCLUDE "internal_commands.ab3"
0003A854 <internal_commands.ab3@1008> INCLUDE "internal_commands.ab3"
0003A859 <internal_commands.ab3@1009> INCLUDE "internal_commands.ab3"
0003A85A <internal_commands.ab3@1010> INCLUDE "internal_commands.ab3"
0003A85C <internal_commands.ab3@1013> INCLUDE "internal_commands.ab3"
0003A860 <internal_commands.ab3@1014> INCLUDE "internal_commands.ab3"
0003A862 <internal_commands.ab3@1015> INCLUDE "internal_commands.ab3"
0003A864 <internal_commands.ab3@1016> INCLUDE "internal_commands.ab3"
0003A868 <internal_commands.ab3@1017> INCLUDE "internal_commands.ab3"
0003A86A <internal_commands.ab3@1018> INCLUDE "internal_commands.ab3"
0003A86E <internal_commands.ab3@1022> INCLUDE "internal_commands.ab3"
0003A870 <internal_commands.ab3@1023> INCLUDE "internal_commands.ab3"
0003A875 <internal_commands.ab3@1024> INCLUDE "internal_commands.ab3"
0003A876 <internal_commands.ab3@1025> INCLUDE "internal_commands.ab3"
0003A878 <internal_commands.ab3@1028> INCLUDE "internal_commands.ab3"
0003A87C <internal_commands.ab3@1029> INCLUDE "internal_commands.ab3"
0003A87E <internal_commands.ab3@1030> INCLUDE "internal_commands.ab3"
0003A880 <internal_commands.ab3@1031> INCLUDE "internal_commands.ab3"
0003A884 <internal_commands.ab3@1032> INCLUDE "internal_commands.ab3"
0003A886 <internal_commands.ab3@1033> INCLUDE "internal_commands.ab3"
0003A88A <internal_commands.ab3@1037> INCLUDE "internal_commands.ab3"
0003A88C <internal_commands.ab3@1038> INCLUDE "internal_commands.ab3"
0003A891 <internal_commands.ab3@1039> INCLUDE "internal_commands.ab3"
0003A892 <internal_commands.ab3@1040> INCLUDE "internal_commands.ab3"
0003A894 <internal_commands.ab3@1043> INCLUDE "internal_commands.ab3"
0003A898 <internal_commands.ab3@1044> INCLUDE "internal_commands.ab3"
0003A89A <internal_commands.ab3@1045> INCLUDE "internal_commands.ab3"
0003A89C <internal_commands.ab3@1046> INCLUDE "internal_commands.ab3"
0003A8A0 <internal_commands.ab3@1047> INCLUDE "internal_commands.ab3"
0003A8A2 <internal_commands.ab3@1048> INCLUDE "internal_commands.ab3"
0003A8A6 <internal_commands.ab3@1052> INCLUDE "internal_commands.ab3"
0003A8A8 <internal_commands.ab3@1053> INCLUDE "internal_commands.ab3"
0003A8AD <internal_commands.ab3@1054> INCLUDE "internal_commands.ab3"
0003A8AE <internal_commands.ab3@1055> INCLUDE "internal_commands.ab3"
0003A8B0 <internal_commands.ab3@1058> INCLUDE "internal_commands.ab3"
0003A8B4 <internal_commands.ab3@1059> INCLUDE "internal_commands.ab3"
0003A8B6 <internal_commands.ab3@1060> INCLUDE "internal_commands.ab3"
0003A8B8 <internal_commands.ab3@1061> INCLUDE "internal_commands.ab3"
0003A8BC <internal_commands.ab3@1062> INCLUDE "internal_commands.ab3"
0003A8BE <internal_commands.ab3@1063> INCLUDE "internal_commands.ab3"
0003A8C2 <internal_commands.ab3@1067> INCLUDE "internal_commands.ab3"
0003A8C4 <internal_commands.ab3@1068> INCLUDE "internal_commands.ab3"
0003A8C9 <internal_commands.ab3@1069> INCLUDE "internal_commands.ab3"
0003A8CA <internal_commands.ab3@1070> INCLUDE "internal_commands.ab3"
0003A8CC <internal_commands.ab3@1073> INCLUDE "internal_commands.ab3"
0003A8D0 <internal_commands.ab3@1074> INCLUDE "internal_commands.ab3"
0003A8D2 <internal_commands.ab3@1075> INCLUDE "internal_commands.ab3"
0003A8D4 <internal_commands.ab3@1076> INCLUDE "internal_commands.ab3"
0003A8D8 <internal_commands.ab3@1077> INCLUDE "internal_commands.ab3"
0003A8DA <internal_commands.ab3@1078> INCLUDE "internal_commands.ab3"
0003A8DE <internal_commands.ab3@1082> INCLUDE "internal_commands.ab3"
0003A8E0 <internal_commands.ab3@1083> INCLUDE "internal_commands.ab3"
0003A8E5 <internal_commands.ab3@1084> INCLUDE "internal_commands.ab3"
0003A8E6 <internal_commands.ab3@1085> INCLUDE "internal_commands.ab3"
0003A8E8 <internal_commands.ab3@1088> INCLUDE "internal_commands.ab3"
0003A8EC <internal_commands.ab3@1089> INCLUDE "internal_commands.ab3"
0003A8EE <internal_commands.ab3@1090> INCLUDE "internal_commands.ab3"
0003A8F0 <internal_commands.ab3@1091> INCLUDE "internal_commands.ab3"
0003A8F4 <internal_commands.ab3@1092> INCLUDE "internal_commands.ab3"
0003A8F6 <internal_commands.ab3@1093> INCLUDE "internal_commands.ab3"
0003A8FA <internal_commands.ab3@1097> INCLUDE "internal_commands.ab3"
0003A8FC <internal_commands.ab3@1098> INCLUDE "internal_commands.ab3"
0003A901 <internal_commands.ab3@1099> INCLUDE "internal_commands.ab3"
0003A902 <internal_commands.ab3@1100> INCLUDE "internal_commands.ab3"
0003A904 <internal_commands.ab3@1103> INCLUDE "internal_commands.ab3"
0003A908 <internal_commands.ab3@1104> INCLUDE "internal_commands.ab3"
0003A90A <internal_commands.ab3@1105> INCLUDE "internal_commands.ab3"
0003A90C <internal_commands.ab3@1106> INCLUDE "internal_commands.ab3"
0003A910 <internal_commands.ab3@1107> INCLUDE "internal_commands.ab3"
0003A912 <internal_commands.ab3@1108> INCLUDE "internal_commands.ab3"
0003A916 <internal_commands.ab3@1112> INCLUDE "internal_commands.ab3"
0003A918 <internal_commands.ab3@1113> INCLUDE "internal_commands.ab3"
0003A91D <internal_commands.ab3@1114> INCLUDE "internal_commands.ab3"
0003A91E <internal_commands.ab3@1115> INCLUDE "internal_commands.ab3"
0003A920 <internal_commands.ab3@1118> INCLUDE "internal_commands.ab3"
0003A924 <internal_commands.ab3@1119> INCLUDE "internal_commands.ab3"
0003A926 <internal_commands.ab3@1120> INCLUDE "internal_commands.ab3"
0003A928 <internal_commands.ab3@1121> INCLUDE "internal_commands.ab3"
0003A92C <internal_commands.ab3@1122> INCLUDE "internal_commands.ab3"
0003A92E <internal_commands.ab3@1123> INCLUDE "internal_commands.ab3"
0003A932 <internal_commands.ab3@1127> INCLUDE "internal_commands.ab3"
0003A934 <internal_commands.ab3@1128> INCLUDE "internal_commands.ab3"
0003A939 <internal_commands.ab3@1129> INCLUDE "internal_commands.ab3"
0003A93A <internal_commands.ab3@1130> INCLUDE "internal_commands.ab3"
0003A93C <internal_commands.ab3@1133> INCLUDE "internal_commands.ab3"
0003A940 <internal_commands.ab3@1134> INCLUDE "internal_commands.ab3"
0003A942 <internal_commands.ab3@1135> INCLUDE "internal_commands.ab3"
0003A944 <internal_commands.ab3@1136> INCLUDE "internal_commands.ab3"
0003A948 <internal_commands.ab3@1137> INCLUDE "internal_commands.ab3"
0003A94A <internal_commands.ab3@1138> INCLUDE "internal_commands.ab3"
0003A94E <internal_commands.ab3@1142> INCLUDE "internal_commands.ab3"
0003A950 <internal_commands.ab3@1143> INCLUDE "internal_commands.ab3"
0003A955 <internal_commands.ab3@1144> INCLUDE "internal_commands.ab3"
0003A956 <internal_commands.ab3@1145> INCLUDE "internal_commands.ab3"
0003A958 <internal_commands.ab3@1148> INCLUDE "internal_commands.ab3"
0003A95C <internal_commands.ab3@1149> INCLUDE "internal_commands.ab3"
0003A95E <internal_commands.ab3@1150> INCLUDE "internal_commands.ab3"
0003A960 <internal_commands.ab3@1151> INCLUDE "internal_commands.ab3"
0003A964 <internal_commands.ab3@1152> INCLUDE "internal_commands.ab3"
0003A966 <internal_commands.ab3@1153> INCLUDE "internal_commands.ab3"
0003A96A <internal_commands.ab3@1157> INCLUDE "internal_commands.ab3"
0003A96C <internal_commands.ab3@1158> INCLUDE "internal_commands.ab3"
0003A971 <internal_commands.ab3@1159> INCLUDE "internal_commands.ab3"
0003A972 <internal_commands.ab3@1160> INCLUDE "internal_commands.ab3"
0003A974 <internal_commands.ab3@1163> INCLUDE "internal_commands.ab3"
0003A978 <internal_commands.ab3@1164> INCLUDE "internal_commands.ab3"
0003A97A <internal_commands.ab3@1165> INCLUDE "internal_commands.ab3"
0003A97C <internal_commands.ab3@1166> INCLUDE "internal_commands.ab3"
0003A980 <internal_commands.ab3@1167> INCLUDE "internal_commands.ab3"
0003A982 <internal_commands.ab3@1168> INCLUDE "internal_commands.ab3"
0003A986 <internal_commands.ab3@1172> INCLUDE "internal_commands.ab3"
0003A988 <internal_commands.ab3@1173> INCLUDE "internal_commands.ab3"
0003A98D <internal_commands.ab3@1174> INCLUDE "internal_commands.ab3"
0003A98E <internal_commands.ab3@1175> INCLUDE "internal_commands.ab3"
0003A990 <internal_commands.ab3@1178> INCLUDE "internal_commands.ab3"
0003A994 <internal_commands.ab3@1179> INCLUDE "internal_commands.ab3"
0003A996 <internal_commands.ab3@1180> INCLUDE "internal_commands.ab3"
0003A998 <internal_commands.ab3@1181> INCLUDE "internal_commands.ab3"
0003A99C <internal_commands.ab3@1182> INCLUDE "internal_commands.ab3"
0003A99E <internal_commands.ab3@1183> INCLUDE "internal_commands.ab3"
0003A9A2 <internal_commands.ab3@1186> INCLUDE "internal_commands.ab3"
0003A9A4 <internal_commands.ab3@1187> INCLUDE "internal_commands.ab3"
0003A9A8 <internal_commands.ab3@1188> INCLUDE "internal_commands.ab3"
0003A9A9 <internal_commands.ab3@1189> INCLUDE "internal_commands.ab3"
0003A9AA <internal_commands.ab3@1190> INCLUDE "internal_commands.ab3"
0003A9AC <internal_commands.ab3@1192> INCLUDE "internal_commands.ab3"
0003A9B0 <internal_commands.ab3@1193> INCLUDE "internal_commands.ab3"
0003A9B2 <internal_commands.ab3@1194> INCLUDE "internal_commands.ab3"
0003A9B4 <internal_commands.ab3@1195> INCLUDE "internal_commands.ab3"
0003A9B8 <internal_commands.ab3@1196> INCLUDE "internal_commands.ab3"
0003A9BA <internal_commands.ab3@1197> INCLUDE "internal_commands.ab3"
0003A9BE <internal_commands.ab3@1201> INCLUDE "internal_commands.ab3"
0003A9C0 <internal_commands.ab3@1202> INCLUDE "internal_commands.ab3"
0003A9C5 <internal_commands.ab3@1203> INCLUDE "internal_commands.ab3"
0003A9C6 <internal_commands.ab3@1204> INCLUDE "internal_commands.ab3"
0003A9C8 <internal_commands.ab3@1207> INCLUDE "internal_commands.ab3"
0003A9CC <internal_commands.ab3@1208> INCLUDE "internal_commands.ab3"
0003A9CE <internal_commands.ab3@1209> INCLUDE "internal_commands.ab3"
0003A9D0 <internal_commands.ab3@1210> INCLUDE "internal_commands.ab3"
0003A9D4 <internal_commands.ab3@1211> INCLUDE "internal_commands.ab3"
0003A9D6 <internal_commands.ab3@1212> INCLUDE "internal_commands.ab3"
0003A9DA <internal_commands.ab3@1216> INCLUDE "internal_commands.ab3"
0003A9DC <internal_commands.ab3@1217> INCLUDE "internal_commands.ab3"
0003A9E0 <internal_commands.ab3@1218> INCLUDE "internal_commands.ab3"
0003A9E1 <internal_commands.ab3@1219> INCLUDE "internal_commands.ab3"
0003A9E2 <internal_commands.ab3@1220> INCLUDE "internal_commands.ab3"
0003A9E4 <internal_commands.ab3@1222> INCLUDE "internal_commands.ab3"
0003A9E8 <internal_commands.ab3@1223> INCLUDE "internal_commands.ab3"
0003A9EA <internal_commands.ab3@1224> INCLUDE "internal_commands.ab3"
0003A9EC <internal_commands.ab3@1225> INCLUDE "internal_commands.ab3"
0003A9F0 <internal_commands.ab3@1226> INCLUDE "internal_commands.ab3"
0003A9F2 <internal_commands.ab3@1227> INCLUDE "internal_commands.ab3"
0003A9F6 <internal_commands.ab3@1231> INCLUDE "internal_commands.ab3"
0003A9F8 <internal_commands.ab3@1232> INCLUDE "internal_commands.ab3"
0003A9FD <internal_commands.ab3@1233> INCLUDE "internal_commands.ab3"
0003A9FE <internal_commands.ab3@1234> INCLUDE "internal_commands.ab3"
0003AA00 <internal_commands.ab3@1237> INCLUDE "internal_commands.ab3"
0003AA04 <internal_commands.ab3@1238> INCLUDE "internal_commands.ab3"
0003AA06 <internal_commands.ab3@1239> INCLUDE "internal_commands.ab3"
0003AA08 <internal_commands.ab3@1240> INCLUDE "internal_commands.ab3"
0003AA0C <internal_commands.ab3@1241> INCLUDE "internal_commands.ab3"
0003AA0E <internal_commands.ab3@1242> INCLUDE "internal_commands.ab3"
0003AA12 <internal_commands.ab3@1246> INCLUDE "internal_commands.ab3"
0003AA14 <internal_commands.ab3@1247> INCLUDE "internal_commands.ab3"
0003AA19 <internal_commands.ab3@1248> INCLUDE "internal_commands.ab3"
0003AA1A <internal_commands.ab3@1249> INCLUDE "internal_commands.ab3"
0003AA1C <internal_commands.ab3@1252> INCLUDE "internal_commands.ab3"
0003AA20 <internal_commands.ab3@1253> INCLUDE "internal_commands.ab3"
0003AA22 <internal_commands.ab3@1254> INCLUDE "internal_commands.ab3"
0003AA24 <internal_commands.ab3@1255> INCLUDE "internal_commands.ab3"
0003AA28 <internal_commands.ab3@1256> INCLUDE "internal_commands.ab3"
0003AA2A <internal_commands.ab3@1257> INCLUDE "internal_commands.ab3"
0003AA2E <internal_commands.ab3@1261> INCLUDE "internal_commands.ab3"
0003AA30 <internal_commands.ab3@1262> INCLUDE "internal_commands.ab3"
0003AA34 <internal_commands.ab3@1263> INCLUDE "internal_commands.ab3"
0003AA35 <internal_commands.ab3@1264> INCLUDE "internal_commands.ab3"
0003AA36 <internal_commands.ab3@1265> INCLUDE "internal_commands.ab3"
0003AA38 <internal_commands.ab3@1267> INCLUDE "internal_commands.ab3"
0003AA3C <internal_commands.ab3@1268> INCLUDE "internal_commands.ab3"
0003AA3E <internal_commands.ab3@1269> INCLUDE "internal_commands.ab3"
0003AA40 <internal_commands.ab3@1270> INCLUDE "internal_commands.ab3"
0003AA44 <internal_commands.ab3@1271> INCLUDE "internal_commands.ab3"
0003AA46 <internal_commands.ab3@1272> INCLUDE "internal_commands.ab3"
0003AA4A <internal_commands.ab3@1276> INCLUDE "internal_commands.ab3"
0003AA4C <internal_commands.ab3@1277> INCLUDE "internal_commands.ab3"
0003AA51 <internal_commands.ab3@1278> INCLUDE "internal_commands.ab3"
0003AA52 <internal_commands.ab3@1279> INCLUDE "internal_commands.ab3"
0003AA54 <internal_commands.ab3@1282> INCLUDE "internal_commands.ab3"
0003AA58 <internal_commands.ab3@1283> INCLUDE "internal_commands.ab3"
0003AA5A <internal_commands.ab3@1284> INCLUDE "internal_commands.ab3"
0003AA5C <internal_commands.ab3@1285> INCLUDE "internal_commands.ab3"
0003AA60 <internal_commands.ab3@1286> INCLUDE "internal_commands.ab3"
0003AA62 <internal_commands.ab3@1287> INCLUDE "internal_commands.ab3"
0003AA66 <internal_commands.ab3@1291> INCLUDE "internal_commands.ab3"
0003AA68 <internal_commands.ab3@1292> INCLUDE "internal_commands.ab3"
0003AA6C <internal_commands.ab3@1293> INCLUDE "internal_commands.ab3"
0003AA6D <internal_commands.ab3@1294> INCLUDE "internal_commands.ab3"
0003AA6E <internal_commands.ab3@1295> INCLUDE "internal_commands.ab3"
0003AA70 <internal_commands.ab3@1297> INCLUDE "internal_commands.ab3"
0003AA74 <internal_commands.ab3@1298> INCLUDE "internal_commands.ab3"
0003AA76 <internal_commands.ab3@1299> INCLUDE "internal_commands.ab3"
0003AA78 <internal_commands.ab3@1300> INCLUDE "internal_commands.ab3"
0003AA7C <internal_commands.ab3@1301> INCLUDE "internal_commands.ab3"
0003AA7E <internal_commands.ab3@1302> INCLUDE "internal_commands.ab3"
0003AA82 <internal_commands.ab3@1306> INCLUDE "internal_commands.ab3"
0003AA84 <internal_commands.ab3@1307> INCLUDE "internal_commands.ab3"
0003AA88 <internal_commands.ab3@1308> INCLUDE "internal_commands.ab3"
0003AA89 <internal_commands.ab3@1309> INCLUDE "internal_commands.ab3"
0003AA8A <internal_commands.ab3@1310> INCLUDE "internal_commands.ab3"
0003AA8C <internal_commands.ab3@1312> INCLUDE "internal_commands.ab3"
0003AA90 <internal_commands.ab3@1313> INCLUDE "internal_commands.ab3"
0003AA92 <internal_commands.ab3@1314> INCLUDE "internal_commands.ab3"
0003AA94 <internal_commands.ab3@1315> INCLUDE "internal_commands.ab3"
0003AA98 <internal_commands.ab3@1316> INCLUDE "internal_commands.ab3"
0003AA9A <internal_commands.ab3@1317> INCLUDE "internal_commands.ab3"
0003AA9E <internal_commands.ab3@1321> INCLUDE "internal_commands.ab3"
0003AAA0 <internal_commands.ab3@1322> INCLUDE "internal_commands.ab3"
0003AAA8 <internal_commands.ab3@1323> INCLUDE "internal_commands.ab3"
0003AAA9 <internal_commands.ab3@1324> INCLUDE "internal_commands.ab3"
0003AAAA <internal_commands.ab3@1325> INCLUDE "internal_commands.ab3"
0003AAAC <internal_commands.ab3@1327> INCLUDE "internal_commands.ab3"
0003AAB0 <internal_commands.ab3@1328> INCLUDE "internal_commands.ab3"
0003AAB2 <internal_commands.ab3@1329> INCLUDE "internal_commands.ab3"
0003AAB4 <internal_commands.ab3@1330> INCLUDE "internal_commands.ab3"
0003AAB8 <internal_commands.ab3@1331> INCLUDE "internal_commands.ab3"
0003AABA <internal_commands.ab3@1332> INCLUDE "internal_commands.ab3"
0003AABE <internal_commands.ab3@1336> INCLUDE "internal_commands.ab3"
0003AAC0 <internal_commands.ab3@1337> INCLUDE "internal_commands.ab3"
0003AAC4 <internal_commands.ab3@1338> INCLUDE "internal_commands.ab3"
0003AAC5 <internal_commands.ab3@1339> INCLUDE "internal_commands.ab3"
0003AAC6 <internal_commands.ab3@1340> INCLUDE "internal_commands.ab3"
0003AAC8 <internal_commands.ab3@1342> INCLUDE "internal_commands.ab3"
0003AACC <internal_commands.ab3@1343> INCLUDE "internal_commands.ab3"
0003AACE <internal_commands.ab3@1344> INCLUDE "internal_commands.ab3"
0003AAD0 <internal_commands.ab3@1345> INCLUDE "internal_commands.ab3"
0003AAD4 <internal_commands.ab3@1346> INCLUDE "internal_commands.ab3"
0003AAD6 <internal_commands.ab3@1347> INCLUDE "internal_commands.ab3"
0003AADA <internal_commands.ab3@1351> INCLUDE "internal_commands.ab3"
0003AADC <internal_commands.ab3@1352> INCLUDE "internal_commands.ab3"
0003AAE0 <internal_commands.ab3@1353> INCLUDE "internal_commands.ab3"
0003AAE1 <internal_commands.ab3@1354> INCLUDE "internal_commands.ab3"
0003AAE2 <internal_commands.ab3@1355> INCLUDE "internal_commands.ab3"
0003AAE4 <internal_commands.ab3@1357> INCLUDE "internal_commands.ab3"
0003AAE8 <internal_commands.ab3@1358> INCLUDE "internal_commands.ab3"
0003AAEA <internal_commands.ab3@1359> INCLUDE "internal_commands.ab3"
0003AAEC <internal_commands.ab3@1360> INCLUDE "internal_commands.ab3"
0003AAF0 <internal_commands.ab3@1361> INCLUDE "internal_commands.ab3"
0003AAF2 <internal_commands.ab3@1362> INCLUDE "internal_commands.ab3"
0003AAF6 <internal_commands.ab3@1366> INCLUDE "internal_commands.ab3"
0003AAF8 <internal_commands.ab3@1367> INCLUDE "internal_commands.ab3"
0003AAFC <internal_commands.ab3@1368> INCLUDE "internal_commands.ab3"
0003AAFD <internal_commands.ab3@1369> INCLUDE "internal_commands.ab3"
0003AAFE <internal_commands.ab3@1370> INCLUDE "internal_commands.ab3"
0003AB00 <internal_commands.ab3@1372> INCLUDE "internal_commands.ab3"
0003AB04 <internal_commands.ab3@1373> INCLUDE "internal_commands.ab3"
0003AB06 <internal_commands.ab3@1374> INCLUDE "internal_commands.ab3"
0003AB08 <internal_commands.ab3@1375> INCLUDE "internal_commands.ab3"
0003AB0C <internal_commands.ab3@1376> INCLUDE "internal_commands.ab3"
0003AB0E <internal_commands.ab3@1377> INCLUDE "internal_commands.ab3"
0003AB12 <internal_commands.ab3@1381> INCLUDE "internal_commands.ab3"
0003AB14 <internal_commands.ab3@1382> INCLUDE "internal_commands.ab3"
0003AB19 <internal_commands.ab3@1383> INCLUDE "internal_commands.ab3"
0003AB1A <internal_commands.ab3@1384> INCLUDE "internal_commands.ab3"
0003AB1C <internal_commands.ab3@1387> INCLUDE "internal_commands.ab3"
0003AB20 <internal_commands.ab3@1388> INCLUDE "internal_commands.ab3"
0003AB22 <internal_commands.ab3@1389> INCLUDE "internal_commands.ab3"
0003AB24 <internal_commands.ab3@1390> INCLUDE "internal_commands.ab3"
0003AB28 <internal_commands.ab3@1391> INCLUDE "internal_commands.ab3"
0003AB2A <internal_commands.ab3@1392> INCLUDE "internal_commands.ab3"
0003AB2E <internal_commands.ab3@1396> INCLUDE "internal_commands.ab3"
0003AB30 <internal_commands.ab3@1397> INCLUDE "internal_commands.ab3"
0003AB34 <internal_commands.ab3@1398> INCLUDE "internal_commands.ab3"
0003AB35 <internal_commands.ab3@1399> INCLUDE "internal_commands.ab3"
0003AB36 <internal_commands.ab3@1400> INCLUDE "internal_commands.ab3"
0003AB38 <internal_commands.ab3@1402> INCLUDE "internal_commands.ab3"
0003AB3C <internal_commands.ab3@1403> INCLUDE "internal_commands.ab3"
0003AB3E <internal_commands.ab3@1404> INCLUDE "internal_commands.ab3"
0003AB40 <internal_commands.ab3@1405> INCLUDE "internal_commands.ab3"
0003AB44 <internal_commands.ab3@1406> INCLUDE "internal_commands.ab3"
0003AB46 <internal_commands.ab3@1407> INCLUDE "internal_commands.ab3"
0003AB4A <internal_commands.ab3@1411> INCLUDE "internal_commands.ab3"
0003AB4C <internal_commands.ab3@1412> INCLUDE "internal_commands.ab3"
0003AB50 <internal_commands.ab3@1413> INCLUDE "internal_commands.ab3"
0003AB51 <internal_commands.ab3@1414> INCLUDE "internal_commands.ab3"
0003AB52 <internal_commands.ab3@1415> INCLUDE "internal_commands.ab3"
0003AB54 <internal_commands.ab3@1417> INCLUDE "internal_commands.ab3"
0003AB58 <internal_commands.ab3@1418> INCLUDE "internal_commands.ab3"
0003AB5A <internal_commands.ab3@1419> INCLUDE "internal_commands.ab3"
0003AB5C <internal_commands.ab3@1420> INCLUDE "internal_commands.ab3"
0003AB60 <internal_commands.ab3@1421> INCLUDE "internal_commands.ab3"
0003AB62 <internal_commands.ab3@1422> INCLUDE "internal_commands.ab3"
0003AB66 <internal_commands.ab3@1426> INCLUDE "internal_commands.ab3"
0003AB68 <internal_commands.ab3@1427> INCLUDE "internal_commands.ab3"
0003AB6D <internal_commands.ab3@1428> INCLUDE "internal_commands.ab3"
0003AB6E <internal_commands.ab3@1429> INCLUDE "internal_commands.ab3"
0003AB70 <internal_commands.ab3@1432> INCLUDE "internal_commands.ab3"
0003AB74 <internal_commands.ab3@1433> INCLUDE "internal_commands.ab3"
0003AB76 <internal_commands.ab3@1434> INCLUDE "internal_commands.ab3"
0003AB78 <internal_commands.ab3@1435> INCLUDE "internal_commands.ab3"
0003AB7C <internal_commands.ab3@1436> INCLUDE "internal_commands.ab3"
0003AB7E <internal_commands.ab3@1437> INCLUDE "internal_commands.ab3"
0003AB82 <internal_commands.ab3@1441> INCLUDE "internal_commands.ab3"
0003AB84 <internal_commands.ab3@1442> INCLUDE "internal_commands.ab3"
0003AB89 <internal_commands.ab3@1443> INCLUDE "internal_commands.ab3"
0003AB8A <internal_commands.ab3@1444> INCLUDE "internal_commands.ab3"
0003AB8C <internal_commands.ab3@1447> INCLUDE "internal_commands.ab3"
0003AB90 <internal_commands.ab3@1448> INCLUDE "internal_commands.ab3"
0003AB92 <internal_commands.ab3@1449> INCLUDE "internal_commands.ab3"
0003AB94 <internal_commands.ab3@1450> INCLUDE "internal_commands.ab3"
0003AB98 <internal_commands.ab3@1451> INCLUDE "internal_commands.ab3"
0003AB9A <internal_commands.ab3@1452> INCLUDE "internal_commands.ab3"
0003AB9E <internal_commands.ab3@1457> INCLUDE "internal_commands.ab3"
0003ABA0 <internal_commands.ab3@1458> INCLUDE "internal_commands.ab3"
0003ABA6 <internal_commands.ab3@1459> INCLUDE "internal_commands.ab3"
0003ABA7 <internal_commands.ab3@1460> INCLUDE "internal_commands.ab3"
0003ABA8 <internal_commands.ab3@1461> INCLUDE "internal_commands.ab3"
0003ABAA <internal_commands.ab3@1463> INCLUDE "internal_commands.ab3"
0003ABAE <internal_commands.ab3@1464> INCLUDE "internal_commands.ab3"
0003ABB0 <internal_commands.ab3@1465> INCLUDE "internal_commands.ab3"
0003ABB2 <internal_commands.ab3@1466> INCLUDE "internal_commands.ab3"
0003ABB6 <internal_commands.ab3@1467> INCLUDE "internal_commands.ab3"
0003ABB8 <internal_commands.ab3@1468> INCLUDE "internal_commands.ab3"
0003ABBC <internal_commands.ab3@1472> INCLUDE "internal_commands.ab3"
0003ABBE <internal_commands.ab3@1473> INCLUDE "internal_commands.ab3"
0003ABC4 <internal_commands.ab3@1474> INCLUDE "internal_commands.ab3"
0003ABC5 <internal_commands.ab3@1475> INCLUDE "internal_commands.ab3"
0003ABC6 <internal_commands.ab3@1476> INCLUDE "internal_commands.ab3"
0003ABC8 <internal_commands.ab3@1478> INCLUDE "internal_commands.ab3"
0003ABCC <internal_commands.ab3@1479> INCLUDE "internal_commands.ab3"
0003ABCE <internal_commands.ab3@1480> INCLUDE "internal_commands.ab3"
0003ABD0 <internal_commands.ab3@1481> INCLUDE "internal_commands.ab3"
0003ABD4 <internal_commands.ab3@1482> INCLUDE "internal_commands.ab3"
0003ABD6 <internal_commands.ab3@1483> INCLUDE "internal_commands.ab3"
0003ABDA <internal_commands.ab3@1487> INCLUDE "internal_commands.ab3"
0003ABDC <internal_commands.ab3@1488> INCLUDE "internal_commands.ab3"
0003ABE2 <internal_commands.ab3@1489> INCLUDE "internal_commands.ab3"
0003ABE3 <internal_commands.ab3@1490> INCLUDE "internal_commands.ab3"
0003ABE4 <internal_commands.ab3@1491> INCLUDE "internal_commands.ab3"
0003ABE6 <internal_commands.ab3@1493> INCLUDE "internal_commands.ab3"
0003ABEA <internal_commands.ab3@1494> INCLUDE "internal_commands.ab3"
0003ABEC <internal_commands.ab3@1495> INCLUDE "internal_commands.ab3"
0003ABEE <internal_commands.ab3@1496> INCLUDE "internal_commands.ab3"
0003ABF2 <internal_commands.ab3@1497> INCLUDE "internal_commands.ab3"
0003ABF4 <internal_commands.ab3@1498> INCLUDE "internal_commands.ab3"
0003ABF8 <internal_commands.ab3@1502> INCLUDE "internal_commands.ab3"
0003ABFA <internal_commands.ab3@1503> INCLUDE "internal_commands.ab3"
0003ABFF <internal_commands.ab3@1504> INCLUDE "internal_commands.ab3"
0003AC00 <internal_commands.ab3@1505> INCLUDE "internal_commands.ab3"
0003AC02 <internal_commands.ab3@1508> INCLUDE "internal_commands.ab3"
0003AC06 <internal_commands.ab3@1509> INCLUDE "internal_commands.ab3"
0003AC08 <internal_commands.ab3@1510> INCLUDE "internal_commands.ab3"
0003AC0A <internal_commands.ab3@1511> INCLUDE "internal_commands.ab3"
0003AC0E <internal_commands.ab3@1512> INCLUDE "internal_commands.ab3"
0003AC10 <internal_commands.ab3@1513> INCLUDE "internal_commands.ab3"
0003AC14 <internal_commands.ab3@1517> INCLUDE "internal_commands.ab3"
0003AC16 <internal_commands.ab3@1518> INCLUDE "internal_commands.ab3"
0003AC1B <internal_commands.ab3@1519> INCLUDE "internal_commands.ab3"
0003AC1C <internal_commands.ab3@1520> INCLUDE "internal_commands.ab3"
0003AC1E <internal_commands.ab3@1523> INCLUDE "internal_commands.ab3"
0003AC22 <internal_commands.ab3@1524> INCLUDE "internal_commands.ab3"
0003AC24 <internal_commands.ab3@1525> INCLUDE "internal_commands.ab3"
0003AC26 <internal_commands.ab3@1526> INCLUDE "internal_commands.ab3"
0003AC2A <internal_commands.ab3@1527> INCLUDE "internal_commands.ab3"
0003AC2C <internal_commands.ab3@1528> INCLUDE "internal_commands.ab3"
0003AC30 <internal_commands.ab3@1532> INCLUDE "internal_commands.ab3"
0003AC32 <internal_commands.ab3@1533> INCLUDE "internal_commands.ab3"
0003AC37 <internal_commands.ab3@1534> INCLUDE "internal_commands.ab3"
0003AC38 <internal_commands.ab3@1535> INCLUDE "internal_commands.ab3"
0003AC3A <internal_commands.ab3@1538> INCLUDE "internal_commands.ab3"
0003AC3E <internal_commands.ab3@1539> INCLUDE "internal_commands.ab3"
0003AC40 <internal_commands.ab3@1540> INCLUDE "internal_commands.ab3"
0003AC42 <internal_commands.ab3@1541> INCLUDE "internal_commands.ab3"
0003AC46 <internal_commands.ab3@1542> INCLUDE "internal_commands.ab3"
0003AC48 <internal_commands.ab3@1543> INCLUDE "internal_commands.ab3"
0003AC4C <internal_commands.ab3@1547> INCLUDE "internal_commands.ab3"
0003AC4E <internal_commands.ab3@1548> INCLUDE "internal_commands.ab3"
0003AC52 <internal_commands.ab3@1549> INCLUDE "internal_commands.ab3"
0003AC53 <internal_commands.ab3@1550> INCLUDE "internal_commands.ab3"
0003AC54 <internal_commands.ab3@1551> INCLUDE "internal_commands.ab3"
0003AC56 <internal_commands.ab3@1553> INCLUDE "internal_commands.ab3"
0003AC5A <internal_commands.ab3@1554> INCLUDE "internal_commands.ab3"
0003AC5C <internal_commands.ab3@1555> INCLUDE "internal_commands.ab3"
0003AC5E <internal_commands.ab3@1556> INCLUDE "internal_commands.ab3"
0003AC62 <internal_commands.ab3@1557> INCLUDE "internal_commands.ab3"
0003AC64 <internal_commands.ab3@1558> INCLUDE "internal_commands.ab3"
0003AC68 <internal_commands.ab3@1562> INCLUDE "internal_commands.ab3"
0003AC6A <internal_commands.ab3@1563> INCLUDE "internal_commands.ab3"
0003AC6F <internal_commands.ab3@1564> INCLUDE "internal_commands.ab3"
0003AC70 <internal_commands.ab3@1565> INCLUDE "internal_commands.ab3"
0003AC72 <internal_commands.ab3@1568> INCLUDE "internal_commands.ab3"
0003AC76 <internal_commands.ab3@1569> INCLUDE "internal_commands.ab3"
0003AC78 <internal_commands.ab3@1570> INCLUDE "internal_commands.ab3"
0003AC7A <internal_commands.ab3@1571> INCLUDE "internal_commands.ab3"
0003AC7E <internal_commands.ab3@1572> INCLUDE "internal_commands.ab3"
0003AC80 <internal_commands.ab3@1573> INCLUDE "internal_commands.ab3"
0003AC84 <internal_commands.ab3@1577> INCLUDE "internal_commands.ab3"
0003AC86 <internal_commands.ab3@1578> INCLUDE "internal_commands.ab3"
0003AC8A <internal_commands.ab3@1579> INCLUDE "internal_commands.ab3"
0003AC8B <internal_commands.ab3@1580> INCLUDE "internal_commands.ab3"
0003AC8C <internal_commands.ab3@1581> INCLUDE "internal_commands.ab3"
0003AC8E <internal_commands.ab3@1583> INCLUDE "internal_commands.ab3"
0003AC92 <internal_commands.ab3@1584> INCLUDE "internal_commands.ab3"
0003AC94 <internal_commands.ab3@1585> INCLUDE "internal_commands.ab3"
0003AC96 <internal_commands.ab3@1586> INCLUDE "internal_commands.ab3"
0003AC9A <internal_commands.ab3@1587> INCLUDE "internal_commands.ab3"
0003AC9C <internal_commands.ab3@1588> INCLUDE "internal_commands.ab3"
0003ACA0 <internal_commands.ab3@1592> INCLUDE "internal_commands.ab3"
0003ACA2 <internal_commands.ab3@1593> INCLUDE "internal_commands.ab3"
0003ACA6 <internal_commands.ab3@1594> INCLUDE "internal_commands.ab3"
0003ACA7 <internal_commands.ab3@1595> INCLUDE "internal_commands.ab3"
0003ACA8 <internal_commands.ab3@1596> INCLUDE "internal_commands.ab3"
0003ACAA <internal_commands.ab3@1598> INCLUDE "internal_commands.ab3"
0003ACAE <internal_commands.ab3@1599> INCLUDE "internal_commands.ab3"
0003ACB0 <internal_commands.ab3@1600> INCLUDE "internal_commands.ab3"
0003ACB2 <internal_commands.ab3@1601> INCLUDE "internal_commands.ab3"
0003ACB6 <internal_commands.ab3@1602> INCLUDE "internal_commands.ab3"
0003ACB8 <internal_commands.ab3@1603> INCLUDE "internal_commands.ab3"
0003ACBC <internal_commands.ab3@1607> INCLUDE "internal_commands.ab3"
0003ACBE <internal_commands.ab3@1608> INCLUDE "internal_commands.ab3"
0003ACC1 <internal_commands.ab3@1609> INCLUDE "internal_commands.ab3"
0003ACC2 <internal_commands.ab3@1610> INCLUDE "internal_commands.ab3"
0003ACC4 <internal_commands.ab3@1613> INCLUDE "internal_commands.ab3"
0003ACC8 <internal_commands.ab3@1614> INCLUDE "internal_commands.ab3"
0003ACCA <internal_commands.ab3@1615> INCLUDE "internal_commands.ab3"
0003ACCC <internal_commands.ab3@1616> INCLUDE "internal_commands.ab3"
0003ACD0 <internal_commands.ab3@1617> INCLUDE "internal_commands.ab3"
0003ACD2 <internal_commands.ab3@1618> INCLUDE "internal_commands.ab3"
0003ACD6 <internal_commands.ab3@1622> INCLUDE "internal_commands.ab3"
0003ACD8 <internal_commands.ab3@1623> INCLUDE "internal_commands.ab3"
0003ACDC <internal_commands.ab3@1624> INCLUDE "internal_commands.ab3"
0003ACDD <internal_commands.ab3@1625> INCLUDE "internal_commands.ab3"
0003ACDE <internal_commands.ab3@1626> INCLUDE "internal_commands.ab3"
0003ACE0 <internal_commands.ab3@1628> INCLUDE "internal_commands.ab3"
0003ACE4 <internal_commands.ab3@1629> INCLUDE "internal_commands.ab3"
0003ACE6 <internal_commands.ab3@1630> INCLUDE "internal_commands.ab3"
0003ACE8 <internal_commands.ab3@1631> INCLUDE "internal_commands.ab3"
0003ACEC <internal_commands.ab3@1632> INCLUDE "internal_commands.ab3"
0003ACEE <internal_commands.ab3@1633> INCLUDE "internal_commands.ab3"
0003ACF2 <internal_commands.ab3@1637> INCLUDE "internal_commands.ab3"
0003ACF4 <internal_commands.ab3@1638> INCLUDE "internal_commands.ab3"
0003ACF8 <internal_commands.ab3@1639> INCLUDE "internal_commands.ab3"
0003ACF9 <internal_commands.ab3@1640> INCLUDE "internal_commands.ab3"
0003ACFA <internal_commands.ab3@1641> INCLUDE "internal_commands.ab3"
0003ACFC <internal_commands.ab3@1643> INCLUDE "internal_commands.ab3"
0003AD00 <internal_commands.ab3@1644> INCLUDE "internal_commands.ab3"
0003AD02 <internal_commands.ab3@1645> INCLUDE "internal_commands.ab3"
0003AD04 <internal_commands.ab3@1646> INCLUDE "internal_commands.ab3"
0003AD08 <internal_commands.ab3@1647> INCLUDE "internal_commands.ab3"
0003AD0A <internal_commands.ab3@1648> INCLUDE "internal_commands.ab3"
0003AD0E <internal_commands.ab3@1652> INCLUDE "internal_commands.ab3"
0003AD10 <internal_commands.ab3@1653> INCLUDE "internal_commands.ab3"
0003AD16 <internal_commands.ab3@1654> INCLUDE "internal_commands.ab3"
0003AD17 <internal_commands.ab3@1655> INCLUDE "internal_commands.ab3"
0003AD18 <internal_commands.ab3@1656> INCLUDE "internal_commands.ab3"
0003AD1A <internal_commands.ab3@1658> INCLUDE "internal_commands.ab3"
0003AD1E <internal_commands.ab3@1659> INCLUDE "internal_commands.ab3"
0003AD20 <internal_commands.ab3@1660> INCLUDE "internal_commands.ab3"
0003AD22 <internal_commands.ab3@1661> INCLUDE "internal_commands.ab3"
0003AD26 <internal_commands.ab3@1662> INCLUDE "internal_commands.ab3"
0003AD28 <internal_commands.ab3@1663> INCLUDE "internal_commands.ab3"
0003AD2C <internal_commands.ab3@1667> INCLUDE "internal_commands.ab3"
0003AD2E <internal_commands.ab3@1668> INCLUDE "internal_commands.ab3"
0003AD32 <internal_commands.ab3@1669> INCLUDE "internal_commands.ab3"
0003AD33 <internal_commands.ab3@1670> INCLUDE "internal_commands.ab3"
0003AD34 <internal_commands.ab3@1671> INCLUDE "internal_commands.ab3"
0003AD36 <internal_commands.ab3@1673> INCLUDE "internal_commands.ab3"
0003AD3A <internal_commands.ab3@1674> INCLUDE "internal_commands.ab3"
0003AD3C <internal_commands.ab3@1675> INCLUDE "internal_commands.ab3"
0003AD3E <internal_commands.ab3@1676> INCLUDE "internal_commands.ab3"
0003AD42 <internal_commands.ab3@1677> INCLUDE "internal_commands.ab3"
0003AD44 <internal_commands.ab3@1678> INCLUDE "internal_commands.ab3"
0003AD48 <internal_commands.ab3@1682> INCLUDE "internal_commands.ab3"
0003AD4A <internal_commands.ab3@1683> INCLUDE "internal_commands.ab3"
0003AD4E <internal_commands.ab3@1684> INCLUDE "internal_commands.ab3"
0003AD4F <internal_commands.ab3@1685> INCLUDE "internal_commands.ab3"
0003AD50 <internal_commands.ab3@1686> INCLUDE "internal_commands.ab3"
0003AD52 <internal_commands.ab3@1688> INCLUDE "internal_commands.ab3"
0003AD56 <internal_commands.ab3@1689> INCLUDE "internal_commands.ab3"
0003AD58 <internal_commands.ab3@1690> INCLUDE "internal_commands.ab3"
0003AD5A <internal_commands.ab3@1691> INCLUDE "internal_commands.ab3"
0003AD5E <internal_commands.ab3@1692> INCLUDE "internal_commands.ab3"
0003AD60 <internal_commands.ab3@1693> INCLUDE "internal_commands.ab3"
0003AD64 <internal_commands.ab3@1697> INCLUDE "internal_commands.ab3"
0003AD66 <internal_commands.ab3@1698> INCLUDE "internal_commands.ab3"
0003AD6B <internal_commands.ab3@1699> INCLUDE "internal_commands.ab3"
0003AD6C <internal_commands.ab3@1700> INCLUDE "internal_commands.ab3"
0003AD6E <internal_commands.ab3@1703> INCLUDE "internal_commands.ab3"
0003AD72 <internal_commands.ab3@1704> INCLUDE "internal_commands.ab3"
0003AD74 <internal_commands.ab3@1705> INCLUDE "internal_commands.ab3"
0003AD76 <internal_commands.ab3@1706> INCLUDE "internal_commands.ab3"
0003AD7A <internal_commands.ab3@1707> INCLUDE "internal_commands.ab3"
0003AD7C <internal_commands.ab3@1708> INCLUDE "internal_commands.ab3"
0003AD80 <internal_commands.ab3@1712> INCLUDE "internal_commands.ab3"
0003AD82 <internal_commands.ab3@1713> INCLUDE "internal_commands.ab3"
0003AD87 <internal_commands.ab3@1714> INCLUDE "internal_commands.ab3"
0003AD88 <internal_commands.ab3@1715> INCLUDE "internal_commands.ab3"
0003AD8A <internal_commands.ab3@1718> INCLUDE "internal_commands.ab3"
0003AD8E <internal_commands.ab3@1719> INCLUDE "internal_commands.ab3"
0003AD90 <internal_commands.ab3@1720> INCLUDE "internal_commands.ab3"
0003AD92 <internal_commands.ab3@1721> INCLUDE "internal_commands.ab3"
0003AD96 <internal_commands.ab3@1722> INCLUDE "internal_commands.ab3"
0003AD98 <internal_commands.ab3@1723> INCLUDE "internal_commands.ab3"
0003AD9C <internal_commands.ab3@1727> INCLUDE "internal_commands.ab3"
0003AD9E <internal_commands.ab3@1728> INCLUDE "internal_commands.ab3"
0003ADA2 <internal_commands.ab3@1729> INCLUDE "internal_commands.ab3"
0003ADA3 <internal_commands.ab3@1730> INCLUDE "internal_commands.ab3"
0003ADA4 <internal_commands.ab3@1731> INCLUDE "internal_commands.ab3"
0003ADA6 <internal_commands.ab3@1733> INCLUDE "internal_commands.ab3"
0003ADAA <internal_commands.ab3@1734> INCLUDE "internal_commands.ab3"
0003ADAC <internal_commands.ab3@1735> INCLUDE "internal_commands.ab3"
0003ADAE <internal_commands.ab3@1736> INCLUDE "internal_commands.ab3"
0003ADB2 <internal_commands.ab3@1737> INCLUDE "internal_commands.ab3"
0003ADB4 <internal_commands.ab3@1738> INCLUDE "internal_commands.ab3"
0003ADB8 <internal_commands.ab3@1742> INCLUDE "internal_commands.ab3"
0003ADBA <internal_commands.ab3@1743> INCLUDE "internal_commands.ab3"
0003ADBE <internal_commands.ab3@1744> INCLUDE "internal_commands.ab3"
0003ADBF <internal_commands.ab3@1745> INCLUDE "internal_commands.ab3"
0003ADC0 <internal_commands.ab3@1746> INCLUDE "internal_commands.ab3"
0003ADC2 <internal_commands.ab3@1748> INCLUDE "internal_commands.ab3"
0003ADC6 <internal_commands.ab3@1749> INCLUDE "internal_commands.ab3"
0003ADC8 <internal_commands.ab3@1750> INCLUDE "internal_commands.ab3"
0003ADCA <internal_commands.ab3@1751> INCLUDE "internal_commands.ab3"
0003ADCE <internal_commands.ab3@1752> INCLUDE "internal_commands.ab3"
0003ADD0 <internal_commands.ab3@1753> INCLUDE "internal_commands.ab3"
0003ADD4 <internal_commands.ab3@1757> INCLUDE "internal_commands.ab3"
0003ADD6 <internal_commands.ab3@1758> INCLUDE "internal_commands.ab3"
0003ADDA <internal_commands.ab3@1759> INCLUDE "internal_commands.ab3"
0003ADDB <internal_commands.ab3@1760> INCLUDE "internal_commands.ab3"
0003ADDC <internal_commands.ab3@1761> INCLUDE "internal_commands.ab3"
0003ADDE <internal_commands.ab3@1763> INCLUDE "internal_commands.ab3"
0003ADE2 <internal_commands.ab3@1764> INCLUDE "internal_commands.ab3"
0003ADE4 <internal_commands.ab3@1765> INCLUDE "internal_commands.ab3"
0003ADE6 <internal_commands.ab3@1766> INCLUDE "internal_commands.ab3"
0003ADEA <internal_commands.ab3@1767> INCLUDE "internal_commands.ab3"
0003ADEC <internal_commands.ab3@1768> INCLUDE "internal_commands.ab3"
0003ADF0 <internal_commands.ab3@1772> INCLUDE "internal_commands.ab3"
0003ADF2 <internal_commands.ab3@1773> INCLUDE "internal_commands.ab3"
0003ADF7 <internal_commands.ab3@1774> INCLUDE "internal_commands.ab3"
0003ADF8 <internal_commands.ab3@1775> INCLUDE "internal_commands.ab3"
0003ADFA <internal_commands.ab3@1778> INCLUDE "internal_commands.ab3"
0003ADFE <internal_commands.ab3@1779> INCLUDE "internal_commands.ab3"
0003AE00 <internal_commands.ab3@1780> INCLUDE "internal_commands.ab3"
0003AE02 <internal_commands.ab3@1781> INCLUDE "internal_commands.ab3"
0003AE06 <internal_commands.ab3@1782> INCLUDE "internal_commands.ab3"
0003AE08 <internal_commands.ab3@1783> INCLUDE "internal_commands.ab3"
0003AE0C <internal_commands.ab3@1787> INCLUDE "internal_commands.ab3"
0003AE0E <internal_commands.ab3@1788> INCLUDE "internal_commands.ab3"
0003AE12 <internal_commands.ab3@1789> INCLUDE "internal_commands.ab3"
0003AE13 <internal_commands.ab3@1790> INCLUDE "internal_commands.ab3"
0003AE14 <internal_commands.ab3@1791> INCLUDE "internal_commands.ab3"
0003AE16 <internal_commands.ab3@1793> INCLUDE "internal_commands.ab3"
0003AE1A <internal_commands.ab3@1794> INCLUDE "internal_commands.ab3"
0003AE1C <internal_commands.ab3@1795> INCLUDE "internal_commands.ab3"
0003AE1E <internal_commands.ab3@1796> INCLUDE "internal_commands.ab3"
0003AE22 <internal_commands.ab3@1797> INCLUDE "internal_commands.ab3"
0003AE24 <internal_commands.ab3@1798> INCLUDE "internal_commands.ab3"
0003AE28 <internal_commands.ab3@1802> INCLUDE "internal_commands.ab3"
0003AE2A <internal_commands.ab3@1803> INCLUDE "internal_commands.ab3"
0003AE2E <internal_commands.ab3@1804> INCLUDE "internal_commands.ab3"
0003AE2F <internal_commands.ab3@1805> INCLUDE "internal_commands.ab3"
0003AE30 <internal_commands.ab3@1806> INCLUDE "internal_commands.ab3"
0003AE32 <internal_commands.ab3@1808> INCLUDE "internal_commands.ab3"
0003AE36 <internal_commands.ab3@1809> INCLUDE "internal_commands.ab3"
0003AE38 <internal_commands.ab3@1810> INCLUDE "internal_commands.ab3"
0003AE3A <internal_commands.ab3@1811> INCLUDE "internal_commands.ab3"
0003AE3E <internal_commands.ab3@1812> INCLUDE "internal_commands.ab3"
0003AE40 <internal_commands.ab3@1813> INCLUDE "internal_commands.ab3"
0003AE44 <internal_commands.ab3@1817> INCLUDE "internal_commands.ab3"
0003AE46 <internal_commands.ab3@1818> INCLUDE "internal_commands.ab3"
0003AE4A <internal_commands.ab3@1819> INCLUDE "internal_commands.ab3"
0003AE4B <internal_commands.ab3@1820> INCLUDE "internal_commands.ab3"
0003AE4C <internal_commands.ab3@1821> INCLUDE "internal_commands.ab3"
0003AE4E <internal_commands.ab3@1823> INCLUDE "internal_commands.ab3"
0003AE52 <internal_commands.ab3@1824> INCLUDE "internal_commands.ab3"
0003AE54 <internal_commands.ab3@1825> INCLUDE "internal_commands.ab3"
0003AE56 <internal_commands.ab3@1826> INCLUDE "internal_commands.ab3"
0003AE5A <internal_commands.ab3@1827> INCLUDE "internal_commands.ab3"
0003AE5C <internal_commands.ab3@1828> INCLUDE "internal_commands.ab3"
0003AE60 <internal_commands.ab3@1832> INCLUDE "internal_commands.ab3"
0003AE62 <internal_commands.ab3@1833> INCLUDE "internal_commands.ab3"
0003AE66 <internal_commands.ab3@1834> INCLUDE "internal_commands.ab3"
0003AE67 <internal_commands.ab3@1835> INCLUDE "internal_commands.ab3"
0003AE68 <internal_commands.ab3@1836> INCLUDE "internal_commands.ab3"
0003AE6A <internal_commands.ab3@1838> INCLUDE "internal_commands.ab3"
0003AE6E <internal_commands.ab3@1839> INCLUDE "internal_commands.ab3"
0003AE70 <internal_commands.ab3@1840> INCLUDE "internal_commands.ab3"
0003AE72 <internal_commands.ab3@1841> INCLUDE "internal_commands.ab3"
0003AE76 <internal_commands.ab3@1842> INCLUDE "internal_commands.ab3"
0003AE78 <internal_commands.ab3@1843> INCLUDE "internal_commands.ab3"
0003AE7C <internal_commands.ab3@1847> INCLUDE "internal_commands.ab3"
0003AE7E <internal_commands.ab3@1848> INCLUDE "internal_commands.ab3"
0003AE82 <internal_commands.ab3@1849> INCLUDE "internal_commands.ab3"
0003AE83 <internal_commands.ab3@1850> INCLUDE "internal_commands.ab3"
0003AE84 <internal_commands.ab3@1851> INCLUDE "internal_commands.ab3"
0003AE86 <internal_commands.ab3@1853> INCLUDE "internal_commands.ab3"
0003AE8A <internal_commands.ab3@1854> INCLUDE "internal_commands.ab3"
0003AE8C <internal_commands.ab3@1855> INCLUDE "internal_commands.ab3"
0003AE8E <internal_commands.ab3@1856> INCLUDE "internal_commands.ab3"
0003AE92 <internal_commands.ab3@1857> INCLUDE "internal_commands.ab3"
0003AE94 <internal_commands.ab3@1858> INCLUDE "internal_commands.ab3"
0003AE98 <internal_commands.ab3@1862> INCLUDE "internal_commands.ab3"
0003AE9A <internal_commands.ab3@1863> INCLUDE "internal_commands.ab3"
0003AE9E <internal_commands.ab3@1864> INCLUDE "internal_commands.ab3"
0003AE9F <internal_commands.ab3@1865> INCLUDE "internal_commands.ab3"
0003AEA0 <internal_commands.ab3@1866> INCLUDE "internal_commands.ab3"
0003AEA2 <internal_commands.ab3@1868> INCLUDE "internal_commands.ab3"
0003AEA6 <internal_commands.ab3@1869> INCLUDE "internal_commands.ab3"
0003AEA8 <internal_commands.ab3@1870> INCLUDE "internal_commands.ab3"
0003AEAA <internal_commands.ab3@1871> INCLUDE "internal_commands.ab3"
0003AEAE <internal_commands.ab3@1872> INCLUDE "internal_commands.ab3"
0003AEB0 <internal_commands.ab3@1873> INCLUDE "internal_commands.ab3"
0003AEB4 <internal_commands.ab3@1877> INCLUDE "internal_commands.ab3"
0003AEB6 <internal_commands.ab3@1878> INCLUDE "internal_commands.ab3"
0003AEBA <internal_commands.ab3@1879> INCLUDE "internal_commands.ab3"
0003AEBB <internal_commands.ab3@1880> INCLUDE "internal_commands.ab3"
0003AEBC <internal_commands.ab3@1881> INCLUDE "internal_commands.ab3"
0003AEBE <internal_commands.ab3@1883> INCLUDE "internal_commands.ab3"
0003AEC2 <internal_commands.ab3@1884> INCLUDE "internal_commands.ab3"
0003AEC4 <internal_commands.ab3@1885> INCLUDE "internal_commands.ab3"
0003AEC6 <internal_commands.ab3@1886> INCLUDE "internal_commands.ab3"
0003AECA <internal_commands.ab3@1887> INCLUDE "internal_commands.ab3"
0003AECC <internal_commands.ab3@1888> INCLUDE "internal_commands.ab3"
0003AED0 <internal_commands.ab3@1892> INCLUDE "internal_commands.ab3"
0003AED2 <internal_commands.ab3@1893> INCLUDE "internal_commands.ab3"
0003AED6 <internal_commands.ab3@1894> INCLUDE "internal_commands.ab3"
0003AED7 <internal_commands.ab3@1895> INCLUDE "internal_commands.ab3"
0003AED8 <internal_commands.ab3@1896> INCLUDE "internal_commands.ab3"
0003AEDA <internal_commands.ab3@1898> INCLUDE "internal_commands.ab3"
0003AEDE <internal_commands.ab3@1899> INCLUDE "internal_commands.ab3"
0003AEE0 <internal_commands.ab3@1900> INCLUDE "internal_commands.ab3"
0003AEE2 <internal_commands.ab3@1901> INCLUDE "internal_commands.ab3"
0003AEE6 <internal_commands.ab3@1902> INCLUDE "internal_commands.ab3"
0003AEE8 <internal_commands.ab3@1903> INCLUDE "internal_commands.ab3"
0003AEEC <internal_commands.ab3@1907> INCLUDE "internal_commands.ab3"
0003AEEE <internal_commands.ab3@1908> INCLUDE "internal_commands.ab3"
0003AEF2 <internal_commands.ab3@1909> INCLUDE "internal_commands.ab3"
0003AEF3 <internal_commands.ab3@1910> INCLUDE "internal_commands.ab3"
0003AEF4 <internal_commands.ab3@1911> INCLUDE "internal_commands.ab3"
0003AEF6 <internal_commands.ab3@1913> INCLUDE "internal_commands.ab3"
0003AEFA <internal_commands.ab3@1914> INCLUDE "internal_commands.ab3"
0003AEFC <internal_commands.ab3@1915> INCLUDE "internal_commands.ab3"
0003AEFE <internal_commands.ab3@1916> INCLUDE "internal_commands.ab3"
0003AF02 <internal_commands.ab3@1917> INCLUDE "internal_commands.ab3"
0003AF04 <internal_commands.ab3@1918> INCLUDE "internal_commands.ab3"
0003AF08 <internal_commands.ab3@1922> INCLUDE "internal_commands.ab3"
0003AF0A <internal_commands.ab3@1923> INCLUDE "internal_commands.ab3"
0003AF0E <internal_commands.ab3@1924> INCLUDE "internal_commands.ab3"
0003AF0F <internal_commands.ab3@1925> INCLUDE "internal_commands.ab3"
0003AF10 <internal_commands.ab3@1926> INCLUDE "internal_commands.ab3"
0003AF12 <internal_commands.ab3@1928> INCLUDE "internal_commands.ab3"
0003AF16 <internal_commands.ab3@1929> INCLUDE "internal_commands.ab3"
0003AF18 <internal_commands.ab3@1930> INCLUDE "internal_commands.ab3"
0003AF1A <internal_commands.ab3@1931> INCLUDE "internal_commands.ab3"
0003AF1E <internal_commands.ab3@1932> INCLUDE "internal_commands.ab3"
0003AF20 <internal_commands.ab3@1933> INCLUDE "internal_commands.ab3"
0003AF24 <internal_commands.ab3@1937> INCLUDE "internal_commands.ab3"
0003AF26 <internal_commands.ab3@1938> INCLUDE "internal_commands.ab3"
0003AF2A <internal_commands.ab3@1939> INCLUDE "internal_commands.ab3"
0003AF2B <internal_commands.ab3@1940> INCLUDE "internal_commands.ab3"
0003AF2C <internal_commands.ab3@1941> INCLUDE "internal_commands.ab3"
0003AF2E <internal_commands.ab3@1943> INCLUDE "internal_commands.ab3"
0003AF32 <internal_commands.ab3@1944> INCLUDE "internal_commands.ab3"
0003AF34 <internal_commands.ab3@1945> INCLUDE "internal_commands.ab3"
0003AF36 <internal_commands.ab3@1946> INCLUDE "internal_commands.ab3"
0003AF3A <internal_commands.ab3@1947> INCLUDE "internal_commands.ab3"
0003AF3C <internal_commands.ab3@1948> INCLUDE "internal_commands.ab3"
0003AF40 <internal_commands.ab3@1952> INCLUDE "internal_commands.ab3"
0003AF42 <internal_commands.ab3@1953> INCLUDE "internal_commands.ab3"
0003AF46 <internal_commands.ab3@1954> INCLUDE "internal_commands.ab3"
0003AF47 <internal_commands.ab3@1955> INCLUDE "internal_commands.ab3"
0003AF48 <internal_commands.ab3@1956> INCLUDE "internal_commands.ab3"
0003AF4A <internal_commands.ab3@1958> INCLUDE "internal_commands.ab3"
0003AF4E <internal_commands.ab3@1959> INCLUDE "internal_commands.ab3"
0003AF50 <internal_commands.ab3@1960> INCLUDE "internal_commands.ab3"
0003AF52 <internal_commands.ab3@1961> INCLUDE "internal_commands.ab3"
0003AF56 <internal_commands.ab3@1962> INCLUDE "internal_commands.ab3"
0003AF58 <internal_commands.ab3@1963> INCLUDE "internal_commands.ab3"
0003AF5C <internal_commands.ab3@1967> INCLUDE "internal_commands.ab3"
0003AF5E <internal_commands.ab3@1968> INCLUDE "internal_commands.ab3"
0003AF62 <internal_commands.ab3@1969> INCLUDE "internal_commands.ab3"
0003AF63 <internal_commands.ab3@1970> INCLUDE "internal_commands.ab3"
0003AF64 <internal_commands.ab3@1971> INCLUDE "internal_commands.ab3"
0003AF66 <internal_commands.ab3@1973> INCLUDE "internal_commands.ab3"
0003AF6A <internal_commands.ab3@1974> INCLUDE "internal_commands.ab3"
0003AF6C <internal_commands.ab3@1975> INCLUDE "internal_commands.ab3"
0003AF6E <internal_commands.ab3@1976> INCLUDE "internal_commands.ab3"
0003AF72 <internal_commands.ab3@1977> INCLUDE "internal_commands.ab3"
0003AF74 <internal_commands.ab3@1978> INCLUDE "internal_commands.ab3"
0003AF78 <internal_commands.ab3@1982> INCLUDE "internal_commands.ab3"
0003AF7A <internal_commands.ab3@1983> INCLUDE "internal_commands.ab3"
0003AF7E <internal_commands.ab3@1984> INCLUDE "internal_commands.ab3"
0003AF7F <internal_commands.ab3@1985> INCLUDE "internal_commands.ab3"
0003AF80 <internal_commands.ab3@1986> INCLUDE "internal_commands.ab3"
0003AF82 <internal_commands.ab3@1988> INCLUDE "internal_commands.ab3"
0003AF86 <internal_commands.ab3@1989> INCLUDE "internal_commands.ab3"
0003AF88 <internal_commands.ab3@1990> INCLUDE "internal_commands.ab3"
0003AF8A <internal_commands.ab3@1991> INCLUDE "internal_commands.ab3"
0003AF8E <internal_commands.ab3@1992> INCLUDE "internal_commands.ab3"
0003AF90 <internal_commands.ab3@1993> INCLUDE "internal_commands.ab3"
0003AF94 <internal_commands.ab3@1997> INCLUDE "internal_commands.ab3"
0003AF96 <internal_commands.ab3@1998> INCLUDE "internal_commands.ab3"
0003AF99 <internal_commands.ab3@1999> INCLUDE "internal_commands.ab3"
0003AF9A <internal_commands.ab3@2000> INCLUDE "internal_commands.ab3"
0003AF9C <internal_commands.ab3@2003> INCLUDE "internal_commands.ab3"
0003AFA0 <internal_commands.ab3@2004> INCLUDE "internal_commands.ab3"
0003AFA2 <internal_commands.ab3@2005> INCLUDE "internal_commands.ab3"
0003AFA4 <internal_commands.ab3@2006> INCLUDE "internal_commands.ab3"
0003AFA8 <internal_commands.ab3@2007> INCLUDE "internal_commands.ab3"
0003AFAA <internal_commands.ab3@2008> INCLUDE "internal_commands.ab3"
0003AFAE <internal_commands.ab3@2012> INCLUDE "internal_commands.ab3"
0003AFB0 <internal_commands.ab3@2013> INCLUDE "internal_commands.ab3"
0003AFB3 <internal_commands.ab3@2014> INCLUDE "internal_commands.ab3"
0003AFB4 <internal_commands.ab3@2015> INCLUDE "internal_commands.ab3"
0003AFB6 <internal_commands.ab3@2018> INCLUDE "internal_commands.ab3"
0003AFBA <internal_commands.ab3@2019> INCLUDE "internal_commands.ab3"
0003AFBC <internal_commands.ab3@2020> INCLUDE "internal_commands.ab3"
0003AFBE <internal_commands.ab3@2021> INCLUDE "internal_commands.ab3"
0003AFC2 <internal_commands.ab3@2022> INCLUDE "internal_commands.ab3"
0003AFC4 <internal_commands.ab3@2023> INCLUDE "internal_commands.ab3"
0003AFC8 <internal_commands.ab3@2027> INCLUDE "internal_commands.ab3"
0003AFCA <internal_commands.ab3@2028> INCLUDE "internal_commands.ab3"
0003AFCF <internal_commands.ab3@2029> INCLUDE "internal_commands.ab3"
0003AFD0 <internal_commands.ab3@2030> INCLUDE "internal_commands.ab3"
0003AFD2 <internal_commands.ab3@2033> INCLUDE "internal_commands.ab3"
0003AFD6 <internal_commands.ab3@2034> INCLUDE "internal_commands.ab3"
0003AFD8 <internal_commands.ab3@2035> INCLUDE "internal_commands.ab3"
0003AFDA <internal_commands.ab3@2036> INCLUDE "internal_commands.ab3"
0003AFDE <internal_commands.ab3@2037> INCLUDE "internal_commands.ab3"
0003AFE0 <internal_commands.ab3@2038> INCLUDE "internal_commands.ab3"
0003AFE4 <internal_commands.ab3@2042> INCLUDE "internal_commands.ab3"
0003AFE6 <internal_commands.ab3@2043> INCLUDE "internal_commands.ab3"
0003AFEA <internal_commands.ab3@2044> INCLUDE "internal_commands.ab3"
0003AFEB <internal_commands.ab3@2045> INCLUDE "internal_commands.ab3"
0003AFEC <internal_commands.ab3@2046> INCLUDE "internal_commands.ab3"
0003AFEE <internal_commands.ab3@2048> INCLUDE "internal_commands.ab3"
0003AFF2 <internal_commands.ab3@2049> INCLUDE "internal_commands.ab3"
0003AFF4 <internal_commands.ab3@2050> INCLUDE "internal_commands.ab3"
0003AFF6 <internal_commands.ab3@2051> INCLUDE "internal_commands.ab3"
0003AFFA <internal_commands.ab3@2052> INCLUDE "internal_commands.ab3"
0003AFFC <internal_commands.ab3@2053> INCLUDE "internal_commands.ab3"
0003B000 <internal_commands.ab3@2057> INCLUDE "internal_commands.ab3"
0003B002 <internal_commands.ab3@2058> INCLUDE "internal_commands.ab3"
0003B007 <internal_commands.ab3@2059> INCLUDE "internal_commands.ab3"
0003B008 <internal_commands.ab3@2060> INCLUDE "internal_commands.ab3"
0003B00A <internal_commands.ab3@2063> INCLUDE "internal_commands.ab3"
0003B00E <internal_commands.ab3@2064> INCLUDE "internal_commands.ab3"
0003B010 <internal_commands.ab3@2065> INCLUDE "internal_commands.ab3"
0003B012 <internal_commands.ab3@2066> INCLUDE "internal_commands.ab3"
0003B016 <internal_commands.ab3@2067> INCLUDE "internal_commands.ab3"
0003B018 <internal_commands.ab3@2068> INCLUDE "internal_commands.ab3"
0003B01C <internal_commands.ab3@2072> INCLUDE "internal_commands.ab3"
0003B01E <internal_commands.ab3@2073> INCLUDE "internal_commands.ab3"
0003B023 <internal_commands.ab3@2074> INCLUDE "internal_commands.ab3"
0003B024 <internal_commands.ab3@2075> INCLUDE "internal_commands.ab3"
0003B026 <internal_commands.ab3@2078> INCLUDE "internal_commands.ab3"
0003B02A <internal_commands.ab3@2079> INCLUDE "internal_commands.ab3"
0003B02C <internal_commands.ab3@2080> INCLUDE "internal_commands.ab3"
0003B02E <internal_commands.ab3@2081> INCLUDE "internal_commands.ab3"
0003B032 <internal_commands.ab3@2082> INCLUDE "internal_commands.ab3"
0003B034 <internal_commands.ab3@2083> INCLUDE "internal_commands.ab3"
0003B038 <internal_commands.ab3@2087> INCLUDE "internal_commands.ab3"
0003B03A <internal_commands.ab3@2088> INCLUDE "internal_commands.ab3"
0003B03F <internal_commands.ab3@2089> INCLUDE "internal_commands.ab3"
0003B040 <internal_commands.ab3@2090> INCLUDE "internal_commands.ab3"
0003B042 <internal_commands.ab3@2093> INCLUDE "internal_commands.ab3"
0003B046 <internal_commands.ab3@2094> INCLUDE "internal_commands.ab3"
0003B048 <internal_commands.ab3@2095> INCLUDE "internal_commands.ab3"
0003B04A <internal_commands.ab3@2096> INCLUDE "internal_commands.ab3"
0003B04E <internal_commands.ab3@2097> INCLUDE "internal_commands.ab3"
0003B050 <internal_commands.ab3@2098> INCLUDE "internal_commands.ab3"
0003B054 <internal_commands.ab3@2102> INCLUDE "internal_commands.ab3"
0003B056 <internal_commands.ab3@2103> INCLUDE "internal_commands.ab3"
0003B05B <internal_commands.ab3@2104> INCLUDE "internal_commands.ab3"
0003B05C <internal_commands.ab3@2105> INCLUDE "internal_commands.ab3"
0003B05E <internal_commands.ab3@2108> INCLUDE "internal_commands.ab3"
0003B062 <internal_commands.ab3@2109> INCLUDE "internal_commands.ab3"
0003B064 <internal_commands.ab3@2110> INCLUDE "internal_commands.ab3"
0003B066 <internal_commands.ab3@2111> INCLUDE "internal_commands.ab3"
0003B06A <internal_commands.ab3@2112> INCLUDE "internal_commands.ab3"
0003B06C <internal_commands.ab3@2113> INCLUDE "internal_commands.ab3"
0003B070 <internal_commands.ab3@2117> INCLUDE "internal_commands.ab3"
0003B072 <internal_commands.ab3@2118> INCLUDE "internal_commands.ab3"
0003B077 <internal_commands.ab3@2119> INCLUDE "internal_commands.ab3"
0003B078 <internal_commands.ab3@2120> INCLUDE "internal_commands.ab3"
0003B07A <internal_commands.ab3@2123> INCLUDE "internal_commands.ab3"
0003B07E <internal_commands.ab3@2124> INCLUDE "internal_commands.ab3"
0003B080 <internal_commands.ab3@2125> INCLUDE "internal_commands.ab3"
0003B082 <internal_commands.ab3@2126> INCLUDE "internal_commands.ab3"
0003B086 <internal_commands.ab3@2127> INCLUDE "internal_commands.ab3"
0003B088 <internal_commands.ab3@2128> INCLUDE "internal_commands.ab3"
0003B08C <internal_commands.ab3@2132> INCLUDE "internal_commands.ab3"
0003B08E <internal_commands.ab3@2133> INCLUDE "internal_commands.ab3"
0003B092 <internal_commands.ab3@2134> INCLUDE "internal_commands.ab3"
0003B093 <internal_commands.ab3@2135> INCLUDE "internal_commands.ab3"
0003B094 <internal_commands.ab3@2136> INCLUDE "internal_commands.ab3"
0003B096 <internal_commands.ab3@2138> INCLUDE "internal_commands.ab3"
0003B09A <internal_commands.ab3@2139> INCLUDE "internal_commands.ab3"
0003B09C <internal_commands.ab3@2140> INCLUDE "internal_commands.ab3"
0003B09E <internal_commands.ab3@2141> INCLUDE "internal_commands.ab3"
0003B0A2 <internal_commands.ab3@2142> INCLUDE "internal_commands.ab3"
0003B0A4 <internal_commands.ab3@2143> INCLUDE "internal_commands.ab3"
0003B0A8 <internal_commands.ab3@2147> INCLUDE "internal_commands.ab3"
0003B0AA <internal_commands.ab3@2148> INCLUDE "internal_commands.ab3"
0003B0AF <internal_commands.ab3@2149> INCLUDE "internal_commands.ab3"
0003B0B0 <internal_commands.ab3@2150> INCLUDE "internal_commands.ab3"
0003B0B2 <internal_commands.ab3@2153> INCLUDE "internal_commands.ab3"
0003B0B6 <internal_commands.ab3@2154> INCLUDE "internal_commands.ab3"
0003B0B8 <internal_commands.ab3@2155> INCLUDE "internal_commands.ab3"
0003B0BA <internal_commands.ab3@2156> INCLUDE "internal_commands.ab3"
0003B0BE <internal_commands.ab3@2157> INCLUDE "internal_commands.ab3"
0003B0C0 <internal_commands.ab3@2158> INCLUDE "internal_commands.ab3"
0003B0C4 <internal_commands.ab3@2162> INCLUDE "internal_commands.ab3"
0003B0C6 <internal_commands.ab3@2163> INCLUDE "internal_commands.ab3"
0003B0CC <internal_commands.ab3@2164> INCLUDE "internal_commands.ab3"
0003B0CD <internal_commands.ab3@2165> INCLUDE "internal_commands.ab3"
0003B0CE <internal_commands.ab3@2166> INCLUDE "internal_commands.ab3"
0003B0D0 <internal_commands.ab3@2168> INCLUDE "internal_commands.ab3"
0003B0D4 <internal_commands.ab3@2169> INCLUDE "internal_commands.ab3"
0003B0D6 <internal_commands.ab3@2170> INCLUDE "internal_commands.ab3"
0003B0D8 <internal_commands.ab3@2171> INCLUDE "internal_commands.ab3"
0003B0DC <internal_commands.ab3@2172> INCLUDE "internal_commands.ab3"
0003B0DE <internal_commands.ab3@2173> INCLUDE "internal_commands.ab3"
0003B0E2 <internal_commands.ab3@2177> INCLUDE "internal_commands.ab3"
0003B0E4 <internal_commands.ab3@2178> INCLUDE "internal_commands.ab3"
0003B0E8 <internal_commands.ab3@2179> INCLUDE "internal_commands.ab3"
0003B0E9 <internal_commands.ab3@2180> INCLUDE "internal_commands.ab3"
0003B0EA <internal_commands.ab3@2181> INCLUDE "internal_commands.ab3"
0003B0EC <internal_commands.ab3@2183> INCLUDE "internal_commands.ab3"
0003B0F0 <internal_commands.ab3@2184> INCLUDE "internal_commands.ab3"
0003B0F2 <internal_commands.ab3@2185> INCLUDE "internal_commands.ab3"
0003B0F4 <internal_commands.ab3@2186> INCLUDE "internal_commands.ab3"
0003B0F8 <internal_commands.ab3@2187> INCLUDE "internal_commands.ab3"
0003B0FA <internal_commands.ab3@2188> INCLUDE "internal_commands.ab3"
0003B0FE <internal_commands.ab3@2192> INCLUDE "internal_commands.ab3"
0003B100 <internal_commands.ab3@2193> INCLUDE "internal_commands.ab3"
0003B105 <internal_commands.ab3@2194> INCLUDE "internal_commands.ab3"
0003B106 <internal_commands.ab3@2195> INCLUDE "internal_commands.ab3"
0003B108 <internal_commands.ab3@2198> INCLUDE "internal_commands.ab3"
0003B10C <internal_commands.ab3@2199> INCLUDE "internal_commands.ab3"
0003B10E <internal_commands.ab3@2200> INCLUDE "internal_commands.ab3"
0003B110 <internal_commands.ab3@2201> INCLUDE "internal_commands.ab3"
0003B114 <internal_commands.ab3@2202> INCLUDE "internal_commands.ab3"
0003B116 <internal_commands.ab3@2203> INCLUDE "internal_commands.ab3"
0003B11A <internal_commands.ab3@2208> INCLUDE "internal_commands.ab3"
0003B11C <internal_commands.ab3@2209> INCLUDE "internal_commands.ab3"
0003B123 <internal_commands.ab3@2210> INCLUDE "internal_commands.ab3"
0003B124 <internal_commands.ab3@2211> INCLUDE "internal_commands.ab3"
0003B126 <internal_commands.ab3@2230> INCLUDE "internal_commands.ab3"
0003B128 <internal_commands.ab3@2231> INCLUDE "internal_commands.ab3"
0003B12A <internal_commands.ab3@2235> INCLUDE "internal_commands.ab3"
0003B12C <internal_commands.ab3@2236> INCLUDE "internal_commands.ab3"
0003B12E <internal_commands.ab3@2240> INCLUDE "internal_commands.ab3"
0003B130 <internal_commands.ab3@2241> INCLUDE "internal_commands.ab3"
0003B132 <internal_commands.ab3@2245> INCLUDE "internal_commands.ab3"
0003B134 <internal_commands.ab3@2246> INCLUDE "internal_commands.ab3"
0003B136 <internal_commands.ab3@2251> INCLUDE "internal_commands.ab3"
0003B13A <internal_commands.ab3@2252> INCLUDE "internal_commands.ab3"
0003B13C <internal_commands.ab3@2253> INCLUDE "internal_commands.ab3"
0003B13E <internal_commands.ab3@2254> INCLUDE "internal_commands.ab3"
0003B140 <internal_commands.ab3@2255> INCLUDE "internal_commands.ab3"
0003B142 <internal_commands.ab3@2256> INCLUDE "internal_commands.ab3"
0003B146 <internal_commands.ab3@2257> INCLUDE "internal_commands.ab3"
0003B14C <internal_commands.ab3@2260> INCLUDE "internal_commands.ab3"
0003B150 <internal_commands.ab3@2261> INCLUDE "internal_commands.ab3"
0003B152 <internal_commands.ab3@2262> INCLUDE "internal_commands.ab3"
0003B154 <internal_commands.ab3@2263> INCLUDE "internal_commands.ab3"
0003B156 <internal_commands.ab3@2264> INCLUDE "internal_commands.ab3"
0003B158 <internal_commands.ab3@2265> INCLUDE "internal_commands.ab3"
0003B15A <internal_commands.ab3@2266> INCLUDE "internal_commands.ab3"
0003B15C <internal_commands.ab3@2273> INCLUDE "internal_commands.ab3"
0003B160 <internal_commands.ab3@2274> INCLUDE "internal_commands.ab3"
0003B164 <internal_commands.ab3@2275> INCLUDE "internal_commands.ab3"
0003B168 <internal_commands.ab3@2276> INCLUDE "internal_commands.ab3"
0003B16C <internal_commands.ab3@2277> INCLUDE "internal_commands.ab3"
0003B170 <internal_commands.ab3@2278> INCLUDE "internal_commands.ab3"
0003B172 <internal_commands.ab3@2281> INCLUDE "internal_commands.ab3"
0003B174 <internal_commands.ab3@2282> INCLUDE "internal_commands.ab3"
0003B178 <internal_commands.ab3@2283> INCLUDE "internal_commands.ab3"
0003B17C <internal_commands.ab3@2284> INCLUDE "internal_commands.ab3"
0003B180 <internal_commands.ab3@2285> INCLUDE "internal_commands.ab3"
0003B184 <internal_commands.ab3@2286> INCLUDE "internal_commands.ab3"
0003B186 <internal_commands.ab3@2289> INCLUDE "internal_commands.ab3"
0003B188 <internal_commands.ab3@2290> INCLUDE "internal_commands.ab3"
0003B18C <internal_commands.ab3@2291> INCLUDE "internal_commands.ab3"
0003B190 <internal_commands.ab3@2292> INCLUDE "internal_commands.ab3"
0003B194 <internal_commands.ab3@2293> INCLUDE "internal_commands.ab3"
0003B198 <internal_commands.ab3@2294> INCLUDE "internal_commands.ab3"
0003B19A <internal_commands.ab3@2295> INCLUDE "internal_commands.ab3"
0003B19C <internal_commands.ab3@2298> INCLUDE "internal_commands.ab3"
0003B19E <internal_commands.ab3@2299> INCLUDE "internal_commands.ab3"
0003B1A2 <internal_commands.ab3@2300> INCLUDE "internal_commands.ab3"
0003B1A4 <internal_commands.ab3@2302> INCLUDE "internal_commands.ab3"
0003B1A8 <internal_commands.ab3@2303> INCLUDE "internal_commands.ab3"
0003B1AA <internal_commands.ab3@2307> INCLUDE "internal_commands.ab3"
0003B1AE <internal_commands.ab3@2308> INCLUDE "internal_commands.ab3"
0003B1B0 <internal_commands.ab3@2309> INCLUDE "internal_commands.ab3"
0003B1B4 <internal_commands.ab3@2310> INCLUDE "internal_commands.ab3"
0003B1B8 <internal_commands.ab3@2311> INCLUDE "internal_commands.ab3"
0003B1BC <internal_commands.ab3@2312> INCLUDE "internal_commands.ab3"
0003B1C0 <internal_commands.ab3@2316> INCLUDE "internal_commands.ab3"
0003B1C4 <internal_commands.ab3@2317> INCLUDE "internal_commands.ab3"
0003B1C8 <internal_commands.ab3@2319> INCLUDE "internal_commands.ab3"
0003B1CC <internal_commands.ab3@2320> INCLUDE "internal_commands.ab3"
0003B1D0 <internal_commands.ab3@2321> INCLUDE "internal_commands.ab3"
0003B1D4 <internal_commands.ab3@2322> INCLUDE "internal_commands.ab3"
0003B1D8 <internal_commands.ab3@2323> INCLUDE "internal_commands.ab3"
0003B1DC <internal_commands.ab3@2324> INCLUDE "internal_commands.ab3"
0003B1E0 <internal_commands.ab3@2325> INCLUDE "internal_commands.ab3"
0003B1E4 <internal_commands.ab3@2326> INCLUDE "internal_commands.ab3"
0003B1E8 <internal_commands.ab3@2328> INCLUDE "internal_commands.ab3"
0003B1EC <internal_commands.ab3@2331> INCLUDE "internal_commands.ab3"
0003B1F0 <internal_commands.ab3@2332> INCLUDE "internal_commands.ab3"
0003B1F4 <internal_commands.ab3@2334> INCLUDE "internal_commands.ab3"
0003B1F8 <internal_commands.ab3@2335> INCLUDE "internal_commands.ab3"
0003B1FC <internal_commands.ab3@2336> INCLUDE "internal_commands.ab3"
0003B200 <internal_commands.ab3@2337> INCLUDE "internal_commands.ab3"
0003B204 <internal_commands.ab3@2338> INCLUDE "internal_commands.ab3"
0003B208 <internal_commands.ab3@2339> INCLUDE "internal_commands.ab3"
0003B20C <internal_commands.ab3@2340> INCLUDE "internal_commands.ab3"
0003B210 <internal_commands.ab3@2341> INCLUDE "internal_commands.ab3"
0003B214 <internal_commands.ab3@2343> INCLUDE "internal_commands.ab3"
0003B218 <internal_commands.ab3@2346> INCLUDE "internal_commands.ab3"
0003B21A <internal_commands.ab3@2347> INCLUDE "internal_commands.ab3"
0003B21E <internal_commands.ab3@2348> INCLUDE "internal_commands.ab3"
0003B222 <internal_commands.ab3@2349> INCLUDE "internal_commands.ab3"
0003B226 <internal_commands.ab3@2350> INCLUDE "internal_commands.ab3"
0003B22A <internal_commands.ab3@2351> INCLUDE "internal_commands.ab3"
0003B22E <internal_commands.ab3@2352> INCLUDE "internal_commands.ab3"
0003B232 <internal_commands.ab3@2353> INCLUDE "internal_commands.ab3"
0003B236 <internal_commands.ab3@2356> INCLUDE "internal_commands.ab3"
0003B23A <internal_commands.ab3@2357> INCLUDE "internal_commands.ab3"
0003B23E <internal_commands.ab3@2358> INCLUDE "internal_commands.ab3"
0003B240 <internal_commands.ab3@2359> INCLUDE "internal_commands.ab3"
0003B242 <internal_commands.ab3@2362> INCLUDE "internal_commands.ab3"
0003B244 <internal_commands.ab3@2363> INCLUDE "internal_commands.ab3"
0003B246 <internal_commands.ab3@2364> INCLUDE "internal_commands.ab3"
0003B248 <internal_commands.ab3@2365> INCLUDE "internal_commands.ab3"
0003B24C <internal_commands.ab3@2366> INCLUDE "internal_commands.ab3"
0003B250 <internal_commands.ab3@2369> INCLUDE "internal_commands.ab3"
0003B254 <internal_commands.ab3@2370> INCLUDE "internal_commands.ab3"
0003B258 <internal_commands.ab3@2371> INCLUDE "internal_commands.ab3"
0003B25A <internal_commands.ab3@2372> INCLUDE "internal_commands.ab3"
0003B25E <internal_commands.ab3@2373> INCLUDE "internal_commands.ab3"
0003B262 <internal_commands.ab3@2376> INCLUDE "internal_commands.ab3"
0003B266 <internal_commands.ab3@2379> INCLUDE "internal_commands.ab3"
0003B26A <internal_commands.ab3@2380> INCLUDE "internal_commands.ab3"
0003B26C <internal_commands.ab3@2381> INCLUDE "internal_commands.ab3"
0003B26E <internal_commands.ab3@2382> INCLUDE "internal_commands.ab3"
0003B272 <internal_commands.ab3@2383> INCLUDE "internal_commands.ab3"
0003B276 <internal_commands.ab3@2386> INCLUDE "internal_commands.ab3"
0003B27A <internal_commands.ab3@2387> INCLUDE "internal_commands.ab3"
0003B27E <internal_commands.ab3@2390> INCLUDE "internal_commands.ab3"
0003B282 <internal_commands.ab3@2393> INCLUDE "internal_commands.ab3"
0003B286 <internal_commands.ab3@2394> INCLUDE "internal_commands.ab3"
0003B288 <internal_commands.ab3@2395> INCLUDE "internal_commands.ab3"
0003B28A <internal_commands.ab3@2396> INCLUDE "internal_commands.ab3"
0003B28E <internal_commands.ab3@2397> INCLUDE "internal_commands.ab3"
0003B292 <internal_commands.ab3@2400> INCLUDE "internal_commands.ab3"
0003B296 <internal_commands.ab3@2401> INCLUDE "internal_commands.ab3"
0003B298 <internal_commands.ab3@2405> INCLUDE "internal_commands.ab3"
0003B29C <internal_commands.ab3@2406> INCLUDE "internal_commands.ab3"
0003B2A0 <internal_commands.ab3@2407> INCLUDE "internal_commands.ab3"
0003B2A2 <internal_commands.ab3@2408> INCLUDE "internal_commands.ab3"
0003B2A6 <internal_commands.ab3@2409> INCLUDE "internal_commands.ab3"
0003B2AA <internal_commands.ab3@2410> INCLUDE "internal_commands.ab3"
0003B2AC <internal_commands.ab3@2413> INCLUDE "internal_commands.ab3"
0003B2B0 <internal_commands.ab3@2414> INCLUDE "internal_commands.ab3"
0003B2B4 <internal_commands.ab3@2415> INCLUDE "internal_commands.ab3"
0003B2B8 <internal_commands.ab3@2416> INCLUDE "internal_commands.ab3"
0003B2BC <internal_commands.ab3@2419> INCLUDE "internal_commands.ab3"
0003B2C0 <internal_commands.ab3@2420> INCLUDE "internal_commands.ab3"
0003B2C2 <internal_commands.ab3@2424> INCLUDE "internal_commands.ab3"
0003B2C6 <internal_commands.ab3@2425> INCLUDE "internal_commands.ab3"
0003B2C8 <internal_commands.ab3@2426> INCLUDE "internal_commands.ab3"
0003B2CA <internal_commands.ab3@2427> INCLUDE "internal_commands.ab3"
0003B2CC <internal_commands.ab3@2428> INCLUDE "internal_commands.ab3"
0003B2D0 <internal_commands.ab3@2429> INCLUDE "internal_commands.ab3"
0003B2D4 <internal_commands.ab3@2432> INCLUDE "internal_commands.ab3"
0003B2D8 <internal_commands.ab3@2433> INCLUDE "internal_commands.ab3"
0003B2DC <internal_commands.ab3@2434> INCLUDE "internal_commands.ab3"
0003B2E0 <internal_commands.ab3@2435> INCLUDE "internal_commands.ab3"
0003B2E4 <internal_commands.ab3@2439> INCLUDE "internal_commands.ab3"
0003B2E8 <internal_commands.ab3@2440> INCLUDE "internal_commands.ab3"
0003B2EC <internal_commands.ab3@2444> INCLUDE "internal_commands.ab3"
0003B2F0 <internal_commands.ab3@2445> INCLUDE "internal_commands.ab3"
0003B2F4 <internal_commands.ab3@2449> INCLUDE "internal_commands.ab3"
0003B2F8 <internal_commands.ab3@2450> INCLUDE "internal_commands.ab3"
0003B2FC <internal_commands.ab3@2454> INCLUDE "internal_commands.ab3"
0003B2FE <internal_commands.ab3@2456> INCLUDE "internal_commands.ab3"
0003B302 <internal_commands.ab3@2457> INCLUDE "internal_commands.ab3"
0003B306 <internal_commands.ab3@2458> INCLUDE "internal_commands.ab3"
0003B308 <internal_commands.ab3@2459> INCLUDE "internal_commands.ab3"
0003B30A <internal_commands.ab3@2460> INCLUDE "internal_commands.ab3"
0003B30C <internal_commands.ab3@2461> INCLUDE "internal_commands.ab3"
0003B310 <internal_commands.ab3@2462> INCLUDE "internal_commands.ab3"
0003B314 <internal_commands.ab3@2463> INCLUDE "internal_commands.ab3"
0003B316 <internal_commands.ab3@2464> INCLUDE "internal_commands.ab3"
0003B31A <internal_commands.ab3@2465> INCLUDE "internal_commands.ab3"
0003B31C <internal_commands.ab3@2466> INCLUDE "internal_commands.ab3"
0003B31E <internal_commands.ab3@2467> INCLUDE "internal_commands.ab3"
0003B320 <internal_commands.ab3@2468> INCLUDE "internal_commands.ab3"
0003B324 <internal_commands.ab3@2469> INCLUDE "internal_commands.ab3"
0003B328 <internal_commands.ab3@2470> INCLUDE "internal_commands.ab3"
0003B32A <internal_commands.ab3@2473> INCLUDE "internal_commands.ab3"
0003B32C <internal_commands.ab3@2474> INCLUDE "internal_commands.ab3"
0003B330 <internal_commands.ab3@2475> INCLUDE "internal_commands.ab3"
0003B334 <internal_commands.ab3@2476> INCLUDE "internal_commands.ab3"
0003B338 <internal_commands.ab3@2477> INCLUDE "internal_commands.ab3"
0003B33C <internal_commands.ab3@2478> INCLUDE "internal_commands.ab3"
0003B33E <internal_commands.ab3@2479> INCLUDE "internal_commands.ab3"
0003B342 <internal_commands.ab3@2480> INCLUDE "internal_commands.ab3"
0003B346 <internal_commands.ab3@2481> INCLUDE "internal_commands.ab3"
0003B34A <internal_commands.ab3@2482> INCLUDE "internal_commands.ab3"
0003B34C <internal_commands.ab3@2483> INCLUDE "internal_commands.ab3"
0003B34E <internal_commands.ab3@2484> INCLUDE "internal_commands.ab3"
0003B350 <internal_commands.ab3@2485> INCLUDE "internal_commands.ab3"
0003B352 <internal_commands.ab3@2488> INCLUDE "internal_commands.ab3"
0003B354 <internal_commands.ab3@2489> INCLUDE "internal_commands.ab3"
0003B356 <internal_commands.ab3@2490> INCLUDE "internal_commands.ab3"
0003B35A <internal_commands.ab3@2491> INCLUDE "internal_commands.ab3"
0003B35E <internal_commands.ab3@2492> INCLUDE "internal_commands.ab3"
0003B360 <internal_commands.ab3@2496> INCLUDE "internal_commands.ab3"
0003B364 <internal_commands.ab3@2497> INCLUDE "internal_commands.ab3"
0003B366 <internal_commands.ab3@2498> INCLUDE "internal_commands.ab3"
0003B36A <internal_commands.ab3@2499> INCLUDE "internal_commands.ab3"
0003B36E <internal_commands.ab3@2500> INCLUDE "internal_commands.ab3"
0003B370 <internal_commands.ab3@2501> INCLUDE "internal_commands.ab3"
0003B372 <internal_commands.ab3@2504> INCLUDE "internal_commands.ab3"
0003B374 <internal_commands.ab3@2508> INCLUDE "internal_commands.ab3"
0003B378 <internal_commands.ab3@2509> INCLUDE "internal_commands.ab3"
0003B37A <internal_commands.ab3@2510> INCLUDE "internal_commands.ab3"
0003B37E <internal_commands.ab3@2511> INCLUDE "internal_commands.ab3"
0003B382 <internal_commands.ab3@2512> INCLUDE "internal_commands.ab3"
0003B386 <internal_commands.ab3@2513> INCLUDE "internal_commands.ab3"
0003B388 <internal_commands.ab3@2516> INCLUDE "internal_commands.ab3"
0003B38C <internal_commands.ab3@2520> INCLUDE "internal_commands.ab3"
0003B390 <internal_commands.ab3@2521> INCLUDE "internal_commands.ab3"
0003B392 <internal_commands.ab3@2522> INCLUDE "internal_commands.ab3"
0003B396 <internal_commands.ab3@2523> INCLUDE "internal_commands.ab3"
0003B39A <internal_commands.ab3@2524> INCLUDE "internal_commands.ab3"
0003B39E <internal_commands.ab3@2527> INCLUDE "internal_commands.ab3"
0003B3A2 <internal_commands.ab3@2528> INCLUDE "internal_commands.ab3"
0003B3A6 <internal_commands.ab3@2529> INCLUDE "internal_commands.ab3"
0003B3AA <internal_commands.ab3@2530> INCLUDE "internal_commands.ab3"
0003B3AE <internal_commands.ab3@2531> INCLUDE "internal_commands.ab3"
0003B3B2 <internal_commands.ab3@2538> INCLUDE "internal_commands.ab3"
0003B3B4 <internal_commands.ab3@2539> INCLUDE "internal_commands.ab3"
0003B3B9 <internal_commands.ab3@2540> INCLUDE "internal_commands.ab3"
0003B3BA <internal_commands.ab3@2541> INCLUDE "internal_commands.ab3"
0003B3BE <internal_commands.ab3@2545> INCLUDE "internal_commands.ab3"
0003B3C0 <internal_commands.ab3@2546> INCLUDE "internal_commands.ab3"
0003B3C7 <internal_commands.ab3@2547> INCLUDE "internal_commands.ab3"
0003B3C8 <internal_commands.ab3@2548> INCLUDE "internal_commands.ab3"
0003B3CC <internal_commands.ab3@2552> INCLUDE "internal_commands.ab3"
0003B3CE <internal_commands.ab3@2553> INCLUDE "internal_commands.ab3"
0003B3D5 <internal_commands.ab3@2554> INCLUDE "internal_commands.ab3"
0003B3D6 <internal_commands.ab3@2555> INCLUDE "internal_commands.ab3"
0003B3DA <internal_commands.ab3@2559> INCLUDE "internal_commands.ab3"
0003B3DC <internal_commands.ab3@2560> INCLUDE "internal_commands.ab3"
0003B3E4 <internal_commands.ab3@2561> INCLUDE "internal_commands.ab3"
0003B3E5 <internal_commands.ab3@2562> INCLUDE "internal_commands.ab3"
0003B3E6 <internal_commands.ab3@2563> INCLUDE "internal_commands.ab3"
0003B3EA <internal_commands.ab3@2566> INCLUDE "internal_commands.ab3"
0003B3EC <internal_commands.ab3@2567> INCLUDE "internal_commands.ab3"
0003B3F1 <internal_commands.ab3@2568> INCLUDE "internal_commands.ab3"
0003B405 <internal_commands.ab3@2569> INCLUDE "internal_commands.ab3"
0003B406 <internal_commands.ab3@2570> INCLUDE "internal_commands.ab3"
0003B40A <internal_commands.ab3@2573> INCLUDE "internal_commands.ab3"
0003B40C <internal_commands.ab3@2574> INCLUDE "internal_commands.ab3"
0003B410 <internal_commands.ab3@2575> INCLUDE "internal_commands.ab3"
0003B411 <internal_commands.ab3@2576> INCLUDE "internal_commands.ab3"
0003B412 <internal_commands.ab3@2577> INCLUDE "internal_commands.ab3"
0003B416 <internal_commands.ab3@2580> INCLUDE "internal_commands.ab3"
0003B418 <internal_commands.ab3@2581> INCLUDE "internal_commands.ab3"
0003B41B <internal_commands.ab3@2582> INCLUDE "internal_commands.ab3"
0003B41C <internal_commands.ab3@2583> INCLUDE "internal_commands.ab3"
0003B420 <internal_commands.ab3@2587> INCLUDE "internal_commands.ab3"
0003B422 <internal_commands.ab3@2588> INCLUDE "internal_commands.ab3"
0003B429 <internal_commands.ab3@2589> INCLUDE "internal_commands.ab3"
0003B42A <internal_commands.ab3@2590> INCLUDE "internal_commands.ab3"
0003B42E <internal_commands.ab3@2594> INCLUDE "internal_commands.ab3"
0003B430 <internal_commands.ab3@2595> INCLUDE "internal_commands.ab3"
0003B436 <internal_commands.ab3@2596> INCLUDE "internal_commands.ab3"
0003B443 <internal_commands.ab3@2597> INCLUDE "internal_commands.ab3"
0003B444 <internal_commands.ab3@2598> INCLUDE "internal_commands.ab3"
0003B448 <internal_commands.ab3@2601> INCLUDE "internal_commands.ab3"
0003B44A <internal_commands.ab3@2602> INCLUDE "internal_commands.ab3"
0003B451 <internal_commands.ab3@2603> INCLUDE "internal_commands.ab3"
0003B469 <internal_commands.ab3@2604> INCLUDE "internal_commands.ab3"
0003B46A <internal_commands.ab3@2605> INCLUDE "internal_commands.ab3"
0003B46E <internal_commands.ab3@2608> INCLUDE "internal_commands.ab3"
0003B470 <internal_commands.ab3@2609> INCLUDE "internal_commands.ab3"
0003B474 <internal_commands.ab3@2610> INCLUDE "internal_commands.ab3"
0003B497 <internal_commands.ab3@2611> INCLUDE "internal_commands.ab3"
0003B498 <internal_commands.ab3@2612> INCLUDE "internal_commands.ab3"
0003B49C <internal_commands.ab3@2615> INCLUDE "internal_commands.ab3"
0003B49E <internal_commands.ab3@2616> INCLUDE "internal_commands.ab3"
0003B4A5 <internal_commands.ab3@2617> INCLUDE "internal_commands.ab3"
0003B4B0 <internal_commands.ab3@2618> INCLUDE "internal_commands.ab3"
0003B4B4 <internal_commands.ab3@2622> INCLUDE "internal_commands.ab3"
0003B4B6 <internal_commands.ab3@2623> INCLUDE "internal_commands.ab3"
0003B4BC <internal_commands.ab3@2624> INCLUDE "internal_commands.ab3"
0003B4BD <internal_commands.ab3@2625> INCLUDE "internal_commands.ab3"
0003B4BE <internal_commands.ab3@2626> INCLUDE "internal_commands.ab3"
0003B4C2 <internal_commands.ab3@2629> INCLUDE "internal_commands.ab3"
0003B4C4 <internal_commands.ab3@2630> INCLUDE "internal_commands.ab3"
0003B4C9 <internal_commands.ab3@2631> INCLUDE "internal_commands.ab3"
0003B4CA <internal_commands.ab3@2632> INCLUDE "internal_commands.ab3"
0003B4CE <internal_commands.ab3@2636> INCLUDE "internal_commands.ab3"
0003B4D0 <internal_commands.ab3@2637> INCLUDE "internal_commands.ab3"
0003B4D7 <internal_commands.ab3@2638> INCLUDE "internal_commands.ab3"
0003B4E9 <internal_commands.ab3@2639> INCLUDE "internal_commands.ab3"
0003B4EA <internal_commands.ab3@2640> INCLUDE "internal_commands.ab3"
0003B4EE <internal_commands.ab3@2643> INCLUDE "internal_commands.ab3"
0003B4F0 <internal_commands.ab3@2644> INCLUDE "internal_commands.ab3"
0003B4FA <internal_commands.ab3@2645> INCLUDE "internal_commands.ab3"
0003B4FB <internal_commands.ab3@2646> INCLUDE "internal_commands.ab3"
0003B4FC <internal_commands.ab3@2647> INCLUDE "internal_commands.ab3"
0003B500 <internal_commands.ab3@2650> INCLUDE "internal_commands.ab3"
0003B502 <internal_commands.ab3@2651> INCLUDE "internal_commands.ab3"
0003B50A <internal_commands.ab3@2652> INCLUDE "internal_commands.ab3"
0003B517 <internal_commands.ab3@2653> INCLUDE "internal_commands.ab3"
0003B518 <internal_commands.ab3@2654> INCLUDE "internal_commands.ab3"
0003B51C <internal_commands.ab3@2657> INCLUDE "internal_commands.ab3"
0003B51E <internal_commands.ab3@2658> INCLUDE "internal_commands.ab3"
0003B521 <internal_commands.ab3@2659> INCLUDE "internal_commands.ab3"
0003B55C <internal_commands.ab3@2660> INCLUDE "internal_commands.ab3"
0003B560 <internal_commands.ab3@2664> INCLUDE "internal_commands.ab3"
0003B562 <internal_commands.ab3@2665> INCLUDE "internal_commands.ab3"
0003B566 <internal_commands.ab3@2666> INCLUDE "internal_commands.ab3"
0003B567 <internal_commands.ab3@2667> INCLUDE "internal_commands.ab3"
0003B568 <internal_commands.ab3@2668> INCLUDE "internal_commands.ab3"
0003B56C <internal_commands.ab3@2671> INCLUDE "internal_commands.ab3"
0003B56E <internal_commands.ab3@2672> INCLUDE "internal_commands.ab3"
0003B576 <internal_commands.ab3@2673> INCLUDE "internal_commands.ab3"
0003B577 <internal_commands.ab3@2674> INCLUDE "internal_commands.ab3"
0003B578 <internal_commands.ab3@2675> INCLUDE "internal_commands.ab3"
0003B57C <internal_commands.ab3@2678> INCLUDE "internal_commands.ab3"
0003B57E <internal_commands.ab3@2679> INCLUDE "internal_commands.ab3"
0003B586 <internal_commands.ab3@2680> INCLUDE "internal_commands.ab3"
0003B596 <internal_commands.ab3@2681> INCLUDE "internal_commands.ab3"
0003B59A <internal_commands.ab3@2685> INCLUDE "internal_commands.ab3"
0003B59C <internal_commands.ab3@2686> INCLUDE "internal_commands.ab3"
0003B5A5 <internal_commands.ab3@2687> INCLUDE "internal_commands.ab3"
0003B5AD <internal_commands.ab3@2688> INCLUDE "internal_commands.ab3"
0003B5AE <internal_commands.ab3@2689> INCLUDE "internal_commands.ab3"
0003B5B2 <internal_commands.ab3@2692> INCLUDE "internal_commands.ab3"
0003B5B4 <internal_commands.ab3@2693> INCLUDE "internal_commands.ab3"
0003B5BC <internal_commands.ab3@2694> INCLUDE "internal_commands.ab3"
0003B5C5 <internal_commands.ab3@2695> INCLUDE "internal_commands.ab3"
0003B5C6 <internal_commands.ab3@2696> INCLUDE "internal_commands.ab3"
0003B5CA <internal_commands.ab3@2699> INCLUDE "internal_commands.ab3"
0003B5CC <internal_commands.ab3@2700> INCLUDE "internal_commands.ab3"
0003B5D4 <internal_commands.ab3@2701> INCLUDE "internal_commands.ab3"
0003B5D5 <internal_commands.ab3@2702> INCLUDE "internal_commands.ab3"
0003B5D6 <internal_commands.ab3@2703> INCLUDE "internal_commands.ab3"
0003B5DA <internal_commands.ab3@2706> INCLUDE "internal_commands.ab3"
0003B5DC <internal_commands.ab3@2707> INCLUDE "internal_commands.ab3"
0003B5E2 <internal_commands.ab3@2708> INCLUDE "internal_commands.ab3"
0003B5E3 <internal_commands.ab3@2709> INCLUDE "internal_commands.ab3"
0003B5E4 <internal_commands.ab3@2710> INCLUDE "internal_commands.ab3"
0003B5E8 <internal_commands.ab3@2713> INCLUDE "internal_commands.ab3"
0003B5EA <internal_commands.ab3@2714> INCLUDE "internal_commands.ab3"
0003B5F1 <internal_commands.ab3@2715> INCLUDE "internal_commands.ab3"
0003B5F2 <internal_commands.ab3@2716> INCLUDE "internal_commands.ab3"
0003B5F6 <internal_commands.ab3@2720> INCLUDE "internal_commands.ab3"
0003B5F8 <internal_commands.ab3@2721> INCLUDE "internal_commands.ab3"
0003B5FF <internal_commands.ab3@2722> INCLUDE "internal_commands.ab3"
0003B600 <internal_commands.ab3@2723> INCLUDE "internal_commands.ab3"
0003B604 <internal_commands.ab3@2727> INCLUDE "internal_commands.ab3"
0003B606 <internal_commands.ab3@2728> INCLUDE "internal_commands.ab3"
0003B60D <internal_commands.ab3@2729> INCLUDE "internal_commands.ab3"
0003B60E <internal_commands.ab3@2730> INCLUDE "internal_commands.ab3"
0003B612 <internal_commands.ab3@2734> INCLUDE "internal_commands.ab3"
0003B614 <internal_commands.ab3@2735> INCLUDE "internal_commands.ab3"
0003B61B <internal_commands.ab3@2736> INCLUDE "internal_commands.ab3"
0003B61C <internal_commands.ab3@2737> INCLUDE "internal_commands.ab3"
0003B620 <internal_commands.ab3@2741> INCLUDE "internal_commands.ab3"
0003B622 <internal_commands.ab3@2742> INCLUDE "internal_commands.ab3"
0003B627 <internal_commands.ab3@2743> INCLUDE "internal_commands.ab3"
0003B63D <internal_commands.ab3@2744> INCLUDE "internal_commands.ab3"
0003B63E <internal_commands.ab3@2745> INCLUDE "internal_commands.ab3"
0003B642 <internal_commands.ab3@2748> INCLUDE "internal_commands.ab3"
0003B644 <internal_commands.ab3@2749> INCLUDE "internal_commands.ab3"
0003B64E <internal_commands.ab3@2750> INCLUDE "internal_commands.ab3"
0003B64F <internal_commands.ab3@2751> INCLUDE "internal_commands.ab3"
0003B650 <internal_commands.ab3@2752> INCLUDE "internal_commands.ab3"
0003B654 <internal_commands.ab3@2755> INCLUDE "internal_commands.ab3"
0003B656 <internal_commands.ab3@2756> INCLUDE "internal_commands.ab3"
0003B661 <internal_commands.ab3@2757> INCLUDE "internal_commands.ab3"
0003B662 <internal_commands.ab3@2758> INCLUDE "internal_commands.ab3"
0003B666 <internal_commands.ab3@2762> INCLUDE "internal_commands.ab3"
0003B668 <internal_commands.ab3@2763> INCLUDE "internal_commands.ab3"
0003B674 <internal_commands.ab3@2764> INCLUDE "internal_commands.ab3"
0003B6A1 <internal_commands.ab3@2765> INCLUDE "internal_commands.ab3"
0003B6A2 <internal_commands.ab3@2766> INCLUDE "internal_commands.ab3"
0003B6A6 <internal_commands.ab3@2769> INCLUDE "internal_commands.ab3"
0003B6A8 <internal_commands.ab3@2770> INCLUDE "internal_commands.ab3"
0003B6B0 <internal_commands.ab3@2771> INCLUDE "internal_commands.ab3"
0003B6E7 <internal_commands.ab3@2772> INCLUDE "internal_commands.ab3"
0003B6E8 <internal_commands.ab3@2773> INCLUDE "internal_commands.ab3"
0003B6EC <internal_commands.ab3@2776> INCLUDE "internal_commands.ab3"
0003B6EE <internal_commands.ab3@2777> INCLUDE "internal_commands.ab3"
0003B6F6 <internal_commands.ab3@2778> INCLUDE "internal_commands.ab3"
0003B715 <internal_commands.ab3@2779> INCLUDE "internal_commands.ab3"
0003B716 <internal_commands.ab3@2780> INCLUDE "internal_commands.ab3"
0003B71A <internal_commands.ab3@2783> INCLUDE "internal_commands.ab3"
0003B71C <internal_commands.ab3@2784> INCLUDE "internal_commands.ab3"
0003B723 <internal_commands.ab3@2785> INCLUDE "internal_commands.ab3"
0003B759 <internal_commands.ab3@2786> INCLUDE "internal_commands.ab3"
0003B75A <internal_commands.ab3@2787> INCLUDE "internal_commands.ab3"
0003B75E <internal_commands.ab3@2790> INCLUDE "internal_commands.ab3"
0003B760 <internal_commands.ab3@2791> INCLUDE "internal_commands.ab3"
0003B769 <internal_commands.ab3@2792> INCLUDE "internal_commands.ab3"
0003B79E <internal_commands.ab3@2793> INCLUDE "internal_commands.ab3"
0003B7A2 <internal_commands.ab3@2797> INCLUDE "internal_commands.ab3"
0003B7A4 <internal_commands.ab3@2798> INCLUDE "internal_commands.ab3"
0003B7B4 <internal_commands.ab3@2799> INCLUDE "internal_commands.ab3"
0003B7EB <internal_commands.ab3@2800> INCLUDE "internal_commands.ab3"
0003B7EC <internal_commands.ab3@2801> INCLUDE "internal_commands.ab3"
0003B7EC <AmiBlitz3.ab3@28336> INCLUDE "internal_commands.ab3"
0003B7F0 <AmiBlitz3.ab3@28341>            Dc.l cif_lt                                     ;ciflt
0003B7F4 <AmiBlitz3.ab3@28342>            Dc.l cif_eq                                     ;cifeq
0003B7F8 <AmiBlitz3.ab3@28343>            Dc.l cif_gt                                     ;cifgt
0003B7FC <AmiBlitz3.ab3@28344>            Ds.l 1                                          ;0
0003B800 <AmiBlitz3.ab3@28345>            Dc.l cif_le                                     ;cifle
0003B804 <AmiBlitz3.ab3@28346>            Dc.l cif_ne                                     ;cifne
0003B808 <AmiBlitz3.ab3@28347>            Dc.l cif_le                                     ;cifge
0003B80C <AmiBlitz3.ab3@28348>            Ds.l 1                                          ;0
0003B810 <AmiBlitz3.ab3@28349>            Dc.l cif_ge                                     ;cifge
0003B814 <AmiBlitz3.ab3@28350>            Dc.l cif_ne                                     ;cifne
0003B818 <AmiBlitz3.ab3@28351>            Dc.l cif_ge                                     ;cifge
0003B81C <AmiBlitz3.ab3@28352>            Ds.l 1                                          ;0
0003B820 <AmiBlitz3.ab3@28355>            Dc.l do_newtype                                 ;donewtype
0003B824 <AmiBlitz3.ab3@28356>            Dc.l do_end                                     ;doend
0003B828 <AmiBlitz3.ab3@28357>            Dc.l do_let                                     ;dolet
0003B82C <AmiBlitz3.ab3@28358>            Dc.l do_dim                                     ;dodim
0003B830 <AmiBlitz3.ab3@28359>            Dc.l do_goto                                    ;dogoto
0003B834 <AmiBlitz3.ab3@28360>            Dc.l do_gosub                                   ;dogosub
0003B838 <AmiBlitz3.ab3@28361>            Dc.l do_return                                  ;doreturn
0003B83C <AmiBlitz3.ab3@28362>            Dc.l do_statement                               ;dostatement
0003B840 <AmiBlitz3.ab3@28363>            Dc.l do_function                                ;dofunc
0003B844 <AmiBlitz3.ab3@28364>            Dc.l do_mousewait                               ;domwait
0003B848 <AmiBlitz3.ab3@28365>            Dc.l do_if                                      ;doif
0003B84C <AmiBlitz3.ab3@28366>            Dc.l do_while                                   ;dowhile
0003B850 <AmiBlitz3.ab3@28367>            Dc.l do_Macro                                   ;domacro
0003B854 <AmiBlitz3.ab3@28368>            Dc.l do_select                                  ;doselect
0003B858 <AmiBlitz3.ab3@28369>            Dc.l do_case                                    ;docase
0003B85C <AmiBlitz3.ab3@28370>            Dc.l do_default                                 ;dodefault
0003B860 <AmiBlitz3.ab3@28371>            Dc.l do_AsmExit                                 ;doasmexit
0003B864 <AmiBlitz3.ab3@28372>            Dc.l do_xinclude                                ;doxinclude
0003B868 <AmiBlitz3.ab3@28373>            Dc.l do_INCLUDE                                 ;doinclude
0003B86C <AmiBlitz3.ab3@28374>            Dc.l do_syntax                                  ;syntaxerr
0003B870 <AmiBlitz3.ab3@28375>            Dc.l do_shared                                  ;doshared
0003B874 <AmiBlitz3.ab3@28376>            Dc.l do_for                                     ;dofor
0003B878 <AmiBlitz3.ab3@28377>            Dc.l do_next                                    ;donext
0003B87C <AmiBlitz3.ab3@28378>            Dc.l syntaxerr                                  ; To
0003B880 <AmiBlitz3.ab3@28379>            Dc.l syntaxerr                                  ; Step
0003B884 <AmiBlitz3.ab3@28380>            Dc.l do_data                                    ;dodata
0003B888 <AmiBlitz3.ab3@28381>            Dc.l do_read                                    ;doread
0003B88C <AmiBlitz3.ab3@28385>            Dc.l syntaxerr                                  ; CNIF
0003B890 <AmiBlitz3.ab3@28386>            Dc.l syntaxerr                                  ; CSIF
0003B894 <AmiBlitz3.ab3@28387>            Dc.l syntaxerr                                  ; CELSE
0003B898 <AmiBlitz3.ab3@28388>            Dc.l syntaxerr                                  ; CEND
0003B89C <AmiBlitz3.ab3@28389>            Dc.l do_cerr                                    ;docerr
0003B8A0 <AmiBlitz3.ab3@28390>            Dc.l do_then                                    ;dothen
0003B8A4 <AmiBlitz3.ab3@28391>            Dc.l do_else                                    ;doelse
0003B8A8 <AmiBlitz3.ab3@28392>            Dc.l do_even4                                   ;doeven4
0003B8AC <AmiBlitz3.ab3@28393>            Dc.l do_even8                                   ;doeven8
0003B8B0 <AmiBlitz3.ab3@28395>            Dc.l do_dc                                      ;dodc
0003B8B4 <AmiBlitz3.ab3@28396>            Dc.l do_ds                                      ;dods
0003B8B8 <AmiBlitz3.ab3@28397>            Dc.l do_even                                    ;doeven
0003B8BC <AmiBlitz3.ab3@28398>            Dc.l do_dcb                                     ;dodcb
0003B8C0 <AmiBlitz3.ab3@28399>            Dc.l do_setreg                                  ;dosetreg
0003B8C4 <AmiBlitz3.ab3@28400>            Dc.l do_IncBin                                  ;doincbin
0003B8C8 <AmiBlitz3.ab3@28401>            Dc.l do_free                                    ;dofree
0003B8CC <AmiBlitz3.ab3@28402>            Dc.l do_use                                     ;douse
0003B8D0 <AmiBlitz3.ab3@28403>            Dc.l do_Stop                                    ;dostop
0003B8D4 <AmiBlitz3.ab3@28404>            Dc.l do_Cont                                    ;docont
0003B8D8 <AmiBlitz3.ab3@28405>            Dc.l syntaxerr                                  ;syntaxeer
0003B8DC <AmiBlitz3.ab3@28406>            Dc.l do_SetInt                                  ;dosetint
0003B8E0 <AmiBlitz3.ab3@28407>            Dc.l do_ClrInt                                  ;doclrint
0003B8E4 <AmiBlitz3.ab3@28408>            Dc.l do_MaxLen                                  ;domaxlen
0003B8E8 <AmiBlitz3.ab3@28409>            Dc.l do_DEFTYPE                                 ;dodeftype
0003B8EC <AmiBlitz3.ab3@28410>            Dc.l do_BLITZ                                   ;doblitz
0003B8F0 <AmiBlitz3.ab3@28411>            Dc.l do_AMIGA                                   ;doamiga
0003B8F4 <AmiBlitz3.ab3@28412>            Dc.l do_QAMIGA                                  ;doqamiga
0003B8F8 <AmiBlitz3.ab3@28413>            Dc.l do_VWait                                   ;dovwait
0003B8FC <AmiBlitz3.ab3@28414>            Dc.l do_LibJsr                                  ;dolibjsr
0003B900 <AmiBlitz3.ab3@28415>            Dc.l do_TokeJsr                                 ;dotokejsr
0003B904 <AmiBlitz3.ab3@28416>            Dc.l do_BLibJsr                                 ;doblibjsr
0003B908 <AmiBlitz3.ab3@28417>            Dc.l _extb                                      ;syntaxerr
0003B90C <AmiBlitz3.ab3@28421>            Dc.l syntaxerr                                  ;syntaxerr      ;flash2 ; for list
0003B910 <AmiBlitz3.ab3@28422>            Dc.l do_SetErr                                  ;doseterr
0003B914 <AmiBlitz3.ab3@28423>            Dc.l do_ClrErr                                  ;doclrerr
0003B918 <AmiBlitz3.ab3@28424>            Dc.l syntaxerr                                  ;syntaxerr
0003B91C <AmiBlitz3.ab3@28425>            Dc.l do_ErrFail                                 ;doerrfail
0003B920 <AmiBlitz3.ab3@28426>            Dc.l syntaxerr
0003B924 <AmiBlitz3.ab3@28427>            Dc.l syntaxerr                                  ;mod
0003B928 <AmiBlitz3.ab3@28428>            Dc.l syntaxerr                                  ;Pi
0003B92C <AmiBlitz3.ab3@28429>            Dc.l do_Repeat                                  ;dorepeat
0003B930 <AmiBlitz3.ab3@28430>            Dc.l do_Until                                   ;dountil
0003B934 <AmiBlitz3.ab3@28431>            Dc.l do_PutReg                                  ;doputreg
0003B938 <AmiBlitz3.ab3@28432>            Dc.l do_Pop                                     ;dopop
0003B93C <AmiBlitz3.ab3@28433>            Dc.l do_INCDIR                                  ;doincdir
0003B940 <AmiBlitz3.ab3@28434>            Dc.l mydo_Endif2                                ;mydoendif2
0003B944 <AmiBlitz3.ab3@28435>            Dc.l do_Wend                                    ;dowend
0003B948 <AmiBlitz3.ab3@28436>            Dc.l do_SysJsr                                  ;dosysjsr
0003B94C <AmiBlitz3.ab3@28437>            Dc.l do_WBStartup                               ;dowbstartup
0003B950 <AmiBlitz3.ab3@28438>            Dc.l syntaxerr
0003B954 <AmiBlitz3.ab3@28439>            Dc.l do_Ongo                                    ;doongo
0003B958 <AmiBlitz3.ab3@28440>            Dc.l syntaxerr
0003B95C <AmiBlitz3.ab3@28441>            Dc.l do_Forever                                 ;doforever
0003B960 <AmiBlitz3.ab3@28442>            Dc.l do_Restore                                 ;dorestore
0003B964 <AmiBlitz3.ab3@28443>            Dc.l do_Exchange                                ;doexchange
0003B968 <AmiBlitz3.ab3@28444>            Dc.l do_USEPATH                                 ;dousepath
0003B96C <AmiBlitz3.ab3@28445>            Dc.l do_CloseEd                                 ;doclosed
0003B970 <AmiBlitz3.ab3@28446>            Dc.l do_NoCli                                   ;donocli
0003B974 <AmiBlitz3.ab3@28447>            Dc.l syntaxerr                                  ;syntaxerr
0003B978 <AmiBlitz3.ab3@28448>            Dc.l syntaxerr                                  ;syntaxerr
0003B97C <AmiBlitz3.ab3@28449>            Dc.l syntaxerr                                  ;syntaxerr
0003B980 <AmiBlitz3.ab3@28450>            Dc.l syntaxerr                                  ;syntaxerr
0003B984 <AmiBlitz3.ab3@28451>            Dc.l syntaxerr                                  ;syntaxerr
0003B988 <AmiBlitz3.ab3@28452>            Dc.l do_runerrson                               ;dorunerrson
0003B98C <AmiBlitz3.ab3@28453>            Dc.l do_runerrsoff                              ;dorunerrsoff
0003B990 <AmiBlitz3.ab3@28454>            Dc.l do_uselastpath
0003B994 <AmiBlitz3.ab3@28455>            Dc.l do_regload
0003B998 <AmiBlitz3.ab3@28456>            Dc.l do_regsave
0003B99C <AmiBlitz3.ab3@28457>            Dc.l do_Object
0003B9A0 <AmiBlitz3.ab3@28458>            Dc.l do_usepath2
0003B9A4 <AmiBlitz3.ab3@28459>            Dc.l do_LastRunErrsMode
0003B9A8 <AmiBlitz3.ab3@28482> menu_items:Dc.l menu_compile_run                                ;menuadds oreg source
0003B9AC <AmiBlitz3.ab3@28483>            Dc.l menu_run
0003B9B0 <AmiBlitz3.ab3@28484>            Dc.l menu_createexecutable
0003B9B4 <AmiBlitz3.ab3@28485>            Dc.l menu_dummyfunc                                  ;was menu_compileroptions
0003B9B8 <AmiBlitz3.ab3@28486>            Dc.l menu_createresidentfile
0003B9BC <AmiBlitz3.ab3@28487> 
0003B9C0 <AmiBlitz3.ab3@28488> 
0003B9C4 <AmiBlitz3.ab3@28489>            Dc.l menu_dummyfunc                                  ;was menu_calculator
0003B9C8 <AmiBlitz3.ab3@28490>            Dc.l menu_reloadlibs
0003B9CC <AmiBlitz3.ab3@28491>            Dc.l menu_loaddebugmodule
0003B9D0 <AmiBlitz3.ab3@28492>            Dc.l menu_dummyfunc
0003B9D4 <AmiBlitz3.ab3@28493>            Dc.l menu_newcreate
0003B9D8 <AmiBlitz3.ab3@28494>            Dc.l menu_dummyfunc
0003B9DC <AmiBlitz3.ab3@28495>            Dc.l menu_toggledebug
0003B9E0 <AmiBlitz3.ab3@28496>            Dc.l menu_dummyfunc
0003B9E4 <AmiBlitz3.ab3@28497>            Dc.l menu_dummyfunc
0003BA0E <AmiBlitz3.ab3@28502>   !basic
0003BA70 <AmiBlitz3.ab3@28503>   error{!TRANS{"Invalid AmiBlitz3 menu item called!"} }
0003BA8E <AmiBlitz3.ab3@28504>   !asm
0003BA90 <AmiBlitz3.ab3@28505> RTS
0003BA91 <AmiBlitz3.ab3@28511> set_autorun:               Dc.b $00
0003BA96 <AmiBlitz3.ab3@28512> autorun:                   Dc.b $80,$01,$01,$00,$01
0003BA97 <AmiBlitz3.ab3@28514> set_interruptcheck:        Dc.b $00
0003BA9C <AmiBlitz3.ab3@28515> interruptcheck             Dc.b $80,$01,$01,$00,$01
0003BA9D <AmiBlitz3.ab3@28517> set_assemblercheck:        Ds.b 1
0003BAA2 <AmiBlitz3.ab3@28518> assemblercheck:            Dc.b $00,$01,$01,$00,$01
0003BAA3 <AmiBlitz3.ab3@28520> set_overflowcheck:         Ds.b 1
0003BAA8 <AmiBlitz3.ab3@28521> overflowcheck:             Dc.b $00,$01,$01,$00,$01
0003BAAE <AmiBlitz3.ab3@28523> default_obsolete:          Dc.b $00,$80,$01,$01,$00,$01
0003BAB4 <AmiBlitz3.ab3@28524> default_interruptcheck:    Dc.b $00,$80,$01,$01,$00,$01
0003BABA <AmiBlitz3.ab3@28525> default_overflowcheck:     Dc.b $00,$80,$01,$01,$00,$01
0003BABC <AmiBlitz3.ab3@28526> Even4
0003BAC8 <AmiBlitz3.ab3@28529> tsthead:                   Dc.l $000003F3,$00000000,$00000001
0003BAD0 <AmiBlitz3.ab3@28530>                            Dc.l $00000000,$00000000
0003BAD8 <AmiBlitz3.ab3@28531> tstsize1:                  Dc.l $00000100,$000003E9
0003BADC <AmiBlitz3.ab3@28532> tstsize2:                  Dc.l $00000100
0003BAE0 <AmiBlitz3.ab3@28533> tstend:                    Dc.l $000003EC
0003BAE8 <AmiBlitz3.ab3@28534> tstsize3:                  Ds.l 2
0003BAEC <AmiBlitz3.ab3@28535> tstdone:                   Dc.l $000003F2
0003BAF0 <AmiBlitz3.ab3@28538> edstruct:                  Dc.l tokens                     ;data for ted
0003BAF4 <AmiBlitz3.ab3@28542>                            Dc.l 0
0003BAF8 <AmiBlitz3.ab3@28544>                            Dc.l read_xtrafile              ;load .xtra routine
0003BAFC <AmiBlitz3.ab3@28545>                            Dc.l write_xtrafile             ;save .xtra routine
0003BB00 <AmiBlitz3.ab3@28546>                            Dc.l call_menuentry             ;Menu Routine
0003BB04 <AmiBlitz3.ab3@28547>                            Ds.l 1                          ;cleanup (?)
0003BB08 <AmiBlitz3.ab3@28548>                            Dc.b ":",34,".;"
0003BC04 <AmiBlitz3.ab3@28551> 
0003BCE4 <AmiBlitz3.ab3@28552>                            Ds.l 56
0003BCE6 <AmiBlitz3.ab3@28557> lslimm:                    Dc.b $E1,$48                                             ;LSL.W   #8,D0
0003BCEA <AmiBlitz3.ab3@28560> use:                       Dc.b $26,$6D,$00,$00                                     ;MOVEA.L $0000(A5),A3
0003BCEC <AmiBlitz3.ab3@28561>                            Dc.b $D6,$C0                                             ;ADDA.W  D0,A3
0003BCF0 <AmiBlitz3.ab3@28562>                            Dc.b $2B,$4B,$00,$00                                     ;MOVE.L  A3,$0000(A5)
0003BCF6 <AmiBlitz3.ab3@28566> beginarr:                  Dc.b $20,$3C,$00,$00,$00,$00                             ;MOVE.L  #$00000000,D0
0003BCF8 <AmiBlitz3.ab3@28570>                            Dc.b $C0,$C1                                             ;MULU.W  D1,D0
0003BCFC <AmiBlitz3.ab3@28573> putarr:                    Dc.b $2B,$40 :                            Dc.b $00,$00   ;MOVE.L  D0,$0000(A5)
0003BD00 <AmiBlitz3.ab3@28576> doarr:                     Dc.b $34,$3C,$00,$00                                     ;MOVE.W  #$0000,D2
0003BD04 <AmiBlitz3.ab3@28577>                            Dc.b $36,$3C,$00,$00                                     ;MOVE.W  #$0000,D3
0003BD06 <AmiBlitz3.ab3@28583>                            Dc.b $4A,$40                                             ;TST.W   D0
0003BD08 <AmiBlitz3.ab3@28587>                            Dc.b $4A,$80                                             ;TST.L   D0
0003BD0A <AmiBlitz3.ab3@28590> nops8:                     Dc.b $4E,$71                                             ;NOP
0003BD0C <AmiBlitz3.ab3@28591>                            Dc.b $4E,$71                                             ;NOP
0003BD0E <AmiBlitz3.ab3@28592>                            Dc.b $4E,$71                                             ;NOP
0003BD10 <AmiBlitz3.ab3@28593>                            Dc.b $4E,$71                                             ;NOP
0003BD12 <AmiBlitz3.ab3@28594> nops4:                     Dc.b $4E,$71                                             ;NOP
0003BD14 <AmiBlitz3.ab3@28596>                            Dc.b $4E,$71                                             ;NOP
0003BD16 <AmiBlitz3.ab3@28597>                            Dc.b $4E,$71                                             ;NOP
0003BD18 <AmiBlitz3.ab3@28598>                            Dc.b $4E,$71                                             ;NOP
0003BD1C <AmiBlitz3.ab3@28602> dataget:                   Dc.b $26,$6D :                            Dc.b $00,$00   ;MOVEA.L $0000(A5),A3
0003BD20 <AmiBlitz3.ab3@28605> dataput:                   Dc.b $2B,$4B :                            Dc.b $00,$00   ;MOVE.L  A3,$0000(A5)
0003BD22 <AmiBlitz3.ab3@28608> stlenget:                  Dc.b $2F,$1B                                             ;MOVE.L  (A3)+,-(A7)
0003BD24 <AmiBlitz3.ab3@28611> stalign:                   Dc.b $52,$4B                                             ;ADDQ.W  #1,A3
0003BD26 <AmiBlitz3.ab3@28612>                            Dc.b $C1,$8B                                             ;EXG D0,A3
0003BD2A <AmiBlitz3.ab3@28613>                            Dc.b $08,$80,$00,$00                                     ;BCLR    #0,D0
0003BD2C <AmiBlitz3.ab3@28614>                            Dc.b $C1,$8B                                             ;EXG D0,A3
0003BD2E <AmiBlitz3.ab3@28620> dataletb:                  Dc.b $52,$4B                                             ;ADDQ.W  #1,A3
0003BD32 <AmiBlitz3.ab3@28621>                            Dc.b $1B,$5B,$00,$00                                     ;MOVE.B  (A3)+,$0000(A5)
0003BD34 <AmiBlitz3.ab3@28626> dataletbl:                 Dc.b $52,$4B                                             ;ADDQ.W  #1,A3
0003BD38 <AmiBlitz3.ab3@28627>                            Dc.b $19,$5B,$00,$00                                     ;MOVE.B  (A3)+,$0000(A4)
0003BD3A <AmiBlitz3.ab3@28631> dataletb2:                 Dc.b $52,$4B                                             ;ADDQ.W  #1,A3
0003BD3C <AmiBlitz3.ab3@28632>                            Dc.b $14,$9B                                             ;MOVE.B  (A3)+,(A2)
0003BD40 <AmiBlitz3.ab3@28638> dataletw:                  Dc.b $3B,$5B,$00,$00                                     ;MOVE.W  (A3)+,$0000(A5)
0003BD42 <AmiBlitz3.ab3@28639>                            Dc.b $34,$9B                                             ;MOVE.W  (A3)+,(A2)
0003BD46 <AmiBlitz3.ab3@28640>                            Dc.b $39,$5B,$00,$00                                     ;MOVE.W  (A3)+,$0000(A4)
0003BD4A <AmiBlitz3.ab3@28644> dataletl:                  Dc.b $2B,$5B,$00,$00                                     ;MOVE.L  (A3)+,$0000(A5)
0003BD4C <AmiBlitz3.ab3@28645>                            Dc.b $24,$9B                                             ;MOVE.L  (A3)+,(A2)
0003BD50 <AmiBlitz3.ab3@28646>                            Dc.b $29,$5B,$00,$00                                     ;MOVE.L  (A3)+,$0000(A4)
0003BD52 <AmiBlitz3.ab3@28649> nextfixw:                  Dc.b $50,$4F                                             ;ADDQ.W  #8,A7
0003BD56 <AmiBlitz3.ab3@28652> nextfixw2:                 Dc.b $4F,$EF,$00,$0A                                     ;LEA $000A(A7),A7
0003BD5A <AmiBlitz3.ab3@28655> nextfixl:                  Dc.b $4F,$EF,$00,$0C                                     ;LEA $000C(A7),A7
0003BD5E <AmiBlitz3.ab3@28658> nextfixl2:                 Dc.b $4F,$EF,$00,$0E                                     ;LEA $000E(A7),A7
0003BD62 <AmiBlitz3.ab3@28662>                            Dc.b $24,$6F,$00,$04                                     ;MOVEA.L $0004(A7),A2
0003BD64 <AmiBlitz3.ab3@28663>                            Dc.b $30,$17                                             ;MOVE.W  (A7),D0
0003BD66 <AmiBlitz3.ab3@28664>                            Dc.b $D1,$12                                             ;ADD.B   D0,(A2)
0003BD6A <AmiBlitz3.ab3@28669>                            Dc.b $24,$6F,$00,$04                                     ;MOVEA.L $0004(A7),A2
0003BD6C <AmiBlitz3.ab3@28670>                            Dc.b $30,$17                                             ;MOVE.W  (A7),D0
0003BD6E <AmiBlitz3.ab3@28671>                            Dc.b $D1,$52                                             ;ADD.W   D0,(A2)
0003BD72 <AmiBlitz3.ab3@28676>                            Dc.b $24,$6F,$00,$08                                     ;MOVEA.L $0008(A7),A2
0003BD74 <AmiBlitz3.ab3@28677>                            Dc.b $20,$17                                             ;MOVE.L  (A7),D0
0003BD76 <AmiBlitz3.ab3@28678>                            Dc.b $D1,$92                                             ;ADD.L   D0,(A2)
0003BD7A <AmiBlitz3.ab3@28683>                            Dc.b $24,$6F,$00,$08                                     ;MOVEA.L $0008(A7),A2
0003BD7C <AmiBlitz3.ab3@28684>                            Dc.b $20,$12                                             ;MOVE.L  (A2),D0
0003BD7E <AmiBlitz3.ab3@28685>                            Dc.b $22,$17                                             ;MOVE.L  (A7),D1
0003BD82 <AmiBlitz3.ab3@28686>                            Dc.b $4E,$AE,$FF,$BE                                     ;JSR -$0042(A6)
0003BD84 <AmiBlitz3.ab3@28687>                            Dc.b $24,$80                                             ;MOVE.L  D0,(A2)
0003BD88 <AmiBlitz3.ab3@28692>                            Dc.b $24,$6F,$00,$04                                     ;MOVEA.L $0004(A7),A2
0003BD8A <AmiBlitz3.ab3@28693>                            Dc.b $10,$12                                             ;MOVE.B  (A2),D0
0003BD8E <AmiBlitz3.ab3@28694>                            Dc.b $32,$2F,$00,$02                                     ;MOVE.W  $0002(A7),D1
0003BD90 <AmiBlitz3.ab3@28695>                            Dc.b $4A,$57                                             ;TST.W   (A7)
0003BD94 <AmiBlitz3.ab3@28696>                            Dc.b $6A,$00,$00,$04                                     ;BPL.W   L000001         ;.skip org source
0003BD96 <AmiBlitz3.ab3@28697>                            Dc.b $C1,$41                                             ;EXG D0,D1
0003BD98 <AmiBlitz3.ab3@28700>                            Dc.b $B0,$01                                             ;CMP.B   D1,D0
0003BD9C <AmiBlitz3.ab3@28705>                            Dc.b $24,$6F,$00,$04                                     ;MOVEA.L $0004(A7),A2
0003BD9E <AmiBlitz3.ab3@28706>                            Dc.b $30,$12                                             ;MOVE.W  (A2),D0
0003BDA2 <AmiBlitz3.ab3@28707>                            Dc.b $32,$2F,$00,$02                                     ;MOVE.W  $0002(A7),D1
0003BDA4 <AmiBlitz3.ab3@28708>                            Dc.b $4A,$57                                             ;TST.W   (A7)
0003BDA8 <AmiBlitz3.ab3@28709>                            Dc.b $6A,$00,$00,$04                                     ;BPL.W   L000002         ;.skip org source
0003BDAA <AmiBlitz3.ab3@28710>                            Dc.b $C1,$41                                             ;EXG D0,D1
0003BDAC <AmiBlitz3.ab3@28713>                            Dc.b $B0,$41                                             ;CMP.W   D1,D0
0003BDB0 <AmiBlitz3.ab3@28718>                            Dc.b $24,$6F,$00,$08                                     ;MOVEA.L $0008(A7),A2
0003BDB2 <AmiBlitz3.ab3@28719>                            Dc.b $20,$12                                             ;MOVE.L  (A2),D0
0003BDB6 <AmiBlitz3.ab3@28720>                            Dc.b $22,$2F,$00,$04                                     ;MOVE.L  $0004(A7),D1
0003BDB8 <AmiBlitz3.ab3@28721>                            Dc.b $4A,$57                                             ;TST.W   (A7)
0003BDBC <AmiBlitz3.ab3@28722>                            Dc.b $6A,$00,$00,$04                                     ;BPL.W   L000003         ;.skip org source
0003BDBE <AmiBlitz3.ab3@28723>                            Dc.b $C1,$41                                             ;EXG D0,D1
0003BDC0 <AmiBlitz3.ab3@28726>                            Dc.b $B0,$81                                             ;CMP.L   D1,D0
0003BDC4 <AmiBlitz3.ab3@28731>                            Dc.b $24,$6F,$00,$08                                     ;MOVEA.L $0008(A7),A2
0003BDC6 <AmiBlitz3.ab3@28732>                            Dc.b $20,$12                                             ;MOVE.L  (A2),D0
0003BDCA <AmiBlitz3.ab3@28733>                            Dc.b $22,$2F,$00,$04                                     ;MOVE.L  $0004(A7),D1
0003BDD0 <AmiBlitz3.ab3@28734>                            Dc.b $08,$2F,$00,$07,$00,$03                             ;BTST    #7,$0003(A7)
0003BDD4 <AmiBlitz3.ab3@28735>                            Dc.b $67,$00,$00,$04                                     ;BEQ.W   L000004
0003BDD6 <AmiBlitz3.ab3@28736>                            Dc.b $C1,$41                                             ;EXG D0,D1
0003BDDA <AmiBlitz3.ab3@28743>                            Dc.b $4E,$AE,$FF,$D6                                     ;JSR -$002A(A6)
0003BDDC <AmiBlitz3.ab3@28747> swapd0:                    Dc.b $48,$40                                             ;SWAP    D0
0003BDDE <AmiBlitz3.ab3@28750> pushindex:                 Dc.b $2F,$0A                                             ;MOVE.L  A2,-(A7)
0003BDE2 <AmiBlitz3.ab3@28753> leaamp:                    Dc.b $45,$ED :                            Dc.b $00,$00   ;LEA $0000(A5),A2
0003BDE4 <AmiBlitz3.ab3@28754> leaamp2:                   Dc.b $20,$0A                                             ;MOVE.L  A2,D0
0003BDE8 <AmiBlitz3.ab3@28757> leaampl:                   Dc.b $45,$EC :                            Dc.b $00,$00   ;LEA $0000(A4),A2
0003BDEA <AmiBlitz3.ab3@28760> stamp:                     Dc.b $20,$12                                             ;MOVE.L  (A2),D0
0003BDEE <AmiBlitz3.ab3@28763> stamp2:                    Dc.b $24,$6D :                            Dc.b $00,$00   ;MOVEA.L $0000(A5),A2
0003BDF0 <AmiBlitz3.ab3@28767>                            Dc.b $58,$4F                                             ;ADDQ.W  #4,A7
0003BDF2 <AmiBlitz3.ab3@28770> pushd0wd:                  Dc.b $3F,$00                                             ;MOVE.W  D0,-(A7)
0003BDF4 <AmiBlitz3.ab3@28773> pushd0l:                   Dc.b $2F,$00                                             ;MOVE.L  D0,-(A7)
0003BDF8 <AmiBlitz3.ab3@28776> movenumrep:                Dc.b $3E,$3C :                            Dc.b $00,$00   ;MOVE.W  #$0000,D7
0003BDFC <AmiBlitz3.ab3@28779> preplibst:                 Dc.b $45,$EF :                            Dc.b $00,$00   ;LEA $0000(A7),A2
0003BE00 <AmiBlitz3.ab3@28782> fixlibst:                  Dc.b $4F,$EF :                            Dc.b $00,$00   ;LEA $0000(A7),A7
0003BE02 <AmiBlitz3.ab3@28785> pushdn:                    Dc.b $2F,$00                                             ;MOVE.L  D0,-(A7)
0003BE04 <AmiBlitz3.ab3@28788> movea3a7:                  Dc.b $2F,$0B                                             ;MOVE.L  A3,-(A7)
0003BE08 <AmiBlitz3.ab3@28791> movestst2:                 Dc.b $20,$2F :                            Dc.b $00,$06   ;MOVE.L  $0006(A7),D0
0003BE0E <AmiBlitz3.ab3@28792>                            Dc.b $3F,$6F,$00,$04,$00,$08                             ;MOVE.W  $0004(A7),$0008(A7)
0003BE10 <AmiBlitz3.ab3@28793>                            Dc.b $2E,$9F                                             ;MOVE.L  (A7)+,(A7)
0003BE14 <AmiBlitz3.ab3@28797> movea7dn:                  Dc.b $20,$2F :                            Dc.b $00,$04   ;MOVE.L  $0004(A7),D0
0003BE16 <AmiBlitz3.ab3@28798>                            Dc.b $2E,$9F                                             ;MOVE.L  (A7)+,(A7)
0003BE18 <AmiBlitz3.ab3@28802> moved0a3:                  Dc.b $26,$40                                             ;MOVEA.L D0,A3
0003BE1C <AmiBlitz3.ab3@28805> movestdn:                  Dc.b $20,$2D :                            Dc.b $00,$00   ;MOVE.L  $0000(A5),D0
0003BE1E <AmiBlitz3.ab3@28809>                            Dc.b $20,$0B                                             ;MOVE.L  A3,D0
0003BE20 <AmiBlitz3.ab3@28813>                            Dc.b $2F,$00                                             ;MOVE.L  D0,-(A7)
0003BE22 <AmiBlitz3.ab3@28817>                            Dc.b $20,$1F                                             ;MOVE.L  (A7)+,D0
0003BE26 <AmiBlitz3.ab3@28820> moverts:                   Dc.b $2F,$57 :                            Dc.b $00,$00   ;MOVE.L  (A7),$0000(A7)
0003BE2A <AmiBlitz3.ab3@28823> fixstack:                  Dc.b $4F,$EF :                            Dc.b $00,$00   ;LEA $0000(A7),A7
0003BE2C <AmiBlitz3.ab3@28826> fixq:                      Dc.b $50,$4F                                             ;ADDQ.W  #8,A7
0003BE2E <AmiBlitz3.ab3@28829> fix1:                      Dc.b $2E,$9F                                             ;MOVE.L  (A7)+,(A7)
0003BE30 <AmiBlitz3.ab3@28832> movedna3:                  Dc.b $26,$40                                             ;MOVEA.L D0,A3
0003BE34 <AmiBlitz3.ab3@28835> least:                     Dc.b $45,$EC :                            Dc.b $00,$00   ;LEA $0000(A4),A2
0003BE38 <AmiBlitz3.ab3@28838> funcst:                    Dc.b $2F,$2C :                            Dc.b $00,$00   ;MOVE.L  $0000(A4),-(A7)
0003BE3A <AmiBlitz3.ab3@28841> addq4a2:                   Dc.b $58,$4A                                             ;ADDQ.W  #4,A2
0003BE3C <AmiBlitz3.ab3@28845>                            Dc.b $2F,$0B                                             ;MOVE.L  A3,-(A7)
0003BE40 <AmiBlitz3.ab3@28848>                            Dc.b $2B,$4B,$00,$00                                     ;MOVE.L  A3,$0000(A5)
0003BE42 <AmiBlitz3.ab3@28854>                            Dc.b $26,$5F                                             ;MOVEA.L (A7)+,A3
0003BE46 <AmiBlitz3.ab3@28857>                            Dc.b $2B,$4B,$00,$00                                     ;MOVE.L  A3,$0000(A5)
0003BE48 <AmiBlitz3.ab3@28863>                            Dc.b $CB,$4C                                             ;EXG A5,A4
0003BE4C <AmiBlitz3.ab3@28867> linksize:                  Dc.b $4E,$54 :                            Dc.b $00,$00   ;LINK    A4,#-$0000
0003BE4E <AmiBlitz3.ab3@28870> unlinka4:                  Dc.b $4E,$5C                                             ;UNLK    A4
0003BE50 <AmiBlitz3.ab3@28874>                            Dc.b $2F,$0A                                             ;MOVE.L  A2,-(A7)
0003BE52 <AmiBlitz3.ab3@28878>                            Dc.b $24,$5F                                             ;MOVEA.L (A7)+,A2
0003BE58 <AmiBlitz3.ab3@28881> gotocode:                  Dc.b $4E,$F9,$00,$00,$00,$00                             ;JMP $00000000
0003BE5E <AmiBlitz3.ab3@28884> gosubcode:                 Dc.b $4E,$B9,$00,$00,$00,$00                             ;JSR $00000000
0003BE66 <AmiBlitz3.ab3@28888> mwait:                     Dc.b $08,$39,$00,$06,$00,$BF,$E0,$01                     ;BTST    #6,$00BFE001
0003BE6A <AmiBlitz3.ab3@28889>                            Dc.b $66,$00,$FF,$F6                                     ;BNE.W   L000005       ;mwait: org source
0003BE6C <AmiBlitz3.ab3@28893> libreg:                    Dc.b $20,$00                                             ;MOVE.L  D0,D0
0003BE70 <AmiBlitz3.ab3@28896> libbase:                   Dc.b $2C,$6D :                            Dc.b $00,$00   ;MOVEA.L $0000(A5),A6
0003BE74 <AmiBlitz3.ab3@28899> libjsr:                    Dc.b $4E,$AE :                            Dc.b $00,$00   ;JSR $0000(A6)
0003BE78 <AmiBlitz3.ab3@28902> regtransd:                 Dc.b $20,$2D,$00,$00                                     ;MOVE.L  $0000(A5),D0
0003BE7C <AmiBlitz3.ab3@28903> regtransa:                 Dc.b $20,$6D,$00,$00                                     ;MOVEA.L $0000(A5),A0
0003BE80 <AmiBlitz3.ab3@28907>                            Dc.b $26,$7C,$00,$00                                     ;MOVEA.L #$00000000,A3
0003BE84 <AmiBlitz3.ab3@28909>                            Dc.l $3F1B                                               ;MOVE.W  (A3)+,-(A7)
0003BE86 <AmiBlitz3.ab3@28912> movea2dn:                  Dc.b $20,$12                                             ;MOVE.L  (A2),D0
0003BE8A <AmiBlitz3.ab3@28915> moved3a5dn:                Dc.b $20,$2D,$00,$00                                     ;MOVE.L  $0000(A5),D0
0003BE8C <AmiBlitz3.ab3@28918> stvarget2:                 Dc.b $70,$00                                             ;MOVEQ   #$00,D0
0003BE8E <AmiBlitz3.ab3@28919>                            Dc.b $2F,$00                                             ;MOVE.L  D0,-(A7)
0003BE90 <AmiBlitz3.ab3@28920>                            Dc.b $4A,$92                                             ;TST.L   (A2)
0003BE94 <AmiBlitz3.ab3@28921> 
0003BE96 <AmiBlitz3.ab3@28922>                            Dc.b $20,$52                                             ;MOVEA.L (A2),A0
0003BE98 <AmiBlitz3.ab3@28923>                            Dc.b $59,$48                                             ;SUBQ.W  #4,A0
0003BE9A <AmiBlitz3.ab3@28924>                            Dc.b $2E,$98                                             ;MOVE.L  (A0)+,(A7)
0003BEA0 <AmiBlitz3.ab3@28926>                            Dc.b $4E,$B9,$00,$00,$00,$00                             ;JSR $00000000
0003BEA2 <AmiBlitz3.ab3@28931> addcode:                   Dc.b $20,$1F                                             ;MOVE.L  (A7)+,D0
0003BEA4 <AmiBlitz3.ab3@28932>                            Dc.b $D1,$97                                             ;ADD.L   D0,(A7)
0003BEA6 <AmiBlitz3.ab3@28936> pushlen:                   Dc.b $2F,$18                                             ;MOVE.L  (A0)+,-(A7)
0003BEAA <AmiBlitz3.ab3@28939> leaa5d3a2:                 Dc.b $45,$ED :                            Dc.b $00,$00   ;LEA $0000(A5),A2
0003BEAC <AmiBlitz3.ab3@28942> pusha2:                    Dc.b $2F,$0A                                             ;MOVE.L  A2,-(A7)
0003BEAE <AmiBlitz3.ab3@28946>                            Dc.b $24,$57                                             ;MOVEA.L (A7),A2
0003BEB0 <AmiBlitz3.ab3@28949> pulla2:                    Dc.b $24,$5F                                             ;MOVEA.L (A7)+,A2
0003BEB4 <AmiBlitz3.ab3@28952> pulla2st:                  Dc.b $24,$6F,$00,$04                                     ;MOVEA.L $0004(A7),A2
0003BEB6 <AmiBlitz3.ab3@28953>                            Dc.b $2E,$9F                                             ;MOVE.L  (A7)+,(A7)
0003BEBA <AmiBlitz3.ab3@28957> pusha3:                    Dc.b $2F,$2D :                            Dc.b $00,$00   ;MOVE.L  $0000(A5),-(A7)
0003BEBE <AmiBlitz3.ab3@28958> pusha32:                   Dc.b $2B,$4B :                            Dc.b $00,$00   ;MOVE.L  A3,$0000(A5)
0003BEC2 <AmiBlitz3.ab3@28962> pulla3:                    Dc.b $2B,$5F :                            Dc.b $00,$00   ;MOVE.L  (A7)+,$0000(A5)
0003BEC6 <AmiBlitz3.ab3@28966> geta3:                     Dc.b $26,$6D :                            Dc.b $00,$00   ;MOVEA.L $0000(A5),A3
0003BECC <AmiBlitz3.ab3@28970> numtoa0:                   Dc.b $20,$7C,$00,$00,$00,$00                             ;MOVEA.L #$00000000,A0
0003BED2 <AmiBlitz3.ab3@28973> numtoa2:                   Dc.b $24,$7C,$00,$00,$00,$00                             ;MOVEA.L #$00000000,A2
0003BED6 <AmiBlitz3.ab3@28977> endarray:                  Dc.b $38,$3C :                            Dc.b $00,$00   ;MOVE.W  #$0000,D4
0003BEDA <AmiBlitz3.ab3@28981>                            Dc.b $34,$3C,$00,$00                                     ;MOVE.W  #$0000,D2
0003BEDE <AmiBlitz3.ab3@28982>                            Dc.b $36,$3C,$00,$00                                     ;MOVE.W  #$0000,D3
0003BEE4 <AmiBlitz3.ab3@28987>                            Dc.b $20,$3C,$00,$00,$00,$04                             ;MOVE.L  #$00000004,D0
0003BEE8 <AmiBlitz3.ab3@28992>                            Dc.b $2B,$40,$00,$00                                     ;MOVE.L  D0,$0000(A5)
0003BEEA <AmiBlitz3.ab3@28997>                            Dc.b $C0,$C1                                             ;MULU.W  D1,D0
0003BEEE <AmiBlitz3.ab3@29001>                            Dc.b $2B,$40,$00,$00                                     ;MOVE.L  D0,$0000(A5)
0003BEF0 <AmiBlitz3.ab3@29005> movea0:                    Dc.b $24,$52                                             ;MOVEA.L (A2),A2
0003BEF2 <AmiBlitz3.ab3@29008> adda0a0:                   Dc.b $D5,$CA                                             ;ADDA.L  A2,A2
0003BEF4 <AmiBlitz3.ab3@29009>                            Dc.b $D5,$CA                                             ;ADDA.L  A2,A2
0003BEF8 <AmiBlitz3.ab3@29013>                            Dc.b $2C,$78,$00,$04                                     ;MOVEA.L $0004,A6
0003BEFC <AmiBlitz3.ab3@29017> movea5a0:                  Dc.b $24,$6D :                            Dc.b $00,$00   ;MOVEA.L $0000(A5),A2
0003BF00 <AmiBlitz3.ab3@29020> movea0a0:                  Dc.b $24,$6A :                            Dc.b $00,$00   ;MOVEA.L $0000(A2),A2
0003BF02 <AmiBlitz3.ab3@29023> addqa0:                    Dc.b $52,$4A                                             ;ADDQ.W  #1,A2
0003BF06 <AmiBlitz3.ab3@29026> leaa0a0:                   Dc.b $45,$EA :                            Dc.b $00,$00   ;LEA $0000(A2),A2
0003BF08 <AmiBlitz3.ab3@29029> addrega2:                  Dc.b $D4,$C0                                             ;ADDA.W  D0,A2
0003BF11 <AmiBlitz3.ab3@29033>                            Dc.b "ram:test",0
0003BF12 <AmiBlitz3.ab3@29034> Even
0003BF16 <AmiBlitz3.ab3@29038>                            Dc.l  0                          ;was  Ds.w 3 org source
0003BF18 <AmiBlitz3.ab3@29040>                            Dc.w  0
0003BF1C <AmiBlitz3.ab3@29043> _mathffpbase:              Ds.l 1                           ;maths org source
0003BF1E <AmiBlitz3.ab3@29044> regnum:                    Ds.w 1                           ;regat org source       ;register being used!
0003BF20 <AmiBlitz3.ab3@29045> typelen:                   Ds.w 1
0003BF24 <AmiBlitz3.ab3@29046> prevtype:                  Ds.l 1
0003BF28 <AmiBlitz3.ab3@29047> lastsourcepos:             Ds.l 1                           ;prevloc org source
0003BF2A <AmiBlitz3.ab3@29048> lastchar:                  Ds.w 1
0003BF2E <AmiBlitz3.ab3@29049> thistype:                  Ds.l 1
0003BF32 <AmiBlitz3.ab3@29050> errstack:                  Ds.l 1
0003BF36 <AmiBlitz3.ab3@29051> errcont:                   Ds.l 1
0003BF38 <AmiBlitz3.ab3@29052> linemode:                  Ds.w 1                          ;0 if norm, 1 if newtype
0003BF3A <AmiBlitz3.ab3@29053> linesleft:                 Ds.w 1
0003BF3E <AmiBlitz3.ab3@29054> sourceline:                Ds.l 1                          ;thisitem org source
0003BF42 <AmiBlitz3.ab3@29055> varbase:                   Ds.l 1                          ;firstvar org source
0003BF46 <AmiBlitz3.ab3@29056> alllocals:                 Ds.l 1
0003BF4A <AmiBlitz3.ab3@29057> firstlocal:                Ds.l 1
0003BF4E <AmiBlitz3.ab3@29058> firstglob:                 Ds.l 1
0003BF50 <AmiBlitz3.ab3@29059> globalvarpointer:          Ds.w 1                          ;varoff org source
0003BF52 <AmiBlitz3.ab3@29060> locvaroff:                 Ds.w 1
0003BF56 <AmiBlitz3.ab3@29061> firstitem_:                 Ds.l 1
0003BF58 <AmiBlitz3.ab3@29062> numlines_org:              Ds.w 1                          ;numlines org source
0003BF5A <AmiBlitz3.ab3@29063> returncode_org:            Ds.w 1                          ;returncode org source
0003BF5E <AmiBlitz3.ab3@29064> firstiff:                  Ds.l 1                          ;firstif org source
0003BF62 <AmiBlitz3.ab3@29065> ptr_seg_ped:               Ds.l 1                          ;segadd org source
0003C162 <AmiBlitz3.ab3@29066> str_pedfile:               Ds.b #MAX_STRINGSIZE            ;segname org source
0003C172 <AmiBlitz3.ab3@29067> str_mathffpname:           Dc.b "mathffp.library",0 : Even ;mathsname org source
0003C372 <AmiBlitz3.ab3@29068> str_libfilename:           Ds.b #MAX_STRINGSIZE
0003C572 <AmiBlitz3.ab3@29069> str_path_userlibs:         Ds.b #MAX_STRINGSIZE
0003C772 <AmiBlitz3.ab3@29070> str_defaultdbug:           Ds.b #MAX_STRINGSIZE            ;debugname org source
0003C776 <AmiBlitz3.ab3@29072> ptr_seg_debugger:          Ds.l 1                          ;dseg org source
0003C976 <AmiBlitz3.ab3@29073> str_blitz3assign:          Ds.b #MAX_STRINGSIZE            ;dpath org source
0003CB76 <AmiBlitz3.ab3@29075> str_path_acidlibs:         Ds.b #MAX_STRINGSIZE            ;acidname org source
0003CB7A <AmiBlitz3.ab3@29076> size_acidlibs:             Ds.l 1                          ;acidlibs org source
0003CD7A <AmiBlitz3.ab3@29077> str_path_deflibs:          Ds.b #MAX_STRINGSIZE            ;defname org source
0003CD7E <AmiBlitz3.ab3@29078> size_deflibs:              Ds.l 1                          ;deflibs org source
0003CF7E <AmiBlitz3.ab3@29079> str_tempfilename:          Ds.b #MAX_STRINGSIZE
0003D17E <AmiBlitz3.ab3@29081> str_temp_debugmodulename:  Ds.b #MAX_STRINGSIZE            ;dname org source
0003D182 <AmiBlitz3.ab3@29082> ptr_temp_debugmodule:      Ds.l 1                          ;dname2 org source
0003D382 <AmiBlitz3.ab3@29084> str_path_includes:         Ds.b #MAX_STRINGSIZE            ;acidname org source
0003D386 <AmiBlitz3.ab3@29090>   Dc.b $E3,$10,$00,$01                                     ;icondata  
0003D38A <AmiBlitz3.ab3@29091>   Dc.b $00,$00,$00,$00
0003D38E <AmiBlitz3.ab3@29092>   Dc.b $00,$19,$00,$11
0003D392 <AmiBlitz3.ab3@29093>   Dc.b $00,$2E,$00,$18
0003D396 <AmiBlitz3.ab3@29094>   Dc.b $00,$04,$00,$03
0003D39A <AmiBlitz3.ab3@29095>   Dc.b $00,$01,$00,$22
0003D39E <AmiBlitz3.ab3@29096>   Dc.b $73,$68,$00,$00
0003D3A2 <AmiBlitz3.ab3@29097>   Dc.b $00,$00,$00,$00
0003D3A6 <AmiBlitz3.ab3@29098>   Dc.b $00,$00,$00,$00
0003D3AA <AmiBlitz3.ab3@29099>   Dc.b $00,$00,$00,$00
0003D3AE <AmiBlitz3.ab3@29100>   Dc.b $00,$00,$00,$00
0003D3B2 <AmiBlitz3.ab3@29101>   Dc.b $00,$00,$00,$00
0003D3B6 <AmiBlitz3.ab3@29102>   Dc.b $03,$22,$00,$21
0003D3BA <AmiBlitz3.ab3@29103>   Dc.b $3C,$28,$00,$22
0003D3BE <AmiBlitz3.ab3@29104>   Dc.b $6E,$C0,$00,$00
0003D3C2 <AmiBlitz3.ab3@29105>   Dc.b $00,$12,$00,$00
0003D3C6 <AmiBlitz3.ab3@29106>   Dc.b $00,$0E,$00,$00
0003D3CA <AmiBlitz3.ab3@29107>   Dc.b $00,$00,$00,$00
0003D3CE <AmiBlitz3.ab3@29108>   Dc.b $00,$00,$00,$00
0003D3D2 <AmiBlitz3.ab3@29109>   Dc.b $00,$00,$00,$00
0003D3D6 <AmiBlitz3.ab3@29110>   Dc.b $00,$00,$00,$2E
0003D3DA <AmiBlitz3.ab3@29111>   Dc.b $00,$17,$00,$02
0003D3DE <AmiBlitz3.ab3@29112>   Dc.b $00,$01,$8E,$80
0003D3E2 <AmiBlitz3.ab3@29113>   Dc.b $03,$00,$00,$00
0003D3E6 <AmiBlitz3.ab3@29114>   Dc.b $00,$00,$FF,$FF
0003D3EA <AmiBlitz3.ab3@29115>   Dc.b $FF,$FF,$FF,$FC
0003D3EE <AmiBlitz3.ab3@29116>   Dc.b $80,$00,$00,$00
0003D3F2 <AmiBlitz3.ab3@29117>   Dc.b $00,$00,$80,$00
0003D3F6 <AmiBlitz3.ab3@29118>   Dc.b $00,$3F,$BB,$40
0003D3FA <AmiBlitz3.ab3@29119>   Dc.b $80,$1F,$C0,$00
0003D3FE <AmiBlitz3.ab3@29120>   Dc.b $00,$00,$80,$3F
0003D402 <AmiBlitz3.ab3@29121>   Dc.b $C0,$0F,$BB,$40
0003D406 <AmiBlitz3.ab3@29122>   Dc.b $80,$1F,$C0,$00
0003D40A <AmiBlitz3.ab3@29123>   Dc.b $00,$00,$8E,$00
0003D40E <AmiBlitz3.ab3@29124>   Dc.b $F8,$00,$00,$00
0003D412 <AmiBlitz3.ab3@29125>   Dc.b $8F,$01,$FF,$00
0003D416 <AmiBlitz3.ab3@29126>   Dc.b $3B,$40,$81,$E3
0003D41A <AmiBlitz3.ab3@29127>   Dc.b $F7,$C0,$00,$00
0003D41E <AmiBlitz3.ab3@29128>   Dc.b $80,$7F,$F8,$70
0003D422 <AmiBlitz3.ab3@29129>   Dc.b $3B,$40,$80,$0F
0003D426 <AmiBlitz3.ab3@29130>   Dc.b $7C,$E0,$00,$00
0003D42A <AmiBlitz3.ab3@29131>   Dc.b $80,$00,$FD,$80
0003D42E <AmiBlitz3.ab3@29132>   Dc.b $00,$00,$80,$01
0003D432 <AmiBlitz3.ab3@29133>   Dc.b $F6,$00,$FB,$40
0003D436 <AmiBlitz3.ab3@29134>   Dc.b $80,$03,$EF,$00
0003D43A <AmiBlitz3.ab3@29135>   Dc.b $00,$00,$80,$07
0003D43E <AmiBlitz3.ab3@29136>   Dc.b $87,$80,$3B,$40
0003D442 <AmiBlitz3.ab3@29137>   Dc.b $80,$0F,$01,$C0
0003D446 <AmiBlitz3.ab3@29138>   Dc.b $00,$00,$80,$03
0003D44A <AmiBlitz3.ab3@29139>   Dc.b $F0,$70,$1D,$40
0003D44E <AmiBlitz3.ab3@29140>   Dc.b $80,$00,$18,$1C
0003D452 <AmiBlitz3.ab3@29141>   Dc.b $00,$00,$80,$00
0003D456 <AmiBlitz3.ab3@29142>   Dc.b $10,$06,$03,$40
0003D45A <AmiBlitz3.ab3@29143>   Dc.b $80,$00,$20,$1F
0003D45E <AmiBlitz3.ab3@29144>   Dc.b $00,$00,$80,$00
0003D462 <AmiBlitz3.ab3@29145>   Dc.b $00,$00,$01,$40
0003D466 <AmiBlitz3.ab3@29146>   Dc.b $80,$00,$00,$00
0003D46A <AmiBlitz3.ab3@29147>   Dc.b $00,$00,$80,$00
0003D46E <AmiBlitz3.ab3@29148>   Dc.b $00,$00,$00,$00
0003D472 <AmiBlitz3.ab3@29149>   Dc.b $00,$00,$00,$00
0003D476 <AmiBlitz3.ab3@29150>   Dc.b $00,$00,$00,$00
0003D47A <AmiBlitz3.ab3@29151>   Dc.b $00,$00,$00,$04
0003D47E <AmiBlitz3.ab3@29152>   Dc.b $00,$3F,$FC,$01
0003D482 <AmiBlitz3.ab3@29153>   Dc.b $BB,$44,$00,$60
0003D486 <AmiBlitz3.ab3@29154>   Dc.b $FE,$00,$00,$04
0003D48A <AmiBlitz3.ab3@29155>   Dc.b $00,$CF,$FF,$01
0003D48E <AmiBlitz3.ab3@29156>   Dc.b $BB,$44,$1F,$EF
0003D492 <AmiBlitz3.ab3@29157>   Dc.b $FF,$00,$00,$04
0003D496 <AmiBlitz3.ab3@29158>   Dc.b $33,$FF,$FF,$E0
0003D49A <AmiBlitz3.ab3@29159>   Dc.b $00,$04,$37,$FE
0003D49E <AmiBlitz3.ab3@29160>   Dc.b $7F,$FC,$1B,$44
0003D4A2 <AmiBlitz3.ab3@29161>   Dc.b $0F,$9C,$FF,$FF
0003D4A6 <AmiBlitz3.ab3@29162>   Dc.b $00,$04,$03,$E3
0003D4AA <AmiBlitz3.ab3@29163>   Dc.b $FF,$FF,$DB,$44
0003D4AE <AmiBlitz3.ab3@29164>   Dc.b $00,$7F,$BF,$FF
0003D4B2 <AmiBlitz3.ab3@29165>   Dc.b $80,$04,$00,$0F
0003D4B6 <AmiBlitz3.ab3@29166>   Dc.b $3F,$FE,$00,$04
0003D4BA <AmiBlitz3.ab3@29167>   Dc.b $00,$06,$7F,$F8
0003D4BE <AmiBlitz3.ab3@29168>   Dc.b $1B,$44,$00,$0C
0003D4C2 <AmiBlitz3.ab3@29169>   Dc.b $F7,$FC,$00,$04
0003D4C6 <AmiBlitz3.ab3@29170>   Dc.b $00,$19,$F9,$FE
0003D4CA <AmiBlitz3.ab3@29171>   Dc.b $1B,$44,$00,$33
0003D4CE <AmiBlitz3.ab3@29172>   Dc.b $FE,$7F,$00,$04
0003D4D2 <AmiBlitz3.ab3@29173>   Dc.b $00,$0F,$FF,$BF
0003D4D6 <AmiBlitz3.ab3@29174>   Dc.b $CD,$44,$00,$03
0003D4DA <AmiBlitz3.ab3@29175>   Dc.b $EF,$EF,$F0,$04
0003D4DE <AmiBlitz3.ab3@29176>   Dc.b $00,$00,$7F,$DF
0003D4E2 <AmiBlitz3.ab3@29177>   Dc.b $FB,$44,$00,$00
0003D4E6 <AmiBlitz3.ab3@29178>   Dc.b $FF,$A7,$FC,$04
0003D4EA <AmiBlitz3.ab3@29179>   Dc.b $00,$00,$7E,$3F
0003D4EE <AmiBlitz3.ab3@29180>   Dc.b $FD,$44,$00,$00
0003D4F2 <AmiBlitz3.ab3@29181>   Dc.b $00,$00,$00,$04
0003D4F6 <AmiBlitz3.ab3@29182>   Dc.b $7F,$FF,$FF,$FF
0003D4FA <AmiBlitz3.ab3@29183>   Dc.b $FF,$FC,$00,$00
0003D4FE <AmiBlitz3.ab3@29184>   Dc.b $00,$01,$00,$00
0003D501 <AmiBlitz3.ab3@29185>   Dc.b $00,$00,$04
0003D507 <AmiBlitz3.ab3@29188> str_infoextention2:  Dc.b ".info",0                           ;infoname org source
0003D55F <AmiBlitz3.ab3@29189> errorlimit_text:     Dc.b "There are too much errors, compiling is stop now. Please fix errors first and try again",0
0003D560 <AmiBlitz3.ab3@29190> Even
0003D564 <AmiBlitz3.ab3@29192> sysdebug:            Dc.l $3F0
0003D568 <AmiBlitz3.ab3@29196> exelock              Ds.l 1
0003D56C <AmiBlitz3.ab3@29200> includesourceline    Dc.l 0
0003D570 <AmiBlitz3.ab3@29201> linenum              Ds.l 1
0003D574 <AmiBlitz3.ab3@29202> globallinecount      Ds.l 1
0003D590 <AmiBlitz3.ab3@29203> myversion            Dc.b "\\__VER_MAJOR.\\__VER_MINOR (\\__DATE_GER__) Build \\__VER_PATCH.\\__VER_BUILD",0 : Even
0003D594 <AmiBlitz3.ab3@29204> calc_option          Dc.l 1
0003D598 <AmiBlitz3.ab3@29205> versioninformation   Dc.l $00
0003D59C <AmiBlitz3.ab3@29206> number_of_builds     Dc.l $00
0003D5A0 <AmiBlitz3.ab3@29209> BSS
0003D5A2 <AmiBlitz3.ab3@29210> debugnest            Ds.w 1
0003D5A6 <AmiBlitz3.ab3@29211> instringf            Ds.l 1
0003D5AA <AmiBlitz3.ab3@29212> funcscanon           Ds.l 1
0003D5BE <AmiBlitz3.ab3@29213> storedebugmode       Ds.b 20
0003D5C2 <AmiBlitz3.ab3@29214> firsttimepref        Ds.l 1
0003D5C3 <AmiBlitz3.ab3@29215> funcparloop          Ds.b 1                   ; is 1 when function calling parameter are compile
0003D5C4 <AmiBlitz3.ab3@29216> blitzparloop         Ds.b 1                   ; is 1 when blitzlib calling parameters are compile
0003D5C6 <AmiBlitz3.ab3@29217> nostringopt          Ds.w 1
0003D646 <AmiBlitz3.ab3@29218> path2:               Ds.l 32
0003D64A <AmiBlitz3.ab3@29219> typebase             Dc.l 0
0003D64C <AmiBlitz3.ab3@29220> doublepeek           Dc.w 0
0003D650 <AmiBlitz3.ab3@29221> lastoffset           Dc.l 0
0003D652 <AmiBlitz3.ab3@29222> firsttime            Dc.w 0
0003D656 <AmiBlitz3.ab3@29223> lastdestpointer      Dc.l 0
0003D65A <AmiBlitz3.ab3@29224> prevwritedat         Dc.l 0
0003D65E <AmiBlitz3.ab3@29225> lastsourceline       Dc.l 0
0003D662 <AmiBlitz3.ab3@29226> lastwritedat         Dc.l 0
0003D664 <AmiBlitz3.ab3@29227> makeexec             Dc.w 0
0003D666 <AmiBlitz3.ab3@29228> makeexec_remember    Dc.w 0
0003D66A <AmiBlitz3.ab3@29229> sharebase            Ds.l 1
0003D66E <AmiBlitz3.ab3@29230> tempa7               Ds.l 1
0003D670 <AmiBlitz3.ab3@29231> incnif               Ds.w 1
0003D674 <AmiBlitz3.ab3@29232> tempstore            Ds.l 1
0003D678 <AmiBlitz3.ab3@29233> result               Ds.l 1
0003D67A <AmiBlitz3.ab3@29234> automode             Ds.w 1
0003D67C <AmiBlitz3.ab3@29235> stackcorrect         Ds.w 1
0003D67E <AmiBlitz3.ab3@29236> formode              Ds.w 1
0003D682 <AmiBlitz3.ab3@29237> limitregs            Ds.l 1
0003D684 <AmiBlitz3.ab3@29238> onestep              Ds.w 1
0003D688 <AmiBlitz3.ab3@29239> reqmode              Ds.l 1
0003D728 <AmiBlitz3.ab3@29240> inctab               Ds.l 40
0003D72A <AmiBlitz3.ab3@29241> funcoptimize_deprecated  Ds.w 1 ; deprecated, see comByte_FuncOptimize ; Wanderer
0003D72E <AmiBlitz3.ab3@29242> includeline          Ds.l 1
0003D732 <AmiBlitz3.ab3@29243> morememadd           Ds.l 1
0003D734 <AmiBlitz3.ab3@29244> objectcount          Ds.w 1
0003D738 <AmiBlitz3.ab3@29245> savefuncspace        Ds.l 1
0003D73C <AmiBlitz3.ab3@29246> lasttrap1            Ds.l 1
0003D740 <AmiBlitz3.ab3@29247> currentfunccall      Ds.l 1
0003D741 <AmiBlitz3.ab3@29248> skipfunc             Ds.b 1
0003D742 <AmiBlitz3.ab3@29249> resdisable           Ds.b 1
0003D743 <AmiBlitz3.ab3@29250> skiptoggle           Ds.b 1
0003D744 <AmiBlitz3.ab3@29251> developobject        Ds.b 1
0003D746 <AmiBlitz3.ab3@29252> iniffcommand         Ds.w 1
0003D748 <AmiBlitz3.ab3@29253> startoffsetmore      Ds.w 1
0003D74A <AmiBlitz3.ab3@29254> olddebugmode         Ds.w 1
0003D74E <AmiBlitz3.ab3@29255> fpucodeglobal        Ds.l 1
0003D752 <AmiBlitz3.ab3@29256> fpucodelocal         Ds.l 1
0003D756 <AmiBlitz3.ab3@29257> maxregs              Ds.l 1
0003D75A <AmiBlitz3.ab3@29258> fpucode              Ds.l 1
0003D75C <AmiBlitz3.ab3@29259> firstmline           Ds.w 1
0003D79C <AmiBlitz3.ab3@29260> regtable             Ds.l 16
0003D79E <AmiBlitz3.ab3@29261> exdebug              Ds.w 1
0003D7A0 <AmiBlitz3.ab3@29262> a2offset2            Ds.w 1
0003D7A4 <AmiBlitz3.ab3@29263> parnumtemp           Ds.l 1
0003D7A5 <AmiBlitz3.ab3@29264> doimmediate          Ds.b 1
0003D7A6 <AmiBlitz3.ab3@29265> notypecheck          Ds.b 1
0003D7A8 <AmiBlitz3.ab3@29266> vartype              Ds.w 1
0003D7A9 <AmiBlitz3.ab3@29267> peekaddrsize         Ds.b 1
0003D7AA <AmiBlitz3.ab3@29268> declare2             Ds.b 1
0003D7AC <AmiBlitz3.ab3@29269> parameternum         Ds.w 1
0003D7B0 <AmiBlitz3.ab3@29270> lasttoken            Ds.l 1
0003D7B2 <AmiBlitz3.ab3@29271> newvariable          Ds.w 1
0003D7B3 <AmiBlitz3.ab3@29272> declare              Ds.b 1
0003D7B4 <AmiBlitz3.ab3@29273> typecheck            Ds.b 1
0003D7B5 <AmiBlitz3.ab3@29274> nowdeclare           Ds.b 1
0003D7B6 <AmiBlitz3.ab3@29275> dimkeep              Ds.b 1
0003D7B7 <AmiBlitz3.ab3@29276> a4a5store            Ds.b 1
0003D7B8 <AmiBlitz3.ab3@29277> ___freetouse         Ds.b 1
0003D7BC <AmiBlitz3.ab3@29278> firstiffstore        Ds.l 1
0003D7C0 <AmiBlitz3.ab3@29279> destpointer2         Ds.l 1
0003D7C4 <AmiBlitz3.ab3@29280> stackaddr            Ds.l 1
0003D8C8 <AmiBlitz3.ab3@29281> allowtab             Ds.b 260
0003D9C8 <AmiBlitz3.ab3@29282> templine             Ds.b 256
0003D9CA <AmiBlitz3.ab3@29283> thenmode             Ds.w 1
0003D9CC <AmiBlitz3.ab3@29284> temp                 Ds.w 1
0003D9CE <AmiBlitz3.ab3@29285> tempregnum           Ds.w 1
0003D9D2 <AmiBlitz3.ab3@29287> numlines2            Ds.l 1
0003D9D6 <AmiBlitz3.ab3@29288> numlines             Ds.l 1
0003D9D8 <AmiBlitz3.ab3@29289> exmac                Ds.w 1
0003D9DA <AmiBlitz3.ab3@29290> returncode           Ds.w 1
0003D9DE <AmiBlitz3.ab3@29291> fp0iff               Ds.l 1
0003D9E2 <AmiBlitz3.ab3@29292> fp0addr              Ds.l 1
0003D9E4 <AmiBlitz3.ab3@29293> fp0mode              Ds.w 1
0003D9E6 <AmiBlitz3.ab3@29294> fp0var               Ds.w 1
0003D9E8 <AmiBlitz3.ab3@29295> fastfunc             Ds.w 1
0003D9EA <AmiBlitz3.ab3@29296> retmode              Ds.w 1
0003D9EC <AmiBlitz3.ab3@29297> parnum               Ds.w 1
0003D9EE <AmiBlitz3.ab3@29298> regmask              Ds.w 1
0003D9F0 <AmiBlitz3.ab3@29299> regnumfunc           Ds.w 1
0003D9F2 <AmiBlitz3.ab3@29300> libmode              Ds.w 1
0003D9F6 <AmiBlitz3.ab3@29301> oldline              Ds.l 1
0003D9FA <AmiBlitz3.ab3@29302> sourceline3          Ds.l 1
0003DAC2 <AmiBlitz3.ab3@29303> debugstore           Ds.b 200
0003DAC6 <AmiBlitz3.ab3@29304> deststore            Ds.l 1
0003DACA <AmiBlitz3.ab3@29306> loada                Ds.l 1
0003DACE <AmiBlitz3.ab3@29308> currtype             Ds.l 1
0003DAD2 <AmiBlitz3.ab3@29309> arrayoffset          Ds.l 1
0003DAD6 <AmiBlitz3.ab3@29310> lastlabel            Ds.l 1
0003DADA <AmiBlitz3.ab3@29311> curtemplabel         Ds.l 1
0003DADE <AmiBlitz3.ab3@29312> sourceline2          Ds.l 1
0003DBDE <AmiBlitz3.ab3@29313> chartab              Ds.b 256
0003DC56 <AmiBlitz3.ab3@29314> tempspace            Ds.b 120
000BDC66 <AmiBlitz3.ab3@29315> instrtab             Ds.l 65538*2
000C5C66 <AmiBlitz3.ab3@29317> labelhash            Ds.l 8192                             ;-bssstore clear every compile pass
000E5C6A <AmiBlitz3.ab3@29318> replacedat           Ds.w 65538
000EDC6A <AmiBlitz3.ab3@29319> variablehash         Ds.l 8192
000EDC6E <AmiBlitz3.ab3@29320> newinitaddr          Ds.l 1
000EDC72 <AmiBlitz3.ab3@29321> realbssend           Ds.l 1
000EDC74 <AmiBlitz3.ab3@29322> saved0               Ds.w 1
000EDCF4 <AmiBlitz3.ab3@29323> lastpath             Ds.b 128
000EDD74 <AmiBlitz3.ab3@29324> lastpath2            Ds.b 128
000EDE3C <AmiBlitz3.ab3@29325> fpustackbase         Ds.w 100
000EDE40 <AmiBlitz3.ab3@29326> 
000EDE42 <AmiBlitz3.ab3@29327> isconstantvalue      Dc.w 0  ; contain a type (1-7) if a constant expression is used as a Parameter or on right side of =
000EDE46 <AmiBlitz3.ab3@29328> lastfunction         Dc.l 0  ; the address of the function in the Parameter or rght side of =
000EDE4A <AmiBlitz3.ab3@29329> leftsidetype         Dc.l 0  ;this contain the address of the type from the left side of the variable assign
000EDE4E <AmiBlitz3.ab3@29330> rightsidetype        Dc.l 0  ; same as above but right side
000EDE52 <AmiBlitz3.ab3@29333> trap15temp           Ds.l 1
000EDE56 <AmiBlitz3.ab3@29334> trap15temp2          Ds.l 1
000EDE5A <AmiBlitz3.ab3@29335> templibend           Ds.l 1
000EDE5E <AmiBlitz3.ab3@29336> tempdata1start       Ds.l 1
000EDE62 <AmiBlitz3.ab3@29337> stacktrack           Ds.l 1
000EDE66 <AmiBlitz3.ab3@29338> pad                  Ds.l 1
000EDF66 <AmiBlitz3.ab3@29339> includetemp          Ds.b 256
000EE966 <AmiBlitz3.ab3@29340> includetemp2         Ds.b 256*10
000EE968 <AmiBlitz3.ab3@29341> funccall             Ds.w 1
000EE96C <AmiBlitz3.ab3@29344> ptr_resfile          Ds.l 1
000EE96E <AmiBlitz3.ab3@29345> CalculatorButtonBinFlag:    Ds.w 1
000EE970 <AmiBlitz3.ab3@29346> CalculatorButtonDecFlag:    Ds.w 1
000EE974 <AmiBlitz3.ab3@29347> ped_startup_addr:    Ds.l 1
000EE975 <AmiBlitz3.ab3@29348> start_without_libs:  Ds.b 1
000EE976 <AmiBlitz3.ab3@29349> skip_bytes:          Ds.b 1
000EE97A <AmiBlitz3.ab3@29350> functionreturntype   Ds.l 1  ; a temp store of it.do not read this value
000EE97E <AmiBlitz3.ab3@29351> beforeparameterfetch Ds.l 1
000EE982 <AmiBlitz3.ab3@29352> typetocast           Ds.l 1
000EE986 <AmiBlitz3.ab3@29353> errorcounter         Ds.l 1
000EE987 <AmiBlitz3.ab3@29354> iserror              Ds.b 1
000EE988 <AmiBlitz3.ab3@29355> Even
000EE98C <AmiBlitz3.ab3@29357> CLIMode:             Dc.l 0
000EE990 <AmiBlitz3.ab3@29358> XTRAEndPadBytes:     Dc.l 0                             ; 4 fill/pad/termination bytes for the xtra write function  tomsmart1
