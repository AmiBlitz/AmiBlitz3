00000008 <AmiBlitz3.ab3@0> 
00000014 <AmiBlitz3.ab3@43> optimize 5                               ; don't use FPU (opt. 4)
00000076 <AmiBlitz3.ab3@64> !initasm                                 ; some initial mumbo jumbo
000000A0 <AmiBlitz3.ab3@65> !basic
000000AC <AmiBlitz3.ab3@70> cli_verbose = -1
000000B2 <AmiBlitz3.ab3@71> CLIMode     = False
000000C8 <AmiBlitz3.ab3@72> MaxLen cli_tempstr.s = 1024
000000E4 <AmiBlitz3.ab3@73> GetCurrentDirName_ &cli_tempstr,1024  ; get the current dir to restore it on exit
0000010E <AmiBlitz3.ab3@74> cli_path.s = Peek.s(&cli_tempstr)
0000010E <library_offsets.ab3@1> XINCLUDE "/Shared/library_offsets.ab3"   ; needed includes
0000010E <AmiBlitz3.ab3@78> XINCLUDE "/Shared/library_offsets.ab3"   ; needed includes
0000010E <dos.include.ab3@1> XINCLUDE "dos.include.ab3"
0000010E <error.include.ab3@1> XINCLUDE "dos.include.ab3"
00000146 <error.include.ab3@62> XINCLUDE "dos.include.ab3"
0000016E <error.include.ab3@63> XINCLUDE "dos.include.ab3"
00000196 <error.include.ab3@64> XINCLUDE "dos.include.ab3"
000001BE <error.include.ab3@65> XINCLUDE "dos.include.ab3"
000001C4 <error.include.ab3@66> XINCLUDE "dos.include.ab3"
000001F8 <error.include.ab3@67> XINCLUDE "dos.include.ab3"
0000022C <error.include.ab3@68> XINCLUDE "dos.include.ab3"
00000260 <error.include.ab3@69> XINCLUDE "dos.include.ab3"
0000027C <error.include.ab3@73> XINCLUDE "dos.include.ab3"
00000296 <error.include.ab3@99> XINCLUDE "dos.include.ab3"
000002A2 <error.include.ab3@101> XINCLUDE "dos.include.ab3"
000002A6 <error.include.ab3@102> XINCLUDE "dos.include.ab3"
000002B4 <error.include.ab3@104> XINCLUDE "dos.include.ab3"
000002F6 <error.include.ab3@124> XINCLUDE "dos.include.ab3"
0000037A <error.include.ab3@126> XINCLUDE "dos.include.ab3"
000003E6 <error.include.ab3@127> XINCLUDE "dos.include.ab3"
00000400 <error.include.ab3@129> XINCLUDE "dos.include.ab3"
00000438 <error.include.ab3@130> XINCLUDE "dos.include.ab3"
00000498 <error.include.ab3@131> XINCLUDE "dos.include.ab3"
000004A6 <error.include.ab3@133> XINCLUDE "dos.include.ab3"
000004B4 <error.include.ab3@134> XINCLUDE "dos.include.ab3"
000004C2 <error.include.ab3@135> XINCLUDE "dos.include.ab3"
000004D0 <error.include.ab3@136> XINCLUDE "dos.include.ab3"
000004F8 <error.include.ab3@137> XINCLUDE "dos.include.ab3"
00000506 <error.include.ab3@138> XINCLUDE "dos.include.ab3"
0000050E <error.include.ab3@139> XINCLUDE "dos.include.ab3"
00000540 <error.include.ab3@141> XINCLUDE "dos.include.ab3"
0000055A <error.include.ab3@146> XINCLUDE "dos.include.ab3"
00000592 <error.include.ab3@147> XINCLUDE "dos.include.ab3"
00000598 <error.include.ab3@148> XINCLUDE "dos.include.ab3"
000005DC <error.include.ab3@149> XINCLUDE "dos.include.ab3"
00000624 <error.include.ab3@150> XINCLUDE "dos.include.ab3"
0000062E <error.include.ab3@154> XINCLUDE "dos.include.ab3"
00000648 <error.include.ab3@156> XINCLUDE "dos.include.ab3"
00000692 <error.include.ab3@195> XINCLUDE "dos.include.ab3"
0000069A <error.include.ab3@197> XINCLUDE "dos.include.ab3"
00000706 <error.include.ab3@198> XINCLUDE "dos.include.ab3"
00000728 <error.include.ab3@199> XINCLUDE "dos.include.ab3"
00000788 <error.include.ab3@200> XINCLUDE "dos.include.ab3"
00000796 <error.include.ab3@202> XINCLUDE "dos.include.ab3"
000007A4 <error.include.ab3@203> XINCLUDE "dos.include.ab3"
000007B2 <error.include.ab3@204> XINCLUDE "dos.include.ab3"
000007C0 <error.include.ab3@205> XINCLUDE "dos.include.ab3"
00000820 <error.include.ab3@206> XINCLUDE "dos.include.ab3"
0000082E <error.include.ab3@207> XINCLUDE "dos.include.ab3"
00000864 <error.include.ab3@210> XINCLUDE "dos.include.ab3"
0000086E <error.include.ab3@214> XINCLUDE "dos.include.ab3"
0000088A <error.include.ab3@215> XINCLUDE "dos.include.ab3"
0000088A <multilist.include.ab3@1> XINCLUDE "dos.include.ab3"
0000088A <strptr.include.ab3@1> XINCLUDE "dos.include.ab3"
0000088A <useful.include.ab3@1> XINCLUDE "dos.include.ab3"
000008B8 <useful.include.ab3@283> XINCLUDE "dos.include.ab3"
000008C2 <useful.include.ab3@284> XINCLUDE "dos.include.ab3"
000008D6 <useful.include.ab3@285> XINCLUDE "dos.include.ab3"
000008DE <useful.include.ab3@286> XINCLUDE "dos.include.ab3"
00000906 <useful.include.ab3@287> XINCLUDE "dos.include.ab3"
0000092C <useful.include.ab3@288> XINCLUDE "dos.include.ab3"
0000094C <useful.include.ab3@291> XINCLUDE "dos.include.ab3"
0000095A <useful.include.ab3@292> XINCLUDE "dos.include.ab3"
00000980 <useful.include.ab3@293> XINCLUDE "dos.include.ab3"
00000988 <useful.include.ab3@295> XINCLUDE "dos.include.ab3"
00000990 <useful.include.ab3@296> XINCLUDE "dos.include.ab3"
00000996 <useful.include.ab3@297> XINCLUDE "dos.include.ab3"
000009B2 <useful.include.ab3@298> XINCLUDE "dos.include.ab3"
000009D6 <useful.include.ab3@299> XINCLUDE "dos.include.ab3"
000009EA <useful.include.ab3@300> XINCLUDE "dos.include.ab3"
000009F0 <useful.include.ab3@301> XINCLUDE "dos.include.ab3"
00000A3A <useful.include.ab3@302> XINCLUDE "dos.include.ab3"
00000A3C <useful.include.ab3@303> XINCLUDE "dos.include.ab3"
00000A4A <useful.include.ab3@305> XINCLUDE "dos.include.ab3"
00000A6A <useful.include.ab3@307> XINCLUDE "dos.include.ab3"
00000AC8 <useful.include.ab3@308> XINCLUDE "dos.include.ab3"
00000ACE <useful.include.ab3@309> XINCLUDE "dos.include.ab3"
00000ADC <useful.include.ab3@310> XINCLUDE "dos.include.ab3"
00000AF0 <useful.include.ab3@311> XINCLUDE "dos.include.ab3"
00000B02 <useful.include.ab3@312> XINCLUDE "dos.include.ab3"
00000B10 <useful.include.ab3@313> XINCLUDE "dos.include.ab3"
00000B16 <useful.include.ab3@314> XINCLUDE "dos.include.ab3"
00000B22 <useful.include.ab3@315> XINCLUDE "dos.include.ab3"
00000B36 <useful.include.ab3@318> XINCLUDE "dos.include.ab3"
00000B4A <useful.include.ab3@319> XINCLUDE "dos.include.ab3"
00000B5C <useful.include.ab3@320> XINCLUDE "dos.include.ab3"
00000B6A <useful.include.ab3@321> XINCLUDE "dos.include.ab3"
00000B88 <useful.include.ab3@322> XINCLUDE "dos.include.ab3"
00000B8E <useful.include.ab3@323> XINCLUDE "dos.include.ab3"
00000BA2 <useful.include.ab3@327> XINCLUDE "dos.include.ab3"
00000BAC <useful.include.ab3@328> XINCLUDE "dos.include.ab3"
00000BB4 <useful.include.ab3@329> XINCLUDE "dos.include.ab3"
00000BD2 <useful.include.ab3@330> XINCLUDE "dos.include.ab3"
00000BD8 <useful.include.ab3@331> XINCLUDE "dos.include.ab3"
00000C04 <useful.include.ab3@332> XINCLUDE "dos.include.ab3"
00000C0A <useful.include.ab3@334> XINCLUDE "dos.include.ab3"
00000C1C <useful.include.ab3@335> XINCLUDE "dos.include.ab3"
00000C34 <useful.include.ab3@336> XINCLUDE "dos.include.ab3"
00000C4C <useful.include.ab3@337> XINCLUDE "dos.include.ab3"
00000C6A <useful.include.ab3@338> XINCLUDE "dos.include.ab3"
00000C6C <useful.include.ab3@340> XINCLUDE "dos.include.ab3"
00000C7A <useful.include.ab3@341> XINCLUDE "dos.include.ab3"
00000CA0 <useful.include.ab3@342> XINCLUDE "dos.include.ab3"
00000D34 <useful.include.ab3@343> XINCLUDE "dos.include.ab3"
00000D42 <useful.include.ab3@345> XINCLUDE "dos.include.ab3"
00000D48 <useful.include.ab3@346> XINCLUDE "dos.include.ab3"
00000D72 <useful.include.ab3@347> XINCLUDE "dos.include.ab3"
00000D90 <useful.include.ab3@348> XINCLUDE "dos.include.ab3"
00000D90 <strptr.include.ab3@37> XINCLUDE "dos.include.ab3"
00000DAA <strptr.include.ab3@96> XINCLUDE "dos.include.ab3"
00000DB4 <strptr.include.ab3@97> XINCLUDE "dos.include.ab3"
00000DFC <strptr.include.ab3@98> XINCLUDE "dos.include.ab3"
00000E00 <strptr.include.ab3@100> XINCLUDE "dos.include.ab3"
00000E2E <strptr.include.ab3@197> XINCLUDE "dos.include.ab3"
00000E38 <strptr.include.ab3@198> XINCLUDE "dos.include.ab3"
00000E80 <strptr.include.ab3@199> XINCLUDE "dos.include.ab3"
00000E94 <strptr.include.ab3@200> XINCLUDE "dos.include.ab3"
00000EA6 <strptr.include.ab3@201> XINCLUDE "dos.include.ab3"
00000ECA <strptr.include.ab3@205> XINCLUDE "dos.include.ab3"
00000ED4 <strptr.include.ab3@208> XINCLUDE "dos.include.ab3"
00000EE2 <strptr.include.ab3@209> XINCLUDE "dos.include.ab3"
00000EEC <strptr.include.ab3@210> XINCLUDE "dos.include.ab3"
00000F14 <strptr.include.ab3@211> XINCLUDE "dos.include.ab3"
00000F2E <strptr.include.ab3@212> XINCLUDE "dos.include.ab3"
00000F46 <strptr.include.ab3@216> XINCLUDE "dos.include.ab3"
00000F60 <strptr.include.ab3@282> XINCLUDE "dos.include.ab3"
00000F6A <strptr.include.ab3@283> XINCLUDE "dos.include.ab3"
00000F78 <strptr.include.ab3@284> XINCLUDE "dos.include.ab3"
00000FAA <strptr.include.ab3@285> XINCLUDE "dos.include.ab3"
00000FC8 <strptr.include.ab3@287> XINCLUDE "dos.include.ab3"
00000FD2 <strptr.include.ab3@288> XINCLUDE "dos.include.ab3"
00000FD2 <multilist.include.ab3@44> XINCLUDE "dos.include.ab3"
00000FE8 <multilist.include.ab3@61> XINCLUDE "dos.include.ab3"
00001002 <multilist.include.ab3@406> XINCLUDE "dos.include.ab3"
0000100C <multilist.include.ab3@407> XINCLUDE "dos.include.ab3"
0000102E <multilist.include.ab3@408> XINCLUDE "dos.include.ab3"
00001052 <multilist.include.ab3@409> XINCLUDE "dos.include.ab3"
00001064 <multilist.include.ab3@410> XINCLUDE "dos.include.ab3"
0000107C <multilist.include.ab3@411> XINCLUDE "dos.include.ab3"
00001090 <multilist.include.ab3@412> XINCLUDE "dos.include.ab3"
000010A2 <multilist.include.ab3@415> XINCLUDE "dos.include.ab3"
000010B2 <multilist.include.ab3@416> XINCLUDE "dos.include.ab3"
000010B8 <multilist.include.ab3@417> XINCLUDE "dos.include.ab3"
000010C8 <multilist.include.ab3@418> XINCLUDE "dos.include.ab3"
000010D8 <multilist.include.ab3@419> XINCLUDE "dos.include.ab3"
000010F2 <multilist.include.ab3@420> XINCLUDE "dos.include.ab3"
000010F6 <multilist.include.ab3@422> XINCLUDE "dos.include.ab3"
00001110 <multilist.include.ab3@585> XINCLUDE "dos.include.ab3"
00001140 <multilist.include.ab3@586> XINCLUDE "dos.include.ab3"
0000114A <multilist.include.ab3@588> XINCLUDE "dos.include.ab3"
00001154 <multilist.include.ab3@589> XINCLUDE "dos.include.ab3"
00001176 <multilist.include.ab3@590> XINCLUDE "dos.include.ab3"
0000119A <multilist.include.ab3@591> XINCLUDE "dos.include.ab3"
000011AC <multilist.include.ab3@592> XINCLUDE "dos.include.ab3"
000011C4 <multilist.include.ab3@593> XINCLUDE "dos.include.ab3"
000011D8 <multilist.include.ab3@594> XINCLUDE "dos.include.ab3"
000011EA <multilist.include.ab3@597> XINCLUDE "dos.include.ab3"
000011FA <multilist.include.ab3@598> XINCLUDE "dos.include.ab3"
00001200 <multilist.include.ab3@599> XINCLUDE "dos.include.ab3"
00001210 <multilist.include.ab3@600> XINCLUDE "dos.include.ab3"
00001220 <multilist.include.ab3@601> XINCLUDE "dos.include.ab3"
0000123A <multilist.include.ab3@602> XINCLUDE "dos.include.ab3"
00001240 <multilist.include.ab3@603> XINCLUDE "dos.include.ab3"
00001246 <multilist.include.ab3@604> XINCLUDE "dos.include.ab3"
0000124A <multilist.include.ab3@605> XINCLUDE "dos.include.ab3"
00001264 <multilist.include.ab3@713> XINCLUDE "dos.include.ab3"
0000126C <multilist.include.ab3@714> XINCLUDE "dos.include.ab3"
00001276 <multilist.include.ab3@715> XINCLUDE "dos.include.ab3"
0000128C <multilist.include.ab3@716> XINCLUDE "dos.include.ab3"
000012A0 <multilist.include.ab3@717> XINCLUDE "dos.include.ab3"
000012C4 <multilist.include.ab3@718> XINCLUDE "dos.include.ab3"
000012D2 <multilist.include.ab3@721> XINCLUDE "dos.include.ab3"
000012DC <multilist.include.ab3@722> XINCLUDE "dos.include.ab3"
000012E2 <multilist.include.ab3@723> XINCLUDE "dos.include.ab3"
000012EC <multilist.include.ab3@724> XINCLUDE "dos.include.ab3"
000012F2 <multilist.include.ab3@725> XINCLUDE "dos.include.ab3"
00001310 <multilist.include.ab3@742> XINCLUDE "dos.include.ab3"
00001318 <multilist.include.ab3@743> XINCLUDE "dos.include.ab3"
00001322 <multilist.include.ab3@744> XINCLUDE "dos.include.ab3"
00001340 <multilist.include.ab3@745> XINCLUDE "dos.include.ab3"
00001356 <multilist.include.ab3@746> XINCLUDE "dos.include.ab3"
0000136A <multilist.include.ab3@747> XINCLUDE "dos.include.ab3"
0000139E <multilist.include.ab3@748> XINCLUDE "dos.include.ab3"
000013AC <multilist.include.ab3@751> XINCLUDE "dos.include.ab3"
000013B6 <multilist.include.ab3@752> XINCLUDE "dos.include.ab3"
000013BC <multilist.include.ab3@753> XINCLUDE "dos.include.ab3"
000013C6 <multilist.include.ab3@754> XINCLUDE "dos.include.ab3"
000013CA <multilist.include.ab3@756> XINCLUDE "dos.include.ab3"
000013D0 <multilist.include.ab3@757> XINCLUDE "dos.include.ab3"
000013EA <multilist.include.ab3@795> XINCLUDE "dos.include.ab3"
000013F4 <multilist.include.ab3@796> XINCLUDE "dos.include.ab3"
000013FE <multilist.include.ab3@797> XINCLUDE "dos.include.ab3"
00001414 <multilist.include.ab3@798> XINCLUDE "dos.include.ab3"
00001424 <multilist.include.ab3@799> XINCLUDE "dos.include.ab3"
0000142E <multilist.include.ab3@801> XINCLUDE "dos.include.ab3"
00001434 <multilist.include.ab3@802> XINCLUDE "dos.include.ab3"
00001438 <multilist.include.ab3@803> XINCLUDE "dos.include.ab3"
0000145A <multilist.include.ab3@821> XINCLUDE "dos.include.ab3"
00001462 <multilist.include.ab3@822> XINCLUDE "dos.include.ab3"
0000147C <multilist.include.ab3@823> XINCLUDE "dos.include.ab3"
00001486 <multilist.include.ab3@824> XINCLUDE "dos.include.ab3"
0000149C <multilist.include.ab3@825> XINCLUDE "dos.include.ab3"
000014B0 <multilist.include.ab3@826> XINCLUDE "dos.include.ab3"
00001506 <multilist.include.ab3@827> XINCLUDE "dos.include.ab3"
00001540 <multilist.include.ab3@828> XINCLUDE "dos.include.ab3"
00001552 <multilist.include.ab3@829> XINCLUDE "dos.include.ab3"
00001574 <multilist.include.ab3@830> XINCLUDE "dos.include.ab3"
0000157A <multilist.include.ab3@831> XINCLUDE "dos.include.ab3"
000015D0 <multilist.include.ab3@832> XINCLUDE "dos.include.ab3"
0000160A <multilist.include.ab3@833> XINCLUDE "dos.include.ab3"
00001610 <multilist.include.ab3@835> XINCLUDE "dos.include.ab3"
0000164A <multilist.include.ab3@836> XINCLUDE "dos.include.ab3"
00001684 <multilist.include.ab3@837> XINCLUDE "dos.include.ab3"
00001696 <multilist.include.ab3@839> XINCLUDE "dos.include.ab3"
000016A0 <multilist.include.ab3@840> XINCLUDE "dos.include.ab3"
000016A6 <multilist.include.ab3@841> XINCLUDE "dos.include.ab3"
000016B0 <multilist.include.ab3@842> XINCLUDE "dos.include.ab3"
000016C4 <multilist.include.ab3@843> XINCLUDE "dos.include.ab3"
0000170A <multilist.include.ab3@870> XINCLUDE "dos.include.ab3"
00001712 <multilist.include.ab3@871> XINCLUDE "dos.include.ab3"
00001730 <multilist.include.ab3@872> XINCLUDE "dos.include.ab3"
0000175C <multilist.include.ab3@873> XINCLUDE "dos.include.ab3"
0000177A <multilist.include.ab3@874> XINCLUDE "dos.include.ab3"
00001794 <multilist.include.ab3@875> XINCLUDE "dos.include.ab3"
000017AE <multilist.include.ab3@876> XINCLUDE "dos.include.ab3"
00001830 <multilist.include.ab3@877> XINCLUDE "dos.include.ab3"
00001844 <multilist.include.ab3@879> XINCLUDE "dos.include.ab3"
0000185C <multilist.include.ab3@880> XINCLUDE "dos.include.ab3"
00001862 <multilist.include.ab3@881> XINCLUDE "dos.include.ab3"
0000187A <multilist.include.ab3@882> XINCLUDE "dos.include.ab3"
00001890 <multilist.include.ab3@884> XINCLUDE "dos.include.ab3"
000018AA <multilist.include.ab3@886> XINCLUDE "dos.include.ab3"
000018BE <multilist.include.ab3@887> XINCLUDE "dos.include.ab3"
000018CC <multilist.include.ab3@888> XINCLUDE "dos.include.ab3"
00001922 <multilist.include.ab3@889> XINCLUDE "dos.include.ab3"
00001958 <multilist.include.ab3@890> XINCLUDE "dos.include.ab3"
00001988 <multilist.include.ab3@891> XINCLUDE "dos.include.ab3"
00001A10 <multilist.include.ab3@893> XINCLUDE "dos.include.ab3"
00001A16 <multilist.include.ab3@894> XINCLUDE "dos.include.ab3"
00001A24 <multilist.include.ab3@895> XINCLUDE "dos.include.ab3"
00001A7A <multilist.include.ab3@896> XINCLUDE "dos.include.ab3"
00001AB0 <multilist.include.ab3@897> XINCLUDE "dos.include.ab3"
00001AE0 <multilist.include.ab3@898> XINCLUDE "dos.include.ab3"
00001AE6 <multilist.include.ab3@901> XINCLUDE "dos.include.ab3"
00001B00 <multilist.include.ab3@902> XINCLUDE "dos.include.ab3"
00001B0E <multilist.include.ab3@903> XINCLUDE "dos.include.ab3"
00001B48 <multilist.include.ab3@904> XINCLUDE "dos.include.ab3"
00001B7E <multilist.include.ab3@905> XINCLUDE "dos.include.ab3"
00001BAE <multilist.include.ab3@906> XINCLUDE "dos.include.ab3"
00001BBC <multilist.include.ab3@909> XINCLUDE "dos.include.ab3"
00001BC6 <multilist.include.ab3@910> XINCLUDE "dos.include.ab3"
00001BCC <multilist.include.ab3@911> XINCLUDE "dos.include.ab3"
00001BD6 <multilist.include.ab3@912> XINCLUDE "dos.include.ab3"
00001BEA <multilist.include.ab3@913> XINCLUDE "dos.include.ab3"
00001BEA <dos.include.ab3@57> XINCLUDE "dos.include.ab3"
00001BEA <wbstart.include.ab3@1> XINCLUDE "dos.include.ab3"
00001C00 <wbstart.include.ab3@58> XINCLUDE "dos.include.ab3"
00001C0A <wbstart.include.ab3@59> XINCLUDE "dos.include.ab3"
00001C22 <wbstart.include.ab3@61> XINCLUDE "dos.include.ab3"
00001C24 <wbstart.include.ab3@63> XINCLUDE "dos.include.ab3"
00001C52 <wbstart.include.ab3@64> XINCLUDE "dos.include.ab3"
00001C52 <dos.include.ab3@59> XINCLUDE "dos.include.ab3"
00001C68 <dos.include.ab3@61> XINCLUDE "dos.include.ab3"
00001C70 <dos.include.ab3@79> XINCLUDE "dos.include.ab3"
00001C78 <dos.include.ab3@80> XINCLUDE "dos.include.ab3"
00001CA0 <dos.include.ab3@81> XINCLUDE "dos.include.ab3"
00001CA8 <dos.include.ab3@82> XINCLUDE "dos.include.ab3"
00001CD0 <dos.include.ab3@83> XINCLUDE "dos.include.ab3"
00001CF8 <dos.include.ab3@84> XINCLUDE "dos.include.ab3"
00001D20 <dos.include.ab3@85> XINCLUDE "dos.include.ab3"
00001D28 <dos.include.ab3@86> XINCLUDE "dos.include.ab3"
00001D30 <dos.include.ab3@87> XINCLUDE "dos.include.ab3"
00001D38 <dos.include.ab3@88> XINCLUDE "dos.include.ab3"
00001D40 <dos.include.ab3@89> XINCLUDE "dos.include.ab3"
00001D48 <dos.include.ab3@90> XINCLUDE "dos.include.ab3"
00001D50 <dos.include.ab3@91> XINCLUDE "dos.include.ab3"
00001D58 <dos.include.ab3@92> XINCLUDE "dos.include.ab3"
00001D60 <dos.include.ab3@93> XINCLUDE "dos.include.ab3"
00001D68 <dos.include.ab3@94> XINCLUDE "dos.include.ab3"
00001D88 <dos.include.ab3@95> XINCLUDE "dos.include.ab3"
00001D90 <dos.include.ab3@96> XINCLUDE "dos.include.ab3"
00001D98 <dos.include.ab3@97> XINCLUDE "dos.include.ab3"
00001DC0 <dos.include.ab3@99> XINCLUDE "dos.include.ab3"
00001DD6 <dos.include.ab3@130> XINCLUDE "dos.include.ab3"
00001DE2 <dos.include.ab3@131> XINCLUDE "dos.include.ab3"
00001DE6 <dos.include.ab3@132> XINCLUDE "dos.include.ab3"
00001DFC <dos.include.ab3@145> XINCLUDE "dos.include.ab3"
00001E16 <dos.include.ab3@146> XINCLUDE "dos.include.ab3"
00001E2C <dos.include.ab3@147> XINCLUDE "dos.include.ab3"
00001E56 <dos.include.ab3@148> XINCLUDE "dos.include.ab3"
00001E60 <dos.include.ab3@149> XINCLUDE "dos.include.ab3"
00001E66 <dos.include.ab3@150> XINCLUDE "dos.include.ab3"
00001E7C <dos.include.ab3@163> XINCLUDE "dos.include.ab3"
00001E96 <dos.include.ab3@164> XINCLUDE "dos.include.ab3"
00001EAC <dos.include.ab3@165> XINCLUDE "dos.include.ab3"
00001ED6 <dos.include.ab3@166> XINCLUDE "dos.include.ab3"
00001EE0 <dos.include.ab3@167> XINCLUDE "dos.include.ab3"
00001EE6 <dos.include.ab3@168> XINCLUDE "dos.include.ab3"
00001F10 <dos.include.ab3@184> XINCLUDE "dos.include.ab3"
00001F1C <dos.include.ab3@185> XINCLUDE "dos.include.ab3"
00001F3C <dos.include.ab3@186> XINCLUDE "dos.include.ab3"
00001F46 <dos.include.ab3@187> XINCLUDE "dos.include.ab3"
00001F56 <dos.include.ab3@188> XINCLUDE "dos.include.ab3"
00001F66 <dos.include.ab3@189> XINCLUDE "dos.include.ab3"
00001F70 <dos.include.ab3@191> XINCLUDE "dos.include.ab3"
00001F8A <dos.include.ab3@192> XINCLUDE "dos.include.ab3"
00001FA0 <dos.include.ab3@430> XINCLUDE "dos.include.ab3"
00001FB2 <dos.include.ab3@432> XINCLUDE "dos.include.ab3"
0000202C <dos.include.ab3@433> XINCLUDE "dos.include.ab3"
00002056 <dos.include.ab3@434> XINCLUDE "dos.include.ab3"
0000206E <dos.include.ab3@435> XINCLUDE "dos.include.ab3"
00002084 <dos.include.ab3@461> XINCLUDE "dos.include.ab3"
00002096 <dos.include.ab3@462> XINCLUDE "dos.include.ab3"
0000209A <dos.include.ab3@463> XINCLUDE "dos.include.ab3"
000020B0 <dos.include.ab3@479> XINCLUDE "dos.include.ab3"
000020B2 <dos.include.ab3@480> XINCLUDE "dos.include.ab3"
000020EC <dos.include.ab3@541> XINCLUDE "dos.include.ab3"
00002120 <dos.include.ab3@543> XINCLUDE "dos.include.ab3"
00002146 <dos.include.ab3@544> XINCLUDE "dos.include.ab3"
00002166 <dos.include.ab3@545> XINCLUDE "dos.include.ab3"
00002186 <dos.include.ab3@546> XINCLUDE "dos.include.ab3"
000021B0 <dos.include.ab3@549> XINCLUDE "dos.include.ab3"
000021FC <dos.include.ab3@551> XINCLUDE "dos.include.ab3"
0000220E <dos.include.ab3@552> XINCLUDE "dos.include.ab3"
0000225E <dos.include.ab3@553> XINCLUDE "dos.include.ab3"
00002288 <dos.include.ab3@556> XINCLUDE "dos.include.ab3"
000022A6 <dos.include.ab3@558> XINCLUDE "dos.include.ab3"
000022D0 <dos.include.ab3@674> XINCLUDE "dos.include.ab3"
000022E6 <dos.include.ab3@675> XINCLUDE "dos.include.ab3"
000022F0 <dos.include.ab3@676> XINCLUDE "dos.include.ab3"
00002318 <dos.include.ab3@677> XINCLUDE "dos.include.ab3"
0000231E <dos.include.ab3@678> XINCLUDE "dos.include.ab3"
00002346 <dos.include.ab3@679> XINCLUDE "dos.include.ab3"
00002370 <dos.include.ab3@681> XINCLUDE "dos.include.ab3"
0000238E <dos.include.ab3@682> XINCLUDE "dos.include.ab3"
000023B8 <dos.include.ab3@705> XINCLUDE "dos.include.ab3"
00002428 <dos.include.ab3@706> XINCLUDE "dos.include.ab3"
00002452 <dos.include.ab3@707> XINCLUDE "dos.include.ab3"
00002470 <dos.include.ab3@708> XINCLUDE "dos.include.ab3"
0000249A <dos.include.ab3@743> XINCLUDE "dos.include.ab3"
000024BA <dos.include.ab3@744> XINCLUDE "dos.include.ab3"
000024E6 <dos.include.ab3@745> XINCLUDE "dos.include.ab3"
000024F0 <dos.include.ab3@746> XINCLUDE "dos.include.ab3"
0000250A <dos.include.ab3@747> XINCLUDE "dos.include.ab3"
00002534 <dos.include.ab3@894> XINCLUDE "dos.include.ab3"
000025E2 <dos.include.ab3@895> XINCLUDE "dos.include.ab3"
000025F8 <dos.include.ab3@896> XINCLUDE "dos.include.ab3"
00002602 <dos.include.ab3@897> XINCLUDE "dos.include.ab3"
0000262A <dos.include.ab3@898> XINCLUDE "dos.include.ab3"
00002634 <dos.include.ab3@899> XINCLUDE "dos.include.ab3"
0000263A <dos.include.ab3@900> XINCLUDE "dos.include.ab3"
00002640 <dos.include.ab3@901> XINCLUDE "dos.include.ab3"
00002646 <dos.include.ab3@902> XINCLUDE "dos.include.ab3"
00002658 <dos.include.ab3@904> XINCLUDE "dos.include.ab3"
00002662 <dos.include.ab3@906> XINCLUDE "dos.include.ab3"
0000267C <dos.include.ab3@907> XINCLUDE "dos.include.ab3"
000026BA <dos.include.ab3@928> XINCLUDE "dos.include.ab3"
000026C2 <dos.include.ab3@929> XINCLUDE "dos.include.ab3"
00002770 <dos.include.ab3@930> XINCLUDE "dos.include.ab3"
00002784 <dos.include.ab3@931> XINCLUDE "dos.include.ab3"
000027C6 <dos.include.ab3@932> XINCLUDE "dos.include.ab3"
000027E6 <dos.include.ab3@934> XINCLUDE "dos.include.ab3"
000027F0 <dos.include.ab3@935> XINCLUDE "dos.include.ab3"
0000280C <dos.include.ab3@936> XINCLUDE "dos.include.ab3"
00002846 <dos.include.ab3@988> XINCLUDE "dos.include.ab3"
0000284E <dos.include.ab3@989> XINCLUDE "dos.include.ab3"
000028FC <dos.include.ab3@990> XINCLUDE "dos.include.ab3"
00002932 <dos.include.ab3@991> XINCLUDE "dos.include.ab3"
00002952 <dos.include.ab3@992> XINCLUDE "dos.include.ab3"
00002970 <dos.include.ab3@993> XINCLUDE "dos.include.ab3"
00002994 <dos.include.ab3@994> XINCLUDE "dos.include.ab3"
0000299E <dos.include.ab3@996> XINCLUDE "dos.include.ab3"
000029BA <dos.include.ab3@997> XINCLUDE "dos.include.ab3"
000029F4 <dos.include.ab3@1014> XINCLUDE "dos.include.ab3"
00002AA2 <dos.include.ab3@1015> XINCLUDE "dos.include.ab3"
00002ADA <dos.include.ab3@1016> XINCLUDE "dos.include.ab3"
00002AFA <dos.include.ab3@1017> XINCLUDE "dos.include.ab3"
00002B00 <dos.include.ab3@1018> XINCLUDE "dos.include.ab3"
00002B20 <dos.include.ab3@1019> XINCLUDE "dos.include.ab3"
00002B2A <dos.include.ab3@1020> XINCLUDE "dos.include.ab3"
00002B44 <dos.include.ab3@1021> XINCLUDE "dos.include.ab3"
00002B5C <dos.include.ab3@1022> XINCLUDE "dos.include.ab3"
00002B66 <dos.include.ab3@1025> XINCLUDE "dos.include.ab3"
00002B82 <dos.include.ab3@1026> XINCLUDE "dos.include.ab3"
00002BAC <dos.include.ab3@1161> XINCLUDE "dos.include.ab3"
00002BBA <dos.include.ab3@1163> XINCLUDE "dos.include.ab3"
00002C80 <dos.include.ab3@1164> XINCLUDE "dos.include.ab3"
00002CAA <dos.include.ab3@1165> XINCLUDE "dos.include.ab3"
00002CD2 <dos.include.ab3@1167> XINCLUDE "dos.include.ab3"
00002CFC <dos.include.ab3@1168> XINCLUDE "dos.include.ab3"
00002D26 <dos.include.ab3@1170> XINCLUDE "dos.include.ab3"
00002D44 <dos.include.ab3@1171> XINCLUDE "dos.include.ab3"
00002D6E <dos.include.ab3@1189> XINCLUDE "dos.include.ab3"
00002DDA <dos.include.ab3@1191> XINCLUDE "dos.include.ab3"
00002E02 <dos.include.ab3@1192> XINCLUDE "dos.include.ab3"
00002E10 <dos.include.ab3@1193> XINCLUDE "dos.include.ab3"
00002E44 <dos.include.ab3@1194> XINCLUDE "dos.include.ab3"
00002E52 <dos.include.ab3@1197> XINCLUDE "dos.include.ab3"
00002E74 <dos.include.ab3@1203> XINCLUDE "dos.include.ab3"
00002E82 <dos.include.ab3@1207> XINCLUDE "dos.include.ab3"
00002EA6 <dos.include.ab3@1208> XINCLUDE "dos.include.ab3"
00002ED0 <dos.include.ab3@1209> XINCLUDE "dos.include.ab3"
00002EFA <dos.include.ab3@1212> XINCLUDE "dos.include.ab3"
00002F18 <dos.include.ab3@1213> XINCLUDE "dos.include.ab3"
00002F42 <dos.include.ab3@1274> XINCLUDE "dos.include.ab3"
00002F9A <dos.include.ab3@1275> XINCLUDE "dos.include.ab3"
00002FC4 <dos.include.ab3@1276> XINCLUDE "dos.include.ab3"
00002FE2 <dos.include.ab3@1277> XINCLUDE "dos.include.ab3"
00002FF8 <dos.include.ab3@1351> XINCLUDE "dos.include.ab3"
00002FFE <dos.include.ab3@1353> XINCLUDE "dos.include.ab3"
00003008 <dos.include.ab3@1354> XINCLUDE "dos.include.ab3"
00003012 <dos.include.ab3@1355> XINCLUDE "dos.include.ab3"
00003030 <dos.include.ab3@1358> XINCLUDE "dos.include.ab3"
00003036 <dos.include.ab3@1359> XINCLUDE "dos.include.ab3"
0000303C <dos.include.ab3@1360> XINCLUDE "dos.include.ab3"
0000304C <dos.include.ab3@1362> XINCLUDE "dos.include.ab3"
00003052 <dos.include.ab3@1363> XINCLUDE "dos.include.ab3"
0000305A <dos.include.ab3@1364> XINCLUDE "dos.include.ab3"
00003082 <dos.include.ab3@1365> XINCLUDE "dos.include.ab3"
0000308C <dos.include.ab3@1366> XINCLUDE "dos.include.ab3"
00003096 <dos.include.ab3@1368> XINCLUDE "dos.include.ab3"
000030AA <dos.include.ab3@1369> XINCLUDE "dos.include.ab3"
000030C0 <dos.include.ab3@1474> XINCLUDE "dos.include.ab3"
000030C6 <dos.include.ab3@1480> XINCLUDE "dos.include.ab3"
000030EA <dos.include.ab3@1481> XINCLUDE "dos.include.ab3"
0000310E <dos.include.ab3@1482> XINCLUDE "dos.include.ab3"
00003132 <dos.include.ab3@1483> XINCLUDE "dos.include.ab3"
00003138 <dos.include.ab3@1484> XINCLUDE "dos.include.ab3"
00003164 <dos.include.ab3@1485> XINCLUDE "dos.include.ab3"
00003166 <dos.include.ab3@1486> XINCLUDE "dos.include.ab3"
00003194 <dos.include.ab3@1487> XINCLUDE "dos.include.ab3"
000031BE <dos.include.ab3@1503> XINCLUDE "dos.include.ab3"
00003242 <dos.include.ab3@1506> XINCLUDE "dos.include.ab3"
0000330A <dos.include.ab3@1507> XINCLUDE "dos.include.ab3"
00003314 <dos.include.ab3@1509> XINCLUDE "dos.include.ab3"
0000335E <dos.include.ab3@1510> XINCLUDE "dos.include.ab3"
000033AA <dos.include.ab3@1512> XINCLUDE "dos.include.ab3"
000033E2 <dos.include.ab3@1513> XINCLUDE "dos.include.ab3"
000033F4 <dos.include.ab3@1514> XINCLUDE "dos.include.ab3"
0000340A <dos.include.ab3@1515> XINCLUDE "dos.include.ab3"
00003410 <dos.include.ab3@1516> XINCLUDE "dos.include.ab3"
00003426 <dos.include.ab3@1517> XINCLUDE "dos.include.ab3"
0000345A <dos.include.ab3@1519> XINCLUDE "dos.include.ab3"
00003460 <dos.include.ab3@1520> XINCLUDE "dos.include.ab3"
0000346A <dos.include.ab3@1522> XINCLUDE "dos.include.ab3"
00003484 <dos.include.ab3@1523> XINCLUDE "dos.include.ab3"
000034CE <dos.include.ab3@1553> XINCLUDE "dos.include.ab3"
00003504 <dos.include.ab3@1555> XINCLUDE "dos.include.ab3"
00003528 <dos.include.ab3@1556> XINCLUDE "dos.include.ab3"
00003532 <dos.include.ab3@1557> XINCLUDE "dos.include.ab3"
0000355A <dos.include.ab3@1558> XINCLUDE "dos.include.ab3"
000035A2 <dos.include.ab3@1561> XINCLUDE "dos.include.ab3"
00003678 <dos.include.ab3@1563> XINCLUDE "dos.include.ab3"
000036A2 <dos.include.ab3@1564> XINCLUDE "dos.include.ab3"
000036C2 <dos.include.ab3@1565> XINCLUDE "dos.include.ab3"
000036FC <dos.include.ab3@1584> XINCLUDE "dos.include.ab3"
00003702 <dos.include.ab3@1586> XINCLUDE "dos.include.ab3"
00003708 <dos.include.ab3@1587> XINCLUDE "dos.include.ab3"
00003710 <dos.include.ab3@1588> XINCLUDE "dos.include.ab3"
00003746 <dos.include.ab3@1589> XINCLUDE "dos.include.ab3"
00003754 <dos.include.ab3@1590> XINCLUDE "dos.include.ab3"
0000375E <dos.include.ab3@1591> XINCLUDE "dos.include.ab3"
0000378A <dos.include.ab3@1592> XINCLUDE "dos.include.ab3"
00003798 <dos.include.ab3@1593> XINCLUDE "dos.include.ab3"
000037A2 <dos.include.ab3@1594> XINCLUDE "dos.include.ab3"
000037D0 <dos.include.ab3@1596> XINCLUDE "dos.include.ab3"
0000384E <dos.include.ab3@1599> XINCLUDE "dos.include.ab3"
000038A0 <dos.include.ab3@1602> XINCLUDE "dos.include.ab3"
000038B2 <dos.include.ab3@1603> XINCLUDE "dos.include.ab3"
00003920 <dos.include.ab3@1604> XINCLUDE "dos.include.ab3"
00003926 <dos.include.ab3@1605> XINCLUDE "dos.include.ab3"
00003972 <dos.include.ab3@1606> XINCLUDE "dos.include.ab3"
00003A40 <dos.include.ab3@1610> XINCLUDE "dos.include.ab3"
00003B20 <dos.include.ab3@1611> XINCLUDE "dos.include.ab3"
00003B8C <dos.include.ab3@1613> XINCLUDE "dos.include.ab3"
00003B92 <dos.include.ab3@1614> XINCLUDE "dos.include.ab3"
00003BAE <dos.include.ab3@1615> XINCLUDE "dos.include.ab3"
00003BBC <dos.include.ab3@1618> XINCLUDE "dos.include.ab3"
00003BC2 <dos.include.ab3@1619> XINCLUDE "dos.include.ab3"
00003BD4 <dos.include.ab3@1622> XINCLUDE "dos.include.ab3"
00003BEA <dos.include.ab3@1623> XINCLUDE "dos.include.ab3"
00003BF4 <dos.include.ab3@1624> XINCLUDE "dos.include.ab3"
00003C10 <dos.include.ab3@1625> XINCLUDE "dos.include.ab3"
00003C3A <dos.include.ab3@2221> XINCLUDE "dos.include.ab3"
00003C4E <dos.include.ab3@2222> XINCLUDE "dos.include.ab3"
00003C8C <dos.include.ab3@2223> XINCLUDE "dos.include.ab3"
00003D72 <dos.include.ab3@2224> XINCLUDE "dos.include.ab3"
00003D78 <dos.include.ab3@2225> XINCLUDE "dos.include.ab3"
00003DC8 <dos.include.ab3@2226> XINCLUDE "dos.include.ab3"
00003DF2 <dos.include.ab3@2227> XINCLUDE "dos.include.ab3"
00003E10 <dos.include.ab3@2228> XINCLUDE "dos.include.ab3"
00003E3A <dos.include.ab3@2252> XINCLUDE "dos.include.ab3"
00003E4E <dos.include.ab3@2253> XINCLUDE "dos.include.ab3"
00003E8C <dos.include.ab3@2254> XINCLUDE "dos.include.ab3"
00003F72 <dos.include.ab3@2255> XINCLUDE "dos.include.ab3"
00003F78 <dos.include.ab3@2256> XINCLUDE "dos.include.ab3"
00003FEA <dos.include.ab3@2257> XINCLUDE "dos.include.ab3"
00004014 <dos.include.ab3@2258> XINCLUDE "dos.include.ab3"
00004032 <dos.include.ab3@2259> XINCLUDE "dos.include.ab3"
0000406C <dos.include.ab3@2285> XINCLUDE "dos.include.ab3"
000040A4 <dos.include.ab3@2286> XINCLUDE "dos.include.ab3"
000040FC <dos.include.ab3@2287> XINCLUDE "dos.include.ab3"
00004160 <dos.include.ab3@2288> XINCLUDE "dos.include.ab3"
0000418A <dos.include.ab3@2290> XINCLUDE "dos.include.ab3"
000041AA <dos.include.ab3@2291> XINCLUDE "dos.include.ab3"
000041D4 <dos.include.ab3@2308> XINCLUDE "dos.include.ab3"
000041DA <dos.include.ab3@2309> XINCLUDE "dos.include.ab3"
000041F0 <dos.include.ab3@2310> XINCLUDE "dos.include.ab3"
000041FA <dos.include.ab3@2311> XINCLUDE "dos.include.ab3"
00004200 <dos.include.ab3@2312> XINCLUDE "dos.include.ab3"
00004210 <dos.include.ab3@2313> XINCLUDE "dos.include.ab3"
0000421A <dos.include.ab3@2315> XINCLUDE "dos.include.ab3"
00004234 <dos.include.ab3@2316> XINCLUDE "dos.include.ab3"
00004262 <dos.include.ab3@2558> XINCLUDE "dos.include.ab3"
00004284 <dos.include.ab3@2559> XINCLUDE "dos.include.ab3"
0000428C <dos.include.ab3@2560> XINCLUDE "dos.include.ab3"
0000429A <dos.include.ab3@2561> XINCLUDE "dos.include.ab3"
000042B4 <dos.include.ab3@2563> XINCLUDE "dos.include.ab3"
000042E2 <dos.include.ab3@2582> XINCLUDE "dos.include.ab3"
000042F6 <dos.include.ab3@2583> XINCLUDE "dos.include.ab3"
0000432A <dos.include.ab3@2584> XINCLUDE "dos.include.ab3"
00004344 <dos.include.ab3@2586> XINCLUDE "dos.include.ab3"
0000434C <dos.include.ab3@2587> XINCLUDE "dos.include.ab3"
0000435A <dos.include.ab3@2588> XINCLUDE "dos.include.ab3"
00004374 <dos.include.ab3@2590> XINCLUDE "dos.include.ab3"
0000439E <dos.include.ab3@2726> XINCLUDE "dos.include.ab3"
000043AA <dos.include.ab3@2728> XINCLUDE "dos.include.ab3"
000043CA <dos.include.ab3@2729> XINCLUDE "dos.include.ab3"
000043F0 <dos.include.ab3@2730> XINCLUDE "dos.include.ab3"
0000441C <dos.include.ab3@2731> XINCLUDE "dos.include.ab3"
00004434 <dos.include.ab3@2732> XINCLUDE "dos.include.ab3"
00004442 <dos.include.ab3@2734> XINCLUDE "dos.include.ab3"
00004448 <dos.include.ab3@2735> XINCLUDE "dos.include.ab3"
00004454 <dos.include.ab3@2736> XINCLUDE "dos.include.ab3"
0000445A <dos.include.ab3@2738> XINCLUDE "dos.include.ab3"
00004466 <dos.include.ab3@2739> XINCLUDE "dos.include.ab3"
00004476 <dos.include.ab3@2741> XINCLUDE "dos.include.ab3"
0000447C <dos.include.ab3@2742> XINCLUDE "dos.include.ab3"
00004488 <dos.include.ab3@2743> XINCLUDE "dos.include.ab3"
00004492 <dos.include.ab3@2745> XINCLUDE "dos.include.ab3"
000044AC <dos.include.ab3@2746> XINCLUDE "dos.include.ab3"
000044AC <AmiBlitz3.ab3@79> XINCLUDE "dos.include.ab3"
000044BA <AmiBlitz3.ab3@81> If dos_FromCLI{}
000044C0 <AmiBlitz3.ab3@82>   CLIMode.l=True
000044CC <AmiBlitz3.ab3@83>   error_SetFlags{#error_stdout}
000044CC <common.ab3@1> XINCLUDE "/Shared/common.ab3"
000044F4 <common.ab3@48> XINCLUDE "/Shared/common.ab3"
000044FA <common.ab3@261> XINCLUDE "/Shared/common.ab3"
000044FC <common.ab3@262> XINCLUDE "/Shared/common.ab3"
0000468C <common.ab3@263> XINCLUDE "/Shared/common.ab3"
00004690 <common.ab3@264> XINCLUDE "/Shared/common.ab3"
00004694 <common.ab3@266> XINCLUDE "/Shared/common.ab3"
00004698 <common.ab3@267> XINCLUDE "/Shared/common.ab3"
0000469C <common.ab3@269> XINCLUDE "/Shared/common.ab3"
000046A0 <common.ab3@270> XINCLUDE "/Shared/common.ab3"
000046A4 <common.ab3@271> XINCLUDE "/Shared/common.ab3"
000046A8 <common.ab3@272> XINCLUDE "/Shared/common.ab3"
000046AC <common.ab3@273> XINCLUDE "/Shared/common.ab3"
000046B0 <common.ab3@274> XINCLUDE "/Shared/common.ab3"
000046B4 <common.ab3@275> XINCLUDE "/Shared/common.ab3"
000046B8 <common.ab3@276> XINCLUDE "/Shared/common.ab3"
000046BC <common.ab3@277> XINCLUDE "/Shared/common.ab3"
000046C0 <common.ab3@279> XINCLUDE "/Shared/common.ab3"
000046C4 <common.ab3@281> XINCLUDE "/Shared/common.ab3"
000046C8 <common.ab3@282> XINCLUDE "/Shared/common.ab3"
000046CC <common.ab3@283> XINCLUDE "/Shared/common.ab3"
000046D0 <common.ab3@284> XINCLUDE "/Shared/common.ab3"
000046D4 <common.ab3@285> XINCLUDE "/Shared/common.ab3"
000046D8 <common.ab3@286> XINCLUDE "/Shared/common.ab3"
000046DC <common.ab3@287> XINCLUDE "/Shared/common.ab3"
000046E0 <common.ab3@288> XINCLUDE "/Shared/common.ab3"
000046E4 <common.ab3@289> XINCLUDE "/Shared/common.ab3"
000046E8 <common.ab3@290> XINCLUDE "/Shared/common.ab3"
000046F0 <common.ab3@293> XINCLUDE "/Shared/common.ab3"
000046F4 <common.ab3@294> XINCLUDE "/Shared/common.ab3"
000046F6 <common.ab3@295> XINCLUDE "/Shared/common.ab3"
000046FA <common.ab3@296> XINCLUDE "/Shared/common.ab3"
000046FC <common.ab3@297> XINCLUDE "/Shared/common.ab3"
00004700 <common.ab3@298> XINCLUDE "/Shared/common.ab3"
00004704 <common.ab3@299> XINCLUDE "/Shared/common.ab3"
00004708 <common.ab3@300> XINCLUDE "/Shared/common.ab3"
0000470C <common.ab3@301> XINCLUDE "/Shared/common.ab3"
00004710 <common.ab3@302> XINCLUDE "/Shared/common.ab3"
00004718 <common.ab3@303> XINCLUDE "/Shared/common.ab3"
00004720 <common.ab3@304> XINCLUDE "/Shared/common.ab3"
00004724 <common.ab3@305> XINCLUDE "/Shared/common.ab3"
00004728 <common.ab3@306> XINCLUDE "/Shared/common.ab3"
0000472C <common.ab3@307> XINCLUDE "/Shared/common.ab3"
0000472E <common.ab3@309> XINCLUDE "/Shared/common.ab3"
000047EE <common.ab3@310> XINCLUDE "/Shared/common.ab3"
00004836 <common.ab3@311> XINCLUDE "/Shared/common.ab3"
0000483A <common.ab3@313> XINCLUDE "/Shared/common.ab3"
0000483C <common.ab3@314> XINCLUDE "/Shared/common.ab3"
00004840 <common.ab3@315> XINCLUDE "/Shared/common.ab3"
00004842 <common.ab3@316> XINCLUDE "/Shared/common.ab3"
00004844 <common.ab3@317> XINCLUDE "/Shared/common.ab3"
00004846 <common.ab3@318> XINCLUDE "/Shared/common.ab3"
00004848 <common.ab3@319> XINCLUDE "/Shared/common.ab3"
0000484A <common.ab3@321> XINCLUDE "/Shared/common.ab3"
0000484C <common.ab3@322> XINCLUDE "/Shared/common.ab3"
0000484D <common.ab3@326> XINCLUDE "/Shared/common.ab3"
0000484E <common.ab3@328> XINCLUDE "/Shared/common.ab3"
00004850 <common.ab3@329> XINCLUDE "/Shared/common.ab3"
00004852 <common.ab3@330> XINCLUDE "/Shared/common.ab3"
00004854 <common.ab3@332> XINCLUDE "/Shared/common.ab3"
00004856 <common.ab3@335> XINCLUDE "/Shared/common.ab3"
00004858 <common.ab3@337> XINCLUDE "/Shared/common.ab3"
0000485A <common.ab3@339> XINCLUDE "/Shared/common.ab3"
0000485E <common.ab3@341> XINCLUDE "/Shared/common.ab3"
00004860 <common.ab3@343> XINCLUDE "/Shared/common.ab3"
00004862 <common.ab3@344> XINCLUDE "/Shared/common.ab3"
00004864 <common.ab3@346> XINCLUDE "/Shared/common.ab3"
00004868 <common.ab3@348> XINCLUDE "/Shared/common.ab3"
0000486A <common.ab3@349> XINCLUDE "/Shared/common.ab3"
0000486C <common.ab3@350> XINCLUDE "/Shared/common.ab3"
00004870 <common.ab3@353> XINCLUDE "/Shared/common.ab3"
00004872 <common.ab3@354> XINCLUDE "/Shared/common.ab3"
00004874 <common.ab3@355> XINCLUDE "/Shared/common.ab3"
00004876 <common.ab3@356> XINCLUDE "/Shared/common.ab3"
00004878 <common.ab3@358> XINCLUDE "/Shared/common.ab3"
0000487A <common.ab3@359> XINCLUDE "/Shared/common.ab3"
0000487E <common.ab3@361> XINCLUDE "/Shared/common.ab3"
00004880 <common.ab3@362> XINCLUDE "/Shared/common.ab3"
00004882 <common.ab3@363> XINCLUDE "/Shared/common.ab3"
00004884 <common.ab3@367> XINCLUDE "/Shared/common.ab3"
00004886 <common.ab3@368> XINCLUDE "/Shared/common.ab3"
0000488A <common.ab3@369> XINCLUDE "/Shared/common.ab3"
0000488C <common.ab3@375> XINCLUDE "/Shared/common.ab3"
0000488E <common.ab3@377> XINCLUDE "/Shared/common.ab3"
00004890 <common.ab3@379> XINCLUDE "/Shared/common.ab3"
00004892 <common.ab3@380> XINCLUDE "/Shared/common.ab3"
00004894 <common.ab3@381> XINCLUDE "/Shared/common.ab3"
00004898 <common.ab3@382> XINCLUDE "/Shared/common.ab3"
0000489A <common.ab3@383> XINCLUDE "/Shared/common.ab3"
0000489C <common.ab3@384> XINCLUDE "/Shared/common.ab3"
0000489E <common.ab3@385> XINCLUDE "/Shared/common.ab3"
000048A0 <common.ab3@386> XINCLUDE "/Shared/common.ab3"
000048A2 <common.ab3@388> XINCLUDE "/Shared/common.ab3"
000048A4 <common.ab3@390> XINCLUDE "/Shared/common.ab3"
000048A6 <common.ab3@392> XINCLUDE "/Shared/common.ab3"
000048AA <common.ab3@393> XINCLUDE "/Shared/common.ab3"
000048AC <common.ab3@394> XINCLUDE "/Shared/common.ab3"
000048DA <common.ab3@395> XINCLUDE "/Shared/common.ab3"
000048E4 <common.ab3@396> XINCLUDE "/Shared/common.ab3"
000048E8 <common.ab3@397> XINCLUDE "/Shared/common.ab3"
000048EA <common.ab3@399> XINCLUDE "/Shared/common.ab3"
000048EC <common.ab3@400> XINCLUDE "/Shared/common.ab3"
000048F0 <common.ab3@401> XINCLUDE "/Shared/common.ab3"
000048F4 <common.ab3@402> XINCLUDE "/Shared/common.ab3"
000048FD <common.ab3@403> XINCLUDE "/Shared/common.ab3"
00004900 <common.ab3@404> XINCLUDE "/Shared/common.ab3"
0000492D <common.ab3@405> XINCLUDE "/Shared/common.ab3"
0000496D <common.ab3@406> XINCLUDE "/Shared/common.ab3"
00004979 <common.ab3@407> XINCLUDE "/Shared/common.ab3"
000049C9 <common.ab3@408> XINCLUDE "/Shared/common.ab3"
000049D5 <common.ab3@409> XINCLUDE "/Shared/common.ab3"
00004A25 <common.ab3@410> XINCLUDE "/Shared/common.ab3"
00004B21 <common.ab3@411> XINCLUDE "/Shared/common.ab3"
00004B23 <common.ab3@412> XINCLUDE "/Shared/common.ab3"
00004BE3 <common.ab3@413> XINCLUDE "/Shared/common.ab3"
00004C23 <common.ab3@414> XINCLUDE "/Shared/common.ab3"
00004C25 <common.ab3@415> XINCLUDE "/Shared/common.ab3"
00004C26 <common.ab3@416> XINCLUDE "/Shared/common.ab3"
00004C2A <common.ab3@419> XINCLUDE "/Shared/common.ab3"
00004C2E <common.ab3@421> XINCLUDE "/Shared/common.ab3"
00004C32 <common.ab3@422> XINCLUDE "/Shared/common.ab3"
00004C36 <common.ab3@423> XINCLUDE "/Shared/common.ab3"
00004C3A <common.ab3@425> XINCLUDE "/Shared/common.ab3"
00004C3E <common.ab3@427> XINCLUDE "/Shared/common.ab3"
00004C42 <common.ab3@428> XINCLUDE "/Shared/common.ab3"
00004C46 <common.ab3@429> XINCLUDE "/Shared/common.ab3"
00004C4A <common.ab3@430> XINCLUDE "/Shared/common.ab3"
00004C4E <common.ab3@431> XINCLUDE "/Shared/common.ab3"
00004C52 <common.ab3@432> XINCLUDE "/Shared/common.ab3"
00004C56 <common.ab3@433> XINCLUDE "/Shared/common.ab3"
00004C5A <common.ab3@434> XINCLUDE "/Shared/common.ab3"
00004C5E <common.ab3@436> XINCLUDE "/Shared/common.ab3"
00004C62 <common.ab3@438> XINCLUDE "/Shared/common.ab3"
00004C66 <common.ab3@440> XINCLUDE "/Shared/common.ab3"
00004C6A <common.ab3@442> XINCLUDE "/Shared/common.ab3"
00004C6E <common.ab3@443> XINCLUDE "/Shared/common.ab3"
00004C78 <common.ab3@444> XINCLUDE "/Shared/common.ab3"
00004C7C <common.ab3@445> XINCLUDE "/Shared/common.ab3"
00004C80 <common.ab3@448> XINCLUDE "/Shared/common.ab3"
00004C82 <common.ab3@449> XINCLUDE "/Shared/common.ab3"
00004C84 <common.ab3@450> XINCLUDE "/Shared/common.ab3"
00004CA2 <common.ab3@451> XINCLUDE "/Shared/common.ab3"
00004CA6 <common.ab3@452> XINCLUDE "/Shared/common.ab3"
00004CA8 <common.ab3@454> XINCLUDE "/Shared/common.ab3"
00004CAC <common.ab3@455> XINCLUDE "/Shared/common.ab3"
00004CE0 <common.ab3@456> XINCLUDE "/Shared/common.ab3"
00004CE4 <common.ab3@457> XINCLUDE "/Shared/common.ab3"
00004CF2 <common.ab3@459> XINCLUDE "/Shared/common.ab3"
00004D04 <common.ab3@460> XINCLUDE "/Shared/common.ab3"
00004D06 <common.ab3@461> XINCLUDE "/Shared/common.ab3"
00004D1A <common.ab3@462> XINCLUDE "/Shared/common.ab3"
00004D30 <common.ab3@463> XINCLUDE "/Shared/common.ab3"
00004D46 <common.ab3@464> XINCLUDE "/Shared/common.ab3"
00004D5C <common.ab3@465> XINCLUDE "/Shared/common.ab3"
00004D72 <common.ab3@466> XINCLUDE "/Shared/common.ab3"
00004D74 <common.ab3@467> XINCLUDE "/Shared/common.ab3"
00004D76 <common.ab3@468> XINCLUDE "/Shared/common.ab3"
00004D7A <common.ab3@470> XINCLUDE "/Shared/common.ab3"
00004D7E <common.ab3@472> XINCLUDE "/Shared/common.ab3"
00004D82 <common.ab3@474> XINCLUDE "/Shared/common.ab3"
00004D86 <common.ab3@475> XINCLUDE "/Shared/common.ab3"
00004D8A <common.ab3@476> XINCLUDE "/Shared/common.ab3"
00004D8E <common.ab3@477> XINCLUDE "/Shared/common.ab3"
00004D92 <common.ab3@478> XINCLUDE "/Shared/common.ab3"
00004D96 <common.ab3@479> XINCLUDE "/Shared/common.ab3"
00004D9A <common.ab3@480> XINCLUDE "/Shared/common.ab3"
00004D9E <common.ab3@481> XINCLUDE "/Shared/common.ab3"
00004DA4 <common.ab3@482> XINCLUDE "/Shared/common.ab3"
00004DB6 <common.ab3@483> XINCLUDE "/Shared/common.ab3"
00004DB8 <common.ab3@487> XINCLUDE "/Shared/common.ab3"
00004DBC <common.ab3@488> XINCLUDE "/Shared/common.ab3"
00004DBE <common.ab3@489> XINCLUDE "/Shared/common.ab3"
00004DC2 <common.ab3@490> XINCLUDE "/Shared/common.ab3"
00004DC4 <common.ab3@491> XINCLUDE "/Shared/common.ab3"
00004DC8 <common.ab3@492> XINCLUDE "/Shared/common.ab3"
00004DCA <common.ab3@493> XINCLUDE "/Shared/common.ab3"
00004DCE <common.ab3@494> XINCLUDE "/Shared/common.ab3"
00004DD0 <common.ab3@495> XINCLUDE "/Shared/common.ab3"
00004DD4 <common.ab3@496> XINCLUDE "/Shared/common.ab3"
00004DD6 <common.ab3@497> XINCLUDE "/Shared/common.ab3"
00004DDA <common.ab3@498> XINCLUDE "/Shared/common.ab3"
00004DDC <common.ab3@499> XINCLUDE "/Shared/common.ab3"
00004DE0 <common.ab3@500> XINCLUDE "/Shared/common.ab3"
00004DE2 <common.ab3@501> XINCLUDE "/Shared/common.ab3"
00004DE6 <common.ab3@502> XINCLUDE "/Shared/common.ab3"
00004DE8 <common.ab3@503> XINCLUDE "/Shared/common.ab3"
00004DEC <common.ab3@504> XINCLUDE "/Shared/common.ab3"
00004DEE <common.ab3@505> XINCLUDE "/Shared/common.ab3"
00004DF2 <common.ab3@506> XINCLUDE "/Shared/common.ab3"
00004DF4 <common.ab3@507> XINCLUDE "/Shared/common.ab3"
00004DF8 <common.ab3@508> XINCLUDE "/Shared/common.ab3"
00004DFA <common.ab3@509> XINCLUDE "/Shared/common.ab3"
00004DFE <common.ab3@510> XINCLUDE "/Shared/common.ab3"
00004E00 <common.ab3@511> XINCLUDE "/Shared/common.ab3"
00004E04 <common.ab3@512> XINCLUDE "/Shared/common.ab3"
00004E06 <common.ab3@513> XINCLUDE "/Shared/common.ab3"
00004E0A <common.ab3@514> XINCLUDE "/Shared/common.ab3"
00004E0C <common.ab3@515> XINCLUDE "/Shared/common.ab3"
00004E20 <common.ab3@519> XINCLUDE "/Shared/common.ab3"
00004E34 <common.ab3@520> XINCLUDE "/Shared/common.ab3"
00004E48 <common.ab3@521> XINCLUDE "/Shared/common.ab3"
00004E4A <common.ab3@522> XINCLUDE "/Shared/common.ab3"
00004E4E <common.ab3@523> XINCLUDE "/Shared/common.ab3"
00004E52 <common.ab3@524> XINCLUDE "/Shared/common.ab3"
00004E56 <common.ab3@525> XINCLUDE "/Shared/common.ab3"
00004E5A <common.ab3@526> XINCLUDE "/Shared/common.ab3"
00004E5E <common.ab3@527> XINCLUDE "/Shared/common.ab3"
00004E62 <common.ab3@528> XINCLUDE "/Shared/common.ab3"
00004E66 <common.ab3@529> XINCLUDE "/Shared/common.ab3"
00004E67 <common.ab3@530> XINCLUDE "/Shared/common.ab3"
00004E68 <common.ab3@531> XINCLUDE "/Shared/common.ab3"
00004E69 <common.ab3@532> XINCLUDE "/Shared/common.ab3"
00004E6C <common.ab3@533> XINCLUDE "/Shared/common.ab3"
00004E70 <common.ab3@534> XINCLUDE "/Shared/common.ab3"
00004E74 <common.ab3@535> XINCLUDE "/Shared/common.ab3"
00004E78 <common.ab3@536> XINCLUDE "/Shared/common.ab3"
00004E7C <common.ab3@537> XINCLUDE "/Shared/common.ab3"
00004E80 <common.ab3@538> XINCLUDE "/Shared/common.ab3"
00004E84 <common.ab3@539> XINCLUDE "/Shared/common.ab3"
00004E85 <common.ab3@540> XINCLUDE "/Shared/common.ab3"
00004E86 <common.ab3@541> XINCLUDE "/Shared/common.ab3"
00004E88 <common.ab3@542> XINCLUDE "/Shared/common.ab3"
00004E8C <common.ab3@543> XINCLUDE "/Shared/common.ab3"
00004E90 <common.ab3@544> XINCLUDE "/Shared/common.ab3"
00004E94 <common.ab3@545> XINCLUDE "/Shared/common.ab3"
00004E98 <common.ab3@547> XINCLUDE "/Shared/common.ab3"
00004E9C <common.ab3@548> XINCLUDE "/Shared/common.ab3"
00004EA0 <common.ab3@549> XINCLUDE "/Shared/common.ab3"
00004EA4 <common.ab3@550> XINCLUDE "/Shared/common.ab3"
00004EA8 <common.ab3@551> XINCLUDE "/Shared/common.ab3"
00004EAC <common.ab3@552> XINCLUDE "/Shared/common.ab3"
00004EB0 <common.ab3@553> XINCLUDE "/Shared/common.ab3"
00004EB4 <common.ab3@554> XINCLUDE "/Shared/common.ab3"
00004EB8 <common.ab3@558> XINCLUDE "/Shared/common.ab3"
00004EBC <common.ab3@559> XINCLUDE "/Shared/common.ab3"
00004EC0 <common.ab3@560> XINCLUDE "/Shared/common.ab3"
00004EC2 <common.ab3@561> XINCLUDE "/Shared/common.ab3"
00004EC3 <common.ab3@562> XINCLUDE "/Shared/common.ab3"
00004EC7 <common.ab3@563> XINCLUDE "/Shared/common.ab3"
00004ECB <common.ab3@564> XINCLUDE "/Shared/common.ab3"
00004ECF <common.ab3@565> XINCLUDE "/Shared/common.ab3"
00004ED3 <common.ab3@566> XINCLUDE "/Shared/common.ab3"
00004ED4 <common.ab3@568> XINCLUDE "/Shared/common.ab3"
00004ED8 <common.ab3@570> XINCLUDE "/Shared/common.ab3"
00004EDC <common.ab3@571> XINCLUDE "/Shared/common.ab3"
00004EE0 <common.ab3@572> XINCLUDE "/Shared/common.ab3"
00004EE4 <common.ab3@573> XINCLUDE "/Shared/common.ab3"
00004EE8 <common.ab3@574> XINCLUDE "/Shared/common.ab3"
00004EE9 <common.ab3@575> XINCLUDE "/Shared/common.ab3"
00004EEA <common.ab3@577> XINCLUDE "/Shared/common.ab3"
00004EEE <common.ab3@579> XINCLUDE "/Shared/common.ab3"
00004EF2 <common.ab3@580> XINCLUDE "/Shared/common.ab3"
00004EF4 <common.ab3@581> XINCLUDE "/Shared/common.ab3"
00004EF6 <common.ab3@582> XINCLUDE "/Shared/common.ab3"
00004EFA <common.ab3@586> XINCLUDE "/Shared/common.ab3"
00004EFE <common.ab3@587> XINCLUDE "/Shared/common.ab3"
00004F02 <common.ab3@589> XINCLUDE "/Shared/common.ab3"
00004F06 <common.ab3@590> XINCLUDE "/Shared/common.ab3"
00004F0A <common.ab3@592> XINCLUDE "/Shared/common.ab3"
00004F0E <common.ab3@593> XINCLUDE "/Shared/common.ab3"
00004F12 <common.ab3@595> XINCLUDE "/Shared/common.ab3"
00004F16 <common.ab3@596> XINCLUDE "/Shared/common.ab3"
00004F1A <common.ab3@597> XINCLUDE "/Shared/common.ab3"
00004F1E <common.ab3@598> XINCLUDE "/Shared/common.ab3"
00004F22 <common.ab3@599> XINCLUDE "/Shared/common.ab3"
00004F26 <common.ab3@600> XINCLUDE "/Shared/common.ab3"
00004F2A <common.ab3@601> XINCLUDE "/Shared/common.ab3"
00004F2E <common.ab3@602> XINCLUDE "/Shared/common.ab3"
00004F32 <common.ab3@603> XINCLUDE "/Shared/common.ab3"
00004F36 <common.ab3@604> XINCLUDE "/Shared/common.ab3"
00004F3A <common.ab3@605> XINCLUDE "/Shared/common.ab3"
00004F3E <common.ab3@606> XINCLUDE "/Shared/common.ab3"
00004F42 <common.ab3@607> XINCLUDE "/Shared/common.ab3"
00004F46 <common.ab3@608> XINCLUDE "/Shared/common.ab3"
00004F46 <AmiBlitz3.ab3@86> XINCLUDE "/Shared/common.ab3"
00004F46 <preprocessor.include.ab3@1> XINCLUDE "/Shared/preprocessor.include.ab3"
00004F46 <hashmap.include.ab3@1> XINCLUDE "/Shared/preprocessor.include.ab3"
00004F64 <hashmap.include.ab3@36> XINCLUDE "/Shared/preprocessor.include.ab3"
00004F6C <hashmap.include.ab3@38> XINCLUDE "/Shared/preprocessor.include.ab3"
00004F9A <hashmap.include.ab3@39> XINCLUDE "/Shared/preprocessor.include.ab3"
00004FCA <hashmap.include.ab3@40> XINCLUDE "/Shared/preprocessor.include.ab3"
00004FDA <hashmap.include.ab3@41> XINCLUDE "/Shared/preprocessor.include.ab3"
00004FE4 <hashmap.include.ab3@43> XINCLUDE "/Shared/preprocessor.include.ab3"
00004FEA <hashmap.include.ab3@45> XINCLUDE "/Shared/preprocessor.include.ab3"
0000500C <hashmap.include.ab3@48> XINCLUDE "/Shared/preprocessor.include.ab3"
0000502A <hashmap.include.ab3@50> XINCLUDE "/Shared/preprocessor.include.ab3"
0000503C <hashmap.include.ab3@51> XINCLUDE "/Shared/preprocessor.include.ab3"
00005064 <hashmap.include.ab3@52> XINCLUDE "/Shared/preprocessor.include.ab3"
0000506A <hashmap.include.ab3@54> XINCLUDE "/Shared/preprocessor.include.ab3"
00005084 <hashmap.include.ab3@57> XINCLUDE "/Shared/preprocessor.include.ab3"
0000509C <hashmap.include.ab3@59> XINCLUDE "/Shared/preprocessor.include.ab3"
000050AE <hashmap.include.ab3@60> XINCLUDE "/Shared/preprocessor.include.ab3"
000050BC <hashmap.include.ab3@61> XINCLUDE "/Shared/preprocessor.include.ab3"
000050F0 <hashmap.include.ab3@62> XINCLUDE "/Shared/preprocessor.include.ab3"
000050FE <hashmap.include.ab3@63> XINCLUDE "/Shared/preprocessor.include.ab3"
00005108 <hashmap.include.ab3@64> XINCLUDE "/Shared/preprocessor.include.ab3"
0000511A <hashmap.include.ab3@65> XINCLUDE "/Shared/preprocessor.include.ab3"
00005154 <hashmap.include.ab3@66> XINCLUDE "/Shared/preprocessor.include.ab3"
00005164 <hashmap.include.ab3@67> XINCLUDE "/Shared/preprocessor.include.ab3"
0000516A <hashmap.include.ab3@69> XINCLUDE "/Shared/preprocessor.include.ab3"
0000517A <hashmap.include.ab3@70> XINCLUDE "/Shared/preprocessor.include.ab3"
0000518A <hashmap.include.ab3@72> XINCLUDE "/Shared/preprocessor.include.ab3"
00005198 <hashmap.include.ab3@74> XINCLUDE "/Shared/preprocessor.include.ab3"
000051A8 <hashmap.include.ab3@75> XINCLUDE "/Shared/preprocessor.include.ab3"
000051CC <hashmap.include.ab3@76> XINCLUDE "/Shared/preprocessor.include.ab3"
000051D8 <hashmap.include.ab3@78> XINCLUDE "/Shared/preprocessor.include.ab3"
000051E6 <hashmap.include.ab3@79> XINCLUDE "/Shared/preprocessor.include.ab3"
000051F4 <hashmap.include.ab3@80> XINCLUDE "/Shared/preprocessor.include.ab3"
00005202 <hashmap.include.ab3@81> XINCLUDE "/Shared/preprocessor.include.ab3"
00005210 <hashmap.include.ab3@82> XINCLUDE "/Shared/preprocessor.include.ab3"
00005246 <hashmap.include.ab3@83> XINCLUDE "/Shared/preprocessor.include.ab3"
00005254 <hashmap.include.ab3@84> XINCLUDE "/Shared/preprocessor.include.ab3"
00005264 <hashmap.include.ab3@85> XINCLUDE "/Shared/preprocessor.include.ab3"
0000526C <hashmap.include.ab3@86> XINCLUDE "/Shared/preprocessor.include.ab3"
00005270 <hashmap.include.ab3@88> XINCLUDE "/Shared/preprocessor.include.ab3"
0000528A <hashmap.include.ab3@91> XINCLUDE "/Shared/preprocessor.include.ab3"
000052A4 <hashmap.include.ab3@93> XINCLUDE "/Shared/preprocessor.include.ab3"
000052BE <hashmap.include.ab3@94> XINCLUDE "/Shared/preprocessor.include.ab3"
000052DE <hashmap.include.ab3@96> XINCLUDE "/Shared/preprocessor.include.ab3"
000052E8 <hashmap.include.ab3@97> XINCLUDE "/Shared/preprocessor.include.ab3"
000052F4 <hashmap.include.ab3@98> XINCLUDE "/Shared/preprocessor.include.ab3"
00005308 <hashmap.include.ab3@99> XINCLUDE "/Shared/preprocessor.include.ab3"
0000533A <hashmap.include.ab3@100> XINCLUDE "/Shared/preprocessor.include.ab3"
00005352 <hashmap.include.ab3@101> XINCLUDE "/Shared/preprocessor.include.ab3"
0000535E <hashmap.include.ab3@102> XINCLUDE "/Shared/preprocessor.include.ab3"
0000536C <hashmap.include.ab3@103> XINCLUDE "/Shared/preprocessor.include.ab3"
0000537A <hashmap.include.ab3@104> XINCLUDE "/Shared/preprocessor.include.ab3"
00005388 <hashmap.include.ab3@105> XINCLUDE "/Shared/preprocessor.include.ab3"
00005396 <hashmap.include.ab3@106> XINCLUDE "/Shared/preprocessor.include.ab3"
000053C0 <hashmap.include.ab3@107> XINCLUDE "/Shared/preprocessor.include.ab3"
000053CA <hashmap.include.ab3@110> XINCLUDE "/Shared/preprocessor.include.ab3"
000053D0 <hashmap.include.ab3@112> XINCLUDE "/Shared/preprocessor.include.ab3"
000053FE <hashmap.include.ab3@115> XINCLUDE "/Shared/preprocessor.include.ab3"
00005416 <hashmap.include.ab3@117> XINCLUDE "/Shared/preprocessor.include.ab3"
00005434 <hashmap.include.ab3@118> XINCLUDE "/Shared/preprocessor.include.ab3"
00005448 <hashmap.include.ab3@119> XINCLUDE "/Shared/preprocessor.include.ab3"
00005460 <hashmap.include.ab3@120> XINCLUDE "/Shared/preprocessor.include.ab3"
00005488 <hashmap.include.ab3@121> XINCLUDE "/Shared/preprocessor.include.ab3"
000054A0 <hashmap.include.ab3@122> XINCLUDE "/Shared/preprocessor.include.ab3"
000054AE <hashmap.include.ab3@123> XINCLUDE "/Shared/preprocessor.include.ab3"
000054BC <hashmap.include.ab3@124> XINCLUDE "/Shared/preprocessor.include.ab3"
000054CA <hashmap.include.ab3@125> XINCLUDE "/Shared/preprocessor.include.ab3"
000054DE <hashmap.include.ab3@126> XINCLUDE "/Shared/preprocessor.include.ab3"
00005532 <hashmap.include.ab3@127> XINCLUDE "/Shared/preprocessor.include.ab3"
0000555C <hashmap.include.ab3@128> XINCLUDE "/Shared/preprocessor.include.ab3"
000055A0 <hashmap.include.ab3@130> XINCLUDE "/Shared/preprocessor.include.ab3"
000055C0 <hashmap.include.ab3@131> XINCLUDE "/Shared/preprocessor.include.ab3"
000055D2 <hashmap.include.ab3@132> XINCLUDE "/Shared/preprocessor.include.ab3"
000055F6 <hashmap.include.ab3@133> XINCLUDE "/Shared/preprocessor.include.ab3"
00005604 <hashmap.include.ab3@134> XINCLUDE "/Shared/preprocessor.include.ab3"
0000565C <hashmap.include.ab3@135> XINCLUDE "/Shared/preprocessor.include.ab3"
000056A2 <hashmap.include.ab3@136> XINCLUDE "/Shared/preprocessor.include.ab3"
000056A8 <hashmap.include.ab3@137> XINCLUDE "/Shared/preprocessor.include.ab3"
000056B0 <hashmap.include.ab3@138> XINCLUDE "/Shared/preprocessor.include.ab3"
000056D8 <hashmap.include.ab3@140> XINCLUDE "/Shared/preprocessor.include.ab3"
000056EA <hashmap.include.ab3@141> XINCLUDE "/Shared/preprocessor.include.ab3"
000056FC <hashmap.include.ab3@142> XINCLUDE "/Shared/preprocessor.include.ab3"
00005736 <hashmap.include.ab3@143> XINCLUDE "/Shared/preprocessor.include.ab3"
00005746 <hashmap.include.ab3@144> XINCLUDE "/Shared/preprocessor.include.ab3"
0000574C <hashmap.include.ab3@146> XINCLUDE "/Shared/preprocessor.include.ab3"
0000575C <hashmap.include.ab3@147> XINCLUDE "/Shared/preprocessor.include.ab3"
00005762 <hashmap.include.ab3@149> XINCLUDE "/Shared/preprocessor.include.ab3"
00005768 <hashmap.include.ab3@151> XINCLUDE "/Shared/preprocessor.include.ab3"
00005780 <hashmap.include.ab3@153> XINCLUDE "/Shared/preprocessor.include.ab3"
000057BE <hashmap.include.ab3@156> XINCLUDE "/Shared/preprocessor.include.ab3"
000057DC <hashmap.include.ab3@158> XINCLUDE "/Shared/preprocessor.include.ab3"
0000580E <hashmap.include.ab3@159> XINCLUDE "/Shared/preprocessor.include.ab3"
00005822 <hashmap.include.ab3@160> XINCLUDE "/Shared/preprocessor.include.ab3"
00005836 <hashmap.include.ab3@161> XINCLUDE "/Shared/preprocessor.include.ab3"
0000584E <hashmap.include.ab3@162> XINCLUDE "/Shared/preprocessor.include.ab3"
00005876 <hashmap.include.ab3@164> XINCLUDE "/Shared/preprocessor.include.ab3"
00005880 <hashmap.include.ab3@168> XINCLUDE "/Shared/preprocessor.include.ab3"
0000588E <hashmap.include.ab3@169> XINCLUDE "/Shared/preprocessor.include.ab3"
000058A6 <hashmap.include.ab3@170> XINCLUDE "/Shared/preprocessor.include.ab3"
000058AC <hashmap.include.ab3@174> XINCLUDE "/Shared/preprocessor.include.ab3"
000058B4 <hashmap.include.ab3@175> XINCLUDE "/Shared/preprocessor.include.ab3"
000058D4 <hashmap.include.ab3@178> XINCLUDE "/Shared/preprocessor.include.ab3"
000058FA <hashmap.include.ab3@179> XINCLUDE "/Shared/preprocessor.include.ab3"
00005904 <hashmap.include.ab3@180> XINCLUDE "/Shared/preprocessor.include.ab3"
00005912 <hashmap.include.ab3@181> XINCLUDE "/Shared/preprocessor.include.ab3"
0000591C <hashmap.include.ab3@183> XINCLUDE "/Shared/preprocessor.include.ab3"
00005948 <hashmap.include.ab3@184> XINCLUDE "/Shared/preprocessor.include.ab3"
0000595C <hashmap.include.ab3@185> XINCLUDE "/Shared/preprocessor.include.ab3"
00005962 <hashmap.include.ab3@186> XINCLUDE "/Shared/preprocessor.include.ab3"
00005970 <hashmap.include.ab3@187> XINCLUDE "/Shared/preprocessor.include.ab3"
000059A6 <hashmap.include.ab3@190> XINCLUDE "/Shared/preprocessor.include.ab3"
000059F4 <hashmap.include.ab3@191> XINCLUDE "/Shared/preprocessor.include.ab3"
00005A1C <hashmap.include.ab3@193> XINCLUDE "/Shared/preprocessor.include.ab3"
00005A36 <hashmap.include.ab3@194> XINCLUDE "/Shared/preprocessor.include.ab3"
00005A48 <hashmap.include.ab3@195> XINCLUDE "/Shared/preprocessor.include.ab3"
00005A52 <hashmap.include.ab3@198> XINCLUDE "/Shared/preprocessor.include.ab3"
00005A6E <hashmap.include.ab3@200> XINCLUDE "/Shared/preprocessor.include.ab3"
00005A98 <hashmap.include.ab3@203> XINCLUDE "/Shared/preprocessor.include.ab3"
00005AB6 <hashmap.include.ab3@205> XINCLUDE "/Shared/preprocessor.include.ab3"
00005ADA <hashmap.include.ab3@206> XINCLUDE "/Shared/preprocessor.include.ab3"
00005B08 <hashmap.include.ab3@207> XINCLUDE "/Shared/preprocessor.include.ab3"
00005B22 <hashmap.include.ab3@208> XINCLUDE "/Shared/preprocessor.include.ab3"
00005B4A <hashmap.include.ab3@209> XINCLUDE "/Shared/preprocessor.include.ab3"
00005B68 <hashmap.include.ab3@210> XINCLUDE "/Shared/preprocessor.include.ab3"
00005B84 <hashmap.include.ab3@211> XINCLUDE "/Shared/preprocessor.include.ab3"
00005B92 <hashmap.include.ab3@212> XINCLUDE "/Shared/preprocessor.include.ab3"
00005BA6 <hashmap.include.ab3@214> XINCLUDE "/Shared/preprocessor.include.ab3"
00005BC8 <hashmap.include.ab3@215> XINCLUDE "/Shared/preprocessor.include.ab3"
00005BEA <hashmap.include.ab3@216> XINCLUDE "/Shared/preprocessor.include.ab3"
00005BF8 <hashmap.include.ab3@217> XINCLUDE "/Shared/preprocessor.include.ab3"
00005C18 <hashmap.include.ab3@218> XINCLUDE "/Shared/preprocessor.include.ab3"
00005C48 <hashmap.include.ab3@219> XINCLUDE "/Shared/preprocessor.include.ab3"
00005C4E <hashmap.include.ab3@220> XINCLUDE "/Shared/preprocessor.include.ab3"
00005C82 <hashmap.include.ab3@221> XINCLUDE "/Shared/preprocessor.include.ab3"
00005CC4 <hashmap.include.ab3@222> XINCLUDE "/Shared/preprocessor.include.ab3"
00005CD4 <hashmap.include.ab3@223> XINCLUDE "/Shared/preprocessor.include.ab3"
00005CDE <hashmap.include.ab3@224> XINCLUDE "/Shared/preprocessor.include.ab3"
00005CEE <hashmap.include.ab3@225> XINCLUDE "/Shared/preprocessor.include.ab3"
00005CF4 <hashmap.include.ab3@229> XINCLUDE "/Shared/preprocessor.include.ab3"
00005D00 <hashmap.include.ab3@231> XINCLUDE "/Shared/preprocessor.include.ab3"
00005D06 <hashmap.include.ab3@233> XINCLUDE "/Shared/preprocessor.include.ab3"
00005D34 <hashmap.include.ab3@236> XINCLUDE "/Shared/preprocessor.include.ab3"
00005D64 <hashmap.include.ab3@238> XINCLUDE "/Shared/preprocessor.include.ab3"
00005D9A <hashmap.include.ab3@239> XINCLUDE "/Shared/preprocessor.include.ab3"
00005DAE <hashmap.include.ab3@240> XINCLUDE "/Shared/preprocessor.include.ab3"
00005DC6 <hashmap.include.ab3@241> XINCLUDE "/Shared/preprocessor.include.ab3"
00005DEE <hashmap.include.ab3@242> XINCLUDE "/Shared/preprocessor.include.ab3"
00005E1E <hashmap.include.ab3@243> XINCLUDE "/Shared/preprocessor.include.ab3"
00005E3A <hashmap.include.ab3@244> XINCLUDE "/Shared/preprocessor.include.ab3"
00005E48 <hashmap.include.ab3@245> XINCLUDE "/Shared/preprocessor.include.ab3"
00005E5C <hashmap.include.ab3@246> XINCLUDE "/Shared/preprocessor.include.ab3"
00005EB0 <hashmap.include.ab3@247> XINCLUDE "/Shared/preprocessor.include.ab3"
00005EDA <hashmap.include.ab3@248> XINCLUDE "/Shared/preprocessor.include.ab3"
00005F1E <hashmap.include.ab3@249> XINCLUDE "/Shared/preprocessor.include.ab3"
00005F44 <hashmap.include.ab3@250> XINCLUDE "/Shared/preprocessor.include.ab3"
00005F4A <hashmap.include.ab3@252> XINCLUDE "/Shared/preprocessor.include.ab3"
00005F68 <hashmap.include.ab3@254> XINCLUDE "/Shared/preprocessor.include.ab3"
00005F86 <hashmap.include.ab3@256> XINCLUDE "/Shared/preprocessor.include.ab3"
00005FA4 <hashmap.include.ab3@290> XINCLUDE "/Shared/preprocessor.include.ab3"
00005FAA <hashmap.include.ab3@292> XINCLUDE "/Shared/preprocessor.include.ab3"
00005FD0 <hashmap.include.ab3@293> XINCLUDE "/Shared/preprocessor.include.ab3"
00005FFE <hashmap.include.ab3@295> XINCLUDE "/Shared/preprocessor.include.ab3"
00006026 <hashmap.include.ab3@296> XINCLUDE "/Shared/preprocessor.include.ab3"
0000604A <hashmap.include.ab3@297> XINCLUDE "/Shared/preprocessor.include.ab3"
000060A0 <hashmap.include.ab3@300> XINCLUDE "/Shared/preprocessor.include.ab3"
000060F2 <hashmap.include.ab3@301> XINCLUDE "/Shared/preprocessor.include.ab3"
00006148 <hashmap.include.ab3@302> XINCLUDE "/Shared/preprocessor.include.ab3"
00006158 <hashmap.include.ab3@305> XINCLUDE "/Shared/preprocessor.include.ab3"
000061AA <hashmap.include.ab3@306> XINCLUDE "/Shared/preprocessor.include.ab3"
000061D2 <hashmap.include.ab3@307> XINCLUDE "/Shared/preprocessor.include.ab3"
000061F8 <hashmap.include.ab3@308> XINCLUDE "/Shared/preprocessor.include.ab3"
00006212 <hashmap.include.ab3@309> XINCLUDE "/Shared/preprocessor.include.ab3"
0000621A <hashmap.include.ab3@310> XINCLUDE "/Shared/preprocessor.include.ab3"
00006242 <hashmap.include.ab3@311> XINCLUDE "/Shared/preprocessor.include.ab3"
00006270 <hashmap.include.ab3@314> XINCLUDE "/Shared/preprocessor.include.ab3"
00006298 <hashmap.include.ab3@315> XINCLUDE "/Shared/preprocessor.include.ab3"
000062A0 <hashmap.include.ab3@316> XINCLUDE "/Shared/preprocessor.include.ab3"
000062C4 <hashmap.include.ab3@317> XINCLUDE "/Shared/preprocessor.include.ab3"
000062F8 <hashmap.include.ab3@319> XINCLUDE "/Shared/preprocessor.include.ab3"
00006314 <hashmap.include.ab3@320> XINCLUDE "/Shared/preprocessor.include.ab3"
0000631E <hashmap.include.ab3@321> XINCLUDE "/Shared/preprocessor.include.ab3"
00006332 <hashmap.include.ab3@322> XINCLUDE "/Shared/preprocessor.include.ab3"
00006352 <hashmap.include.ab3@323> XINCLUDE "/Shared/preprocessor.include.ab3"
0000636E <hashmap.include.ab3@324> XINCLUDE "/Shared/preprocessor.include.ab3"
0000637C <hashmap.include.ab3@325> XINCLUDE "/Shared/preprocessor.include.ab3"
0000638A <hashmap.include.ab3@326> XINCLUDE "/Shared/preprocessor.include.ab3"
00006390 <hashmap.include.ab3@327> XINCLUDE "/Shared/preprocessor.include.ab3"
000063A8 <hashmap.include.ab3@328> XINCLUDE "/Shared/preprocessor.include.ab3"
000063B8 <hashmap.include.ab3@330> XINCLUDE "/Shared/preprocessor.include.ab3"
000063E6 <hashmap.include.ab3@331> XINCLUDE "/Shared/preprocessor.include.ab3"
00006442 <hashmap.include.ab3@332> XINCLUDE "/Shared/preprocessor.include.ab3"
000064BA <hashmap.include.ab3@333> XINCLUDE "/Shared/preprocessor.include.ab3"
00006516 <hashmap.include.ab3@334> XINCLUDE "/Shared/preprocessor.include.ab3"
0000651C <hashmap.include.ab3@335> XINCLUDE "/Shared/preprocessor.include.ab3"
00006526 <hashmap.include.ab3@338> XINCLUDE "/Shared/preprocessor.include.ab3"
0000652C <hashmap.include.ab3@340> XINCLUDE "/Shared/preprocessor.include.ab3"
0000655A <hashmap.include.ab3@343> XINCLUDE "/Shared/preprocessor.include.ab3"
00006560 <hashmap.include.ab3@345> XINCLUDE "/Shared/preprocessor.include.ab3"
00006580 <hashmap.include.ab3@346> XINCLUDE "/Shared/preprocessor.include.ab3"
0000658A <hashmap.include.ab3@347> XINCLUDE "/Shared/preprocessor.include.ab3"
0000659C <hashmap.include.ab3@348> XINCLUDE "/Shared/preprocessor.include.ab3"
000065AC <hashmap.include.ab3@349> XINCLUDE "/Shared/preprocessor.include.ab3"
000065B6 <hashmap.include.ab3@352> XINCLUDE "/Shared/preprocessor.include.ab3"
000065D0 <hashmap.include.ab3@354> XINCLUDE "/Shared/preprocessor.include.ab3"
000065EA <hashmap.include.ab3@357> XINCLUDE "/Shared/preprocessor.include.ab3"
000065F2 <hashmap.include.ab3@359> XINCLUDE "/Shared/preprocessor.include.ab3"
000065F8 <hashmap.include.ab3@360> XINCLUDE "/Shared/preprocessor.include.ab3"
00006602 <hashmap.include.ab3@361> XINCLUDE "/Shared/preprocessor.include.ab3"
0000660A <hashmap.include.ab3@362> XINCLUDE "/Shared/preprocessor.include.ab3"
00006632 <hashmap.include.ab3@363> XINCLUDE "/Shared/preprocessor.include.ab3"
00006638 <hashmap.include.ab3@364> XINCLUDE "/Shared/preprocessor.include.ab3"
0000664C <hashmap.include.ab3@365> XINCLUDE "/Shared/preprocessor.include.ab3"
00006688 <hashmap.include.ab3@367> XINCLUDE "/Shared/preprocessor.include.ab3"
000066AE <hashmap.include.ab3@368> XINCLUDE "/Shared/preprocessor.include.ab3"
000066BC <hashmap.include.ab3@369> XINCLUDE "/Shared/preprocessor.include.ab3"
000066F8 <hashmap.include.ab3@371> XINCLUDE "/Shared/preprocessor.include.ab3"
0000670C <hashmap.include.ab3@372> XINCLUDE "/Shared/preprocessor.include.ab3"
00006748 <hashmap.include.ab3@374> XINCLUDE "/Shared/preprocessor.include.ab3"
0000675E <hashmap.include.ab3@375> XINCLUDE "/Shared/preprocessor.include.ab3"
00006772 <hashmap.include.ab3@377> XINCLUDE "/Shared/preprocessor.include.ab3"
0000677C <hashmap.include.ab3@378> XINCLUDE "/Shared/preprocessor.include.ab3"
000067A0 <hashmap.include.ab3@379> XINCLUDE "/Shared/preprocessor.include.ab3"
000067D8 <hashmap.include.ab3@380> XINCLUDE "/Shared/preprocessor.include.ab3"
000067DE <hashmap.include.ab3@381> XINCLUDE "/Shared/preprocessor.include.ab3"
000067EA <hashmap.include.ab3@382> XINCLUDE "/Shared/preprocessor.include.ab3"
000067FE <hashmap.include.ab3@385> XINCLUDE "/Shared/preprocessor.include.ab3"
00006808 <hashmap.include.ab3@386> XINCLUDE "/Shared/preprocessor.include.ab3"
00006830 <hashmap.include.ab3@387> XINCLUDE "/Shared/preprocessor.include.ab3"
00006858 <hashmap.include.ab3@388> XINCLUDE "/Shared/preprocessor.include.ab3"
0000686A <hashmap.include.ab3@389> XINCLUDE "/Shared/preprocessor.include.ab3"
00006896 <hashmap.include.ab3@390> XINCLUDE "/Shared/preprocessor.include.ab3"
000068CA <hashmap.include.ab3@391> XINCLUDE "/Shared/preprocessor.include.ab3"
000068F6 <hashmap.include.ab3@392> XINCLUDE "/Shared/preprocessor.include.ab3"
00006942 <hashmap.include.ab3@393> XINCLUDE "/Shared/preprocessor.include.ab3"
00006952 <hashmap.include.ab3@395> XINCLUDE "/Shared/preprocessor.include.ab3"
00006958 <hashmap.include.ab3@397> XINCLUDE "/Shared/preprocessor.include.ab3"
00006964 <hashmap.include.ab3@398> XINCLUDE "/Shared/preprocessor.include.ab3"
00006992 <hashmap.include.ab3@401> XINCLUDE "/Shared/preprocessor.include.ab3"
00006994 <hashmap.include.ab3@403> XINCLUDE "/Shared/preprocessor.include.ab3"
0000699A <hashmap.include.ab3@404> XINCLUDE "/Shared/preprocessor.include.ab3"
000069A4 <hashmap.include.ab3@406> XINCLUDE "/Shared/preprocessor.include.ab3"
000069CE <hashmap.include.ab3@407> XINCLUDE "/Shared/preprocessor.include.ab3"
000069D8 <hashmap.include.ab3@410> XINCLUDE "/Shared/preprocessor.include.ab3"
000069DE <hashmap.include.ab3@412> XINCLUDE "/Shared/preprocessor.include.ab3"
00006A08 <hashmap.include.ab3@415> XINCLUDE "/Shared/preprocessor.include.ab3"
00006A10 <hashmap.include.ab3@417> XINCLUDE "/Shared/preprocessor.include.ab3"
00006A30 <hashmap.include.ab3@418> XINCLUDE "/Shared/preprocessor.include.ab3"
00006A3A <hashmap.include.ab3@419> XINCLUDE "/Shared/preprocessor.include.ab3"
00006A48 <hashmap.include.ab3@420> XINCLUDE "/Shared/preprocessor.include.ab3"
00006A58 <hashmap.include.ab3@421> XINCLUDE "/Shared/preprocessor.include.ab3"
00006A62 <hashmap.include.ab3@424> XINCLUDE "/Shared/preprocessor.include.ab3"
00006A7C <hashmap.include.ab3@426> XINCLUDE "/Shared/preprocessor.include.ab3"
00006A7C <preprocessor.include.ab3@11> XINCLUDE "/Shared/preprocessor.include.ab3"
00006A96 <preprocessor.include.ab3@29> XINCLUDE "/Shared/preprocessor.include.ab3"
00006AB0 <preprocessor.include.ab3@30> XINCLUDE "/Shared/preprocessor.include.ab3"
00006AD2 <preprocessor.include.ab3@31> XINCLUDE "/Shared/preprocessor.include.ab3"
00006B04 <preprocessor.include.ab3@32> XINCLUDE "/Shared/preprocessor.include.ab3"
00006B08 <preprocessor.include.ab3@33> XINCLUDE "/Shared/preprocessor.include.ab3"
00006B22 <preprocessor.include.ab3@36> XINCLUDE "/Shared/preprocessor.include.ab3"
00006B3C <preprocessor.include.ab3@37> XINCLUDE "/Shared/preprocessor.include.ab3"
00006B46 <preprocessor.include.ab3@38> XINCLUDE "/Shared/preprocessor.include.ab3"
00006B5C <preprocessor.include.ab3@39> XINCLUDE "/Shared/preprocessor.include.ab3"
00006B60 <preprocessor.include.ab3@40> XINCLUDE "/Shared/preprocessor.include.ab3"
00006B7A <preprocessor.include.ab3@43> XINCLUDE "/Shared/preprocessor.include.ab3"
00006B94 <preprocessor.include.ab3@44> XINCLUDE "/Shared/preprocessor.include.ab3"
00006BAE <preprocessor.include.ab3@45> XINCLUDE "/Shared/preprocessor.include.ab3"
00006BD2 <preprocessor.include.ab3@46> XINCLUDE "/Shared/preprocessor.include.ab3"
00006BD8 <preprocessor.include.ab3@47> XINCLUDE "/Shared/preprocessor.include.ab3"
00006C02 <preprocessor.include.ab3@48> XINCLUDE "/Shared/preprocessor.include.ab3"
00006C1C <preprocessor.include.ab3@49> XINCLUDE "/Shared/preprocessor.include.ab3"
00006C2C <preprocessor.include.ab3@50> XINCLUDE "/Shared/preprocessor.include.ab3"
00006C36 <preprocessor.include.ab3@53> XINCLUDE "/Shared/preprocessor.include.ab3"
00006C44 <preprocessor.include.ab3@54> XINCLUDE "/Shared/preprocessor.include.ab3"
00006C66 <preprocessor.include.ab3@55> XINCLUDE "/Shared/preprocessor.include.ab3"
00006C9A <preprocessor.include.ab3@56> XINCLUDE "/Shared/preprocessor.include.ab3"
00006CB6 <preprocessor.include.ab3@57> XINCLUDE "/Shared/preprocessor.include.ab3"
00006CC0 <preprocessor.include.ab3@58> XINCLUDE "/Shared/preprocessor.include.ab3"
00006CDC <preprocessor.include.ab3@59> XINCLUDE "/Shared/preprocessor.include.ab3"
00006CEA <preprocessor.include.ab3@60> XINCLUDE "/Shared/preprocessor.include.ab3"
00006CFE <preprocessor.include.ab3@61> XINCLUDE "/Shared/preprocessor.include.ab3"
00006D20 <preprocessor.include.ab3@62> XINCLUDE "/Shared/preprocessor.include.ab3"
00006D42 <preprocessor.include.ab3@63> XINCLUDE "/Shared/preprocessor.include.ab3"
00006D60 <preprocessor.include.ab3@64> XINCLUDE "/Shared/preprocessor.include.ab3"
00006D8E <preprocessor.include.ab3@65> XINCLUDE "/Shared/preprocessor.include.ab3"
00006D94 <preprocessor.include.ab3@66> XINCLUDE "/Shared/preprocessor.include.ab3"
00006DA4 <preprocessor.include.ab3@68> XINCLUDE "/Shared/preprocessor.include.ab3"
00006DA8 <preprocessor.include.ab3@70> XINCLUDE "/Shared/preprocessor.include.ab3"
00006DBE <preprocessor.include.ab3@73> XINCLUDE "/Shared/preprocessor.include.ab3"
00006DDE <preprocessor.include.ab3@74> XINCLUDE "/Shared/preprocessor.include.ab3"
00006DE8 <preprocessor.include.ab3@75> XINCLUDE "/Shared/preprocessor.include.ab3"
00006E12 <preprocessor.include.ab3@76> XINCLUDE "/Shared/preprocessor.include.ab3"
00006E28 <preprocessor.include.ab3@77> XINCLUDE "/Shared/preprocessor.include.ab3"
00006E38 <preprocessor.include.ab3@78> XINCLUDE "/Shared/preprocessor.include.ab3"
00006E54 <preprocessor.include.ab3@80> XINCLUDE "/Shared/preprocessor.include.ab3"
00006E70 <preprocessor.include.ab3@81> XINCLUDE "/Shared/preprocessor.include.ab3"
00006E8C <preprocessor.include.ab3@82> XINCLUDE "/Shared/preprocessor.include.ab3"
00006EA8 <preprocessor.include.ab3@83> XINCLUDE "/Shared/preprocessor.include.ab3"
00006EC4 <preprocessor.include.ab3@84> XINCLUDE "/Shared/preprocessor.include.ab3"
00006EE0 <preprocessor.include.ab3@85> XINCLUDE "/Shared/preprocessor.include.ab3"
00006EFC <preprocessor.include.ab3@86> XINCLUDE "/Shared/preprocessor.include.ab3"
00006F18 <preprocessor.include.ab3@87> XINCLUDE "/Shared/preprocessor.include.ab3"
00006F34 <preprocessor.include.ab3@88> XINCLUDE "/Shared/preprocessor.include.ab3"
00006F50 <preprocessor.include.ab3@89> XINCLUDE "/Shared/preprocessor.include.ab3"
00006F6C <preprocessor.include.ab3@90> XINCLUDE "/Shared/preprocessor.include.ab3"
00006F88 <preprocessor.include.ab3@91> XINCLUDE "/Shared/preprocessor.include.ab3"
00006FA4 <preprocessor.include.ab3@92> XINCLUDE "/Shared/preprocessor.include.ab3"
00006FC0 <preprocessor.include.ab3@93> XINCLUDE "/Shared/preprocessor.include.ab3"
00006FDC <preprocessor.include.ab3@94> XINCLUDE "/Shared/preprocessor.include.ab3"
00006FF8 <preprocessor.include.ab3@95> XINCLUDE "/Shared/preprocessor.include.ab3"
00007014 <preprocessor.include.ab3@96> XINCLUDE "/Shared/preprocessor.include.ab3"
00007030 <preprocessor.include.ab3@97> XINCLUDE "/Shared/preprocessor.include.ab3"
0000704C <preprocessor.include.ab3@98> XINCLUDE "/Shared/preprocessor.include.ab3"
00007068 <preprocessor.include.ab3@99> XINCLUDE "/Shared/preprocessor.include.ab3"
00007084 <preprocessor.include.ab3@100> XINCLUDE "/Shared/preprocessor.include.ab3"
000070A0 <preprocessor.include.ab3@101> XINCLUDE "/Shared/preprocessor.include.ab3"
000070BC <preprocessor.include.ab3@102> XINCLUDE "/Shared/preprocessor.include.ab3"
000070D8 <preprocessor.include.ab3@103> XINCLUDE "/Shared/preprocessor.include.ab3"
000070F4 <preprocessor.include.ab3@104> XINCLUDE "/Shared/preprocessor.include.ab3"
00007110 <preprocessor.include.ab3@105> XINCLUDE "/Shared/preprocessor.include.ab3"
0000712C <preprocessor.include.ab3@106> XINCLUDE "/Shared/preprocessor.include.ab3"
00007148 <preprocessor.include.ab3@107> XINCLUDE "/Shared/preprocessor.include.ab3"
00007164 <preprocessor.include.ab3@108> XINCLUDE "/Shared/preprocessor.include.ab3"
00007180 <preprocessor.include.ab3@109> XINCLUDE "/Shared/preprocessor.include.ab3"
0000719C <preprocessor.include.ab3@110> XINCLUDE "/Shared/preprocessor.include.ab3"
000071B8 <preprocessor.include.ab3@111> XINCLUDE "/Shared/preprocessor.include.ab3"
000071D4 <preprocessor.include.ab3@112> XINCLUDE "/Shared/preprocessor.include.ab3"
000071F0 <preprocessor.include.ab3@113> XINCLUDE "/Shared/preprocessor.include.ab3"
0000720C <preprocessor.include.ab3@114> XINCLUDE "/Shared/preprocessor.include.ab3"
00007228 <preprocessor.include.ab3@115> XINCLUDE "/Shared/preprocessor.include.ab3"
00007244 <preprocessor.include.ab3@116> XINCLUDE "/Shared/preprocessor.include.ab3"
00007260 <preprocessor.include.ab3@117> XINCLUDE "/Shared/preprocessor.include.ab3"
0000727C <preprocessor.include.ab3@118> XINCLUDE "/Shared/preprocessor.include.ab3"
00007298 <preprocessor.include.ab3@119> XINCLUDE "/Shared/preprocessor.include.ab3"
000072B4 <preprocessor.include.ab3@120> XINCLUDE "/Shared/preprocessor.include.ab3"
000072D0 <preprocessor.include.ab3@121> XINCLUDE "/Shared/preprocessor.include.ab3"
000072EC <preprocessor.include.ab3@122> XINCLUDE "/Shared/preprocessor.include.ab3"
00007308 <preprocessor.include.ab3@123> XINCLUDE "/Shared/preprocessor.include.ab3"
00007324 <preprocessor.include.ab3@124> XINCLUDE "/Shared/preprocessor.include.ab3"
00007340 <preprocessor.include.ab3@125> XINCLUDE "/Shared/preprocessor.include.ab3"
0000735C <preprocessor.include.ab3@126> XINCLUDE "/Shared/preprocessor.include.ab3"
00007378 <preprocessor.include.ab3@127> XINCLUDE "/Shared/preprocessor.include.ab3"
00007394 <preprocessor.include.ab3@128> XINCLUDE "/Shared/preprocessor.include.ab3"
000073B0 <preprocessor.include.ab3@129> XINCLUDE "/Shared/preprocessor.include.ab3"
000073CC <preprocessor.include.ab3@130> XINCLUDE "/Shared/preprocessor.include.ab3"
000073E8 <preprocessor.include.ab3@131> XINCLUDE "/Shared/preprocessor.include.ab3"
00007404 <preprocessor.include.ab3@132> XINCLUDE "/Shared/preprocessor.include.ab3"
00007420 <preprocessor.include.ab3@133> XINCLUDE "/Shared/preprocessor.include.ab3"
0000743C <preprocessor.include.ab3@134> XINCLUDE "/Shared/preprocessor.include.ab3"
00007458 <preprocessor.include.ab3@135> XINCLUDE "/Shared/preprocessor.include.ab3"
00007474 <preprocessor.include.ab3@136> XINCLUDE "/Shared/preprocessor.include.ab3"
00007490 <preprocessor.include.ab3@137> XINCLUDE "/Shared/preprocessor.include.ab3"
000074AC <preprocessor.include.ab3@138> XINCLUDE "/Shared/preprocessor.include.ab3"
000074C8 <preprocessor.include.ab3@139> XINCLUDE "/Shared/preprocessor.include.ab3"
000074E4 <preprocessor.include.ab3@140> XINCLUDE "/Shared/preprocessor.include.ab3"
00007500 <preprocessor.include.ab3@141> XINCLUDE "/Shared/preprocessor.include.ab3"
0000751C <preprocessor.include.ab3@142> XINCLUDE "/Shared/preprocessor.include.ab3"
00007538 <preprocessor.include.ab3@143> XINCLUDE "/Shared/preprocessor.include.ab3"
00007554 <preprocessor.include.ab3@144> XINCLUDE "/Shared/preprocessor.include.ab3"
00007570 <preprocessor.include.ab3@145> XINCLUDE "/Shared/preprocessor.include.ab3"
0000758C <preprocessor.include.ab3@146> XINCLUDE "/Shared/preprocessor.include.ab3"
000075A8 <preprocessor.include.ab3@147> XINCLUDE "/Shared/preprocessor.include.ab3"
000075C4 <preprocessor.include.ab3@148> XINCLUDE "/Shared/preprocessor.include.ab3"
000075E0 <preprocessor.include.ab3@149> XINCLUDE "/Shared/preprocessor.include.ab3"
000075FC <preprocessor.include.ab3@150> XINCLUDE "/Shared/preprocessor.include.ab3"
00007618 <preprocessor.include.ab3@151> XINCLUDE "/Shared/preprocessor.include.ab3"
00007634 <preprocessor.include.ab3@152> XINCLUDE "/Shared/preprocessor.include.ab3"
00007650 <preprocessor.include.ab3@153> XINCLUDE "/Shared/preprocessor.include.ab3"
0000766C <preprocessor.include.ab3@154> XINCLUDE "/Shared/preprocessor.include.ab3"
00007688 <preprocessor.include.ab3@155> XINCLUDE "/Shared/preprocessor.include.ab3"
000076A4 <preprocessor.include.ab3@156> XINCLUDE "/Shared/preprocessor.include.ab3"
000076C0 <preprocessor.include.ab3@157> XINCLUDE "/Shared/preprocessor.include.ab3"
000076DC <preprocessor.include.ab3@158> XINCLUDE "/Shared/preprocessor.include.ab3"
000076F8 <preprocessor.include.ab3@159> XINCLUDE "/Shared/preprocessor.include.ab3"
00007714 <preprocessor.include.ab3@160> XINCLUDE "/Shared/preprocessor.include.ab3"
00007730 <preprocessor.include.ab3@161> XINCLUDE "/Shared/preprocessor.include.ab3"
0000774C <preprocessor.include.ab3@162> XINCLUDE "/Shared/preprocessor.include.ab3"
00007768 <preprocessor.include.ab3@163> XINCLUDE "/Shared/preprocessor.include.ab3"
00007784 <preprocessor.include.ab3@164> XINCLUDE "/Shared/preprocessor.include.ab3"
000077A0 <preprocessor.include.ab3@165> XINCLUDE "/Shared/preprocessor.include.ab3"
000077BC <preprocessor.include.ab3@166> XINCLUDE "/Shared/preprocessor.include.ab3"
000077D8 <preprocessor.include.ab3@167> XINCLUDE "/Shared/preprocessor.include.ab3"
000077F4 <preprocessor.include.ab3@168> XINCLUDE "/Shared/preprocessor.include.ab3"
00007810 <preprocessor.include.ab3@169> XINCLUDE "/Shared/preprocessor.include.ab3"
0000782C <preprocessor.include.ab3@170> XINCLUDE "/Shared/preprocessor.include.ab3"
00007848 <preprocessor.include.ab3@171> XINCLUDE "/Shared/preprocessor.include.ab3"
00007864 <preprocessor.include.ab3@172> XINCLUDE "/Shared/preprocessor.include.ab3"
00007880 <preprocessor.include.ab3@173> XINCLUDE "/Shared/preprocessor.include.ab3"
0000789C <preprocessor.include.ab3@174> XINCLUDE "/Shared/preprocessor.include.ab3"
000078B8 <preprocessor.include.ab3@175> XINCLUDE "/Shared/preprocessor.include.ab3"
000078D4 <preprocessor.include.ab3@176> XINCLUDE "/Shared/preprocessor.include.ab3"
000078F0 <preprocessor.include.ab3@177> XINCLUDE "/Shared/preprocessor.include.ab3"
0000790C <preprocessor.include.ab3@178> XINCLUDE "/Shared/preprocessor.include.ab3"
00007928 <preprocessor.include.ab3@179> XINCLUDE "/Shared/preprocessor.include.ab3"
00007944 <preprocessor.include.ab3@180> XINCLUDE "/Shared/preprocessor.include.ab3"
00007960 <preprocessor.include.ab3@181> XINCLUDE "/Shared/preprocessor.include.ab3"
0000797C <preprocessor.include.ab3@182> XINCLUDE "/Shared/preprocessor.include.ab3"
00007998 <preprocessor.include.ab3@183> XINCLUDE "/Shared/preprocessor.include.ab3"
000079B4 <preprocessor.include.ab3@184> XINCLUDE "/Shared/preprocessor.include.ab3"
000079D0 <preprocessor.include.ab3@185> XINCLUDE "/Shared/preprocessor.include.ab3"
000079EC <preprocessor.include.ab3@186> XINCLUDE "/Shared/preprocessor.include.ab3"
00007A08 <preprocessor.include.ab3@187> XINCLUDE "/Shared/preprocessor.include.ab3"
00007A24 <preprocessor.include.ab3@188> XINCLUDE "/Shared/preprocessor.include.ab3"
00007A40 <preprocessor.include.ab3@189> XINCLUDE "/Shared/preprocessor.include.ab3"
00007A5C <preprocessor.include.ab3@190> XINCLUDE "/Shared/preprocessor.include.ab3"
00007A78 <preprocessor.include.ab3@191> XINCLUDE "/Shared/preprocessor.include.ab3"
00007A94 <preprocessor.include.ab3@192> XINCLUDE "/Shared/preprocessor.include.ab3"
00007AB0 <preprocessor.include.ab3@193> XINCLUDE "/Shared/preprocessor.include.ab3"
00007ACC <preprocessor.include.ab3@194> XINCLUDE "/Shared/preprocessor.include.ab3"
00007AE8 <preprocessor.include.ab3@195> XINCLUDE "/Shared/preprocessor.include.ab3"
00007B04 <preprocessor.include.ab3@196> XINCLUDE "/Shared/preprocessor.include.ab3"
00007B20 <preprocessor.include.ab3@197> XINCLUDE "/Shared/preprocessor.include.ab3"
00007B3C <preprocessor.include.ab3@198> XINCLUDE "/Shared/preprocessor.include.ab3"
00007B58 <preprocessor.include.ab3@199> XINCLUDE "/Shared/preprocessor.include.ab3"
00007B74 <preprocessor.include.ab3@200> XINCLUDE "/Shared/preprocessor.include.ab3"
00007B90 <preprocessor.include.ab3@201> XINCLUDE "/Shared/preprocessor.include.ab3"
00007BAC <preprocessor.include.ab3@202> XINCLUDE "/Shared/preprocessor.include.ab3"
00007BC8 <preprocessor.include.ab3@203> XINCLUDE "/Shared/preprocessor.include.ab3"
00007BE4 <preprocessor.include.ab3@204> XINCLUDE "/Shared/preprocessor.include.ab3"
00007C00 <preprocessor.include.ab3@205> XINCLUDE "/Shared/preprocessor.include.ab3"
00007C1C <preprocessor.include.ab3@206> XINCLUDE "/Shared/preprocessor.include.ab3"
00007C38 <preprocessor.include.ab3@207> XINCLUDE "/Shared/preprocessor.include.ab3"
00007C40 <preprocessor.include.ab3@208> XINCLUDE "/Shared/preprocessor.include.ab3"
00007C4A <preprocessor.include.ab3@209> XINCLUDE "/Shared/preprocessor.include.ab3"
00007C54 <preprocessor.include.ab3@211> XINCLUDE "/Shared/preprocessor.include.ab3"
00007C5A <preprocessor.include.ab3@212> XINCLUDE "/Shared/preprocessor.include.ab3"
00007C88 <preprocessor.include.ab3@247> XINCLUDE "/Shared/preprocessor.include.ab3"
00007CA4 <preprocessor.include.ab3@248> XINCLUDE "/Shared/preprocessor.include.ab3"
00007CD6 <preprocessor.include.ab3@249> XINCLUDE "/Shared/preprocessor.include.ab3"
00007CE0 <preprocessor.include.ab3@250> XINCLUDE "/Shared/preprocessor.include.ab3"
00007D02 <preprocessor.include.ab3@251> XINCLUDE "/Shared/preprocessor.include.ab3"
00007D0C <preprocessor.include.ab3@252> XINCLUDE "/Shared/preprocessor.include.ab3"
00007D16 <preprocessor.include.ab3@253> XINCLUDE "/Shared/preprocessor.include.ab3"
00007D20 <preprocessor.include.ab3@255> XINCLUDE "/Shared/preprocessor.include.ab3"
00007D3A <preprocessor.include.ab3@256> XINCLUDE "/Shared/preprocessor.include.ab3"
00007D68 <preprocessor.include.ab3@259> XINCLUDE "/Shared/preprocessor.include.ab3"
00007D84 <preprocessor.include.ab3@260> XINCLUDE "/Shared/preprocessor.include.ab3"
00007D92 <preprocessor.include.ab3@261> XINCLUDE "/Shared/preprocessor.include.ab3"
00007DCC <preprocessor.include.ab3@262> XINCLUDE "/Shared/preprocessor.include.ab3"
00007DD4 <preprocessor.include.ab3@264> XINCLUDE "/Shared/preprocessor.include.ab3"
00007DEE <preprocessor.include.ab3@265> XINCLUDE "/Shared/preprocessor.include.ab3"
00007E14 <preprocessor.include.ab3@272> XINCLUDE "/Shared/preprocessor.include.ab3"
00007E36 <preprocessor.include.ab3@273> XINCLUDE "/Shared/preprocessor.include.ab3"
00007E5A <preprocessor.include.ab3@274> XINCLUDE "/Shared/preprocessor.include.ab3"
00007E60 <preprocessor.include.ab3@275> XINCLUDE "/Shared/preprocessor.include.ab3"
00007E6E <preprocessor.include.ab3@276> XINCLUDE "/Shared/preprocessor.include.ab3"
00007E74 <preprocessor.include.ab3@277> XINCLUDE "/Shared/preprocessor.include.ab3"
00007E7C <preprocessor.include.ab3@278> XINCLUDE "/Shared/preprocessor.include.ab3"
00007E82 <preprocessor.include.ab3@279> XINCLUDE "/Shared/preprocessor.include.ab3"
00007E8A <preprocessor.include.ab3@280> XINCLUDE "/Shared/preprocessor.include.ab3"
00007E9E <preprocessor.include.ab3@282> XINCLUDE "/Shared/preprocessor.include.ab3"
00007EC4 <preprocessor.include.ab3@283> XINCLUDE "/Shared/preprocessor.include.ab3"
00007EEC <preprocessor.include.ab3@284> XINCLUDE "/Shared/preprocessor.include.ab3"
00007EF6 <preprocessor.include.ab3@286> XINCLUDE "/Shared/preprocessor.include.ab3"
00007F0A <preprocessor.include.ab3@287> XINCLUDE "/Shared/preprocessor.include.ab3"
00007F1E <preprocessor.include.ab3@288> XINCLUDE "/Shared/preprocessor.include.ab3"
00007F2E <preprocessor.include.ab3@289> XINCLUDE "/Shared/preprocessor.include.ab3"
00007F48 <preprocessor.include.ab3@290> XINCLUDE "/Shared/preprocessor.include.ab3"
00007F76 <preprocessor.include.ab3@291> XINCLUDE "/Shared/preprocessor.include.ab3"
00007F8A <preprocessor.include.ab3@292> XINCLUDE "/Shared/preprocessor.include.ab3"
00007FB2 <preprocessor.include.ab3@293> XINCLUDE "/Shared/preprocessor.include.ab3"
00007FB8 <preprocessor.include.ab3@294> XINCLUDE "/Shared/preprocessor.include.ab3"
00007FC0 <preprocessor.include.ab3@295> XINCLUDE "/Shared/preprocessor.include.ab3"
00007FC6 <preprocessor.include.ab3@297> XINCLUDE "/Shared/preprocessor.include.ab3"
00007FEE <preprocessor.include.ab3@298> XINCLUDE "/Shared/preprocessor.include.ab3"
00007FF8 <preprocessor.include.ab3@300> XINCLUDE "/Shared/preprocessor.include.ab3"
00008006 <preprocessor.include.ab3@301> XINCLUDE "/Shared/preprocessor.include.ab3"
00008024 <preprocessor.include.ab3@302> XINCLUDE "/Shared/preprocessor.include.ab3"
00008032 <preprocessor.include.ab3@303> XINCLUDE "/Shared/preprocessor.include.ab3"
0000803A <preprocessor.include.ab3@304> XINCLUDE "/Shared/preprocessor.include.ab3"
00008040 <preprocessor.include.ab3@305> XINCLUDE "/Shared/preprocessor.include.ab3"
00008054 <preprocessor.include.ab3@309> XINCLUDE "/Shared/preprocessor.include.ab3"
0000805E <preprocessor.include.ab3@310> XINCLUDE "/Shared/preprocessor.include.ab3"
0000806C <preprocessor.include.ab3@311> XINCLUDE "/Shared/preprocessor.include.ab3"
00008086 <preprocessor.include.ab3@312> XINCLUDE "/Shared/preprocessor.include.ab3"
0000808C <preprocessor.include.ab3@314> XINCLUDE "/Shared/preprocessor.include.ab3"
00008094 <preprocessor.include.ab3@315> XINCLUDE "/Shared/preprocessor.include.ab3"
0000809A <preprocessor.include.ab3@317> XINCLUDE "/Shared/preprocessor.include.ab3"
000080AE <preprocessor.include.ab3@318> XINCLUDE "/Shared/preprocessor.include.ab3"
000080B8 <preprocessor.include.ab3@319> XINCLUDE "/Shared/preprocessor.include.ab3"
000080C0 <preprocessor.include.ab3@320> XINCLUDE "/Shared/preprocessor.include.ab3"
000080D4 <preprocessor.include.ab3@321> XINCLUDE "/Shared/preprocessor.include.ab3"
000080E8 <preprocessor.include.ab3@326> XINCLUDE "/Shared/preprocessor.include.ab3"
000080FC <preprocessor.include.ab3@327> XINCLUDE "/Shared/preprocessor.include.ab3"
0000811A <preprocessor.include.ab3@329> XINCLUDE "/Shared/preprocessor.include.ab3"
00008128 <preprocessor.include.ab3@330> XINCLUDE "/Shared/preprocessor.include.ab3"
00008138 <preprocessor.include.ab3@331> XINCLUDE "/Shared/preprocessor.include.ab3"
00008160 <preprocessor.include.ab3@332> XINCLUDE "/Shared/preprocessor.include.ab3"
00008182 <preprocessor.include.ab3@333> XINCLUDE "/Shared/preprocessor.include.ab3"
00008196 <preprocessor.include.ab3@336> XINCLUDE "/Shared/preprocessor.include.ab3"
000081B4 <preprocessor.include.ab3@338> XINCLUDE "/Shared/preprocessor.include.ab3"
000081C2 <preprocessor.include.ab3@339> XINCLUDE "/Shared/preprocessor.include.ab3"
000081E8 <preprocessor.include.ab3@340> XINCLUDE "/Shared/preprocessor.include.ab3"
00008210 <preprocessor.include.ab3@341> XINCLUDE "/Shared/preprocessor.include.ab3"
00008232 <preprocessor.include.ab3@342> XINCLUDE "/Shared/preprocessor.include.ab3"
00008262 <preprocessor.include.ab3@345> XINCLUDE "/Shared/preprocessor.include.ab3"
00008290 <preprocessor.include.ab3@349> XINCLUDE "/Shared/preprocessor.include.ab3"
000082C2 <preprocessor.include.ab3@350> XINCLUDE "/Shared/preprocessor.include.ab3"
000082D0 <preprocessor.include.ab3@352> XINCLUDE "/Shared/preprocessor.include.ab3"
000082D6 <preprocessor.include.ab3@353> XINCLUDE "/Shared/preprocessor.include.ab3"
000082E6 <preprocessor.include.ab3@356> XINCLUDE "/Shared/preprocessor.include.ab3"
000082EC <preprocessor.include.ab3@357> XINCLUDE "/Shared/preprocessor.include.ab3"
00008312 <preprocessor.include.ab3@360> XINCLUDE "/Shared/preprocessor.include.ab3"
00008334 <preprocessor.include.ab3@361> XINCLUDE "/Shared/preprocessor.include.ab3"
0000835C <preprocessor.include.ab3@362> XINCLUDE "/Shared/preprocessor.include.ab3"
0000837C <preprocessor.include.ab3@363> XINCLUDE "/Shared/preprocessor.include.ab3"
0000839E <preprocessor.include.ab3@364> XINCLUDE "/Shared/preprocessor.include.ab3"
000083A4 <preprocessor.include.ab3@365> XINCLUDE "/Shared/preprocessor.include.ab3"
000083B2 <preprocessor.include.ab3@366> XINCLUDE "/Shared/preprocessor.include.ab3"
000083C0 <preprocessor.include.ab3@367> XINCLUDE "/Shared/preprocessor.include.ab3"
000083C6 <preprocessor.include.ab3@368> XINCLUDE "/Shared/preprocessor.include.ab3"
000083CE <preprocessor.include.ab3@369> XINCLUDE "/Shared/preprocessor.include.ab3"
000083EC <preprocessor.include.ab3@370> XINCLUDE "/Shared/preprocessor.include.ab3"
00008400 <preprocessor.include.ab3@371> XINCLUDE "/Shared/preprocessor.include.ab3"
00008410 <preprocessor.include.ab3@372> XINCLUDE "/Shared/preprocessor.include.ab3"
00008426 <preprocessor.include.ab3@374> XINCLUDE "/Shared/preprocessor.include.ab3"
0000843E <preprocessor.include.ab3@376> XINCLUDE "/Shared/preprocessor.include.ab3"
0000845A <preprocessor.include.ab3@377> XINCLUDE "/Shared/preprocessor.include.ab3"
00008464 <preprocessor.include.ab3@378> XINCLUDE "/Shared/preprocessor.include.ab3"
00008480 <preprocessor.include.ab3@379> XINCLUDE "/Shared/preprocessor.include.ab3"
00008492 <preprocessor.include.ab3@380> XINCLUDE "/Shared/preprocessor.include.ab3"
000084C0 <preprocessor.include.ab3@381> XINCLUDE "/Shared/preprocessor.include.ab3"
000084FC <preprocessor.include.ab3@382> XINCLUDE "/Shared/preprocessor.include.ab3"
0000850C <preprocessor.include.ab3@383> XINCLUDE "/Shared/preprocessor.include.ab3"
00008512 <preprocessor.include.ab3@384> XINCLUDE "/Shared/preprocessor.include.ab3"
00008518 <preprocessor.include.ab3@387> XINCLUDE "/Shared/preprocessor.include.ab3"
00008530 <preprocessor.include.ab3@388> XINCLUDE "/Shared/preprocessor.include.ab3"
00008540 <preprocessor.include.ab3@389> XINCLUDE "/Shared/preprocessor.include.ab3"
000085C6 <preprocessor.include.ab3@390> XINCLUDE "/Shared/preprocessor.include.ab3"
00008600 <preprocessor.include.ab3@391> XINCLUDE "/Shared/preprocessor.include.ab3"
00008636 <preprocessor.include.ab3@392> XINCLUDE "/Shared/preprocessor.include.ab3"
00008646 <preprocessor.include.ab3@393> XINCLUDE "/Shared/preprocessor.include.ab3"
00008654 <preprocessor.include.ab3@395> XINCLUDE "/Shared/preprocessor.include.ab3"
0000865A <preprocessor.include.ab3@396> XINCLUDE "/Shared/preprocessor.include.ab3"
0000866A <preprocessor.include.ab3@397> XINCLUDE "/Shared/preprocessor.include.ab3"
00008694 <preprocessor.include.ab3@398> XINCLUDE "/Shared/preprocessor.include.ab3"
0000869A <preprocessor.include.ab3@399> XINCLUDE "/Shared/preprocessor.include.ab3"
000086C6 <preprocessor.include.ab3@400> XINCLUDE "/Shared/preprocessor.include.ab3"
000086D6 <preprocessor.include.ab3@403> XINCLUDE "/Shared/preprocessor.include.ab3"
000086E6 <preprocessor.include.ab3@405> XINCLUDE "/Shared/preprocessor.include.ab3"
00008704 <preprocessor.include.ab3@406> XINCLUDE "/Shared/preprocessor.include.ab3"
00008712 <preprocessor.include.ab3@407> XINCLUDE "/Shared/preprocessor.include.ab3"
00008748 <preprocessor.include.ab3@408> XINCLUDE "/Shared/preprocessor.include.ab3"
0000876C <preprocessor.include.ab3@409> XINCLUDE "/Shared/preprocessor.include.ab3"
00008780 <preprocessor.include.ab3@412> XINCLUDE "/Shared/preprocessor.include.ab3"
00008790 <preprocessor.include.ab3@414> XINCLUDE "/Shared/preprocessor.include.ab3"
000087AE <preprocessor.include.ab3@415> XINCLUDE "/Shared/preprocessor.include.ab3"
000087BC <preprocessor.include.ab3@416> XINCLUDE "/Shared/preprocessor.include.ab3"
000087E0 <preprocessor.include.ab3@417> XINCLUDE "/Shared/preprocessor.include.ab3"
00008804 <preprocessor.include.ab3@418> XINCLUDE "/Shared/preprocessor.include.ab3"
00008812 <preprocessor.include.ab3@422> XINCLUDE "/Shared/preprocessor.include.ab3"
00008820 <preprocessor.include.ab3@423> XINCLUDE "/Shared/preprocessor.include.ab3"
00008840 <preprocessor.include.ab3@424> XINCLUDE "/Shared/preprocessor.include.ab3"
0000884E <preprocessor.include.ab3@425> XINCLUDE "/Shared/preprocessor.include.ab3"
00008854 <preprocessor.include.ab3@426> XINCLUDE "/Shared/preprocessor.include.ab3"
0000885A <preprocessor.include.ab3@429> XINCLUDE "/Shared/preprocessor.include.ab3"
00008868 <preprocessor.include.ab3@431> XINCLUDE "/Shared/preprocessor.include.ab3"
00008876 <preprocessor.include.ab3@432> XINCLUDE "/Shared/preprocessor.include.ab3"
00008896 <preprocessor.include.ab3@433> XINCLUDE "/Shared/preprocessor.include.ab3"
000088A4 <preprocessor.include.ab3@434> XINCLUDE "/Shared/preprocessor.include.ab3"
000088AA <preprocessor.include.ab3@435> XINCLUDE "/Shared/preprocessor.include.ab3"
000088BA <preprocessor.include.ab3@440> XINCLUDE "/Shared/preprocessor.include.ab3"
000088C4 <preprocessor.include.ab3@442> XINCLUDE "/Shared/preprocessor.include.ab3"
000088D8 <preprocessor.include.ab3@443> XINCLUDE "/Shared/preprocessor.include.ab3"
000088FE <preprocessor.include.ab3@448> XINCLUDE "/Shared/preprocessor.include.ab3"
00008920 <preprocessor.include.ab3@449> XINCLUDE "/Shared/preprocessor.include.ab3"
00008948 <preprocessor.include.ab3@450> XINCLUDE "/Shared/preprocessor.include.ab3"
0000894E <preprocessor.include.ab3@451> XINCLUDE "/Shared/preprocessor.include.ab3"
0000895C <preprocessor.include.ab3@452> XINCLUDE "/Shared/preprocessor.include.ab3"
00008962 <preprocessor.include.ab3@453> XINCLUDE "/Shared/preprocessor.include.ab3"
00008976 <preprocessor.include.ab3@454> XINCLUDE "/Shared/preprocessor.include.ab3"
00008986 <preprocessor.include.ab3@455> XINCLUDE "/Shared/preprocessor.include.ab3"
0000899C <preprocessor.include.ab3@457> XINCLUDE "/Shared/preprocessor.include.ab3"
000089B4 <preprocessor.include.ab3@459> XINCLUDE "/Shared/preprocessor.include.ab3"
000089D0 <preprocessor.include.ab3@460> XINCLUDE "/Shared/preprocessor.include.ab3"
000089DA <preprocessor.include.ab3@461> XINCLUDE "/Shared/preprocessor.include.ab3"
000089F6 <preprocessor.include.ab3@462> XINCLUDE "/Shared/preprocessor.include.ab3"
00008A24 <preprocessor.include.ab3@463> XINCLUDE "/Shared/preprocessor.include.ab3"
00008A60 <preprocessor.include.ab3@464> XINCLUDE "/Shared/preprocessor.include.ab3"
00008A70 <preprocessor.include.ab3@465> XINCLUDE "/Shared/preprocessor.include.ab3"
00008A7E <preprocessor.include.ab3@467> XINCLUDE "/Shared/preprocessor.include.ab3"
00008A84 <preprocessor.include.ab3@468> XINCLUDE "/Shared/preprocessor.include.ab3"
00008A94 <preprocessor.include.ab3@469> XINCLUDE "/Shared/preprocessor.include.ab3"
00008ABE <preprocessor.include.ab3@470> XINCLUDE "/Shared/preprocessor.include.ab3"
00008AC4 <preprocessor.include.ab3@471> XINCLUDE "/Shared/preprocessor.include.ab3"
00008AF0 <preprocessor.include.ab3@472> XINCLUDE "/Shared/preprocessor.include.ab3"
00008B00 <preprocessor.include.ab3@474> XINCLUDE "/Shared/preprocessor.include.ab3"
00008B10 <preprocessor.include.ab3@476> XINCLUDE "/Shared/preprocessor.include.ab3"
00008B2E <preprocessor.include.ab3@477> XINCLUDE "/Shared/preprocessor.include.ab3"
00008B3C <preprocessor.include.ab3@478> XINCLUDE "/Shared/preprocessor.include.ab3"
00008B72 <preprocessor.include.ab3@479> XINCLUDE "/Shared/preprocessor.include.ab3"
00008B96 <preprocessor.include.ab3@480> XINCLUDE "/Shared/preprocessor.include.ab3"
00008BAA <preprocessor.include.ab3@483> XINCLUDE "/Shared/preprocessor.include.ab3"
00008BBA <preprocessor.include.ab3@485> XINCLUDE "/Shared/preprocessor.include.ab3"
00008BD8 <preprocessor.include.ab3@486> XINCLUDE "/Shared/preprocessor.include.ab3"
00008BE6 <preprocessor.include.ab3@487> XINCLUDE "/Shared/preprocessor.include.ab3"
00008C0A <preprocessor.include.ab3@488> XINCLUDE "/Shared/preprocessor.include.ab3"
00008C2E <preprocessor.include.ab3@489> XINCLUDE "/Shared/preprocessor.include.ab3"
00008C34 <preprocessor.include.ab3@493> XINCLUDE "/Shared/preprocessor.include.ab3"
00008C44 <preprocessor.include.ab3@494> XINCLUDE "/Shared/preprocessor.include.ab3"
00008C4A <preprocessor.include.ab3@495> XINCLUDE "/Shared/preprocessor.include.ab3"
00008C6C <preprocessor.include.ab3@499> XINCLUDE "/Shared/preprocessor.include.ab3"
00008C74 <preprocessor.include.ab3@500> XINCLUDE "/Shared/preprocessor.include.ab3"
00008CAA <preprocessor.include.ab3@501> XINCLUDE "/Shared/preprocessor.include.ab3"
00008CC6 <preprocessor.include.ab3@502> XINCLUDE "/Shared/preprocessor.include.ab3"
00008CCC <preprocessor.include.ab3@503> XINCLUDE "/Shared/preprocessor.include.ab3"
00008D02 <preprocessor.include.ab3@507> XINCLUDE "/Shared/preprocessor.include.ab3"
00008D1E <preprocessor.include.ab3@508> XINCLUDE "/Shared/preprocessor.include.ab3"
00008D46 <preprocessor.include.ab3@509> XINCLUDE "/Shared/preprocessor.include.ab3"
00008D64 <preprocessor.include.ab3@510> XINCLUDE "/Shared/preprocessor.include.ab3"
00008D82 <preprocessor.include.ab3@511> XINCLUDE "/Shared/preprocessor.include.ab3"
00008DB0 <preprocessor.include.ab3@512> XINCLUDE "/Shared/preprocessor.include.ab3"
00008E12 <preprocessor.include.ab3@513> XINCLUDE "/Shared/preprocessor.include.ab3"
00008E2C <preprocessor.include.ab3@514> XINCLUDE "/Shared/preprocessor.include.ab3"
00008E46 <preprocessor.include.ab3@518> XINCLUDE "/Shared/preprocessor.include.ab3"
00008E50 <preprocessor.include.ab3@519> XINCLUDE "/Shared/preprocessor.include.ab3"
00008E8E <preprocessor.include.ab3@520> XINCLUDE "/Shared/preprocessor.include.ab3"
00008E92 <preprocessor.include.ab3@521> XINCLUDE "/Shared/preprocessor.include.ab3"
00008E9C <preprocessor.include.ab3@523> XINCLUDE "/Shared/preprocessor.include.ab3"
00008ECA <preprocessor.include.ab3@524> XINCLUDE "/Shared/preprocessor.include.ab3"
00008EEA <preprocessor.include.ab3@525> XINCLUDE "/Shared/preprocessor.include.ab3"
00008F02 <preprocessor.include.ab3@526> XINCLUDE "/Shared/preprocessor.include.ab3"
00008F60 <preprocessor.include.ab3@527> XINCLUDE "/Shared/preprocessor.include.ab3"
00008F8C <preprocessor.include.ab3@528> XINCLUDE "/Shared/preprocessor.include.ab3"
00008F9E <preprocessor.include.ab3@529> XINCLUDE "/Shared/preprocessor.include.ab3"
00008FAE <preprocessor.include.ab3@530> XINCLUDE "/Shared/preprocessor.include.ab3"
00008FC6 <preprocessor.include.ab3@531> XINCLUDE "/Shared/preprocessor.include.ab3"
00008FCC <preprocessor.include.ab3@533> XINCLUDE "/Shared/preprocessor.include.ab3"
00009006 <preprocessor.include.ab3@534> XINCLUDE "/Shared/preprocessor.include.ab3"
00009010 <preprocessor.include.ab3@536> XINCLUDE "/Shared/preprocessor.include.ab3"
00009016 <preprocessor.include.ab3@537> XINCLUDE "/Shared/preprocessor.include.ab3"
00009020 <preprocessor.include.ab3@538> XINCLUDE "/Shared/preprocessor.include.ab3"
00009032 <preprocessor.include.ab3@539> XINCLUDE "/Shared/preprocessor.include.ab3"
00009032 <AmiBlitz3.ab3@87> XINCLUDE "/Shared/preprocessor.include.ab3"
00009032 <logging.include.ab3@1> XINCLUDE "PE/logging.include.ab3"
00009032 <PE_Tools.include.ab3@1> XINCLUDE "PE/logging.include.ab3"
00009056 <PE_Tools.include.ab3@75> XINCLUDE "PE/logging.include.ab3"
0000905E <PE_Tools.include.ab3@84> XINCLUDE "PE/logging.include.ab3"
0000908C <PE_Tools.include.ab3@85> XINCLUDE "PE/logging.include.ab3"
000090BA <PE_Tools.include.ab3@86> XINCLUDE "PE/logging.include.ab3"
0000912A <PE_Tools.include.ab3@87> XINCLUDE "PE/logging.include.ab3"
00009138 <PE_Tools.include.ab3@88> XINCLUDE "PE/logging.include.ab3"
00009188 <PE_Tools.include.ab3@89> XINCLUDE "PE/logging.include.ab3"
00009188 <logging.include.ab3@11> XINCLUDE "PE/logging.include.ab3"
00009188 <file.include.ab3@1> XINCLUDE "PE/logging.include.ab3"
00009188 <asl.include.ab3@1> XINCLUDE "PE/logging.include.ab3"
000091AC <asl.include.ab3@93> XINCLUDE "PE/logging.include.ab3"
000091D4 <asl.include.ab3@94> XINCLUDE "PE/logging.include.ab3"
000091F8 <asl.include.ab3@95> XINCLUDE "PE/logging.include.ab3"
00009226 <asl.include.ab3@294> XINCLUDE "PE/logging.include.ab3"
00009444 <asl.include.ab3@296> XINCLUDE "PE/logging.include.ab3"
00009472 <asl.include.ab3@298> XINCLUDE "PE/logging.include.ab3"
0000949E <asl.include.ab3@300> XINCLUDE "PE/logging.include.ab3"
000094DA <asl.include.ab3@301> XINCLUDE "PE/logging.include.ab3"
00009506 <asl.include.ab3@302> XINCLUDE "PE/logging.include.ab3"
00009532 <asl.include.ab3@303> XINCLUDE "PE/logging.include.ab3"
0000955E <asl.include.ab3@304> XINCLUDE "PE/logging.include.ab3"
0000958A <asl.include.ab3@305> XINCLUDE "PE/logging.include.ab3"
000095B6 <asl.include.ab3@306> XINCLUDE "PE/logging.include.ab3"
000095E2 <asl.include.ab3@307> XINCLUDE "PE/logging.include.ab3"
0000960E <asl.include.ab3@308> XINCLUDE "PE/logging.include.ab3"
0000963A <asl.include.ab3@309> XINCLUDE "PE/logging.include.ab3"
000096C4 <asl.include.ab3@311> XINCLUDE "PE/logging.include.ab3"
0000974E <asl.include.ab3@312> XINCLUDE "PE/logging.include.ab3"
000097EC <asl.include.ab3@313> XINCLUDE "PE/logging.include.ab3"
00009836 <asl.include.ab3@314> XINCLUDE "PE/logging.include.ab3"
00009876 <asl.include.ab3@315> XINCLUDE "PE/logging.include.ab3"
0000987C <asl.include.ab3@316> XINCLUDE "PE/logging.include.ab3"
000098C6 <asl.include.ab3@319> XINCLUDE "PE/logging.include.ab3"
00009906 <asl.include.ab3@320> XINCLUDE "PE/logging.include.ab3"
00009930 <asl.include.ab3@321> XINCLUDE "PE/logging.include.ab3"
00009936 <asl.include.ab3@322> XINCLUDE "PE/logging.include.ab3"
00009960 <asl.include.ab3@323> XINCLUDE "PE/logging.include.ab3"
0000998A <asl.include.ab3@325> XINCLUDE "PE/logging.include.ab3"
000099B4 <asl.include.ab3@327> XINCLUDE "PE/logging.include.ab3"
000099BE <asl.include.ab3@328> XINCLUDE "PE/logging.include.ab3"
000099DC <asl.include.ab3@329> XINCLUDE "PE/logging.include.ab3"
000099FE <asl.include.ab3@330> XINCLUDE "PE/logging.include.ab3"
00009A2C <asl.include.ab3@331> XINCLUDE "PE/logging.include.ab3"
00009A5A <asl.include.ab3@332> XINCLUDE "PE/logging.include.ab3"
00009A88 <asl.include.ab3@333> XINCLUDE "PE/logging.include.ab3"
00009ACE <asl.include.ab3@336> XINCLUDE "PE/logging.include.ab3"
00009B14 <asl.include.ab3@337> XINCLUDE "PE/logging.include.ab3"
00009B5A <asl.include.ab3@338> XINCLUDE "PE/logging.include.ab3"
00009B92 <asl.include.ab3@340> XINCLUDE "PE/logging.include.ab3"
00009C90 <asl.include.ab3@341> XINCLUDE "PE/logging.include.ab3"
00009CAE <asl.include.ab3@343> XINCLUDE "PE/logging.include.ab3"
00009CB8 <asl.include.ab3@345> XINCLUDE "PE/logging.include.ab3"
00009CDE <asl.include.ab3@346> XINCLUDE "PE/logging.include.ab3"
00009CF0 <asl.include.ab3@348> XINCLUDE "PE/logging.include.ab3"
00009D1E <asl.include.ab3@349> XINCLUDE "PE/logging.include.ab3"
00009D46 <asl.include.ab3@350> XINCLUDE "PE/logging.include.ab3"
00009D58 <asl.include.ab3@351> XINCLUDE "PE/logging.include.ab3"
00009DAE <asl.include.ab3@352> XINCLUDE "PE/logging.include.ab3"
00009DE4 <asl.include.ab3@353> XINCLUDE "PE/logging.include.ab3"
00009DF4 <asl.include.ab3@355> XINCLUDE "PE/logging.include.ab3"
00009DFA <asl.include.ab3@356> XINCLUDE "PE/logging.include.ab3"
00009E0C <asl.include.ab3@357> XINCLUDE "PE/logging.include.ab3"
00009E16 <asl.include.ab3@358> XINCLUDE "PE/logging.include.ab3"
00009E50 <asl.include.ab3@359> XINCLUDE "PE/logging.include.ab3"
00009E56 <asl.include.ab3@360> XINCLUDE "PE/logging.include.ab3"
00009EAE <asl.include.ab3@361> XINCLUDE "PE/logging.include.ab3"
00009ECC <asl.include.ab3@363> XINCLUDE "PE/logging.include.ab3"
00009ED2 <asl.include.ab3@366> XINCLUDE "PE/logging.include.ab3"
00009EE2 <asl.include.ab3@369> XINCLUDE "PE/logging.include.ab3"
00009EF2 <asl.include.ab3@370> XINCLUDE "PE/logging.include.ab3"
00009F02 <asl.include.ab3@371> XINCLUDE "PE/logging.include.ab3"
00009F12 <asl.include.ab3@372> XINCLUDE "PE/logging.include.ab3"
00009F22 <asl.include.ab3@374> XINCLUDE "PE/logging.include.ab3"
00009F2C <asl.include.ab3@376> XINCLUDE "PE/logging.include.ab3"
00009F40 <asl.include.ab3@377> XINCLUDE "PE/logging.include.ab3"
00009F56 <asl.include.ab3@393> XINCLUDE "PE/logging.include.ab3"
00009F7E <asl.include.ab3@395> XINCLUDE "PE/logging.include.ab3"
00009F88 <asl.include.ab3@396> XINCLUDE "PE/logging.include.ab3"
00009F9A <asl.include.ab3@397> XINCLUDE "PE/logging.include.ab3"
00009FD4 <asl.include.ab3@398> XINCLUDE "PE/logging.include.ab3"
00009FDE <asl.include.ab3@399> XINCLUDE "PE/logging.include.ab3"
0000A008 <asl.include.ab3@401> XINCLUDE "PE/logging.include.ab3"
0000A020 <asl.include.ab3@402> XINCLUDE "PE/logging.include.ab3"
0000A072 <asl.include.ab3@438> XINCLUDE "PE/logging.include.ab3"
0000A0A0 <asl.include.ab3@440> XINCLUDE "PE/logging.include.ab3"
0000A132 <asl.include.ab3@441> XINCLUDE "PE/logging.include.ab3"
0000A178 <asl.include.ab3@442> XINCLUDE "PE/logging.include.ab3"
0000A20A <asl.include.ab3@443> XINCLUDE "PE/logging.include.ab3"
0000A224 <asl.include.ab3@444> XINCLUDE "PE/logging.include.ab3"
0000A224 <file.include.ab3@57> XINCLUDE "PE/logging.include.ab3"
0000A23A <file.include.ab3@66> XINCLUDE "PE/logging.include.ab3"
0000A250 <file.include.ab3@67> XINCLUDE "PE/logging.include.ab3"
0000A266 <file.include.ab3@68> XINCLUDE "PE/logging.include.ab3"
0000A27C <file.include.ab3@70> XINCLUDE "PE/logging.include.ab3"
0000A288 <file.include.ab3@72> XINCLUDE "PE/logging.include.ab3"
0000A294 <file.include.ab3@73> XINCLUDE "PE/logging.include.ab3"
0000A2A0 <file.include.ab3@74> XINCLUDE "PE/logging.include.ab3"
0000A2AC <file.include.ab3@75> XINCLUDE "PE/logging.include.ab3"
0000A2D4 <file.include.ab3@77> XINCLUDE "PE/logging.include.ab3"
0000A2FC <file.include.ab3@78> XINCLUDE "PE/logging.include.ab3"
0000A324 <file.include.ab3@79> XINCLUDE "PE/logging.include.ab3"
0000A348 <file.include.ab3@109> XINCLUDE "PE/logging.include.ab3"
0000A36C <file.include.ab3@110> XINCLUDE "PE/logging.include.ab3"
0000A386 <file.include.ab3@156> XINCLUDE "PE/logging.include.ab3"
0000A396 <file.include.ab3@157> XINCLUDE "PE/logging.include.ab3"
0000A398 <file.include.ab3@158> XINCLUDE "PE/logging.include.ab3"
0000A39A <file.include.ab3@159> XINCLUDE "PE/logging.include.ab3"
0000A39C <file.include.ab3@160> XINCLUDE "PE/logging.include.ab3"
0000A39E <file.include.ab3@161> XINCLUDE "PE/logging.include.ab3"
0000A3A0 <file.include.ab3@162> XINCLUDE "PE/logging.include.ab3"
0000A3A4 <file.include.ab3@163> XINCLUDE "PE/logging.include.ab3"
0000A3A8 <file.include.ab3@164> XINCLUDE "PE/logging.include.ab3"
0000A3AC <file.include.ab3@165> XINCLUDE "PE/logging.include.ab3"
0000A3AE <file.include.ab3@166> XINCLUDE "PE/logging.include.ab3"
0000A3B0 <file.include.ab3@167> XINCLUDE "PE/logging.include.ab3"
0000A3B2 <file.include.ab3@168> XINCLUDE "PE/logging.include.ab3"
0000A3B4 <file.include.ab3@169> XINCLUDE "PE/logging.include.ab3"
0000A3B6 <file.include.ab3@170> XINCLUDE "PE/logging.include.ab3"
0000A3B8 <file.include.ab3@171> XINCLUDE "PE/logging.include.ab3"
0000A3BA <file.include.ab3@172> XINCLUDE "PE/logging.include.ab3"
0000A3C4 <file.include.ab3@173> XINCLUDE "PE/logging.include.ab3"
0000A3CA <file.include.ab3@174> XINCLUDE "PE/logging.include.ab3"
0000A3E4 <file.include.ab3@215> XINCLUDE "PE/logging.include.ab3"
0000A402 <file.include.ab3@217> XINCLUDE "PE/logging.include.ab3"
0000A408 <file.include.ab3@218> XINCLUDE "PE/logging.include.ab3"
0000A422 <file.include.ab3@237> XINCLUDE "PE/logging.include.ab3"
0000A43E <file.include.ab3@239> XINCLUDE "PE/logging.include.ab3"
0000A464 <file.include.ab3@240> XINCLUDE "PE/logging.include.ab3"
0000A484 <file.include.ab3@241> XINCLUDE "PE/logging.include.ab3"
0000A48E <file.include.ab3@242> XINCLUDE "PE/logging.include.ab3"
0000A4BA <file.include.ab3@243> XINCLUDE "PE/logging.include.ab3"
0000A4DC <file.include.ab3@244> XINCLUDE "PE/logging.include.ab3"
0000A4F6 <file.include.ab3@245> XINCLUDE "PE/logging.include.ab3"
0000A4FC <file.include.ab3@248> XINCLUDE "PE/logging.include.ab3"
0000A536 <file.include.ab3@249> XINCLUDE "PE/logging.include.ab3"
0000A554 <file.include.ab3@251> XINCLUDE "PE/logging.include.ab3"
0000A55A <file.include.ab3@252> XINCLUDE "PE/logging.include.ab3"
0000A578 <file.include.ab3@271> XINCLUDE "PE/logging.include.ab3"
0000A57E <file.include.ab3@273> XINCLUDE "PE/logging.include.ab3"
0000A5A0 <file.include.ab3@274> XINCLUDE "PE/logging.include.ab3"
0000A5C0 <file.include.ab3@275> XINCLUDE "PE/logging.include.ab3"
0000A5F8 <file.include.ab3@276> XINCLUDE "PE/logging.include.ab3"
0000A614 <file.include.ab3@277> XINCLUDE "PE/logging.include.ab3"
0000A61A <file.include.ab3@278> XINCLUDE "PE/logging.include.ab3"
0000A620 <file.include.ab3@279> XINCLUDE "PE/logging.include.ab3"
0000A626 <file.include.ab3@281> XINCLUDE "PE/logging.include.ab3"
0000A62C <file.include.ab3@282> XINCLUDE "PE/logging.include.ab3"
0000A648 <file.include.ab3@283> XINCLUDE "PE/logging.include.ab3"
0000A694 <file.include.ab3@285> XINCLUDE "PE/logging.include.ab3"
0000A69A <file.include.ab3@286> XINCLUDE "PE/logging.include.ab3"
0000A6D4 <file.include.ab3@287> XINCLUDE "PE/logging.include.ab3"
0000A6E0 <file.include.ab3@288> XINCLUDE "PE/logging.include.ab3"
0000A6FC <file.include.ab3@289> XINCLUDE "PE/logging.include.ab3"
0000A702 <file.include.ab3@291> XINCLUDE "PE/logging.include.ab3"
0000A73C <file.include.ab3@292> XINCLUDE "PE/logging.include.ab3"
0000A746 <file.include.ab3@296> XINCLUDE "PE/logging.include.ab3"
0000A74C <file.include.ab3@297> XINCLUDE "PE/logging.include.ab3"
0000A76A <file.include.ab3@316> XINCLUDE "PE/logging.include.ab3"
0000A798 <file.include.ab3@318> XINCLUDE "PE/logging.include.ab3"
0000A79E <file.include.ab3@319> XINCLUDE "PE/logging.include.ab3"
0000A7B4 <file.include.ab3@335> XINCLUDE "PE/logging.include.ab3"
0000A7BC <file.include.ab3@337> XINCLUDE "PE/logging.include.ab3"
0000A818 <file.include.ab3@338> XINCLUDE "PE/logging.include.ab3"
0000A826 <file.include.ab3@339> XINCLUDE "PE/logging.include.ab3"
0000A82C <file.include.ab3@340> XINCLUDE "PE/logging.include.ab3"
0000A85E <file.include.ab3@341> XINCLUDE "PE/logging.include.ab3"
0000A868 <file.include.ab3@342> XINCLUDE "PE/logging.include.ab3"
0000A86E <file.include.ab3@343> XINCLUDE "PE/logging.include.ab3"
0000A888 <file.include.ab3@397> XINCLUDE "PE/logging.include.ab3"
0000A89A <file.include.ab3@399> XINCLUDE "PE/logging.include.ab3"
0000A8F8 <file.include.ab3@400> XINCLUDE "PE/logging.include.ab3"
0000A932 <file.include.ab3@401> XINCLUDE "PE/logging.include.ab3"
0000A96C <file.include.ab3@402> XINCLUDE "PE/logging.include.ab3"
0000A98A <file.include.ab3@403> XINCLUDE "PE/logging.include.ab3"
0000A9A8 <file.include.ab3@404> XINCLUDE "PE/logging.include.ab3"
0000A9BE <file.include.ab3@405> XINCLUDE "PE/logging.include.ab3"
0000A9DA <file.include.ab3@406> XINCLUDE "PE/logging.include.ab3"
0000A9F4 <file.include.ab3@407> XINCLUDE "PE/logging.include.ab3"
0000AA72 <file.include.ab3@408> XINCLUDE "PE/logging.include.ab3"
0000AA84 <file.include.ab3@410> XINCLUDE "PE/logging.include.ab3"
0000AA9A <file.include.ab3@422> XINCLUDE "PE/logging.include.ab3"
0000AAC4 <file.include.ab3@424> XINCLUDE "PE/logging.include.ab3"
0000AACE <file.include.ab3@425> XINCLUDE "PE/logging.include.ab3"
0000AADE <file.include.ab3@426> XINCLUDE "PE/logging.include.ab3"
0000AAE2 <file.include.ab3@427> XINCLUDE "PE/logging.include.ab3"
0000AB10 <file.include.ab3@428> XINCLUDE "PE/logging.include.ab3"
0000AB2A <file.include.ab3@447> XINCLUDE "PE/logging.include.ab3"
0000AB3C <file.include.ab3@449> XINCLUDE "PE/logging.include.ab3"
0000AB5C <file.include.ab3@450> XINCLUDE "PE/logging.include.ab3"
0000AB72 <file.include.ab3@451> XINCLUDE "PE/logging.include.ab3"
0000ABAA <file.include.ab3@452> XINCLUDE "PE/logging.include.ab3"
0000ABD4 <file.include.ab3@453> XINCLUDE "PE/logging.include.ab3"
0000ABFE <file.include.ab3@456> XINCLUDE "PE/logging.include.ab3"
0000AC16 <file.include.ab3@457> XINCLUDE "PE/logging.include.ab3"
0000AC2C <file.include.ab3@525> XINCLUDE "PE/logging.include.ab3"
0000AC74 <file.include.ab3@527> XINCLUDE "PE/logging.include.ab3"
0000AC94 <file.include.ab3@528> XINCLUDE "PE/logging.include.ab3"
0000AC9C <file.include.ab3@529> XINCLUDE "PE/logging.include.ab3"
0000ACDA <file.include.ab3@568> XINCLUDE "PE/logging.include.ab3"
0000ACE6 <file.include.ab3@570> XINCLUDE "PE/logging.include.ab3"
0000ACF0 <file.include.ab3@571> XINCLUDE "PE/logging.include.ab3"
0000AD02 <file.include.ab3@572> XINCLUDE "PE/logging.include.ab3"
0000AD08 <file.include.ab3@573> XINCLUDE "PE/logging.include.ab3"
0000AD16 <file.include.ab3@574> XINCLUDE "PE/logging.include.ab3"
0000AD3E <file.include.ab3@575> XINCLUDE "PE/logging.include.ab3"
0000AD52 <file.include.ab3@576> XINCLUDE "PE/logging.include.ab3"
0000AD7A <file.include.ab3@577> XINCLUDE "PE/logging.include.ab3"
0000AD8E <file.include.ab3@578> XINCLUDE "PE/logging.include.ab3"
0000ADB6 <file.include.ab3@579> XINCLUDE "PE/logging.include.ab3"
0000ADCA <file.include.ab3@580> XINCLUDE "PE/logging.include.ab3"
0000ADF2 <file.include.ab3@581> XINCLUDE "PE/logging.include.ab3"
0000ADF4 <file.include.ab3@582> XINCLUDE "PE/logging.include.ab3"
0000AE18 <file.include.ab3@584> XINCLUDE "PE/logging.include.ab3"
0000AE50 <file.include.ab3@586> XINCLUDE "PE/logging.include.ab3"
0000AEDA <file.include.ab3@587> XINCLUDE "PE/logging.include.ab3"
0000AF02 <file.include.ab3@588> XINCLUDE "PE/logging.include.ab3"
0000AF32 <file.include.ab3@589> XINCLUDE "PE/logging.include.ab3"
0000AF6A <file.include.ab3@593> XINCLUDE "PE/logging.include.ab3"
0000AFC2 <file.include.ab3@594> XINCLUDE "PE/logging.include.ab3"
0000B01A <file.include.ab3@595> XINCLUDE "PE/logging.include.ab3"
0000B09A <file.include.ab3@597> XINCLUDE "PE/logging.include.ab3"
0000B0CE <file.include.ab3@598> XINCLUDE "PE/logging.include.ab3"
0000B102 <file.include.ab3@599> XINCLUDE "PE/logging.include.ab3"
0000B108 <file.include.ab3@600> XINCLUDE "PE/logging.include.ab3"
0000B116 <file.include.ab3@601> XINCLUDE "PE/logging.include.ab3"
0000B14A <file.include.ab3@602> XINCLUDE "PE/logging.include.ab3"
0000B172 <file.include.ab3@603> XINCLUDE "PE/logging.include.ab3"
0000B22A <file.include.ab3@604> XINCLUDE "PE/logging.include.ab3"
0000B2AA <file.include.ab3@605> XINCLUDE "PE/logging.include.ab3"
0000B2DE <file.include.ab3@606> XINCLUDE "PE/logging.include.ab3"
0000B2FE <file.include.ab3@608> XINCLUDE "PE/logging.include.ab3"
0000B304 <file.include.ab3@609> XINCLUDE "PE/logging.include.ab3"
0000B30A <file.include.ab3@610> XINCLUDE "PE/logging.include.ab3"
0000B3DA <file.include.ab3@611> XINCLUDE "PE/logging.include.ab3"
0000B3EE <file.include.ab3@614> XINCLUDE "PE/logging.include.ab3"
0000B4A6 <file.include.ab3@615> XINCLUDE "PE/logging.include.ab3"
0000B526 <file.include.ab3@616> XINCLUDE "PE/logging.include.ab3"
0000B616 <file.include.ab3@617> XINCLUDE "PE/logging.include.ab3"
0000B620 <file.include.ab3@618> XINCLUDE "PE/logging.include.ab3"
0000B654 <file.include.ab3@619> XINCLUDE "PE/logging.include.ab3"
0000B674 <file.include.ab3@620> XINCLUDE "PE/logging.include.ab3"
0000B67A <file.include.ab3@621> XINCLUDE "PE/logging.include.ab3"
0000B680 <file.include.ab3@622> XINCLUDE "PE/logging.include.ab3"
0000B750 <file.include.ab3@623> XINCLUDE "PE/logging.include.ab3"
0000B764 <file.include.ab3@627> XINCLUDE "PE/logging.include.ab3"
0000B798 <file.include.ab3@628> XINCLUDE "PE/logging.include.ab3"
0000B7C0 <file.include.ab3@629> XINCLUDE "PE/logging.include.ab3"
0000B878 <file.include.ab3@630> XINCLUDE "PE/logging.include.ab3"
0000B8F8 <file.include.ab3@631> XINCLUDE "PE/logging.include.ab3"
0000B92C <file.include.ab3@632> XINCLUDE "PE/logging.include.ab3"
0000B94C <file.include.ab3@635> XINCLUDE "PE/logging.include.ab3"
0000B952 <file.include.ab3@636> XINCLUDE "PE/logging.include.ab3"
0000B958 <file.include.ab3@637> XINCLUDE "PE/logging.include.ab3"
0000BA28 <file.include.ab3@638> XINCLUDE "PE/logging.include.ab3"
0000BA3C <file.include.ab3@641> XINCLUDE "PE/logging.include.ab3"
0000BAF4 <file.include.ab3@642> XINCLUDE "PE/logging.include.ab3"
0000BB74 <file.include.ab3@643> XINCLUDE "PE/logging.include.ab3"
0000BBA8 <file.include.ab3@644> XINCLUDE "PE/logging.include.ab3"
0000BBC8 <file.include.ab3@645> XINCLUDE "PE/logging.include.ab3"
0000BBCE <file.include.ab3@646> XINCLUDE "PE/logging.include.ab3"
0000BBD4 <file.include.ab3@647> XINCLUDE "PE/logging.include.ab3"
0000BCA4 <file.include.ab3@648> XINCLUDE "PE/logging.include.ab3"
0000BCAA <file.include.ab3@651> XINCLUDE "PE/logging.include.ab3"
0000BCE4 <file.include.ab3@652> XINCLUDE "PE/logging.include.ab3"
0000BCE6 <file.include.ab3@653> XINCLUDE "PE/logging.include.ab3"
0000BCEC <file.include.ab3@655> XINCLUDE "PE/logging.include.ab3"
0000BD84 <file.include.ab3@656> XINCLUDE "PE/logging.include.ab3"
0000BD96 <file.include.ab3@659> XINCLUDE "PE/logging.include.ab3"
0000BDAC <file.include.ab3@660> XINCLUDE "PE/logging.include.ab3"
0000BE16 <file.include.ab3@661> XINCLUDE "PE/logging.include.ab3"
0000BE80 <file.include.ab3@662> XINCLUDE "PE/logging.include.ab3"
0000BE9A <file.include.ab3@663> XINCLUDE "PE/logging.include.ab3"
0000BEB6 <file.include.ab3@664> XINCLUDE "PE/logging.include.ab3"
0000BED4 <file.include.ab3@665> XINCLUDE "PE/logging.include.ab3"
0000BEEE <file.include.ab3@666> XINCLUDE "PE/logging.include.ab3"
0000BEF8 <file.include.ab3@668> XINCLUDE "PE/logging.include.ab3"
0000BF14 <file.include.ab3@669> XINCLUDE "PE/logging.include.ab3"
0000BF36 <file.include.ab3@805> XINCLUDE "PE/logging.include.ab3"
0000BF3C <file.include.ab3@807> XINCLUDE "PE/logging.include.ab3"
0000BF62 <file.include.ab3@808> XINCLUDE "PE/logging.include.ab3"
0000BF7E <file.include.ab3@809> XINCLUDE "PE/logging.include.ab3"
0000BF90 <file.include.ab3@810> XINCLUDE "PE/logging.include.ab3"
0000BFEE <file.include.ab3@811> XINCLUDE "PE/logging.include.ab3"
0000C026 <file.include.ab3@812> XINCLUDE "PE/logging.include.ab3"
0000C02C <file.include.ab3@813> XINCLUDE "PE/logging.include.ab3"
0000C074 <file.include.ab3@814> XINCLUDE "PE/logging.include.ab3"
0000C08E <file.include.ab3@815> XINCLUDE "PE/logging.include.ab3"
0000C09C <file.include.ab3@818> XINCLUDE "PE/logging.include.ab3"
0000C0A2 <file.include.ab3@819> XINCLUDE "PE/logging.include.ab3"
0000C0A8 <file.include.ab3@820> XINCLUDE "PE/logging.include.ab3"
0000C0BA <file.include.ab3@821> XINCLUDE "PE/logging.include.ab3"
0000C1A6 <file.include.ab3@822> XINCLUDE "PE/logging.include.ab3"
0000C1AC <file.include.ab3@823> XINCLUDE "PE/logging.include.ab3"
0000C1F2 <file.include.ab3@824> XINCLUDE "PE/logging.include.ab3"
0000C1FE <file.include.ab3@825> XINCLUDE "PE/logging.include.ab3"
0000C264 <file.include.ab3@826> XINCLUDE "PE/logging.include.ab3"
0000C2AA <file.include.ab3@827> XINCLUDE "PE/logging.include.ab3"
0000C2F2 <file.include.ab3@830> XINCLUDE "PE/logging.include.ab3"
0000C35A <file.include.ab3@831> XINCLUDE "PE/logging.include.ab3"
0000C360 <file.include.ab3@832> XINCLUDE "PE/logging.include.ab3"
0000C39A <file.include.ab3@833> XINCLUDE "PE/logging.include.ab3"
0000C3A0 <file.include.ab3@835> XINCLUDE "PE/logging.include.ab3"
0000C402 <file.include.ab3@836> XINCLUDE "PE/logging.include.ab3"
0000C40C <file.include.ab3@838> XINCLUDE "PE/logging.include.ab3"
0000C420 <file.include.ab3@839> XINCLUDE "PE/logging.include.ab3"
0000C43A <file.include.ab3@841> XINCLUDE "PE/logging.include.ab3"
0000C440 <file.include.ab3@843> XINCLUDE "PE/logging.include.ab3"
0000C466 <file.include.ab3@844> XINCLUDE "PE/logging.include.ab3"
0000C482 <file.include.ab3@845> XINCLUDE "PE/logging.include.ab3"
0000C4E0 <file.include.ab3@846> XINCLUDE "PE/logging.include.ab3"
0000C4E4 <file.include.ab3@849> XINCLUDE "PE/logging.include.ab3"
0000C506 <file.include.ab3@867> XINCLUDE "PE/logging.include.ab3"
0000C50C <file.include.ab3@869> XINCLUDE "PE/logging.include.ab3"
0000C528 <file.include.ab3@870> XINCLUDE "PE/logging.include.ab3"
0000C548 <file.include.ab3@871> XINCLUDE "PE/logging.include.ab3"
0000C586 <file.include.ab3@872> XINCLUDE "PE/logging.include.ab3"
0000C5D4 <file.include.ab3@873> XINCLUDE "PE/logging.include.ab3"
0000C60A <file.include.ab3@874> XINCLUDE "PE/logging.include.ab3"
0000C610 <file.include.ab3@875> XINCLUDE "PE/logging.include.ab3"
0000C616 <file.include.ab3@876> XINCLUDE "PE/logging.include.ab3"
0000C646 <file.include.ab3@877> XINCLUDE "PE/logging.include.ab3"
0000C64C <file.include.ab3@878> XINCLUDE "PE/logging.include.ab3"
0000C652 <file.include.ab3@880> XINCLUDE "PE/logging.include.ab3"
0000C664 <file.include.ab3@881> XINCLUDE "PE/logging.include.ab3"
0000C6C2 <file.include.ab3@882> XINCLUDE "PE/logging.include.ab3"
0000C6FA <file.include.ab3@883> XINCLUDE "PE/logging.include.ab3"
0000C700 <file.include.ab3@884> XINCLUDE "PE/logging.include.ab3"
0000C748 <file.include.ab3@885> XINCLUDE "PE/logging.include.ab3"
0000C762 <file.include.ab3@886> XINCLUDE "PE/logging.include.ab3"
0000C770 <file.include.ab3@888> XINCLUDE "PE/logging.include.ab3"
0000C776 <file.include.ab3@889> XINCLUDE "PE/logging.include.ab3"
0000C77C <file.include.ab3@890> XINCLUDE "PE/logging.include.ab3"
0000C78E <file.include.ab3@891> XINCLUDE "PE/logging.include.ab3"
0000C794 <file.include.ab3@892> XINCLUDE "PE/logging.include.ab3"
0000C79A <file.include.ab3@893> XINCLUDE "PE/logging.include.ab3"
0000C7F8 <file.include.ab3@894> XINCLUDE "PE/logging.include.ab3"
0000C840 <file.include.ab3@897> XINCLUDE "PE/logging.include.ab3"
0000C84A <file.include.ab3@900> XINCLUDE "PE/logging.include.ab3"
0000C850 <file.include.ab3@901> XINCLUDE "PE/logging.include.ab3"
0000C86A <file.include.ab3@955> XINCLUDE "PE/logging.include.ab3"
0000C870 <file.include.ab3@957> XINCLUDE "PE/logging.include.ab3"
0000C8B8 <file.include.ab3@958> XINCLUDE "PE/logging.include.ab3"
0000C8F6 <file.include.ab3@959> XINCLUDE "PE/logging.include.ab3"
0000C900 <file.include.ab3@960> XINCLUDE "PE/logging.include.ab3"
0000C906 <file.include.ab3@961> XINCLUDE "PE/logging.include.ab3"
0000C92C <file.include.ab3@1108> XINCLUDE "PE/logging.include.ab3"
0000C932 <file.include.ab3@1110> XINCLUDE "PE/logging.include.ab3"
0000C958 <file.include.ab3@1111> XINCLUDE "PE/logging.include.ab3"
0000C9B8 <file.include.ab3@1112> XINCLUDE "PE/logging.include.ab3"
0000C9D2 <file.include.ab3@1113> XINCLUDE "PE/logging.include.ab3"
0000C9DC <file.include.ab3@1114> XINCLUDE "PE/logging.include.ab3"
0000C9F6 <file.include.ab3@1115> XINCLUDE "PE/logging.include.ab3"
0000CA00 <file.include.ab3@1116> XINCLUDE "PE/logging.include.ab3"
0000CA18 <file.include.ab3@1117> XINCLUDE "PE/logging.include.ab3"
0000CA48 <file.include.ab3@1118> XINCLUDE "PE/logging.include.ab3"
0000CA64 <file.include.ab3@1119> XINCLUDE "PE/logging.include.ab3"
0000CA72 <file.include.ab3@1120> XINCLUDE "PE/logging.include.ab3"
0000CA78 <file.include.ab3@1123> XINCLUDE "PE/logging.include.ab3"
0000CAB2 <file.include.ab3@1124> XINCLUDE "PE/logging.include.ab3"
0000CABC <file.include.ab3@1126> XINCLUDE "PE/logging.include.ab3"
0000CAC2 <file.include.ab3@1127> XINCLUDE "PE/logging.include.ab3"
0000CAE0 <file.include.ab3@1148> XINCLUDE "PE/logging.include.ab3"
0000CAE6 <file.include.ab3@1150> XINCLUDE "PE/logging.include.ab3"
0000CAF8 <file.include.ab3@1151> XINCLUDE "PE/logging.include.ab3"
0000CB06 <file.include.ab3@1152> XINCLUDE "PE/logging.include.ab3"
0000CB24 <file.include.ab3@1153> XINCLUDE "PE/logging.include.ab3"
0000CB5A <file.include.ab3@1154> XINCLUDE "PE/logging.include.ab3"
0000CB6C <file.include.ab3@1155> XINCLUDE "PE/logging.include.ab3"
0000CBB6 <file.include.ab3@1156> XINCLUDE "PE/logging.include.ab3"
0000CCA0 <file.include.ab3@1157> XINCLUDE "PE/logging.include.ab3"
0000CCBE <file.include.ab3@1158> XINCLUDE "PE/logging.include.ab3"
0000CCE4 <file.include.ab3@1160> XINCLUDE "PE/logging.include.ab3"
0000CD00 <file.include.ab3@1161> XINCLUDE "PE/logging.include.ab3"
0000CD2C <file.include.ab3@1162> XINCLUDE "PE/logging.include.ab3"
0000CD36 <file.include.ab3@1163> XINCLUDE "PE/logging.include.ab3"
0000CD64 <file.include.ab3@1164> XINCLUDE "PE/logging.include.ab3"
0000CD7E <file.include.ab3@1165> XINCLUDE "PE/logging.include.ab3"
0000CD9A <file.include.ab3@1166> XINCLUDE "PE/logging.include.ab3"
0000CDA0 <file.include.ab3@1167> XINCLUDE "PE/logging.include.ab3"
0000CDDA <file.include.ab3@1168> XINCLUDE "PE/logging.include.ab3"
0000CDE0 <file.include.ab3@1170> XINCLUDE "PE/logging.include.ab3"
0000CDE6 <file.include.ab3@1171> XINCLUDE "PE/logging.include.ab3"
0000CDEC <file.include.ab3@1173> XINCLUDE "PE/logging.include.ab3"
0000CE8C <file.include.ab3@1174> XINCLUDE "PE/logging.include.ab3"
0000CE92 <file.include.ab3@1176> XINCLUDE "PE/logging.include.ab3"
0000CF34 <file.include.ab3@1177> XINCLUDE "PE/logging.include.ab3"
0000CF3A <file.include.ab3@1179> XINCLUDE "PE/logging.include.ab3"
0000CF74 <file.include.ab3@1180> XINCLUDE "PE/logging.include.ab3"
0000CF7E <file.include.ab3@1182> XINCLUDE "PE/logging.include.ab3"
0000CF84 <file.include.ab3@1183> XINCLUDE "PE/logging.include.ab3"
0000CF9E <file.include.ab3@1245> XINCLUDE "PE/logging.include.ab3"
0000CFBC <file.include.ab3@1247> XINCLUDE "PE/logging.include.ab3"
0000CFC2 <file.include.ab3@1248> XINCLUDE "PE/logging.include.ab3"
0000CFDC <file.include.ab3@1398> XINCLUDE "PE/logging.include.ab3"
0000CFFC <file.include.ab3@1400> XINCLUDE "PE/logging.include.ab3"
0000D0B0 <file.include.ab3@1401> XINCLUDE "PE/logging.include.ab3"
0000D0B6 <file.include.ab3@1402> XINCLUDE "PE/logging.include.ab3"
0000D0BC <file.include.ab3@1403> XINCLUDE "PE/logging.include.ab3"
0000D0E6 <file.include.ab3@1404> XINCLUDE "PE/logging.include.ab3"
0000D0F2 <file.include.ab3@1406> XINCLUDE "PE/logging.include.ab3"
0000D0F8 <file.include.ab3@1407> XINCLUDE "PE/logging.include.ab3"
0000D112 <file.include.ab3@1593> XINCLUDE "PE/logging.include.ab3"
0000D11A <file.include.ab3@1594> XINCLUDE "PE/logging.include.ab3"
0000D122 <file.include.ab3@1595> XINCLUDE "PE/logging.include.ab3"
0000D138 <file.include.ab3@1596> XINCLUDE "PE/logging.include.ab3"
0000D150 <file.include.ab3@1597> XINCLUDE "PE/logging.include.ab3"
0000D162 <file.include.ab3@1598> XINCLUDE "PE/logging.include.ab3"
0000D16E <file.include.ab3@1599> XINCLUDE "PE/logging.include.ab3"
0000D174 <file.include.ab3@1600> XINCLUDE "PE/logging.include.ab3"
0000D17C <file.include.ab3@1601> XINCLUDE "PE/logging.include.ab3"
0000D1B4 <file.include.ab3@1602> XINCLUDE "PE/logging.include.ab3"
0000D1C6 <file.include.ab3@1603> XINCLUDE "PE/logging.include.ab3"
0000D1EA <file.include.ab3@1604> XINCLUDE "PE/logging.include.ab3"
0000D1FC <file.include.ab3@1605> XINCLUDE "PE/logging.include.ab3"
0000D208 <file.include.ab3@1606> XINCLUDE "PE/logging.include.ab3"
0000D20E <file.include.ab3@1607> XINCLUDE "PE/logging.include.ab3"
0000D21E <file.include.ab3@1608> XINCLUDE "PE/logging.include.ab3"
0000D23C <file.include.ab3@1613> XINCLUDE "PE/logging.include.ab3"
0000D24E <file.include.ab3@1616> XINCLUDE "PE/logging.include.ab3"
0000D29A <file.include.ab3@1617> XINCLUDE "PE/logging.include.ab3"
0000D2A0 <file.include.ab3@1619> XINCLUDE "PE/logging.include.ab3"
0000D2CA <file.include.ab3@1621> XINCLUDE "PE/logging.include.ab3"
0000D2E2 <file.include.ab3@1622> XINCLUDE "PE/logging.include.ab3"
0000D310 <file.include.ab3@1706> XINCLUDE "PE/logging.include.ab3"
0000D324 <file.include.ab3@1707> XINCLUDE "PE/logging.include.ab3"
0000D33A <file.include.ab3@1708> XINCLUDE "PE/logging.include.ab3"
0000D35A <file.include.ab3@1709> XINCLUDE "PE/logging.include.ab3"
0000D370 <file.include.ab3@1710> XINCLUDE "PE/logging.include.ab3"
0000D37A <file.include.ab3@1711> XINCLUDE "PE/logging.include.ab3"
0000D394 <file.include.ab3@1712> XINCLUDE "PE/logging.include.ab3"
0000D3B6 <file.include.ab3@1787> XINCLUDE "PE/logging.include.ab3"
0000D3CE <file.include.ab3@1789> XINCLUDE "PE/logging.include.ab3"
0000D3F0 <file.include.ab3@1790> XINCLUDE "PE/logging.include.ab3"
0000D3F6 <file.include.ab3@1791> XINCLUDE "PE/logging.include.ab3"
0000D428 <file.include.ab3@1811> XINCLUDE "PE/logging.include.ab3"
0000D43C <file.include.ab3@1813> XINCLUDE "PE/logging.include.ab3"
0000D454 <file.include.ab3@1814> XINCLUDE "PE/logging.include.ab3"
0000D46C <file.include.ab3@1815> XINCLUDE "PE/logging.include.ab3"
0000D48C <file.include.ab3@1816> XINCLUDE "PE/logging.include.ab3"
0000D4BC <file.include.ab3@1817> XINCLUDE "PE/logging.include.ab3"
0000D4EC <file.include.ab3@1818> XINCLUDE "PE/logging.include.ab3"
0000D4FE <file.include.ab3@1819> XINCLUDE "PE/logging.include.ab3"
0000D506 <file.include.ab3@1820> XINCLUDE "PE/logging.include.ab3"
0000D530 <file.include.ab3@1821> XINCLUDE "PE/logging.include.ab3"
0000D53A <file.include.ab3@1823> XINCLUDE "PE/logging.include.ab3"
0000D554 <file.include.ab3@1824> XINCLUDE "PE/logging.include.ab3"
0000D56E <file.include.ab3@1841> XINCLUDE "PE/logging.include.ab3"
0000D58C <file.include.ab3@1843> XINCLUDE "PE/logging.include.ab3"
0000D5AC <file.include.ab3@1844> XINCLUDE "PE/logging.include.ab3"
0000D5F6 <file.include.ab3@1845> XINCLUDE "PE/logging.include.ab3"
0000D610 <file.include.ab3@1846> XINCLUDE "PE/logging.include.ab3"
0000D622 <file.include.ab3@1847> XINCLUDE "PE/logging.include.ab3"
0000D658 <file.include.ab3@1848> XINCLUDE "PE/logging.include.ab3"
0000D66A <file.include.ab3@1849> XINCLUDE "PE/logging.include.ab3"
0000D672 <file.include.ab3@1850> XINCLUDE "PE/logging.include.ab3"
0000D69A <file.include.ab3@1851> XINCLUDE "PE/logging.include.ab3"
0000D6A0 <file.include.ab3@1853> XINCLUDE "PE/logging.include.ab3"
0000D6C8 <file.include.ab3@1854> XINCLUDE "PE/logging.include.ab3"
0000D6D8 <file.include.ab3@1856> XINCLUDE "PE/logging.include.ab3"
0000D6EC <file.include.ab3@1857> XINCLUDE "PE/logging.include.ab3"
0000D702 <file.include.ab3@1870> XINCLUDE "PE/logging.include.ab3"
0000D712 <file.include.ab3@1872> XINCLUDE "PE/logging.include.ab3"
0000D716 <file.include.ab3@1873> XINCLUDE "PE/logging.include.ab3"
0000D72C <file.include.ab3@1894> XINCLUDE "PE/logging.include.ab3"
0000D756 <file.include.ab3@1896> XINCLUDE "PE/logging.include.ab3"
0000D75E <file.include.ab3@1897> XINCLUDE "PE/logging.include.ab3"
0000D75E <logging.include.ab3@13> XINCLUDE "PE/logging.include.ab3"
0000D7FC <logging.include.ab3@35> XINCLUDE "PE/logging.include.ab3"
0000D802 <logging.include.ab3@36> XINCLUDE "PE/logging.include.ab3"
0000D808 <logging.include.ab3@37> XINCLUDE "PE/logging.include.ab3"
0000D80E <logging.include.ab3@38> XINCLUDE "PE/logging.include.ab3"
0000D848 <logging.include.ab3@129> XINCLUDE "PE/logging.include.ab3"
0000D87A <logging.include.ab3@131> XINCLUDE "PE/logging.include.ab3"
0000D888 <logging.include.ab3@132> XINCLUDE "PE/logging.include.ab3"
0000D8B8 <logging.include.ab3@133> XINCLUDE "PE/logging.include.ab3"
0000DC28 <logging.include.ab3@134> XINCLUDE "PE/logging.include.ab3"
0000DC36 <logging.include.ab3@135> XINCLUDE "PE/logging.include.ab3"
0000DC3C <logging.include.ab3@136> XINCLUDE "PE/logging.include.ab3"
0000DECE <logging.include.ab3@137> XINCLUDE "PE/logging.include.ab3"
0000DEE8 <logging.include.ab3@139> XINCLUDE "PE/logging.include.ab3"
0000DF22 <logging.include.ab3@142> XINCLUDE "PE/logging.include.ab3"
0000DF74 <logging.include.ab3@143> XINCLUDE "PE/logging.include.ab3"
0000DF82 <logging.include.ab3@144> XINCLUDE "PE/logging.include.ab3"
0000DFD8 <logging.include.ab3@145> XINCLUDE "PE/logging.include.ab3"
0000DFDE <logging.include.ab3@146> XINCLUDE "PE/logging.include.ab3"
0000E058 <logging.include.ab3@147> XINCLUDE "PE/logging.include.ab3"
0000E0CC <logging.include.ab3@148> XINCLUDE "PE/logging.include.ab3"
0000E0E6 <logging.include.ab3@150> XINCLUDE "PE/logging.include.ab3"
0000E0E6 <AmiBlitz3.ab3@89> XINCLUDE "PE/logging.include.ab3"
0000E0E6 <translation.include.ab3@1> XINCLUDE "translation.include.ab3"
0000E0E6 <phrasebook.include.ab3@1> XINCLUDE "translation.include.ab3"
0000E0E6 <prefixtree.include.ab3@1> XINCLUDE "translation.include.ab3"
0000E0E6 <dynamicarray.include.ab3@1> XINCLUDE "translation.include.ab3"
0000E10E <dynamicarray.include.ab3@42> XINCLUDE "translation.include.ab3"
0000E128 <dynamicarray.include.ab3@55> XINCLUDE "translation.include.ab3"
0000E132 <dynamicarray.include.ab3@56> XINCLUDE "translation.include.ab3"
0000E144 <dynamicarray.include.ab3@57> XINCLUDE "translation.include.ab3"
0000E168 <dynamicarray.include.ab3@58> XINCLUDE "translation.include.ab3"
0000E176 <dynamicarray.include.ab3@60> XINCLUDE "translation.include.ab3"
0000E182 <dynamicarray.include.ab3@61> XINCLUDE "translation.include.ab3"
0000E186 <dynamicarray.include.ab3@63> XINCLUDE "translation.include.ab3"
0000E1A4 <dynamicarray.include.ab3@99> XINCLUDE "translation.include.ab3"
0000E1BE <dynamicarray.include.ab3@101> XINCLUDE "translation.include.ab3"
0000E1DE <dynamicarray.include.ab3@102> XINCLUDE "translation.include.ab3"
0000E1E8 <dynamicarray.include.ab3@103> XINCLUDE "translation.include.ab3"
0000E1F6 <dynamicarray.include.ab3@104> XINCLUDE "translation.include.ab3"
0000E202 <dynamicarray.include.ab3@105> XINCLUDE "translation.include.ab3"
0000E210 <dynamicarray.include.ab3@106> XINCLUDE "translation.include.ab3"
0000E21C <dynamicarray.include.ab3@107> XINCLUDE "translation.include.ab3"
0000E228 <dynamicarray.include.ab3@108> XINCLUDE "translation.include.ab3"
0000E23A <dynamicarray.include.ab3@109> XINCLUDE "translation.include.ab3"
0000E24A <dynamicarray.include.ab3@110> XINCLUDE "translation.include.ab3"
0000E254 <dynamicarray.include.ab3@113> XINCLUDE "translation.include.ab3"
0000E25A <dynamicarray.include.ab3@114> XINCLUDE "translation.include.ab3"
0000E274 <dynamicarray.include.ab3@425> XINCLUDE "translation.include.ab3"
0000E27E <dynamicarray.include.ab3@427> XINCLUDE "translation.include.ab3"
0000E288 <dynamicarray.include.ab3@428> XINCLUDE "translation.include.ab3"
0000E298 <dynamicarray.include.ab3@429> XINCLUDE "translation.include.ab3"
0000E2A2 <dynamicarray.include.ab3@430> XINCLUDE "translation.include.ab3"
0000E2B4 <dynamicarray.include.ab3@431> XINCLUDE "translation.include.ab3"
0000E2CA <dynamicarray.include.ab3@432> XINCLUDE "translation.include.ab3"
0000E2D4 <dynamicarray.include.ab3@433> XINCLUDE "translation.include.ab3"
0000E2DA <dynamicarray.include.ab3@435> XINCLUDE "translation.include.ab3"
0000E2DE <dynamicarray.include.ab3@437> XINCLUDE "translation.include.ab3"
0000E2F4 <dynamicarray.include.ab3@531> XINCLUDE "translation.include.ab3"
0000E2FA <dynamicarray.include.ab3@533> XINCLUDE "translation.include.ab3"
0000E304 <dynamicarray.include.ab3@535> XINCLUDE "translation.include.ab3"
0000E33A <dynamicarray.include.ab3@536> XINCLUDE "translation.include.ab3"
0000E344 <dynamicarray.include.ab3@537> XINCLUDE "translation.include.ab3"
0000E348 <dynamicarray.include.ab3@538> XINCLUDE "translation.include.ab3"
0000E376 <dynamicarray.include.ab3@539> XINCLUDE "translation.include.ab3"
0000E376 <prefixtree.include.ab3@132> XINCLUDE "translation.include.ab3"
0000E390 <prefixtree.include.ab3@197> XINCLUDE "translation.include.ab3"
0000E39A <prefixtree.include.ab3@199> XINCLUDE "translation.include.ab3"
0000E3C2 <prefixtree.include.ab3@200> XINCLUDE "translation.include.ab3"
0000E3E4 <prefixtree.include.ab3@201> XINCLUDE "translation.include.ab3"
0000E400 <prefixtree.include.ab3@202> XINCLUDE "translation.include.ab3"
0000E410 <prefixtree.include.ab3@203> XINCLUDE "translation.include.ab3"
0000E414 <prefixtree.include.ab3@206> XINCLUDE "translation.include.ab3"
0000E42E <prefixtree.include.ab3@259> XINCLUDE "translation.include.ab3"
0000E44E <prefixtree.include.ab3@260> XINCLUDE "translation.include.ab3"
0000E458 <prefixtree.include.ab3@261> XINCLUDE "translation.include.ab3"
0000E472 <prefixtree.include.ab3@262> XINCLUDE "translation.include.ab3"
0000E480 <prefixtree.include.ab3@263> XINCLUDE "translation.include.ab3"
0000E48E <prefixtree.include.ab3@264> XINCLUDE "translation.include.ab3"
0000E49C <prefixtree.include.ab3@265> XINCLUDE "translation.include.ab3"
0000E4AA <prefixtree.include.ab3@266> XINCLUDE "translation.include.ab3"
0000E4B6 <prefixtree.include.ab3@267> XINCLUDE "translation.include.ab3"
0000E4C4 <prefixtree.include.ab3@268> XINCLUDE "translation.include.ab3"
0000E4D2 <prefixtree.include.ab3@269> XINCLUDE "translation.include.ab3"
0000E4E0 <prefixtree.include.ab3@270> XINCLUDE "translation.include.ab3"
0000E4EE <prefixtree.include.ab3@271> XINCLUDE "translation.include.ab3"
0000E508 <prefixtree.include.ab3@272> XINCLUDE "translation.include.ab3"
0000E516 <prefixtree.include.ab3@273> XINCLUDE "translation.include.ab3"
0000E526 <prefixtree.include.ab3@274> XINCLUDE "translation.include.ab3"
0000E536 <prefixtree.include.ab3@275> XINCLUDE "translation.include.ab3"
0000E546 <prefixtree.include.ab3@276> XINCLUDE "translation.include.ab3"
0000E554 <prefixtree.include.ab3@277> XINCLUDE "translation.include.ab3"
0000E55E <prefixtree.include.ab3@279> XINCLUDE "translation.include.ab3"
0000E564 <prefixtree.include.ab3@280> XINCLUDE "translation.include.ab3"
0000E582 <prefixtree.include.ab3@298> XINCLUDE "translation.include.ab3"
0000E588 <prefixtree.include.ab3@299> XINCLUDE "translation.include.ab3"
0000E592 <prefixtree.include.ab3@300> XINCLUDE "translation.include.ab3"
0000E5B2 <prefixtree.include.ab3@301> XINCLUDE "translation.include.ab3"
0000E5E0 <prefixtree.include.ab3@302> XINCLUDE "translation.include.ab3"
0000E5FE <prefixtree.include.ab3@303> XINCLUDE "translation.include.ab3"
0000E608 <prefixtree.include.ab3@304> XINCLUDE "translation.include.ab3"
0000E61A <prefixtree.include.ab3@305> XINCLUDE "translation.include.ab3"
0000E646 <prefixtree.include.ab3@306> XINCLUDE "translation.include.ab3"
0000E65C <prefixtree.include.ab3@307> XINCLUDE "translation.include.ab3"
0000E668 <prefixtree.include.ab3@309> XINCLUDE "translation.include.ab3"
0000E674 <prefixtree.include.ab3@310> XINCLUDE "translation.include.ab3"
0000E67A <prefixtree.include.ab3@311> XINCLUDE "translation.include.ab3"
0000E680 <prefixtree.include.ab3@312> XINCLUDE "translation.include.ab3"
0000E686 <prefixtree.include.ab3@313> XINCLUDE "translation.include.ab3"
0000E6BE <prefixtree.include.ab3@314> XINCLUDE "translation.include.ab3"
0000E6C4 <prefixtree.include.ab3@316> XINCLUDE "translation.include.ab3"
0000E6CA <prefixtree.include.ab3@317> XINCLUDE "translation.include.ab3"
0000E6D4 <prefixtree.include.ab3@320> XINCLUDE "translation.include.ab3"
0000E6DA <prefixtree.include.ab3@321> XINCLUDE "translation.include.ab3"
0000E70C <prefixtree.include.ab3@341> XINCLUDE "translation.include.ab3"
0000E726 <prefixtree.include.ab3@342> XINCLUDE "translation.include.ab3"
0000E73E <prefixtree.include.ab3@343> XINCLUDE "translation.include.ab3"
0000E752 <prefixtree.include.ab3@344> XINCLUDE "translation.include.ab3"
0000E7A2 <prefixtree.include.ab3@345> XINCLUDE "translation.include.ab3"
0000E7C2 <prefixtree.include.ab3@347> XINCLUDE "translation.include.ab3"
0000E7D6 <prefixtree.include.ab3@348> XINCLUDE "translation.include.ab3"
0000E7E4 <prefixtree.include.ab3@349> XINCLUDE "translation.include.ab3"
0000E7F0 <prefixtree.include.ab3@350> XINCLUDE "translation.include.ab3"
0000E7F8 <prefixtree.include.ab3@351> XINCLUDE "translation.include.ab3"
0000E800 <prefixtree.include.ab3@352> XINCLUDE "translation.include.ab3"
0000E808 <prefixtree.include.ab3@353> XINCLUDE "translation.include.ab3"
0000E810 <prefixtree.include.ab3@354> XINCLUDE "translation.include.ab3"
0000E816 <prefixtree.include.ab3@355> XINCLUDE "translation.include.ab3"
0000E824 <prefixtree.include.ab3@356> XINCLUDE "translation.include.ab3"
0000E846 <prefixtree.include.ab3@358> XINCLUDE "translation.include.ab3"
0000E872 <prefixtree.include.ab3@359> XINCLUDE "translation.include.ab3"
0000E884 <prefixtree.include.ab3@361> XINCLUDE "translation.include.ab3"
0000E88A <prefixtree.include.ab3@362> XINCLUDE "translation.include.ab3"
0000E8B2 <prefixtree.include.ab3@364> XINCLUDE "translation.include.ab3"
0000E8D6 <prefixtree.include.ab3@365> XINCLUDE "translation.include.ab3"
0000E8FE <prefixtree.include.ab3@366> XINCLUDE "translation.include.ab3"
0000E932 <prefixtree.include.ab3@367> XINCLUDE "translation.include.ab3"
0000E942 <prefixtree.include.ab3@368> XINCLUDE "translation.include.ab3"
0000E94C <prefixtree.include.ab3@369> XINCLUDE "translation.include.ab3"
0000E95A <prefixtree.include.ab3@370> XINCLUDE "translation.include.ab3"
0000E96E <prefixtree.include.ab3@371> XINCLUDE "translation.include.ab3"
0000E974 <prefixtree.include.ab3@372> XINCLUDE "translation.include.ab3"
0000E994 <prefixtree.include.ab3@373> XINCLUDE "translation.include.ab3"
0000E99A <prefixtree.include.ab3@374> XINCLUDE "translation.include.ab3"
0000E9A2 <prefixtree.include.ab3@376> XINCLUDE "translation.include.ab3"
0000E9DC <prefixtree.include.ab3@378> XINCLUDE "translation.include.ab3"
0000EA02 <prefixtree.include.ab3@379> XINCLUDE "translation.include.ab3"
0000EA1A <prefixtree.include.ab3@380> XINCLUDE "translation.include.ab3"
0000EA4E <prefixtree.include.ab3@381> XINCLUDE "translation.include.ab3"
0000EA56 <prefixtree.include.ab3@382> XINCLUDE "translation.include.ab3"
0000EA64 <prefixtree.include.ab3@384> XINCLUDE "translation.include.ab3"
0000EA6A <prefixtree.include.ab3@386> XINCLUDE "translation.include.ab3"
0000EA82 <prefixtree.include.ab3@387> XINCLUDE "translation.include.ab3"
0000EA88 <prefixtree.include.ab3@388> XINCLUDE "translation.include.ab3"
0000EA8E <prefixtree.include.ab3@389> XINCLUDE "translation.include.ab3"
0000EAA8 <prefixtree.include.ab3@390> XINCLUDE "translation.include.ab3"
0000EAAE <prefixtree.include.ab3@393> XINCLUDE "translation.include.ab3"
0000EAB4 <prefixtree.include.ab3@395> XINCLUDE "translation.include.ab3"
0000EABA <prefixtree.include.ab3@397> XINCLUDE "translation.include.ab3"
0000EAC8 <prefixtree.include.ab3@398> XINCLUDE "translation.include.ab3"
0000EAD6 <prefixtree.include.ab3@399> XINCLUDE "translation.include.ab3"
0000EB10 <prefixtree.include.ab3@401> XINCLUDE "translation.include.ab3"
0000EB36 <prefixtree.include.ab3@402> XINCLUDE "translation.include.ab3"
0000EB4E <prefixtree.include.ab3@403> XINCLUDE "translation.include.ab3"
0000EB5A <prefixtree.include.ab3@406> XINCLUDE "translation.include.ab3"
0000EB66 <prefixtree.include.ab3@407> XINCLUDE "translation.include.ab3"
0000EB72 <prefixtree.include.ab3@408> XINCLUDE "translation.include.ab3"
0000EB7E <prefixtree.include.ab3@409> XINCLUDE "translation.include.ab3"
0000EB8A <prefixtree.include.ab3@410> XINCLUDE "translation.include.ab3"
0000EB94 <prefixtree.include.ab3@411> XINCLUDE "translation.include.ab3"
0000EB9C <prefixtree.include.ab3@413> XINCLUDE "translation.include.ab3"
0000EBB6 <prefixtree.include.ab3@414> XINCLUDE "translation.include.ab3"
0000EBF4 <prefixtree.include.ab3@461> XINCLUDE "translation.include.ab3"
0000EBFA <prefixtree.include.ab3@462> XINCLUDE "translation.include.ab3"
0000EC60 <prefixtree.include.ab3@463> XINCLUDE "translation.include.ab3"
0000ECA0 <prefixtree.include.ab3@465> XINCLUDE "translation.include.ab3"
0000ECF6 <prefixtree.include.ab3@466> XINCLUDE "translation.include.ab3"
0000ED68 <prefixtree.include.ab3@467> XINCLUDE "translation.include.ab3"
0000ED74 <prefixtree.include.ab3@469> XINCLUDE "translation.include.ab3"
0000ED82 <prefixtree.include.ab3@470> XINCLUDE "translation.include.ab3"
0000EDC8 <prefixtree.include.ab3@471> XINCLUDE "translation.include.ab3"
0000EE12 <prefixtree.include.ab3@472> XINCLUDE "translation.include.ab3"
0000EE4A <prefixtree.include.ab3@473> XINCLUDE "translation.include.ab3"
0000EE9E <prefixtree.include.ab3@474> XINCLUDE "translation.include.ab3"
0000EEA4 <prefixtree.include.ab3@475> XINCLUDE "translation.include.ab3"
0000EEAA <prefixtree.include.ab3@476> XINCLUDE "translation.include.ab3"
0000EEB8 <prefixtree.include.ab3@478> XINCLUDE "translation.include.ab3"
0000EEC0 <prefixtree.include.ab3@479> XINCLUDE "translation.include.ab3"
0000EEFA <prefixtree.include.ab3@481> XINCLUDE "translation.include.ab3"
0000EF20 <prefixtree.include.ab3@482> XINCLUDE "translation.include.ab3"
0000EF38 <prefixtree.include.ab3@483> XINCLUDE "translation.include.ab3"
0000EF6E <prefixtree.include.ab3@484> XINCLUDE "translation.include.ab3"
0000EF84 <prefixtree.include.ab3@485> XINCLUDE "translation.include.ab3"
0000EF92 <prefixtree.include.ab3@487> XINCLUDE "translation.include.ab3"
0000EFAA <prefixtree.include.ab3@488> XINCLUDE "translation.include.ab3"
0000EFE2 <prefixtree.include.ab3@489> XINCLUDE "translation.include.ab3"
0000F008 <prefixtree.include.ab3@490> XINCLUDE "translation.include.ab3"
0000F050 <prefixtree.include.ab3@491> XINCLUDE "translation.include.ab3"
0000F056 <prefixtree.include.ab3@492> XINCLUDE "translation.include.ab3"
0000F070 <prefixtree.include.ab3@494> XINCLUDE "translation.include.ab3"
0000F07C <prefixtree.include.ab3@495> XINCLUDE "translation.include.ab3"
0000F082 <prefixtree.include.ab3@496> XINCLUDE "translation.include.ab3"
0000F0AE <prefixtree.include.ab3@497> XINCLUDE "translation.include.ab3"
0000F0C2 <prefixtree.include.ab3@502> XINCLUDE "translation.include.ab3"
0000F0D0 <prefixtree.include.ab3@504> XINCLUDE "translation.include.ab3"
0000F0D8 <prefixtree.include.ab3@505> XINCLUDE "translation.include.ab3"
0000F112 <prefixtree.include.ab3@507> XINCLUDE "translation.include.ab3"
0000F138 <prefixtree.include.ab3@508> XINCLUDE "translation.include.ab3"
0000F150 <prefixtree.include.ab3@509> XINCLUDE "translation.include.ab3"
0000F18A <prefixtree.include.ab3@510> XINCLUDE "translation.include.ab3"
0000F1B4 <prefixtree.include.ab3@511> XINCLUDE "translation.include.ab3"
0000F1CC <prefixtree.include.ab3@512> XINCLUDE "translation.include.ab3"
0000F1FC <prefixtree.include.ab3@513> XINCLUDE "translation.include.ab3"
0000F228 <prefixtree.include.ab3@514> XINCLUDE "translation.include.ab3"
0000F244 <prefixtree.include.ab3@515> XINCLUDE "translation.include.ab3"
0000F252 <prefixtree.include.ab3@517> XINCLUDE "translation.include.ab3"
0000F260 <prefixtree.include.ab3@518> XINCLUDE "translation.include.ab3"
0000F29E <prefixtree.include.ab3@519> XINCLUDE "translation.include.ab3"
0000F2DA <prefixtree.include.ab3@520> XINCLUDE "translation.include.ab3"
0000F346 <prefixtree.include.ab3@521> XINCLUDE "translation.include.ab3"
0000F374 <prefixtree.include.ab3@522> XINCLUDE "translation.include.ab3"
0000F3A2 <prefixtree.include.ab3@523> XINCLUDE "translation.include.ab3"
0000F3EA <prefixtree.include.ab3@524> XINCLUDE "translation.include.ab3"
0000F404 <prefixtree.include.ab3@527> XINCLUDE "translation.include.ab3"
0000F44C <prefixtree.include.ab3@528> XINCLUDE "translation.include.ab3"
0000F46A <prefixtree.include.ab3@529> XINCLUDE "translation.include.ab3"
0000F488 <prefixtree.include.ab3@530> XINCLUDE "translation.include.ab3"
0000F4A2 <prefixtree.include.ab3@533> XINCLUDE "translation.include.ab3"
0000F4AE <prefixtree.include.ab3@534> XINCLUDE "translation.include.ab3"
0000F4B4 <prefixtree.include.ab3@535> XINCLUDE "translation.include.ab3"
0000F4E0 <prefixtree.include.ab3@536> XINCLUDE "translation.include.ab3"
0000F4F8 <prefixtree.include.ab3@538> XINCLUDE "translation.include.ab3"
0000F4FE <prefixtree.include.ab3@539> XINCLUDE "translation.include.ab3"
0000F512 <prefixtree.include.ab3@542> XINCLUDE "translation.include.ab3"
0000F520 <prefixtree.include.ab3@544> XINCLUDE "translation.include.ab3"
0000F52E <prefixtree.include.ab3@545> XINCLUDE "translation.include.ab3"
0000F53C <prefixtree.include.ab3@546> XINCLUDE "translation.include.ab3"
0000F544 <prefixtree.include.ab3@547> XINCLUDE "translation.include.ab3"
0000F570 <prefixtree.include.ab3@548> XINCLUDE "translation.include.ab3"
0000F598 <prefixtree.include.ab3@549> XINCLUDE "translation.include.ab3"
0000F5C0 <prefixtree.include.ab3@550> XINCLUDE "translation.include.ab3"
0000F62C <prefixtree.include.ab3@551> XINCLUDE "translation.include.ab3"
0000F63C <prefixtree.include.ab3@552> XINCLUDE "translation.include.ab3"
0000F668 <prefixtree.include.ab3@553> XINCLUDE "translation.include.ab3"
0000F6BE <prefixtree.include.ab3@555> XINCLUDE "translation.include.ab3"
0000F6CC <prefixtree.include.ab3@556> XINCLUDE "translation.include.ab3"
0000F6DA <prefixtree.include.ab3@557> XINCLUDE "translation.include.ab3"
0000F6E0 <prefixtree.include.ab3@558> XINCLUDE "translation.include.ab3"
0000F734 <prefixtree.include.ab3@560> XINCLUDE "translation.include.ab3"
0000F854 <prefixtree.include.ab3@561> XINCLUDE "translation.include.ab3"
0000F8A4 <prefixtree.include.ab3@563> XINCLUDE "translation.include.ab3"
0000F8FA <prefixtree.include.ab3@564> XINCLUDE "translation.include.ab3"
0000F966 <prefixtree.include.ab3@565> XINCLUDE "translation.include.ab3"
0000F96E <prefixtree.include.ab3@569> XINCLUDE "translation.include.ab3"
0000F9A8 <prefixtree.include.ab3@571> XINCLUDE "translation.include.ab3"
0000F9CE <prefixtree.include.ab3@572> XINCLUDE "translation.include.ab3"
0000F9E6 <prefixtree.include.ab3@573> XINCLUDE "translation.include.ab3"
0000FA20 <prefixtree.include.ab3@574> XINCLUDE "translation.include.ab3"
0000FA4A <prefixtree.include.ab3@575> XINCLUDE "translation.include.ab3"
0000FA62 <prefixtree.include.ab3@576> XINCLUDE "translation.include.ab3"
0000FA86 <prefixtree.include.ab3@578> XINCLUDE "translation.include.ab3"
0000FADA <prefixtree.include.ab3@579> XINCLUDE "translation.include.ab3"
0000FAE2 <prefixtree.include.ab3@580> XINCLUDE "translation.include.ab3"
0000FAE8 <prefixtree.include.ab3@581> XINCLUDE "translation.include.ab3"
0000FB4A <prefixtree.include.ab3@582> XINCLUDE "translation.include.ab3"
0000FB76 <prefixtree.include.ab3@583> XINCLUDE "translation.include.ab3"
0000FB92 <prefixtree.include.ab3@586> XINCLUDE "translation.include.ab3"
0000FBA0 <prefixtree.include.ab3@588> XINCLUDE "translation.include.ab3"
0000FBAE <prefixtree.include.ab3@589> XINCLUDE "translation.include.ab3"
0000FBBC <prefixtree.include.ab3@591> XINCLUDE "translation.include.ab3"
0000FBCA <prefixtree.include.ab3@592> XINCLUDE "translation.include.ab3"
0000FC0E <prefixtree.include.ab3@593> XINCLUDE "translation.include.ab3"
0000FC7A <prefixtree.include.ab3@594> XINCLUDE "translation.include.ab3"
0000FCA8 <prefixtree.include.ab3@595> XINCLUDE "translation.include.ab3"
0000FCBC <prefixtree.include.ab3@596> XINCLUDE "translation.include.ab3"
0000FCEE <prefixtree.include.ab3@597> XINCLUDE "translation.include.ab3"
0000FD38 <prefixtree.include.ab3@598> XINCLUDE "translation.include.ab3"
0000FD48 <prefixtree.include.ab3@599> XINCLUDE "translation.include.ab3"
0000FD7C <prefixtree.include.ab3@600> XINCLUDE "translation.include.ab3"
0000FD9E <prefixtree.include.ab3@601> XINCLUDE "translation.include.ab3"
0000FDAE <prefixtree.include.ab3@602> XINCLUDE "translation.include.ab3"
0000FDB6 <prefixtree.include.ab3@605> XINCLUDE "translation.include.ab3"
0000FDFA <prefixtree.include.ab3@606> XINCLUDE "translation.include.ab3"
0000FE66 <prefixtree.include.ab3@607> XINCLUDE "translation.include.ab3"
0000FE94 <prefixtree.include.ab3@608> XINCLUDE "translation.include.ab3"
0000FEB8 <prefixtree.include.ab3@610> XINCLUDE "translation.include.ab3"
0000FEFC <prefixtree.include.ab3@611> XINCLUDE "translation.include.ab3"
0000FF68 <prefixtree.include.ab3@612> XINCLUDE "translation.include.ab3"
0000FF96 <prefixtree.include.ab3@613> XINCLUDE "translation.include.ab3"
0000FFC4 <prefixtree.include.ab3@614> XINCLUDE "translation.include.ab3"
0000FFCC <prefixtree.include.ab3@615> XINCLUDE "translation.include.ab3"
0000FFFA <prefixtree.include.ab3@616> XINCLUDE "translation.include.ab3"
0001006C <prefixtree.include.ab3@617> XINCLUDE "translation.include.ab3"
00010072 <prefixtree.include.ab3@618> XINCLUDE "translation.include.ab3"
000100A0 <prefixtree.include.ab3@619> XINCLUDE "translation.include.ab3"
00010112 <prefixtree.include.ab3@620> XINCLUDE "translation.include.ab3"
00010130 <prefixtree.include.ab3@623> XINCLUDE "translation.include.ab3"
00010154 <prefixtree.include.ab3@624> XINCLUDE "translation.include.ab3"
0001016C <prefixtree.include.ab3@625> XINCLUDE "translation.include.ab3"
00010172 <prefixtree.include.ab3@626> XINCLUDE "translation.include.ab3"
00010178 <prefixtree.include.ab3@629> XINCLUDE "translation.include.ab3"
0001017A <prefixtree.include.ab3@631> XINCLUDE "translation.include.ab3"
00010184 <prefixtree.include.ab3@634> XINCLUDE "translation.include.ab3"
000101B0 <prefixtree.include.ab3@635> XINCLUDE "translation.include.ab3"
000101D2 <prefixtree.include.ab3@653> XINCLUDE "translation.include.ab3"
000101DA <prefixtree.include.ab3@655> XINCLUDE "translation.include.ab3"
000101E0 <prefixtree.include.ab3@656> XINCLUDE "translation.include.ab3"
000101EE <prefixtree.include.ab3@657> XINCLUDE "translation.include.ab3"
00010228 <prefixtree.include.ab3@659> XINCLUDE "translation.include.ab3"
0001024E <prefixtree.include.ab3@660> XINCLUDE "translation.include.ab3"
00010266 <prefixtree.include.ab3@661> XINCLUDE "translation.include.ab3"
000102A0 <prefixtree.include.ab3@662> XINCLUDE "translation.include.ab3"
000102CA <prefixtree.include.ab3@663> XINCLUDE "translation.include.ab3"
000102E2 <prefixtree.include.ab3@665> XINCLUDE "translation.include.ab3"
000102FA <prefixtree.include.ab3@666> XINCLUDE "translation.include.ab3"
00010332 <prefixtree.include.ab3@667> XINCLUDE "translation.include.ab3"
0001033A <prefixtree.include.ab3@669> XINCLUDE "translation.include.ab3"
00010374 <prefixtree.include.ab3@671> XINCLUDE "translation.include.ab3"
00010386 <prefixtree.include.ab3@673> XINCLUDE "translation.include.ab3"
000103AC <prefixtree.include.ab3@674> XINCLUDE "translation.include.ab3"
000103C2 <prefixtree.include.ab3@675> XINCLUDE "translation.include.ab3"
000103E8 <prefixtree.include.ab3@676> XINCLUDE "translation.include.ab3"
000103FC <prefixtree.include.ab3@677> XINCLUDE "translation.include.ab3"
00010414 <prefixtree.include.ab3@679> XINCLUDE "translation.include.ab3"
00010426 <prefixtree.include.ab3@681> XINCLUDE "translation.include.ab3"
00010430 <prefixtree.include.ab3@683> XINCLUDE "translation.include.ab3"
00010444 <prefixtree.include.ab3@685> XINCLUDE "translation.include.ab3"
0001045E <prefixtree.include.ab3@702> XINCLUDE "translation.include.ab3"
0001047C <prefixtree.include.ab3@704> XINCLUDE "translation.include.ab3"
0001048E <prefixtree.include.ab3@705> XINCLUDE "translation.include.ab3"
000104AC <prefixtree.include.ab3@706> XINCLUDE "translation.include.ab3"
000104E8 <prefixtree.include.ab3@707> XINCLUDE "translation.include.ab3"
00010504 <prefixtree.include.ab3@708> XINCLUDE "translation.include.ab3"
00010524 <prefixtree.include.ab3@709> XINCLUDE "translation.include.ab3"
0001052E <prefixtree.include.ab3@710> XINCLUDE "translation.include.ab3"
00010534 <prefixtree.include.ab3@711> XINCLUDE "translation.include.ab3"
0001053E <prefixtree.include.ab3@712> XINCLUDE "translation.include.ab3"
0001054A <prefixtree.include.ab3@714> XINCLUDE "translation.include.ab3"
00010550 <prefixtree.include.ab3@716> XINCLUDE "translation.include.ab3"
0001057E <prefixtree.include.ab3@735> XINCLUDE "translation.include.ab3"
000105A6 <prefixtree.include.ab3@736> XINCLUDE "translation.include.ab3"
000105E6 <prefixtree.include.ab3@737> XINCLUDE "translation.include.ab3"
000105FE <prefixtree.include.ab3@738> XINCLUDE "translation.include.ab3"
00010644 <prefixtree.include.ab3@739> XINCLUDE "translation.include.ab3"
0001066E <prefixtree.include.ab3@742> XINCLUDE "translation.include.ab3"
0001069C <prefixtree.include.ab3@743> XINCLUDE "translation.include.ab3"
000106B6 <prefixtree.include.ab3@942> XINCLUDE "translation.include.ab3"
000106BE <prefixtree.include.ab3@943> XINCLUDE "translation.include.ab3"
000106D6 <prefixtree.include.ab3@944> XINCLUDE "translation.include.ab3"
000106E0 <prefixtree.include.ab3@945> XINCLUDE "translation.include.ab3"
000106F2 <prefixtree.include.ab3@946> XINCLUDE "translation.include.ab3"
0001072A <prefixtree.include.ab3@947> XINCLUDE "translation.include.ab3"
00010738 <prefixtree.include.ab3@948> XINCLUDE "translation.include.ab3"
00010744 <prefixtree.include.ab3@949> XINCLUDE "translation.include.ab3"
00010760 <prefixtree.include.ab3@950> XINCLUDE "translation.include.ab3"
00010782 <prefixtree.include.ab3@951> XINCLUDE "translation.include.ab3"
000107A4 <prefixtree.include.ab3@952> XINCLUDE "translation.include.ab3"
000107C6 <prefixtree.include.ab3@953> XINCLUDE "translation.include.ab3"
000107E8 <prefixtree.include.ab3@954> XINCLUDE "translation.include.ab3"
00010804 <prefixtree.include.ab3@955> XINCLUDE "translation.include.ab3"
00010822 <prefixtree.include.ab3@956> XINCLUDE "translation.include.ab3"
00010836 <prefixtree.include.ab3@957> XINCLUDE "translation.include.ab3"
0001083C <prefixtree.include.ab3@959> XINCLUDE "translation.include.ab3"
0001083E <prefixtree.include.ab3@961> XINCLUDE "translation.include.ab3"
00010844 <prefixtree.include.ab3@962> XINCLUDE "translation.include.ab3"
0001084E <prefixtree.include.ab3@964> XINCLUDE "translation.include.ab3"
00010854 <prefixtree.include.ab3@965> XINCLUDE "translation.include.ab3"
00010872 <prefixtree.include.ab3@983> XINCLUDE "translation.include.ab3"
00010878 <prefixtree.include.ab3@984> XINCLUDE "translation.include.ab3"
0001089C <prefixtree.include.ab3@985> XINCLUDE "translation.include.ab3"
000108BA <prefixtree.include.ab3@986> XINCLUDE "translation.include.ab3"
000108E8 <prefixtree.include.ab3@987> XINCLUDE "translation.include.ab3"
00010916 <prefixtree.include.ab3@988> XINCLUDE "translation.include.ab3"
00010944 <prefixtree.include.ab3@989> XINCLUDE "translation.include.ab3"
00010972 <prefixtree.include.ab3@990> XINCLUDE "translation.include.ab3"
000109A6 <prefixtree.include.ab3@991> XINCLUDE "translation.include.ab3"
000109B6 <prefixtree.include.ab3@992> XINCLUDE "translation.include.ab3"
000109C0 <prefixtree.include.ab3@994> XINCLUDE "translation.include.ab3"
000109C6 <prefixtree.include.ab3@995> XINCLUDE "translation.include.ab3"
000109C6 <phrasebook.include.ab3@34> XINCLUDE "translation.include.ab3"
00010A10 <phrasebook.include.ab3@58> XINCLUDE "translation.include.ab3"
00010A30 <phrasebook.include.ab3@59> XINCLUDE "translation.include.ab3"
00010A3A <phrasebook.include.ab3@60> XINCLUDE "translation.include.ab3"
00010A4E <phrasebook.include.ab3@61> XINCLUDE "translation.include.ab3"
00010A94 <phrasebook.include.ab3@62> XINCLUDE "translation.include.ab3"
00010ADA <phrasebook.include.ab3@63> XINCLUDE "translation.include.ab3"
00010B20 <phrasebook.include.ab3@64> XINCLUDE "translation.include.ab3"
00010B2A <phrasebook.include.ab3@66> XINCLUDE "translation.include.ab3"
00010B46 <phrasebook.include.ab3@67> XINCLUDE "translation.include.ab3"
00010B70 <phrasebook.include.ab3@70> XINCLUDE "translation.include.ab3"
00010BEE <phrasebook.include.ab3@71> XINCLUDE "translation.include.ab3"
00010C6C <phrasebook.include.ab3@72> XINCLUDE "translation.include.ab3"
00010CEA <phrasebook.include.ab3@73> XINCLUDE "translation.include.ab3"
00010D68 <phrasebook.include.ab3@74> XINCLUDE "translation.include.ab3"
00010DE6 <phrasebook.include.ab3@75> XINCLUDE "translation.include.ab3"
00010E64 <phrasebook.include.ab3@76> XINCLUDE "translation.include.ab3"
00010EE2 <phrasebook.include.ab3@77> XINCLUDE "translation.include.ab3"
00010F60 <phrasebook.include.ab3@78> XINCLUDE "translation.include.ab3"
00010FDE <phrasebook.include.ab3@79> XINCLUDE "translation.include.ab3"
0001105C <phrasebook.include.ab3@80> XINCLUDE "translation.include.ab3"
000110E0 <phrasebook.include.ab3@81> XINCLUDE "translation.include.ab3"
00011110 <phrasebook.include.ab3@82> XINCLUDE "translation.include.ab3"
0001116C <phrasebook.include.ab3@84> XINCLUDE "translation.include.ab3"
00011198 <phrasebook.include.ab3@85> XINCLUDE "translation.include.ab3"
00011262 <phrasebook.include.ab3@86> XINCLUDE "translation.include.ab3"
00011270 <phrasebook.include.ab3@88> XINCLUDE "translation.include.ab3"
000112AE <phrasebook.include.ab3@89> XINCLUDE "translation.include.ab3"
00011332 <phrasebook.include.ab3@90> XINCLUDE "translation.include.ab3"
0001135C <phrasebook.include.ab3@91> XINCLUDE "translation.include.ab3"
0001137A <phrasebook.include.ab3@92> XINCLUDE "translation.include.ab3"
00011394 <phrasebook.include.ab3@106> XINCLUDE "translation.include.ab3"
0001139E <phrasebook.include.ab3@107> XINCLUDE "translation.include.ab3"
000113AA <phrasebook.include.ab3@108> XINCLUDE "translation.include.ab3"
000113BA <phrasebook.include.ab3@109> XINCLUDE "translation.include.ab3"
000113CA <phrasebook.include.ab3@110> XINCLUDE "translation.include.ab3"
000113DA <phrasebook.include.ab3@111> XINCLUDE "translation.include.ab3"
000113EA <phrasebook.include.ab3@112> XINCLUDE "translation.include.ab3"
000113EE <phrasebook.include.ab3@114> XINCLUDE "translation.include.ab3"
0001142C <phrasebook.include.ab3@131> XINCLUDE "translation.include.ab3"
00011484 <phrasebook.include.ab3@132> XINCLUDE "translation.include.ab3"
000114E0 <phrasebook.include.ab3@133> XINCLUDE "translation.include.ab3"
0001156A <phrasebook.include.ab3@134> XINCLUDE "translation.include.ab3"
000115E8 <phrasebook.include.ab3@135> XINCLUDE "translation.include.ab3"
00011602 <phrasebook.include.ab3@137> XINCLUDE "translation.include.ab3"
00011630 <phrasebook.include.ab3@155> XINCLUDE "translation.include.ab3"
0001166C <phrasebook.include.ab3@156> XINCLUDE "translation.include.ab3"
0001173A <phrasebook.include.ab3@158> XINCLUDE "translation.include.ab3"
00011808 <phrasebook.include.ab3@159> XINCLUDE "translation.include.ab3"
00011854 <phrasebook.include.ab3@161> XINCLUDE "translation.include.ab3"
000118D2 <phrasebook.include.ab3@162> XINCLUDE "translation.include.ab3"
00011950 <phrasebook.include.ab3@163> XINCLUDE "translation.include.ab3"
000119AE <phrasebook.include.ab3@165> XINCLUDE "translation.include.ab3"
00011A44 <phrasebook.include.ab3@166> XINCLUDE "translation.include.ab3"
00011A7C <phrasebook.include.ab3@168> XINCLUDE "translation.include.ab3"
00011ADA <phrasebook.include.ab3@169> XINCLUDE "translation.include.ab3"
00011B62 <phrasebook.include.ab3@170> XINCLUDE "translation.include.ab3"
00011B6A <phrasebook.include.ab3@172> XINCLUDE "translation.include.ab3"
00011BD4 <phrasebook.include.ab3@174> XINCLUDE "translation.include.ab3"
00011C40 <phrasebook.include.ab3@175> XINCLUDE "translation.include.ab3"
00011C7E <phrasebook.include.ab3@176> XINCLUDE "translation.include.ab3"
00011D06 <phrasebook.include.ab3@177> XINCLUDE "translation.include.ab3"
00011D32 <phrasebook.include.ab3@187> XINCLUDE "translation.include.ab3"
00011D8E <phrasebook.include.ab3@188> XINCLUDE "translation.include.ab3"
00011E56 <phrasebook.include.ab3@189> XINCLUDE "translation.include.ab3"
00011EBA <phrasebook.include.ab3@190> XINCLUDE "translation.include.ab3"
00011EC0 <phrasebook.include.ab3@191> XINCLUDE "translation.include.ab3"
00011EF4 <phrasebook.include.ab3@192> XINCLUDE "translation.include.ab3"
00011FC2 <phrasebook.include.ab3@196> XINCLUDE "translation.include.ab3"
00012090 <phrasebook.include.ab3@197> XINCLUDE "translation.include.ab3"
000120BA <phrasebook.include.ab3@199> XINCLUDE "translation.include.ab3"
000120D8 <phrasebook.include.ab3@200> XINCLUDE "translation.include.ab3"
00012106 <phrasebook.include.ab3@204> XINCLUDE "translation.include.ab3"
00012142 <phrasebook.include.ab3@205> XINCLUDE "translation.include.ab3"
000121B2 <phrasebook.include.ab3@206> XINCLUDE "translation.include.ab3"
000121BA <phrasebook.include.ab3@207> XINCLUDE "translation.include.ab3"
0001220C <phrasebook.include.ab3@208> XINCLUDE "translation.include.ab3"
00012234 <phrasebook.include.ab3@209> XINCLUDE "translation.include.ab3"
0001224C <phrasebook.include.ab3@210> XINCLUDE "translation.include.ab3"
00012300 <phrasebook.include.ab3@211> XINCLUDE "translation.include.ab3"
0001230E <phrasebook.include.ab3@212> XINCLUDE "translation.include.ab3"
00012364 <phrasebook.include.ab3@213> XINCLUDE "translation.include.ab3"
000123C2 <phrasebook.include.ab3@214> XINCLUDE "translation.include.ab3"
000123C8 <phrasebook.include.ab3@215> XINCLUDE "translation.include.ab3"
0001244C <phrasebook.include.ab3@216> XINCLUDE "translation.include.ab3"
000124D0 <phrasebook.include.ab3@217> XINCLUDE "translation.include.ab3"
00012554 <phrasebook.include.ab3@218> XINCLUDE "translation.include.ab3"
000125D2 <phrasebook.include.ab3@219> XINCLUDE "translation.include.ab3"
00012650 <phrasebook.include.ab3@220> XINCLUDE "translation.include.ab3"
000126CE <phrasebook.include.ab3@221> XINCLUDE "translation.include.ab3"
0001274C <phrasebook.include.ab3@222> XINCLUDE "translation.include.ab3"
000127CA <phrasebook.include.ab3@223> XINCLUDE "translation.include.ab3"
00012848 <phrasebook.include.ab3@224> XINCLUDE "translation.include.ab3"
000128C6 <phrasebook.include.ab3@225> XINCLUDE "translation.include.ab3"
000128F0 <phrasebook.include.ab3@226> XINCLUDE "translation.include.ab3"
0001290E <phrasebook.include.ab3@227> XINCLUDE "translation.include.ab3"
0001293C <phrasebook.include.ab3@245> XINCLUDE "translation.include.ab3"
00012980 <phrasebook.include.ab3@246> XINCLUDE "translation.include.ab3"
00012986 <phrasebook.include.ab3@247> XINCLUDE "translation.include.ab3"
000129A0 <phrasebook.include.ab3@248> XINCLUDE "translation.include.ab3"
000129BC <phrasebook.include.ab3@249> XINCLUDE "translation.include.ab3"
000129F0 <phrasebook.include.ab3@250> XINCLUDE "translation.include.ab3"
00012A14 <phrasebook.include.ab3@251> XINCLUDE "translation.include.ab3"
00012A3C <phrasebook.include.ab3@252> XINCLUDE "translation.include.ab3"
00012AA8 <phrasebook.include.ab3@253> XINCLUDE "translation.include.ab3"
00012B06 <phrasebook.include.ab3@256> XINCLUDE "translation.include.ab3"
00012B64 <phrasebook.include.ab3@257> XINCLUDE "translation.include.ab3"
00012BB0 <phrasebook.include.ab3@258> XINCLUDE "translation.include.ab3"
00012C0A <phrasebook.include.ab3@259> XINCLUDE "translation.include.ab3"
00012C10 <phrasebook.include.ab3@260> XINCLUDE "translation.include.ab3"
00012C16 <phrasebook.include.ab3@262> XINCLUDE "translation.include.ab3"
00012C20 <phrasebook.include.ab3@263> XINCLUDE "translation.include.ab3"
00012C2A <phrasebook.include.ab3@264> XINCLUDE "translation.include.ab3"
00012C44 <phrasebook.include.ab3@265> XINCLUDE "translation.include.ab3"
00012C72 <phrasebook.include.ab3@282> XINCLUDE "translation.include.ab3"
00012C78 <phrasebook.include.ab3@283> XINCLUDE "translation.include.ab3"
00012CBC <phrasebook.include.ab3@284> XINCLUDE "translation.include.ab3"
00012CD6 <phrasebook.include.ab3@285> XINCLUDE "translation.include.ab3"
00012CE6 <phrasebook.include.ab3@286> XINCLUDE "translation.include.ab3"
00012CF0 <phrasebook.include.ab3@287> XINCLUDE "translation.include.ab3"
00012CFC <phrasebook.include.ab3@288> XINCLUDE "translation.include.ab3"
00012D06 <phrasebook.include.ab3@289> XINCLUDE "translation.include.ab3"
00012D2A <phrasebook.include.ab3@292> XINCLUDE "translation.include.ab3"
00012D72 <phrasebook.include.ab3@293> XINCLUDE "translation.include.ab3"
00012DBA <phrasebook.include.ab3@294> XINCLUDE "translation.include.ab3"
00012E02 <phrasebook.include.ab3@295> XINCLUDE "translation.include.ab3"
00012E18 <phrasebook.include.ab3@296> XINCLUDE "translation.include.ab3"
00012E2C <phrasebook.include.ab3@297> XINCLUDE "translation.include.ab3"
00012E36 <phrasebook.include.ab3@299> XINCLUDE "translation.include.ab3"
00012E40 <phrasebook.include.ab3@300> XINCLUDE "translation.include.ab3"
00012E5A <phrasebook.include.ab3@301> XINCLUDE "translation.include.ab3"
00012E84 <phrasebook.include.ab3@317> XINCLUDE "translation.include.ab3"
00012EC8 <phrasebook.include.ab3@318> XINCLUDE "translation.include.ab3"
00012EE2 <phrasebook.include.ab3@319> XINCLUDE "translation.include.ab3"
00012F40 <phrasebook.include.ab3@320> XINCLUDE "translation.include.ab3"
00012F5A <phrasebook.include.ab3@321> XINCLUDE "translation.include.ab3"
00012F72 <phrasebook.include.ab3@323> XINCLUDE "translation.include.ab3"
00012F7C <phrasebook.include.ab3@324> XINCLUDE "translation.include.ab3"
00012F98 <phrasebook.include.ab3@325> XINCLUDE "translation.include.ab3"
00012FA6 <phrasebook.include.ab3@326> XINCLUDE "translation.include.ab3"
00012FB2 <phrasebook.include.ab3@327> XINCLUDE "translation.include.ab3"
00012FFE <phrasebook.include.ab3@328> XINCLUDE "translation.include.ab3"
00013050 <phrasebook.include.ab3@329> XINCLUDE "translation.include.ab3"
000130A2 <phrasebook.include.ab3@330> XINCLUDE "translation.include.ab3"
000130B6 <phrasebook.include.ab3@331> XINCLUDE "translation.include.ab3"
000130C6 <phrasebook.include.ab3@332> XINCLUDE "translation.include.ab3"
000130CC <phrasebook.include.ab3@333> XINCLUDE "translation.include.ab3"
000130CE <phrasebook.include.ab3@335> XINCLUDE "translation.include.ab3"
000130D4 <phrasebook.include.ab3@336> XINCLUDE "translation.include.ab3"
000130DE <phrasebook.include.ab3@338> XINCLUDE "translation.include.ab3"
000130E8 <phrasebook.include.ab3@339> XINCLUDE "translation.include.ab3"
00013102 <phrasebook.include.ab3@340> XINCLUDE "translation.include.ab3"
0001312C <phrasebook.include.ab3@379> XINCLUDE "translation.include.ab3"
00013142 <phrasebook.include.ab3@380> XINCLUDE "translation.include.ab3"
0001314C <phrasebook.include.ab3@381> XINCLUDE "translation.include.ab3"
000131C4 <phrasebook.include.ab3@382> XINCLUDE "translation.include.ab3"
00013200 <phrasebook.include.ab3@383> XINCLUDE "translation.include.ab3"
00013210 <phrasebook.include.ab3@384> XINCLUDE "translation.include.ab3"
00013230 <phrasebook.include.ab3@385> XINCLUDE "translation.include.ab3"
00013250 <phrasebook.include.ab3@386> XINCLUDE "translation.include.ab3"
00013270 <phrasebook.include.ab3@387> XINCLUDE "translation.include.ab3"
000132A6 <phrasebook.include.ab3@388> XINCLUDE "translation.include.ab3"
000132CE <phrasebook.include.ab3@389> XINCLUDE "translation.include.ab3"
00013306 <phrasebook.include.ab3@390> XINCLUDE "translation.include.ab3"
0001336A <phrasebook.include.ab3@391> XINCLUDE "translation.include.ab3"
0001338A <phrasebook.include.ab3@392> XINCLUDE "translation.include.ab3"
00013406 <phrasebook.include.ab3@393> XINCLUDE "translation.include.ab3"
0001343E <phrasebook.include.ab3@396> XINCLUDE "translation.include.ab3"
000134B4 <phrasebook.include.ab3@397> XINCLUDE "translation.include.ab3"
000134D4 <phrasebook.include.ab3@398> XINCLUDE "translation.include.ab3"
00013550 <phrasebook.include.ab3@399> XINCLUDE "translation.include.ab3"
00013588 <phrasebook.include.ab3@402> XINCLUDE "translation.include.ab3"
000135FE <phrasebook.include.ab3@403> XINCLUDE "translation.include.ab3"
0001361E <phrasebook.include.ab3@404> XINCLUDE "translation.include.ab3"
0001369A <phrasebook.include.ab3@405> XINCLUDE "translation.include.ab3"
000136C6 <phrasebook.include.ab3@408> XINCLUDE "translation.include.ab3"
000136CE <phrasebook.include.ab3@409> XINCLUDE "translation.include.ab3"
00013714 <phrasebook.include.ab3@410> XINCLUDE "translation.include.ab3"
00013734 <phrasebook.include.ab3@411> XINCLUDE "translation.include.ab3"
0001373E <phrasebook.include.ab3@412> XINCLUDE "translation.include.ab3"
00013756 <phrasebook.include.ab3@413> XINCLUDE "translation.include.ab3"
00013766 <phrasebook.include.ab3@414> XINCLUDE "translation.include.ab3"
0001379E <phrasebook.include.ab3@415> XINCLUDE "translation.include.ab3"
000137D0 <phrasebook.include.ab3@416> XINCLUDE "translation.include.ab3"
000137E2 <phrasebook.include.ab3@419> XINCLUDE "translation.include.ab3"
00013864 <phrasebook.include.ab3@420> XINCLUDE "translation.include.ab3"
0001386E <phrasebook.include.ab3@421> XINCLUDE "translation.include.ab3"
000138A0 <phrasebook.include.ab3@422> XINCLUDE "translation.include.ab3"
000138D2 <phrasebook.include.ab3@423> XINCLUDE "translation.include.ab3"
000138FE <phrasebook.include.ab3@428> XINCLUDE "translation.include.ab3"
0001392A <phrasebook.include.ab3@429> XINCLUDE "translation.include.ab3"
0001394C <phrasebook.include.ab3@430> XINCLUDE "translation.include.ab3"
00013956 <phrasebook.include.ab3@432> XINCLUDE "translation.include.ab3"
00013970 <phrasebook.include.ab3@433> XINCLUDE "translation.include.ab3"
00013970 <translation.include.ab3@31> XINCLUDE "translation.include.ab3"
00013986 <translation.include.ab3@43> XINCLUDE "translation.include.ab3"
000139A2 <translation.include.ab3@44> XINCLUDE "translation.include.ab3"
000139A4 <translation.include.ab3@45> XINCLUDE "translation.include.ab3"
000139D2 <translation.include.ab3@46> XINCLUDE "translation.include.ab3"
000139D2 <AmiBlitz3.ab3@91> XINCLUDE "translation.include.ab3"
000139D2 <ted.include.ab3@1> XINCLUDE "/Shared/ted.include.ab3"
000139EC <ted.include.ab3@161> XINCLUDE "/Shared/ted.include.ab3"
000139F6 <ted.include.ab3@162> XINCLUDE "/Shared/ted.include.ab3"
00013A18 <ted.include.ab3@163> XINCLUDE "/Shared/ted.include.ab3"
00013A30 <ted.include.ab3@164> XINCLUDE "/Shared/ted.include.ab3"
00013A4A <ted.include.ab3@166> XINCLUDE "/Shared/ted.include.ab3"
00013A7C <ted.include.ab3@167> XINCLUDE "/Shared/ted.include.ab3"
00013A86 <ted.include.ab3@168> XINCLUDE "/Shared/ted.include.ab3"
00013A8C <ted.include.ab3@170> XINCLUDE "/Shared/ted.include.ab3"
00013A9E <ted.include.ab3@171> XINCLUDE "/Shared/ted.include.ab3"
00013B12 <ted.include.ab3@172> XINCLUDE "/Shared/ted.include.ab3"
00013B18 <ted.include.ab3@173> XINCLUDE "/Shared/ted.include.ab3"
00013B52 <ted.include.ab3@174> XINCLUDE "/Shared/ted.include.ab3"
00013B5C <ted.include.ab3@177> XINCLUDE "/Shared/ted.include.ab3"
00013B62 <ted.include.ab3@178> XINCLUDE "/Shared/ted.include.ab3"
00013B78 <ted.include.ab3@180> XINCLUDE "/Shared/ted.include.ab3"
00013B82 <ted.include.ab3@181> XINCLUDE "/Shared/ted.include.ab3"
00013B9A <ted.include.ab3@183> XINCLUDE "/Shared/ted.include.ab3"
00013B9C <ted.include.ab3@185> XINCLUDE "/Shared/ted.include.ab3"
00013BCA <ted.include.ab3@186> XINCLUDE "/Shared/ted.include.ab3"
00013BE4 <ted.include.ab3@190> XINCLUDE "/Shared/ted.include.ab3"
00013BFA <ted.include.ab3@191> XINCLUDE "/Shared/ted.include.ab3"
00013C2E <ted.include.ab3@192> XINCLUDE "/Shared/ted.include.ab3"
00013C32 <ted.include.ab3@194> XINCLUDE "/Shared/ted.include.ab3"
00013C4C <ted.include.ab3@196> XINCLUDE "/Shared/ted.include.ab3"
00013C62 <ted.include.ab3@197> XINCLUDE "/Shared/ted.include.ab3"
00013C96 <ted.include.ab3@198> XINCLUDE "/Shared/ted.include.ab3"
00013C9A <ted.include.ab3@200> XINCLUDE "/Shared/ted.include.ab3"
00013CB4 <ted.include.ab3@216> XINCLUDE "/Shared/ted.include.ab3"
00013CCA <ted.include.ab3@217> XINCLUDE "/Shared/ted.include.ab3"
00013CFE <ted.include.ab3@218> XINCLUDE "/Shared/ted.include.ab3"
00013D02 <ted.include.ab3@220> XINCLUDE "/Shared/ted.include.ab3"
00013D1C <ted.include.ab3@236> XINCLUDE "/Shared/ted.include.ab3"
00013D32 <ted.include.ab3@237> XINCLUDE "/Shared/ted.include.ab3"
00013D66 <ted.include.ab3@238> XINCLUDE "/Shared/ted.include.ab3"
00013D6A <ted.include.ab3@240> XINCLUDE "/Shared/ted.include.ab3"
00013D84 <ted.include.ab3@242> XINCLUDE "/Shared/ted.include.ab3"
00013D9A <ted.include.ab3@243> XINCLUDE "/Shared/ted.include.ab3"
00013DCE <ted.include.ab3@244> XINCLUDE "/Shared/ted.include.ab3"
00013DD2 <ted.include.ab3@246> XINCLUDE "/Shared/ted.include.ab3"
00013DD2 <AmiBlitz3.ab3@92> XINCLUDE "/Shared/ted.include.ab3"
00013DD2 <CLIModeSupport.ab3@1> XINCLUDE "CLIModeSupport.ab3"
00013DE8 <CLIModeSupport.ab3@4> XINCLUDE "CLIModeSupport.ab3"
00013DFE <CLIModeSupport.ab3@7> XINCLUDE "CLIModeSupport.ab3"
00013E0C <CLIModeSupport.ab3@8> XINCLUDE "CLIModeSupport.ab3"
00013E1A <CLIModeSupport.ab3@9> XINCLUDE "CLIModeSupport.ab3"
00013E24 <CLIModeSupport.ab3@11> XINCLUDE "CLIModeSupport.ab3"
00013E36 <CLIModeSupport.ab3@12> XINCLUDE "CLIModeSupport.ab3"
00013E48 <CLIModeSupport.ab3@13> XINCLUDE "CLIModeSupport.ab3"
00013E4E <CLIModeSupport.ab3@14> XINCLUDE "CLIModeSupport.ab3"
00013E88 <CLIModeSupport.ab3@15> XINCLUDE "CLIModeSupport.ab3"
00013E8C <CLIModeSupport.ab3@18> XINCLUDE "CLIModeSupport.ab3"
00013EA2 <CLIModeSupport.ab3@21> XINCLUDE "CLIModeSupport.ab3"
00013EB8 <CLIModeSupport.ab3@23> XINCLUDE "CLIModeSupport.ab3"
00013EC4 <CLIModeSupport.ab3@24> XINCLUDE "CLIModeSupport.ab3"
00013ED0 <CLIModeSupport.ab3@25> XINCLUDE "CLIModeSupport.ab3"
00013ED8 <CLIModeSupport.ab3@26> XINCLUDE "CLIModeSupport.ab3"
00013EE0 <CLIModeSupport.ab3@27> XINCLUDE "CLIModeSupport.ab3"
00013EE4 <CLIModeSupport.ab3@28> XINCLUDE "CLIModeSupport.ab3"
00013F0E <CLIModeSupport.ab3@47> XINCLUDE "CLIModeSupport.ab3"
00013F3A <CLIModeSupport.ab3@49> XINCLUDE "CLIModeSupport.ab3"
00013F4C <CLIModeSupport.ab3@50> XINCLUDE "CLIModeSupport.ab3"
00013F64 <CLIModeSupport.ab3@52> XINCLUDE "CLIModeSupport.ab3"
00013F7A <CLIModeSupport.ab3@56> XINCLUDE "CLIModeSupport.ab3"
00013F80 <CLIModeSupport.ab3@58> XINCLUDE "CLIModeSupport.ab3"
00013FB6 <CLIModeSupport.ab3@61> XINCLUDE "CLIModeSupport.ab3"
00013FEE <CLIModeSupport.ab3@62> XINCLUDE "CLIModeSupport.ab3"
00014026 <CLIModeSupport.ab3@63> XINCLUDE "CLIModeSupport.ab3"
0001405E <CLIModeSupport.ab3@64> XINCLUDE "CLIModeSupport.ab3"
00014096 <CLIModeSupport.ab3@65> XINCLUDE "CLIModeSupport.ab3"
000140CE <CLIModeSupport.ab3@66> XINCLUDE "CLIModeSupport.ab3"
00014106 <CLIModeSupport.ab3@67> XINCLUDE "CLIModeSupport.ab3"
0001413E <CLIModeSupport.ab3@68> XINCLUDE "CLIModeSupport.ab3"
00014176 <CLIModeSupport.ab3@69> XINCLUDE "CLIModeSupport.ab3"
000141AE <CLIModeSupport.ab3@70> XINCLUDE "CLIModeSupport.ab3"
000141E6 <CLIModeSupport.ab3@71> XINCLUDE "CLIModeSupport.ab3"
0001421E <CLIModeSupport.ab3@72> XINCLUDE "CLIModeSupport.ab3"
00014256 <CLIModeSupport.ab3@73> XINCLUDE "CLIModeSupport.ab3"
00014260 <CLIModeSupport.ab3@74> XINCLUDE "CLIModeSupport.ab3"
0001426A <CLIModeSupport.ab3@76> XINCLUDE "CLIModeSupport.ab3"
00014274 <CLIModeSupport.ab3@77> XINCLUDE "CLIModeSupport.ab3"
0001429E <CLIModeSupport.ab3@81> XINCLUDE "CLIModeSupport.ab3"
000142A8 <CLIModeSupport.ab3@82> XINCLUDE "CLIModeSupport.ab3"
000142AC <CLIModeSupport.ab3@83> XINCLUDE "CLIModeSupport.ab3"
000142E0 <CLIModeSupport.ab3@84> XINCLUDE "CLIModeSupport.ab3"
000142E6 <CLIModeSupport.ab3@85> XINCLUDE "CLIModeSupport.ab3"
00014320 <CLIModeSupport.ab3@86> XINCLUDE "CLIModeSupport.ab3"
00014326 <CLIModeSupport.ab3@87> XINCLUDE "CLIModeSupport.ab3"
0001433C <CLIModeSupport.ab3@90> XINCLUDE "CLIModeSupport.ab3"
00014346 <CLIModeSupport.ab3@92> XINCLUDE "CLIModeSupport.ab3"
0001434C <CLIModeSupport.ab3@93> XINCLUDE "CLIModeSupport.ab3"
00014362 <CLIModeSupport.ab3@97> XINCLUDE "CLIModeSupport.ab3"
00014368 <CLIModeSupport.ab3@98> XINCLUDE "CLIModeSupport.ab3"
000143A6 <CLIModeSupport.ab3@100> XINCLUDE "CLIModeSupport.ab3"
000143AA <CLIModeSupport.ab3@101> XINCLUDE "CLIModeSupport.ab3"
000143B4 <CLIModeSupport.ab3@102> XINCLUDE "CLIModeSupport.ab3"
000143B6 <CLIModeSupport.ab3@103> XINCLUDE "CLIModeSupport.ab3"
000143EA <CLIModeSupport.ab3@104> XINCLUDE "CLIModeSupport.ab3"
000143FA <CLIModeSupport.ab3@105> XINCLUDE "CLIModeSupport.ab3"
00014404 <CLIModeSupport.ab3@108> XINCLUDE "CLIModeSupport.ab3"
0001440A <CLIModeSupport.ab3@109> XINCLUDE "CLIModeSupport.ab3"
00014420 <CLIModeSupport.ab3@113> XINCLUDE "CLIModeSupport.ab3"
0001445E <CLIModeSupport.ab3@114> XINCLUDE "CLIModeSupport.ab3"
00014462 <CLIModeSupport.ab3@115> XINCLUDE "CLIModeSupport.ab3"
0001446A <CLIModeSupport.ab3@116> XINCLUDE "CLIModeSupport.ab3"
000144A8 <CLIModeSupport.ab3@117> XINCLUDE "CLIModeSupport.ab3"
000144AA <CLIModeSupport.ab3@118> XINCLUDE "CLIModeSupport.ab3"
000144AE <CLIModeSupport.ab3@119> XINCLUDE "CLIModeSupport.ab3"
000144EC <CLIModeSupport.ab3@121> XINCLUDE "CLIModeSupport.ab3"
000144F0 <CLIModeSupport.ab3@122> XINCLUDE "CLIModeSupport.ab3"
0001452E <CLIModeSupport.ab3@124> XINCLUDE "CLIModeSupport.ab3"
00014532 <CLIModeSupport.ab3@125> XINCLUDE "CLIModeSupport.ab3"
0001455C <CLIModeSupport.ab3@127> XINCLUDE "CLIModeSupport.ab3"
00014566 <CLIModeSupport.ab3@128> XINCLUDE "CLIModeSupport.ab3"
0001457A <CLIModeSupport.ab3@129> XINCLUDE "CLIModeSupport.ab3"
000145A0 <CLIModeSupport.ab3@130> XINCLUDE "CLIModeSupport.ab3"
000145A6 <CLIModeSupport.ab3@131> XINCLUDE "CLIModeSupport.ab3"
000145B4 <CLIModeSupport.ab3@132> XINCLUDE "CLIModeSupport.ab3"
000145BA <CLIModeSupport.ab3@133> XINCLUDE "CLIModeSupport.ab3"
000145F2 <CLIModeSupport.ab3@135> XINCLUDE "CLIModeSupport.ab3"
000145F6 <CLIModeSupport.ab3@138> XINCLUDE "CLIModeSupport.ab3"
00014620 <CLIModeSupport.ab3@141> XINCLUDE "CLIModeSupport.ab3"
00014626 <CLIModeSupport.ab3@142> XINCLUDE "CLIModeSupport.ab3"
00014646 <CLIModeSupport.ab3@143> XINCLUDE "CLIModeSupport.ab3"
00014650 <CLIModeSupport.ab3@144> XINCLUDE "CLIModeSupport.ab3"
00014654 <CLIModeSupport.ab3@145> XINCLUDE "CLIModeSupport.ab3"
00014656 <CLIModeSupport.ab3@146> XINCLUDE "CLIModeSupport.ab3"
00014674 <CLIModeSupport.ab3@147> XINCLUDE "CLIModeSupport.ab3"
00014676 <CLIModeSupport.ab3@148> XINCLUDE "CLIModeSupport.ab3"
0001467C <CLIModeSupport.ab3@149> XINCLUDE "CLIModeSupport.ab3"
00014682 <CLIModeSupport.ab3@150> XINCLUDE "CLIModeSupport.ab3"
000146AC <CLIModeSupport.ab3@152> XINCLUDE "CLIModeSupport.ab3"
000146AE <CLIModeSupport.ab3@153> XINCLUDE "CLIModeSupport.ab3"
000146DC <CLIModeSupport.ab3@154> XINCLUDE "CLIModeSupport.ab3"
000146E0 <CLIModeSupport.ab3@155> XINCLUDE "CLIModeSupport.ab3"
0001470E <CLIModeSupport.ab3@156> XINCLUDE "CLIModeSupport.ab3"
00014712 <CLIModeSupport.ab3@157> XINCLUDE "CLIModeSupport.ab3"
00014738 <CLIModeSupport.ab3@159> XINCLUDE "CLIModeSupport.ab3"
00014748 <CLIModeSupport.ab3@160> XINCLUDE "CLIModeSupport.ab3"
0001474E <CLIModeSupport.ab3@161> XINCLUDE "CLIModeSupport.ab3"
00014754 <CLIModeSupport.ab3@162> XINCLUDE "CLIModeSupport.ab3"
0001478E <CLIModeSupport.ab3@163> XINCLUDE "CLIModeSupport.ab3"
00014798 <CLIModeSupport.ab3@165> XINCLUDE "CLIModeSupport.ab3"
000147B2 <CLIModeSupport.ab3@166> XINCLUDE "CLIModeSupport.ab3"
000147D0 <CLIModeSupport.ab3@178> XINCLUDE "CLIModeSupport.ab3"
000147D8 <CLIModeSupport.ab3@179> XINCLUDE "CLIModeSupport.ab3"
000147DE <CLIModeSupport.ab3@180> XINCLUDE "CLIModeSupport.ab3"
000147E4 <CLIModeSupport.ab3@181> XINCLUDE "CLIModeSupport.ab3"
00014806 <CLIModeSupport.ab3@182> XINCLUDE "CLIModeSupport.ab3"
0001481E <CLIModeSupport.ab3@184> XINCLUDE "CLIModeSupport.ab3"
00014844 <CLIModeSupport.ab3@185> XINCLUDE "CLIModeSupport.ab3"
0001486E <CLIModeSupport.ab3@186> XINCLUDE "CLIModeSupport.ab3"
0001487C <CLIModeSupport.ab3@187> XINCLUDE "CLIModeSupport.ab3"
00014882 <CLIModeSupport.ab3@188> XINCLUDE "CLIModeSupport.ab3"
00014896 <CLIModeSupport.ab3@189> XINCLUDE "CLIModeSupport.ab3"
000148AE <CLIModeSupport.ab3@191> XINCLUDE "CLIModeSupport.ab3"
000148BC <CLIModeSupport.ab3@192> XINCLUDE "CLIModeSupport.ab3"
000148D0 <CLIModeSupport.ab3@193> XINCLUDE "CLIModeSupport.ab3"
00014906 <CLIModeSupport.ab3@194> XINCLUDE "CLIModeSupport.ab3"
00014914 <CLIModeSupport.ab3@195> XINCLUDE "CLIModeSupport.ab3"
00014944 <CLIModeSupport.ab3@196> XINCLUDE "CLIModeSupport.ab3"
00014952 <CLIModeSupport.ab3@197> XINCLUDE "CLIModeSupport.ab3"
00014958 <CLIModeSupport.ab3@198> XINCLUDE "CLIModeSupport.ab3"
00014966 <CLIModeSupport.ab3@199> XINCLUDE "CLIModeSupport.ab3"
0001496C <CLIModeSupport.ab3@200> XINCLUDE "CLIModeSupport.ab3"
00014972 <CLIModeSupport.ab3@202> XINCLUDE "CLIModeSupport.ab3"
00014980 <CLIModeSupport.ab3@203> XINCLUDE "CLIModeSupport.ab3"
00014982 <CLIModeSupport.ab3@204> XINCLUDE "CLIModeSupport.ab3"
00014988 <CLIModeSupport.ab3@206> XINCLUDE "CLIModeSupport.ab3"
0001499E <CLIModeSupport.ab3@208> XINCLUDE "CLIModeSupport.ab3"
000149A8 <CLIModeSupport.ab3@209> XINCLUDE "CLIModeSupport.ab3"
000149AE <CLIModeSupport.ab3@210> XINCLUDE "CLIModeSupport.ab3"
000149D8 <CLIModeSupport.ab3@214> XINCLUDE "CLIModeSupport.ab3"
00014A16 <CLIModeSupport.ab3@215> XINCLUDE "CLIModeSupport.ab3"
00014A1A <CLIModeSupport.ab3@216> XINCLUDE "CLIModeSupport.ab3"
00014A58 <CLIModeSupport.ab3@217> XINCLUDE "CLIModeSupport.ab3"
00014A5C <CLIModeSupport.ab3@218> XINCLUDE "CLIModeSupport.ab3"
00014A9A <CLIModeSupport.ab3@219> XINCLUDE "CLIModeSupport.ab3"
00014A9E <CLIModeSupport.ab3@220> XINCLUDE "CLIModeSupport.ab3"
00014AA6 <CLIModeSupport.ab3@222> XINCLUDE "CLIModeSupport.ab3"
00014AAE <CLIModeSupport.ab3@223> XINCLUDE "CLIModeSupport.ab3"
00014AF2 <CLIModeSupport.ab3@225> XINCLUDE "CLIModeSupport.ab3"
00014B04 <CLIModeSupport.ab3@226> XINCLUDE "CLIModeSupport.ab3"
00014B12 <CLIModeSupport.ab3@227> XINCLUDE "CLIModeSupport.ab3"
00014B46 <CLIModeSupport.ab3@228> XINCLUDE "CLIModeSupport.ab3"
00014B6A <CLIModeSupport.ab3@230> XINCLUDE "CLIModeSupport.ab3"
00014B74 <CLIModeSupport.ab3@231> XINCLUDE "CLIModeSupport.ab3"
00014B8E <CLIModeSupport.ab3@232> XINCLUDE "CLIModeSupport.ab3"
00014BA2 <CLIModeSupport.ab3@233> XINCLUDE "CLIModeSupport.ab3"
00014BFA <CLIModeSupport.ab3@234> XINCLUDE "CLIModeSupport.ab3"
00014C9A <CLIModeSupport.ab3@235> XINCLUDE "CLIModeSupport.ab3"
00014CA2 <CLIModeSupport.ab3@236> XINCLUDE "CLIModeSupport.ab3"
00014CDA <CLIModeSupport.ab3@237> XINCLUDE "CLIModeSupport.ab3"
00014CE0 <CLIModeSupport.ab3@238> XINCLUDE "CLIModeSupport.ab3"
00014CF0 <CLIModeSupport.ab3@239> XINCLUDE "CLIModeSupport.ab3"
00014D18 <CLIModeSupport.ab3@242> XINCLUDE "CLIModeSupport.ab3"
00014D40 <CLIModeSupport.ab3@243> XINCLUDE "CLIModeSupport.ab3"
00014D48 <CLIModeSupport.ab3@244> XINCLUDE "CLIModeSupport.ab3"
00014D4E <CLIModeSupport.ab3@245> XINCLUDE "CLIModeSupport.ab3"
00014D56 <CLIModeSupport.ab3@246> XINCLUDE "CLIModeSupport.ab3"
00014D5E <CLIModeSupport.ab3@247> XINCLUDE "CLIModeSupport.ab3"
00014D86 <CLIModeSupport.ab3@248> XINCLUDE "CLIModeSupport.ab3"
00014D8E <CLIModeSupport.ab3@249> XINCLUDE "CLIModeSupport.ab3"
00014D96 <CLIModeSupport.ab3@250> XINCLUDE "CLIModeSupport.ab3"
00014D9C <CLIModeSupport.ab3@251> XINCLUDE "CLIModeSupport.ab3"
00014DA2 <CLIModeSupport.ab3@252> XINCLUDE "CLIModeSupport.ab3"
00014DA8 <CLIModeSupport.ab3@253> XINCLUDE "CLIModeSupport.ab3"
00014DAE <CLIModeSupport.ab3@254> XINCLUDE "CLIModeSupport.ab3"
00014DB4 <CLIModeSupport.ab3@255> XINCLUDE "CLIModeSupport.ab3"
00014DBA <CLIModeSupport.ab3@256> XINCLUDE "CLIModeSupport.ab3"
00014DC0 <CLIModeSupport.ab3@257> XINCLUDE "CLIModeSupport.ab3"
00014DC6 <CLIModeSupport.ab3@258> XINCLUDE "CLIModeSupport.ab3"
00014DCE <CLIModeSupport.ab3@259> XINCLUDE "CLIModeSupport.ab3"
00014DD6 <CLIModeSupport.ab3@260> XINCLUDE "CLIModeSupport.ab3"
00014DFE <CLIModeSupport.ab3@261> XINCLUDE "CLIModeSupport.ab3"
00014E04 <CLIModeSupport.ab3@262> XINCLUDE "CLIModeSupport.ab3"
00014E0A <CLIModeSupport.ab3@263> XINCLUDE "CLIModeSupport.ab3"
00014E12 <CLIModeSupport.ab3@264> XINCLUDE "CLIModeSupport.ab3"
00014E32 <CLIModeSupport.ab3@268> XINCLUDE "CLIModeSupport.ab3"
00014E42 <CLIModeSupport.ab3@270> XINCLUDE "CLIModeSupport.ab3"
00014E52 <CLIModeSupport.ab3@271> XINCLUDE "CLIModeSupport.ab3"
00014E62 <CLIModeSupport.ab3@273> XINCLUDE "CLIModeSupport.ab3"
00014E72 <CLIModeSupport.ab3@274> XINCLUDE "CLIModeSupport.ab3"
00014E82 <CLIModeSupport.ab3@275> XINCLUDE "CLIModeSupport.ab3"
00014E92 <CLIModeSupport.ab3@276> XINCLUDE "CLIModeSupport.ab3"
00014EA2 <CLIModeSupport.ab3@277> XINCLUDE "CLIModeSupport.ab3"
00014EB2 <CLIModeSupport.ab3@278> XINCLUDE "CLIModeSupport.ab3"
00014EC2 <CLIModeSupport.ab3@279> XINCLUDE "CLIModeSupport.ab3"
00014ED2 <CLIModeSupport.ab3@280> XINCLUDE "CLIModeSupport.ab3"
00014EE2 <CLIModeSupport.ab3@281> XINCLUDE "CLIModeSupport.ab3"
00014EF2 <CLIModeSupport.ab3@282> XINCLUDE "CLIModeSupport.ab3"
00014F02 <CLIModeSupport.ab3@283> XINCLUDE "CLIModeSupport.ab3"
00014F12 <CLIModeSupport.ab3@284> XINCLUDE "CLIModeSupport.ab3"
00014F22 <CLIModeSupport.ab3@285> XINCLUDE "CLIModeSupport.ab3"
00014F32 <CLIModeSupport.ab3@286> XINCLUDE "CLIModeSupport.ab3"
00014F44 <CLIModeSupport.ab3@288> XINCLUDE "CLIModeSupport.ab3"
00014F56 <CLIModeSupport.ab3@289> XINCLUDE "CLIModeSupport.ab3"
00014F68 <CLIModeSupport.ab3@290> XINCLUDE "CLIModeSupport.ab3"
00014F7A <CLIModeSupport.ab3@291> XINCLUDE "CLIModeSupport.ab3"
00014F8C <CLIModeSupport.ab3@292> XINCLUDE "CLIModeSupport.ab3"
00014F9E <CLIModeSupport.ab3@293> XINCLUDE "CLIModeSupport.ab3"
00014FBC <CLIModeSupport.ab3@295> XINCLUDE "CLIModeSupport.ab3"
00014FC2 <CLIModeSupport.ab3@296> XINCLUDE "CLIModeSupport.ab3"
00014FC8 <CLIModeSupport.ab3@298> XINCLUDE "CLIModeSupport.ab3"
00014FF2 <CLIModeSupport.ab3@299> XINCLUDE "CLIModeSupport.ab3"
00015004 <CLIModeSupport.ab3@300> XINCLUDE "CLIModeSupport.ab3"
00015038 <CLIModeSupport.ab3@303> XINCLUDE "CLIModeSupport.ab3"
00015050 <CLIModeSupport.ab3@304> XINCLUDE "CLIModeSupport.ab3"
0001509C <CLIModeSupport.ab3@305> XINCLUDE "CLIModeSupport.ab3"
000150AE <CLIModeSupport.ab3@306> XINCLUDE "CLIModeSupport.ab3"
00015104 <CLIModeSupport.ab3@307> XINCLUDE "CLIModeSupport.ab3"
00015176 <CLIModeSupport.ab3@308> XINCLUDE "CLIModeSupport.ab3"
0001517C <CLIModeSupport.ab3@309> XINCLUDE "CLIModeSupport.ab3"
000151B0 <CLIModeSupport.ab3@310> XINCLUDE "CLIModeSupport.ab3"
000151D8 <CLIModeSupport.ab3@311> XINCLUDE "CLIModeSupport.ab3"
00015200 <CLIModeSupport.ab3@313> XINCLUDE "CLIModeSupport.ab3"
0001523A <CLIModeSupport.ab3@314> XINCLUDE "CLIModeSupport.ab3"
00015252 <CLIModeSupport.ab3@315> XINCLUDE "CLIModeSupport.ab3"
000152D6 <CLIModeSupport.ab3@316> XINCLUDE "CLIModeSupport.ab3"
000152F0 <CLIModeSupport.ab3@317> XINCLUDE "CLIModeSupport.ab3"
0001533E <CLIModeSupport.ab3@318> XINCLUDE "CLIModeSupport.ab3"
0001534E <CLIModeSupport.ab3@320> XINCLUDE "CLIModeSupport.ab3"
00015356 <CLIModeSupport.ab3@322> XINCLUDE "CLIModeSupport.ab3"
0001536A <CLIModeSupport.ab3@323> XINCLUDE "CLIModeSupport.ab3"
000153B0 <CLIModeSupport.ab3@324> XINCLUDE "CLIModeSupport.ab3"
000153B6 <CLIModeSupport.ab3@325> XINCLUDE "CLIModeSupport.ab3"
00015400 <CLIModeSupport.ab3@326> XINCLUDE "CLIModeSupport.ab3"
0001546A <CLIModeSupport.ab3@327> XINCLUDE "CLIModeSupport.ab3"
000154D0 <CLIModeSupport.ab3@328> XINCLUDE "CLIModeSupport.ab3"
00015504 <CLIModeSupport.ab3@329> XINCLUDE "CLIModeSupport.ab3"
00015530 <CLIModeSupport.ab3@331> XINCLUDE "CLIModeSupport.ab3"
0001557E <CLIModeSupport.ab3@332> XINCLUDE "CLIModeSupport.ab3"
000155A2 <CLIModeSupport.ab3@333> XINCLUDE "CLIModeSupport.ab3"
000155A8 <CLIModeSupport.ab3@334> XINCLUDE "CLIModeSupport.ab3"
000155B6 <CLIModeSupport.ab3@336> XINCLUDE "CLIModeSupport.ab3"
00015614 <CLIModeSupport.ab3@338> XINCLUDE "CLIModeSupport.ab3"
00015672 <CLIModeSupport.ab3@339> XINCLUDE "CLIModeSupport.ab3"
0001569C <CLIModeSupport.ab3@340> XINCLUDE "CLIModeSupport.ab3"
000156A6 <CLIModeSupport.ab3@341> XINCLUDE "CLIModeSupport.ab3"
000156AE <CLIModeSupport.ab3@342> XINCLUDE "CLIModeSupport.ab3"
000156EC <CLIModeSupport.ab3@343> XINCLUDE "CLIModeSupport.ab3"
00015738 <CLIModeSupport.ab3@344> XINCLUDE "CLIModeSupport.ab3"
0001574A <CLIModeSupport.ab3@345> XINCLUDE "CLIModeSupport.ab3"
000157A0 <CLIModeSupport.ab3@346> XINCLUDE "CLIModeSupport.ab3"
00015818 <CLIModeSupport.ab3@347> XINCLUDE "CLIModeSupport.ab3"
0001581E <CLIModeSupport.ab3@348> XINCLUDE "CLIModeSupport.ab3"
00015852 <CLIModeSupport.ab3@349> XINCLUDE "CLIModeSupport.ab3"
0001587A <CLIModeSupport.ab3@350> XINCLUDE "CLIModeSupport.ab3"
000158B0 <CLIModeSupport.ab3@353> XINCLUDE "CLIModeSupport.ab3"
000158BE <CLIModeSupport.ab3@354> XINCLUDE "CLIModeSupport.ab3"
000158CC <CLIModeSupport.ab3@355> XINCLUDE "CLIModeSupport.ab3"
00015940 <CLIModeSupport.ab3@356> XINCLUDE "CLIModeSupport.ab3"
00015946 <CLIModeSupport.ab3@357> XINCLUDE "CLIModeSupport.ab3"
00015990 <CLIModeSupport.ab3@358> XINCLUDE "CLIModeSupport.ab3"
000159DA <CLIModeSupport.ab3@359> XINCLUDE "CLIModeSupport.ab3"
00015A0A <CLIModeSupport.ab3@360> XINCLUDE "CLIModeSupport.ab3"
00015A3A <CLIModeSupport.ab3@361> XINCLUDE "CLIModeSupport.ab3"
00015A64 <CLIModeSupport.ab3@362> XINCLUDE "CLIModeSupport.ab3"
00015AB6 <CLIModeSupport.ab3@363> XINCLUDE "CLIModeSupport.ab3"
00015B0C <CLIModeSupport.ab3@364> XINCLUDE "CLIModeSupport.ab3"
00015B5C <CLIModeSupport.ab3@365> XINCLUDE "CLIModeSupport.ab3"
00015BC2 <CLIModeSupport.ab3@366> XINCLUDE "CLIModeSupport.ab3"
00015C2E <CLIModeSupport.ab3@367> XINCLUDE "CLIModeSupport.ab3"
00015C5A <CLIModeSupport.ab3@368> XINCLUDE "CLIModeSupport.ab3"
00015C8A <CLIModeSupport.ab3@369> XINCLUDE "CLIModeSupport.ab3"
00015D06 <CLIModeSupport.ab3@370> XINCLUDE "CLIModeSupport.ab3"
00015D36 <CLIModeSupport.ab3@371> XINCLUDE "CLIModeSupport.ab3"
00015D66 <CLIModeSupport.ab3@372> XINCLUDE "CLIModeSupport.ab3"
00015D96 <CLIModeSupport.ab3@373> XINCLUDE "CLIModeSupport.ab3"
00015DC6 <CLIModeSupport.ab3@374> XINCLUDE "CLIModeSupport.ab3"
00015DF6 <CLIModeSupport.ab3@375> XINCLUDE "CLIModeSupport.ab3"
00015E26 <CLIModeSupport.ab3@376> XINCLUDE "CLIModeSupport.ab3"
00015E56 <CLIModeSupport.ab3@377> XINCLUDE "CLIModeSupport.ab3"
00015E86 <CLIModeSupport.ab3@378> XINCLUDE "CLIModeSupport.ab3"
00015EB6 <CLIModeSupport.ab3@379> XINCLUDE "CLIModeSupport.ab3"
00015EE6 <CLIModeSupport.ab3@380> XINCLUDE "CLIModeSupport.ab3"
00015F62 <CLIModeSupport.ab3@381> XINCLUDE "CLIModeSupport.ab3"
00015F94 <CLIModeSupport.ab3@382> XINCLUDE "CLIModeSupport.ab3"
00015FC6 <CLIModeSupport.ab3@383> XINCLUDE "CLIModeSupport.ab3"
00015FF6 <CLIModeSupport.ab3@384> XINCLUDE "CLIModeSupport.ab3"
00015FFC <CLIModeSupport.ab3@385> XINCLUDE "CLIModeSupport.ab3"
00016070 <CLIModeSupport.ab3@386> XINCLUDE "CLIModeSupport.ab3"
000160DC <CLIModeSupport.ab3@387> XINCLUDE "CLIModeSupport.ab3"
000160EE <CLIModeSupport.ab3@388> XINCLUDE "CLIModeSupport.ab3"
0001611C <CLIModeSupport.ab3@389> XINCLUDE "CLIModeSupport.ab3"
00016144 <CLIModeSupport.ab3@390> XINCLUDE "CLIModeSupport.ab3"
00016158 <CLIModeSupport.ab3@391> XINCLUDE "CLIModeSupport.ab3"
00016182 <CLIModeSupport.ab3@392> XINCLUDE "CLIModeSupport.ab3"
000161C6 <CLIModeSupport.ab3@393> XINCLUDE "CLIModeSupport.ab3"
000161D6 <CLIModeSupport.ab3@394> XINCLUDE "CLIModeSupport.ab3"
000161E6 <CLIModeSupport.ab3@395> XINCLUDE "CLIModeSupport.ab3"
000161EC <CLIModeSupport.ab3@396> XINCLUDE "CLIModeSupport.ab3"
000161FC <CLIModeSupport.ab3@398> XINCLUDE "CLIModeSupport.ab3"
0001620A <CLIModeSupport.ab3@402> XINCLUDE "CLIModeSupport.ab3"
00016214 <CLIModeSupport.ab3@405> XINCLUDE "CLIModeSupport.ab3"
0001624C <CLIModeSupport.ab3@408> XINCLUDE "CLIModeSupport.ab3"
00016284 <CLIModeSupport.ab3@409> XINCLUDE "CLIModeSupport.ab3"
000162BC <CLIModeSupport.ab3@410> XINCLUDE "CLIModeSupport.ab3"
000162CC <CLIModeSupport.ab3@411> XINCLUDE "CLIModeSupport.ab3"
00016334 <CLIModeSupport.ab3@412> XINCLUDE "CLIModeSupport.ab3"
0001636C <CLIModeSupport.ab3@413> XINCLUDE "CLIModeSupport.ab3"
0001637C <CLIModeSupport.ab3@414> XINCLUDE "CLIModeSupport.ab3"
0001638C <CLIModeSupport.ab3@415> XINCLUDE "CLIModeSupport.ab3"
000163F4 <CLIModeSupport.ab3@416> XINCLUDE "CLIModeSupport.ab3"
0001645C <CLIModeSupport.ab3@417> XINCLUDE "CLIModeSupport.ab3"
000164C4 <CLIModeSupport.ab3@418> XINCLUDE "CLIModeSupport.ab3"
0001652C <CLIModeSupport.ab3@419> XINCLUDE "CLIModeSupport.ab3"
00016594 <CLIModeSupport.ab3@420> XINCLUDE "CLIModeSupport.ab3"
000165FC <CLIModeSupport.ab3@421> XINCLUDE "CLIModeSupport.ab3"
00016664 <CLIModeSupport.ab3@422> XINCLUDE "CLIModeSupport.ab3"
000166CC <CLIModeSupport.ab3@423> XINCLUDE "CLIModeSupport.ab3"
000166DC <CLIModeSupport.ab3@424> XINCLUDE "CLIModeSupport.ab3"
00016714 <CLIModeSupport.ab3@426> XINCLUDE "CLIModeSupport.ab3"
0001674E <CLIModeSupport.ab3@427> XINCLUDE "CLIModeSupport.ab3"
00016788 <CLIModeSupport.ab3@428> XINCLUDE "CLIModeSupport.ab3"
000167C0 <CLIModeSupport.ab3@429> XINCLUDE "CLIModeSupport.ab3"
000167DC <CLIModeSupport.ab3@430> XINCLUDE "CLIModeSupport.ab3"
00016814 <CLIModeSupport.ab3@431> XINCLUDE "CLIModeSupport.ab3"
0001683A <CLIModeSupport.ab3@433> XINCLUDE "CLIModeSupport.ab3"
00016842 <CLIModeSupport.ab3@436> XINCLUDE "CLIModeSupport.ab3"
0001684A <CLIModeSupport.ab3@438> XINCLUDE "CLIModeSupport.ab3"
00016852 <CLIModeSupport.ab3@439> XINCLUDE "CLIModeSupport.ab3"
0001685A <CLIModeSupport.ab3@441> XINCLUDE "CLIModeSupport.ab3"
0001686E <CLIModeSupport.ab3@442> XINCLUDE "CLIModeSupport.ab3"
0001689C <CLIModeSupport.ab3@443> XINCLUDE "CLIModeSupport.ab3"
000168B6 <CLIModeSupport.ab3@444> XINCLUDE "CLIModeSupport.ab3"
000168C4 <CLIModeSupport.ab3@445> XINCLUDE "CLIModeSupport.ab3"
00016930 <CLIModeSupport.ab3@446> XINCLUDE "CLIModeSupport.ab3"
00016956 <CLIModeSupport.ab3@447> XINCLUDE "CLIModeSupport.ab3"
00016972 <CLIModeSupport.ab3@448> XINCLUDE "CLIModeSupport.ab3"
0001697C <CLIModeSupport.ab3@449> XINCLUDE "CLIModeSupport.ab3"
00016986 <CLIModeSupport.ab3@450> XINCLUDE "CLIModeSupport.ab3"
00016992 <CLIModeSupport.ab3@451> XINCLUDE "CLIModeSupport.ab3"
000169A0 <CLIModeSupport.ab3@452> XINCLUDE "CLIModeSupport.ab3"
000169AC <CLIModeSupport.ab3@453> XINCLUDE "CLIModeSupport.ab3"
000169E8 <CLIModeSupport.ab3@454> XINCLUDE "CLIModeSupport.ab3"
00016A02 <CLIModeSupport.ab3@455> XINCLUDE "CLIModeSupport.ab3"
00016A10 <CLIModeSupport.ab3@456> XINCLUDE "CLIModeSupport.ab3"
00016A30 <CLIModeSupport.ab3@457> XINCLUDE "CLIModeSupport.ab3"
00016A3E <CLIModeSupport.ab3@458> XINCLUDE "CLIModeSupport.ab3"
00016A4C <CLIModeSupport.ab3@459> XINCLUDE "CLIModeSupport.ab3"
00016A52 <CLIModeSupport.ab3@461> XINCLUDE "CLIModeSupport.ab3"
00016A62 <CLIModeSupport.ab3@462> XINCLUDE "CLIModeSupport.ab3"
00016A66 <CLIModeSupport.ab3@464> XINCLUDE "CLIModeSupport.ab3"
00016A9A <CLIModeSupport.ab3@465> XINCLUDE "CLIModeSupport.ab3"
00016ACE <CLIModeSupport.ab3@466> XINCLUDE "CLIModeSupport.ab3"
00016AD2 <CLIModeSupport.ab3@467> XINCLUDE "CLIModeSupport.ab3"
00016B06 <CLIModeSupport.ab3@468> XINCLUDE "CLIModeSupport.ab3"
00016B0A <CLIModeSupport.ab3@469> XINCLUDE "CLIModeSupport.ab3"
00016B3E <CLIModeSupport.ab3@470> XINCLUDE "CLIModeSupport.ab3"
00016B44 <CLIModeSupport.ab3@471> XINCLUDE "CLIModeSupport.ab3"
00016B7A <CLIModeSupport.ab3@473> XINCLUDE "CLIModeSupport.ab3"
00016BB0 <CLIModeSupport.ab3@474> XINCLUDE "CLIModeSupport.ab3"
00016BE6 <CLIModeSupport.ab3@475> XINCLUDE "CLIModeSupport.ab3"
00016C1E <CLIModeSupport.ab3@476> XINCLUDE "CLIModeSupport.ab3"
00016C56 <CLIModeSupport.ab3@477> XINCLUDE "CLIModeSupport.ab3"
00016CF6 <CLIModeSupport.ab3@479> XINCLUDE "CLIModeSupport.ab3"
00016D36 <CLIModeSupport.ab3@480> XINCLUDE "CLIModeSupport.ab3"
00016D6C <CLIModeSupport.ab3@481> XINCLUDE "CLIModeSupport.ab3"
00016DA2 <CLIModeSupport.ab3@482> XINCLUDE "CLIModeSupport.ab3"
00016DDA <CLIModeSupport.ab3@485> XINCLUDE "CLIModeSupport.ab3"
00016DF8 <CLIModeSupport.ab3@486> XINCLUDE "CLIModeSupport.ab3"
00016DFC <CLIModeSupport.ab3@487> XINCLUDE "CLIModeSupport.ab3"
00016E02 <CLIModeSupport.ab3@488> XINCLUDE "CLIModeSupport.ab3"
00016E08 <CLIModeSupport.ab3@489> XINCLUDE "CLIModeSupport.ab3"
00016E0C <CLIModeSupport.ab3@490> XINCLUDE "CLIModeSupport.ab3"
00016E36 <CLIModeSupport.ab3@491> XINCLUDE "CLIModeSupport.ab3"
00016E4A <CLIModeSupport.ab3@495> XINCLUDE "CLIModeSupport.ab3"
00016E88 <CLIModeSupport.ab3@496> XINCLUDE "CLIModeSupport.ab3"
00016EBC <CLIModeSupport.ab3@497> XINCLUDE "CLIModeSupport.ab3"
00016EF2 <CLIModeSupport.ab3@501> XINCLUDE "CLIModeSupport.ab3"
00016F4A <CLIModeSupport.ab3@503> XINCLUDE "CLIModeSupport.ab3"
00016F78 <CLIModeSupport.ab3@504> XINCLUDE "CLIModeSupport.ab3"
00016F7C <CLIModeSupport.ab3@505> XINCLUDE "CLIModeSupport.ab3"
00016FB2 <CLIModeSupport.ab3@506> XINCLUDE "CLIModeSupport.ab3"
00016FE0 <CLIModeSupport.ab3@507> XINCLUDE "CLIModeSupport.ab3"
0001700E <CLIModeSupport.ab3@509> XINCLUDE "CLIModeSupport.ab3"
00017012 <CLIModeSupport.ab3@510> XINCLUDE "CLIModeSupport.ab3"
00017048 <CLIModeSupport.ab3@511> XINCLUDE "CLIModeSupport.ab3"
00017076 <CLIModeSupport.ab3@513> XINCLUDE "CLIModeSupport.ab3"
0001707A <CLIModeSupport.ab3@514> XINCLUDE "CLIModeSupport.ab3"
000170DE <CLIModeSupport.ab3@515> XINCLUDE "CLIModeSupport.ab3"
000170E4 <CLIModeSupport.ab3@518> XINCLUDE "CLIModeSupport.ab3"
0001711E <CLIModeSupport.ab3@519> XINCLUDE "CLIModeSupport.ab3"
00017128 <CLIModeSupport.ab3@522> XINCLUDE "CLIModeSupport.ab3"
00017132 <CLIModeSupport.ab3@524> XINCLUDE "CLIModeSupport.ab3"
0001714C <CLIModeSupport.ab3@525> XINCLUDE "CLIModeSupport.ab3"
00017176 <CLIModeSupport.ab3@528> XINCLUDE "CLIModeSupport.ab3"
0001717C <CLIModeSupport.ab3@529> XINCLUDE "CLIModeSupport.ab3"
0001719C <CLIModeSupport.ab3@530> XINCLUDE "CLIModeSupport.ab3"
000171A6 <CLIModeSupport.ab3@531> XINCLUDE "CLIModeSupport.ab3"
000171AA <CLIModeSupport.ab3@532> XINCLUDE "CLIModeSupport.ab3"
000171AC <CLIModeSupport.ab3@533> XINCLUDE "CLIModeSupport.ab3"
000171CA <CLIModeSupport.ab3@534> XINCLUDE "CLIModeSupport.ab3"
000171CC <CLIModeSupport.ab3@535> XINCLUDE "CLIModeSupport.ab3"
000171D2 <CLIModeSupport.ab3@536> XINCLUDE "CLIModeSupport.ab3"
000171D8 <CLIModeSupport.ab3@538> XINCLUDE "CLIModeSupport.ab3"
00017202 <CLIModeSupport.ab3@539> XINCLUDE "CLIModeSupport.ab3"
00017204 <CLIModeSupport.ab3@540> XINCLUDE "CLIModeSupport.ab3"
00017232 <CLIModeSupport.ab3@541> XINCLUDE "CLIModeSupport.ab3"
00017236 <CLIModeSupport.ab3@542> XINCLUDE "CLIModeSupport.ab3"
00017264 <CLIModeSupport.ab3@543> XINCLUDE "CLIModeSupport.ab3"
00017268 <CLIModeSupport.ab3@544> XINCLUDE "CLIModeSupport.ab3"
0001728E <CLIModeSupport.ab3@545> XINCLUDE "CLIModeSupport.ab3"
0001729E <CLIModeSupport.ab3@546> XINCLUDE "CLIModeSupport.ab3"
000172A4 <CLIModeSupport.ab3@547> XINCLUDE "CLIModeSupport.ab3"
000172AA <CLIModeSupport.ab3@548> XINCLUDE "CLIModeSupport.ab3"
000172E4 <CLIModeSupport.ab3@549> XINCLUDE "CLIModeSupport.ab3"
000172EE <CLIModeSupport.ab3@551> XINCLUDE "CLIModeSupport.ab3"
00017308 <CLIModeSupport.ab3@552> XINCLUDE "CLIModeSupport.ab3"
00017326 <CLIModeSupport.ab3@555> XINCLUDE "CLIModeSupport.ab3"
00017350 <CLIModeSupport.ab3@556> XINCLUDE "CLIModeSupport.ab3"
0001737E <CLIModeSupport.ab3@557> XINCLUDE "CLIModeSupport.ab3"
0001740E <CLIModeSupport.ab3@558> XINCLUDE "CLIModeSupport.ab3"
00017418 <CLIModeSupport.ab3@560> XINCLUDE "CLIModeSupport.ab3"
0001742C <CLIModeSupport.ab3@561> XINCLUDE "CLIModeSupport.ab3"
00017468 <CLIModeSupport.ab3@562> XINCLUDE "CLIModeSupport.ab3"
000174A4 <CLIModeSupport.ab3@563> XINCLUDE "CLIModeSupport.ab3"
000174E0 <CLIModeSupport.ab3@564> XINCLUDE "CLIModeSupport.ab3"
0001751C <CLIModeSupport.ab3@565> XINCLUDE "CLIModeSupport.ab3"
00017558 <CLIModeSupport.ab3@566> XINCLUDE "CLIModeSupport.ab3"
0001755E <CLIModeSupport.ab3@567> XINCLUDE "CLIModeSupport.ab3"
00017598 <CLIModeSupport.ab3@568> XINCLUDE "CLIModeSupport.ab3"
000175AA <CLIModeSupport.ab3@573> XINCLUDE "CLIModeSupport.ab3"
000175BA <CLIModeSupport.ab3@574> XINCLUDE "CLIModeSupport.ab3"
000175C6 <CLIModeSupport.ab3@577> XINCLUDE "CLIModeSupport.ab3"
000175E0 <CLIModeSupport.ab3@578> XINCLUDE "CLIModeSupport.ab3"
000175E2 <CLIModeSupport.ab3@580> XINCLUDE "CLIModeSupport.ab3"
00017600 <CLIModeSupport.ab3@581> XINCLUDE "CLIModeSupport.ab3"
00017606 <CLIModeSupport.ab3@582> XINCLUDE "CLIModeSupport.ab3"
00017630 <CLIModeSupport.ab3@583> XINCLUDE "CLIModeSupport.ab3"
00017632 <CLIModeSupport.ab3@584> XINCLUDE "CLIModeSupport.ab3"
0001763C <CLIModeSupport.ab3@586> XINCLUDE "CLIModeSupport.ab3"
00017642 <CLIModeSupport.ab3@587> XINCLUDE "CLIModeSupport.ab3"
00017654 <CLIModeSupport.ab3@590> XINCLUDE "CLIModeSupport.ab3"
0001768E <CLIModeSupport.ab3@607> XINCLUDE "CLIModeSupport.ab3"
000176A8 <CLIModeSupport.ab3@611> XINCLUDE "CLIModeSupport.ab3"
000176BC <CLIModeSupport.ab3@613> XINCLUDE "CLIModeSupport.ab3"
00017726 <CLIModeSupport.ab3@614> XINCLUDE "CLIModeSupport.ab3"
0001772C <CLIModeSupport.ab3@615> XINCLUDE "CLIModeSupport.ab3"
00017796 <CLIModeSupport.ab3@616> XINCLUDE "CLIModeSupport.ab3"
000177AA <CLIModeSupport.ab3@619> XINCLUDE "CLIModeSupport.ab3"
00017814 <CLIModeSupport.ab3@620> XINCLUDE "CLIModeSupport.ab3"
0001784A <CLIModeSupport.ab3@621> XINCLUDE "CLIModeSupport.ab3"
00017850 <CLIModeSupport.ab3@622> XINCLUDE "CLIModeSupport.ab3"
000178BA <CLIModeSupport.ab3@623> XINCLUDE "CLIModeSupport.ab3"
000178CE <CLIModeSupport.ab3@624> XINCLUDE "CLIModeSupport.ab3"
00017904 <CLIModeSupport.ab3@625> XINCLUDE "CLIModeSupport.ab3"
0001790A <CLIModeSupport.ab3@626> XINCLUDE "CLIModeSupport.ab3"
00017940 <CLIModeSupport.ab3@627> XINCLUDE "CLIModeSupport.ab3"
00017954 <CLIModeSupport.ab3@631> XINCLUDE "CLIModeSupport.ab3"
000179BE <CLIModeSupport.ab3@632> XINCLUDE "CLIModeSupport.ab3"
000179C4 <CLIModeSupport.ab3@633> XINCLUDE "CLIModeSupport.ab3"
00017A2E <CLIModeSupport.ab3@634> XINCLUDE "CLIModeSupport.ab3"
00017A42 <CLIModeSupport.ab3@637> XINCLUDE "CLIModeSupport.ab3"
00017A78 <CLIModeSupport.ab3@638> XINCLUDE "CLIModeSupport.ab3"
00017A7E <CLIModeSupport.ab3@639> XINCLUDE "CLIModeSupport.ab3"
00017AB4 <CLIModeSupport.ab3@640> XINCLUDE "CLIModeSupport.ab3"
00017ACE <CLIModeSupport.ab3@645> XINCLUDE "CLIModeSupport.ab3"
00017AE2 <CLIModeSupport.ab3@647> XINCLUDE "CLIModeSupport.ab3"
00017B4C <CLIModeSupport.ab3@648> XINCLUDE "CLIModeSupport.ab3"
00017B52 <CLIModeSupport.ab3@649> XINCLUDE "CLIModeSupport.ab3"
00017BBC <CLIModeSupport.ab3@650> XINCLUDE "CLIModeSupport.ab3"
00017BD0 <CLIModeSupport.ab3@653> XINCLUDE "CLIModeSupport.ab3"
00017C3A <CLIModeSupport.ab3@654> XINCLUDE "CLIModeSupport.ab3"
00017C40 <CLIModeSupport.ab3@655> XINCLUDE "CLIModeSupport.ab3"
00017CAA <CLIModeSupport.ab3@656> XINCLUDE "CLIModeSupport.ab3"
00017CBE <CLIModeSupport.ab3@659> XINCLUDE "CLIModeSupport.ab3"
00017D28 <CLIModeSupport.ab3@660> XINCLUDE "CLIModeSupport.ab3"
00017D2E <CLIModeSupport.ab3@661> XINCLUDE "CLIModeSupport.ab3"
00017D98 <CLIModeSupport.ab3@662> XINCLUDE "CLIModeSupport.ab3"
00017DAC <CLIModeSupport.ab3@665> XINCLUDE "CLIModeSupport.ab3"
00017E16 <CLIModeSupport.ab3@666> XINCLUDE "CLIModeSupport.ab3"
00017E1C <CLIModeSupport.ab3@667> XINCLUDE "CLIModeSupport.ab3"
00017E86 <CLIModeSupport.ab3@668> XINCLUDE "CLIModeSupport.ab3"
00017E98 <CLIModeSupport.ab3@673> XINCLUDE "CLIModeSupport.ab3"
00017EA8 <CLIModeSupport.ab3@674> XINCLUDE "CLIModeSupport.ab3"
00017EB2 <CLIModeSupport.ab3@677> XINCLUDE "CLIModeSupport.ab3"
00017F1C <CLIModeSupport.ab3@678> XINCLUDE "CLIModeSupport.ab3"
00017F22 <CLIModeSupport.ab3@679> XINCLUDE "CLIModeSupport.ab3"
00017F8C <CLIModeSupport.ab3@680> XINCLUDE "CLIModeSupport.ab3"
00017F96 <CLIModeSupport.ab3@683> XINCLUDE "CLIModeSupport.ab3"
00018000 <CLIModeSupport.ab3@684> XINCLUDE "CLIModeSupport.ab3"
00018036 <CLIModeSupport.ab3@685> XINCLUDE "CLIModeSupport.ab3"
0001803C <CLIModeSupport.ab3@686> XINCLUDE "CLIModeSupport.ab3"
000180A6 <CLIModeSupport.ab3@688> XINCLUDE "CLIModeSupport.ab3"
000180DC <CLIModeSupport.ab3@689> XINCLUDE "CLIModeSupport.ab3"
000180E4 <CLIModeSupport.ab3@692> XINCLUDE "CLIModeSupport.ab3"
00018112 <CLIModeSupport.ab3@694> XINCLUDE "CLIModeSupport.ab3"
00018116 <CLIModeSupport.ab3@695> XINCLUDE "CLIModeSupport.ab3"
0001813E <CLIModeSupport.ab3@696> XINCLUDE "CLIModeSupport.ab3"
00018144 <CLIModeSupport.ab3@699> XINCLUDE "CLIModeSupport.ab3"
0001814A <CLIModeSupport.ab3@702> XINCLUDE "CLIModeSupport.ab3"
00018150 <CLIModeSupport.ab3@703> XINCLUDE "CLIModeSupport.ab3"
00018156 <CLIModeSupport.ab3@704> XINCLUDE "CLIModeSupport.ab3"
0001815C <CLIModeSupport.ab3@705> XINCLUDE "CLIModeSupport.ab3"
00018166 <CLIModeSupport.ab3@706> XINCLUDE "CLIModeSupport.ab3"
00018170 <CLIModeSupport.ab3@707> XINCLUDE "CLIModeSupport.ab3"
0001819E <CLIModeSupport.ab3@709> XINCLUDE "CLIModeSupport.ab3"
000181CA <CLIModeSupport.ab3@711> XINCLUDE "CLIModeSupport.ab3"
000181D2 <CLIModeSupport.ab3@712> XINCLUDE "CLIModeSupport.ab3"
00018238 <CLIModeSupport.ab3@715> XINCLUDE "CLIModeSupport.ab3"
0001826C <CLIModeSupport.ab3@716> XINCLUDE "CLIModeSupport.ab3"
00018272 <CLIModeSupport.ab3@717> XINCLUDE "CLIModeSupport.ab3"
000182F2 <CLIModeSupport.ab3@718> XINCLUDE "CLIModeSupport.ab3"
00018304 <CLIModeSupport.ab3@720> XINCLUDE "CLIModeSupport.ab3"
0001836A <CLIModeSupport.ab3@721> XINCLUDE "CLIModeSupport.ab3"
000183D0 <CLIModeSupport.ab3@722> XINCLUDE "CLIModeSupport.ab3"
000183D6 <CLIModeSupport.ab3@723> XINCLUDE "CLIModeSupport.ab3"
000183DE <CLIModeSupport.ab3@724> XINCLUDE "CLIModeSupport.ab3"
000183E0 <CLIModeSupport.ab3@728> XINCLUDE "CLIModeSupport.ab3"
000183FE <CLIModeSupport.ab3@729> XINCLUDE "CLIModeSupport.ab3"
0001843C <CLIModeSupport.ab3@730> XINCLUDE "CLIModeSupport.ab3"
0001847A <CLIModeSupport.ab3@731> XINCLUDE "CLIModeSupport.ab3"
00018480 <CLIModeSupport.ab3@733> XINCLUDE "CLIModeSupport.ab3"
00018486 <CLIModeSupport.ab3@734> XINCLUDE "CLIModeSupport.ab3"
0001848C <CLIModeSupport.ab3@735> XINCLUDE "CLIModeSupport.ab3"
00018496 <CLIModeSupport.ab3@738> XINCLUDE "CLIModeSupport.ab3"
0001849C <CLIModeSupport.ab3@739> XINCLUDE "CLIModeSupport.ab3"
000184A2 <CLIModeSupport.ab3@740> XINCLUDE "CLIModeSupport.ab3"
000184A8 <CLIModeSupport.ab3@741> XINCLUDE "CLIModeSupport.ab3"
000184AE <CLIModeSupport.ab3@742> XINCLUDE "CLIModeSupport.ab3"
000184B2 <CLIModeSupport.ab3@743> XINCLUDE "CLIModeSupport.ab3"
000184BC <CLIModeSupport.ab3@744> XINCLUDE "CLIModeSupport.ab3"
000184C0 <CLIModeSupport.ab3@745> XINCLUDE "CLIModeSupport.ab3"
000184EA <CLIModeSupport.ab3@747> XINCLUDE "CLIModeSupport.ab3"
000184EC <CLIModeSupport.ab3@748> XINCLUDE "CLIModeSupport.ab3"
000184F2 <CLIModeSupport.ab3@750> XINCLUDE "CLIModeSupport.ab3"
000184F6 <CLIModeSupport.ab3@751> XINCLUDE "CLIModeSupport.ab3"
000184FC <CLIModeSupport.ab3@753> XINCLUDE "CLIModeSupport.ab3"
00018500 <CLIModeSupport.ab3@754> XINCLUDE "CLIModeSupport.ab3"
00018510 <CLIModeSupport.ab3@756> XINCLUDE "CLIModeSupport.ab3"
0001856A <CLIModeSupport.ab3@757> XINCLUDE "CLIModeSupport.ab3"
0001857C <CLIModeSupport.ab3@759> XINCLUDE "CLIModeSupport.ab3"
000185E6 <CLIModeSupport.ab3@760> XINCLUDE "CLIModeSupport.ab3"
000185EC <CLIModeSupport.ab3@761> XINCLUDE "CLIModeSupport.ab3"
00018636 <CLIModeSupport.ab3@762> XINCLUDE "CLIModeSupport.ab3"
00018648 <CLIModeSupport.ab3@765> XINCLUDE "CLIModeSupport.ab3"
00018674 <CLIModeSupport.ab3@766> XINCLUDE "CLIModeSupport.ab3"
0001871A <CLIModeSupport.ab3@767> XINCLUDE "CLIModeSupport.ab3"
00018738 <CLIModeSupport.ab3@768> XINCLUDE "CLIModeSupport.ab3"
0001873E <CLIModeSupport.ab3@769> XINCLUDE "CLIModeSupport.ab3"
00018768 <CLIModeSupport.ab3@770> XINCLUDE "CLIModeSupport.ab3"
00018772 <CLIModeSupport.ab3@771> XINCLUDE "CLIModeSupport.ab3"
000187A4 <CLIModeSupport.ab3@772> XINCLUDE "CLIModeSupport.ab3"
000187BE <CLIModeSupport.ab3@773> XINCLUDE "CLIModeSupport.ab3"
000187D2 <CLIModeSupport.ab3@778> XINCLUDE "CLIModeSupport.ab3"
000187DE <CLIModeSupport.ab3@780> XINCLUDE "CLIModeSupport.ab3"
000187F8 <CLIModeSupport.ab3@781> XINCLUDE "CLIModeSupport.ab3"
00018802 <CLIModeSupport.ab3@783> XINCLUDE "CLIModeSupport.ab3"
0001881C <CLIModeSupport.ab3@785> XINCLUDE "CLIModeSupport.ab3"
00018846 <CLIModeSupport.ab3@789> XINCLUDE "CLIModeSupport.ab3"
0001886A <CLIModeSupport.ab3@790> XINCLUDE "CLIModeSupport.ab3"
000188A8 <CLIModeSupport.ab3@791> XINCLUDE "CLIModeSupport.ab3"
000188AC <CLIModeSupport.ab3@792> XINCLUDE "CLIModeSupport.ab3"
000188EA <CLIModeSupport.ab3@794> XINCLUDE "CLIModeSupport.ab3"
000188EE <CLIModeSupport.ab3@795> XINCLUDE "CLIModeSupport.ab3"
0001892C <CLIModeSupport.ab3@798> XINCLUDE "CLIModeSupport.ab3"
0001896A <CLIModeSupport.ab3@799> XINCLUDE "CLIModeSupport.ab3"
0001896C <CLIModeSupport.ab3@800> XINCLUDE "CLIModeSupport.ab3"
000189A0 <CLIModeSupport.ab3@801> XINCLUDE "CLIModeSupport.ab3"
000189A6 <CLIModeSupport.ab3@803> XINCLUDE "CLIModeSupport.ab3"
000189EA <CLIModeSupport.ab3@804> XINCLUDE "CLIModeSupport.ab3"
000189FC <CLIModeSupport.ab3@805> XINCLUDE "CLIModeSupport.ab3"
00018A04 <CLIModeSupport.ab3@807> XINCLUDE "CLIModeSupport.ab3"
00018A0A <CLIModeSupport.ab3@808> XINCLUDE "CLIModeSupport.ab3"
00018A14 <CLIModeSupport.ab3@810> XINCLUDE "CLIModeSupport.ab3"
00018A22 <CLIModeSupport.ab3@811> XINCLUDE "CLIModeSupport.ab3"
00018A28 <CLIModeSupport.ab3@812> XINCLUDE "CLIModeSupport.ab3"
00018A50 <CLIModeSupport.ab3@813> XINCLUDE "CLIModeSupport.ab3"
00018A6A <CLIModeSupport.ab3@814> XINCLUDE "CLIModeSupport.ab3"
00018A74 <CLIModeSupport.ab3@815> XINCLUDE "CLIModeSupport.ab3"
00018A7A <CLIModeSupport.ab3@816> XINCLUDE "CLIModeSupport.ab3"
00018A98 <CLIModeSupport.ab3@818> XINCLUDE "CLIModeSupport.ab3"
00018AA2 <CLIModeSupport.ab3@819> XINCLUDE "CLIModeSupport.ab3"
00018AA8 <CLIModeSupport.ab3@820> XINCLUDE "CLIModeSupport.ab3"
00018AAE <CLIModeSupport.ab3@821> XINCLUDE "CLIModeSupport.ab3"
00018AB8 <CLIModeSupport.ab3@822> XINCLUDE "CLIModeSupport.ab3"
00018AC6 <CLIModeSupport.ab3@823> XINCLUDE "CLIModeSupport.ab3"
00018ACC <CLIModeSupport.ab3@824> XINCLUDE "CLIModeSupport.ab3"
00018ADC <CLIModeSupport.ab3@826> XINCLUDE "CLIModeSupport.ab3"
00018B08 <CLIModeSupport.ab3@827> XINCLUDE "CLIModeSupport.ab3"
00018B1E <CLIModeSupport.ab3@828> XINCLUDE "CLIModeSupport.ab3"
00018B28 <CLIModeSupport.ab3@829> XINCLUDE "CLIModeSupport.ab3"
00018B2E <CLIModeSupport.ab3@830> XINCLUDE "CLIModeSupport.ab3"
00018B86 <CLIModeSupport.ab3@832> XINCLUDE "CLIModeSupport.ab3"
00018BF4 <CLIModeSupport.ab3@834> XINCLUDE "CLIModeSupport.ab3"
00018C0C <CLIModeSupport.ab3@835> XINCLUDE "CLIModeSupport.ab3"
00018C12 <CLIModeSupport.ab3@836> XINCLUDE "CLIModeSupport.ab3"
00018C4A <CLIModeSupport.ab3@837> XINCLUDE "CLIModeSupport.ab3"
00018C78 <CLIModeSupport.ab3@839> XINCLUDE "CLIModeSupport.ab3"
00018CA2 <CLIModeSupport.ab3@840> XINCLUDE "CLIModeSupport.ab3"
00018CAC <CLIModeSupport.ab3@842> XINCLUDE "CLIModeSupport.ab3"
00018CD4 <CLIModeSupport.ab3@843> XINCLUDE "CLIModeSupport.ab3"
00018CFE <CLIModeSupport.ab3@844> XINCLUDE "CLIModeSupport.ab3"
00018DA0 <CLIModeSupport.ab3@845> XINCLUDE "CLIModeSupport.ab3"
00018DAE <CLIModeSupport.ab3@846> XINCLUDE "CLIModeSupport.ab3"
00018DFE <CLIModeSupport.ab3@847> XINCLUDE "CLIModeSupport.ab3"
00018E0E <CLIModeSupport.ab3@848> XINCLUDE "CLIModeSupport.ab3"
00018ED6 <CLIModeSupport.ab3@849> XINCLUDE "CLIModeSupport.ab3"
00018F0A <CLIModeSupport.ab3@851> XINCLUDE "CLIModeSupport.ab3"
00018F3E <CLIModeSupport.ab3@852> XINCLUDE "CLIModeSupport.ab3"
00018F72 <CLIModeSupport.ab3@853> XINCLUDE "CLIModeSupport.ab3"
00018FA6 <CLIModeSupport.ab3@854> XINCLUDE "CLIModeSupport.ab3"
00018FDA <CLIModeSupport.ab3@855> XINCLUDE "CLIModeSupport.ab3"
0001900E <CLIModeSupport.ab3@856> XINCLUDE "CLIModeSupport.ab3"
00019042 <CLIModeSupport.ab3@857> XINCLUDE "CLIModeSupport.ab3"
00019076 <CLIModeSupport.ab3@858> XINCLUDE "CLIModeSupport.ab3"
00019078 <CLIModeSupport.ab3@860> XINCLUDE "CLIModeSupport.ab3"
000190B6 <CLIModeSupport.ab3@861> XINCLUDE "CLIModeSupport.ab3"
000190BA <CLIModeSupport.ab3@862> XINCLUDE "CLIModeSupport.ab3"
000190F8 <CLIModeSupport.ab3@865> XINCLUDE "CLIModeSupport.ab3"
00019136 <CLIModeSupport.ab3@866> XINCLUDE "CLIModeSupport.ab3"
00019138 <CLIModeSupport.ab3@867> XINCLUDE "CLIModeSupport.ab3"
0001913E <CLIModeSupport.ab3@868> XINCLUDE "CLIModeSupport.ab3"
00019142 <CLIModeSupport.ab3@869> XINCLUDE "CLIModeSupport.ab3"
00019144 <CLIModeSupport.ab3@871> XINCLUDE "CLIModeSupport.ab3"
00019182 <CLIModeSupport.ab3@872> XINCLUDE "CLIModeSupport.ab3"
000191C0 <CLIModeSupport.ab3@873> XINCLUDE "CLIModeSupport.ab3"
000191C2 <CLIModeSupport.ab3@874> XINCLUDE "CLIModeSupport.ab3"
000191C4 <CLIModeSupport.ab3@875> XINCLUDE "CLIModeSupport.ab3"
000191C6 <CLIModeSupport.ab3@876> XINCLUDE "CLIModeSupport.ab3"
000191CC <CLIModeSupport.ab3@877> XINCLUDE "CLIModeSupport.ab3"
000191D0 <CLIModeSupport.ab3@878> XINCLUDE "CLIModeSupport.ab3"
000191E0 <CLIModeSupport.ab3@880> XINCLUDE "CLIModeSupport.ab3"
000191F8 <CLIModeSupport.ab3@881> XINCLUDE "CLIModeSupport.ab3"
00019210 <CLIModeSupport.ab3@882> XINCLUDE "CLIModeSupport.ab3"
00019228 <CLIModeSupport.ab3@883> XINCLUDE "CLIModeSupport.ab3"
00019252 <CLIModeSupport.ab3@885> XINCLUDE "CLIModeSupport.ab3"
0001927C <CLIModeSupport.ab3@886> XINCLUDE "CLIModeSupport.ab3"
000192AA <CLIModeSupport.ab3@888> XINCLUDE "CLIModeSupport.ab3"
000192AE <CLIModeSupport.ab3@889> XINCLUDE "CLIModeSupport.ab3"
000192D6 <CLIModeSupport.ab3@890> XINCLUDE "CLIModeSupport.ab3"
000192D8 <CLIModeSupport.ab3@891> XINCLUDE "CLIModeSupport.ab3"
00019316 <CLIModeSupport.ab3@892> XINCLUDE "CLIModeSupport.ab3"
0001931A <CLIModeSupport.ab3@893> XINCLUDE "CLIModeSupport.ab3"
00019358 <CLIModeSupport.ab3@894> XINCLUDE "CLIModeSupport.ab3"
0001935C <CLIModeSupport.ab3@895> XINCLUDE "CLIModeSupport.ab3"
0001939A <CLIModeSupport.ab3@896> XINCLUDE "CLIModeSupport.ab3"
0001939E <CLIModeSupport.ab3@897> XINCLUDE "CLIModeSupport.ab3"
000193DC <CLIModeSupport.ab3@899> XINCLUDE "CLIModeSupport.ab3"
000193E0 <CLIModeSupport.ab3@900> XINCLUDE "CLIModeSupport.ab3"
00019406 <CLIModeSupport.ab3@902> XINCLUDE "CLIModeSupport.ab3"
0001942C <CLIModeSupport.ab3@903> XINCLUDE "CLIModeSupport.ab3"
00019452 <CLIModeSupport.ab3@904> XINCLUDE "CLIModeSupport.ab3"
00019478 <CLIModeSupport.ab3@905> XINCLUDE "CLIModeSupport.ab3"
0001949E <CLIModeSupport.ab3@906> XINCLUDE "CLIModeSupport.ab3"
000194F4 <CLIModeSupport.ab3@907> XINCLUDE "CLIModeSupport.ab3"
0001954A <CLIModeSupport.ab3@908> XINCLUDE "CLIModeSupport.ab3"
00019598 <CLIModeSupport.ab3@909> XINCLUDE "CLIModeSupport.ab3"
000195EE <CLIModeSupport.ab3@910> XINCLUDE "CLIModeSupport.ab3"
00019614 <CLIModeSupport.ab3@911> XINCLUDE "CLIModeSupport.ab3"
0001963A <CLIModeSupport.ab3@912> XINCLUDE "CLIModeSupport.ab3"
00019660 <CLIModeSupport.ab3@913> XINCLUDE "CLIModeSupport.ab3"
000196B6 <CLIModeSupport.ab3@914> XINCLUDE "CLIModeSupport.ab3"
00019704 <CLIModeSupport.ab3@915> XINCLUDE "CLIModeSupport.ab3"
00019752 <CLIModeSupport.ab3@916> XINCLUDE "CLIModeSupport.ab3"
0001980C <CLIModeSupport.ab3@917> XINCLUDE "CLIModeSupport.ab3"
00019862 <CLIModeSupport.ab3@918> XINCLUDE "CLIModeSupport.ab3"
00019888 <CLIModeSupport.ab3@919> XINCLUDE "CLIModeSupport.ab3"
000198AE <CLIModeSupport.ab3@920> XINCLUDE "CLIModeSupport.ab3"
000198D4 <CLIModeSupport.ab3@921> XINCLUDE "CLIModeSupport.ab3"
0001992A <CLIModeSupport.ab3@922> XINCLUDE "CLIModeSupport.ab3"
00019980 <CLIModeSupport.ab3@923> XINCLUDE "CLIModeSupport.ab3"
000199CE <CLIModeSupport.ab3@924> XINCLUDE "CLIModeSupport.ab3"
00019A1C <CLIModeSupport.ab3@925> XINCLUDE "CLIModeSupport.ab3"
00019A6A <CLIModeSupport.ab3@926> XINCLUDE "CLIModeSupport.ab3"
00019AB8 <CLIModeSupport.ab3@927> XINCLUDE "CLIModeSupport.ab3"
00019B06 <CLIModeSupport.ab3@928> XINCLUDE "CLIModeSupport.ab3"
00019B54 <CLIModeSupport.ab3@929> XINCLUDE "CLIModeSupport.ab3"
00019BA2 <CLIModeSupport.ab3@930> XINCLUDE "CLIModeSupport.ab3"
00019BC8 <CLIModeSupport.ab3@931> XINCLUDE "CLIModeSupport.ab3"
00019BEE <CLIModeSupport.ab3@932> XINCLUDE "CLIModeSupport.ab3"
00019C14 <CLIModeSupport.ab3@933> XINCLUDE "CLIModeSupport.ab3"
00019C62 <CLIModeSupport.ab3@934> XINCLUDE "CLIModeSupport.ab3"
00019CB0 <CLIModeSupport.ab3@935> XINCLUDE "CLIModeSupport.ab3"
00019D06 <CLIModeSupport.ab3@936> XINCLUDE "CLIModeSupport.ab3"
00019D54 <CLIModeSupport.ab3@937> XINCLUDE "CLIModeSupport.ab3"
00019DA2 <CLIModeSupport.ab3@938> XINCLUDE "CLIModeSupport.ab3"
00019DF0 <CLIModeSupport.ab3@939> XINCLUDE "CLIModeSupport.ab3"
00019E16 <CLIModeSupport.ab3@940> XINCLUDE "CLIModeSupport.ab3"
00019E3C <CLIModeSupport.ab3@941> XINCLUDE "CLIModeSupport.ab3"
00019E62 <CLIModeSupport.ab3@942> XINCLUDE "CLIModeSupport.ab3"
00019E9A <CLIModeSupport.ab3@943> XINCLUDE "CLIModeSupport.ab3"
00019EC2 <CLIModeSupport.ab3@944> XINCLUDE "CLIModeSupport.ab3"
00019ED6 <CLIModeSupport.ab3@945> XINCLUDE "CLIModeSupport.ab3"
00019F4A <CLIModeSupport.ab3@946> XINCLUDE "CLIModeSupport.ab3"
00019F90 <CLIModeSupport.ab3@947> XINCLUDE "CLIModeSupport.ab3"
0001A03E <CLIModeSupport.ab3@948> XINCLUDE "CLIModeSupport.ab3"
0001A0AA <CLIModeSupport.ab3@949> XINCLUDE "CLIModeSupport.ab3"
0001A0BA <CLIModeSupport.ab3@950> XINCLUDE "CLIModeSupport.ab3"
0001A0E0 <CLIModeSupport.ab3@952> XINCLUDE "CLIModeSupport.ab3"
0001A0EA <CLIModeSupport.ab3@954> XINCLUDE "CLIModeSupport.ab3"
0001A114 <CLIModeSupport.ab3@955> XINCLUDE "CLIModeSupport.ab3"
0001A11A <CLIModeSupport.ab3@956> XINCLUDE "CLIModeSupport.ab3"
0001A12A <CLIModeSupport.ab3@958> XINCLUDE "CLIModeSupport.ab3"
0001A1CA <CLIModeSupport.ab3@960> XINCLUDE "CLIModeSupport.ab3"
0001A20A <CLIModeSupport.ab3@961> XINCLUDE "CLIModeSupport.ab3"
0001A210 <CLIModeSupport.ab3@963> XINCLUDE "CLIModeSupport.ab3"
0001A272 <CLIModeSupport.ab3@964> XINCLUDE "CLIModeSupport.ab3"
0001A27C <CLIModeSupport.ab3@966> XINCLUDE "CLIModeSupport.ab3"
0001A286 <CLIModeSupport.ab3@968> XINCLUDE "CLIModeSupport.ab3"
0001A2A0 <CLIModeSupport.ab3@969> XINCLUDE "CLIModeSupport.ab3"
0001A2C2 <CLIModeSupport.ab3@1045> XINCLUDE "CLIModeSupport.ab3"
0001A2E4 <CLIModeSupport.ab3@1046> XINCLUDE "CLIModeSupport.ab3"
0001A33E <CLIModeSupport.ab3@1047> XINCLUDE "CLIModeSupport.ab3"
0001A360 <CLIModeSupport.ab3@1048> XINCLUDE "CLIModeSupport.ab3"
0001A382 <CLIModeSupport.ab3@1049> XINCLUDE "CLIModeSupport.ab3"
0001A3DC <CLIModeSupport.ab3@1050> XINCLUDE "CLIModeSupport.ab3"
0001A41E <CLIModeSupport.ab3@1051> XINCLUDE "CLIModeSupport.ab3"
0001A424 <CLIModeSupport.ab3@1053> XINCLUDE "CLIModeSupport.ab3"
0001A432 <CLIModeSupport.ab3@1054> XINCLUDE "CLIModeSupport.ab3"
0001A438 <CLIModeSupport.ab3@1056> XINCLUDE "CLIModeSupport.ab3"
0001A44C <CLIModeSupport.ab3@1057> XINCLUDE "CLIModeSupport.ab3"
0001A456 <CLIModeSupport.ab3@1058> XINCLUDE "CLIModeSupport.ab3"
0001A4D0 <CLIModeSupport.ab3@1059> XINCLUDE "CLIModeSupport.ab3"
0001A4DA <CLIModeSupport.ab3@1060> XINCLUDE "CLIModeSupport.ab3"
0001A4E0 <CLIModeSupport.ab3@1061> XINCLUDE "CLIModeSupport.ab3"
0001A4F4 <CLIModeSupport.ab3@1064> XINCLUDE "CLIModeSupport.ab3"
0001A4FE <CLIModeSupport.ab3@1065> XINCLUDE "CLIModeSupport.ab3"
0001A57E <CLIModeSupport.ab3@1066> XINCLUDE "CLIModeSupport.ab3"
0001A588 <CLIModeSupport.ab3@1067> XINCLUDE "CLIModeSupport.ab3"
0001A58E <CLIModeSupport.ab3@1068> XINCLUDE "CLIModeSupport.ab3"
0001A5A2 <CLIModeSupport.ab3@1071> XINCLUDE "CLIModeSupport.ab3"
0001A5AC <CLIModeSupport.ab3@1072> XINCLUDE "CLIModeSupport.ab3"
0001A5F4 <CLIModeSupport.ab3@1073> XINCLUDE "CLIModeSupport.ab3"
0001A602 <CLIModeSupport.ab3@1074> XINCLUDE "CLIModeSupport.ab3"
0001A628 <CLIModeSupport.ab3@1075> XINCLUDE "CLIModeSupport.ab3"
0001A632 <CLIModeSupport.ab3@1076> XINCLUDE "CLIModeSupport.ab3"
0001A69C <CLIModeSupport.ab3@1077> XINCLUDE "CLIModeSupport.ab3"
0001A76E <CLIModeSupport.ab3@1078> XINCLUDE "CLIModeSupport.ab3"
0001A778 <CLIModeSupport.ab3@1079> XINCLUDE "CLIModeSupport.ab3"
0001A77E <CLIModeSupport.ab3@1080> XINCLUDE "CLIModeSupport.ab3"
0001A788 <CLIModeSupport.ab3@1082> XINCLUDE "CLIModeSupport.ab3"
0001A78E <CLIModeSupport.ab3@1083> XINCLUDE "CLIModeSupport.ab3"
0001A7A2 <CLIModeSupport.ab3@1086> XINCLUDE "CLIModeSupport.ab3"
0001A7AC <CLIModeSupport.ab3@1087> XINCLUDE "CLIModeSupport.ab3"
0001A7F4 <CLIModeSupport.ab3@1088> XINCLUDE "CLIModeSupport.ab3"
0001A7FE <CLIModeSupport.ab3@1089> XINCLUDE "CLIModeSupport.ab3"
0001A804 <CLIModeSupport.ab3@1090> XINCLUDE "CLIModeSupport.ab3"
0001A818 <CLIModeSupport.ab3@1093> XINCLUDE "CLIModeSupport.ab3"
0001A83E <CLIModeSupport.ab3@1094> XINCLUDE "CLIModeSupport.ab3"
0001A852 <CLIModeSupport.ab3@1097> XINCLUDE "CLIModeSupport.ab3"
0001A878 <CLIModeSupport.ab3@1098> XINCLUDE "CLIModeSupport.ab3"
0001A88C <CLIModeSupport.ab3@1101> XINCLUDE "CLIModeSupport.ab3"
0001A8B2 <CLIModeSupport.ab3@1102> XINCLUDE "CLIModeSupport.ab3"
0001A8C6 <CLIModeSupport.ab3@1105> XINCLUDE "CLIModeSupport.ab3"
0001A8D0 <CLIModeSupport.ab3@1106> XINCLUDE "CLIModeSupport.ab3"
0001A8FE <CLIModeSupport.ab3@1107> XINCLUDE "CLIModeSupport.ab3"
0001A94E <CLIModeSupport.ab3@1108> XINCLUDE "CLIModeSupport.ab3"
0001A96E <CLIModeSupport.ab3@1109> XINCLUDE "CLIModeSupport.ab3"
0001A986 <CLIModeSupport.ab3@1110> XINCLUDE "CLIModeSupport.ab3"
0001AA6A <CLIModeSupport.ab3@1111> XINCLUDE "CLIModeSupport.ab3"
0001AA74 <CLIModeSupport.ab3@1112> XINCLUDE "CLIModeSupport.ab3"
0001AA7A <CLIModeSupport.ab3@1113> XINCLUDE "CLIModeSupport.ab3"
0001AA7C <CLIModeSupport.ab3@1115> XINCLUDE "CLIModeSupport.ab3"
0001AA90 <CLIModeSupport.ab3@1116> XINCLUDE "CLIModeSupport.ab3"
0001AAC2 <CLIModeSupport.ab3@1119> XINCLUDE "CLIModeSupport.ab3"
0001AAC8 <CLIModeSupport.ab3@1120> XINCLUDE "CLIModeSupport.ab3"
0001AB0C <CLIModeSupport.ab3@1121> XINCLUDE "CLIModeSupport.ab3"
0001AB1E <CLIModeSupport.ab3@1122> XINCLUDE "CLIModeSupport.ab3"
0001AB30 <CLIModeSupport.ab3@1123> XINCLUDE "CLIModeSupport.ab3"
0001AB3A <CLIModeSupport.ab3@1124> XINCLUDE "CLIModeSupport.ab3"
0001AB40 <CLIModeSupport.ab3@1125> XINCLUDE "CLIModeSupport.ab3"
0001AB4A <CLIModeSupport.ab3@1127> XINCLUDE "CLIModeSupport.ab3"
0001AB64 <CLIModeSupport.ab3@1128> XINCLUDE "CLIModeSupport.ab3"
0001AB64 <AmiBlitz3.ab3@93> XINCLUDE "CLIModeSupport.ab3"
0001ABE4 <AmiBlitz3.ab3@98> dynassign.s = dos_GetToolString{"ASSIGN",default_assign$}       ; replaced hardcoded path  tomsmart1 2012 03 09
0001AC1C <AmiBlitz3.ab3@99> If dynassign <> ""
0001AC32 <AmiBlitz3.ab3@100>     *AssignSema.SignalSemaphore = FindSemaphore_(&dynassign)    ; does it already exist?
0001AC3C <AmiBlitz3.ab3@101>     If *AssignSema
0001AC4C <AmiBlitz3.ab3@102>       ObtainSemaphoreShared_ *AssignSema
0001AC52 <AmiBlitz3.ab3@103>     Else                                                        ; no, create one...
0001AC72 <AmiBlitz3.ab3@104>       *AssignSema = AllocVec_ (SizeOf.SignalSemaphore,#MEMF_PUBLIC|#MEMF_CLEAR)
0001AC7C <AmiBlitz3.ab3@105>       If *AssignSema
0001AC8C <AmiBlitz3.ab3@106>         InitSemaphore_ *AssignSema
0001ACC0 <AmiBlitz3.ab3@108>         *AssignSema\ss_Link\ln_Name = AllocVec_(FLen(dynassign)+1,#MEMF_PUBLIC|#MEMF_CLEAR)
0001ACD2 <AmiBlitz3.ab3@109>         If *AssignSema\ss_Link\ln_Name
0001AD0E <AmiBlitz3.ab3@110>           Poke.s  *AssignSema\ss_Link\ln_Name,dynassign
0001AD1A <AmiBlitz3.ab3@112>         *AssignSema\ss_Link\ln_Pri  = 1
0001AD26 <AmiBlitz3.ab3@113>         *AssignSema\ss_Link\ln_Type = #NT_SIGNALSEM
0001AD36 <AmiBlitz3.ab3@115>         AddSemaphore_ *AssignSema
0001AD46 <AmiBlitz3.ab3@116>         ObtainSemaphoreShared_ *AssignSema
0001AD92 <AmiBlitz3.ab3@122>   mydir.s = dos_GetProgDir{"Sys:"}
0001ADF2 <AmiBlitz3.ab3@123>   If dos_SetAssign{dynassign,mydir,False}
0001AE86 <AmiBlitz3.ab3@124>     dos_AddAssign{"LIBS:",dos_AddPart{dynassign,"Libs"}}
0001AEBE <AmiBlitz3.ab3@127>   Poke$ ?str_blitz3assign,dynassign
0001AF40 <AmiBlitz3.ab3@128>   Poke$ ?str_defaultdbug,dos_AddPart{dynassign,"Debug/DefaultDBug"}
0001AFC2 <AmiBlitz3.ab3@131>   Poke$ ?str_path_acidlibs,dos_AddPart{dynassign, "BlitzLibs/AcidLibs"}
0001B044 <AmiBlitz3.ab3@132>   Poke$ ?str_path_deflibs ,dos_AddPart{dynassign, "BlitzLibs/DefLibs" }
0001B0C6 <AmiBlitz3.ab3@133>   Poke$ ?str_path_userlibs,dos_AddPart{dynassign, "BlitzLibs/UserLibs"}
0001B148 <AmiBlitz3.ab3@134>   Poke$ ?str_path_includes,dos_AddPart{dynassign, "Sourcecodes/Includes"}
0001B1BC <AmiBlitz3.ab3@135>   my_systemdir$    = dos_AddPart{dynassign, "System"}
0001B230 <AmiBlitz3.ab3@136>   my_residentsdir$ = dos_AddPart{dynassign, "BlitzLibs/Residents"}
0001B2A4 <AmiBlitz3.ab3@137>   my_blitzlibsdir$ = dos_AddPart{dynassign, "BlitzLibs"}
0001B2D2 <AmiBlitz3.ab3@138>   dos_CreateDir{my_blitzlibsdir$}
0001B2F6 <AmiBlitz3.ab3@139>   dos_CreateDir{Peek$(?str_path_userlibs)}
0001B324 <AmiBlitz3.ab3@140>   dos_CreateDir{my_residentsdir$}
0001B352 <AmiBlitz3.ab3@141>   dos_CreateDir{my_systemdir$}
0001B41C <AmiBlitz3.ab3@147> pedfile$ = dos_GetToolString{"EDITOR",dos_AddPart{my_systemdir$,"PED"}}
0001B454 <AmiBlitz3.ab3@148> Poke.s ?str_pedfile,pedfile$
0001B492 <AmiBlitz3.ab3@150> If dos_GetToolState{"START_WITHOUT_LIBS"} = -1
0001B4A2 <AmiBlitz3.ab3@151>   Poke.b ?start_without_libs,1
0001B4A8 <AmiBlitz3.ab3@152> Else
0001B4B8 <AmiBlitz3.ab3@153>   Poke.b ?start_without_libs,0
0001B4DE <AmiBlitz3.ab3@156> !TRANS_INIT{"AmiBlitz3"}     ; init localization via translation.include
0001B4EA <AmiBlitz3.ab3@160> dbg_fid.l = -1 ; no debug file id yet!
0001B4FC <AmiBlitz3.ab3@163> Poke.l ?maxerrorcount,#defaultmaxerrorcount                ; set the default value  tomsmart1
0001B506 <AmiBlitz3.ab3@165> If CLIMode
0001B50C <AmiBlitz3.ab3@168>   err.l      = False                                       ; indicate that an error has occured
0001B512 <AmiBlitz3.ab3@169>   showhelp.l = False                                       ; show the CLI tool's help
0001B56A <AmiBlitz3.ab3@172>   cli_progpath.s      = dos_GetProgDir{default_assign$}    ; replaced hardcoded path  tomsmart1 2012 03 09
0001B592 <AmiBlitz3.ab3@173>   cli_sourcefile.s    = ""
0001B5BA <AmiBlitz3.ab3@174>   cli_exefile.s       = ""
0001B5E2 <AmiBlitz3.ab3@175>   cli_savefile.s      = ""
0001B60A <AmiBlitz3.ab3@176>   cli_dumpfile.s      = ""
0001B632 <AmiBlitz3.ab3@177>   cli_includepath.s   = ""
0001B65A <AmiBlitz3.ab3@178>   cli_blitzlibpath.s  = ""
0001B660 <AmiBlitz3.ab3@179>   cli_debuginfo.l     = False
0001B666 <AmiBlitz3.ab3@180>   cli_run.l           = False
0001B66E <AmiBlitz3.ab3@181>   cli_dumpflags.l     = $FFFFFFFF
0001B696 <AmiBlitz3.ab3@182>   cli_info.s          = ""
0001B69C <AmiBlitz3.ab3@183>   cli_release.l       = False
0001B6A6 <AmiBlitz3.ab3@184>   cli_numargs.l       = dos_GetNumArgs{}
0001B6AC <AmiBlitz3.ab3@185>   cli_gui.l           = False
0001B6B4 <AmiBlitz3.ab3@186>   cli_dumpform.l      = 1 ; 0 = bin, 1 = ASCII
0001B6BC <AmiBlitz3.ab3@187>   cli_verbose.l       = 1
0001B6C4 <AmiBlitz3.ab3@188>   cli_comdbgflags.l   = $00000000             ; added to support compiler and debugger settings via CLI  tomsmart1
0001B6CC <AmiBlitz3.ab3@189>   cli_comstrbufsize.l = 0
0001B6D4 <AmiBlitz3.ab3@190>   cli_exestacksize.l  = 0
0001B6DC <AmiBlitz3.ab3@191>   cli_maxerrors.l     = 0                     ; added to make maxerrorcount changable in CLIMode  tomsmart1
0001B6F4 <AmiBlitz3.ab3@192>   If cli_numargs=0 Then showhelp=True
0001B724 <AmiBlitz3.ab3@196>     arg.s = dos_GetNextArg{}                               ; get the next CLI argument
0001B770 <AmiBlitz3.ab3@197>     larg.s = LCase$(arg)                                   ; lower case the option string
0001B838 <AmiBlitz3.ab3@198>     If Left$(larg,1)="-" Then larg = Right$(larg,FLen(larg)-1)
0001B86E <AmiBlitz3.ab3@199>     Select larg
0001B8BA <AmiBlitz3.ab3@200>       Case "s" : larg="source"
0001B90C <AmiBlitz3.ab3@201>       Case "e" : larg="exe"
0001B95E <AmiBlitz3.ab3@202>       Case "d" : larg="debug"
0001B9B0 <AmiBlitz3.ab3@203>       Case "r" : larg="release"
0001BA02 <AmiBlitz3.ab3@204>       Case "h" : larg="help"
0001BA54 <AmiBlitz3.ab3@205>       Case "v" : larg="verbose"
0001BA62 <AmiBlitz3.ab3@206>     End Select
0001BA98 <AmiBlitz3.ab3@208>     Select larg
0001BAEC <AmiBlitz3.ab3@209>       Case "exe"      : cli_exefile     = dos_GetNextArg{}
0001BB46 <AmiBlitz3.ab3@210>       Case "source"   : cli_sourcefile  = dos_GetNextArg{}
0001BBA0 <AmiBlitz3.ab3@211>       Case "save"     : cli_savefile    = dos_GetNextArg{}
0001BBD0 <AmiBlitz3.ab3@212>       Case "debug"    : cli_debuginfo   = True
0001BC00 <AmiBlitz3.ab3@213>       Case "run"      : cli_run         = True
0001BC30 <AmiBlitz3.ab3@214>       Case "release"  : cli_release     = True
0001BC60 <AmiBlitz3.ab3@215>       Case "ped"      : cli_gui         = True
0001BCBA <AmiBlitz3.ab3@216>       Case "dform"    : cli_dumpform.l  = Vallong(dos_GetNextArg{})
0001BD2C <AmiBlitz3.ab3@217>       Case "dump"     : cli_info        = LCase$(dos_GetNextArg{})
0001BD5C <AmiBlitz3.ab3@218>                         cli_dumpfile    = dos_GetNextArg{}
0001BD64 <AmiBlitz3.ab3@219>                         cli_dumpflags   = $0
0001BDC4 <AmiBlitz3.ab3@220>                         If Instr(cli_info,"all"  ) Then cli_dumpflags | $FFFFFFFF
0001BE24 <AmiBlitz3.ab3@221>                         If Instr(cli_info,"token") Then cli_dumpflags | #DUMPFLG_TOKENS
0001BE84 <AmiBlitz3.ab3@222>                         If Instr(cli_info,"label") Then cli_dumpflags | #DUMPFLG_LABELS
0001BEE4 <AmiBlitz3.ab3@223>                         If Instr(cli_info,"var"  ) Then cli_dumpflags | #DUMPFLG_VARS
0001BF44 <AmiBlitz3.ab3@224>                         If Instr(cli_info,"const") Then cli_dumpflags | #DUMPFLG_CONSTANTS
0001BFA4 <AmiBlitz3.ab3@225>                         If Instr(cli_info,"func" ) Then cli_dumpflags | #DUMPFLG_FUNCTIONS
0001C004 <AmiBlitz3.ab3@226>                         If Instr(cli_info,"macro") Then cli_dumpflags | #DUMPFLG_MACROS
0001C064 <AmiBlitz3.ab3@227>                         If Instr(cli_info,"type" ) Then cli_dumpflags | #DUMPFLG_NEWTYPES
0001C0C4 <AmiBlitz3.ab3@228>                         If Instr(cli_info,"lib"  ) Then cli_dumpflags | #DUMPFLG_LIBS
0001C0D6 <AmiBlitz3.ab3@229>                         If cli_dumpflags = $0
0001C0DC <AmiBlitz3.ab3@230>                          err=True
0001C170 <AmiBlitz3.ab3@231>                          NPrint "\\1b[1m*** ERROR: Invalid flags for dumpfile \\22",cli_info,"\\22 specified!\\1b[0m"
0001C1E2 <AmiBlitz3.ab3@234>       Case "setcom"   : cli_setcom.s    = LCase$(dos_GetNextArg{})
0001C1EA <AmiBlitz3.ab3@235>                         cli_comflags.l  = $0
0001C24A <AmiBlitz3.ab3@236>                         If Instr(cli_setcom,"icon"  ) Then cli_comflags | #CLI_COMSETICONFLAG     ; create Icon
0001C2AA <AmiBlitz3.ab3@237>                         If Instr(cli_setcom,"small" ) Then cli_comflags | #CLI_COMSETSMALLFLAG    ; make smallest code
0001C30A <AmiBlitz3.ab3@238>                         If Instr(cli_setcom,"func"  ) Then cli_comflags | #CLI_COMSETFUNCFLAG     ; use Functionoptimizer
0001C36A <AmiBlitz3.ab3@239> 
0001C3CA <AmiBlitz3.ab3@240>                         If Instr(cli_setcom,"dbgf"  ) Then cli_comflags | #CLI_COMSETDBGFFLAG     ; create a .dbf file
0001C3E4 <AmiBlitz3.ab3@241>                         If (cli_comflags & #CLI_COMSETALLFLAGS) = 0                               ; test if args are correct
0001C3EA <AmiBlitz3.ab3@242>                           err=True                                                                ; no
0001C47E <AmiBlitz3.ab3@243>                           NPrint "\\1b[1m*** ERROR: Invalid flags for setcom \\22",cli_setcom,"\\22 specified!\\1b[0m"
0001C484 <AmiBlitz3.ab3@244>                         Else
0001C492 <AmiBlitz3.ab3@245>                           cli_comdbgflags | cli_comflags                                          ; yes then add it
0001C504 <AmiBlitz3.ab3@248>       Case "setdbg"   : cli_setdbg.s    = LCase$(dos_GetNextArg{})
0001C50C <AmiBlitz3.ab3@249>                         cli_dbgflags.l  = $0
0001C56C <AmiBlitz3.ab3@250>                         If Instr(cli_setdbg,"auto" ) Then cli_dbgflags | #CLI_DEBUGAUTOFLAG       ; autorun
0001C5CC <AmiBlitz3.ab3@251>                         If Instr(cli_setdbg,"irq"  ) Then cli_dbgflags | #CLI_DEBUGIRQFLAG        ; interrupt check
0001C62C <AmiBlitz3.ab3@252>                         If Instr(cli_setdbg,"asm"  ) Then cli_dbgflags | #CLI_DEBUGASMFLAG        ; assembler check
0001C68C <AmiBlitz3.ab3@253>                         If Instr(cli_setdbg,"ofl"  ) Then cli_dbgflags | #CLI_DEBUGOFLFLAG        ; overflow check
0001C6A6 <AmiBlitz3.ab3@254>                         If (cli_dbgflags & #CLI_DEBUGALLFLAGS) = 0                                ; yes then add it
0001C6AC <AmiBlitz3.ab3@255>                           err=True                                                                ; no
0001C740 <AmiBlitz3.ab3@256>                           NPrint "\\1b[1m*** ERROR: Invalid flags for setdbg \\22",cli_setdbg,"\\22 specified!\\1b[0m"
0001C746 <AmiBlitz3.ab3@257>                         Else
0001C754 <AmiBlitz3.ab3@258>                           cli_comdbgflags | cli_dbgflags                                          ; yes then add it
0001C7AE <AmiBlitz3.ab3@260>       Case "strbufsize": cli_comstrbufsize = Vallong(dos_GetNextArg{})
0001C808 <AmiBlitz3.ab3@261>       Case "stacksize" : cli_exestacksize  = Vallong(dos_GetNextArg{})
0001C862 <AmiBlitz3.ab3@262> 
0001C888 <AmiBlitz3.ab3@263>                         If ((cli_maxerrors > 0) AND (cli_maxerrors <4097))                        ; check
0001C898 <AmiBlitz3.ab3@264>                           Poke.l ?maxerrorcount,cli_maxerrors
0001C8F2 <AmiBlitz3.ab3@267>       Case "verbose"  : cli_verbose     = Vallong(dos_GetNextArg{})
0001C922 <AmiBlitz3.ab3@268>       Case "h"        : showhelp        = True             ; show the help and quit
0001C928 <AmiBlitz3.ab3@269>       Default
0001C960 <AmiBlitz3.ab3@270>         If arg><""
0001C9F4 <AmiBlitz3.ab3@271>           NPrint "\\1b[1m*** ERROR: Unknown option \\22",arg,"\\22 specified!\\1b[0m"
0001C9FA <AmiBlitz3.ab3@272>           err = True
0001CA08 <AmiBlitz3.ab3@274>     End Select
0001CA54 <AmiBlitz3.ab3@275>   Until arg = "" OR err=True          ; until we processed all arguments
0001CA76 <AmiBlitz3.ab3@278>   If err><False OR showhelp = True
0001CA80 <AmiBlitz3.ab3@279>     If showhelp
0001CAE2 <AmiBlitz3.ab3@280>     NPrint "AmiBlitz ",Peek.s(?myversion)
0001CB1A <AmiBlitz3.ab3@281>     NPrint "\\nSyntax: AmiBlitz3 [options]"
0001CB52 <AmiBlitz3.ab3@282>     NPrint "\\nOptions:"
0001CB8A <AmiBlitz3.ab3@283>     NPrint "  -(s)ource <file>    : input source code filename (bb2, ab2 or ab3)"
0001CBC2 <AmiBlitz3.ab3@284>     NPrint "  -(e)xe <file>       : output executable filename"
0001CBFA <AmiBlitz3.ab3@285>     NPrint "  -(d)ebug            : compile and start runtime debugger"
0001CC32 <AmiBlitz3.ab3@286>     NPrint "  -(r)elease          : create release executable (size optimized)"
0001CC6A <AmiBlitz3.ab3@287>     NPrint "  -run                : run compiled program"
0001CCA2 <AmiBlitz3.ab3@288>     NPrint "  -dump <info> <file> : dump compiler internals to file"
0001CCDA <AmiBlitz3.ab3@289>     NPrint "                        (info=all|token|label|var|func|const|macro|type|lib)"
0001CD12 <AmiBlitz3.ab3@290>     NPrint "  -setcom <options>   : set compiler settings (options=icon|small|func|ldbg|dbgf)"       ; added  tomsmart1
0001CD4A <AmiBlitz3.ab3@291>     NPrint "  -setdbg <check>     : set debugger settings (check=auto|irq|asm|ofl)"                  ; added  tomsmart1
0001CD82 <AmiBlitz3.ab3@292>     NPrint "  -strbufsize <n>     : set the string buffer size of the compiler"                      ; added  tomsmart1
0001CDBA <AmiBlitz3.ab3@293>     NPrint "  -stacksize <n>      : set the stacksize for the exe if it run/debug"                   ; added  tomsmart1
0001CDF2 <AmiBlitz3.ab3@294>     NPrint "  -maxerrors <n>      ; set maxerrorcounter of the compiler (1-4096; default=99)"        ; added  tomsmart1
0001CE2A <AmiBlitz3.ab3@295>     NPrint "  -dform <n>          : format of compiler internals dump (0=bin, 1=ASCII; default=1)"
0001CE62 <AmiBlitz3.ab3@296>     NPrint "  -PED                : start AmiBlitz3 IDE (PED)"
0001CE9A <AmiBlitz3.ab3@297>     NPrint "  -save <file>        : re-save source code (convert format, if needed)"
0001CED2 <AmiBlitz3.ab3@298>     NPrint "  -(v)erbose <n>      : set verbose level (0, 1 or 2; default=1)"
0001CF0A <AmiBlitz3.ab3@299>     NPrint "  -(h)elp             : show this help"
0001CF42 <AmiBlitz3.ab3@300>     NPrint "\\nExample:"
0001CF7A <AmiBlitz3.ab3@301>     NPrint "  AmiBlitz3 -s \\22DH0:Sourcecodes/MyProgram.ab3\\22 -e RAM:MyProgram.exe"
0001CFB2 <AmiBlitz3.ab3@302>     NPrint "\\nNote: To start the AmiBlitz3 IDE, run from Workbench or with -PED option."
0001CFB8 <AmiBlitz3.ab3@305>     Goto abnormal_exit
0001CFD4 <AmiBlitz3.ab3@308>   If cli_gui        Then CLIMode = False : error_SetFlags{#error_requester}
0001D038 <AmiBlitz3.ab3@309>   If cli_sourcefile Then Poke.s ?str_tempfilename,cli_sourcefile
0001D048 <AmiBlitz3.ab3@312> Poke.l ?CLIMode,CLIMode
0001D06C <AmiBlitz3.ab3@342>   Dim incdim.s (#maxincludes)
0001D090 <AmiBlitz3.ab3@343>   Dim incline.l(#maxincludes)
0001D0AA <AmiBlitz3.ab3@611> Function.s Get_Libinfo{addr_libnum.l}
0001D0B6 <AmiBlitz3.ab3@613>   lib_ab2.b = False : lib_os.b = False
0001D0BC <AmiBlitz3.ab3@614>   addr_counter.l = addr_libnum
0001D0C4 <AmiBlitz3.ab3@615>   skip.l = 0
0001D0D6 <AmiBlitz3.ab3@616>   If addr_counter=0
0001D110 <AmiBlitz3.ab3@617>     error{"INTERNAL: \\__THIS_FUNCTION: Invalid pointer!"}
0001D12E <AmiBlitz3.ab3@618>     Function Return ""
0001D13C <AmiBlitz3.ab3@623>     mem.l = Peek.l(addr_counter)
0001D14A <AmiBlitz3.ab3@628>     addr_counter + 2
0001D16A <AmiBlitz3.ab3@629>     If (mem = $0000ffff) Then lib_ab2= True : skip = 8
0001D184 <AmiBlitz3.ab3@630>     If (mem LSR 16) = $ffe2
0001D18A <AmiBlitz3.ab3@632>       lib_os = True
0001D192 <AmiBlitz3.ab3@633>       skip = 10
0001D1D8 <AmiBlitz3.ab3@634>       If Peek$(addr_counter+skip) = "" Then skip + 4
0001D21C <AmiBlitz3.ab3@636>   Until (lib_ab2=True OR lib_os = True) OR (addr_counter>addr_libnum + $400)
0001D232 <AmiBlitz3.ab3@638>   If (addr_counter>addr_libnum + $400)
0001D250 <AmiBlitz3.ab3@640>     Function Return ""
0001D256 <AmiBlitz3.ab3@641>   Else
0001D27A <AmiBlitz3.ab3@642>     Function Return Peek$(addr_counter + skip)
0001D284 <AmiBlitz3.ab3@644> End Function
0001D2A2 <AmiBlitz3.ab3@684>   !asm
0001D2A8 <AmiBlitz3.ab3@685>   MOVEA.l _execbase,A6
0001D2AC <AmiBlitz3.ab3@686>   MOVEM.l d0/a0,-(a7)
0001D2AE <AmiBlitz3.ab3@688>   MOVEQ #127,d0
0001D2B4 <AmiBlitz3.ab3@689>   LEA chartab,a0
0001D2BA <AmiBlitz3.ab3@692>     MOVE.b #1,128(a0)
0001D2BC <AmiBlitz3.ab3@693>     CLR.b (a0)+
0001D2C0 <AmiBlitz3.ab3@694>   DBF d0,'l12
0001D2C6 <AmiBlitz3.ab3@696>   LEA chartab,a0
0001D2CA <AmiBlitz3.ab3@697>   MOVE.b #1,(a0)
0001D2D0 <AmiBlitz3.ab3@698>   MOVE.b #1,","(a0)
0001D2D6 <AmiBlitz3.ab3@699>   MOVE.b #1,";"(a0)
0001D2DC <AmiBlitz3.ab3@700>   MOVE.b #1,":"(a0)
0001D2E2 <AmiBlitz3.ab3@701>   MOVE.b #1,"("(a0)
0001D2E8 <AmiBlitz3.ab3@702>   MOVE.b #1,")"(a0)
0001D2EE <AmiBlitz3.ab3@703>   MOVE.b #1,"="(a0)
0001D2F4 <AmiBlitz3.ab3@704>   MOVE.b #1,"+"(a0)
0001D2FA <AmiBlitz3.ab3@705>   MOVE.b #1,"-"(a0)
0001D300 <AmiBlitz3.ab3@706>   MOVE.b #1,"*"(a0)
0001D306 <AmiBlitz3.ab3@707>   MOVE.b #1,"/"(a0)
0001D30C <AmiBlitz3.ab3@708>   MOVE.b #1,"$"(a0)
0001D312 <AmiBlitz3.ab3@709>   MOVE.b #1,"%"(a0)
0001D318 <AmiBlitz3.ab3@710>   MOVE.b #1,"."(a0)
0001D31E <AmiBlitz3.ab3@711>   MOVE.b #1,"["(a0)
0001D324 <AmiBlitz3.ab3@712>   MOVE.b #1,"]"(a0)
0001D32A <AmiBlitz3.ab3@713>   MOVE.b #1,"{"(a0)
0001D330 <AmiBlitz3.ab3@714>   MOVE.b #1,"}"(a0)
0001D336 <AmiBlitz3.ab3@715>   MOVE.b #1,"\"(a0)
0001D33C <AmiBlitz3.ab3@716>   MOVE.b #1,">"(a0)
0001D342 <AmiBlitz3.ab3@717>   MOVE.b #1,"<"(a0)
0001D348 <AmiBlitz3.ab3@718>   MOVE.b #1,"&"(a0)
0001D34E <AmiBlitz3.ab3@719>   MOVE.b #1,"|"(a0)
0001D354 <AmiBlitz3.ab3@720>   MOVE.b #1,"^"(a0)
0001D35A <AmiBlitz3.ab3@721>   MOVE.b #1,$7e(a0)
0001D360 <AmiBlitz3.ab3@722>   MOVE.w #$0101,1(a0)
0001D366 <AmiBlitz3.ab3@724>   LEA instrtab,a0
0001D36C <AmiBlitz3.ab3@725>   MOVE.l #labelhash-instrtab,d0
0001D36E <AmiBlitz3.ab3@726>   ASR.l #2,d0
0001D370 <AmiBlitz3.ab3@727>   SUBQ.l #1,d0
0001D372 <AmiBlitz3.ab3@730>    CLR.l (a0)+
0001D374 <AmiBlitz3.ab3@731>    SUBQ.l #1,d0
0001D378 <AmiBlitz3.ab3@732>   BNE 'l10
0001D37E <AmiBlitz3.ab3@734>   LEA allowtab,a0
0001D384 <AmiBlitz3.ab3@735>   MOVE.l #255,d0
0001D386 <AmiBlitz3.ab3@738>     CLR.b (a0)+
0001D38A <AmiBlitz3.ab3@739>   DBF d0,'la1
0001D390 <AmiBlitz3.ab3@741>   LEA allowtab,a0
0001D396 <AmiBlitz3.ab3@742>   MOVE.b #1,$7d(a0)
0001D39C <AmiBlitz3.ab3@743>   MOVE.b #1,$7c(a0)
0001D3A2 <AmiBlitz3.ab3@744>   MOVE.b #1,$44(a0)
0001D3A8 <AmiBlitz3.ab3@745>   MOVE.b #1,$45(a0)
0001D3AE <AmiBlitz3.ab3@746>   MOVE.b #1,$b9(a0)
0001D3B4 <AmiBlitz3.ab3@747>   MOVE.b #1,$89(a0)
0001D3BA <AmiBlitz3.ab3@748>   MOVE.b #1,$ce(a0)
0001D3C0 <AmiBlitz3.ab3@749>   MOVE.b #1,$cf(a0)
0001D3C6 <AmiBlitz3.ab3@750>   MOVE.b #1,$d0(a0)
0001D3CC <AmiBlitz3.ab3@751>   MOVE.b #1,$cd(a0)
0001D3CE <AmiBlitz3.ab3@752>   MOVEQ #0,d0
0001D3D4 <AmiBlitz3.ab3@754>   MOVEA.l _execbase,a6
0001D3DA <AmiBlitz3.ab3@759>   MOVE.l #$10000,d0
0001D3E0 <AmiBlitz3.ab3@760>   MOVE.l #80000,d1
0001D3E2 <AmiBlitz3.ab3@761>   MOVE.l d1,d2
0001D3E6 <AmiBlitz3.ab3@762>   JSR _CreatePool(a6)                                      ; alloc memory for own stuff
0001D3EC <AmiBlitz3.ab3@763>   MOVE.l d0,mempool
0001D3F0 <AmiBlitz3.ab3@764>   MOVEM.l (a7)+,d0/a0
0001D3F6 <AmiBlitz3.ab3@765>   TST.l mempool
0001D3FA <AmiBlitz3.ab3@766>   BEQ shutdown_compiler
0001D3FE <AmiBlitz3.ab3@768>   MOVEA.l $114(A6),A4                                      ; get adress of this.Task-Structure
0001D404 <AmiBlitz3.ab3@769>   MOVE.l A4,ptr_ThisTask
0001D408 <AmiBlitz3.ab3@771>   BSR.w open_doslibrary
0001D40C <AmiBlitz3.ab3@772>   BEQ.w shutdown_compiler
0001D412 <AmiBlitz3.ab3@774>   MOVE.l D2,stacksize
0001D414 <AmiBlitz3.ab3@778>   MOVEQ.l #$00,D0
0001D41A <AmiBlitz3.ab3@779>   LEA tokens,A0
0001D41C <AmiBlitz3.ab3@782>     ADDQ.w #1,D0
0001D41E <AmiBlitz3.ab3@783>     MOVE.l (A0),D1
0001D422 <AmiBlitz3.ab3@784>     BEQ.w JL_0_2D1C
0001D424 <AmiBlitz3.ab3@785>     MOVEA.l D1,A0
0001D428 <AmiBlitz3.ab3@786> BRA.w JL_0_2D0E
0001D42E <AmiBlitz3.ab3@789>   MOVE.l A0,end_of_tokenlist
0001D432 <AmiBlitz3.ab3@791>   BSR.w makeasmtable
0001D43A <AmiBlitz3.ab3@792>   MOVE.w #$FFFF,returncode_org                             ;#-1,returncode
0001D43E <AmiBlitz3.ab3@794>   BSR.w open_mathlibrary
0001D442 <AmiBlitz3.ab3@795>   BEQ.w freemem_and_quit4
0001D448 <AmiBlitz3.ab3@797>   MOVE.l constmaxpc,D0
0001D44A <AmiBlitz3.ab3@798>   MOVEQ.l #$02,D1                                          ;chipmem            ;01 org source
0001D450 <AmiBlitz3.ab3@799>   MOVEA.l _execbase,A6
0001D454 <AmiBlitz3.ab3@800>   JSR _AllocMem(A6)                                        ;mem for branch routine
0001D45A <AmiBlitz3.ab3@801>   MOVE.l D0,constpcat
0001D45E <AmiBlitz3.ab3@802>   BEQ.w freemem_and_quit3
0001D464 <AmiBlitz3.ab3@803>   ADD.l constmaxpc,D0
0001D46A <AmiBlitz3.ab3@804>   MOVE.l D0,constlibat
0001D470 <AmiBlitz3.ab3@806>   MOVE.l macrobuffer_size,D0
0001D476 <AmiBlitz3.ab3@807>   CMP.l #DEFAULT_MACROBUFFERSIZE,d0                        ; replaced by a constant  tomsmart1
0001D47A <AmiBlitz3.ab3@808>   BGE 'ok
0001D480 <AmiBlitz3.ab3@809>     MOVE.l #DEFAULT_MACROBUFFERSIZE,d0
0001D486 <AmiBlitz3.ab3@810>     MOVE.l d0,macrobuffer_size                             ; replaced with a constant tomsmart1
0001D488 <AmiBlitz3.ab3@813>   ADDQ.l #4,d0
0001D48A <AmiBlitz3.ab3@814>   MOVEQ.l #$01,D1
0001D490 <AmiBlitz3.ab3@815>   MOVEA.l _execbase,A6
0001D494 <AmiBlitz3.ab3@816>   JSR _AllocMem(A6)                                        ;macro mem
0001D496 <AmiBlitz3.ab3@817>   MOVE.l d0,a0
0001D49C <AmiBlitz3.ab3@818>   MOVE.l macrobuffer_size,(a0)+
0001D49E <AmiBlitz3.ab3@819>   MOVE.l a0,d0
0001D4A4 <AmiBlitz3.ab3@820>   MOVE.l D0,ptr_macrobuffer_begin
0001D4A8 <AmiBlitz3.ab3@821>   BEQ.w freemem_and_quit2
0001D4AE <AmiBlitz3.ab3@822>   ADD.l macrobuffer_size,D0
0001D4B4 <AmiBlitz3.ab3@823>   MOVE.l D0,ptr_macrobuffer_end
0001D4BA <AmiBlitz3.ab3@825>   TST.l CLIMode
0001D4BE <AmiBlitz3.ab3@826>   BEQ load_ped
0001D4E8 <AmiBlitz3.ab3@829>   !basic
0001D4F2 <AmiBlitz3.ab3@830>   succ.l = InitEmulatedPED{}
0001D4F6 <AmiBlitz3.ab3@831>   GetD0 succ
0001D514 <AmiBlitz3.ab3@832>   !asm
0001D516 <AmiBlitz3.ab3@833>   TST.l d0
0001D51A <AmiBlitz3.ab3@834>   BEQ freemem_and_quit
0001D520 <AmiBlitz3.ab3@835> JMP skip_ped
0001D526 <AmiBlitz3.ab3@840>   MOVE.l #str_pedfile,D1                                   ; Load PED
0001D52C <AmiBlitz3.ab3@841>   MOVEA.l _dosbase,A6
0001D530 <AmiBlitz3.ab3@842>   JSR _LoadSeg(A6)
0001D536 <AmiBlitz3.ab3@843>   MOVE.l D0,ptr_seg_ped
0001D53A <AmiBlitz3.ab3@845>   BEQ.w cant_load_PED         ; was freemem_and_quit  added error massage  that we can't load it  tomsmart1  2012 03
0001D53C <AmiBlitz3.ab3@849>   MOVEA.l D0,A2
0001D53E <AmiBlitz3.ab3@850>   ADDA.l A2,A2
0001D540 <AmiBlitz3.ab3@851>   ADDA.l A2,A2
0001D546 <AmiBlitz3.ab3@853>   LEA teddata,a1                                           ;lea edstruct,A1
0001D54C <AmiBlitz3.ab3@854>   MOVE.l #"TEDY",d1
0001D550 <AmiBlitz3.ab3@855>   JSR 4(A2)                                                ; Run PED
0001D556 <AmiBlitz3.ab3@857>   MOVE.l A0,ped_startup_addr                               ; PED returns address of routine "startup_code"
0001D55C <AmiBlitz3.ab3@858>   MOVE.l A1,comdata                                        ; PED returns address of comdata-area in A1
0001D59A <AmiBlitz3.ab3@860>   !ComData_GetW{comWord_PEDIsAvailable,D0}                 ; if PED_IsAvailable=0, quit AmiBlitz
0001D59E <AmiBlitz3.ab3@861>   BEQ.w unload_ped
0001D5A2 <AmiBlitz3.ab3@862> 
0001D5A6 <AmiBlitz3.ab3@863>   BNE old_version_of_PED                                   ; no, than exit
0001D5E4 <AmiBlitz3.ab3@869>   !ComData_GetL{comData_Magic,D0}
0001D5EA <AmiBlitz3.ab3@870>   CMP.l ##MagicIdentifier_Long,D0                          ;"~::~",D0    ; replace with a constants  tomsmart1 2012 03 09
0001D5EE <AmiBlitz3.ab3@871>   BNE unload_ped
0001D626 <AmiBlitz3.ab3@874>   !ComData_SetL{comPtr_Trap15            ,#directTrap15 }
0001D65E <AmiBlitz3.ab3@875>   !ComData_SetL{comPtr_DirectBuffer      ,#directbuffer}
0001D696 <AmiBlitz3.ab3@876>   !ComData_SetL{comPtr_MacroBase         ,#macrobase}
0001D6CE <AmiBlitz3.ab3@877>   !ComData_SetL{comPtr_VarBase           ,#varbase }
0001D706 <AmiBlitz3.ab3@878>   !ComData_SetL{comPtr_InstrBase         ,#instrtab}
0001D73E <AmiBlitz3.ab3@879>   !ComData_SetL{comPtr_LibPointer        ,#libpointer}
0001D776 <AmiBlitz3.ab3@880>   !ComData_SetL{comPtr_CompilerVersion   ,#myversion }
0001D7AE <AmiBlitz3.ab3@881>   !ComData_SetL{comPtr_VersionInformation,#versioninformation}
0001D7E6 <AmiBlitz3.ab3@882>   !ComData_SetL{comPtr_NumberOfBuilds    ,#number_of_builds}
0001D81E <AmiBlitz3.ab3@883>   !ComData_SetL{comFunc_SaveSource       ,#ab3_SaveSource}
0001D856 <AmiBlitz3.ab3@884>   !ComData_SetL{comFunc_LoadSource       ,#ab3_LoadSource}
0001D88E <AmiBlitz3.ab3@885>   !ComData_SetL{comFunc_ClearSource      ,#ab3_ClearSource}
0001D8C6 <AmiBlitz3.ab3@888>   !ComData_SetL{comFunc_CalculatExpression       ,#menu_calculator}
0001D8FE <AmiBlitz3.ab3@889>   !ComData_SetL{comPtr_CalculatorExpressionString,#str_calcexpression}
0001D936 <AmiBlitz3.ab3@892>   !ComData_SetL{comFunc_BackupXtraData           ,#BackupXtraData}
0001D96E <AmiBlitz3.ab3@893>   !ComData_SetL{comFunc_RestoreXtraData          ,#RestoreXtraData}
0001D9A6 <AmiBlitz3.ab3@895>   !ComData_SetL{comFunc_GetObjectEntry           ,#getobjectentry}
0001D9DE <AmiBlitz3.ab3@896>   !ComData_SetL{comFunc_StoreMaxObjects          ,#storemaxobjects}
0001DA16 <AmiBlitz3.ab3@898>   !ComData_SetL{comFunc_ReloadResidentsForPED    ,#ReloadResidentsForPED}
0001DA4E <AmiBlitz3.ab3@899>   !ComData_SetL{comFunc_FreeClearResidentsForPED ,#FreeClearResidentsForPED}    ; add tomsmart1 2012 06 09
0001DA86 <AmiBlitz3.ab3@901>   !ComData_SetL{comPtr_Residents_Table           ,#residents_table}
0001DABE <AmiBlitz3.ab3@902>   !ComData_SetL{comPtr_StringBuffer_Long         ,#stringbuffer}
0001DAF6 <AmiBlitz3.ab3@903>   !ComData_SetL{comPtr_Stacksize_Long            ,#stacksize}
0001DB2E <AmiBlitz3.ab3@904>   !ComData_SetL{comPtr_Create_IconFile_Byte      ,#create_iconfile}
0001DB66 <AmiBlitz3.ab3@905>   !ComData_SetL{comPtr_Make_SmallestCode_Byte    ,#make_smallestcode}
0001DB9E <AmiBlitz3.ab3@906>   !ComData_SetL{comPtr_Link_DebugInfo_Byte       ,#link_debuginfo}
0001DBD6 <AmiBlitz3.ab3@907>   !ComData_SetL{comPtr_Use_Debugger_Byte         ,#use_debugger}
0001DC0E <AmiBlitz3.ab3@908>   !ComData_SetL{comPtr_Autorun_Byte              ,#autorun}
0001DC46 <AmiBlitz3.ab3@909>   !ComData_SetL{comPtr_InterruptCheck_Byte       ,#interruptcheck}
0001DC7E <AmiBlitz3.ab3@910>   !ComData_SetL{comPtr_AssemblerCheck_Byte       ,#assemblercheck}
0001DCB6 <AmiBlitz3.ab3@911>   !ComData_SetL{comPtr_OverflowCheck_Byte        ,#overflowcheck}
0001DCEE <AmiBlitz3.ab3@912>   !ComData_SetL{comPtr_Number_of_Objects_Word    ,#number_of_objects}
0001DD26 <AmiBlitz3.ab3@913>   !ComData_SetL{comPtr_MaxObjects_Value_Word     ,#maxobjects_value}
0001DD5E <AmiBlitz3.ab3@914>   !ComData_SetL{comPtr_MaxObject_Pos_Word        ,#maxobject_pos}
0001DD96 <AmiBlitz3.ab3@917>   !ComData_SetL{comPtr_CLIArgumentsString       ,#str_cliarguments}
0001DD9C <AmiBlitz3.ab3@919>   CLR.w returncode_org
0001DDC6 <AmiBlitz3.ab3@921>   !basic
0001DDD0 <AmiBlitz3.ab3@922>   If CLIMode
0001DE42 <AmiBlitz3.ab3@923>     If cli_verbose>=3 Then NPrint !TRANS{"Loading BlitzLibs..."}
0001DE60 <AmiBlitz3.ab3@925>   !asm
0001DE66 <AmiBlitz3.ab3@929>   TST.b start_without_libs
0001DE6A <AmiBlitz3.ab3@930>   BNE skip_loading_libs
0001DE6E <AmiBlitz3.ab3@931>     BSR.w call_setpointerbusy
0001DE78 <AmiBlitz3.ab3@932>     MOVE.l #$FFFFffff,linenumat
0001DE7C <AmiBlitz3.ab3@933>     BSR.w get_libraries
0001DE82 <AmiBlitz3.ab3@934>     JSR init_libraries
0001DE86 <AmiBlitz3.ab3@935>     BSR.w init_buffers
0001DE8A <AmiBlitz3.ab3@936>     BSR.w call_setpointernormal
0001DE8C <AmiBlitz3.ab3@941>   MOVEQ.l #-$01,D0
0001DE92 <AmiBlitz3.ab3@942>   MOVEA.l _execbase,A6
0001DE96 <AmiBlitz3.ab3@943>   JSR _AllocSignal(A6)
0001DE9C <AmiBlitz3.ab3@944>   MOVE.l D0,signalNum
0001DE9E <AmiBlitz3.ab3@945>   MOVEQ.l #$00,D1
0001DEA0 <AmiBlitz3.ab3@946>   BSET D0,D1
0001DEA6 <AmiBlitz3.ab3@947>   MOVE.l D1,signals
0001DEAC <AmiBlitz3.ab3@951>   MOVE.l #str_defaultdbug,D1
0001DEB0 <AmiBlitz3.ab3@952>   MOVEA.l _dosbase(PC),A6
0001DEB4 <AmiBlitz3.ab3@953>   JSR _LoadSeg(A6)
0001DEBA <AmiBlitz3.ab3@954>   MOVE.l D0,ptr_seg_debugger
0001DEBC <AmiBlitz3.ab3@955>   TST.l d0
0001DEC0 <AmiBlitz3.ab3@956>   BNE ok_12
0001DEEA <AmiBlitz3.ab3@957>     !basic
0001DF4C <AmiBlitz3.ab3@958>     error{!TRANS{"The Debugexecutor `Defaultdbug` was not found.\\nDebugging is not possible."}}
0001DF6A <AmiBlitz3.ab3@959>     !asm
0001DF70 <AmiBlitz3.ab3@962>   TST.l CLIMode
0001DF74 <AmiBlitz3.ab3@963>   BEQ run_ped
0001DF9E <AmiBlitz3.ab3@969>   !basic
0001DFA4 <AmiBlitz3.ab3@970>   err.l = False
0001DFD0 <AmiBlitz3.ab3@978>   If cli_sourcefile
0001DFF0 <AmiBlitz3.ab3@979>     lock.l = Lock_(&cli_sourcefile,#ACCESS_READ)
0001DFFA <AmiBlitz3.ab3@980>     If lock
0001E01E <AmiBlitz3.ab3@981>       NameFromLock_ lock,&cli_tempstr,1024
0001E048 <AmiBlitz3.ab3@982>       cli_sourcefile.s = Peek.s(&cli_tempstr)
0001E058 <AmiBlitz3.ab3@983>       UnLock_ lock
0001E084 <AmiBlitz3.ab3@986>     If cli_exefile
0001E0D6 <AmiBlitz3.ab3@987>       SetCurrentDir{dos_PathPart{cli_sourcefile}}
0001E12E <AmiBlitz3.ab3@988>       path.s = dos_PathPart{cli_exefile}
0001E14E <AmiBlitz3.ab3@989>       lock.l = Lock_(&path,#ACCESS_READ)
0001E158 <AmiBlitz3.ab3@990>       If lock
0001E17C <AmiBlitz3.ab3@991>         NameFromLock_ lock,&cli_tempstr,1024
0001E1A6 <AmiBlitz3.ab3@992>         path.s = Peek.s(&cli_tempstr)
0001E254 <AmiBlitz3.ab3@993>         cli_exefile = dos_AddPart{path,dos_FilePart{cli_exefile}}
0001E264 <AmiBlitz3.ab3@994>         UnLock_ lock
0001E2AE <AmiBlitz3.ab3@1005>   If cli_verbose>=3 Then NPrint "Initializing token hashmap..."
0001E322 <AmiBlitz3.ab3@1006> 
0001E32C <AmiBlitz3.ab3@1007>   *PreProcessor.preprocessor = preproc_Create{}
0001E33C <AmiBlitz3.ab3@1008>   Poke.l ?comPtr_PreProcessor,*PreProcessor
0001E36E <AmiBlitz3.ab3@1009>   preproc_LoadTokens{*PreProcessor,TokenHashMapFile}
0001E382 <AmiBlitz3.ab3@1010>   If *PreProcessor\tokens=#NULL
0001E3FC <AmiBlitz3.ab3@1011>     If cli_verbose>=1 Then NPrint "No hashmap found (\\22"+TokenHashMapFile+"\\22), will be created..."
0001E406 <AmiBlitz3.ab3@1012>     preproc_QueryTokens{*PreProcessor}
0001E438 <AmiBlitz3.ab3@1013>     preproc_SaveTokens{*PreProcessor,TokenHashMapFile}
0001E484 <AmiBlitz3.ab3@1021>   If cli_sourcefile><"" AND err=False
0001E52A <AmiBlitz3.ab3@1022>     If cli_verbose>=3 Then NPrint "Loading sourcecode \\22",cli_sourcefile,"\\22..."
0001E55C <AmiBlitz3.ab3@1023>     succ=LoadSource{cli_sourcefile}
0001E566 <AmiBlitz3.ab3@1024>     If succ
0001E59E <AmiBlitz3.ab3@1025> 
0001E618 <AmiBlitz3.ab3@1026>         If cli_verbose>=1 Then NPrint "Compiling \\22"+cli_sourcefile+"\\22..."
0001E65A <AmiBlitz3.ab3@1027> 
0001E664 <AmiBlitz3.ab3@1029>         If comerr
0001E66A <AmiBlitz3.ab3@1031>         Else
0001E670 <AmiBlitz3.ab3@1035>     Else
0001E6C0 <AmiBlitz3.ab3@1036>       If cli_verbose>=0 NPrint "\\1b[1m*** ERROR: Unable to read source file!\\1b[0m" : err=True
0001E70C <AmiBlitz3.ab3@1040>   If cli_savefile><"" AND err=False
0001E786 <AmiBlitz3.ab3@1041>     If cli_verbose>=2 Then NPrint "Saving sourcefiles as "+cli_savefile+"..."
0001E7B4 <AmiBlitz3.ab3@1042>     SaveSource{cli_savefile}
0001E800 <AmiBlitz3.ab3@1045>   If cli_dumpfile><"" AND err=False
0001E84A <AmiBlitz3.ab3@1046>     If cli_verbose>=2 Then NPrint "Saving dumpfile..."
0001E880 <AmiBlitz3.ab3@1047>     DumpFile{cli_dumpfile,cli_dumpflags,cli_dumpform}
0001E88A <AmiBlitz3.ab3@1050>   If cli_run
0001E89E <AmiBlitz3.ab3@1051>     If comerr=False
0001E8CA <AmiBlitz3.ab3@1052>       If cli_exefile
0001E944 <AmiBlitz3.ab3@1053>         If cli_verbose>=1 Then NPrint "Recompiling "+cli_sourcefile+" for debug..."
0001E97A <AmiBlitz3.ab3@1054> 
0001E9C4 <AmiBlitz3.ab3@1056>       If cli_verbose>=1 Then NPrint "Running program..."
0001E9D2 <AmiBlitz3.ab3@1057> 
0001E9D4 <AmiBlitz3.ab3@1059>         CLR.l d0
0001EA12 <AmiBlitz3.ab3@1060>         !ComData_GetB{comByte_RunningFlag,D0}
0001EA16 <AmiBlitz3.ab3@1061>         running.l = PutD0
0001EA32 <AmiBlitz3.ab3@1062>         If running Then Delay_ 50
0001EA46 <AmiBlitz3.ab3@1064>       Until running=False
0001EA5A <AmiBlitz3.ab3@1065>       If Peek.l(?_runerror)
0001EAAA <AmiBlitz3.ab3@1066>         If cli_verbose>=0 Then NPrint "\\1b[1m*** ERROR: Unable to run compiled program!\\1b[0m" : err=True
0001EABC <AmiBlitz3.ab3@1077>   preproc_Free{*PreProcessor} : *PreProcessor=#NULL
0001EB06 <AmiBlitz3.ab3@1078>   If cli_verbose>=3 Then NPrint "Exit AmiBlitz3."
0001EB0C <AmiBlitz3.ab3@1079>   DeinitEmulatedPED{}
0001EB2A <AmiBlitz3.ab3@1081>   !asm
0001EB30 <AmiBlitz3.ab3@1082> JMP terminate_ab3
0001EB36 <AmiBlitz3.ab3@1087>   MOVEA.l ped_startup_addr,A1
0001EB3C <AmiBlitz3.ab3@1088>   LEA str_tempfilename,A0
0001EB3E <AmiBlitz3.ab3@1089>   JSR (A1)
0001EB44 <AmiBlitz3.ab3@1096>   MOVE.l signalNum,D0
0001EB4A <AmiBlitz3.ab3@1097>   MOVEA.l _execbase,A6
0001EB4E <AmiBlitz3.ab3@1098>   JSR _FreeSignal(A6)
0001EB54 <AmiBlitz3.ab3@1100>   MOVE.l ptr_seg_debugger,D1
0001EB58 <AmiBlitz3.ab3@1101>   BEQ.b skip_unload_debugger
0001EB5C <AmiBlitz3.ab3@1102>     MOVEA.l _dosbase(PC),A6
0001EB60 <AmiBlitz3.ab3@1103>     JSR _UnLoadSeg(A6)
0001EB64 <AmiBlitz3.ab3@1106>   BSR.w Aclearallvars
0001EB68 <AmiBlitz3.ab3@1107>   BSR.w free_residents
0001EB6E <AmiBlitz3.ab3@1108>   JSR free_blitzlibs
0001EB74 <AmiBlitz3.ab3@1111>   MOVE.l ptr_seg_ped,D1
0001EB78 <AmiBlitz3.ab3@1112>   BEQ freemem_and_quit
0001EB7C <AmiBlitz3.ab3@1113>   MOVEA.l _dosbase(PC),A6
0001EB80 <AmiBlitz3.ab3@1114>   JSR _UnLoadSeg(A6)
0001EB84 <AmiBlitz3.ab3@1115>   BRA freemem_and_quit     ; added by tomsmart1 for Ped errormessage
0001EBAE <AmiBlitz3.ab3@1118>   !basic
0001EC72 <AmiBlitz3.ab3@1119> 
0001EC90 <AmiBlitz3.ab3@1120>   !asm
0001EC94 <AmiBlitz3.ab3@1121>   BRA freemem_and_quit
0001ECBE <AmiBlitz3.ab3@1124>   !basic
0001ED82 <AmiBlitz3.ab3@1125>   error{!TRANS{"Can't load the Editor:\n"} + pedfile$ + !TRANS{"\n must quit, sorry!"} }  ; show error message  tomsmart1
0001EDA0 <AmiBlitz3.ab3@1126>   !asm
0001EDA4 <AmiBlitz3.ab3@1130>   BSR.w freeallox
0001EDAA <AmiBlitz3.ab3@1131>   MOVEA.l ptr_macrobuffer_begin,A1
0001EDAC <AmiBlitz3.ab3@1132>   MOVE.l -(a1),D0
0001EDAE <AmiBlitz3.ab3@1133>   ADDQ.l #4,d0
0001EDB4 <AmiBlitz3.ab3@1134>   MOVEA.l _execbase,A6
0001EDB8 <AmiBlitz3.ab3@1135>   JSR _FreeMem(A6)
0001EDBE <AmiBlitz3.ab3@1138>   MOVEA.l _dosbase,A1
0001EDC4 <AmiBlitz3.ab3@1139>   MOVEA.l _execbase,A6
0001EDC8 <AmiBlitz3.ab3@1140>   JSR _CloseLibrary(A6)
0001EDCE <AmiBlitz3.ab3@1142>   MOVEA.l constpcat,A1
0001EDD4 <AmiBlitz3.ab3@1143>   MOVE.l constmaxpc,D0
0001EDDA <AmiBlitz3.ab3@1144>   MOVEA.l _execbase,A6
0001EDDE <AmiBlitz3.ab3@1145>   JSR _FreeMem(A6)
0001EDE4 <AmiBlitz3.ab3@1148>   MOVEA.l _mathffpbase,A1
0001EDEA <AmiBlitz3.ab3@1149>   MOVEA.l _execbase,A6
0001EDEE <AmiBlitz3.ab3@1150>   JSR _CloseLibrary(A6)
0001EDF4 <AmiBlitz3.ab3@1160>     MOVEA.l _execbase,A6
0001EDFA <AmiBlitz3.ab3@1161>     MOVE.l mempool,a0
0001EDFE <AmiBlitz3.ab3@1162>     JSR _DeletePool(a6)
0001EE04 <AmiBlitz3.ab3@1163>     CLR.l pushat
0001EE0A <AmiBlitz3.ab3@1170>   JSR free_unusedfunctions
0001EE0C <AmiBlitz3.ab3@1171>   MOVEQ #0,d0
0001EE1A <AmiBlitz3.ab3@1174>   !exitasm
0001EE52 <AmiBlitz3.ab3@1175>   If dynassign<>""
0001EE5C <AmiBlitz3.ab3@1176>     If *AssignSema
0001EE6C <AmiBlitz3.ab3@1177>       ReleaseSemaphore_ *AssignSema
0001EE84 <AmiBlitz3.ab3@1178>       If (AttemptSemaphore_ (*AssignSema))                 ; we are the exclusive owner of the sema now!
0001EF18 <AmiBlitz3.ab3@1179>         dos_RemAssign{"LIBS:",dos_AddPart{dynassign,"Libs"}}
0001EF52 <AmiBlitz3.ab3@1180>         dos_RemAssign{dynassign}
0001EF62 <AmiBlitz3.ab3@1181>         RemSemaphore_ *AssignSema
0001EF72 <AmiBlitz3.ab3@1182>         ReleaseSemaphore_ *AssignSema
0001EFA8 <AmiBlitz3.ab3@1183>         If *AssignSema\ss_Link\ln_Name Then FreeVec_ *AssignSema\ss_Link\ln_Name : *AssignSema\ss_Link\ln_Name = #NULL
0001EFB8 <AmiBlitz3.ab3@1184>         FreeVec_ *AssignSema
0001EFC0 <AmiBlitz3.ab3@1185>         *AssignSema = #NULL
0001EFEE <AmiBlitz3.ab3@1189>   SetCurrentDir{cli_path}
0001F010 <AmiBlitz3.ab3@1190>   !coutclose
0001F016 <AmiBlitz3.ab3@1191> End
0001F022 <AmiBlitz3.ab3@1196> str_doslibrary:     Dc.b "dos.library",0 : Even
0001F026 <AmiBlitz3.ab3@1197> _dosbase:           Ds.l 1
0001F02C <AmiBlitz3.ab3@1201>   MOVEA.l _execbase,A6
0001F032 <AmiBlitz3.ab3@1202>   LEA str_doslibrary,A1
0001F036 <AmiBlitz3.ab3@1203>   JSR _OldOpenLibrary(A6)
0001F03C <AmiBlitz3.ab3@1204>   MOVE.l D0,_dosbase
0001F03E <AmiBlitz3.ab3@1205> RTS
0001F044 <AmiBlitz3.ab3@1209>   MOVEA.l #str_mathffpname,A1
0001F04A <AmiBlitz3.ab3@1210>   MOVEA.l _execbase,A6
0001F04E <AmiBlitz3.ab3@1211>   JSR _OldOpenLibrary(A6)
0001F054 <AmiBlitz3.ab3@1212>   MOVE.l D0,_mathffpbase
0001F056 <AmiBlitz3.ab3@1213> RTS
0001F088 <AmiBlitz3.ab3@1221> !ComData_JMP{comFunc_SetNormalPointer}
0001F0BA <AmiBlitz3.ab3@1229> !ComData_JMP{comFunc_SetBusyPointer}
0001F0E4 <AmiBlitz3.ab3@1233>   !basic
0001F0E8 <AmiBlitz3.ab3@1234>   ab3save_filenameP.l = PutD0
0001F0F2 <AmiBlitz3.ab3@1235>   If ab3save_filenameP
0001F11A <AmiBlitz3.ab3@1236>     ab3save_filename.s = Peek.s(ab3save_filenameP)
0001F148 <AmiBlitz3.ab3@1238>     SaveSource{ab3save_filename}
0001F14E <AmiBlitz3.ab3@1239>   Else
0001F188 <AmiBlitz3.ab3@1240>     error{"INTERNAL ERROR: no filename passed in D0 to SaveSource{}!"}
0001F1A6 <AmiBlitz3.ab3@1242>   !asm
0001F1A8 <AmiBlitz3.ab3@1243>   RTS
0001F1D2 <AmiBlitz3.ab3@1246>   !basic
0001F1D6 <AmiBlitz3.ab3@1247>   ab3save_filenameP.l = PutD0
0001F1E0 <AmiBlitz3.ab3@1248>   If ab3save_filenameP
0001F208 <AmiBlitz3.ab3@1249>     ab3save_filename.s = Peek.s(ab3save_filenameP)
0001F236 <AmiBlitz3.ab3@1250>     LoadSource{ab3save_filename}
0001F23C <AmiBlitz3.ab3@1251>   Else
0001F276 <AmiBlitz3.ab3@1252>     error{"INTERNAL ERROR: no filename passed in D0 to LoadSource{}!"}
0001F294 <AmiBlitz3.ab3@1254>   !asm
0001F296 <AmiBlitz3.ab3@1255>   RTS
0001F2C0 <AmiBlitz3.ab3@1258>   !basic
0001F2C6 <AmiBlitz3.ab3@1259>   ClearSource{}
0001F2E4 <AmiBlitz3.ab3@1260>   !asm
0001F2E6 <AmiBlitz3.ab3@1261>   RTS
0001F310 <AmiBlitz3.ab3@1264>   !basic
0001F316 <AmiBlitz3.ab3@1265>   OpenConsoleFake{}
0001F334 <AmiBlitz3.ab3@1266>   !asm
0001F336 <AmiBlitz3.ab3@1267>   RTS
0001F360 <AmiBlitz3.ab3@1271>   !basic
0001F366 <AmiBlitz3.ab3@1272>   CloseConsoleFake{}
0001F384 <AmiBlitz3.ab3@1273>   !asm
0001F386 <AmiBlitz3.ab3@1274>   RTS
0001F38C <AmiBlitz3.ab3@1278>   MOVE.w d6,menuitemdebug
0001F3B6 <AmiBlitz3.ab3@1279>   !basic
0001F3C8 <AmiBlitz3.ab3@1280>   menuitemx.l = Peek.w(?menuitemdebug)
0001F3EE <AmiBlitz3.ab3@1281>   If menuitemx>16 OR  menuitemx<0
0001F462 <AmiBlitz3.ab3@1282>     error{"Called invalid AB3 Menuitem #"+Str$(menuitemx)+"!"}
0001F46A <AmiBlitz3.ab3@1283>     menuitemx=0
0001F47A <AmiBlitz3.ab3@1285>   Poke.w ?menuitemdebug,menuitemx
0001F498 <AmiBlitz3.ab3@1286>   !asm
0001F49E <AmiBlitz3.ab3@1287>   MOVE.w menuitemdebug,d6
0001F4A4 <AmiBlitz3.ab3@1290>   MOVE.l A5,firstitem_
0001F4AA <AmiBlitz3.ab3@1291>   MOVE.w D7,numlines_org
0001F4B0 <AmiBlitz3.ab3@1292>   MOVE.l d7,numlines
0001F4B2 <AmiBlitz3.ab3@1293>   LSL.w #2,D6
0001F4B8 <AmiBlitz3.ab3@1294>   LEA menu_items,A0
0001F4BC <AmiBlitz3.ab3@1295>   MOVEA.l $0(A0,D6.W),A0
0001F4C6 <AmiBlitz3.ab3@1296>   MOVE.l #$FFFFffff,linenumat
0001F4D0 <AmiBlitz3.ab3@1297>   MOVE.l #$FFFFffff,compilelinecounter
0001F4D2 <AmiBlitz3.ab3@1300>   JSR (A0)                              ; jsr to the function for the menuitem
0001F4D8 <AmiBlitz3.ab3@1301>   MOVE.l compilelinecounter,D0
0001F4DA <AmiBlitz3.ab3@1302> RTS
0001F4DE <AmiBlitz3.ab3@1304> menuitemdebug: Dc.l 0
0001F4E2 <AmiBlitz3.ab3@1306> mempool                Dc.l 0
0001F4F8 <AmiBlitz3.ab3@1307> str_loaddebugmessage:  Dc.b "Debug module to load",0 : Even
0001F4FE <AmiBlitz3.ab3@1308> dloaderr:             JSR handle_compileerror
0001F51A <AmiBlitz3.ab3@1309>                        Dc.b "Can't LoadSeg debug module!",0 : Even
0001F558 <AmiBlitz3.ab3@1317>   !ComData_GetL{comFunc_ASLFileRequest,A3}
0001F55E <AmiBlitz3.ab3@1318>   LEA str_loaddebugmessage,A2
0001F564 <AmiBlitz3.ab3@1319>   LEA str_blitz3assign,A0
0001F56A <AmiBlitz3.ab3@1320>   LEA str_temp_debugmodulename,A1
0001F56C <AmiBlitz3.ab3@1322>   JSR (A3)                                                  ;open ped filerequest
0001F570 <AmiBlitz3.ab3@1324>   BEQ.w menu_loaddebugmodule_noload
0001F576 <AmiBlitz3.ab3@1325>   MOVE.l D0,ptr_temp_debugmodule
0001F57A <AmiBlitz3.ab3@1326>   BSR.w call_setpointerbusy
0001F580 <AmiBlitz3.ab3@1327> 
0001F586 <AmiBlitz3.ab3@1328>   MOVE.l A7,errstack
0001F590 <AmiBlitz3.ab3@1329>   MOVE.l #menu_loaddebugmodule_noload,errcont
0001F596 <AmiBlitz3.ab3@1330>   MOVE.l ptr_temp_debugmodule,D1
0001F59A <AmiBlitz3.ab3@1332>   MOVEA.l _dosbase(PC),A6
0001F59E <AmiBlitz3.ab3@1333>   JSR _LoadSeg(A6)
0001F5A0 <AmiBlitz3.ab3@1334>   MOVE.l D0,D7
0001F5A4 <AmiBlitz3.ab3@1335>   BEQ.w dloaderr
0001F5AA <AmiBlitz3.ab3@1336>   MOVE.l ptr_seg_debugger,D1
0001F5AE <AmiBlitz3.ab3@1337>   BEQ.b menu_loaddebugmodule_ndseg
0001F5B2 <AmiBlitz3.ab3@1338>   MOVEA.l _dosbase(PC),A6
0001F5B6 <AmiBlitz3.ab3@1339>   JSR _UnLoadSeg(A6)
0001F5BA <AmiBlitz3.ab3@1340>   BSR.w call_setpointernormal
0001F5C0 <AmiBlitz3.ab3@1343>   MOVE.l D7,ptr_seg_debugger
0001F5C2 <AmiBlitz3.ab3@1346> RTS
0001F5E0 <AmiBlitz3.ab3@1349> str_request_exename:   Dc.b "Name of Executable to Create:",0 : Even                        ;xtext org source
0001F6A0 <AmiBlitz3.ab3@1350> exepath:               Ds.l 48                             ;Ds.b #MAX_STRINGSIZE ; Ds.l 48  ;xpath  dcb.b 192,0 org source
0001F760 <AmiBlitz3.ab3@1351> exefilename:           Ds.l 48                             ;Ds.b #MAX_STRINGSIZE ; Ds.l 48  ;xname  dcb.b 192,0 org source
0001F764 <AmiBlitz3.ab3@1352> ptr_newexefilename:    Dc.l 0                                                               ;execname org
0001F78E <AmiBlitz3.ab3@1356>   !basic
0001F7B8 <AmiBlitz3.ab3@1357>   exepath.s = Peek.s(?exepath)
0001F7E2 <AmiBlitz3.ab3@1358>   exefile.s = Peek.s(?exefilename)
0001F862 <AmiBlitz3.ab3@1359>   exefile.s = dos_AddPart{exepath,exefile}
0001F89A <AmiBlitz3.ab3@1360>   Poke.s ?tempspace,exefile
0001F8B8 <AmiBlitz3.ab3@1361>   !asm
0001F8BE <AmiBlitz3.ab3@1382>   LEA tempspace,a0
0001F8C0 <AmiBlitz3.ab3@1383>   MOVE.l a0,d0
0001F8C4 <AmiBlitz3.ab3@1384> BRA newcreate2
0001F8EE <AmiBlitz3.ab3@1390>   !basic
0001F918 <AmiBlitz3.ab3@1391>   request_exename.s = Peek.s(?str_request_exename )
0001F974 <AmiBlitz3.ab3@1392>   request_exename   = !TRANS{request_exename}
0001F97A <AmiBlitz3.ab3@1393>   GetD0 &request_exename
0001F998 <AmiBlitz3.ab3@1394>   !asm
0001F99A <AmiBlitz3.ab3@1395>   MOVE.l D0,A2
0001F9D8 <AmiBlitz3.ab3@1398>   !ComData_GetL{comFunc_ASLFileRequest,A3}
0001F9DE <AmiBlitz3.ab3@1400>   LEA exepath,A0
0001F9E4 <AmiBlitz3.ab3@1401>   LEA exefilename,A1
0001F9E6 <AmiBlitz3.ab3@1403>   JSR (A3)                                                 ;open ped filerequest
0001F9EA <AmiBlitz3.ab3@1405>   BEQ.w cancel_createexe
0001F9F4 <AmiBlitz3.ab3@1408>   ADD.l #1,number_of_builds
0001F9FA <AmiBlitz3.ab3@1411>   MOVE.l D0,ptr_newexefilename
0001FA02 <AmiBlitz3.ab3@1412>   MOVE.w #-1,debugversion
0001FA08 <AmiBlitz3.ab3@1413>   MOVE.w set_make_smallestcode,-(A7)
0001FA10 <AmiBlitz3.ab3@1417>     MOVE.w #1,makeexec
0001FA16 <AmiBlitz3.ab3@1418>     JSR ab3_OpenDebugFile
0001FA1A <AmiBlitz3.ab3@1419>     BSR.w startcompile
0001FA20 <AmiBlitz3.ab3@1420>     JSR ab3_CloseDebugFile
0001FA2A <AmiBlitz3.ab3@1421>     CMP.l #"NORE",reqmode
0001FA2E <AmiBlitz3.ab3@1422>   BEQ 'l1
0001FA34 <AmiBlitz3.ab3@1424>   TST.w anyerrs
0001FA38 <AmiBlitz3.ab3@1425>   BNE.b menu_createexecutable__skip
0001FA3C <AmiBlitz3.ab3@1426>   BSR.w savefile
0001FA42 <AmiBlitz3.ab3@1429>   MOVE.w (A7)+,set_make_smallestcode
0001FA44 <AmiBlitz3.ab3@1432> RTS
0001FA4C <AmiBlitz3.ab3@1436>   MOVE.w #-1,flag_noPED
0001FA4E <AmiBlitz3.ab3@1437> RTS
0001FA56 <AmiBlitz3.ab3@1441>   MOVE.w #-1,flag_noCLI
0001FA58 <AmiBlitz3.ab3@1442> RTS
0001FA82 <AmiBlitz3.ab3@1445>   !basic
0001FAAA <AmiBlitz3.ab3@1446>     If dbg_fid>=0 Then file_Close{dbg_fid} : dbg_fid = -1
0001FABA <AmiBlitz3.ab3@1447>     Poke.w ?word_WriteDebugFileNow,0
0001FAD8 <AmiBlitz3.ab3@1448>   !asm
0001FADA <AmiBlitz3.ab3@1449> RTS
0001FB04 <AmiBlitz3.ab3@1452>   !basic
0001FB14 <AmiBlitz3.ab3@1453>   Poke.w ?word_WriteDebugFileNow,0
0001FB26 <AmiBlitz3.ab3@1454>   If dbg_fid>=0
0001FB3C <AmiBlitz3.ab3@1455>     file_Close{dbg_fid} : dbg_fid = -1
0001FB4E <AmiBlitz3.ab3@1457>   If dbg_fid.l<0
0001FB50 <AmiBlitz3.ab3@1458>     CLR.l d0
0001FB8E <AmiBlitz3.ab3@1459>     !ComData_GetW{comWord_CreateDebugFile,D0}
0001FB92 <AmiBlitz3.ab3@1460>     dbg_Create.l = PutD0
0001FB9C <AmiBlitz3.ab3@1461>     If (dbg_Create) ; only when set!
0001FBAC <AmiBlitz3.ab3@1462>       exefileP.l = Peek.l (?ptr_newexefilename)
0001FBD4 <AmiBlitz3.ab3@1463>       exefile.s = ""
0001FC06 <AmiBlitz3.ab3@1464>       If exefileP Then exefile.s = Peek.s(exefileP)
0001FC3E <AmiBlitz3.ab3@1465>       If exefile><""
0001FC94 <AmiBlitz3.ab3@1466>         dbg_fid = file_Open{exefile+".dbg",#file_forcewrite}
0001FCA6 <AmiBlitz3.ab3@1467>         If dbg_fid>=0
0001FCB8 <AmiBlitz3.ab3@1468>           Poke.w ?word_WriteDebugFileNow,-1
0001FCC4 <AmiBlitz3.ab3@1471>       oldhunkoffset.l = -1
0001FCEC <AmiBlitz3.ab3@1472>       oldfile.s       = ""
0001FD0A <AmiBlitz3.ab3@1475>   !asm
0001FD0C <AmiBlitz3.ab3@1476> RTS
0001FD12 <AmiBlitz3.ab3@1479> TST.w word_WriteDebugFileNow
0001FD16 <AmiBlitz3.ab3@1480> BEQ 'skipdebugfile
0001FD40 <AmiBlitz3.ab3@1481> !basic
0001FD52 <AmiBlitz3.ab3@1482>   If dbg_fid>=0
0001FD64 <AmiBlitz3.ab3@1483>     pass.l          = Peek.w(?pass)
0001FD76 <AmiBlitz3.ab3@1484>     makesmallest.b  = Peek.b(?make_smallestcode)               ; get the status of make_smallestcode  tomsmart1
0001FD9A <AmiBlitz3.ab3@1485> 
0001FDA0 <AmiBlitz3.ab3@1486>       oldhunkoffset.l = hunkoffset.l
0001FDD4 <AmiBlitz3.ab3@1487>       oldfile.s       = codefile.s
0001FDF0 <AmiBlitz3.ab3@1488>       If Peek.w (?ininclude)>0
0001FE00 <AmiBlitz3.ab3@1489>         codeline.l = Peek.l(?includeline);-1
0001FE70 <AmiBlitz3.ab3@1490>         codefile.s = dos_FilePart{incdim(Peek.w(?ininclude)-1)}
0001FE76 <AmiBlitz3.ab3@1491>       Else
0001FEA4 <AmiBlitz3.ab3@1492>         !ComData_LEA{comStr_SourceName,A0}
0001FEA6 <AmiBlitz3.ab3@1493>         MOVE.l A0,D0
0001FEAA <AmiBlitz3.ab3@1494>         sourceP.l = PutD0
0001FED2 <AmiBlitz3.ab3@1495>         codefile.s = Peek.s(sourceP)
0001FEE2 <AmiBlitz3.ab3@1496>         codeline.l = Peek.l(?linenumat)
0001FF0A <AmiBlitz3.ab3@1498>       hunkoffset.l = Peek.l(?destpointer)-Peek.l(?destbufferstart)
0001FF5E <AmiBlitz3.ab3@1499>       If oldhunkoffset><hunkoffset OR oldfile><codefile
0001FF6E <AmiBlitz3.ab3@1506>         *sourceLine.SourceLine_t = Peek.l(?sourceline)
0001FF78 <AmiBlitz3.ab3@1507>         If *sourceLine
0001FF8E <AmiBlitz3.ab3@1508>           MaxLen detokenline.s = 65536
0001FFD0 <AmiBlitz3.ab3@1509>          !ComData_GetL{comPtr_PreProcessor,include_preprocessor}
0001FFE0 <AmiBlitz3.ab3@1510>          *tn.preprocessor = Peek.l(?include_preprocessor)
0002000C <AmiBlitz3.ab3@1511>           written.l = preproc_Detokenize{*tn,&*sourceLine\Text,&detokenline,*sourceLine\CharLength}
0002003A <AmiBlitz3.ab3@1512>           If written>0 Then Poke.b &detokenline+written-1,0
00020064 <AmiBlitz3.ab3@1513>           sourceLineText.s = Peek.s(&detokenline)
0002006A <AmiBlitz3.ab3@1514>         Else
00020092 <AmiBlitz3.ab3@1515>           sourceLineText = "NULL"
0002015A <AmiBlitz3.ab3@1518>         file_WriteLine{dbg_fid,Hex$(hunkoffset)+" <"+codefile+"@"+Str$(codeline)+"> "+sourceLineText}
00020178 <AmiBlitz3.ab3@1524> !asm
0002017A <AmiBlitz3.ab3@1526> RTS
0002017C <AmiBlitz3.ab3@1528> word_WriteDebugFileNow: Dc.w 0
0002017E <AmiBlitz3.ab3@1530> flag_noPED:  Ds.w 1                                        ;closeed org source
00020180 <AmiBlitz3.ab3@1531> flag_noCLI:  Ds.w 1                                        ;nocli org source
00020184 <AmiBlitz3.ab3@1535>   MOVEM.l D0-D1/A0-A1/A6,-(A7)
0002018A <AmiBlitz3.ab3@1536>   MOVEA.l _execbase,A6
0002018E <AmiBlitz3.ab3@1537>   JSR _CacheClearU(A6)
00020192 <AmiBlitz3.ab3@1538>   MOVEM.l (A7)+,D0-D1/A0-A1/A6
00020194 <AmiBlitz3.ab3@1539> RTS
00020198 <AmiBlitz3.ab3@1542>   MOVEM.l A2-A3,-(A7)
0002019E <AmiBlitz3.ab3@1543>   CLR.b doublepeek
000201A4 <AmiBlitz3.ab3@1544>   MOVE.l A5,lastsourcepos
000201AA <AmiBlitz3.ab3@1545>    JSR getchar
000201AE <AmiBlitz3.ab3@1546>   CMP.w #$2E,D0
000201B2 <AmiBlitz3.ab3@1547>    BEQ.w JL_0_49B4b
000201B8 <AmiBlitz3.ab3@1548>   MOVEA.l defaulttype,A2
000201BC <AmiBlitz3.ab3@1549>   CMP.w #$24,D0
000201C0 <AmiBlitz3.ab3@1550>    BNE.w JL_0_49CAb
000201C2 <AmiBlitz3.ab3@1551>   MOVEQ.l #$07,D1
000201C6 <AmiBlitz3.ab3@1552> BRA.w JL_0_49DEb
000201CC <AmiBlitz3.ab3@1555>   JSR getparameter2
000201D0 <AmiBlitz3.ab3@1556>   BEQ.w syntaxerrb
000201D6 <AmiBlitz3.ab3@1557>   LEA newtypebase,A2
000201DC <AmiBlitz3.ab3@1558>   JSR findtype
000201E0 <AmiBlitz3.ab3@1559>   BNE.w notypeerrb
000201EA <AmiBlitz3.ab3@1564>   MOVE.w oldqflag,instringon
000201F0 <AmiBlitz3.ab3@1565>   MOVEA.l lastsourcepos,A5
000201F6 <AmiBlitz3.ab3@1567>   MOVE.l a2,functionreturntype
000201FE <AmiBlitz3.ab3@1568>   CMPI.l #$100,$4(A2)
00020202 <AmiBlitz3.ab3@1569>   BLE.w 'isvar
00020204 <AmiBlitz3.ab3@1573>   MOVEQ #3,d1
00020208 <AmiBlitz3.ab3@1574>   BRA JL_0_49DEb
0002020C <AmiBlitz3.ab3@1581>   MOVE.w $6(A2),D1
00020212 <AmiBlitz3.ab3@1582>   CMP.w #8,8(a2)
00020216 <AmiBlitz3.ab3@1583>   BNE 'l1
0002021E <AmiBlitz3.ab3@1584>   MOVE.b #1,doublepeek
00020224 <AmiBlitz3.ab3@1588>   MOVE.w D1,convsize
00020228 <AmiBlitz3.ab3@1589>   MOVEM.l (A7)+,A2-A3
0002022A <AmiBlitz3.ab3@1590> RTS
00020230 <AmiBlitz3.ab3@1592> notypeerrb JMP notypeerr
00020236 <AmiBlitz3.ab3@1593> illtypeerrb JMP illtypeerr
0002023C <AmiBlitz3.ab3@1594> syntaxerrb JMP syntaxerr
00020246 <AmiBlitz3.ab3@1639>   ADD.l #1,number_of_builds
0002024C <AmiBlitz3.ab3@1641>   CLR.w debugversion
00020252 <AmiBlitz3.ab3@1642>   CLR.w flag_noPED
00020258 <AmiBlitz3.ab3@1643>   CLR.w flag_noCLI
00020260 <AmiBlitz3.ab3@1646>     MOVE.w #0,makeexec                                     ;MOVE.w #$FFFF,debugversion
00020264 <AmiBlitz3.ab3@1647>     BSR.w startcompile
0002026E <AmiBlitz3.ab3@1648>     CMP.l #"NORE",reqmode
00020272 <AmiBlitz3.ab3@1649>   BEQ 'l1
00020278 <AmiBlitz3.ab3@1652>   TST.w anyerrs
0002027C <AmiBlitz3.ab3@1653>    BNE.w JL_0_3482
00020280 <AmiBlitz3.ab3@1655>   MOVE.w flag_noPED(PC),D1
00020284 <AmiBlitz3.ab3@1656>    BEQ.w skip_closingGUI
000202B6 <AmiBlitz3.ab3@1661>   !ComData_JSR{comFunc_CloseGUI}
000202BA <AmiBlitz3.ab3@1662> BRA.b runprogram
000202BE <AmiBlitz3.ab3@1666>   BSR.w compilerequester
000202C4 <AmiBlitz3.ab3@1669>   MOVEA.l _dosbase,A6
000202CA <AmiBlitz3.ab3@1670>   LEA exepath,a0
000202CC <AmiBlitz3.ab3@1671>   MOVE.l a0,d1
000202CE <AmiBlitz3.ab3@1672>   MOVEQ #-2,d2
000202D2 <AmiBlitz3.ab3@1673>   JSR _Lock(a6)                                            ;lock
000202D8 <AmiBlitz3.ab3@1674>   MOVE.l d0,exelock
000202DE <AmiBlitz3.ab3@1675>   MOVE.l #0,d1
000202E2 <AmiBlitz3.ab3@1676>   JSR _CurrentDir(A6)
000202E8 <AmiBlitz3.ab3@1677>   MOVE.l D0,lock_currentdir
000202EA <AmiBlitz3.ab3@1678>   MOVE.l D0,D1
000202EE <AmiBlitz3.ab3@1679>   JSR _CurrentDir(A6)
000202F4 <AmiBlitz3.ab3@1680>   CLR.l ptr_exetask
000202FA <AmiBlitz3.ab3@1689>   MOVE.l #str_process_name,D1
000202FC <AmiBlitz3.ab3@1690>   MOVEQ.l #$00,D2
00020302 <AmiBlitz3.ab3@1691>   MOVE.l #proc_seglist,D3
00020304 <AmiBlitz3.ab3@1692>   LSR.l #2,D3
0002030A <AmiBlitz3.ab3@1693>   MOVE.l stacksize,D4
00020310 <AmiBlitz3.ab3@1694>   MOVEA.l _dosbase,A6
00020314 <AmiBlitz3.ab3@1695>   JSR _CreateProc(A6)                                      ;runtask
00020316 <AmiBlitz3.ab3@1696>   TST.l D0
0002031A <AmiBlitz3.ab3@1697>    BEQ ErrorRunningProg
00020350 <AmiBlitz3.ab3@1699>   !ComData_SetB{comByte_RunningFlag,#1}   ; this should be done here, straigt after it is clear that
00020356 <AmiBlitz3.ab3@1701>   TST.w flag_noPED
0002035A <AmiBlitz3.ab3@1702>    BNE.b JL_0_344E
0002035E <AmiBlitz3.ab3@1703>   BSR.w close_compilewin
00020364 <AmiBlitz3.ab3@1706>   CLR.l firstlocal
0002036A <AmiBlitz3.ab3@1707>   CLR.l firstglob
0002036E <AmiBlitz3.ab3@1708>   MOVE.w flag_noPED(PC),D1
00020372 <AmiBlitz3.ab3@1709>   BEQ.w skip_openGUI
000203A4 <AmiBlitz3.ab3@1713>   !ComData_JSR{comFunc_CreateGUI}
000203A6 <AmiBlitz3.ab3@1723> RTS
000203B0 <AmiBlitz3.ab3@1726> MOVE.l #1,_runerror
000203B4 <AmiBlitz3.ab3@1727> BRA JL_0_344E
000203B8 <AmiBlitz3.ab3@1729> _runerror: Dc.l 0
000203BC <AmiBlitz3.ab3@1730> lock_currentdir:    Ds.l 1                                          ;tasklock org source
000203C0 <AmiBlitz3.ab3@1731> ptr_exetask:        Ds.l 1                                          ;panictask org source
000203C4 <AmiBlitz3.ab3@1732> signalNum:          Ds.l 1                                          ;panicbit org source
000203C8 <AmiBlitz3.ab3@1733> signals:            Ds.l 1                                          ;panicmask org source
000203DE <AmiBlitz3.ab3@1735> str_process_name:   Dc.b "Blitz ][ Program Proc",0 : Even           ;procname org source
000203E3 <AmiBlitz3.ab3@1736>                     Ds.b 5                                          ;cnop 0,4 :dc.l 0   ;length org source
000203E4 <AmiBlitz3.ab3@1737> Even4
000203E8 <AmiBlitz3.ab3@1739> ptr_ThisTask:       Ds.l 1                                          ;length
000203EC <AmiBlitz3.ab3@1740> .proc_seglist:      Ds.l 1                                          ;procstart org source ;next
000203F2 <AmiBlitz3.ab3@1744>   MOVEA.l $4,A0
000203FA <AmiBlitz3.ab3@1745>   MOVE.l  $114(A0),ptr_exetask
00020400 <AmiBlitz3.ab3@1747>   MOVEA.l _dosbase,A6
00020406 <AmiBlitz3.ab3@1748>   MOVE.l exelock,D1
0002040A <AmiBlitz3.ab3@1749>   JSR _CurrentDir(A6)
00020440 <AmiBlitz3.ab3@1754>   !ComData_SetB{comByte_RunningFlag,#1}
00020444 <AmiBlitz3.ab3@1760>   MOVE.w flag_noCLI(PC),D1
00020448 <AmiBlitz3.ab3@1761>    BNE.b skip_openconsole
0002047A <AmiBlitz3.ab3@1765>   !ComData_JSR{comFunc_OpenConsole}
0002047E <AmiBlitz3.ab3@1768>   BSR.w calcvbr
00020484 <AmiBlitz3.ab3@1769>   MOVEA.l vbr,A0
0002048A <AmiBlitz3.ab3@1774>   CLR.w dirmode
00020490 <AmiBlitz3.ab3@1775>   CLR.l firstglob
00020496 <AmiBlitz3.ab3@1776>   CLR.l firstlocal
0002049C <AmiBlitz3.ab3@1778>   MOVE.l stacksize,D2
000204A2 <AmiBlitz3.ab3@1779>   MOVE.l #$624C745A,D7                                      ;#'bLtZ',d7 org source ;force cli-type run
000204A8 <AmiBlitz3.ab3@1780>   LEA str_cliarguments,A0                                   ;cli arguement
000204AE <AmiBlitz3.ab3@1781>   MOVEA.l destbufferstart,A1
000204B2 <AmiBlitz3.ab3@1782>   BSR.w Aclearcache
000204B4 <AmiBlitz3.ab3@1785>   JSR (A1)                                                 ; execute compiled code  ;Run the thing!
000204BA <AmiBlitz3.ab3@1787>   MOVEA.l vbr,A0
000204C0 <AmiBlitz3.ab3@1789>   CLR.l firstglob
000204C6 <AmiBlitz3.ab3@1790>   CLR.l firstlocal
000204CC <AmiBlitz3.ab3@1791>   MOVEA.l _dosbase,A6
000204D2 <AmiBlitz3.ab3@1792>   MOVE.l exelock,d1
000204D6 <AmiBlitz3.ab3@1793>   BEQ 'nolock
000204DA <AmiBlitz3.ab3@1794>   JSR _UnLock(a6)
00020510 <AmiBlitz3.ab3@1799>   !ComData_SetB{comByte_RunningFlag,#0}
00020514 <AmiBlitz3.ab3@1802>   MOVE.w flag_noCLI(PC),D1
00020518 <AmiBlitz3.ab3@1803>    BNE.b skip_closeconsole
0002054A <AmiBlitz3.ab3@1807>   !ComData_JSR{comFunc_CloseConsole}
00020552 <AmiBlitz3.ab3@1810>   MOVE.w #$0001,stopit
00020556 <AmiBlitz3.ab3@1811>   MOVE.l signals(PC),D0
0002055C <AmiBlitz3.ab3@1812>   MOVEA.l ptr_ThisTask,A1
00020562 <AmiBlitz3.ab3@1813>   MOVEA.l _execbase,A6
00020566 <AmiBlitz3.ab3@1814>   JSR _Signal(A6)
00020568 <AmiBlitz3.ab3@1815> RTS
0002056E <AmiBlitz3.ab3@1819>   MOVEA.l _execbase,A6
00020572 <AmiBlitz3.ab3@1820>   MOVE.w $128(A6),D0
00020574 <AmiBlitz3.ab3@1821>   MOVEQ.l #$00,D1
00020578 <AmiBlitz3.ab3@1822>   ANDI.w #$F,D0
0002057C <AmiBlitz3.ab3@1825>     BEQ.b calcvbr__skip
0002057E <AmiBlitz3.ab3@1826>     ADDQ.w #1,D1
00020580 <AmiBlitz3.ab3@1827>     LSR.w #1,D0
00020584 <AmiBlitz3.ab3@1828> BRA.b calcvbr_loop
00020586 <AmiBlitz3.ab3@1831>   MOVEQ.l #$00,D2
0002058A <AmiBlitz3.ab3@1832>   CMP.w #$2,D1
0002058E <AmiBlitz3.ab3@1833>    BCS.b calcvbr__skip2
00020594 <AmiBlitz3.ab3@1834>   MOVEA.l _execbase,A6
00020598 <AmiBlitz3.ab3@1835>   JSR _SuperState(A6)
0002059C <AmiBlitz3.ab3@1836>   Dc.l $4E7A2801                                           ;movec vbr,D2
000205A0 <AmiBlitz3.ab3@1837>   JSR _UserState(A6)
000205A6 <AmiBlitz3.ab3@1840>   MOVE.l D2,vbr
000205A8 <AmiBlitz3.ab3@1841> RTS
000205AE <AmiBlitz3.ab3@1845>   LEA instrtab,a0
000205B4 <AmiBlitz3.ab3@1846>   MOVE.l #labelhash-instrtab,d0
000205B6 <AmiBlitz3.ab3@1847>   ASR.l #2,d0
000205B8 <AmiBlitz3.ab3@1848>   SUBQ.l #1,d0
000205BA <AmiBlitz3.ab3@1851>   CLR.l (a0)+
000205BC <AmiBlitz3.ab3@1852>   SUBQ.l #1,d0
000205C0 <AmiBlitz3.ab3@1853>   BNE 'l10
000205C4 <AmiBlitz3.ab3@1854>   BSR.w call_setpointerbusy
000205C8 <AmiBlitz3.ab3@1855>   BSR.w free_userlibs
000205CC <AmiBlitz3.ab3@1856>   BSR.w scan_for_userlibs
000205D0 <AmiBlitz3.ab3@1857>   BSR.w JL_0_7082
000205D4 <AmiBlitz3.ab3@1858> BRA.w call_setpointernormal
000205FE <AmiBlitz3.ab3@1864>   !basic
00020638 <AmiBlitz3.ab3@1865>   Poke.l ?size_acidlibs, dos_GetFileSize{Peek$(?str_path_acidlibs)}
00020648 <AmiBlitz3.ab3@1867>   deflibNameP.l = Peek.l(?deflib)
00020652 <AmiBlitz3.ab3@1868>   If deflibNameP
00020684 <AmiBlitz3.ab3@1869>     If Peek.s(deflibNameP)<>""
000206CE <AmiBlitz3.ab3@1870>       Poke.l ?size_deflibs, dos_GetFileSize{Peek.s(Peek.l(?deflib))}
000206D4 <AmiBlitz3.ab3@1871>     Else
0002070E <AmiBlitz3.ab3@1872>       Poke.l ?size_deflibs, dos_GetFileSize{Peek.s(?str_path_deflibs)}
00020714 <AmiBlitz3.ab3@1874>   Else
0002074E <AmiBlitz3.ab3@1875>     Poke.l ?size_deflibs, dos_GetFileSize{Peek.s(?str_path_deflibs)}
00020788 <AmiBlitz3.ab3@1876>     error{"INTERNAL: Invalid deflib name pointer!"}
000207A6 <AmiBlitz3.ab3@1878>   !asm
000207AC <AmiBlitz3.ab3@1883>   MOVE.l #str_path_userlibs,D1
000207AE <AmiBlitz3.ab3@1884>   MOVEQ.l #-$02,D2
000207B4 <AmiBlitz3.ab3@1885>   MOVEA.l _dosbase,A6
000207B8 <AmiBlitz3.ab3@1886>   JSR _Lock(A6)
000207BA <AmiBlitz3.ab3@1887>   MOVE.l D0,D7
000207BE <AmiBlitz3.ab3@1888>    BEQ.w exit_get_libraries
000207C0 <AmiBlitz3.ab3@1889>   MOVE.l D7,D1
000207C6 <AmiBlitz3.ab3@1890>   MOVE.l #ptr_parameterstore,D2
000207CA <AmiBlitz3.ab3@1891>   JSR _Examine(A6)
000207CC <AmiBlitz3.ab3@1892>   TST.l D0
000207D0 <AmiBlitz3.ab3@1893>   BEQ.w unlock_and_exit_get_libraries
000207D6 <AmiBlitz3.ab3@1894>   MOVE.l fib_DirEntryType,D0
000207DA <AmiBlitz3.ab3@1895>   BMI.w unlock_and_exit_get_libraries
000207DC <AmiBlitz3.ab3@1900>     MOVE.l D7,D1
000207E2 <AmiBlitz3.ab3@1901>     MOVE.l #ptr_parameterstore,D2
000207E8 <AmiBlitz3.ab3@1902>     MOVEA.l _dosbase,A6
000207EC <AmiBlitz3.ab3@1903>     JSR _ExNext(A6)
000207EE <AmiBlitz3.ab3@1904>     TST.l D0
000207F2 <AmiBlitz3.ab3@1905>      BEQ.w exit_scan_libsdrawer                            ; kein weiteres File
000207F8 <AmiBlitz3.ab3@1907>     MOVE.l fib_DirEntryType,D0                             ; positive for directoies, negative for files
000207FC <AmiBlitz3.ab3@1908>     BPL.w scan_libsdrawer                                  ; skip directories
00020802 <AmiBlitz3.ab3@1910>     LEA fib_FileName,A0                                    ; pruefen ob infofile
00020806 <AmiBlitz3.ab3@1911>     BSR.w check_for_infoextention
0002080A <AmiBlitz3.ab3@1912>     BEQ.w scan_libsdrawer
00020810 <AmiBlitz3.ab3@1914>     MOVEA.l _execbase,A6                                   ; allocate $26 = 38 bytes fuer listeneintrag
00020812 <AmiBlitz3.ab3@1915>     MOVEQ.l #$26,D0
00020814 <AmiBlitz3.ab3@1916>     MOVEQ.l #$01,D1
0002081A <AmiBlitz3.ab3@1917>     MOVE.l mempool,a0
0002081E <AmiBlitz3.ab3@1918>     JSR _AllocPooled(a6)
00020824 <AmiBlitz3.ab3@1920>     MOVEA.l _dosbase,A6
00020826 <AmiBlitz3.ab3@1921>     MOVE.l D0,D6                                           ; sichere speicheradresse in D6
0002082C <AmiBlitz3.ab3@1924>     LEA ptr_userlibs_list,A0                               ; pruefe liste
0002082E <AmiBlitz3.ab3@1927>     MOVE.l (A0),D5
00020832 <AmiBlitz3.ab3@1928>      BEQ.w JL_0_3722                                       ; kein pointer da? kann springe weiter
00020834 <AmiBlitz3.ab3@1929>     MOVEA.l D5,A2
00020836 <AmiBlitz3.ab3@1930>     ADDQ.w #6,A2                                           ; 6 bytes weiter gehen, um dateinamen zu speichern
0002083C <AmiBlitz3.ab3@1933>     LEA fib_FileName,A1                                    ; vergleich, ob Dateiname schon in der liste ist
0002083E <AmiBlitz3.ab3@1936>       MOVEQ.l #$00,D0
00020840 <AmiBlitz3.ab3@1937>       MOVE.b (A1)+,D0
00020844 <AmiBlitz3.ab3@1938>        BEQ.w JL_0_3722                                     ; dateiname komplett, dann weiter
00020846 <AmiBlitz3.ab3@1939>       MOVEQ.l #$00,D1
00020848 <AmiBlitz3.ab3@1940>       MOVE.b (A2)+,D1
0002084C <AmiBlitz3.ab3@1941>        BEQ.w JL_0_371C
0002086E <AmiBlitz3.ab3@1942>       !compare1                                            ;bsr.w tstalpha
00020872 <AmiBlitz3.ab3@1943>       BNE.w JL_0_3702
00020876 <AmiBlitz3.ab3@1944>       ANDI.w #$DF,D0
00020878 <AmiBlitz3.ab3@1947>       EXG.l D0,D1
0002089A <AmiBlitz3.ab3@1948>       !compare1                                            ;bsr.w tstalpha
0002089E <AmiBlitz3.ab3@1949>       BNE.w JL_0_3710
000208A2 <AmiBlitz3.ab3@1950>       ANDI.w #$DF,D0
000208A4 <AmiBlitz3.ab3@1953>       EXG.l D0,D1
000208A6 <AmiBlitz3.ab3@1954>       CMP.b D1,D0
000208AA <AmiBlitz3.ab3@1955>     BEQ.w JL_0_36E6
000208AE <AmiBlitz3.ab3@1956>     BCS.w JL_0_3722
000208B0 <AmiBlitz3.ab3@1959>     MOVEA.l D5,A0
000208B4 <AmiBlitz3.ab3@1960> BRA.w JL_0_36D6
000208B6 <AmiBlitz3.ab3@1963>     MOVEA.l D6,A1                                          ; hier war die adresse des allokierten Speicers drin
000208B8 <AmiBlitz3.ab3@1964>     MOVE.l (A0),(A1)
000208BA <AmiBlitz3.ab3@1965>     MOVE.l A1,(A0)
000208BC <AmiBlitz3.ab3@1966>     ADDQ.w #4,A1                                           ; pointer zum naechsten namen ueberspringen
000208C0 <AmiBlitz3.ab3@1967>     MOVE.w #$FFFF,(A1)+                                    ; $FFFF schreiben
000208C6 <AmiBlitz3.ab3@1968>     MOVEA.l #fib_FileName,A0                               ; dateinamen in die liste kopieren
000208C8 <AmiBlitz3.ab3@1971>       MOVE.b (A0)+,(A1)+
000208CC <AmiBlitz3.ab3@1972>     BNE.w JL_0_3734
000208D0 <AmiBlitz3.ab3@1973> BRA.w scan_libsdrawer
000208D2 <AmiBlitz3.ab3@1976>   MOVE.l D7,D1
000208D8 <AmiBlitz3.ab3@1977>   MOVEA.l _dosbase,A6
000208DC <AmiBlitz3.ab3@1978>   JSR _UnLock(A6)
000208DE <AmiBlitz3.ab3@1979>   MOVEQ.l #-$01,D0
000208E0 <AmiBlitz3.ab3@1982> RTS
000208E2 <AmiBlitz3.ab3@1985>   MOVE.l D7,D1
000208E8 <AmiBlitz3.ab3@1986>   MOVEA.l _dosbase,A6
000208EC <AmiBlitz3.ab3@1987>   JSR _UnLock(A6)
000208EE <AmiBlitz3.ab3@1988>   MOVEQ.l #$00,D0
000208F0 <AmiBlitz3.ab3@1989> RTS
000208F6 <AmiBlitz3.ab3@1993>   MOVEA.l _execbase,A6
000208FC <AmiBlitz3.ab3@1994>   MOVEA.l ptr_userlibs_list,A2
00020902 <AmiBlitz3.ab3@1995>   CLR.l ptr_userlibs_list
00020906 <AmiBlitz3.ab3@1998>     CMPA.w #$0,A2
0002090A <AmiBlitz3.ab3@1999>     BEQ.w exit_free_userlib
0002090C <AmiBlitz3.ab3@2000>       MOVEA.l A2,A1
0002090E <AmiBlitz3.ab3@2001>       MOVEQ.l #$26,D0
00020910 <AmiBlitz3.ab3@2002>       MOVEA.l (A2),A2
00020916 <AmiBlitz3.ab3@2003>       MOVE.l mempool,a0
0002091C <AmiBlitz3.ab3@2004>       MOVEA.l _execbase,A6
00020920 <AmiBlitz3.ab3@2005>       JSR _FreePooled(A6)
00020924 <AmiBlitz3.ab3@2006> BRA.w loop_free_userlib
00020926 <AmiBlitz3.ab3@2009> RTS
00020928 <AmiBlitz3.ab3@2012> pass:  Dc.w 0                                             ; smallpass org source
0002092A <AmiBlitz3.ab3@2013> compiler_job: Dc.w 0                                      ; added by thilo: what the compiler is doing at the moment
00020930 <AmiBlitz3.ab3@2017>   MOVE.l A7,errstack                                      ;startcompile
00020936 <AmiBlitz3.ab3@2026>   CLR.l reqmode
00020940 <AmiBlitz3.ab3@2028>   MOVE.l #Aclearallvars,errcont
0002094A <AmiBlitz3.ab3@2029>   MOVE.l #concomstack,concomsp
0002094E <AmiBlitz3.ab3@2037>   MOVE.w #1450,D0
00020950 <AmiBlitz3.ab3@2038>   LSR.w #3,D0
00020952 <AmiBlitz3.ab3@2039>   SUBQ.w #7,D0                                             ; 173
00020958 <AmiBlitz3.ab3@2040>   MOVE.w D0,progressbar_width
0002095A <AmiBlitz3.ab3@2041>   SWAP D0
0002095C <AmiBlitz3.ab3@2042>   CLR.w D0
00020962 <AmiBlitz3.ab3@2043>   MOVE.l numlines,d1
00020966 <AmiBlitz3.ab3@2044>   DIVU.l d1,d0                                             ; progressbar_width / numlines
00020968 <AmiBlitz3.ab3@2046>   TST.w D0
0002096C <AmiBlitz3.ab3@2047>   BNE.w JL_0_37C0
0002096E <AmiBlitz3.ab3@2048>   MOVEQ.l #-$01,D0
00020974 <AmiBlitz3.ab3@2051>   MOVE.w D0,progress_per_line
0002097C <AmiBlitz3.ab3@2060>   BTST #$7,use_debugger
00020980 <AmiBlitz3.ab3@2062>   BNE 'debugon
00020986 <AmiBlitz3.ab3@2063>   CLR.w debugmode
0002098A <AmiBlitz3.ab3@2064> BRA.b 'debugoff
00020990 <AmiBlitz3.ab3@2067>   SNE debugmode
000209C8 <AmiBlitz3.ab3@2075>   !ComData_SetB{comByte_DebugMode,debugmode}
000209CE <AmiBlitz3.ab3@2078>   CLR.w dirmode                                            ;direct mode flag
000209D4 <AmiBlitz3.ab3@2079>   CLR.w ezerr                                              ;quiet error
000209DA <AmiBlitz3.ab3@2080>   CLR.l currentfunction
000209E0 <AmiBlitz3.ab3@2081>   CLR.w connest
000209E6 <AmiBlitz3.ab3@2082>   CLR.w varmode
000209EC <AmiBlitz3.ab3@2083>   CLR.w proceduremode
000209F2 <AmiBlitz3.ab3@2084>   CLR.w ininclude
000209F8 <AmiBlitz3.ab3@2085>   CLR.w intstring
000209FE <AmiBlitz3.ab3@2086>   CLR.w pass
00020A06 <AmiBlitz3.ab3@2087>   MOVE.w #0,compiler_job
00020A0C <AmiBlitz3.ab3@2088>   CLR.l funcscanon
00020A12 <AmiBlitz3.ab3@2097>   CLR.l funcscanon
00020A16 <AmiBlitz3.ab3@2098>   BSR.w compileall
00020A1C <AmiBlitz3.ab3@2099> 
00020A22 <AmiBlitz3.ab3@2100>   TST.l errorcounter
00020A26 <AmiBlitz3.ab3@2101>   BEQ _skiperrorstop
00020A28 <AmiBlitz3.ab3@2102>   RTS
00020A2E <AmiBlitz3.ab3@2105>   MOVE.w dontwrite,d0
00020A32 <AmiBlitz3.ab3@2106>   CMP.w #1,d0
00020A36 <AmiBlitz3.ab3@2107>   BNE 'l3
00020A3C <AmiBlitz3.ab3@2108>   TST.l errorcounter
00020A40 <AmiBlitz3.ab3@2109>   BNE 'l3
00020A46 <AmiBlitz3.ab3@2110>   CLR.w dontwrite
00020A4A <AmiBlitz3.ab3@2111>   BSR compileall                                           ;if a function is not found
00020A50 <AmiBlitz3.ab3@2112>   ADDQ.w #1,pass
00020A8E <AmiBlitz3.ab3@2117>   !ComData_GetB{comByte_FuncOptimize,D0}  ; now its in the xtra file and can be put to GUI settings ; Wanderer
00020A92 <AmiBlitz3.ab3@2118>   BEQ 'out  ; only if func optimize is set >< 0; Wanderer
00020A98 <AmiBlitz3.ab3@2119>   LEA firstproc,a0
00020A9E <AmiBlitz3.ab3@2120>   CLR.l savefuncspace
00020AA0 <AmiBlitz3.ab3@2121>   MOVE.l (a0),d0
00020AA2 <AmiBlitz3.ab3@2125>     MOVE.l d0,a0
00020AA6 <AmiBlitz3.ab3@2126>     BEQ 'out
00020AAA <AmiBlitz3.ab3@2127>     TST.b isfunc(a0)
00020AAE <AmiBlitz3.ab3@2128>     BNE 'nex
00020AB2 <AmiBlitz3.ab3@2129>     MOVEM.l d2/a6/a0,-(a7)
00020AB4 <AmiBlitz3.ab3@2131>     MOVEQ #0,d0
00020AB8 <AmiBlitz3.ab3@2132>     MOVE.b $21+#funcentry_extend-1(a0),d0
00020ABC <AmiBlitz3.ab3@2133>     SUB.w #$21+#funcentry_extend,d0
00020AC0 <AmiBlitz3.ab3@2134>     ADD.w #16,d0
00020AC6 <AmiBlitz3.ab3@2135>     MOVE.l #$10000,d1
00020AC8 <AmiBlitz3.ab3@2136>     MOVE.l d0,d2
00020ACE <AmiBlitz3.ab3@2137>     MOVEA.l _execbase,A6
00020AD2 <AmiBlitz3.ab3@2138>     JSR _AllocMem(a6)         ; thilo: not 100% sure about this!
00020AD4 <AmiBlitz3.ab3@2139>     MOVE.l d0,a1
00020AD8 <AmiBlitz3.ab3@2140>     MOVE.l d2,4(a1)
00020ADE <AmiBlitz3.ab3@2141>     MOVE.l unusedfunc,(a1)
00020AE4 <AmiBlitz3.ab3@2142>     MOVE.l d0,unusedfunc
00020AE8 <AmiBlitz3.ab3@2143>     MOVEM.l (a7)+,a6/a0/d2
00020AEC <AmiBlitz3.ab3@2144>     MOVE.l isfunc+1(a0),d0
00020AEE <AmiBlitz3.ab3@2145>     ADDQ.l #6,d0
00020AF4 <AmiBlitz3.ab3@2146>     ADD.l d0,savefuncspace
00020AF8 <AmiBlitz3.ab3@2149>     MOVE.l d0,8(a1)
00020AFC <AmiBlitz3.ab3@2150>     LEA 12(a1),a1
00020AFE <AmiBlitz3.ab3@2151>     MOVE.l a0,-(a7)
00020B02 <AmiBlitz3.ab3@2152>     LEA $21+#funcentry_extend(a0),a0
00020B04 <AmiBlitz3.ab3@2155>       MOVE.b (a0)+,(a1)+
00020B08 <AmiBlitz3.ab3@2156>     BNE 'l1
00020B0A <AmiBlitz3.ab3@2157>     MOVE.l (a7)+,a0
00020B0C <AmiBlitz3.ab3@2160>     MOVE.l (a0),d0
00020B10 <AmiBlitz3.ab3@2161> BRA 'lr1
00020B18 <AmiBlitz3.ab3@2164>   BTST #$7,make_smallestcode
00020B1C <AmiBlitz3.ab3@2165>   BEQ.b JL_0_3844                                           ;optimize for executable
00020B22 <AmiBlitz3.ab3@2166>   CLR.l morememadd
00020B26 <AmiBlitz3.ab3@2168>   BSR.w alloxadj
00020B2A <AmiBlitz3.ab3@2169>   BEQ.w JL_0_388A
00020B2E <AmiBlitz3.ab3@2172>   BSR.w compileall
00020B34 <AmiBlitz3.ab3@2173>   ADDQ.w #1,pass
00020B3A <AmiBlitz3.ab3@2176>   MOVE.w dontwrite,D1
00020B3E <AmiBlitz3.ab3@2177>   BEQ.w JL_0_38A2
00020B42 <AmiBlitz3.ab3@2197> BRA.w JL_0_3896
00020B4A <AmiBlitz3.ab3@2208>   MOVE.w #$FFFF,anyerrs
00020B4E <AmiBlitz3.ab3@2209> BRA.w JL_0_38A2
00020B52 <AmiBlitz3.ab3@2212>   BSR.w alloxinc                                          ;increase all by 50%
00020B56 <AmiBlitz3.ab3@2213>   BEQ.w Aclearallvars
00020B5A <AmiBlitz3.ab3@2214> BRA.w JL_0_3824
00020B5E <AmiBlitz3.ab3@2226> BRA.w JL_0_38A6                                            ;???????
00020B64 <AmiBlitz3.ab3@2230>   JSR freereps
00020B6A <AmiBlitz3.ab3@2231>   JSR freesels
00020B70 <AmiBlitz3.ab3@2232>   JSR AJL_0_6DF2
00020B76 <AmiBlitz3.ab3@2233>   JSR freepends
00020B7C <AmiBlitz3.ab3@2234>   JSR freeifs
00020B82 <AmiBlitz3.ab3@2235>   JSR AJL_0_C188
00020B88 <AmiBlitz3.ab3@2236>   JSR AJL_0_C15C
00020B8E <AmiBlitz3.ab3@2237>   JSR AJL_0_D9BC
00020B94 <AmiBlitz3.ab3@2240> JMP cleartemplabel
00020B98 <AmiBlitz3.ab3@2243> mempool2:  Dc.l 0
00020B9E <AmiBlitz3.ab3@2247>   JSR Aclearcache
00020BA6 <AmiBlitz3.ab3@2249>   BTST #$7,use_debugger
00020BAA <AmiBlitz3.ab3@2251>   BNE 'debugon
00020BB0 <AmiBlitz3.ab3@2252>   CLR.w debugmode
00020BB4 <AmiBlitz3.ab3@2253> BRA.b 'debugoff
00020BBA <AmiBlitz3.ab3@2256>   SNE debugmode
00020BF2 <AmiBlitz3.ab3@2261>   !ComData_SetB{comByte_DebugMode,debugmode}
00020BF8 <AmiBlitz3.ab3@2263>   LEA regtable,a0
00020BFA <AmiBlitz3.ab3@2264>   MOVEQ #10,d0
00020BFC <AmiBlitz3.ab3@2267>     CLR.l (a0)+
00020C00 <AmiBlitz3.ab3@2268>   DBF d0,'l1
00020C06 <AmiBlitz3.ab3@2270>   LEA includetemp2,a0
00020C08 <AmiBlitz3.ab3@2271>   CLR.b (a0)
00020C12 <AmiBlitz3.ab3@2272>   MOVE.l #7,maxregs
00020C18 <AmiBlitz3.ab3@2273>   CLR.w debugnest
00020C1E <AmiBlitz3.ab3@2274>   CLR.b funcparloop
00020C24 <AmiBlitz3.ab3@2275>   CLR.b nostringopt
00020C2A <AmiBlitz3.ab3@2276>   CLR.b firsttime
00020C30 <AmiBlitz3.ab3@2277>   CLR.l lastdestpointer
00020C36 <AmiBlitz3.ab3@2278>   CLR.l lastwritedat
00020C3C <AmiBlitz3.ab3@2279>   CLR.l prevwritedat
00020C42 <AmiBlitz3.ab3@2280>   CLR.l includeline
00020C48 <AmiBlitz3.ab3@2281>   CLR.b incnif
00020C4E <AmiBlitz3.ab3@2282>   CLR.b formode
00020C54 <AmiBlitz3.ab3@2283>   CLR.b funccall
00020C5A <AmiBlitz3.ab3@2284>   CLR.w objectcount
00020C60 <AmiBlitz3.ab3@2285>   CLR.b resdisable
00020C66 <AmiBlitz3.ab3@2286>   CLR.b developobject
00020C6C <AmiBlitz3.ab3@2287>   CLR.b optistring
00020C72 <AmiBlitz3.ab3@2288>   CLR.b optistring2
00020C78 <AmiBlitz3.ab3@2289>   CLR.b optiarray
00020C7E <AmiBlitz3.ab3@2290>   CLR.b quickadd
00020C84 <AmiBlitz3.ab3@2291>   CLR.w newmode
00020C8A <AmiBlitz3.ab3@2292>   CLR.w mode
00020C90 <AmiBlitz3.ab3@2293>   CLR.w string1
00020C96 <AmiBlitz3.ab3@2294>   CLR.b fastfunc
00020C9C <AmiBlitz3.ab3@2295>   CLR.w load_var_size
00020CA2 <AmiBlitz3.ab3@2296>   CLR.w load_var_reg
00020CA8 <AmiBlitz3.ab3@2297>   CLR.l load_var_addr
00020CAE <AmiBlitz3.ab3@2298>   CLR.w imm_size
00020CB4 <AmiBlitz3.ab3@2299>   CLR.w imm_reg
00020CBA <AmiBlitz3.ab3@2300>   CLR.l imm_addr
00020CC0 <AmiBlitz3.ab3@2301>   CLR.b _dcb
00020CC6 <AmiBlitz3.ab3@2302>   CLR.l nohunkoffset
00020CCC <AmiBlitz3.ab3@2303>   CLR.b peekaddrsize
00020CD2 <AmiBlitz3.ab3@2304>   CLR.b typecheck
00020CD8 <AmiBlitz3.ab3@2305>   CLR.b declare2
00020CDE <AmiBlitz3.ab3@2306>   CLR.b declare
00020CE4 <AmiBlitz3.ab3@2307>   CLR.l myoline                                          ;check
00020CEA <AmiBlitz3.ab3@2308>   CLR.l myline                                          ;check
00020CF0 <AmiBlitz3.ab3@2309>   CLR.b newvariable
00020CF6 <AmiBlitz3.ab3@2310>   CLR.b saved0
00020CFC <AmiBlitz3.ab3@2311>   CLR.l bsssize
00020D02 <AmiBlitz3.ab3@2312>   CLR.l chipsize
00020D08 <AmiBlitz3.ab3@2313>   CLR.b infunctioncode
00020D0E <AmiBlitz3.ab3@2314>   CLR.l errorcounter
00020D18 <AmiBlitz3.ab3@2315>   MOVE.l #-1,bssstart
00020D22 <AmiBlitz3.ab3@2316>   MOVE.l #-1,bssend
00020D2C <AmiBlitz3.ab3@2317>   MOVE.l #-1,chipstart
00020D36 <AmiBlitz3.ab3@2318>   MOVE.l #-1,chipend
00020D3E <AmiBlitz3.ab3@2319>   MOVE.w #0,bssmode
00020D44 <AmiBlitz3.ab3@2320>   CLR.w a2offset
00020D4A <AmiBlitz3.ab3@2321>   CLR.w fast
00020D50 <AmiBlitz3.ab3@2322>   CLR.w fpu
00020D56 <AmiBlitz3.ab3@2323>   CLR.b iee
00020D5C <AmiBlitz3.ab3@2324>   CLR.w newsyntax
00020D60 <AmiBlitz3.ab3@2325>   BSR.w JL_0_38A6
00020D66 <AmiBlitz3.ab3@2326>   JSR AJL_0_7962
00020D6C <AmiBlitz3.ab3@2327>   JSR frallvars
00020D72 <AmiBlitz3.ab3@2328>   JSR fralltypes
00020D78 <AmiBlitz3.ab3@2329>   JSR freemacs
00020D7E <AmiBlitz3.ab3@2330>   JSR clearfunctionlist
00020D84 <AmiBlitz3.ab3@2331>   TST.w pass
00020D8A <AmiBlitz3.ab3@2333>   JSR clearlabels
00020D90 <AmiBlitz3.ab3@2334>   JSR clearhash
00020D96 <AmiBlitz3.ab3@2337>   LEA devo,a0
00020D9A <AmiBlitz3.ab3@2338>   MOVEM.l a0-a6/d0-d7,-(a7)
00020DA0 <AmiBlitz3.ab3@2339>   LEA ptr_parameterstore,a1
00020DA2 <AmiBlitz3.ab3@2342>     MOVE.b (a0)+,(a1)+
00020DA6 <AmiBlitz3.ab3@2343>   BNE 'l1b
00020DA8 <AmiBlitz3.ab3@2344>   MOVEQ #13,d2
00020DAE <AmiBlitz3.ab3@2345>   JSR findlabel2
00020DB2 <AmiBlitz3.ab3@2346>   BNE 'd
00020DB6 <AmiBlitz3.ab3@2347>   CLR.l 8(a2)
00020DBA <AmiBlitz3.ab3@2350>   MOVEM.l (a7)+,a0-a6/d0-d7
00020DE4 <AmiBlitz3.ab3@2351>   !basic
00020E58 <AmiBlitz3.ab3@2352>   dos_Delete{dos_AddPart{my_systemdir$,"ab_compileerror.txt"}}
00020E76 <AmiBlitz3.ab3@2353>   !asm
00020E7C <AmiBlitz3.ab3@2354>   CLR.b returncode
00020E82 <AmiBlitz3.ab3@2355> JMP freeprocvs
00020E88 <AmiBlitz3.ab3@2359>   MOVE.l #bssstore-labelhash,d0
00020E8A <AmiBlitz3.ab3@2360>   ASR.l #2,d0
00020E90 <AmiBlitz3.ab3@2361>   LEA labelhash,a0
00020E92 <AmiBlitz3.ab3@2364>     CLR.l (a0)+
00020E94 <AmiBlitz3.ab3@2365>     SUBQ.l #1,d0
00020E98 <AmiBlitz3.ab3@2366>   BNE.s 'l10
00020E9E <AmiBlitz3.ab3@2368>   LEA labelbase,a1
00020EA0 <AmiBlitz3.ab3@2369>   MOVE.l (a1),d0
00020EA4 <AmiBlitz3.ab3@2370>   BEQ 'l11
00020EA6 <AmiBlitz3.ab3@2373>     MOVE.l d0,a1
00020EAA <AmiBlitz3.ab3@2374>     TST.l 4(a1)
00020EAE <AmiBlitz3.ab3@2375>     BEQ 'l29
00020EB2 <AmiBlitz3.ab3@2376>     LEA $13(a1),a0
00020EB4 <AmiBlitz3.ab3@2377>     MOVEQ #0,d0
00020EB6 <AmiBlitz3.ab3@2378>     MOVEQ #0,d1
00020EB8 <AmiBlitz3.ab3@2381>       MOVE.b (a0)+,d1
00020EBC <AmiBlitz3.ab3@2382>       BEQ 'l12
00020EC2 <AmiBlitz3.ab3@2383>       !hashalgo
00020EC6 <AmiBlitz3.ab3@2384> BRA 'l13
00020ECC <AmiBlitz3.ab3@2387>     LEA labelhash,a0
00020ED2 <AmiBlitz3.ab3@2388>     AND.l #hashsize,d0
00020ED4 <AmiBlitz3.ab3@2389>      ASL.l #2,d0
00020ED8 <AmiBlitz3.ab3@2390>     MOVE.l 0(a0,d0),d1                                     ;*4
00020EDC <AmiBlitz3.ab3@2391>     MOVE.l d1,$c(a1)
00020EE0 <AmiBlitz3.ab3@2392>     MOVE.l a1,0(a0,d0)
00020EE2 <AmiBlitz3.ab3@2395>     MOVE.l (a1),d0
00020EE6 <AmiBlitz3.ab3@2396>   BNE 'l21
00020EE8 <AmiBlitz3.ab3@2399> RTS
00020EEE <AmiBlitz3.ab3@2403>   MOVEA.l lastrestype,A0
00020EF0 <AmiBlitz3.ab3@2404>   MOVEA.l (A0),A2
00020EF2 <AmiBlitz3.ab3@2405>   CLR.l (A0)
00020EF8 <AmiBlitz3.ab3@2406> JMP freetypes
00020EFE <AmiBlitz3.ab3@2410>   MOVEA.l varbase,A3
00020F04 <AmiBlitz3.ab3@2411>   CLR.l varbase
00020F08 <AmiBlitz3.ab3@2414>   CMPA.w #$0,A3
00020F0C <AmiBlitz3.ab3@2415>   BEQ.w 'l20
00020F0E <AmiBlitz3.ab3@2416>   MOVEA.l A3,A1
00020F10 <AmiBlitz3.ab3@2417>   MOVEA.l (A3),A3
00020F12 <AmiBlitz3.ab3@2418>   MOVEQ.l #$00,D0
00020F16 <AmiBlitz3.ab3@2419>   MOVE.b $E+4(A1),D0
00020F1C <AmiBlitz3.ab3@2420>   MOVEA.l _execbase,A6
00020F22 <AmiBlitz3.ab3@2421>   MOVE.l mempool2,a0
00020F26 <AmiBlitz3.ab3@2422>   JSR _FreePooled(A6)
00020F2A <AmiBlitz3.ab3@2423> BRA.w 'l10
00020F2C <AmiBlitz3.ab3@2426> RTS
00020F32 <AmiBlitz3.ab3@2431>   LEA firstiff,A2
00020F34 <AmiBlitz3.ab3@2432>   MOVEQ.l #$0E,D2
00020F3A <AmiBlitz3.ab3@2433> JMP freeslist
00020F3C <AmiBlitz3.ab3@2439> progressbar_width:   Dc.w 100                              ;riteend org source ;right end of include strip
00020F3E <AmiBlitz3.ab3@2440> inmacro:             Ds.w 1                                ;macmask org source ;macro found
00020F44 <AmiBlitz3.ab3@2444>   CLR.w inmacro
00020F4A <AmiBlitz3.ab3@2445>   ADDQ.l #1,globallinecount
00020F50 <AmiBlitz3.ab3@2446>   CLR.b nostringopt
00020F54 <AmiBlitz3.ab3@2447>   BSR.w JL_0_3CA4
00020F5A <AmiBlitz3.ab3@2448>   CLR.w instringon
00020F60 <AmiBlitz3.ab3@2451>   TST.w ininclude
00020F64 <AmiBlitz3.ab3@2452>   BEQ.w JL_0_39B0
00020F6A <AmiBlitz3.ab3@2453>   ADDQ.l #1,includeline
00020F70 <AmiBlitz3.ab3@2454>     JSR ab3_WriteDebugFile
00020F76 <AmiBlitz3.ab3@2455>   JSR AJL_0_C09E
00020F7A <AmiBlitz3.ab3@2456>   BEQ.w JL_0_39B0
00020F80 <AmiBlitz3.ab3@2457>   MOVE.w ininclude,D0
00020F84 <AmiBlitz3.ab3@2458>   CMP.w #$4,D0
00020F88 <AmiBlitz3.ab3@2459>   BCC.w JL_0_39AC
00020F8A <AmiBlitz3.ab3@2460>   ADD.w D0,D0
00020F90 <AmiBlitz3.ab3@2461>   LEA progress_per_line,A0
00020F94 <AmiBlitz3.ab3@2462>   MOVE.w $0(A0,D0.W),D2
00020F98 <AmiBlitz3.ab3@2463>   CMP.w progressbar_width(PC),D2
00020F9C <AmiBlitz3.ab3@2464>   BCC.w JL_0_39AC
00020FA0 <AmiBlitz3.ab3@2465>   ADDQ.w #1,$0(A0,D0.W)
00020FA2 <AmiBlitz3.ab3@2466>   LSR.w #1,D0
00020FA4 <AmiBlitz3.ab3@2467>   MOVE.l d0,d1
00020FA6 <AmiBlitz3.ab3@2468>   EXT.l d1
00020FA8 <AmiBlitz3.ab3@2469>   MOVE.l d2,d0
00020FAA <AmiBlitz3.ab3@2470>   EXT.l d0                                                 ;d0=x,d1=y
00020FB0 <AmiBlitz3.ab3@2472>   JSR update_progressbar
00020FB2 <AmiBlitz3.ab3@2475>   MOVEQ.l #-$01,D0
00020FB4 <AmiBlitz3.ab3@2476> RTS
00020FBA <AmiBlitz3.ab3@2480>   MOVE.l titleat,D0
00020FBC <AmiBlitz3.ab3@2481>   MOVEQ.l #$00,D1
00020FC2 <AmiBlitz3.ab3@2482>   MOVE.w progress_per_line,D1
00020FC4 <AmiBlitz3.ab3@2483>   ADD.l D1,D0
00020FC6 <AmiBlitz3.ab3@2484>   MOVE.l D0,D1
00020FC8 <AmiBlitz3.ab3@2485>   SWAP D0
00020FCE <AmiBlitz3.ab3@2486>   CMP.w titleat,D0
00020FD2 <AmiBlitz3.ab3@2487>    BEQ.w JL_0_39E4
00020FD4 <AmiBlitz3.ab3@2491>   EXT.l d0
00020FD6 <AmiBlitz3.ab3@2492>   MOVE.l d1,-(a7)
00020FDE <AmiBlitz3.ab3@2495>   MOVE.w #1,compiler_job                                    ; set to compiler job 1 (=build executable)
00020FE4 <AmiBlitz3.ab3@2496>   JSR update_progressbar
00020FEC <AmiBlitz3.ab3@2497>   MOVE.w #0,compiler_job                                    ; set to compiler job 0 (=compile source)
00020FEE <AmiBlitz3.ab3@2501>   MOVE.l (a7)+,d1
00020FF4 <AmiBlitz3.ab3@2504>   MOVE.l D1,titleat
00020FFA <AmiBlitz3.ab3@2505>   ADDQ.l #1,linenumat
00021000 <AmiBlitz3.ab3@2506>   CLR.w linedone
00021006 <AmiBlitz3.ab3@2507>   JSR ab3_WriteDebugFile  ; write to DebugFile every main source line
0002100C <AmiBlitz3.ab3@2509>   SUBQ.l #1,numlines2
00021010 <AmiBlitz3.ab3@2510>    BEQ.w JL_0_3A12
00021016 <AmiBlitz3.ab3@2511>   MOVEA.l sourceline,A0
00021018 <AmiBlitz3.ab3@2512>   MOVEA.l (A0),A0
0002101E <AmiBlitz3.ab3@2513>   MOVE.l A0,sourceline
00021022 <AmiBlitz3.ab3@2514>   LEA $9(A0),A5
00021024 <AmiBlitz3.ab3@2517> RTS
00021026 <AmiBlitz3.ab3@2521>   MOVE.w D0,-(A7)
00021028 <AmiBlitz3.ab3@2522>   MOVEQ.l #$03,D0
0002102A <AmiBlitz3.ab3@2525>     MOVE.w D1,D2
0002102E <AmiBlitz3.ab3@2526>     ANDI.w #$F,D2
00021032 <AmiBlitz3.ab3@2527>     ADDI.w #$30,D2
00021036 <AmiBlitz3.ab3@2528>     CMP.w #$3A,D2
0002103A <AmiBlitz3.ab3@2529>      BCS.w JL_0_3A2C
0002103C <AmiBlitz3.ab3@2530>     ADDQ.w #7,D2
00021040 <AmiBlitz3.ab3@2533>     MOVE.b D2,$0(A0,D0.W)
00021042 <AmiBlitz3.ab3@2534>     LSR.w #4,D1
00021046 <AmiBlitz3.ab3@2535>   DBF D0,JL_0_3A18
00021048 <AmiBlitz3.ab3@2537>   MOVE.w (A7)+,D0
0002104A <AmiBlitz3.ab3@2538> RTS
00021050 <AmiBlitz3.ab3@2548>   MOVE.w skipcode,D1
00021054 <AmiBlitz3.ab3@2549>   BNE.w JL_0_3A46
00021056 <AmiBlitz3.ab3@2550> RTS
00021058 <AmiBlitz3.ab3@2553>   MOVE.l A5,-(A7)
0002105A <AmiBlitz3.ab3@2554>   MOVEQ.l #$3A,D1                                          ;':'
0002105C <AmiBlitz3.ab3@2555>   MOVEQ.l #$21,D2                                          ;'!'
0002105E <AmiBlitz3.ab3@2556>   MOVEQ.l #$3B,D3                                          ;';'
00021060 <AmiBlitz3.ab3@2557>   MOVEQ.l #$22,D4                                          ;'"'
00021062 <AmiBlitz3.ab3@2560>   MOVE.b (A5)+,D0
00021066 <AmiBlitz3.ab3@2561>    BEQ.w JL_0_3CA0
0002106A <AmiBlitz3.ab3@2562>    BPL.w JL_0_3A60
0002106C <AmiBlitz3.ab3@2563>   MOVE.b (A5)+,D0
00021070 <AmiBlitz3.ab3@2564> BRA.w JL_0_3A50
00021072 <AmiBlitz3.ab3@2567>   CMP.b D4,D0
00021076 <AmiBlitz3.ab3@2568>    BNE.w JL_0_3A82
00021078 <AmiBlitz3.ab3@2571>   MOVE.b (A5)+,D0
0002107C <AmiBlitz3.ab3@2572>    BEQ.w notqerr
00021080 <AmiBlitz3.ab3@2578>   CMP.b #$22,D0
00021084 <AmiBlitz3.ab3@2579>    BNE.w JL_0_3A66
00021088 <AmiBlitz3.ab3@2580> BRA.w JL_0_3A50
0002108A <AmiBlitz3.ab3@2583>   CMP.b D1,D0
0002108E <AmiBlitz3.ab3@2584>    BEQ.w JL_0_3CA0
00021090 <AmiBlitz3.ab3@2585>   CMP.b D3,D0
00021094 <AmiBlitz3.ab3@2586>    BEQ.w JL_0_3CA0
00021096 <AmiBlitz3.ab3@2589>   CMP.b D2,D0
0002109A <AmiBlitz3.ab3@2590>    BNE.w JL_0_3A50
000210A2 <AmiBlitz3.ab3@2591>   MOVE.w #$FFFF,inmacro                                    ; no runtimecheck in macros
000210A4 <AmiBlitz3.ab3@2592>   MOVEA.l A5,A3
000210AA <AmiBlitz3.ab3@2593>    JSR getparameter2
000210AE <AmiBlitz3.ab3@2594>    BNE.w JL_0_3AAC
000210B4 <AmiBlitz3.ab3@2595> JMP syntaxerr
000210BE <AmiBlitz3.ab3@2600>    MOVE.w oldqflag,instringon
000210C4 <AmiBlitz3.ab3@2601>   MOVEA.l lastsourcepos,A5
000210CA <AmiBlitz3.ab3@2602>    JSR findmac                                             ;find macro
000210CE <AmiBlitz3.ab3@2603>    BEQ.w JL_0_3ABE
000210D4 <AmiBlitz3.ab3@2604> JMP nomacerr
000210DA <AmiBlitz3.ab3@2607>   TST.b debugmode
000210DE <AmiBlitz3.ab3@2608>   BEQ 'sk1
000210E2 <AmiBlitz3.ab3@2609>   MOVE.w #$4e71,d1
000210E8 <AmiBlitz3.ab3@2610>   JSR writeword
000210EA <AmiBlitz3.ab3@2611>   MOVE.l a5,-(a7)
000210EC <AmiBlitz3.ab3@2612>   MOVE.l a3,a5
000210EE <AmiBlitz3.ab3@2613>   SUBQ.l #1,a5
000210F6 <AmiBlitz3.ab3@2614>   MOVE.w #$0,inmacro
000210FA <AmiBlitz3.ab3@2615>   BSR debugstuffa
00021102 <AmiBlitz3.ab3@2616>   MOVE.w #$FFFF,inmacro
00021104 <AmiBlitz3.ab3@2617>   MOVE.l (a7)+,a5
00021108 <AmiBlitz3.ab3@2618>   MOVE.w #$4e71,d1
0002110E <AmiBlitz3.ab3@2619>   JSR writeword
00021110 <AmiBlitz3.ab3@2622>   MOVEA.l A5,A4
00021114 <AmiBlitz3.ab3@2625>    CMP.b #" ",(a4)+
00021118 <AmiBlitz3.ab3@2626>     BEQ 'l5a
0002111A <AmiBlitz3.ab3@2627>      SUBQ.l#1,a4
0002111E <AmiBlitz3.ab3@2628>      CMP.b #",",(a4)
00021122 <AmiBlitz3.ab3@2629>     BEQ JL_0_3AEA
00021124 <AmiBlitz3.ab3@2632>   MOVEQ.l #$00,D4
0002112A <AmiBlitz3.ab3@2633>   TST.b newsyntax
0002112E <AmiBlitz3.ab3@2634>   BEQ 'l10b
00021132 <AmiBlitz3.ab3@2635>   MOVEM.l a0/d0,-(a7)
00021136 <AmiBlitz3.ab3@2636>   MOVE.l 4(a2),a0
0002113A <AmiBlitz3.ab3@2637>   MOVE.w 8(a2),d0
0002113E <AmiBlitz3.ab3@2640>   CMP.b #"`",(a0)+
00021142 <AmiBlitz3.ab3@2641>   BEQ 'x1
00021144 <AmiBlitz3.ab3@2642>   SUBQ.w #1,d0
00021148 <AmiBlitz3.ab3@2643>   BNE 'x2
0002114C <AmiBlitz3.ab3@2644> BRA 'x3
00021150 <AmiBlitz3.ab3@2647>   MOVEM.l (a7)+,a0/d0
00021154 <AmiBlitz3.ab3@2648> BRA 'l10
00021158 <AmiBlitz3.ab3@2651>   MOVEM.l (a7)+,a0/d0
0002115C <AmiBlitz3.ab3@2652> BRA JL_0_3AEA
00021160 <AmiBlitz3.ab3@2655>   CMPI.b #"{",(A4)
00021164 <AmiBlitz3.ab3@2656>    BNE.w JL_0_3AEA
00021166 <AmiBlitz3.ab3@2660>   ADDQ.l #1,a4
0002116A <AmiBlitz3.ab3@2663>     CMP.b #" ",(a4)
0002116E <AmiBlitz3.ab3@2664>     BEQ 'l5
00021172 <AmiBlitz3.ab3@2665>     MOVEM.l a0/d0,-(a7)
00021178 <AmiBlitz3.ab3@2666>     CLR.b exmac
0002117E <AmiBlitz3.ab3@2667>     LEA chartab,a0
00021180 <AmiBlitz3.ab3@2668>     MOVEQ #0,d0
00021182 <AmiBlitz3.ab3@2669>     MOVE.b (a4),d0
00021186 <AmiBlitz3.ab3@2670>     BMI 'm1
0002118A <AmiBlitz3.ab3@2671>     TST.b 0(a0,d0)
0002118E <AmiBlitz3.ab3@2672>     BEQ 'm1
00021194 <AmiBlitz3.ab3@2673>     TST.b newsyntax
00021198 <AmiBlitz3.ab3@2674>     BEQ 'ns1
0002119C <AmiBlitz3.ab3@2675>     CMP.b #"#",d0
000211A0 <AmiBlitz3.ab3@2676>     BEQ 'm1
000211A4 <AmiBlitz3.ab3@2677>     CMP.b #"$",d0
000211A8 <AmiBlitz3.ab3@2678>     BEQ 'm1
000211AC <AmiBlitz3.ab3@2679>     CMP.b #"-",d0
000211B0 <AmiBlitz3.ab3@2680>     BEQ 'm1
000211B4 <AmiBlitz3.ab3@2683>   CMP.b #",",d0
000211B8 <AmiBlitz3.ab3@2684>     BEQ 'm1
000211BC <AmiBlitz3.ab3@2685>     CMP.b #"{",d0
000211C0 <AmiBlitz3.ab3@2686>     BNE 'm1b
000211C2 <AmiBlitz3.ab3@2687>     ADDQ.l #1,a4
000211C6 <AmiBlitz3.ab3@2688> BRA 'm1
000211CC <AmiBlitz3.ab3@2691>   TST.b newsyntax
000211D0 <AmiBlitz3.ab3@2692>     BEQ 'm1
000211D8 <AmiBlitz3.ab3@2693>     MOVE.b #1,exmac
000211DC <AmiBlitz3.ab3@2696>   MOVEM.l (a7)+,a0/d0
000211E2 <AmiBlitz3.ab3@2697>     TST.b exmac
000211E6 <AmiBlitz3.ab3@2698>     BNE JL_0_3AEA
000211E8 <AmiBlitz3.ab3@2705>   TST.b (a4)
000211EC <AmiBlitz3.ab3@2706>   BEQ JL_0_3AEA
000211F2 <AmiBlitz3.ab3@2709>   MOVEA.l ptr_macrobuffer_begin,A0
000211F4 <AmiBlitz3.ab3@2712>   ADDQ.w #1,D4
000211F6 <AmiBlitz3.ab3@2713>   MOVE.l A4,(A0)
000211FA <AmiBlitz3.ab3@2714>   CLR.w 4(a0)
000211FE <AmiBlitz3.ab3@2715>    BSR.w JL_0_3CC6
00021200 <AmiBlitz3.ab3@2717>   ADDQ.l #4,a0
00021202 <AmiBlitz3.ab3@2721>   SUBQ.w #1,(a0)+
00021206 <AmiBlitz3.ab3@2722>   CMP.b #$7D,D0
0002120A <AmiBlitz3.ab3@2723>   BEQ 'l10
0002120C <AmiBlitz3.ab3@2724>   TST.b d0
00021210 <AmiBlitz3.ab3@2725>   BEQ 'l10
00021214 <AmiBlitz3.ab3@2726> BRA JL_0_3AD0
0002121A <AmiBlitz3.ab3@2730>   CLR.l sourceline3
0002121C <AmiBlitz3.ab3@2731>   MOVEA.l A4,A5
00021222 <AmiBlitz3.ab3@2734>   MOVE.w D4,numarg
00021228 <AmiBlitz3.ab3@2741>   MOVE.l #$01,D1
0002122E <AmiBlitz3.ab3@2742>   MOVEA.l _execbase,A6
00021234 <AmiBlitz3.ab3@2743>   MOVE.l mempool,a0
0002123A <AmiBlitz3.ab3@2744>   MOVE.l macrobuffer_size,D0
00021240 <AmiBlitz3.ab3@2745>   CMP.l #DEFAULT_MACROBUFFERSIZE,d0                          ; replaced with a constant tomsmart1
00021244 <AmiBlitz3.ab3@2746>   BGE 'l1m
0002124A <AmiBlitz3.ab3@2747>   MOVE.l #DEFAULT_MACROBUFFERSIZE,d0                         ; replaced with a constant tomsmart1
00021250 <AmiBlitz3.ab3@2748>   MOVE.l d0,macrobuffer_size
00021254 <AmiBlitz3.ab3@2751>   JSR _AllocPooled(a6)
0002125E <AmiBlitz3.ab3@2753>   MOVE.l myline,myoline
00021260 <AmiBlitz3.ab3@2756>   ADDQ.l #1,d0
00021266 <AmiBlitz3.ab3@2757>   MOVE.l D0,myline
00021268 <AmiBlitz3.ab3@2758>   MOVEA.l D0,A1
0002126E <AmiBlitz3.ab3@2759>   MOVE.b #":",-1(a1)
00021270 <AmiBlitz3.ab3@2760>   MOVEA.l A1,A6
00021276 <AmiBlitz3.ab3@2761>   ADDA.l macrobuffer_size,A6
00021278 <AmiBlitz3.ab3@2762>   MOVEA.l (A7)+,A0
0002127A <AmiBlitz3.ab3@2765>   CMPA.l A6,A1
0002127E <AmiBlitz3.ab3@2766>    BCC.w mbovererr
00021280 <AmiBlitz3.ab3@2767>   MOVE.b (A0)+,(a1)+
00021282 <AmiBlitz3.ab3@2768>   CMPA.l A3,A0
00021286 <AmiBlitz3.ab3@2769>    BCS.w JL_0_3B1E
00021288 <AmiBlitz3.ab3@2770>   SUBQ.w #1,A1
0002128C <AmiBlitz3.ab3@2771>   MOVE.w $8(A2),D1
00021290 <AmiBlitz3.ab3@2772>    BEQ.w JL_0_3C70
00021298 <AmiBlitz3.ab3@2773>   MOVE.w $A(A2),macnum
0002129C <AmiBlitz3.ab3@2774>   ADDQ.w #1,$A(A2)
000212A0 <AmiBlitz3.ab3@2775>   MOVEA.l $4(A2),A2
000212A2 <AmiBlitz3.ab3@2776>   SUBQ.w #1,D1
000212A8 <AmiBlitz3.ab3@2777>   CLR.b firstmline
000212AA <AmiBlitz3.ab3@2780>     MOVEQ.l #$00,D0
000212AC <AmiBlitz3.ab3@2781>     MOVE.b (A2)+,D0
000212B2 <AmiBlitz3.ab3@2782>     TST.b firstmline
000212B6 <AmiBlitz3.ab3@2783>     BNE 'c1
000212BA <AmiBlitz3.ab3@2784>     CMP.b #$22,d0
000212BE <AmiBlitz3.ab3@2785>     BNE 's1
000212C6 <AmiBlitz3.ab3@2786>     MOVE.b #1,firstmline
000212CA <AmiBlitz3.ab3@2789>     CMP.b #":",d0
000212CE <AmiBlitz3.ab3@2790>     BNE 'm1
000212D6 <AmiBlitz3.ab3@2791>     MOVE.b #1,firstmline
000212DA <AmiBlitz3.ab3@2794>     CMP.b #";",d0
000212DE <AmiBlitz3.ab3@2795>     BNE 'c1
000212E0 <AmiBlitz3.ab3@2798>     SUBQ.w #1,d1                                           ;filter out comment
000212E2 <AmiBlitz3.ab3@2799>     MOVE.b (a2)+,d0
000212E8 <AmiBlitz3.ab3@2800>     CMP.w #":@",-1(a2)
000212EC <AmiBlitz3.ab3@2801>     BEQ 'c2
000212EE <AmiBlitz3.ab3@2802>     TST.w d1
000212F2 <AmiBlitz3.ab3@2803>     BNE 'l1
000212F6 <AmiBlitz3.ab3@2804>   BRA JL_0_3C6C
000212FC <AmiBlitz3.ab3@2807>     CMP.b #":",1(a2)
00021300 <AmiBlitz3.ab3@2808>       BNE 'l1
00021302 <AmiBlitz3.ab3@2809>       ADDQ #2,a2
00021304 <AmiBlitz3.ab3@2810>       SUBQ #3,d1
00021306 <AmiBlitz3.ab3@2811>       MOVE.b (a2)+,d0
0002130E <AmiBlitz3.ab3@2812>       MOVE.b #1,firstmline
00021312 <AmiBlitz3.ab3@2815>     CMP.b #"`",D0
00021316 <AmiBlitz3.ab3@2816>      BNE.w JL_0_3C56
00021318 <AmiBlitz3.ab3@2817>     SUBQ.w #1,D1
0002131A <AmiBlitz3.ab3@2818>     MOVE.b (A2)+,D0
0002131E <AmiBlitz3.ab3@2819>     CMP.w #$7B,D0
00021322 <AmiBlitz3.ab3@2820>      BEQ.w JL_0_3BB6
00021326 <AmiBlitz3.ab3@2821>     CMP.w #$40,D0
0002132A <AmiBlitz3.ab3@2822>      BNE.w JL_0_3B82
0002132C <AmiBlitz3.ab3@2823>     MOVEQ.l #$00,D2
00021332 <AmiBlitz3.ab3@2824>     MOVE.w macnum,D2
00021334 <AmiBlitz3.ab3@2825>     MOVEA.l A1,A0
00021336 <AmiBlitz3.ab3@2826>     MOVE.w D1,-(A7)
0002133C <AmiBlitz3.ab3@2827>      JSR makelong
0002133E <AmiBlitz3.ab3@2828>     MOVEA.l A0,A1
00021340 <AmiBlitz3.ab3@2829>     MOVE.w (A7)+,D1
00021344 <AmiBlitz3.ab3@2830>   BRA.w JL_0_3C6C
00021348 <AmiBlitz3.ab3@2833>     ORI.w #$20,D0
0002134C <AmiBlitz3.ab3@2834>     CMP.w #$7A,D0
00021350 <AmiBlitz3.ab3@2835>      BCS.w JL_0_3B94
00021356 <AmiBlitz3.ab3@2836>   JMP ilconsterr
0002135A <AmiBlitz3.ab3@2839>     SUBI.w #$30,D0
0002135E <AmiBlitz3.ab3@2840>     CMP.w #$A,D0
00021362 <AmiBlitz3.ab3@2841>      BCS.w JL_0_3BF2
00021366 <AmiBlitz3.ab3@2842>     SUBI.w #$27,D0
0002136A <AmiBlitz3.ab3@2843>     CMP.w #$A,D0
0002136E <AmiBlitz3.ab3@2844>      BCC.w JL_0_3BB2
00021374 <AmiBlitz3.ab3@2845>   JMP ilconsterr
00021378 <AmiBlitz3.ab3@2848>   BRA.w JL_0_3BF2
0002137A <AmiBlitz3.ab3@2851>     MOVE.l A5,-(A7)
0002137E <AmiBlitz3.ab3@2852>     MOVEM.l D1/A1-A2/A6,-(A7)
00021380 <AmiBlitz3.ab3@2853>     MOVEA.l A2,A5
00021386 <AmiBlitz3.ab3@2854>      JSR AJL_0_BF6E
0002138A <AmiBlitz3.ab3@2855>     CMP.w #$7D,D0
0002138E <AmiBlitz3.ab3@2856>      BEQ.w JL_0_3BD2
00021394 <AmiBlitz3.ab3@2857>   JMP syntaxerr
00021398 <AmiBlitz3.ab3@2860>     MOVEM.l (A7)+,D1/A1-A2/A6
0002139A <AmiBlitz3.ab3@2861>     MOVE.l A5,D2
0002139C <AmiBlitz3.ab3@2862>     SUB.l A2,D2
0002139E <AmiBlitz3.ab3@2863>     SUB.w D2,D1
000213A0 <AmiBlitz3.ab3@2864>     MOVEA.l A5,A2
000213A6 <AmiBlitz3.ab3@2865>     CLR.w instringon
000213A8 <AmiBlitz3.ab3@2866>     MOVEA.l (A7)+,A5
000213AA <AmiBlitz3.ab3@2867>     MOVE.l D3,D0
000213AE <AmiBlitz3.ab3@2868>     BPL.w JL_0_3BF2
000213B4 <AmiBlitz3.ab3@2869>   JMP ilconsterr
000213B6 <AmiBlitz3.ab3@2872>     SUBQ.w #1,D0
000213BA <AmiBlitz3.ab3@2873>      BPL.w JL_0_3C20
000213C0 <AmiBlitz3.ab3@2877>     MOVE.w numarg,D0
000213C4 <AmiBlitz3.ab3@2878>     DIVU #$A,D0
000213C8 <AmiBlitz3.ab3@2879>     ADDI.w #$30,D0
000213CA <AmiBlitz3.ab3@2880>     CMPA.l A6,A1
000213CE <AmiBlitz3.ab3@2881>      BCC.w mbovererr
000213D0 <AmiBlitz3.ab3@2882>     MOVE.b D0,(A1)+
000213D2 <AmiBlitz3.ab3@2883>     SWAP D0
000213D6 <AmiBlitz3.ab3@2884>     ADDI.w #$30,D0
000213D8 <AmiBlitz3.ab3@2885>     CMPA.l A6,A1
000213DC <AmiBlitz3.ab3@2886>      BCC.w mbovererr
000213DE <AmiBlitz3.ab3@2887>     MOVE.b D0,(A1)+
000213E2 <AmiBlitz3.ab3@2888>   BRA.w JL_0_3C6C
000213E8 <AmiBlitz3.ab3@2894>     CMP.w numarg,D0
000213EC <AmiBlitz3.ab3@2895>      BCC.w JL_0_3C6C
000213EE <AmiBlitz3.ab3@2896>     LSL.w #1,D0
000213F0 <AmiBlitz3.ab3@2897>     MOVE.w D0,D4
000213F2 <AmiBlitz3.ab3@2898>     LSL.w #1,D0
000213F4 <AmiBlitz3.ab3@2899>     ADD.w D4,D0
000213FA <AmiBlitz3.ab3@2900>     MOVEA.l ptr_macrobuffer_begin,A0
000213FC <AmiBlitz3.ab3@2901>     ADDA.w D0,A0
00021400 <AmiBlitz3.ab3@2902>     MOVE.w $4(A0),D4
00021404 <AmiBlitz3.ab3@2903>      BEQ.w JL_0_3C6C
00021406 <AmiBlitz3.ab3@2904>     MOVEA.l (A0),A0
00021408 <AmiBlitz3.ab3@2905>     SUBQ.w #1,D4
0002140A <AmiBlitz3.ab3@2908>       CMPA.l A6,A1
0002140E <AmiBlitz3.ab3@2909>        BCC.w mbovererr
00021412 <AmiBlitz3.ab3@2910>       CMP.w #"@@",(a0)
00021416 <AmiBlitz3.ab3@2911>        BNE 'l10
0002141C <AmiBlitz3.ab3@2912>       TST.w ininclude
00021420 <AmiBlitz3.ab3@2913>        BNE errorjoin
00021426 <AmiBlitz3.ab3@2916>       MOVE.l sourceline,a0
00021428 <AmiBlitz3.ab3@2917>       MOVE.l (a0),a0
0002142E <AmiBlitz3.ab3@2918>       CMP.l #0,a0
00021432 <AmiBlitz3.ab3@2919>       BNE 'l11
00021434 <AmiBlitz3.ab3@2920>       MOVEQ #0,d0
0002143A <AmiBlitz3.ab3@2921>       JSR error
00021440 <AmiBlitz3.ab3@2924>       MOVE.l a0,sourceline
00021446 <AmiBlitz3.ab3@2925>       ADDQ.l #1,linenumat
0002144A <AmiBlitz3.ab3@2926>       LEA 9(a0),a0
0002144C <AmiBlitz3.ab3@2927>       MOVE.l a0,-(a7)
00021450 <AmiBlitz3.ab3@2930>       CMP.b #" ",(a0)+
00021454 <AmiBlitz3.ab3@2931>        BEQ 'l110
0002145A <AmiBlitz3.ab3@2932>       CMP.b #";",-1(a0)
0002145C <AmiBlitz3.ab3@2933>       MOVE.l (a7)+,a0
00021460 <AmiBlitz3.ab3@2934>        BEQ 'l111
00021462 <AmiBlitz3.ab3@2935>       SUBQ.l #1,d4
00021464 <AmiBlitz3.ab3@2938>       MOVE.b (A0)+,(A1)+
00021468 <AmiBlitz3.ab3@2939>     DBF D4,JL_0_3C46
0002146C <AmiBlitz3.ab3@2941>   BRA.w JL_0_3C6C
0002146E <AmiBlitz3.ab3@2944>     CMPA.l A6,A1
00021472 <AmiBlitz3.ab3@2945>      BCC.w mbovererr
00021474 <AmiBlitz3.ab3@2946>     MOVE.b D0,(A1)+
00021478 <AmiBlitz3.ab3@2947>      BPL.w JL_0_3C6C
0002147A <AmiBlitz3.ab3@2948>     CMPA.l A6,A1
0002147E <AmiBlitz3.ab3@2949>      BCC.w mbovererr
00021480 <AmiBlitz3.ab3@2950>     MOVE.b (A2)+,(A1)+
00021482 <AmiBlitz3.ab3@2951>     SUBQ.w #1,D1
00021486 <AmiBlitz3.ab3@2954>   DBF D1,JL_0_3B48
00021488 <AmiBlitz3.ab3@2964>   CMPA.l A6,A1
0002148C <AmiBlitz3.ab3@2965>    BCC.w mbovererr
0002148E <AmiBlitz3.ab3@2966>   MOVE.b (A5)+,(A1)+
00021492 <AmiBlitz3.ab3@2967>    BNE.w JL_0_3C70
00021498 <AmiBlitz3.ab3@2968>   MOVEA.l myline,A5
0002149E <AmiBlitz3.ab3@2969>   MOVE.l myoline,D0
000214A2 <AmiBlitz3.ab3@2970>    BEQ.w JL_0_3C9C
000214A4 <AmiBlitz3.ab3@2971>   SUBQ.l #1,d0
000214A6 <AmiBlitz3.ab3@2972>   MOVEA.l D0,A1
000214AC <AmiBlitz3.ab3@2973>   MOVE.l macrobuffer_size,D0
000214B2 <AmiBlitz3.ab3@2974>   MOVEA.l _execbase,A6
000214B8 <AmiBlitz3.ab3@2975>   MOVE.l mempool,a0
000214BC <AmiBlitz3.ab3@2976>   JSR _FreePooled(A6)
000214C0 <AmiBlitz3.ab3@2979> BRA.w JL_0_3A46
000214C2 <AmiBlitz3.ab3@2982>   MOVEA.l (A7)+,A5
000214C4 <AmiBlitz3.ab3@2983> RTS
000214CA <AmiBlitz3.ab3@2987>   MOVE.l myline,D0
000214CE <AmiBlitz3.ab3@2988>   BEQ.w JL_0_3CC4
000214D0 <AmiBlitz3.ab3@2989>   SUBQ.l #1,d0
000214D6 <AmiBlitz3.ab3@2990>   CLR.l myline
000214D8 <AmiBlitz3.ab3@2991>   MOVEA.l D0,A1
000214DE <AmiBlitz3.ab3@2992>   MOVE.l macrobuffer_size,D0
000214E4 <AmiBlitz3.ab3@2993>   MOVEA.l _execbase,A6
000214EA <AmiBlitz3.ab3@2994>   MOVE.l mempool,a0
000214EE <AmiBlitz3.ab3@2995> JMP _FreePooled(A6)
000214F0 <AmiBlitz3.ab3@2998> RTS
000214F2 <AmiBlitz3.ab3@3002>   MOVEQ.l #$00,D2
000214F6 <AmiBlitz3.ab3@3005>   ADDQ.w #1,4(a0)
000214F8 <AmiBlitz3.ab3@3006>    MOVE.b (A4)+,D0
000214FC <AmiBlitz3.ab3@3008>    BEQ exit1
00021500 <AmiBlitz3.ab3@3009>    BPL.w JL_0_3CD8
00021504 <AmiBlitz3.ab3@3010>   ADDQ.w #1,4(a0)
00021506 <AmiBlitz3.ab3@3011>   ADDQ.w #1,A4
0002150A <AmiBlitz3.ab3@3012> BRA.w JL_0_3CC8
00021510 <AmiBlitz3.ab3@3015>    TST.w instringon
00021514 <AmiBlitz3.ab3@3016>    BNE 'lnom
00021518 <AmiBlitz3.ab3@3017>    CMP.b #";",d0
0002151C <AmiBlitz3.ab3@3018>    BEQ exit2
00021520 <AmiBlitz3.ab3@3019>    CMP.b #":",d0
00021524 <AmiBlitz3.ab3@3020>    BEQ exit2
00021528 <AmiBlitz3.ab3@3023>   CMP.b #$22,D0
0002152C <AmiBlitz3.ab3@3024>    BNE.w JL_0_3CEA
00021532 <AmiBlitz3.ab3@3025>   NOT.w instringon
00021536 <AmiBlitz3.ab3@3026> BRA.w JL_0_3CC8
0002153C <AmiBlitz3.ab3@3030>   TST.w instringon
00021540 <AmiBlitz3.ab3@3031>    BNE.w JL_0_3CC8
00021544 <AmiBlitz3.ab3@3032>    CMP.b #"@",d0
00021548 <AmiBlitz3.ab3@3033>    BNE 'l10
0002154C <AmiBlitz3.ab3@3034>    CMP.b #"@",(a4)
00021550 <AmiBlitz3.ab3@3035>    BNE 'l10
00021556 <AmiBlitz3.ab3@3036>    TST.w ininclude
0002155A <AmiBlitz3.ab3@3037>    BNE errorjoin
00021560 <AmiBlitz3.ab3@3038>    MOVE.l sourceline3,a4
00021566 <AmiBlitz3.ab3@3039>    CMP.l #0,a4
0002156A <AmiBlitz3.ab3@3040>    BNE 'l11
00021570 <AmiBlitz3.ab3@3041>    MOVE.l sourceline,a4
00021572 <AmiBlitz3.ab3@3044>   MOVE.l (a4),a4
00021578 <AmiBlitz3.ab3@3045>       CMP.l #0,a4
0002157C <AmiBlitz3.ab3@3046>       BNE 'l12
0002157E <AmiBlitz3.ab3@3047>       MOVEQ #0,d0
00021584 <AmiBlitz3.ab3@3048>       JSR error
0002158A <AmiBlitz3.ab3@3051>    MOVE.l a4,sourceline3
0002158E <AmiBlitz3.ab3@3052>    LEA 9(a4),a4
00021590 <AmiBlitz3.ab3@3053>    MOVEQ #",",d0
00021594 <AmiBlitz3.ab3@3056>   CMP.b #$2C,D0
00021598 <AmiBlitz3.ab3@3057>    BNE.w JL_0_3D06
0002159A <AmiBlitz3.ab3@3058>   TST.w D2
0002159E <AmiBlitz3.ab3@3059>    BEQ.w JL_0_3D30
000215A2 <AmiBlitz3.ab3@3060> BRA.w JL_0_3CC8
000215A6 <AmiBlitz3.ab3@3064>    CMP.b #$7B,D0                                           ;"{"
000215AA <AmiBlitz3.ab3@3065>    BEQ.w 'l10
000215AE <AmiBlitz3.ab3@3066>   CMP.b #$28,D0                                            ;"("
000215B2 <AmiBlitz3.ab3@3069>    BNE.w JL_0_3D14
000215B4 <AmiBlitz3.ab3@3070>   ADDQ.w #1,D2
000215B8 <AmiBlitz3.ab3@3071> BRA.w JL_0_3CC8
000215BC <AmiBlitz3.ab3@3074>   CMP.b #$7D,D0                                           ;"}"
000215C0 <AmiBlitz3.ab3@3075>    BNE.w JL_0_3D22
000215C2 <AmiBlitz3.ab3@3076>  TST.w D2
000215C6 <AmiBlitz3.ab3@3077>    BEQ.w JL_0_3D30
000215CA <AmiBlitz3.ab3@3081>    CMP.b #$7D,D0                                           ;"}"
000215CE <AmiBlitz3.ab3@3082>    BEQ.w 'l10
000215D2 <AmiBlitz3.ab3@3083>   CMP.b #$29,D0                                            ;")"
000215D6 <AmiBlitz3.ab3@3086>    BNE.w JL_0_3CC8
000215D8 <AmiBlitz3.ab3@3087>   SUBQ.w #1,D2
000215DC <AmiBlitz3.ab3@3088> BRA.w JL_0_3CC8
000215DE <AmiBlitz3.ab3@3091> RTS
000215E0 <AmiBlitz3.ab3@3095>       SUBQ.l #1,a4
000215E6 <AmiBlitz3.ab3@3096>       CLR.l sourceline3
000215E8 <AmiBlitz3.ab3@3097> RTS
000215EA <AmiBlitz3.ab3@3101>       MOVEQ #0,d0
000215EC <AmiBlitz3.ab3@3102>       SUBQ.l #1,a4
000215F2 <AmiBlitz3.ab3@3103>       CLR.l sourceline3
000215F4 <AmiBlitz3.ab3@3104> RTS
000215F8 <AmiBlitz3.ab3@3108>   CMP.b #$7B,D0                                            ;"{"
000215FC <AmiBlitz3.ab3@3109>   BEQ.w JL_0_3D3E
00021600 <AmiBlitz3.ab3@3110>   CMP.b #$28,D0                                            ;"("
00021602 <AmiBlitz3.ab3@3113> RTS
00021606 <AmiBlitz3.ab3@3117>   CMP.b #$7D,D0                                            ;"}"
0002160A <AmiBlitz3.ab3@3118>   BEQ.w JL_0_3D4C
0002160E <AmiBlitz3.ab3@3119>   CMP.b #$29,D0                                            ;")"
00021610 <AmiBlitz3.ab3@3122> RTS
00021612 <AmiBlitz3.ab3@3126> stopit:     Ds.w 1
00021614 <AmiBlitz3.ab3@3127> clrreq:     Ds.w 1
00021618 <AmiBlitz3.ab3@3148>   MOVE.w clrreq(PC),D0
0002161C <AmiBlitz3.ab3@3149>    BEQ.w close_compilewin__skip
0002164E <AmiBlitz3.ab3@3151> 
00021654 <AmiBlitz3.ab3@3153>   LEA clrreq,a0
00021656 <AmiBlitz3.ab3@3154>   NOT.w (a0)                                               ;reass
0002165C <AmiBlitz3.ab3@3155>   MOVEA.l ptr_ThisTask,A0
00021660 <AmiBlitz3.ab3@3156>   CLR.l $1E(A0)
00021664 <AmiBlitz3.ab3@3157>   CLR.l $2A(A0)
00021666 <AmiBlitz3.ab3@3160> RTS
00021668 <AmiBlitz3.ab3@3163> intsused:  Ds.w 1
00021670 <AmiBlitz3.ab3@3167>   MOVE.w #-1,blitzoff
00021676 <AmiBlitz3.ab3@3168>   CLR.w intsused
0002167C <AmiBlitz3.ab3@3169>   CLR.w anyerrs
00021682 <AmiBlitz3.ab3@3170>   CLR.w blitzmode
00021688 <AmiBlitz3.ab3@3171>   CLR.w dontwrite                                              ;nomemleft
0002168E <AmiBlitz3.ab3@3172>   CLR.w constmode
00021694 <AmiBlitz3.ab3@3173>   CLR.w cmake
0002169A <AmiBlitz3.ab3@3174>   CLR.w cfetchmode
000216A0 <AmiBlitz3.ab3@3175>   CLR.l intdata1
000216A6 <AmiBlitz3.ab3@3176>   CLR.w fuckpos
000216AC <AmiBlitz3.ab3@3177>   CLR.w procnum
000216B2 <AmiBlitz3.ab3@3178>   CLR.w procnum2
000216B8 <AmiBlitz3.ab3@3179>   CLR.w dfetch
000216BE <AmiBlitz3.ab3@3180>   CLR.l titleat
000216C4 <AmiBlitz3.ab3@3181>   CLR.b usedpath
000216CA <AmiBlitz3.ab3@3182>   CLR.b path2
000216D0 <AmiBlitz3.ab3@3183>   CLR.w inerr
000216D6 <AmiBlitz3.ab3@3184>   CLR.w intlevel
000216DC <AmiBlitz3.ab3@3185>   CLR.l cont_pc
000216E2 <AmiBlitz3.ab3@3186>   CLR.l cont_pc2
000216E8 <AmiBlitz3.ab3@3187>   CLR.l lastcontlink
000216F2 <AmiBlitz3.ab3@3188>   MOVE.l destbufferstart,destpointer
000216FC <AmiBlitz3.ab3@3189>   MOVE.l destbufferstart,bigpc
00021706 <AmiBlitz3.ab3@3190>   MOVE.l destbufferend,libend
00021710 <AmiBlitz3.ab3@3191>   MOVE.l data1start,data1
0002171A <AmiBlitz3.ab3@3192>   MOVE.l data2at,data2
00021722 <AmiBlitz3.ab3@3193>   MOVE.w #-1,skipcode                                      ;#-1,comflag org source
0002172A <AmiBlitz3.ab3@3194>   MOVE.w #-1,linemode                                      ;#-1,linemode org soruce
00021730 <AmiBlitz3.ab3@3195>   CLR.w oldvcodelen
00021736 <AmiBlitz3.ab3@3196>   CLR.b lastgloballabel                                    ;lastbiglab org source
00021738 <AmiBlitz3.ab3@3197> RTS
0002173A <AmiBlitz3.ab3@3200> debugmode:  Ds.w 1                                         ;debugga org source ;debugger enabled?
00021740 <AmiBlitz3.ab3@3204>   LEA  clrreq,a1
00021744 <AmiBlitz3.ab3@3205>   MOVE.w #2000,(a1)
0002176E <AmiBlitz3.ab3@3206>   !basic
00021784 <AmiBlitz3.ab3@3207> 
000217D4 <AmiBlitz3.ab3@3208>   comstatusstr   = !TRANS{"Initializing Compiler..."} ;default settings
000217DC <AmiBlitz3.ab3@3209>   calcpro.l      = 0
000217E4 <AmiBlitz3.ab3@3210>   calcpro_old.l  = 0
000217F0 <AmiBlitz3.ab3@3211>   typ_old.l      = -1
000217FC <AmiBlitz3.ab3@3212>   pass_old.l     = -1
00021802 <AmiBlitz3.ab3@3213>   update_comstatus_gui.b = True ; for the first
0002183C <AmiBlitz3.ab3@3215>   GetD0 &comstatusstr : !ComData_SetL{comPtr_CompileStatusString,d0}  ; set pointer of status string for gui tomsmart1 2012 05 12
00021876 <AmiBlitz3.ab3@3216>   GetD0 &calcpro      : !ComData_SetL{comPtr_CompileCalcProLong ,d0}  ; set pointer of calcpro long for gui tomsmart1 2012 05 12
00021894 <AmiBlitz3.ab3@3217>   !asm
000218C6 <AmiBlitz3.ab3@3218> 
000218CC <AmiBlitz3.ab3@3220>   CLR.w stopit
000218CE <AmiBlitz3.ab3@3221> RTS
000218D4 <AmiBlitz3.ab3@3225>   CLR.w storedebugmode
000218DA <AmiBlitz3.ab3@3226>   CLR.b iserror
000218DE <AmiBlitz3.ab3@3227>   BSR.w compilerequester
000218E8 <AmiBlitz3.ab3@3229>   MOVE.l #0,globallinecount
000218EE <AmiBlitz3.ab3@3230>   JSR check_of_same_source
000218F2 <AmiBlitz3.ab3@3231>   BSR.w call_setpointerbusy
000218F6 <AmiBlitz3.ab3@3232>   BSR.w setcvars
000218FE <AmiBlitz3.ab3@3233>   MOVE.w #$8000,globalvarpointer
00021908 <AmiBlitz3.ab3@3234>   MOVE.l #newtype_quick,defaulttype
0002190E <AmiBlitz3.ab3@3235>   MOVE.l A7,passstack
00021918 <AmiBlitz3.ab3@3236>   MOVE.l #firstitem_,sourceline
00021922 <AmiBlitz3.ab3@3237>   MOVE.w numlines_org,linesleft
0002192C <AmiBlitz3.ab3@3238>   MOVE.l numlines,numlines2
00021932 <AmiBlitz3.ab3@3239>   ADDQ.w #1,linesleft
00021938 <AmiBlitz3.ab3@3240>   ADDQ.l #1,numlines2
00021942 <AmiBlitz3.ab3@3241>   MOVE.l #-1,linenumat
00021946 <AmiBlitz3.ab3@3242>   BSR.w resetlibs
0002194A <AmiBlitz3.ab3@3243>   BSR.w Aclearallvars
00021950 <AmiBlitz3.ab3@3244>   LEA progress_per_line+2,A0
00021952 <AmiBlitz3.ab3@3245>   MOVEQ.l #$03,D0
00021954 <AmiBlitz3.ab3@3248>     CLR.w (A0)+
00021958 <AmiBlitz3.ab3@3249>   DBF D0,JL_0_40EC
0002195E <AmiBlitz3.ab3@3252>   LEA _include,a0
00021962 <AmiBlitz3.ab3@3253>   MOVEM.l a0-a6/d0-d7,-(a7)
00021968 <AmiBlitz3.ab3@3254>   LEA ptr_parameterstore,a1
0002196A <AmiBlitz3.ab3@3257>     MOVE.b (a0)+,(a1)+
0002196E <AmiBlitz3.ab3@3258>   BNE 'l1b
00021970 <AmiBlitz3.ab3@3260>   MOVEQ #9,d2
00021976 <AmiBlitz3.ab3@3261>   JSR findlabel2
0002197A <AmiBlitz3.ab3@3262>   BNE 'd
00021982 <AmiBlitz3.ab3@3263>   MOVE.l #0,8(a2)
00021986 <AmiBlitz3.ab3@3264>   MOVEM.l (a7)+,a0-a6/d0-d7
0002198A <AmiBlitz3.ab3@3265> BRA 'd2
00021990 <AmiBlitz3.ab3@3268>   JSR addlabelhash
00021998 <AmiBlitz3.ab3@3269>   MOVE.l #$1,$4(A2)
000219A0 <AmiBlitz3.ab3@3270>   MOVE.l #0,8(a2)
000219A4 <AmiBlitz3.ab3@3271>   MOVEM.l (a7)+,a0-a6/d0-d7
000219AA <AmiBlitz3.ab3@3274>   LEA _debug,a0
000219AE <AmiBlitz3.ab3@3275>   MOVEM.l a0-a6/d0-d7,-(a7)
000219B4 <AmiBlitz3.ab3@3276>   LEA ptr_parameterstore,a1
000219B6 <AmiBlitz3.ab3@3279>     MOVE.b (a0)+,(a1)+
000219BA <AmiBlitz3.ab3@3280>   BNE 'l9b
000219BC <AmiBlitz3.ab3@3282>   MOVEQ #7,d2
000219C2 <AmiBlitz3.ab3@3283>   JSR findlabel2
000219C6 <AmiBlitz3.ab3@3284>   BNE 'd9
000219CA <AmiBlitz3.ab3@3285>   MOVE.b debugmode(PC),D0
000219CC <AmiBlitz3.ab3@3286>   EXT.w d0
000219CE <AmiBlitz3.ab3@3287>   EXT.l d0
000219D2 <AmiBlitz3.ab3@3288>   MOVE.l d0,8(a2)
000219D6 <AmiBlitz3.ab3@3289>   MOVEM.l (a7)+,a0-a6/d0-d7
000219DA <AmiBlitz3.ab3@3290> BRA 'd9b
000219E0 <AmiBlitz3.ab3@3293>   JSR addlabelhash
000219E8 <AmiBlitz3.ab3@3294>   MOVE.l #$1,$4(A2)
000219EC <AmiBlitz3.ab3@3295>   MOVE.b debugmode(PC),D0
000219EE <AmiBlitz3.ab3@3296>   EXT.w d0
000219F0 <AmiBlitz3.ab3@3297>   EXT.l d0
000219F4 <AmiBlitz3.ab3@3298>   MOVE.l d0,8(a2)
000219F8 <AmiBlitz3.ab3@3299>   MOVEM.l (a7)+,a0-a6/d0-d7
000219FE <AmiBlitz3.ab3@3302>   MOVE.l #firstitem_,a0
00021A00 <AmiBlitz3.ab3@3303>   MOVE.l (a0),a0
00021A04 <AmiBlitz3.ab3@3304>   LEA 9(a0),a0
00021A0C <AmiBlitz3.ab3@3305>   MOVE.w #0,exdebug
00021A12 <AmiBlitz3.ab3@3306>   TST.b debugmode
00021A16 <AmiBlitz3.ab3@3307>    BEQ 'l10
00021A18 <AmiBlitz3.ab3@3310>   MOVE.b (a0)+,d0
00021A1C <AmiBlitz3.ab3@3311>    BEQ 'l10
00021A20 <AmiBlitz3.ab3@3312>   CMP.b #$20,d0
00021A24 <AmiBlitz3.ab3@3313>    BEQ 'l2
00021A26 <AmiBlitz3.ab3@3314>   SUBQ.l #1,a0
00021A2C <AmiBlitz3.ab3@3315>   CMP.l #"DEBU",(a0)
00021A30 <AmiBlitz3.ab3@3316>    BNE 'l10
00021A36 <AmiBlitz3.ab3@3317>   CMP.b #"G",4(a0)
00021A3A <AmiBlitz3.ab3@3318>    BNE 'l10
00021A42 <AmiBlitz3.ab3@3319>   MOVE.w #$0,debugversion
00021A4A <AmiBlitz3.ab3@3320>   MOVE.b #1,exdebug
00021A50 <AmiBlitz3.ab3@3323>   LEA nops4,A0
00021A56 <AmiBlitz3.ab3@3324>   LEA dataget,A1
00021A5C <AmiBlitz3.ab3@3325>   JSR pokecode2                                            ;write intro nops
00021A62 <AmiBlitz3.ab3@3326>   MOVE.l #$01010101,d1
00021A68 <AmiBlitz3.ab3@3327>   JSR writedatalong                                        ;for the 4 tempregs
00021A6E <AmiBlitz3.ab3@3328>   JSR writedatalong
00021A74 <AmiBlitz3.ab3@3329>   JSR writedatalong
00021A7A <AmiBlitz3.ab3@3330>   JSR writedatalong
00021A80 <AmiBlitz3.ab3@3331>   TST.b saved0
00021A84 <AmiBlitz3.ab3@3332>    BEQ 'l1
00021A8A <AmiBlitz3.ab3@3333>   MOVE.l #$4e714e71,d1
00021A90 <AmiBlitz3.ab3@3334>   JSR writelong                                            ;add 2 nops
00021A96 <AmiBlitz3.ab3@3335>   MOVE.l #$4e714e71,d1
00021A9C <AmiBlitz3.ab3@3336>   JSR writelong                                            ;add 2 nops
00021AA2 <AmiBlitz3.ab3@3337>   MOVE.l #$4e714e71,d1
00021AA8 <AmiBlitz3.ab3@3338>   JSR writelong                                            ;add 2 nops
00021AAE <AmiBlitz3.ab3@3339>    MOVE.l #$4e714e71,d1
00021AB4 <AmiBlitz3.ab3@3340>   JSR writelong                                            ;add 2 nops
00021AB8 <AmiBlitz3.ab3@3343>   MOVE.b debugmode(PC),D1
00021ABC <AmiBlitz3.ab3@3344>    BEQ.b JL_0_4132
00021AC6 <AmiBlitz3.ab3@3345>   MOVE.b debugmode,storedebugmode
00021ACA <AmiBlitz3.ab3@3346>   MOVE.w #$FFDC,D1
00021ACE <AmiBlitz3.ab3@3347>    BSR.w uselib
00021AD4 <AmiBlitz3.ab3@3348>   TST.w debugversion                                       ;make a version for debugger
00021AD8 <AmiBlitz3.ab3@3349>    BNE.b JL_0_412A
00021ADC <AmiBlitz3.ab3@3353>   MOVE.w #$FA3C,D1
00021AE0 <AmiBlitz3.ab3@3354>    BSR.w uselib
00021AE4 <AmiBlitz3.ab3@3355>   MOVE.w #$0001,D1
00021AE8 <AmiBlitz3.ab3@3356>    BSR.w uselib
00021AEC <AmiBlitz3.ab3@3357> BRA.b JL_0_4132
00021AF0 <AmiBlitz3.ab3@3360>   MOVE.w #$FA32,D1
00021AF4 <AmiBlitz3.ab3@3361>   BSR.w uselib
00021AF8 <AmiBlitz3.ab3@3364>   BSR.w nextline
00021AFE <AmiBlitz3.ab3@3365>   CLR.l linenum
00021B04 <AmiBlitz3.ab3@3366>   CLR.l stacktrack
00021B0A <AmiBlitz3.ab3@3369>   ADDQ.l #1,linenum
00021B14 <AmiBlitz3.ab3@3370>   MOVE.l destpointer,destpointer2
00021B1A <AmiBlitz3.ab3@3371>   MOVE.l a5,sourceline2
00021B1E <AmiBlitz3.ab3@3372>   BSR.w compile_line                                        ;compile pass
00021B22 <AmiBlitz3.ab3@3375>   BSR.w nextline
00021B26 <AmiBlitz3.ab3@3376>    BNE.w JL_0_4136
00021B2A <AmiBlitz3.ab3@3377>   BSR.w JUMP_do_runerrson
00021B2E <AmiBlitz3.ab3@3378>   BSR.w pointchk
00021B34 <AmiBlitz3.ab3@3379>   TST.b objectcount
00021B38 <AmiBlitz3.ab3@3380>    BNE macenderr
00021B3E <AmiBlitz3.ab3@3381>   CLR.l linenumat
00021B42 <AmiBlitz3.ab3@3382>   BSR.w errchx2
00021B4C <AmiBlitz3.ab3@3383>   CMP.l #-1,bssend
00021B50 <AmiBlitz3.ab3@3384>    BNE 'l30
00021B5A <AmiBlitz3.ab3@3385>   MOVE.l destpointer,bssend                                ;compile end
00021B60 <AmiBlitz3.ab3@3388>   MOVE.l destpointer,d0
00021B6A <AmiBlitz3.ab3@3389>   CMP.l #-1,bssstart
00021B6E <AmiBlitz3.ab3@3390>   BNE 'lnf6
00021B78 <AmiBlitz3.ab3@3391>   CMP.l #-1,chipstart
00021B7C <AmiBlitz3.ab3@3392>   BNE 'lnf6
00021B80 <AmiBlitz3.ab3@3393> BRA 'leven4
00021B86 <AmiBlitz3.ab3@3396>   MOVE.l destpointer,d1
00021B88 <AmiBlitz3.ab3@3397>   ADDQ.l #3,d1
00021B8E <AmiBlitz3.ab3@3398>   AND.l #$fffffffc,d1                                      ;bug ?
00021B94 <AmiBlitz3.ab3@3399>   MOVE.l d1,destpointer
00021B9E <AmiBlitz3.ab3@3402>   MOVE.l destpointer,codeend
00021BA8 <AmiBlitz3.ab3@3403>   CMP.l #-1,chipend
00021BAC <AmiBlitz3.ab3@3404>   BNE 'l31
00021BB6 <AmiBlitz3.ab3@3405>   MOVE.l destpointer,chipend
00021BBC <AmiBlitz3.ab3@3408>   MOVE.l destpointer,d1
00021BBE <AmiBlitz3.ab3@3409>   ADDQ.l #1,d1
00021BC4 <AmiBlitz3.ab3@3410>   AND.l #$fffffffe,d1                                     ;new evenexit
00021BCA <AmiBlitz3.ab3@3411>   MOVE.l d1,destpointer
00021BCE <AmiBlitz3.ab3@3412>   MOVE.b debugmode(PC),D1
00021BD2 <AmiBlitz3.ab3@3413>    BEQ.b JL_0_4180
00021BD6 <AmiBlitz3.ab3@3414>    BSR.w debugstuff
00021BDA <AmiBlitz3.ab3@3415>   MOVE.w #$C300,D1
00021BE0 <AmiBlitz3.ab3@3416>    JSR Atokejsr
00021BE4 <AmiBlitz3.ab3@3417>    BSR.w debugstuff
00021BE8 <AmiBlitz3.ab3@3418>   MOVE.l eopcode(PC),D1
00021BEE <AmiBlitz3.ab3@3419>    JSR writelong
00021BF2 <AmiBlitz3.ab3@3420>   MOVE.l lastcontlink(PC),D1
00021BF6 <AmiBlitz3.ab3@3421>    BEQ.b JL_0_4180
00021BF8 <AmiBlitz3.ab3@3422>   MOVEA.l D1,A0
00021BFC <AmiBlitz3.ab3@3423>   CLR.w $6(A0)
00021C06 <AmiBlitz3.ab3@3429>   MOVE.l destpointer,endop                                ;where end goes...
00021C0C <AmiBlitz3.ab3@3431>   TST.w blitzmode
00021C10 <AmiBlitz3.ab3@3432>   BEQ.w JL_0_4198
00021C14 <AmiBlitz3.ab3@3433>   BSR.w do_AMIGA                                          ;back to amiga if in blitz!
00021C1A <AmiBlitz3.ab3@3436>   TST.w intsused
00021C1E <AmiBlitz3.ab3@3437>   BEQ.b JL_0_41AA
00021C22 <AmiBlitz3.ab3@3438>   MOVE.w #$C105,D1                                        ;interupts off!
00021C28 <AmiBlitz3.ab3@3439>   JSR tokejsr2
00021C2C <AmiBlitz3.ab3@3442>   BSR.w calcstatic
00021C32 <AmiBlitz3.ab3@3443>   MOVE.w D4,numstatic
00021C38 <AmiBlitz3.ab3@3444>   MOVE.l D3,staticdata
00021C3C <AmiBlitz3.ab3@3445>    BSR.w calcmaxs
00021C42 <AmiBlitz3.ab3@3447>   TST.l tokeslist
00021C46 <AmiBlitz3.ab3@3448>    BEQ.b JL_0_41F8
00021C4C <AmiBlitz3.ab3@3449>   MOVE.w gotocode,D1                                       ;jmp!
00021C52 <AmiBlitz3.ab3@3450>    JSR writeword
00021C5C <AmiBlitz3.ab3@3451>   MOVE.l destpointer,endjmpat
00021C60 <AmiBlitz3.ab3@3452>    BSR.w addoff
00021C66 <AmiBlitz3.ab3@3453>    JSR writelong                                           
00021C6A <AmiBlitz3.ab3@3455>    BSR.w JL_0_6C76                                         ;has to be done before finits!
00021C70 <AmiBlitz3.ab3@3459>   TST.w dontwrite
00021C74 <AmiBlitz3.ab3@3460>    BNE.b JL_0_41F8
00021C78 <AmiBlitz3.ab3@3461>   MOVEA.l endjmpat(PC),A4
00021C7E <AmiBlitz3.ab3@3462>   MOVE.l destpointer,(A4)
00021C84 <AmiBlitz3.ab3@3465>   TST.b returncode
00021C88 <AmiBlitz3.ab3@3466>   BEQ 'l2
00021C8C <AmiBlitz3.ab3@3467>   MOVE.w #$2e80,d1
00021C92 <AmiBlitz3.ab3@3468>   JSR writeword
00021C98 <AmiBlitz3.ab3@3471>   JSR JL_0_B98A
00021C9E <AmiBlitz3.ab3@3472>   TST.b returncode
00021CA2 <AmiBlitz3.ab3@3473>   BEQ 'l3
00021CA6 <AmiBlitz3.ab3@3474>   MOVE.w #$4e75,d1
00021CAC <AmiBlitz3.ab3@3475>   JSR writeword
00021CB0 <AmiBlitz3.ab3@3476> BRA 'l1
00021CB6 <AmiBlitz3.ab3@3479>   MOVE.l #$70004E75,D1
00021CBC <AmiBlitz3.ab3@3480>   JSR writelong                                            ;write moveq #0,d0:rts
00021CC2 <AmiBlitz3.ab3@3483>   JSR JL_0_B73E
00021CC6 <AmiBlitz3.ab3@3484>   BSR.w asmfixer
00021CCA <AmiBlitz3.ab3@3485>   BSR.w close_compilewin
00021CCE <AmiBlitz3.ab3@3486> BRA.w call_setpointernormal
00021CD4 <AmiBlitz3.ab3@3490> JMP do_runerrson
00021CD6 <AmiBlitz3.ab3@3494> eopcode:    Dc.b $70,$03                                   ;MOVEQ #$03,D0
00021CD8 <AmiBlitz3.ab3@3495>             Dc.b $4E,$40                                   ;TRAP  #00
00021CDC <AmiBlitz3.ab3@3497> endjmpat:   Ds.l 1
00021CE2 <AmiBlitz3.ab3@3501>   MOVEA.l newtype_string,A2
00021CE8 <AmiBlitz3.ab3@3502>   MOVE.l #MaxByte,D0                                       ;move.l #$ff,d0 org source
00021CEC <AmiBlitz3.ab3@3505>     CMPA.w #$0,A2
00021CF0 <AmiBlitz3.ab3@3506>      BEQ.w pointchk_done
00021CF4 <AmiBlitz3.ab3@3507>     CMP.l $4(A2),D0
00021CF8 <AmiBlitz3.ab3@3508>      BNE.w pointchk_next
00021D00 <AmiBlitz3.ab3@3509>     MOVE.w $8(A2),linenumat+2                              ;type not found  ;move 8(a2),linenumat org source
00021D04 <AmiBlitz3.ab3@3510> BRA.w notypeerr
00021D06 <AmiBlitz3.ab3@3513>     MOVEA.l (A2),A2
00021D0A <AmiBlitz3.ab3@3514> BRA.w pointchk_loop
00021D0C <AmiBlitz3.ab3@3517> RTS
00021D12 <AmiBlitz3.ab3@3521>   LEA labelbase,A2
00021D14 <AmiBlitz3.ab3@3525>   MOVE.l (A2),D0                                           ;testlabels
00021D18 <AmiBlitz3.ab3@3526>    BEQ.w errchx2_done
00021D1A <AmiBlitz3.ab3@3527>   MOVEA.l D0,A2
00021D1E <AmiBlitz3.ab3@3528>   MOVE.l $4(A2),D0
00021D22 <AmiBlitz3.ab3@3529>   BTST #$0,D0
00021D26 <AmiBlitz3.ab3@3530>    BNE.w errchx2_loop
00021D2A <AmiBlitz3.ab3@3531>   MOVE.l $8(A2),D0
00021D2E <AmiBlitz3.ab3@3532>    BNE.w errchx2_loop
00021D36 <AmiBlitz3.ab3@3533>   MOVE.w $10(A2),linenumat+2
00021D38 <AmiBlitz3.ab3@3534>   MOVEQ #0,d0
00021D3C <AmiBlitz3.ab3@3535>   MOVE.b $12(a2),d0
00021D44 <AmiBlitz3.ab3@3536>   MOVE.w 0(a2,d0),linenumat
00021D4A <AmiBlitz3.ab3@3537> JMP nolaberr                                               ;label not found
00021D50 <AmiBlitz3.ab3@3540>   MOVE.l concomsp,D0
00021D56 <AmiBlitz3.ab3@3541>   CMP.l #concomstack,D0
00021D5A <AmiBlitz3.ab3@3542>    BNE.w chxerr4
00021D60 <AmiBlitz3.ab3@3543>   MOVE.w connest,D1
00021D64 <AmiBlitz3.ab3@3544>    BNE.w chxerr4
00021D66 <AmiBlitz3.ab3@3547>   MOVE.l D1,-(A7)
00021D6C <AmiBlitz3.ab3@3548>   MOVE.l firstsel,D1
00021D70 <AmiBlitz3.ab3@3549>    BNE.w errchx_err1
00021D76 <AmiBlitz3.ab3@3550>   MOVE.l firstrep,D1
00021D7A <AmiBlitz3.ab3@3551>    BNE.w errchx_err2
00021D80 <AmiBlitz3.ab3@3552>   MOVE.w intstring,D1
00021D84 <AmiBlitz3.ab3@3553>    BNE.w errchx_err3
00021D88 <AmiBlitz3.ab3@3554>   MOVE.l 4(a7),d1
00021D8E <AmiBlitz3.ab3@3555>   MOVE.w proceduremode,D1
00021D92 <AmiBlitz3.ab3@3556>    BNE.w errchx_err6
00021D98 <AmiBlitz3.ab3@3557>   MOVE.l firstiff,d1
00021D9C <AmiBlitz3.ab3@3558>    BNE errchx_err5
00021DA2 <AmiBlitz3.ab3@3559>   MOVE.l firstfor,D1
00021DA6 <AmiBlitz3.ab3@3560>    BNE.w errchx_err7
00021DA8 <AmiBlitz3.ab3@3561>   MOVE.l (A7)+,D1
00021DAA <AmiBlitz3.ab3@3562> RTS
00021DB4 <AmiBlitz3.ab3@3566>   MOVE.l sellineat,linenumat
00021DBA <AmiBlitz3.ab3@3567> JMP selerrz
00021DC4 <AmiBlitz3.ab3@3570>   MOVE.l replineat,linenumat
00021DCA <AmiBlitz3.ab3@3571> JMP unterr3
00021DD4 <AmiBlitz3.ab3@3574>   MOVE.l intlineat,linenumat
00021DDA <AmiBlitz3.ab3@3575> JMP interr2
00021DE4 <AmiBlitz3.ab3@3578>   MOVE.l iflineat,linenumat
00021DEA <AmiBlitz3.ab3@3579> JMP noenderr
00021DF4 <AmiBlitz3.ab3@3582>   MOVE.l prolineat,linenumat
00021DFA <AmiBlitz3.ab3@3583> JMP nopenderr
00021E04 <AmiBlitz3.ab3@3586>   MOVE.l forlineat,linenumat
00021E0A <AmiBlitz3.ab3@3587> JMP nonexterr
00021E14 <AmiBlitz3.ab3@3590>   MOVE.l ciflineat,linenumat
00021E1A <AmiBlitz3.ab3@3591> JMP nocenderr
00021E24 <AmiBlitz3.ab3@3595>   MOVE.l data1,maxsat
00021E26 <AmiBlitz3.ab3@3596>   MOVEQ.l #$00,D4
00021E2C <AmiBlitz3.ab3@3597>   MOVEA.l libpointer,A2
00021E30 <AmiBlitz3.ab3@3600>     CMPA.w #$0,A2
00021E34 <AmiBlitz3.ab3@3601>      BEQ.w calcmaxs_done
00021E38 <AmiBlitz3.ab3@3602>     TST.w $C(A2)
00021E3C <AmiBlitz3.ab3@3603>      BPL.w calcmaxs_next
00021E40 <AmiBlitz3.ab3@3604>     MOVE.l $12(A2),D0
00021E44 <AmiBlitz3.ab3@3605>     TST.w -$2(A2,D0.L)
00021E48 <AmiBlitz3.ab3@3606>      BEQ.w calcmaxs_next
00021E4A <AmiBlitz3.ab3@3607>     ADDQ.w #1,D4
00021E4E <AmiBlitz3.ab3@3608>     MOVE.w -$6(A2,D0.L),D1
00021E52 <AmiBlitz3.ab3@3609>     BSR.w pokedata1
00021E54 <AmiBlitz3.ab3@3610>     MOVEQ.l #$01,D1
00021E58 <AmiBlitz3.ab3@3611>     MOVE.w -$2(A2,D0.L),D2
00021E5A <AmiBlitz3.ab3@3612>     LSL.w D2,D1
00021E5E <AmiBlitz3.ab3@3613>     MULU -$4(A2,D0.L),D1                                   ;write objectspacesize
00021E62 <AmiBlitz3.ab3@3614>     BSR.w writedatalong
00021E64 <AmiBlitz3.ab3@3617>     MOVEA.l (A2),A2
00021E68 <AmiBlitz3.ab3@3618> BRA.w calcmaxs_loop
00021E6E <AmiBlitz3.ab3@3621>   MOVE.w D4,maxsused
00021E72 <AmiBlitz3.ab3@3622>    BEQ.w calcmaxs_done2
00021E76 <AmiBlitz3.ab3@3623>   MOVE.w #$FFFA,D1                                         ;;use memlib
00021E7A <AmiBlitz3.ab3@3624> BRA.w uselib
00021E7C <AmiBlitz3.ab3@3627> RTS
00021E82 <AmiBlitz3.ab3@3631>    MOVE.l a7,stackaddr
00021E86 <AmiBlitz3.ab3@3632>    BSR.w compile_term
00021E8A <AmiBlitz3.ab3@3633>    BSR.w reget
00021E8E <AmiBlitz3.ab3@3634>    BNE.w illeolerr
00021E94 <AmiBlitz3.ab3@3635>    TST.w dontwrite
00021E98 <AmiBlitz3.ab3@3636>    BNE 'l1
00021E9E <AmiBlitz3.ab3@3637>    TST.l stacktrack
00021EA2 <AmiBlitz3.ab3@3638>    BNE errormsg_stack
00021EA6 <AmiBlitz3.ab3@3641>    CMP.w #-$7FDE,D0
00021EAA <AmiBlitz3.ab3@3642>    BNE.w compile_line_notelse
00021EB0 <AmiBlitz3.ab3@3643>    JSR do_else2
00021EB4 <AmiBlitz3.ab3@3644> BRA.w compile_line
00021EB6 <AmiBlitz3.ab3@3647>   TST.w D0
00021EBA <AmiBlitz3.ab3@3648>   BNE.w compile_line
00021EC0 <AmiBlitz3.ab3@3653>   MOVE.l firstiff,D0
00021EC4 <AmiBlitz3.ab3@3654>    BEQ.w compile_line_done
00021EC6 <AmiBlitz3.ab3@3655>   MOVEA.l D0,A0
00021ECA <AmiBlitz3.ab3@3656>   MOVE.w $C(A0),D1
00021ECE <AmiBlitz3.ab3@3657>    BPL.w compile_line_done
00021ED2 <AmiBlitz3.ab3@3661>   BCLR #$F,D1
00021ED8 <AmiBlitz3.ab3@3662>    JSR AJL_0_D7B8
00021EDE <AmiBlitz3.ab3@3663>    JSR AJL_0_D81C
00021EE2 <AmiBlitz3.ab3@3664> BRA.w compile_line_unthen
00021EE4 <AmiBlitz3.ab3@3667> RTS
00021EEA <AmiBlitz3.ab3@3671>   LEA lastgloballabel,A0
00021EEC <AmiBlitz3.ab3@3672>   TST.b (A0)
00021EF0 <AmiBlitz3.ab3@3673>   BEQ.w nolocerr
00021EF6 <AmiBlitz3.ab3@3674>   LEA ptr_parameterstore,A1
00021EF8 <AmiBlitz3.ab3@3675>   MOVEQ.l #$00,D2
00021EFA <AmiBlitz3.ab3@3678>   ADDQ.w #1,D2
00021EFC <AmiBlitz3.ab3@3679>   MOVE.b (A0)+,(A1)+
00021F00 <AmiBlitz3.ab3@3680>    BNE.w createlab_loop
00021F06 <AmiBlitz3.ab3@3681>   MOVE.b #$27,-$1(A1)
00021F08 <AmiBlitz3.ab3@3682>   MOVE.w D2,-(A7)
00021F0E <AmiBlitz3.ab3@3683>    JSR makename4
00021F10 <AmiBlitz3.ab3@3684>   CMP.w (A7)+,D2
00021F14 <AmiBlitz3.ab3@3685>    BEQ.w syntaxerr
00021F16 <AmiBlitz3.ab3@3686>    TST.w d0
00021F1A <AmiBlitz3.ab3@3687>    BPL createlab_done
00021F22 <AmiBlitz3.ab3@3688>    MOVE.w #$3a,lastchar
00021F24 <AmiBlitz3.ab3@3689>    SUBQ.l #2,a5
00021F26 <AmiBlitz3.ab3@3692> RTS
00021F30 <AmiBlitz3.ab3@3696>   MOVE.l #forthstack,forthsp
00021F3A <AmiBlitz3.ab3@3697>   MOVE.l #precstack,precsp
00021F3C <AmiBlitz3.ab3@3698> RTS
00021F3E <AmiBlitz3.ab3@3705>   MOVEQ.l #$00,D4
00021F68 <AmiBlitz3.ab3@3708>   !basic
00021FAA <AmiBlitz3.ab3@3709> 
00021FBA <AmiBlitz3.ab3@3711>   If (c_abort = 1)           ; check if set
00021FBC <AmiBlitz3.ab3@3712>     MOVEQ.l #-$01,d4
00021FC2 <AmiBlitz3.ab3@3713>     MOVE.w D4,stopit
00021FE0 <AmiBlitz3.ab3@3714>     !asm
00021FE4 <AmiBlitz3.ab3@3715>     BRA chkrealstop__skip
00022002 <AmiBlitz3.ab3@3717>   !asm
00022004 <AmiBlitz3.ab3@3718>   MOVEQ.l #$00,D6
00022006 <AmiBlitz3.ab3@3719>   MOVEQ.l #$00,D7                                          ; clr Z-Flag for beq.b in chkstop_chk
00022008 <AmiBlitz3.ab3@3723> RTS
0002200C <AmiBlitz3.ab3@3727>   MOVE.w stopit(PC),D0
00022010 <AmiBlitz3.ab3@3728>   BEQ chkstop__chk
00022016 <AmiBlitz3.ab3@3729>   SUBQ.w #1,stopit
00022018 <AmiBlitz3.ab3@3733> RTS
00022020 <AmiBlitz3.ab3@3736>   MOVE.w #2000,stopit
00022024 <AmiBlitz3.ab3@3737>   BSR.w chkrealstop
00022028 <AmiBlitz3.ab3@3738>   BEQ.b chkstop__rts
0002202C <AmiBlitz3.ab3@3740>   BSR.w close_compilewin
00022030 <AmiBlitz3.ab3@3741>   BSR.w call_setpointernormal
00022036 <AmiBlitz3.ab3@3743>   MOVEA.l errstack,A7
0002203C <AmiBlitz3.ab3@3744>   MOVEA.l errcont,A0
00022044 <AmiBlitz3.ab3@3745>   MOVE.w #-1,anyerrs
00022046 <AmiBlitz3.ab3@3746> JMP (A0)
0002204A <AmiBlitz3.ab3@3749> d_pc:           Ds.l 1
0002204E <AmiBlitz3.ab3@3750> d_bigpc:        Ds.l 1
00022050 <AmiBlitz3.ab3@3751> d_nomemleft:    Ds.w 1
00022054 <AmiBlitz3.ab3@3752> cont_pc:        Ds.l 1
00022058 <AmiBlitz3.ab3@3753> cont_pc2:       Ds.l 1
0002205C <AmiBlitz3.ab3@3754> lastcontlink:   Ds.l 1
00022060 <AmiBlitz3.ab3@3758>   ORI.w #$4E40,D1
00022064 <AmiBlitz3.ab3@3759> BRA.w JUMP_writeword
0002206A <AmiBlitz3.ab3@3763>   TST.b debugmode
0002206E <AmiBlitz3.ab3@3764>   BEQ.w debugstuff__rts
00022074 <AmiBlitz3.ab3@3771>   TST.w dirmode                                            ;or while in direct mode...
00022078 <AmiBlitz3.ab3@3772>    BNE debugstuff__rts
00022082 <AmiBlitz3.ab3@3773>   MOVE.l destpointer,d_pc
0002208C <AmiBlitz3.ab3@3774>   MOVE.l bigpc,d_bigpc
00022096 <AmiBlitz3.ab3@3775>   MOVE.w dontwrite,d_nomemleft
0002209A <AmiBlitz3.ab3@3776>   MOVEM.l D0-D1,-(A7)
0002209C <AmiBlitz3.ab3@3777>   MOVEQ.l #$01,D1
000220A0 <AmiBlitz3.ab3@3778>    BSR.w writetrap                                         ;write the adress to sourceline
000220A6 <AmiBlitz3.ab3@3782>    MOVE.l destpointer,D0
000220AC <AmiBlitz3.ab3@3783>   MOVE.l cont_pc,D1
000220B2 <AmiBlitz3.ab3@3784>   MOVE.l D0,cont_pc
000220B8 <AmiBlitz3.ab3@3785>   MOVE.l D1,cont_pc2
000220BC <AmiBlitz3.ab3@3786>    BEQ.b debugstuff__skip
000220C2 <AmiBlitz3.ab3@3787>   TST.w dontwrite
000220C6 <AmiBlitz3.ab3@3788>    BNE.b debugstuff__skip
000220C8 <AmiBlitz3.ab3@3789>   MOVEA.l D1,A4
000220CA <AmiBlitz3.ab3@3790>   SUB.l A4,D0
000220CE <AmiBlitz3.ab3@3791>   MOVE.w D0,$6(A4)
000220D4 <AmiBlitz3.ab3@3792>   MOVE.l A4,lastcontlink
000220DA <AmiBlitz3.ab3@3795>   TST.w ininclude
000220E0 <AmiBlitz3.ab3@3797>   TST.w makeexec
000220E4 <AmiBlitz3.ab3@3798>   BEQ 'l1
000220EA <AmiBlitz3.ab3@3799>   TST.w exdebug
000220EE <AmiBlitz3.ab3@3800>   BEQ 'noinc
000220F2 <AmiBlitz3.ab3@3803>   MOVEM.l a0-a1/d2/d3,-(a7)                                ;write source for includes
000220F8 <AmiBlitz3.ab3@3804>   MOVE.l data1,d1
000220FE <AmiBlitz3.ab3@3805>   TST.b firsttime
00022102 <AmiBlitz3.ab3@3806>   BNE 'nofirst
0002210A <AmiBlitz3.ab3@3807>   MOVE.b #1,firsttime
00022110 <AmiBlitz3.ab3@3808>   MOVE.l #"DuCk",d1                                        ; to found from debugger the code start
00022116 <AmiBlitz3.ab3@3809>   JSR writedatalong
0002211C <AmiBlitz3.ab3@3810>   MOVE.l #"AmiB",d1
00022122 <AmiBlitz3.ab3@3811>   JSR writedatalong
00022128 <AmiBlitz3.ab3@3812>   MOVE.l destbufferstart,d1
0002212E <AmiBlitz3.ab3@3813>   JSR writedatalong
00022134 <AmiBlitz3.ab3@3814>   TST.w dontwrite
00022138 <AmiBlitz3.ab3@3815>   BNE 'nohunk
0002213E <AmiBlitz3.ab3@3816>   MOVE.l data1,d1
00022140 <AmiBlitz3.ab3@3817>   SUBQ.l #4,d1
00022146 <AmiBlitz3.ab3@3818>   SUB.l destbufferstart,d1
00022148 <AmiBlitz3.ab3@3819>   MOVE.l d1,d2
0002214E <AmiBlitz3.ab3@3820>   JSR addhunkoffset
00022154 <AmiBlitz3.ab3@3823>   MOVE.l destpointer,d2
0002215A <AmiBlitz3.ab3@3824>   MOVE.l data1,d1
00022160 <AmiBlitz3.ab3@3827>   MOVE.l destpointer,d2
00022162 <AmiBlitz3.ab3@3828>   MOVE.l d1,d3
00022168 <AmiBlitz3.ab3@3829>   SUB.l destbufferstart,d1
0002216E <AmiBlitz3.ab3@3830>   OR.l #$80000000,d1
00022174 <AmiBlitz3.ab3@3831>   JSR writelong
0002217A <AmiBlitz3.ab3@3832>   TST.w inmacro
0002217E <AmiBlitz3.ab3@3833>   BEQ 'sc1
00022184 <AmiBlitz3.ab3@3834>   MOVE.l myline,a0
00022188 <AmiBlitz3.ab3@3836> BRA 'inc2
0002218E <AmiBlitz3.ab3@3838>  'sc1  TST.w ininclude
00022192 <AmiBlitz3.ab3@3839>   BEQ 'inc
00022198 <AmiBlitz3.ab3@3840>   MOVE.l includesourceline,a0
0002219C <AmiBlitz3.ab3@3841> BRA 'inc2
000221A2 <AmiBlitz3.ab3@3844>   MOVE.l sourceline,a0
000221A6 <AmiBlitz3.ab3@3845>   LEA 9(a0),a0
000221A8 <AmiBlitz3.ab3@3848>   MOVE.l d1,d2
000221AA <AmiBlitz3.ab3@3849>   MOVE.l A5,D1
000221AC <AmiBlitz3.ab3@3850>   SUB.l a0,D1
000221B2 <AmiBlitz3.ab3@3851>   ADD.l #9,d1
000221B6 <AmiBlitz3.ab3@3852>   BSR.w JUMP_writeword
000221BC <AmiBlitz3.ab3@3853>   CMP.l #9,d1
000221C0 <AmiBlitz3.ab3@3854>   BEQ 'pos1
000221C6 <AmiBlitz3.ab3@3855>   TST.w dontwrite
000221CA <AmiBlitz3.ab3@3856>   BNE 'nopad
000221D0 <AmiBlitz3.ab3@3857>   MOVE.l lastsourceline,d1
000221D4 <AmiBlitz3.ab3@3858>   MOVE.l d1,-6(a4)
000221D8 <AmiBlitz3.ab3@3859> BRA 'nopad
000221DE <AmiBlitz3.ab3@3862>   MOVE.l d2,lastsourceline
000221E8 <AmiBlitz3.ab3@3863>    MOVE.l destpointer,lastdestpointer
000221EA <AmiBlitz3.ab3@3864>    MOVEQ #0,d1
000221F0 <AmiBlitz3.ab3@3865>   MOVE.l data1,d2
000221F6 <AmiBlitz3.ab3@3866>   SUB.l destbufferstart,d2
000221FC <AmiBlitz3.ab3@3867>   JSR writedatalong
00022202 <AmiBlitz3.ab3@3868>   TST.w dontwrite
00022206 <AmiBlitz3.ab3@3869>   BNE 'no2
0002220C <AmiBlitz3.ab3@3870>   JSR addhunkoffset
00022212 <AmiBlitz3.ab3@3873>   MOVE.l data1,d2
00022218 <AmiBlitz3.ab3@3874>   SUB.l destbufferstart,d2
0002221E <AmiBlitz3.ab3@3875>   JSR writedatalong
00022224 <AmiBlitz3.ab3@3876>   TST.w dontwrite
00022228 <AmiBlitz3.ab3@3877>   BNE 'no
0002222E <AmiBlitz3.ab3@3878>   JSR addhunkoffset
00022234 <AmiBlitz3.ab3@3879>   MOVE.l lastwritedat,a1
0002223A <AmiBlitz3.ab3@3880>   CMP.l #0,a1
0002223E <AmiBlitz3.ab3@3881>   BEQ 'no
00022240 <AmiBlitz3.ab3@3882>   MOVE.l d3,(a1)
00022248 <AmiBlitz3.ab3@3883>   MOVE.l prevwritedat,4(a1)
00022252 <AmiBlitz3.ab3@3884>   MOVE.l lastwritedat,prevwritedat
00022258 <AmiBlitz3.ab3@3887>   MOVE.l d3,lastwritedat
0002225A <AmiBlitz3.ab3@3888>   MOVEQ #4,d1
0002225E <AmiBlitz3.ab3@3889>   BSR pokedata1b
00022260 <AmiBlitz3.ab3@3892>   MOVE.b (a0)+,d1
00022264 <AmiBlitz3.ab3@3893>   BEQ 'done
00022268 <AmiBlitz3.ab3@3894>   BSR pokedata1b
0002226C <AmiBlitz3.ab3@3895> BRA 'loop
0002226E <AmiBlitz3.ab3@3898>   MOVEQ #0,d1
00022272 <AmiBlitz3.ab3@3899>   BSR pokedata1b
00022278 <AmiBlitz3.ab3@3900>   MOVE.l data1,d1
0002227C <AmiBlitz3.ab3@3901>   BTST #0,d1
00022280 <AmiBlitz3.ab3@3902>   BEQ 'nopad
00022282 <AmiBlitz3.ab3@3903>   MOVEQ #0,d1
00022286 <AmiBlitz3.ab3@3904>   BSR pokedata1b
0002228A <AmiBlitz3.ab3@3907>   MOVEM.l (a7)+,a0-a1/d2/d3
0002228E <AmiBlitz3.ab3@3908> BRA 'noinc2
00022294 <AmiBlitz3.ab3@3911>   MOVE.l sourceline,D1
0002229A <AmiBlitz3.ab3@3913>   JSR writelong
0002229C <AmiBlitz3.ab3@3914>   MOVE.l A5,D1
000222A2 <AmiBlitz3.ab3@3915>   SUB.l sourceline,D1
000222A8 <AmiBlitz3.ab3@3917>   JSR writeword
000222AA <AmiBlitz3.ab3@3920>   MOVEQ.l #$00,D1
000222B0 <AmiBlitz3.ab3@3921>   JSR writeword                                            ; was: BSR.w writeword
000222B4 <AmiBlitz3.ab3@3922>   MOVEM.l (A7)+,D0-D1
000222B6 <AmiBlitz3.ab3@3925> RTS
000222BC <AmiBlitz3.ab3@3929>   TST.b debugmode                                          ;extern debug
000222C0 <AmiBlitz3.ab3@3930>    BEQ.b undodebug__rts
000222C6 <AmiBlitz3.ab3@3931>   TST.b dirmode
000222CA <AmiBlitz3.ab3@3932>   BNE undodebug__rts
000222D4 <AmiBlitz3.ab3@3937>   MOVE.w d_nomemleft,dontwrite
000222DE <AmiBlitz3.ab3@3938>   MOVE.l d_bigpc,bigpc
000222E8 <AmiBlitz3.ab3@3939>   MOVE.l d_pc,destpointer
000222F2 <AmiBlitz3.ab3@3940>   MOVE.l cont_pc2,cont_pc
000222F4 <AmiBlitz3.ab3@3943> RTS
000222FE <AmiBlitz3.ab3@3947>   MOVE.l #forthstack,forthsp
00022308 <AmiBlitz3.ab3@3948>   MOVE.l #precstack,precsp
0002230E <AmiBlitz3.ab3@3949>   CLR.w regnum
00022314 <AmiBlitz3.ab3@3950>   CLR.w nonew
0002231A <AmiBlitz3.ab3@3951>   CLR.w sbasegot
00022324 <AmiBlitz3.ab3@3952>   MOVE.w varcodelen,oldvcodelen
0002232A <AmiBlitz3.ab3@3953>   CLR.w varcodelen
00022332 <AmiBlitz3.ab3@3954>   MOVE.w #-1,lasta6
00022334 <AmiBlitz3.ab3@3955> RTS
0002233A <AmiBlitz3.ab3@3959>   TST.w linemode
0002233E <AmiBlitz3.ab3@3960>   BMI.b smode__skip
00022342 <AmiBlitz3.ab3@3961>   BSR.w undodebug
00022348 <AmiBlitz3.ab3@3962>   MOVE.w linemode,D1
0002234A <AmiBlitz3.ab3@3963>   ADDQ.w #4,A7
0002234C <AmiBlitz3.ab3@3964>   LSL.w #2,D1
00022352 <AmiBlitz3.ab3@3965>   LEA modetable,A0
00022356 <AmiBlitz3.ab3@3966>   MOVEA.l $0(A0,D1.W),A0
0002235A <AmiBlitz3.ab3@3967>   BSR.w reget
0002235C <AmiBlitz3.ab3@3970> JMP (A0)                                                   ;jumptokenroutine
0002235E <AmiBlitz3.ab3@3973> RTS
00022366 <AmiBlitz3.ab3@3978>   MOVE.w #0,leaa0a0+2
0002236C <AmiBlitz3.ab3@3979>   CLR.b nowdeclare
00022372 <AmiBlitz3.ab3@3980>   CLR.b notypecheck
00022378 <AmiBlitz3.ab3@3981>   CLR.l lasttoken
0002237E <AmiBlitz3.ab3@3982>   CLR.b doimmediate
00022384 <AmiBlitz3.ab3@3983>   CLR.w vartype
0002238A <AmiBlitz3.ab3@3984>   CLR.w regnumfunc
00022390 <AmiBlitz3.ab3@3985>   CLR.b optistring
00022396 <AmiBlitz3.ab3@3986>   CLR.b iniffcommand
0002239C <AmiBlitz3.ab3@3987>   CLR.w instringon  ; new
000223A2 <AmiBlitz3.ab3@3988>   CLR.b funccall
000223A8 <AmiBlitz3.ab3@3989>   CLR.l currentfunccall
000223AE <AmiBlitz3.ab3@3990>   CLR.l leftsidetype
000223B4 <AmiBlitz3.ab3@3991>   CLR.l rightsidetype
000223BA <AmiBlitz3.ab3@3992>   CLR.b peekaddrsize
000223C0 <AmiBlitz3.ab3@3993>   CLR.b blitzparloop
000223C6 <AmiBlitz3.ab3@3994>   CLR.b funcparloop
000223CC <AmiBlitz3.ab3@3995>   CLR.w parnum           ;new
000223D2 <AmiBlitz3.ab3@3996>   TST.b debugmode
000223D6 <AmiBlitz3.ab3@3997>    BEQ 'fpu
000223E0 <AmiBlitz3.ab3@4003>   MOVE.b fpu,iee
000223E4 <AmiBlitz3.ab3@4004>   MOVE.w stopit(PC),D0
000223E8 <AmiBlitz3.ab3@4005>   BNE chkstop_chkb
000223EC <AmiBlitz3.ab3@4006>   BSR.w chkstop                                          ; message here
000223F2 <AmiBlitz3.ab3@4009>   SUBQ.w #1,stopit
000223F6 <AmiBlitz3.ab3@4012>   BSR.w findmacro                                          ;macro
000223FC <AmiBlitz3.ab3@4066>   TST.b debugmode
00022400 <AmiBlitz3.ab3@4067>    BEQ.s 'l10
00022406 <AmiBlitz3.ab3@4068>   TST.b exdebug
0002240A <AmiBlitz3.ab3@4069>   BEQ 'l10a
0002240C <AmiBlitz3.ab3@4070>   MOVE.w (a5),d0
00022410 <AmiBlitz3.ab3@4071>   CMP.w #$8025,d0
00022414 <AmiBlitz3.ab3@4072>    BEQ 'l10
00022418 <AmiBlitz3.ab3@4075>   BSR.w debugstuffa                                         ;insert runtimecode debugcode
0002241C <AmiBlitz3.ab3@4079>   BSR.w get1bytemain                                       ;gettokenmain
00022420 <AmiBlitz3.ab3@4080>    BEQ.w undodebug
00022424 <AmiBlitz3.ab3@4081>   CMP.w #$002b,d0                                            ;check for + cast sign
00022428 <AmiBlitz3.ab3@4082>     BNE 'lb2
0002242C <AmiBlitz3.ab3@4083>     BSR.w get1bytemain
00022434 <AmiBlitz3.ab3@4084>     MOVE.b #1,notypecheck
0002243E <AmiBlitz3.ab3@4092>   MOVE.l #forthstack,forthsp
00022448 <AmiBlitz3.ab3@4093>   MOVE.l #precstack,precsp
0002244E <AmiBlitz3.ab3@4094>   CLR.w regnum
00022454 <AmiBlitz3.ab3@4095>   CLR.w nonew
0002245A <AmiBlitz3.ab3@4096>   CLR.w sbasegot
00022464 <AmiBlitz3.ab3@4097>   MOVE.w varcodelen,oldvcodelen
0002246A <AmiBlitz3.ab3@4099>   CLR.w varcodelen
00022472 <AmiBlitz3.ab3@4100>   MOVE.w #$FFFF,lasta6
00022476 <AmiBlitz3.ab3@4102>   BSR.w smode
00022478 <AmiBlitz3.ab3@4103>   TST.w D0
0002247C <AmiBlitz3.ab3@4104>   BMI.w get_tokencode
00022480 <AmiBlitz3.ab3@4105>   CMP.w #$2E,D0
00022484 <AmiBlitz3.ab3@4106>    BEQ.w JL_0_4644                                         ;shortlist
00022488 <AmiBlitz3.ab3@4107>   CMP.w #"#",D0
0002248C <AmiBlitz3.ab3@4108>    BEQ.w JL_0_4718                                         ;constant found
00022490 <AmiBlitz3.ab3@4109>   CMP.w #$27,D0
00022494 <AmiBlitz3.ab3@4110>    BEQ.w JL_0_4638                                         ;local label
0002249A <AmiBlitz3.ab3@4111>   MOVE.l A5,letstart
000224A0 <AmiBlitz3.ab3@4112>   JSR getparameter
000224A4 <AmiBlitz3.ab3@4113>   BSR.w reget
000224A8 <AmiBlitz3.ab3@4114>    BEQ.w JL_0_4658                                         ;label found
000224AC <AmiBlitz3.ab3@4115>   CMP.w #$7B,D0
000224B0 <AmiBlitz3.ab3@4116>    BEQ.w JL_0_475C
000224B2 <AmiBlitz3.ab3@4117>   TST.w d0
000224B6 <AmiBlitz3.ab3@4118>    BPL 'll1
000224BC <AmiBlitz3.ab3@4119>   TST.b newsyntax
000224C0 <AmiBlitz3.ab3@4120>    BEQ 'll1
000224C6 <AmiBlitz3.ab3@4121>   LEA allowtab,a0
000224C8 <AmiBlitz3.ab3@4122>   MOVEQ #0,d1
000224CA <AmiBlitz3.ab3@4123>   MOVE.b d0,d1
000224CE <AmiBlitz3.ab3@4124>   TST.b 0(a0,d1.w)
000224D2 <AmiBlitz3.ab3@4125>    BNE 'll1
000224D4 <AmiBlitz3.ab3@4126>   SUBQ.l #2,a5
000224DC <AmiBlitz3.ab3@4127>   MOVE.w #":",lastchar                                     ;no doublepoint
000224E0 <AmiBlitz3.ab3@4128> BRA JL_0_4658
000224E8 <AmiBlitz3.ab3@4131>   CMP.l #"equ ",-1(a5)
000224EC <AmiBlitz3.ab3@4132>    BEQ 'll4
000224F4 <AmiBlitz3.ab3@4133>   CMP.l #"EQU ",-1(a5)
000224F8 <AmiBlitz3.ab3@4134>    BNE 'll2
000224FA <AmiBlitz3.ab3@4137>   ADDQ.l #2,a5
000224FE <AmiBlitz3.ab3@4138>   BSR.w findlabel2
00022502 <AmiBlitz3.ab3@4139>   BEQ.w 'lf1
00022506 <AmiBlitz3.ab3@4140>   BSR.w addlabelhash
0002250E <AmiBlitz3.ab3@4141>   MOVE.l #$1,$4(A2)
00022516 <AmiBlitz3.ab3@4144>   CMPI.l #$1,$4(A2)
0002251A <AmiBlitz3.ab3@4145>    BNE.w illconerr
0002251E <AmiBlitz3.ab3@4146>   BSR get1bytemain
00022520 <AmiBlitz3.ab3@4147>   MOVE.l A2,-(A7)
00022522 <AmiBlitz3.ab3@4158>   SUBQ.l #1,a5
00022524 <AmiBlitz3.ab3@4161>   SUBQ.l #1,a5
0002252A <AmiBlitz3.ab3@4162>   JSR AJL_0_BF6E
0002252C <AmiBlitz3.ab3@4163>   MOVEA.l (A7)+,A2
00022530 <AmiBlitz3.ab3@4164>   MOVE.l D3,$8(A2)
00022532 <AmiBlitz3.ab3@4165>   RTS
00022536 <AmiBlitz3.ab3@4166>   BSR get1bytemain
0002253E <AmiBlitz3.ab3@4169>   CMP.l #"SET ",-1(a5)
00022542 <AmiBlitz3.ab3@4170>   BNE 'll3
00022546 <AmiBlitz3.ab3@4171> BRA 'll4
0002254C <AmiBlitz3.ab3@4174> JMP AJL_0_DEA6
00022550 <AmiBlitz3.ab3@4177>   CMP.w #-$7FDE,D0
00022554 <AmiBlitz3.ab3@4178>   BEQ.w get_tokencode
00022558 <AmiBlitz3.ab3@4179> BRA.w undodebug
0002255C <AmiBlitz3.ab3@4182>   BSR.w undodebug
00022560 <AmiBlitz3.ab3@4183>   BSR.w createlab
00022564 <AmiBlitz3.ab3@4184> BRA.w JL_0_466E
00022568 <AmiBlitz3.ab3@4187>   BSR.w get1bytemain
0002256C <AmiBlitz3.ab3@4188>    BEQ.w JL_0_462C
00022570 <AmiBlitz3.ab3@4189>   CMP.w #"'",D0
00022574 <AmiBlitz3.ab3@4190>    BEQ.w JL_0_4638
00022578 <AmiBlitz3.ab3@4191>    BSR.w makename2
0002257A <AmiBlitz3.ab3@4192>    TST.w d0
0002257E <AmiBlitz3.ab3@4193>    BPL 'll1
00022580 <AmiBlitz3.ab3@4194>    SUBQ.l #2,a5
00022588 <AmiBlitz3.ab3@4195>    MOVE.w #":",lastchar
0002258C <AmiBlitz3.ab3@4196> BRA JL_0_4658                                              ;????
00022590 <AmiBlitz3.ab3@4200>   BSR.w undodebug
00022596 <AmiBlitz3.ab3@4201>   LEA ptr_parameterstore,A0
0002259C <AmiBlitz3.ab3@4202>   LEA lastgloballabel,A1
0002259E <AmiBlitz3.ab3@4205>   MOVE.b (A0)+,(A1)+
000225A2 <AmiBlitz3.ab3@4206>    BNE.w JL_0_4668
000225A6 <AmiBlitz3.ab3@4209>   BSR.w findlabel2
000225AA <AmiBlitz3.ab3@4210>    BEQ.w JL_0_4698
000225AE <AmiBlitz3.ab3@4211>    BSR.w addlabelhash
000225B2 <AmiBlitz3.ab3@4214>   CLR.l $4(A2)
000225BA <AmiBlitz3.ab3@4215>   MOVE.l destpointer,$8(A2)
000225C2 <AmiBlitz3.ab3@4218>   MOVE.w procnum,$10(A2)
000225C4 <AmiBlitz3.ab3@4219> RTS
000225C8 <AmiBlitz3.ab3@4223>   MOVE.l $4(A2),D0
000225CC <AmiBlitz3.ab3@4224>   BTST #$0,D0
000225D0 <AmiBlitz3.ab3@4225>    BNE.w illlaberr
000225D6 <AmiBlitz3.ab3@4226>   TST.w pass
000225DA <AmiBlitz3.ab3@4228>   MOVE.l $8(A2),D0
000225DE <AmiBlitz3.ab3@4229>    BNE.w duplaberr
000225E6 <AmiBlitz3.ab3@4230>   MOVE.w procnum,$10(A2)
000225EA <AmiBlitz3.ab3@4231>   MOVEA.l $4(A2),A3
000225F0 <AmiBlitz3.ab3@4232>   MOVEA.l _execbase,A6
000225F4 <AmiBlitz3.ab3@4235>   CMPA.w #$0,A3
000225F8 <AmiBlitz3.ab3@4236>    BEQ.w JL_0_467A
000225FC <AmiBlitz3.ab3@4237>     MOVE.l $4(A2),D1
00022600 <AmiBlitz3.ab3@4238>     BTST #$0,D1
00022604 <AmiBlitz3.ab3@4239>     BNE.w illlaberr
00022608 <AmiBlitz3.ab3@4240>   MOVE.w $8(A3),D1
0002260C <AmiBlitz3.ab3@4241>   CMP.w $10(A2),D1
00022610 <AmiBlitz3.ab3@4242>    BEQ.w JL_0_46DC
00022616 <AmiBlitz3.ab3@4243>    TST.b newsyntax
0002261A <AmiBlitz3.ab3@4244>    BEQ 'l1
0002261E <AmiBlitz3.ab3@4245> BRA.w JL_0_46DC                                            ;label context out of range fix
00022626 <AmiBlitz3.ab3@4250>   MOVE.w $A(A3),linenumat+2                                ;move 10(a3),linenumat org source
0002262A <AmiBlitz3.ab3@4251> BRA.w referr
00022630 <AmiBlitz3.ab3@4254>   MOVE.w dontwrite,D1
00022634 <AmiBlitz3.ab3@4255>    BNE.w JL_0_4706
00022638 <AmiBlitz3.ab3@4256>   MOVEA.l $4(A3),A1
0002263E <AmiBlitz3.ab3@4257>   BTST #$0,$7(A3)
00022642 <AmiBlitz3.ab3@4258>    BEQ.w JL_0_4700
00022644 <AmiBlitz3.ab3@4259>   SUBQ.w #1,A1
0002264A <AmiBlitz3.ab3@4260>   MOVE.l data2,(A1)
0002264E <AmiBlitz3.ab3@4261> BRA.w JL_0_4706
00022654 <AmiBlitz3.ab3@4264>   MOVE.l destpointer,(A1)
00022656 <AmiBlitz3.ab3@4267>   MOVEA.l A3,A1
00022658 <AmiBlitz3.ab3@4268>   MOVEA.l (A3),A3
0002265C <AmiBlitz3.ab3@4269>   MOVE.l A3,$4(A2)
0002265E <AmiBlitz3.ab3@4270>   MOVEQ.l #$0C+2,D0
00022664 <AmiBlitz3.ab3@4271>   MOVE.l mempool,a0
0002266A <AmiBlitz3.ab3@4272>   MOVEA.l _execbase,A6
0002266E <AmiBlitz3.ab3@4273>   JSR _FreePooled(A6)
00022672 <AmiBlitz3.ab3@4274> BRA.w JL_0_46BC
0002267C <AmiBlitz3.ab3@4279>    MOVE.l #forthstack,forthsp
00022686 <AmiBlitz3.ab3@4280>   MOVE.l #precstack,precsp
0002268A <AmiBlitz3.ab3@4281>    BSR.w getparameter2
0002268E <AmiBlitz3.ab3@4284>   BSR.w findlabel2
00022692 <AmiBlitz3.ab3@4285>    BEQ.w JL_0_4738
00022696 <AmiBlitz3.ab3@4286>    BSR.w addlabelhash
0002269E <AmiBlitz3.ab3@4287>   MOVE.l #$1,$4(A2)
000226A2 <AmiBlitz3.ab3@4288> BRA.w JL_0_4744
000226AA <AmiBlitz3.ab3@4291>   CMPI.l #$1,$4(A2)
000226AE <AmiBlitz3.ab3@4292>    BNE.w illconerr
000226B2 <AmiBlitz3.ab3@4301>   CMP.w #$3D,D0
000226B6 <AmiBlitz3.ab3@4302>   BEQ.w JL_0_474E
000226B8 <AmiBlitz3.ab3@4303> RTS
000226BA <AmiBlitz3.ab3@4307>   MOVE.l A2,-(A7)
000226C0 <AmiBlitz3.ab3@4308>   JSR AJL_0_BF6E
000226C2 <AmiBlitz3.ab3@4309>   MOVEA.l (A7)+,A2
000226C6 <AmiBlitz3.ab3@4310>   MOVE.l D3,$8(A2)                                         ;store constant
000226CE <AmiBlitz3.ab3@4311>   CMP.w #$0a,lastchar
000226D2 <AmiBlitz3.ab3@4312>   BNE 'l1
000226DA <AmiBlitz3.ab3@4313>   MOVE.w #":",lastchar                                     ;hack to read wizard include files
000226DC <AmiBlitz3.ab3@4316> RTS
000226E0 <AmiBlitz3.ab3@4319>   BSR.w findproc                                           ;write statement call
000226E4 <AmiBlitz3.ab3@4320>   BEQ _state
000226EA <AmiBlitz3.ab3@4321>   TST.l unusedfunc
000226EE <AmiBlitz3.ab3@4322>   BEQ noprocerr
000226F4 <AmiBlitz3.ab3@4324>   JSR gotoendsource
000226F8 <AmiBlitz3.ab3@4327>   TST.b $5(A2)
000226FE <AmiBlitz3.ab3@4329>   MOVE.l a2,currentfunccall
00022706 <AmiBlitz3.ab3@4330>   MOVE.b #1,funccall
0002270C <AmiBlitz3.ab3@4331>   MOVE.b #1,isfunc(a2)
00022710 <AmiBlitz3.ab3@4332>   MOVE.l $E(A2),-(A7)
00022712 <AmiBlitz3.ab3@4333>   MOVEQ.l #$00,D0
00022716 <AmiBlitz3.ab3@4334>   MOVE.b $4(A2),D0
0002271C <AmiBlitz3.ab3@4335>   MOVE.l d0,parnumtemp
00022720 <AmiBlitz3.ab3@4336>   BEQ.w JL_0_4786
00022724 <AmiBlitz3.ab3@4337>   TST.b $20(a2)                                            ;increase if morepar
00022728 <AmiBlitz3.ab3@4338>   BNE 'no0par
0002272A <AmiBlitz3.ab3@4339>   MOVE.l a5,a4
0002272E <AmiBlitz3.ab3@4342>   CMP.b #$20,(a4)+
00022732 <AmiBlitz3.ab3@4343>   BEQ 'l1
00022738 <AmiBlitz3.ab3@4344>   CMP.b #"}",-1(a4)
0002273C <AmiBlitz3.ab3@4345>   BNE  'no0par                                             ;statementcall pars
0002273E <AmiBlitz3.ab3@4346>   MOVEQ #0,d0
00022742 <AmiBlitz3.ab3@4349>   LEA $16(A2),A1
00022744 <AmiBlitz3.ab3@4352>   MOVE.l d1,-(a7)
00022746 <AmiBlitz3.ab3@4353>   MOVE.b (a1),d2
00022748 <AmiBlitz3.ab3@4354>   MOVE.l d0,d1
0002274C <AmiBlitz3.ab3@4355>   CMP.w #4,d2
00022750 <AmiBlitz3.ab3@4356>   BNE 'l1b
00022756 <AmiBlitz3.ab3@4357>   ADD.l #$203c,d1
0002275C <AmiBlitz3.ab3@4359>   JSR writeword
00022762 <AmiBlitz3.ab3@4360>   MOVE.l #$ffff0000,d1
00022768 <AmiBlitz3.ab3@4362>   JSR writelong
0002276C <AmiBlitz3.ab3@4363> BRA 'l2b
00022772 <AmiBlitz3.ab3@4366>   TST.b fpu
00022776 <AmiBlitz3.ab3@4367>   BNE 'l1c
0002277A <AmiBlitz3.ab3@4368>   CMP.w #5,d2
0002277E <AmiBlitz3.ab3@4369>   BNE 'l1c
00022784 <AmiBlitz3.ab3@4370>   ADD.l #$203c,d1
0002278A <AmiBlitz3.ab3@4372>   JSR writeword
00022790 <AmiBlitz3.ab3@4373>   MOVE.l #$800000c1,d1
00022796 <AmiBlitz3.ab3@4375>   JSR writelong
0002279A <AmiBlitz3.ab3@4376> BRA 'l2b
000227A0 <AmiBlitz3.ab3@4379>   ADD.l #$70ff,d1
000227A6 <AmiBlitz3.ab3@4381>   JSR writeword
000227AC <AmiBlitz3.ab3@4382>   MOVE.l #$f23c5000,d1
000227AE <AmiBlitz3.ab3@4383>   MOVE.l d0,d2
000227B0 <AmiBlitz3.ab3@4384>   ASR.l #2,d2
000227B2 <AmiBlitz3.ab3@4385>   ADD.l d2,d1
000227B8 <AmiBlitz3.ab3@4387>   JSR writelong
000227BC <AmiBlitz3.ab3@4388>   MOVE.w #$ffff,d1
000227C2 <AmiBlitz3.ab3@4390>   JSR writeword
000227C4 <AmiBlitz3.ab3@4393>   MOVE.l (a7)+,d1
000227C6 <AmiBlitz3.ab3@4394>   ADDQ.l #1,a1
000227CC <AmiBlitz3.ab3@4395>   ADD.l #$0200,d0
000227D2 <AmiBlitz3.ab3@4396>   CMP.l #$0e00,d0
000227D6 <AmiBlitz3.ab3@4397>    BEQ syntaxerr
000227D8 <AmiBlitz3.ab3@4398>   TST.b (a1)
000227DC <AmiBlitz3.ab3@4399>    BNE 'again
000227E0 <AmiBlitz3.ab3@4400> BRA JL_0_4786
000227EA <AmiBlitz3.ab3@4403>   MOVE.w a2offset,a2offset2
000227EE <AmiBlitz3.ab3@4404>   LEA $16(A2),A2
000227F4 <AmiBlitz3.ab3@4405>   MOVE.b funcparloop,-(a7)
000227FC <AmiBlitz3.ab3@4406>   MOVE.b #1,funcparloop
00022802 <AmiBlitz3.ab3@4407>   MOVE.b blitzparloop,-(a7)
00022808 <AmiBlitz3.ab3@4408>   CLR.b blitzparloop
0002280C <AmiBlitz3.ab3@4409>   BSR.w fetchpees2
00022812 <AmiBlitz3.ab3@4410>   MOVE.b (a7)+,blitzparloop
00022818 <AmiBlitz3.ab3@4411>   MOVE.b (a7)+,funcparloop
0002281C <AmiBlitz3.ab3@4412> BRA.w JL_0_478A
00022820 <AmiBlitz3.ab3@4415>   BSR.w get1bytemain
00022824 <AmiBlitz3.ab3@4418>   CMP.w #$7D,D0
00022828 <AmiBlitz3.ab3@4419>    BNE.w morepar_                                          ;syntax error morepar
0002282E <AmiBlitz3.ab3@4420>    JSR chkstak
00022830 <AmiBlitz3.ab3@4421>   MOVE.l (A7)+,D1
00022836 <AmiBlitz3.ab3@4437>    JSR JL_0_AFCA
0002283C <AmiBlitz3.ab3@4459>   CLR.b funccall
00022840 <AmiBlitz3.ab3@4460> BRA.w get1bytemain
00022846 <AmiBlitz3.ab3@4464>   MOVE.l d0,lasttoken
0002284A <AmiBlitz3.ab3@4465>   CMP.w #$c09f,d0                                          ;hack to use getregd0 instead of getd0
0002284E <AmiBlitz3.ab3@4466>   BNE 'l2
00022852 <AmiBlitz3.ab3@4467>    MOVE.w #$dd05,d0
00022856 <AmiBlitz3.ab3@4470>   CMP.w #$c0a0,d0                                          ;hack to use getregd0 instead of getd0
0002285A <AmiBlitz3.ab3@4471>   BNE 'l3
0002285E <AmiBlitz3.ab3@4472>    MOVE.w #$dd06,d0
00022862 <AmiBlitz3.ab3@4475>   CMP.w #-$7FC4,D0
00022866 <AmiBlitz3.ab3@4476>   BCS.w JL_0_47C4
0002286A <AmiBlitz3.ab3@4477>     CMP.w #-$7F4D,D0
0002286E <AmiBlitz3.ab3@4478>     BCC.w JL_0_47C4
00022876 <AmiBlitz3.ab3@4479>       BTST #$7,assemblercheck                              ;inline Assembler checking
0002287A <AmiBlitz3.ab3@4480>       BNE.b JL_0_47C0
00022880 <AmiBlitz3.ab3@4481>         TST.b debugmode
00022884 <AmiBlitz3.ab3@4482>         BEQ.b 'l10
0002288E <AmiBlitz3.ab3@4487>           MOVE.w d_nomemleft,dontwrite
00022898 <AmiBlitz3.ab3@4488>           MOVE.l d_bigpc,bigpc
000228A2 <AmiBlitz3.ab3@4489>           MOVE.l d_pc,destpointer
000228AC <AmiBlitz3.ab3@4490>           MOVE.l cont_pc2,cont_pc
000228B0 <AmiBlitz3.ab3@4496> BRA.w JL_0_612C
000228B4 <AmiBlitz3.ab3@4499>   BCLR #$F,D0
000228B6 <AmiBlitz3.ab3@4500>   MOVE.w D0,D1
000228BA <AmiBlitz3.ab3@4501>   ANDI.w #$7F00,D1
000228BE <AmiBlitz3.ab3@4502>   BNE.w JL_0_4856
000228C2 <AmiBlitz3.ab3@4503>     CMP.w #$B3,D0                                          ;intern Instructions
000228C6 <AmiBlitz3.ab3@4504>     BCS.w JL_0_47F2
000228CA <AmiBlitz3.ab3@4505>       SUBI.w #$77,D0
000228CE <AmiBlitz3.ab3@4506>       CMP.w #$4B,D0
000228D2 <AmiBlitz3.ab3@4507>       BEQ.w JL_0_4830
000228D6 <AmiBlitz3.ab3@4508>         CMP.w #$46,D0
000228DA <AmiBlitz3.ab3@4509>         BEQ.w JL_0_4830
000228DE <AmiBlitz3.ab3@4510> BRA.w JL_0_4834                                            ; change tokennum
000228E2 <AmiBlitz3.ab3@4513>     CMP.w #$38,D0
000228E6 <AmiBlitz3.ab3@4514>      BEQ.w JL_0_4830
000228EA <AmiBlitz3.ab3@4515>     CMP.w #$39,D0
000228EE <AmiBlitz3.ab3@4516>      BEQ.w JL_0_4830
000228F2 <AmiBlitz3.ab3@4517>     CMP.w #$D,D0
000228F6 <AmiBlitz3.ab3@4518>      BEQ.w JL_0_4830
000228FA <AmiBlitz3.ab3@4519>     CMP.w #$12,D0
000228FE <AmiBlitz3.ab3@4520>      BEQ.w JL_0_4830
00022902 <AmiBlitz3.ab3@4521>     CMP.w #$13,D0
00022906 <AmiBlitz3.ab3@4522>      BEQ.w JL_0_4830
0002290A <AmiBlitz3.ab3@4523>     CMP.w #$1A,D0
0002290E <AmiBlitz3.ab3@4524>      BEQ.w JL_0_4830
00022912 <AmiBlitz3.ab3@4525>     CMP.w #$2A,D0
00022916 <AmiBlitz3.ab3@4526>      BHI.w JL_0_4834
0002291A <AmiBlitz3.ab3@4527>     CMP.w #$23,D0
0002291E <AmiBlitz3.ab3@4528>      BCS.b JL_0_4834
00022922 <AmiBlitz3.ab3@4531>   BSR.w undodebug
00022924 <AmiBlitz3.ab3@4534>   SUBQ.w #1,D0
00022926 <AmiBlitz3.ab3@4535>   LSL.w #2,D0
0002292C <AmiBlitz3.ab3@4542>   LEA instructionbase,A0
00022930 <AmiBlitz3.ab3@4543>   MOVEA.l $0(A0,D0.W),A0
00022932 <AmiBlitz3.ab3@4544>   MOVE.l A0,-(A7)
00022936 <AmiBlitz3.ab3@4545> BRA.w get1bytemain
00022938 <AmiBlitz3.ab3@4551>   MOVE.w D0,D1
0002293C <AmiBlitz3.ab3@4552>    BSR.w searchinstr
00022942 <AmiBlitz3.ab3@4553>    TST.b newmode
00022946 <AmiBlitz3.ab3@4554>    BNE compile_term
0002294C <AmiBlitz3.ab3@4555>   BTST #$2,$1(A3)                                          ;a3 = pointer to instr ;toke stuff in a3
00022950 <AmiBlitz3.ab3@4556>    BNE.w stamigalib
00022956 <AmiBlitz3.ab3@4557>   BTST #$0,$1(A3)
0002295A <AmiBlitz3.ab3@4558>    BEQ.w needreturn_                                       ;syntax err need return   ;check it's a statement
0002295E <AmiBlitz3.ab3@4559>    BSR.w JL_0_49EA                                         ;does it need a size specifier?
00022962 <AmiBlitz3.ab3@4560>    BSR.w JL_0_66F6
00022968 <AmiBlitz3.ab3@4566>   MOVE.w numreps,-(A7)
0002296E <AmiBlitz3.ab3@4567>   MOVE.w userp,-(A7)
00022974 <AmiBlitz3.ab3@4568>   MOVE.w a2offset,-(A7)
00022976 <AmiBlitz3.ab3@4569>   MOVE.l A2,-(A7)                                          ;recurs.
00022980 <AmiBlitz3.ab3@4570>   MOVE.w convsize,userp
00022984 <AmiBlitz3.ab3@4571>   LEA $6(A3),A1
00022986 <AmiBlitz3.ab3@4575>    MOVE.w (A1),D2
0002298A <AmiBlitz3.ab3@4576>    BMI.w SERR                                              ;statement syntax error
0002298E <AmiBlitz3.ab3@4577>   ANDI.w #$FF,D2
00022990 <AmiBlitz3.ab3@4578>   CMP.w D2,D1
00022994 <AmiBlitz3.ab3@4579>    BEQ.w JL_0_48E0
00022998 <AmiBlitz3.ab3@4580>    BCS.w JL_0_48CC
0002299A <AmiBlitz3.ab3@4581>   MOVE.b (A1),D3
0002299E <AmiBlitz3.ab3@4582>   ANDI.w #$7,D3
000229A2 <AmiBlitz3.ab3@4583>    BEQ.w JL_0_48CC
000229A4 <AmiBlitz3.ab3@4584>   MOVE.w D2,D4
000229A6 <AmiBlitz3.ab3@4585>   SUB.w D3,D4
000229A8 <AmiBlitz3.ab3@4586>   MOVEQ.l #$00,D5
000229AA <AmiBlitz3.ab3@4587>   MOVE.w D1,D5
000229AC <AmiBlitz3.ab3@4588>   SUB.w D4,D5
000229AE <AmiBlitz3.ab3@4589>   DIVU D3,D5
000229B0 <AmiBlitz3.ab3@4590>   SWAP D5
000229B2 <AmiBlitz3.ab3@4591>   TST.w D5
000229B6 <AmiBlitz3.ab3@4592>    BEQ.w JL_0_48E0
000229B8 <AmiBlitz3.ab3@4595>   ADDQ.w #2,A1
000229BA <AmiBlitz3.ab3@4596>   ADDA.w D2,A1
000229BE <AmiBlitz3.ab3@4597>    BSR.w aligna1
000229C2 <AmiBlitz3.ab3@4598>    BSR.w skiplibreg
000229C6 <AmiBlitz3.ab3@4599>   LEA $C(A1),A1
000229CA <AmiBlitz3.ab3@4600> BRA.w JL_0_489A
000229CC <AmiBlitz3.ab3@4603>   MOVE.w (a3),d2
000229D0 <AmiBlitz3.ab3@4604>   BTST #1,d2
000229D4 <AmiBlitz3.ab3@4605>   BEQ statement_
000229D8 <AmiBlitz3.ab3@4606>   CMP.w #1,d1
000229DC <AmiBlitz3.ab3@4607>   BEQ statement_
000229E0 <AmiBlitz3.ab3@4610>   CMP.b #$20,(a5)+
000229E4 <AmiBlitz3.ab3@4611>   BEQ 'l2
000229EA <AmiBlitz3.ab3@4612>   CMP.b #"(",-2(a5)
000229EE <AmiBlitz3.ab3@4613>   BNE 'l1
000229F2 <AmiBlitz3.ab3@4614> BRA parameter_
000229F6 <AmiBlitz3.ab3@4617> BRA inbrackets_
000229F8 <AmiBlitz3.ab3@4620>   MOVE.b (A1),D2
000229FA <AmiBlitz3.ab3@4621>   LSL.w #8,D2
000229FC <AmiBlitz3.ab3@4622>   OR.w D2,D1
000229FE <AmiBlitz3.ab3@4623>   MOVE.l A1,-(A7)
00022A04 <AmiBlitz3.ab3@4624>   CLR.w a2offset
00022A06 <AmiBlitz3.ab3@4625>   TST.w D1
00022A0A <AmiBlitz3.ab3@4626>    BEQ.w JL_0_4900
00022A0E <AmiBlitz3.ab3@4627>   LEA $2(A1),A2
00022A14 <AmiBlitz3.ab3@4629>   MOVE.l lasttoken,-(a7)
00022A1A <AmiBlitz3.ab3@4630>   CLR.l lasttoken
00022A1E <AmiBlitz3.ab3@4631>   BSR.w fetchlibps
00022A24 <AmiBlitz3.ab3@4632>   MOVE.l (a7)+,lasttoken
00022A28 <AmiBlitz3.ab3@4633> BRA.w JL_0_4904
00022A2C <AmiBlitz3.ab3@4636>   BSR.w get1bytemain
00022A2E <AmiBlitz3.ab3@4639>   MOVEA.l (A7)+,A1
00022A30 <AmiBlitz3.ab3@4640>   MOVEA.l (A7)+,A2
00022A36 <AmiBlitz3.ab3@4641>   MOVE.w a2offset,D1
00022A3A <AmiBlitz3.ab3@4642>    BEQ.w JL_0_493A
00022A40 <AmiBlitz3.ab3@4643>   MOVE.w D1,preplibst+2
00022A46 <AmiBlitz3.ab3@4644>   MOVE.l preplibst,D1
00022A4C <AmiBlitz3.ab3@4645>    JSR writelong                                           ;write array offset stack correct
00022A56 <AmiBlitz3.ab3@4646>   MOVE.w numreps,movenumrep+2
00022A5A <AmiBlitz3.ab3@4647>    BEQ.w JL_0_493A
00022A60 <AmiBlitz3.ab3@4648>   MOVE.l movenumrep,D1
00022A66 <AmiBlitz3.ab3@4649>    JSR writelong
00022A6C <AmiBlitz3.ab3@4653>   JSR userjsr
00022A72 <AmiBlitz3.ab3@4656>   MOVE.w a2offset,D1
00022A76 <AmiBlitz3.ab3@4657>    BEQ.w JL_0_4974
00022A7A <AmiBlitz3.ab3@4658>   CMP.w #$8,D1
00022A7E <AmiBlitz3.ab3@4659>    BHI.w JL_0_4964
00022A82 <AmiBlitz3.ab3@4660>   ANDI.w #$7,D1
00022A84 <AmiBlitz3.ab3@4661>   LSL.w #8,D1
00022A86 <AmiBlitz3.ab3@4662>   LSL.w #1,D1
00022A8A <AmiBlitz3.ab3@4663>   ORI.w #$504F,D1
00022A90 <AmiBlitz3.ab3@4665>   JSR writeword
00022A94 <AmiBlitz3.ab3@4666> BRA.w JL_0_4974
00022A9A <AmiBlitz3.ab3@4669>   MOVE.w D1,fixlibst+2
00022AA0 <AmiBlitz3.ab3@4670>   MOVE.l fixlibst,D1
00022AA6 <AmiBlitz3.ab3@4671>   JSR writelong
00022AAC <AmiBlitz3.ab3@4674>   MOVE.w (A7)+,a2offset
00022AB2 <AmiBlitz3.ab3@4675>   MOVE.w (A7)+,userp
00022AB8 <AmiBlitz3.ab3@4676>   MOVE.w (A7)+,numreps
00022ABC <AmiBlitz3.ab3@4677> BRA.w reget
00022AC0 <AmiBlitz3.ab3@4681>   MOVEM.l A2-A3,-(A7)
00022AC6 <AmiBlitz3.ab3@4682>   CLR.b doublepeek
00022ACC <AmiBlitz3.ab3@4683>   MOVE.l A5,lastsourcepos
00022AD0 <AmiBlitz3.ab3@4684>    BSR.w getchar
00022AD4 <AmiBlitz3.ab3@4685>   CMP.w #$2E,D0
00022AD8 <AmiBlitz3.ab3@4686>    BEQ.w JL_0_49B4
00022ADE <AmiBlitz3.ab3@4687>   MOVEA.l defaulttype,A2
00022AE2 <AmiBlitz3.ab3@4688>   CMP.w #$24,D0
00022AE6 <AmiBlitz3.ab3@4689>    BNE.w JL_0_49CA
00022AE8 <AmiBlitz3.ab3@4690>   MOVEQ.l #$07,D1
00022AEC <AmiBlitz3.ab3@4691> BRA.w JL_0_49DE
00022AF0 <AmiBlitz3.ab3@4694>   BSR.w getparameter2
00022AF4 <AmiBlitz3.ab3@4695>   BEQ.w syntaxerr
00022AFA <AmiBlitz3.ab3@4696>   LEA newtypebase,A2
00022AFE <AmiBlitz3.ab3@4697>   BSR.w findtype
00022B02 <AmiBlitz3.ab3@4698>   BNE.w notypeerr
00022B0C <AmiBlitz3.ab3@4702>   MOVE.w oldqflag,instringon
00022B12 <AmiBlitz3.ab3@4703>   MOVEA.l lastsourcepos,A5
00022B16 <AmiBlitz3.ab3@4708>   MOVE.w $6(A2),D1
00022B1C <AmiBlitz3.ab3@4709>   CMP.w #8,8(a2)
00022B20 <AmiBlitz3.ab3@4710>   BNE 'l1
00022B28 <AmiBlitz3.ab3@4711>   MOVE.b #1,doublepeek
00022B2E <AmiBlitz3.ab3@4715>   MOVE.w D1,convsize
00022B32 <AmiBlitz3.ab3@4716>   MOVEM.l (A7)+,A2-A3
00022B34 <AmiBlitz3.ab3@4717> RTS
00022B3A <AmiBlitz3.ab3@4722>   BTST #$3,$1(A3)
00022B3E <AmiBlitz3.ab3@4723>   BEQ.w JL_0_4A06
00022B42 <AmiBlitz3.ab3@4724>   BSR.w AJL_0_498A                                         ;read peek/poke size
00022B46 <AmiBlitz3.ab3@4726>   ORI.w #$7000,D1
00022B4C <AmiBlitz3.ab3@4727>   JSR writeword
00022B52 <AmiBlitz3.ab3@4728>   ADDQ.w #1,regnum
00022B54 <AmiBlitz3.ab3@4731> RTS
00022B56 <AmiBlitz3.ab3@4737>             Dc.b $10,$12                                   ;MOVE.B  (A2),D0
00022B58 <AmiBlitz3.ab3@4738>             Dc.b $14,$91                                   ;MOVE.B  (A1),(A2)
00022B5A <AmiBlitz3.ab3@4739>             Dc.b $12,$80                                   ;MOVE.B  D0,(A1)
00022B5C <AmiBlitz3.ab3@4743> swapw:      Dc.b $30,$12                                   ;MOVE.W  (A2),D0
00022B5E <AmiBlitz3.ab3@4744>             Dc.b $34,$91                                   ;MOVE.W  (A1),(A2)
00022B60 <AmiBlitz3.ab3@4745>             Dc.b $32,$80                                   ;MOVE.W  D0,(A1)
00022B62 <AmiBlitz3.ab3@4749> swapl:      Dc.b $20,$12                                   ;MOVE.L  (A2),D0
00022B64 <AmiBlitz3.ab3@4750>             Dc.b $24,$91                                   ;MOVE.L  (A1),(A2)
00022B66 <AmiBlitz3.ab3@4751>             Dc.b $22,$80                                   ;MOVE.L  D0,(A1)
00022B68 <AmiBlitz3.ab3@4755> pulla1:     Dc.b $22,$5F                                   ;MOVEA.L (A7)+,A1
00022B6A <AmiBlitz3.ab3@4758> srctype:    Ds.w 1
00022B6E <AmiBlitz3.ab3@4763>   BSR.w excget
00022B72 <AmiBlitz3.ab3@4764>   CMP.w #$2C,D0
00022B76 <AmiBlitz3.ab3@4765>    BNE.w syntaxerr
00022B7C <AmiBlitz3.ab3@4766>   MOVE.b D2,srctype
00022B82 <AmiBlitz3.ab3@4767>   MOVE.w pusha2,D1
00022B88 <AmiBlitz3.ab3@4768>   JSR writeword
00022B8C <AmiBlitz3.ab3@4769>   BSR.w get1bytemain
00022B90 <AmiBlitz3.ab3@4770>   BSR.w excget
00022B96 <AmiBlitz3.ab3@4771>   CMP.b srctype,D2
00022B9A <AmiBlitz3.ab3@4772>    BNE.w excerr2
00022BA0 <AmiBlitz3.ab3@4773>   MOVE.w pulla1,D1
00022BA6 <AmiBlitz3.ab3@4774>    JSR writeword
00022BAA <AmiBlitz3.ab3@4775>   CMP.b #$2,D2
00022BAE <AmiBlitz3.ab3@4776>    BCS.w JL_0_4B2A
00022BB2 <AmiBlitz3.ab3@4777>    BEQ.w JL_0_4B1E
00022BB6 <AmiBlitz3.ab3@4778>   LEA swapl(PC),A0
00022BBA <AmiBlitz3.ab3@4779>   LEA swaplf(PC),A1
00022BC0 <AmiBlitz3.ab3@4780> JMP pokecode
00022BC4 <AmiBlitz3.ab3@4783>   LEA swapw(PC),A0
00022BC8 <AmiBlitz3.ab3@4784>   LEA swapwf(PC),A1
00022BCE <AmiBlitz3.ab3@4785> JMP pokecode
00022BD2 <AmiBlitz3.ab3@4788>   LEA swapb(PC),A0
00022BD6 <AmiBlitz3.ab3@4789>   LEA swapbf(PC),A1
00022BDC <AmiBlitz3.ab3@4790> JMP pokecode
00022BE2 <AmiBlitz3.ab3@4794>   JSR getparameter
00022BE6 <AmiBlitz3.ab3@4795>   BSR.w JL_0_8E3C
00022BEA <AmiBlitz3.ab3@4796>   BSR.w calcvar
00022BEE <AmiBlitz3.ab3@4797>   BTST #$E,D2
00022BF2 <AmiBlitz3.ab3@4798>    BEQ.w JL_0_4B4E
00022BF6 <AmiBlitz3.ab3@4799>   MOVE.b #$4,D2
00022BF8 <AmiBlitz3.ab3@4802>   TST.b D2
00022BFC <AmiBlitz3.ab3@4803>    BEQ.w excerr
00022C00 <AmiBlitz3.ab3@4804>   BTST #$F,D2
00022C04 <AmiBlitz3.ab3@4805>    BNE.w JL_0_4B6A
00022C0A <AmiBlitz3.ab3@4806>   MOVE.w leaamp,D1
00022C10 <AmiBlitz3.ab3@4807>    JSR pokewda5s
00022C12 <AmiBlitz3.ab3@4808>   MOVE.w D3,D1
00022C18 <AmiBlitz3.ab3@4809> JMP writeword
00022C1A <AmiBlitz3.ab3@4812> RTS
00022C20 <AmiBlitz3.ab3@4822>   MOVE.l mempool,a0
00022C26 <AmiBlitz3.ab3@4823>   MOVEA.l _execbase,A6
00022C2A <AmiBlitz3.ab3@4824> JMP _AllocPooled(a6)
00022C2E <AmiBlitz3.ab3@4828>   MOVE.w #$BF00,D1
00022C34 <AmiBlitz3.ab3@4829> JMP Atokejsr
00022C38 <AmiBlitz3.ab3@4833>   CMP.w #-$7FFA,D0
00022C3C <AmiBlitz3.ab3@4834>    BEQ.w popreturn
00022C40 <AmiBlitz3.ab3@4835>   CMP.w #-$7FEA,D0
00022C44 <AmiBlitz3.ab3@4836>    BEQ.w popnext2
00022C48 <AmiBlitz3.ab3@4837>   CMP.w #-$7FF2,D0
00022C4C <AmiBlitz3.ab3@4838>    BEQ.w popselect2
00022C50 <AmiBlitz3.ab3@4839>   CMP.w #-$7FF5,D0
00022C54 <AmiBlitz3.ab3@4840>    BEQ.w get1bytemain
00022C58 <AmiBlitz3.ab3@4841>   CMP.w #-$7FF4,D0
00022C5C <AmiBlitz3.ab3@4842>    BEQ.w get1bytemain
00022C60 <AmiBlitz3.ab3@4843>   CMP.w #-$7FEC,D0
00022C64 <AmiBlitz3.ab3@4844>    BEQ.w get1bytemain
00022C68 <AmiBlitz3.ab3@4845>   CMP.w #-$7F45,D0
00022C6C <AmiBlitz3.ab3@4846>    BEQ.w get1bytemain
00022C70 <AmiBlitz3.ab3@4847> BRA.w syntaxerr
00022C76 <AmiBlitz3.ab3@4850>   TST.b debugmode
00022C7A <AmiBlitz3.ab3@4851>    BEQ.w popreturn__norerr
00022C7E <AmiBlitz3.ab3@4852>   LEA popreturn__rfix(PC),A0
00022C82 <AmiBlitz3.ab3@4853>   LEA popreturn__rfixf(PC),A1
00022C88 <AmiBlitz3.ab3@4854>    JSR pokecode
00022C8C <AmiBlitz3.ab3@4855>   MOVE.w #$C305,D1
00022C92 <AmiBlitz3.ab3@4856>    JSR Atokejsr
00022C96 <AmiBlitz3.ab3@4857>   MOVE.w popreturn__rfix2(PC),D1
00022C9C <AmiBlitz3.ab3@4859>    JSR writeword
00022CA0 <AmiBlitz3.ab3@4860> BRA.w get1bytemain
00022CA6 <AmiBlitz3.ab3@4864>   CMPI.w #$6753,$4(A7)                                     ;#"gS",4(A7)
00022CAA <AmiBlitz3.ab3@4865>   BEQ.w popreturn__rfix2
00022CB0 <AmiBlitz3.ab3@4868>   JSR $20000                                               ;reass
00022CB2 <AmiBlitz3.ab3@4871>   ADDQ.w #6,A7
00022CB6 <AmiBlitz3.ab3@4875>   MOVE.w popreturn__sfix(PC),D1
00022CBC <AmiBlitz3.ab3@4876>   JSR writeword
00022CC0 <AmiBlitz3.ab3@4877> BRA.w get1bytemain
00022CC2 <AmiBlitz3.ab3@4882>   Dc.b $58,$4F                                             ;ADDQ.W  #4,A7
00022CC8 <AmiBlitz3.ab3@4887>   MOVE.l firstfor,D0
00022CCC <AmiBlitz3.ab3@4888>    BEQ.w noforerr
00022CCE <AmiBlitz3.ab3@4889>   MOVEA.l D0,A2
00022CD2 <AmiBlitz3.ab3@4890>    BSR.w get1bytemain
00022CD6 <AmiBlitz3.ab3@4891>   BSR.w popnext
00022CDC <AmiBlitz3.ab3@4894>   TST.b debugmode
00022CE0 <AmiBlitz3.ab3@4895>    BEQ.w popnext3__ner
00022CE6 <AmiBlitz3.ab3@4896>   MOVE.l nextfixw2,D1
00022CEC <AmiBlitz3.ab3@4897>   CMPI.w #$3,$C(A2)
00022CF0 <AmiBlitz3.ab3@4898>    BCS.w writelong2
00022CF6 <AmiBlitz3.ab3@4899>   MOVE.l nextfixl2,D1
00022CFC <AmiBlitz3.ab3@4900> writelong2 JMP  writelong
00022D02 <AmiBlitz3.ab3@4903>   CMPI.w #$3,$C(A2)
00022D06 <AmiBlitz3.ab3@4904>    BCS.w popnext3__skip2
00022D0C <AmiBlitz3.ab3@4905>   MOVE.l nextfixl,D1
00022D12 <AmiBlitz3.ab3@4906>   JMP writelong
00022D18 <AmiBlitz3.ab3@4909>   MOVE.w nextfixw,D1
00022D1E <AmiBlitz3.ab3@4910> JMP writeword
00022D22 <AmiBlitz3.ab3@4914>   MOVE.w $C(A2),D0
00022D28 <AmiBlitz3.ab3@4915>   TST.b debugmode
00022D2C <AmiBlitz3.ab3@4916>    BEQ.w popnext__norunerr
00022D30 <AmiBlitz3.ab3@4917>   MOVE.w #$C306,D1
00022D34 <AmiBlitz3.ab3@4918>   CMP.w #$3,D0
00022D38 <AmiBlitz3.ab3@4919>    BCS.w popnext__oktc
00022D3A <AmiBlitz3.ab3@4920>   ADDQ.w #1,D1
00022D3C <AmiBlitz3.ab3@4923>   MOVE.l A2,-(A7)
00022D42 <AmiBlitz3.ab3@4924>   JSR Atokejsr
00022D44 <AmiBlitz3.ab3@4925>   MOVEA.l (A7)+,A2
00022D46 <AmiBlitz3.ab3@4928> RTS
00022D4C <AmiBlitz3.ab3@4932>   MOVE.l firstsel,D0
00022D50 <AmiBlitz3.ab3@4933>    BEQ.w eselerr
00022D52 <AmiBlitz3.ab3@4934>   MOVEA.l D0,A2
00022D56 <AmiBlitz3.ab3@4935>    BSR.w get1bytemain
00022D5A <AmiBlitz3.ab3@4938>   MOVE.w $C(A2),D2
00022D60 <AmiBlitz3.ab3@4939>   TST.b debugmode
00022D64 <AmiBlitz3.ab3@4940>    BEQ.w popselect__norerr
00022D68 <AmiBlitz3.ab3@4941>   MOVE.w #$C313,D1
00022D6C <AmiBlitz3.ab3@4942>   CMP.w #$3,D2
00022D70 <AmiBlitz3.ab3@4943>    BCS.w popselect__chkit
00022D72 <AmiBlitz3.ab3@4944>   ADDQ.w #1,D1
00022D78 <AmiBlitz3.ab3@4947>   JSR Atokejsr                                             ;make sure next thing on stack
00022D7A <AmiBlitz3.ab3@4951>   MOVEQ.l #$02,D1
00022D7E <AmiBlitz3.ab3@4952>   CMP.w #$3,D2
00022D82 <AmiBlitz3.ab3@4953>    BCS.w popselect__doit
00022D84 <AmiBlitz3.ab3@4954>   MOVEQ.l #$04,D1
00022D88 <AmiBlitz3.ab3@4955>   CMP.w #$7,D2
00022D8C <AmiBlitz3.ab3@4956>    BCS.w popselect__doit
00022D92 <AmiBlitz3.ab3@4957>   LEA endselstr,A0
00022D98 <AmiBlitz3.ab3@4958>   LEA endselstrf,A1
00022D9E <AmiBlitz3.ab3@4959>   TST.b debugmode
00022DA2 <AmiBlitz3.ab3@4960>    BEQ.w popselect__norerr3
00022DA8 <AmiBlitz3.ab3@4961>   LEA endselstrf2,A1
00022DAE <AmiBlitz3.ab3@4964>   JSR pokecode
00022DB2 <AmiBlitz3.ab3@4965>   MOVE.w #$C003,D1                                         ;global freemem
00022DB8 <AmiBlitz3.ab3@4966> JMP Atokejsr
00022DBE <AmiBlitz3.ab3@4969>   TST.b debugmode
00022DC2 <AmiBlitz3.ab3@4970>    BEQ.w popselect__norerr2
00022DC4 <AmiBlitz3.ab3@4971>   ADDQ.w #2,D1                                             ;for the "sE"
00022DC6 <AmiBlitz3.ab3@4974>   LSL.w #8,D1
00022DC8 <AmiBlitz3.ab3@4975>   LSL.w #1,D1
00022DCE <AmiBlitz3.ab3@4976>   OR.w endsel,D1
00022DD4 <AmiBlitz3.ab3@4977> JMP writeword
00022DD8 <AmiBlitz3.ab3@4980> firstrep:    Ds.l 1
00022DDC <AmiBlitz3.ab3@4981> replineat:   Ds.l 1
00022DE2 <AmiBlitz3.ab3@4990>   CLR.l fp0addr
00022DEC <AmiBlitz3.ab3@4991>   MOVE.l linenumat,replineat
00022DEE <AmiBlitz3.ab3@4992>   MOVEQ.l #$08,D0
00022DF4 <AmiBlitz3.ab3@4993>   MOVEA.l _execbase,A6
00022DFA <AmiBlitz3.ab3@4994>   MOVE.l mempool,a0
00022DFE <AmiBlitz3.ab3@4995>   JSR _AllocPooled(a6)
00022E00 <AmiBlitz3.ab3@4997>   MOVEA.l D0,A0
00022E04 <AmiBlitz3.ab3@4998>   MOVE.l firstrep(PC),(A0)
00022E0A <AmiBlitz3.ab3@4999>   MOVE.l A0,firstrep
00022E12 <AmiBlitz3.ab3@5000>   MOVE.l destpointer,$4(A0)
00022E14 <AmiBlitz3.ab3@5001> RTS
00022E1A <AmiBlitz3.ab3@5004> str_temp:  Ds.w 3                                            ;infochk  ds.b 6 org source
00022E1E <AmiBlitz3.ab3@5007>   LEA str_temp(PC),A1
00022E20 <AmiBlitz3.ab3@5008>   CLR.w (A1)
00022E24 <AmiBlitz3.ab3@5009>   CLR.l $2(A1)
00022E26 <AmiBlitz3.ab3@5012>   MOVEQ.l #$04,D0
00022E2A <AmiBlitz3.ab3@5015>     MOVE.b $1(A1),(A1)+
00022E2E <AmiBlitz3.ab3@5016>   DBF D0,check_for_infoextention__loop
00022E32 <AmiBlitz3.ab3@5021>   LEA str_temp(PC),A1
00022E34 <AmiBlitz3.ab3@5022>   MOVE.b (A0),D0
00022E38 <AmiBlitz3.ab3@5023>   ORI.b #$20,D0
00022E3C <AmiBlitz3.ab3@5024>   MOVE.b D0,$5(A1)
00022E3E <AmiBlitz3.ab3@5025>   TST.b (A0)+
00022E42 <AmiBlitz3.ab3@5026>    BNE.w check_for_infoextention__loop2
00022E46 <AmiBlitz3.ab3@5027>   CMPI.w #$2E69,(A1)+                                      ;".i"
00022E4A <AmiBlitz3.ab3@5028>    BNE.w check_for_infoextention__no
00022E50 <AmiBlitz3.ab3@5029>   CMPI.l #$6E666F20,(A1)                                   ;"nfo "
00022E52 <AmiBlitz3.ab3@5032> RTS
00022E56 <AmiBlitz3.ab3@5036>   BPL.w gettokeps__evaltoke
00022E58 <AmiBlitz3.ab3@5037>   MOVE.w D0,D1
00022E5C <AmiBlitz3.ab3@5038>   ANDI.w #$7F80,D1
00022E60 <AmiBlitz3.ab3@5039>    BEQ.w tokeerr
00022E64 <AmiBlitz3.ab3@5040>   BCLR #$F,D0
00022E66 <AmiBlitz3.ab3@5041>   MOVE.w D0,D4                                             ;got toke number
00022E6A <AmiBlitz3.ab3@5042>   BSR.w get1bytemain
00022E6E <AmiBlitz3.ab3@5043> BRA.w gettokeps__gotnum
00022E74 <AmiBlitz3.ab3@5046>   JSR JL_0_BF6A
00022E7A <AmiBlitz3.ab3@5047>   CMP.l #MaxWord,D3
00022E7E <AmiBlitz3.ab3@5048>    BHI.w tokeerr
00022E80 <AmiBlitz3.ab3@5049>   TST.w D6
00022E84 <AmiBlitz3.ab3@5050>    BNE.w tokeerr
00022E86 <AmiBlitz3.ab3@5051>   MOVE.w D3,D4
00022E88 <AmiBlitz3.ab3@5054>   MOVEQ.l #$00,D5
00022E8C <AmiBlitz3.ab3@5055>   CMP.w #$2C,D0
00022E90 <AmiBlitz3.ab3@5056>    BNE.w gettokeps__gotfrom
00022E92 <AmiBlitz3.ab3@5057>   MOVE.w D4,-(A7)
00022E98 <AmiBlitz3.ab3@5058>    JSR AJL_0_BF6E
00022E9E <AmiBlitz3.ab3@5059>   CMP.l #MaxWord,D3
00022EA2 <AmiBlitz3.ab3@5060>    BHI.w tokeerr
00022EA4 <AmiBlitz3.ab3@5061>   TST.w D6
00022EA8 <AmiBlitz3.ab3@5062>    BNE.w tokeerr
00022EAA <AmiBlitz3.ab3@5063>   MOVE.w D3,D5
00022EAC <AmiBlitz3.ab3@5064>   MOVE.w (A7)+,D4
00022EAE <AmiBlitz3.ab3@5067> RTS                                                        ;d4=toke, d5=form
00022EB0 <AmiBlitz3.ab3@5071>   TST.w D0
00022EB4 <AmiBlitz3.ab3@5072>    BSR.w gettokeps
00022EB8 <AmiBlitz3.ab3@5073>   MOVE.w #$4EB9,D1
00022EBE <AmiBlitz3.ab3@5074>   JSR writeword
00022EC2 <AmiBlitz3.ab3@5075>   BSR.w addoff
00022EC4 <AmiBlitz3.ab3@5076>   MOVE.w D5,D1
00022EC8 <AmiBlitz3.ab3@5077>   ORI.w #$8000,D1                                          ;Toke of Amiga type.
00022ECA <AmiBlitz3.ab3@5078>   SWAP D1
00022ECC <AmiBlitz3.ab3@5079>   MOVE.w D4,D1
00022ED2 <AmiBlitz3.ab3@5080> JMP writelong
00022ED4 <AmiBlitz3.ab3@5084>   TST.w D0
00022ED8 <AmiBlitz3.ab3@5085>    BSR.w gettokeps
00022EDC <AmiBlitz3.ab3@5086>   MOVE.w #$4EB9,D1
00022EE2 <AmiBlitz3.ab3@5087>   JSR writeword
00022EE6 <AmiBlitz3.ab3@5088>   BSR.w addoff
00022EE8 <AmiBlitz3.ab3@5089>   MOVE.w D5,D1
00022EEC <AmiBlitz3.ab3@5090>   ORI.w #$C000,D1                                          ;Toke of Blitz type.
00022EEE <AmiBlitz3.ab3@5091>   SWAP D1
00022EF0 <AmiBlitz3.ab3@5092>   MOVE.w D4,D1
00022EF6 <AmiBlitz3.ab3@5093>   JMP writelong
00022EFC <AmiBlitz3.ab3@5097>   JSR JL_0_BF6A
00022F02 <AmiBlitz3.ab3@5098>   CMP.l #$10000,D3
00022F06 <AmiBlitz3.ab3@5099>    BCC.w tokeerr
00022F08 <AmiBlitz3.ab3@5100>   MOVE.w D3,D1
00022F0E <AmiBlitz3.ab3@5101> JMP Atokejsr
00022F12 <AmiBlitz3.ab3@5105>   BSR.w gettokeps
00022F16 <AmiBlitz3.ab3@5106>   MOVE.w #$4EB9,D1
00022F1C <AmiBlitz3.ab3@5107>   JSR writeword
00022F22 <AmiBlitz3.ab3@5108>   MOVE.l destpointer,D3
00022F2A <AmiBlitz3.ab3@5109>   BTST #$7,blitzmode
00022F2E <AmiBlitz3.ab3@5110>    BEQ.w do_TokeJsr__inamiga
00022F32 <AmiBlitz3.ab3@5111>   BSET #$E,D5
00022F36 <AmiBlitz3.ab3@5114>   BSR.w JL_0_6E86
00022F3A <AmiBlitz3.ab3@5115>   BSR.w addoff
00022F40 <AmiBlitz3.ab3@5116>   JMP writelong
00022F44 <AmiBlitz3.ab3@5120>   BEQ.w do_VWait__zero
00022F46 <AmiBlitz3.ab3@5121>   MOVEQ.l #$02,D2                                          ;get a word
00022F4C <AmiBlitz3.ab3@5123>   JSR bakeval
00022F50 <AmiBlitz3.ab3@5124>   MOVE.w fvwait(PC),D1
00022F54 <AmiBlitz3.ab3@5125> BRA.w do_VWait__vcont
00022F58 <AmiBlitz3.ab3@5128>   MOVE.w #$7000,D1                                         ;moveq #0,d0
00022F5E <AmiBlitz3.ab3@5131>   JSR writeword
00022F62 <AmiBlitz3.ab3@5132>   MOVE.w #$C104,D1
00022F68 <AmiBlitz3.ab3@5133> JMP Atokejsr
00022F6A <AmiBlitz3.ab3@5137>   SUBQ.w #1,D0
00022F70 <AmiBlitz3.ab3@5140>   Dc.w $3b7c,$ffff,0                                       ;move.w #$FFFF,$0(A5) ;noopt
00022F74 <AmiBlitz3.ab3@5143>   Dc.l $426d0001                                           ;clr.w $0(A5)
00022F78 <AmiBlitz3.ab3@5147>   MOVE.b debugmode(PC),D1
00022F7C <AmiBlitz3.ab3@5148>   BEQ.b debugmode_codelabel__skip
00022F80 <AmiBlitz3.ab3@5149>   MOVE.w #$D500,D1
00022F86 <AmiBlitz3.ab3@5150> JMP Atokejsr
00022F88 <AmiBlitz3.ab3@5153> RTS
00022F90 <AmiBlitz3.ab3@5157>   BSET #$0,blitzmode
00022F98 <AmiBlitz3.ab3@5158>   BSET #$7,blitzmode
00022F9C <AmiBlitz3.ab3@5159>   MOVE.w #$C200,D1
00022FA2 <AmiBlitz3.ab3@5160>   JSR Atokejsr
00022FA8 <AmiBlitz3.ab3@5161>   TST.b debugmode
00022FAC <AmiBlitz3.ab3@5162>    BEQ.w do_BLITZ__done
00022FB0 <AmiBlitz3.ab3@5163>   MOVE.w cgoblitz(PC),D1
00022FB6 <AmiBlitz3.ab3@5164>   JSR writeword
00022FB8 <AmiBlitz3.ab3@5165>   MOVEQ.l #-$01,D1
00022FBE <AmiBlitz3.ab3@5166>   JSR writeword
00022FC4 <AmiBlitz3.ab3@5167>   JSR getbbase
00022FCA <AmiBlitz3.ab3@5168>   JSR writeword
00022FCE <AmiBlitz3.ab3@5171> BRA.w debugmode_codelabel
00022FD2 <AmiBlitz3.ab3@5175>   MOVE.w #$C201,D1
00022FD6 <AmiBlitz3.ab3@5176> BRA.w do_AMIGA__toamode
00022FDA <AmiBlitz3.ab3@5180>   MOVE.W  #$C202,D1
00022FE2 <AmiBlitz3.ab3@5183>   BSET #$0,blitzmode
00022FEA <AmiBlitz3.ab3@5184>   BCLR #$7,blitzmode
00022FF0 <AmiBlitz3.ab3@5185>   JSR Atokejsr
00022FF6 <AmiBlitz3.ab3@5186>   TST.b debugmode
00022FFA <AmiBlitz3.ab3@5187>    BEQ.w do_AMIGA__done
00022FFE <AmiBlitz3.ab3@5188>   MOVE.w cgoamiga(PC),D1
00023004 <AmiBlitz3.ab3@5189>   JSR writeword
0002300A <AmiBlitz3.ab3@5190>   JSR getbbase
00023010 <AmiBlitz3.ab3@5191>   JSR writeword
00023014 <AmiBlitz3.ab3@5194> BRA.w debugmode_codelabel
00023018 <AmiBlitz3.ab3@5198>   MOVEM.l D2-D7/A2-A4,-(A7)
0002301C <AmiBlitz3.ab3@5201>   MOVEM.l (A7)+,D2-D7/A2-A4
00023022 <AmiBlitz3.ab3@5205>   JSR JL_0_BF6A
00023028 <AmiBlitz3.ab3@5206>   CMP.l #$E,D3
0002302C <AmiBlitz3.ab3@5207>    BCC.w interr4
00023030 <AmiBlitz3.ab3@5208>   MOVE.w #$7000,D1
00023032 <AmiBlitz3.ab3@5209>   OR.w D3,D1
00023038 <AmiBlitz3.ab3@5210>   JSR writeword
0002303C <AmiBlitz3.ab3@5211>   MOVE.w #$C101,D1
00023042 <AmiBlitz3.ab3@5212> JMP Atokejsr                                               ;clear the interupt
00023044 <AmiBlitz3.ab3@5215> inerr:       Ds.w 1                                        ;flag - in error trap mode
00023048 <AmiBlitz3.ab3@5216> errjmp:      Ds.l 1                                        ;where err jump is
0002304C <AmiBlitz3.ab3@5217> errcode:     Ds.l 1
00023050 <AmiBlitz3.ab3@5221>   MOVE.W  #$D202,D1
00023056 <AmiBlitz3.ab3@5222> JMP Atokejsr                                               ;BRA.W Atokejsr
0002305A <AmiBlitz3.ab3@5226>   MOVE.w inerr(PC),D1
0002305E <AmiBlitz3.ab3@5227>    BEQ.w errerr3
00023064 <AmiBlitz3.ab3@5228>   CLR.w inerr
0002306A <AmiBlitz3.ab3@5229>   MOVE.w dontwrite,D1
0002306E <AmiBlitz3.ab3@5230>    BNE.w doendseterr__skip
00023072 <AmiBlitz3.ab3@5231>   MOVEA.l errjmp(PC),A0
00023078 <AmiBlitz3.ab3@5232>   MOVE.l destpointer,(A0)
0002307C <AmiBlitz3.ab3@5235> BRA.w get1bytemain
00023080 <AmiBlitz3.ab3@5239>   MOVE.w #$D205,D1
00023086 <AmiBlitz3.ab3@5240> JMP Atokejsr
0002308C <AmiBlitz3.ab3@5244>   MOVE.w proceduremode,D1
00023090 <AmiBlitz3.ab3@5245>    BNE.w errerr1
00023094 <AmiBlitz3.ab3@5246>   MOVE.w inerr(PC),D1
00023098 <AmiBlitz3.ab3@5247>    BNE.w errerr2
0002309E <AmiBlitz3.ab3@5248>   LEA inerr,a0
000230A0 <AmiBlitz3.ab3@5249>   NOT.w (a0)                                               ;reass
000230A4 <AmiBlitz3.ab3@5250>   MOVE.w #$203C,D1                                         ;move.l #x,d0
000230AA <AmiBlitz3.ab3@5251>   JSR writeword
000230B4 <AmiBlitz3.ab3@5252>   MOVE.l destpointer,errcode
000230B8 <AmiBlitz3.ab3@5253>   BSR.w addoff
000230BC <AmiBlitz3.ab3@5254>   BSR.w writelong
000230C0 <AmiBlitz3.ab3@5255>   MOVE.w #$D201,D1
000230C6 <AmiBlitz3.ab3@5256>   JSR Atokejsr
000230CA <AmiBlitz3.ab3@5257>   MOVE.w #$4EF9,D1                                         ;JMP
000230CE <AmiBlitz3.ab3@5258>   BSR.w writeword
000230D8 <AmiBlitz3.ab3@5259>   MOVE.l destpointer,errjmp
000230DC <AmiBlitz3.ab3@5260>   BSR.w addoff
000230E0 <AmiBlitz3.ab3@5261>   BSR.w writelong
000230E6 <AmiBlitz3.ab3@5262>   MOVE.w dontwrite,D1
000230EA <AmiBlitz3.ab3@5263>    BNE.w do_SetErr__skip
000230EE <AmiBlitz3.ab3@5264>   MOVEA.l errcode(PC),A0
000230F4 <AmiBlitz3.ab3@5265>   MOVE.l destpointer,(A0)
000230F6 <AmiBlitz3.ab3@5268> RTS
000230FA <AmiBlitz3.ab3@5271> intlineat:  Ds.l 1
000230FC <AmiBlitz3.ab3@5275>   MOVEQ.l #-$01,D1                                        ;type - need new string space
00023100 <AmiBlitz3.ab3@5276>   BSR.w errchx
00023106 <AmiBlitz3.ab3@5277>   MOVE.w D1,intstring
00023110 <AmiBlitz3.ab3@5278>   MOVE.l linenumat,intlineat
00023116 <AmiBlitz3.ab3@5279>   JSR JL_0_BF6A                                           ;get constant - int level
0002311C <AmiBlitz3.ab3@5280>   CMP.l #$E,D3
00023120 <AmiBlitz3.ab3@5281>    BCC.w interr4
00023126 <AmiBlitz3.ab3@5282>   ST intsused
0002312C <AmiBlitz3.ab3@5283>   MOVE.w D3,intlevel
00023130 <AmiBlitz3.ab3@5284>   MOVE.w #$7000,D1
00023132 <AmiBlitz3.ab3@5285>   OR.w D3,D1                                              
00023136 <AmiBlitz3.ab3@5286>   BSR.w writeword                                         ;moveq #x,d0
0002313A <AmiBlitz3.ab3@5287>   MOVE.w #$223C,D1                                        ;move.l #x,d1
0002313E <AmiBlitz3.ab3@5288>   BSR.w writeword
00023142 <AmiBlitz3.ab3@5289>   BSR.w addoff
00023148 <AmiBlitz3.ab3@5290>   MOVE.l destpointer,-(A7)
0002314C <AmiBlitz3.ab3@5291>   BSR.w writelong
00023150 <AmiBlitz3.ab3@5292>   MOVE.w #$C100,D1
00023156 <AmiBlitz3.ab3@5293>   JSR Atokejsr
0002315A <AmiBlitz3.ab3@5294>   MOVE.w #$4EF9,D1                                        ;jmp
0002315E <AmiBlitz3.ab3@5295>   BSR.w writeword
00023162 <AmiBlitz3.ab3@5296>   BSR.w addoff
0002316C <AmiBlitz3.ab3@5297>   MOVE.l destpointer,intjmpat
00023170 <AmiBlitz3.ab3@5298>   BSR.w writelong
00023172 <AmiBlitz3.ab3@5299>   MOVEA.l (A7)+,A0
00023178 <AmiBlitz3.ab3@5300>   MOVE.w dontwrite,D1
0002317C <AmiBlitz3.ab3@5301>   BNE.w do_SetInt__dontpoke
00023182 <AmiBlitz3.ab3@5302>   MOVE.l destpointer,(A0)
00023186 <AmiBlitz3.ab3@5305>   MOVE.l intstart0(PC),D1
0002318A <AmiBlitz3.ab3@5306>   BSR.w writelong
00023190 <AmiBlitz3.ab3@5307>   TST.b debugmode
00023194 <AmiBlitz3.ab3@5308>    BEQ.w do_SetInt__norerr
00023196 <AmiBlitz3.ab3@5312>   MOVEQ.l #$02,D1
0002319A <AmiBlitz3.ab3@5313>   BSR.w writetrap
0002319E <AmiBlitz3.ab3@5314>   BSR.w addoff
000231A8 <AmiBlitz3.ab3@5315>   MOVE.l destpointer,intcleanat
000231AC <AmiBlitz3.ab3@5316>   BSR.w writelong
000231B2 <AmiBlitz3.ab3@5317>   MOVE.w intlevel,D1
000231B6 <AmiBlitz3.ab3@5318>   BSR.w writeword
000231BA <AmiBlitz3.ab3@5319>   MOVE.w #$C30B,D1                                         ;disable stack checks
000231C0 <AmiBlitz3.ab3@5320>   JSR Atokejsr
000231C4 <AmiBlitz3.ab3@5323>   MOVE.w #$FED3,D1
000231C8 <AmiBlitz3.ab3@5324>   BSR.w uselib
000231CC <AmiBlitz3.ab3@5325>   MOVE.w #$C102,D1
000231D2 <AmiBlitz3.ab3@5326>   JSR Atokejsr
000231DA <AmiBlitz3.ab3@5327>   MOVE.w #-1,lasta6
000231E4 <AmiBlitz3.ab3@5328>   MOVE.l linenumat,intline
000231E6 <AmiBlitz3.ab3@5329> RTS
000231E8 <AmiBlitz3.ab3@5333>             Ds.w 1                                         ;??looks like obsolved data??
000231EC <AmiBlitz3.ab3@5335> intdata1:   Ds.l 1                                         ;where in data1 a5 is being kept
000231F0 <AmiBlitz3.ab3@5337> intjmpat:   Ds.l 1
000231F4 <AmiBlitz3.ab3@5338> intline:    Ds.l 1
000231F6 <AmiBlitz3.ab3@5339> intstring:  Ds.w 1                                         ;flag 0 = no setint
000231F8 <AmiBlitz3.ab3@5342> intlevel:   Ds.w 1
000231FC <AmiBlitz3.ab3@5343> intcleanat: Ds.l 1
00023200 <AmiBlitz3.ab3@5344> ret15add:   Ds.l 1
00023202 <AmiBlitz3.ab3@5345> ret15cc:    Ds.w 1
0002320A <AmiBlitz3.ab3@5349>   ADDI.l #$12,$2(A7)
00023212 <AmiBlitz3.ab3@5350>   MOVE.l $2(A7),ret15add
00023218 <AmiBlitz3.ab3@5351>   MOVE.w (A7),ret15cc
00023220 <AmiBlitz3.ab3@5352>   MOVE.l #directdo,$2(A7)
00023222 <AmiBlitz3.ab3@5353> RTE
00023226 <AmiBlitz3.ab3@5362>   MOVE.l ret15add(PC),-(A7)
0002322A <AmiBlitz3.ab3@5363>   MOVE.w ret15cc(PC),-(A7)                                 ;15*4
0002322E <AmiBlitz3.ab3@5364>   MOVEM.l D0-D7/A0-A6,-(A7)
00023238 <AmiBlitz3.ab3@5365>   MOVE.l destbufferend,trap15temp                          ;store high buff addr
00023242 <AmiBlitz3.ab3@5366>   MOVE.l destbufferstart,trap15temp2
0002324C <AmiBlitz3.ab3@5367>   MOVE.l libend,templibend
00023256 <AmiBlitz3.ab3@5368>   MOVE.l data1start,tempdata1start
0002325C <AmiBlitz3.ab3@5369>   CLR.l hunkoffsetcounter
00023262 <AmiBlitz3.ab3@5371>   MOVE.l directbuffer,a0
00023268 <AmiBlitz3.ab3@5375>   MOVE.l a0,destbufferstart
0002326E <AmiBlitz3.ab3@5376>   ADD.l #3900,a0
00023274 <AmiBlitz3.ab3@5377>   MOVE.l a0,destbufferend
0002327A <AmiBlitz3.ab3@5378>   TST.b exdebug
0002327E <AmiBlitz3.ab3@5379>   BEQ 'l1
00023284 <AmiBlitz3.ab3@5380>   MOVE.l a0,libend
0002328A <AmiBlitz3.ab3@5381>   ADD.l #4000,a0
00023290 <AmiBlitz3.ab3@5382>   MOVE.l a0,data1start
0002329A <AmiBlitz3.ab3@5385>   MOVE.l #dircont,errcont
000232A0 <AmiBlitz3.ab3@5386> 
000232A6 <AmiBlitz3.ab3@5387>   MOVE.l A7,errstack
000232AE <AmiBlitz3.ab3@5388>   MOVE.w #$FFFF,dirmode
000232B2 <AmiBlitz3.ab3@5390>     MOVEA.l ret15add(PC),A1
000232B8 <AmiBlitz3.ab3@5391>     MOVE.w -(A1),blitzmode
000232BA <AmiBlitz3.ab3@5392>     CLR.l -(A1)
000232C0 <AmiBlitz3.ab3@5393>     MOVE.l -(A1),firstglob
000232C6 <AmiBlitz3.ab3@5394>     MOVE.l -(A1),firstlocal
000232CC <AmiBlitz3.ab3@5396>   CLR.w proceduremode
000232D2 <AmiBlitz3.ab3@5397>   MOVE.l firstglob,D0
000232D8 <AmiBlitz3.ab3@5398>   OR.l firstlocal,D0
000232DC <AmiBlitz3.ab3@5399>   BEQ.b directdo__skip
000232E2 <AmiBlitz3.ab3@5400>   NOT.w proceduremode
000232E4 <AmiBlitz3.ab3@5403>   MOVEA.l -(A1),A0                                         ;address of string
000232E6 <AmiBlitz3.ab3@5407>   MOVE.l A0,-(A7)
00023324 <AmiBlitz3.ab3@5410>   !ComData_GetL{comFunc_DebugTrap,A1}
00023326 <AmiBlitz3.ab3@5412>   JSR (A1)                                                 ;tokenise line.....
00023328 <AmiBlitz3.ab3@5414>   MOVEA.l (A7)+,A5
00023332 <AmiBlitz3.ab3@5415>   MOVE.l directbuffer,destpointer
00023338 <AmiBlitz3.ab3@5416>   TST.b exdebug
0002333C <AmiBlitz3.ab3@5417>   BEQ 'noexdebug
0002333E <AmiBlitz3.ab3@5418>   MOVE.l a5,a0
00023344 <AmiBlitz3.ab3@5419>   MOVE.l #200,d0
0002334A <AmiBlitz3.ab3@5422>     MOVE.b 0(a0,d0.l),8(a0,d0.l)
0002334E <AmiBlitz3.ab3@5423>   DBF d0,'l1
00023354 <AmiBlitz3.ab3@5428>   MOVE.l destpointer,a0
00023358 <AmiBlitz3.ab3@5429>   MOVE.w #$207c,(a0)+
0002335A <AmiBlitz3.ab3@5430>   MOVE.l a5,d0
00023360 <AmiBlitz3.ab3@5431>   ADD.l #$206,d0                                           ;constant from debuglib
00023362 <AmiBlitz3.ab3@5432>   MOVE.l d0,(a0)+
00023368 <AmiBlitz3.ab3@5433>   MOVE.l a0,destpointer
0002336A <AmiBlitz3.ab3@5434>   MOVE.l a5,a0
0002336E <AmiBlitz3.ab3@5435>   MOVE.w #$8039,(a0)+                                      ;TokeJsr 164 (inputoutputlib) LSL 7+4
00023374 <AmiBlitz3.ab3@5436>   MOVE.l #"$520",(a0)+
00023378 <AmiBlitz3.ab3@5437>   MOVE.w #"4:",(a0)+
0002337E <AmiBlitz3.ab3@5440>   CLR.w dontwrite
00023386 <AmiBlitz3.ab3@5441>   MOVE.w #$FFFF,lasta6
0002338A <AmiBlitz3.ab3@5442>   BSR.w compile_line                                        ;.....compile it
00023390 <AmiBlitz3.ab3@5443>   TST.b exdebug
00023394 <AmiBlitz3.ab3@5444>   BEQ 'noexdebug2
0002339A <AmiBlitz3.ab3@5445>   JSR JL_0_6C76
000233A0 <AmiBlitz3.ab3@5448>   CLR.w proceduremode
000233A4 <AmiBlitz3.ab3@5449>   BSR.w errchx
000233A8 <AmiBlitz3.ab3@5450>   MOVE.w #$4EF9,D1
000233AC <AmiBlitz3.ab3@5451>   BSR.w writeword                                          ;JMP
000233B0 <AmiBlitz3.ab3@5452>   MOVE.l ret15add(PC),D1
000233B4 <AmiBlitz3.ab3@5453>   BSR.w writelong                                          ;jmp to done
000233BA <AmiBlitz3.ab3@5454>   MOVE.w dontwrite,D0
000233BE <AmiBlitz3.ab3@5455>    BNE.w nodirmem
000233C6 <AmiBlitz3.ab3@5456>   MOVE.l directbuffer,$3E(A7)                              ;install code address
000233CC <AmiBlitz3.ab3@5459>   CLR.w dirmode
000233D2 <AmiBlitz3.ab3@5460>   MOVE.w ret15cc(PC),$3C(A7)
000233DC <AmiBlitz3.ab3@5461>   MOVE.l trap15temp,destbufferend
000233E6 <AmiBlitz3.ab3@5462>   MOVE.l trap15temp2,destbufferstart
000233F0 <AmiBlitz3.ab3@5463>   MOVE.l tempdata1start,data1start
000233FA <AmiBlitz3.ab3@5464>   MOVE.l templibend,libend
000233FE <AmiBlitz3.ab3@5465>   MOVEM.l (A7)+,D0-D7/A0-A6
00023402 <AmiBlitz3.ab3@5466>   BSR.w Aclearcache                                        ;selden used
00023404 <AmiBlitz3.ab3@5467> RTR
00023408 <AmiBlitz3.ab3@5470>   MOVEA.l ret15add(PC),A0
0002340A <AmiBlitz3.ab3@5471>   SUBQ.w #2,A0
0002340C <AmiBlitz3.ab3@5472>   MOVE.l D0,-(A0)
00023410 <AmiBlitz3.ab3@5473> BRA.w direxit
00023414 <AmiBlitz3.ab3@5477>   MOVE.w $6(A3),D1
00023418 <AmiBlitz3.ab3@5478>   BSR.w uselib                                             ;get lib for base address
0002341C <AmiBlitz3.ab3@5479>   MOVE.w $A(A1),-(A7)                                      ;libbase reg
0002341E <AmiBlitz3.ab3@5480>   ADDQ.w #8,A3
00023420 <AmiBlitz3.ab3@5481>   MOVE.w (A3)+,-(A7)                                       ;get offset for lib
00023422 <AmiBlitz3.ab3@5482>   MOVE.l A3,-(A7)
00023424 <AmiBlitz3.ab3@5486>   MOVEQ.l #$00,D3
0002342A <AmiBlitz3.ab3@5487>   JSR checka4a5
0002342C <AmiBlitz3.ab3@5489>   MOVE.b (A3)+,D1
00023430 <AmiBlitz3.ab3@5490>    BMI.w stamigalib__done
00023432 <AmiBlitz3.ab3@5491>   MOVEQ.l #$03,D2
00023434 <AmiBlitz3.ab3@5492>   ADDQ.w #1,D3
00023438 <AmiBlitz3.ab3@5493>   MOVEM.l D3/A3,-(A7)
0002343E <AmiBlitz3.ab3@5494>   MOVE.b funcparloop,-(a7)
00023446 <AmiBlitz3.ab3@5495>   MOVE.b #0,funcparloop
0002344C <AmiBlitz3.ab3@5496>   MOVE.l leftsidetype,-(a7)
00023452 <AmiBlitz3.ab3@5497>   MOVE.l rightsidetype,-(a7)
00023458 <AmiBlitz3.ab3@5498>   CLR.l leftsidetype
0002345E <AmiBlitz3.ab3@5499>   CLR.l rightsidetype
00023464 <AmiBlitz3.ab3@5500>   MOVE.b blitzparloop,-(a7)
0002346C <AmiBlitz3.ab3@5501>   MOVE.b #1,blitzparloop                                 ;write the parameter to stack
00023472 <AmiBlitz3.ab3@5502>   JSR peval
00023478 <AmiBlitz3.ab3@5503>   MOVE.b (a7)+,blitzparloop
0002347E <AmiBlitz3.ab3@5504>   MOVE.l (a7)+,rightsidetype
00023484 <AmiBlitz3.ab3@5505>   MOVE.l (a7)+,leftsidetype
0002348A <AmiBlitz3.ab3@5506>   MOVE.b (a7)+,funcparloop
0002348E <AmiBlitz3.ab3@5507>   MOVEM.l (A7)+,D3/A3
00023492 <AmiBlitz3.ab3@5508>   CMP.w #$2C,D0
00023496 <AmiBlitz3.ab3@5509>    BEQ.w stamigalib__loop
00023498 <AmiBlitz3.ab3@5510>   TST.b (A3)
0002349C <AmiBlitz3.ab3@5511>    BPL.w syntaxerr
0002349E <AmiBlitz3.ab3@5514>   MOVEA.l (A7)+,A3
000234A0 <AmiBlitz3.ab3@5515>   SUBQ.w #1,D3
000234A4 <AmiBlitz3.ab3@5516>    BPL.w stamigalib__toend
000234A8 <AmiBlitz3.ab3@5517>    BSR.w get1bytemain                                      ;no pars - get :
000234AC <AmiBlitz3.ab3@5518> BRA.w stamigalib__nopars
000234AE <AmiBlitz3.ab3@5521>   TST.b (A3)+                                              ;go to end of params
000234B2 <AmiBlitz3.ab3@5522>    BPL.w stamigalib__toend
000234B4 <AmiBlitz3.ab3@5523>   SUBQ.w #1,A3
000234B6 <AmiBlitz3.ab3@5526>    MOVEQ.l #$00,D1
000234B8 <AmiBlitz3.ab3@5527>    MOVE.b -(A3),D1
000234BC <AmiBlitz3.ab3@5528>    BTST #$4,D1
000234C0 <AmiBlitz3.ab3@5529>     BNE.w stamigalib__addreg
000234C2 <AmiBlitz3.ab3@5530>    LSL.w #8,D1
000234C4 <AmiBlitz3.ab3@5531>    LSL.w #1,D1
000234C8 <AmiBlitz3.ab3@5532>    ORI.w #$201F,D1
000234CC <AmiBlitz3.ab3@5533>  BRA.w stamigalib__gotit
000234D0 <AmiBlitz3.ab3@5536>    ANDI.w #$7,D1
000234D2 <AmiBlitz3.ab3@5537>    LSL.w #8,D1
000234D4 <AmiBlitz3.ab3@5538>    LSL.w #1,D1
000234D8 <AmiBlitz3.ab3@5539>    ORI.w #$205F,D1
000234DC <AmiBlitz3.ab3@5542>     BSR.w writeword
000234E0 <AmiBlitz3.ab3@5543>   DBF D3,stamigalib__loop2
000234E6 <AmiBlitz3.ab3@5546>   MOVE.w (A7)+,libjsr+2
000234EC <AmiBlitz3.ab3@5547>   MOVE.w (A7)+,libbase+2
000234F2 <AmiBlitz3.ab3@5548>   MOVE.l libbase,D1
000234F6 <AmiBlitz3.ab3@5549>    BSR.w writelong
000234FC <AmiBlitz3.ab3@5550>   MOVE.l libjsr,D1
00023502 <AmiBlitz3.ab3@5551>   JSR writelong
00023508 <AmiBlitz3.ab3@5552>   JSR restorea4a5
0002350A <AmiBlitz3.ab3@5553>   RTS
00023510 <AmiBlitz3.ab3@5556>   MOVE.l data1,D4
00023516 <AmiBlitz3.ab3@5557>   SUB.l data1start,D4
0002351C <AmiBlitz3.ab3@5558>   ADD.l #10000,d4
00023522 <AmiBlitz3.ab3@5559>   MOVE.l libend,D3
00023528 <AmiBlitz3.ab3@5560>   SUB.l destbufferend,D3
0002352E <AmiBlitz3.ab3@5561>   ADD.l #40000,d3
00023534 <AmiBlitz3.ab3@5562>   MOVE.l bigpc,D2
0002353A <AmiBlitz3.ab3@5563>   SUB.l destbufferstart,D2
00023540 <AmiBlitz3.ab3@5564>   ADD.l #20000,d2
00023546 <AmiBlitz3.ab3@5565>   MOVE.l databuffer,D5
0002354C <AmiBlitz3.ab3@5566>   ADD.l #10000,D5
00023550 <AmiBlitz3.ab3@5567> BRA newallox
00023556 <AmiBlitz3.ab3@5571>   MOVE.l objectbuffer,D2
00023558 <AmiBlitz3.ab3@5572>   LSR.l #1,D2
0002355E <AmiBlitz3.ab3@5573>   ADD.l objectbuffer,D2
00023564 <AmiBlitz3.ab3@5574>   MOVE.l libsbuffer,D3
00023566 <AmiBlitz3.ab3@5575>   LSR.l #1,D3
0002356C <AmiBlitz3.ab3@5576>   ADD.l libsbuffer,D3
00023572 <AmiBlitz3.ab3@5577>   MOVE.l systembuffer,D4
00023574 <AmiBlitz3.ab3@5578>   LSR.l #1,D4
0002357A <AmiBlitz3.ab3@5579>   ADD.l systembuffer,D4
00023580 <AmiBlitz3.ab3@5580>   MOVE.l databuffer,D5
00023582 <AmiBlitz3.ab3@5581>   LSR.l #1,D5
00023588 <AmiBlitz3.ab3@5582>   ADD.l databuffer,D5
0002358C <AmiBlitz3.ab3@5583> BRA.w newallox
00023592 <AmiBlitz3.ab3@5587>   MOVE.l bigpc,D2
00023598 <AmiBlitz3.ab3@5588>   SUB.l destbufferstart,D2                                     ;size of object buffer
0002359E <AmiBlitz3.ab3@5589>   SUB.l savefuncspace,d2
000235A4 <AmiBlitz3.ab3@5591>   TST.w debugversion
000235A8 <AmiBlitz3.ab3@5592>    BNE.b alloxadj__skip
000235AE <AmiBlitz3.ab3@5593>   ADDI.l #$800,D2
000235B4 <AmiBlitz3.ab3@5596>   MOVE.l libend,D3
000235BA <AmiBlitz3.ab3@5597>   SUB.l destbufferend,D3
000235C0 <AmiBlitz3.ab3@5599>   MOVE.l data1,D4
000235C6 <AmiBlitz3.ab3@5600>   SUB.l data1start,D4
000235CC <AmiBlitz3.ab3@5602>   MOVE.l data2,D5
000235D2 <AmiBlitz3.ab3@5603>   SUB.l data2at,D5
000235D8 <AmiBlitz3.ab3@5605>   CLR.l morememadd
000235DC <AmiBlitz3.ab3@5608>   BSR.w makeallox
000235E0 <AmiBlitz3.ab3@5609>   BNE.w newallox__done
000235E4 <AmiBlitz3.ab3@5610> BRA.w init_buffers
000235E6 <AmiBlitz3.ab3@5613> RTS
000235EC <AmiBlitz3.ab3@5617>   MOVEA.l _execbase,A6
000235F2 <AmiBlitz3.ab3@5618>   MOVE.l objlen,D0
000235F6 <AmiBlitz3.ab3@5619>   BEQ.w freeallox__skip
000235FC <AmiBlitz3.ab3@5620>   CLR.l objlen
00023602 <AmiBlitz3.ab3@5621>   MOVEA.l destbufferstart,A1
00023608 <AmiBlitz3.ab3@5622>   MOVE.l mempool,a0
0002360C <AmiBlitz3.ab3@5623> JMP _FreeVec(A6)
0002360E <AmiBlitz3.ab3@5626> RTS
00023614 <AmiBlitz3.ab3@5630>   MOVE.l objectbuffer,D2
0002361A <AmiBlitz3.ab3@5631>   MOVE.l libsbuffer,D3
00023620 <AmiBlitz3.ab3@5632>   MOVE.l systembuffer,D4
00023626 <AmiBlitz3.ab3@5633>   MOVE.l databuffer,D5
0002362E <AmiBlitz3.ab3@5636>   MOVE.w #$FFFF,anyerrs
00023632 <AmiBlitz3.ab3@5637>   BSR.w freeallox
00023634 <AmiBlitz3.ab3@5641>   ADDQ.l #1,D2
00023638 <AmiBlitz3.ab3@5642>   BCLR #$0,D2
0002363A <AmiBlitz3.ab3@5643>   ADDQ.l #1,D3
0002363E <AmiBlitz3.ab3@5644>   BCLR #$0,D3
00023640 <AmiBlitz3.ab3@5645>   ADDQ.l #1,D4
00023644 <AmiBlitz3.ab3@5646>   BCLR #$0,D4
00023646 <AmiBlitz3.ab3@5647>   TST.l d5
0002364A <AmiBlitz3.ab3@5648>   BNE 'l1
0002364C <AmiBlitz3.ab3@5651>   ADDQ.l #1,D5
00023650 <AmiBlitz3.ab3@5652>   BCLR #$0,D5
00023652 <AmiBlitz3.ab3@5653>   MOVE.l D2,D0
00023654 <AmiBlitz3.ab3@5654>   ADD.l D3,D0
00023656 <AmiBlitz3.ab3@5655>   ADD.l D4,D0
00023658 <AmiBlitz3.ab3@5656>   ADD.l D5,D0
0002365E <AmiBlitz3.ab3@5657>   ADD.l #moremem,d0
00023660 <AmiBlitz3.ab3@5658>   MOVE.l D0,D6
00023666 <AmiBlitz3.ab3@5659>   MOVE.l #MemfPublic_MemfClear,D1
0002366C <AmiBlitz3.ab3@5660>   MOVE.l mempool,a0
00023672 <AmiBlitz3.ab3@5661>   MOVEA.l _execbase,A6
00023676 <AmiBlitz3.ab3@5662>   JSR _AllocVec(a6)                                        ;alloc mem for objectbuffer
00023678 <AmiBlitz3.ab3@5664>   TST.l D0
0002367C <AmiBlitz3.ab3@5665>   BEQ.w exit_initbuffers
00023682 <AmiBlitz3.ab3@5666>   MOVE.l D6,objlen
00023688 <AmiBlitz3.ab3@5667>   MOVE.l D2,objectbuffer
0002368E <AmiBlitz3.ab3@5668>   MOVE.l D3,libsbuffer
00023694 <AmiBlitz3.ab3@5669>   MOVE.l D4,systembuffer
0002369A <AmiBlitz3.ab3@5670>   MOVE.l D5,databuffer
000236A0 <AmiBlitz3.ab3@5671>   MOVE.l D0,destbufferstart
000236D4 <AmiBlitz3.ab3@5674>   !ComData_SetL{comPtr_DestBufferStart,D0}
000236D6 <AmiBlitz3.ab3@5675>   ADD.l D2,D0
000236DC <AmiBlitz3.ab3@5676>   MOVE.l D0,destbufferend
000236DE <AmiBlitz3.ab3@5677>   ADD.l D3,D0
000236E4 <AmiBlitz3.ab3@5678>   MOVE.l D0,data1start
000236E6 <AmiBlitz3.ab3@5679>   ADD.l D4,D0
000236EC <AmiBlitz3.ab3@5680>   MOVE.l D0,data2at
000236EE <AmiBlitz3.ab3@5681>   ADD.l D5,D0
000236F4 <AmiBlitz3.ab3@5682>   MOVE.l D0,allat
000236F6 <AmiBlitz3.ab3@5685> RTS
000236FA <AmiBlitz3.ab3@5689>   Dc.b $00,$00,$00,$01                                     ;         1
000236FE <AmiBlitz3.ab3@5690>   Dc.b $00,$00,$00,$0A                                     ;        10
00023702 <AmiBlitz3.ab3@5691>   Dc.b $00,$00,$00,$64                                     ;       100
00023706 <AmiBlitz3.ab3@5692>   Dc.b $00,$00,$03,$E8                                     ;      1000
0002370A <AmiBlitz3.ab3@5693>   Dc.b $00,$00,$27,$10                                     ;     10000
0002370E <AmiBlitz3.ab3@5694>   Dc.b $00,$01,$86,$A0                                     ;    100000
00023712 <AmiBlitz3.ab3@5695>   Dc.b $00,$0F,$42,$40                                     ;   1000000
00023716 <AmiBlitz3.ab3@5696>   Dc.b $00,$98,$96,$80                                     ;  10000000
0002371A <AmiBlitz3.ab3@5697>   Dc.b $05,$F5,$E1,$00                                     ; 100000000
0002371E <AmiBlitz3.ab3@5698>   Dc.b $3B,$9A,$CA,$00                                     ;1000000000
00023720 <AmiBlitz3.ab3@5702>   MOVEQ.l #$00,D1                                          ;no zero printed
00023722 <AmiBlitz3.ab3@5703>   MOVEQ.l #$24,D3                                          ; "$"
00023724 <AmiBlitz3.ab3@5706>   MOVEQ.l #$30,D4                                          ; "0"
00023728 <AmiBlitz3.ab3@5709>     CMP.l divisors(PC,D3.W),D2
0002372C <AmiBlitz3.ab3@5710>     BCS.w makelong__skip
00023730 <AmiBlitz3.ab3@5711>     SUB.l divisors(PC,D3.W),D2
00023732 <AmiBlitz3.ab3@5712>     ADDQ.w #1,D4
00023736 <AmiBlitz3.ab3@5713> BRA.w makelong__loop2
0002373A <AmiBlitz3.ab3@5716>   CMP.b #"0",D4
0002373E <AmiBlitz3.ab3@5717>   BNE.w makelong__doit
00023740 <AmiBlitz3.ab3@5718>   TST.w D1
00023744 <AmiBlitz3.ab3@5719>   BEQ.w makelong__skip2
00023746 <AmiBlitz3.ab3@5722>   MOVE.b D4,(A0)+
00023748 <AmiBlitz3.ab3@5723>   MOVEQ.l #$01,D1
0002374A <AmiBlitz3.ab3@5726>   SUBQ.w #4,D3
0002374E <AmiBlitz3.ab3@5727>   BPL.w makelong__loop
00023750 <AmiBlitz3.ab3@5728>   TST.w D1
00023754 <AmiBlitz3.ab3@5729>   BNE.w makelong__skip3
00023758 <AmiBlitz3.ab3@5730>   MOVE.b #"0",(A0)+
0002375A <AmiBlitz3.ab3@5733>   CLR.b (A0)
0002375C <AmiBlitz3.ab3@5734> RTS
0002377C <AmiBlitz3.ab3@5737> str_residentrequester:  Dc.b "Name of Resident File to Create",0 : Even        ;restext org source
0002383C <AmiBlitz3.ab3@5738> str_residentpath:       Ds.l 48                                                ;respath org source
000238FC <AmiBlitz3.ab3@5739> str_residentname:       Ds.l 48                                                ;resname org source
00023902 <AmiBlitz3.ab3@5743>   MOVE.l macrobase,D0
00023906 <AmiBlitz3.ab3@5744>    BNE.w create_residentfile
0002390C <AmiBlitz3.ab3@5745>   MOVE.l newtype_string,D0
00023910 <AmiBlitz3.ab3@5746>    BNE.w create_residentfile
00023916 <AmiBlitz3.ab3@5747>   MOVEA.l labelbase,A2
0002391A <AmiBlitz3.ab3@5750>     CMPA.w #$0,A2
0002391E <AmiBlitz3.ab3@5751>      BEQ.w menu_createresidentfile__err
00023926 <AmiBlitz3.ab3@5752>     CMPI.l #$1,$4(A2)
0002392A <AmiBlitz3.ab3@5753>      BEQ.w create_residentfile
0002392C <AmiBlitz3.ab3@5754>     MOVEA.l (A2),A2
00023930 <AmiBlitz3.ab3@5755> BRA.w menu_createresidentfile__loop
0002395A <AmiBlitz3.ab3@5758>   !basic
000239BC <AmiBlitz3.ab3@5759> 
000239DA <AmiBlitz3.ab3@5760>   !asm
000239DC <AmiBlitz3.ab3@5761> RTS
00023A1A <AmiBlitz3.ab3@5767>   !ComData_GetL{comFunc_ASLFileRequest,A3}
00023A20 <AmiBlitz3.ab3@5768>   LEA str_residentrequester,A2
00023A26 <AmiBlitz3.ab3@5769>   LEA str_residentpath,A0
00023A2C <AmiBlitz3.ab3@5770>   LEA str_residentname,A1
00023A56 <AmiBlitz3.ab3@5771>   !basic
00023A8E <AmiBlitz3.ab3@5772>     Poke$ ?str_residentpath,my_residentsdir$
00023ABA <AmiBlitz3.ab3@5773>     Poke$ ?str_residentname,".res"
00023AD8 <AmiBlitz3.ab3@5774>   !asm
00023ADA <AmiBlitz3.ab3@5776>   JSR (A3)                                                 ;open ped filerequest
00023ADE <AmiBlitz3.ab3@5778>   BEQ.w menu_createresidentfile__err
00023AE0 <AmiBlitz3.ab3@5781>   MOVE.l D0,D1
00023AE6 <AmiBlitz3.ab3@5782>   MOVE.l #HUNK_RELOC_8__MODE_NEWFILE,D2
00023AEA <AmiBlitz3.ab3@5783>   MOVEA.l _dosbase(PC),A6
00023AEE <AmiBlitz3.ab3@5784>   JSR _Open(A6)
00023AF0 <AmiBlitz3.ab3@5785>   MOVE.l D0,D7                                             ;handle
00023AF4 <AmiBlitz3.ab3@5786>   BEQ.w menu_createresidentfile__err
00023AF8 <AmiBlitz3.ab3@5787>   MOVEM.l d2-d7/a0-a6,-(a7)
00023AFE <AmiBlitz3.ab3@5788>   LEA devo,a0
00023B04 <AmiBlitz3.ab3@5789>   LEA ptr_parameterstore,a1
00023B06 <AmiBlitz3.ab3@5792>     MOVE.b (a0)+,(a1)+
00023B0A <AmiBlitz3.ab3@5793>   BNE 'l1
00023B0C <AmiBlitz3.ab3@5794>   MOVEQ #13,d2
00023B12 <AmiBlitz3.ab3@5795>   JSR findlabel2
00023B16 <AmiBlitz3.ab3@5796>   BNE 'd
00023B1A <AmiBlitz3.ab3@5797>   TST.l 8(a2)
00023B1E <AmiBlitz3.ab3@5798>   BEQ 'd2
00023B48 <AmiBlitz3.ab3@5799>   !basic
00023BAA <AmiBlitz3.ab3@5800>     error{!TRANS{"Cannot create Resident with develope debug 1"}}
00023BC8 <AmiBlitz3.ab3@5801>   !asm
00023BCC <AmiBlitz3.ab3@5802>   MOVEM.l (a7)+,d2-d7/a0-a6
00023BD0 <AmiBlitz3.ab3@5803>   MOVEA.l _dosbase(PC),A6
00023BD2 <AmiBlitz3.ab3@5804>   MOVE.l d7,d1
00023BD6 <AmiBlitz3.ab3@5805>   JSR _Close(a6)
00023BDA <AmiBlitz3.ab3@5806> BRA menu_createresidentfile__err
00023BDE <AmiBlitz3.ab3@5810>   MOVEM.l (a7)+,d2-d7/a0-a6
00023BE2 <AmiBlitz3.ab3@5811>   BSR.w call_setpointerbusy
00023BE6 <AmiBlitz3.ab3@5813>   BSR.w AJL_0_7962
00023BE8 <AmiBlitz3.ab3@5814>   MOVE.l D7,D1
00023BEE <AmiBlitz3.ab3@5815>   MOVE.l #tsthead,D2                                       ;header
00023BF0 <AmiBlitz3.ab3@5816>   MOVEQ.l #$20,D3
00023BF4 <AmiBlitz3.ab3@5817>   MOVEA.l _dosbase(PC),A6
00023BF8 <AmiBlitz3.ab3@5818>   JSR _Write(A6)
00023BFA <AmiBlitz3.ab3@5819>   MOVEQ.l #$00,D6                                          ;offset from start of file!
00023BFE <AmiBlitz3.ab3@5820>   BSR.w restypes
00023C02 <AmiBlitz3.ab3@5821>   BSR.w resmacs
00023C06 <AmiBlitz3.ab3@5822>   BSR.w resconsts
00023C08 <AmiBlitz3.ab3@5823>   MOVE.l D6,D3
00023C0A <AmiBlitz3.ab3@5824>   ADDQ.l #3,D3
00023C10 <AmiBlitz3.ab3@5825>   ANDI.l #$FFFFFFFC,D3                                    ;long word align
00023C12 <AmiBlitz3.ab3@5826>   MOVE.l D3,-(A7)
00023C14 <AmiBlitz3.ab3@5827>   SUB.l D6,D3
00023C18 <AmiBlitz3.ab3@5828>   BEQ.w menu_createresidentfile__noalign
00023C1E <AmiBlitz3.ab3@5829>   MOVE.l #writelist,D2
00023C20 <AmiBlitz3.ab3@5830>   MOVE.l D7,D1
00023C26 <AmiBlitz3.ab3@5831>   MOVEA.l _dosbase,A6
00023C2A <AmiBlitz3.ab3@5832>   JSR _Write(A6)
00023C34 <AmiBlitz3.ab3@5835>    MOVE.l hunkoffsetcounter,tstsize3
00023C38 <AmiBlitz3.ab3@5836>    BEQ.w menu_createresidentfile__skip2a
00023C3A <AmiBlitz3.ab3@5837>   MOVE.l D7,D1
00023C40 <AmiBlitz3.ab3@5838>   MOVE.l #tstend,D2
00023C42 <AmiBlitz3.ab3@5839>   MOVEQ.l #$0C,D3
00023C48 <AmiBlitz3.ab3@5840>   MOVEA.l _dosbase,A6
00023C4C <AmiBlitz3.ab3@5841>    JSR _Write(A6)
00023C52 <AmiBlitz3.ab3@5845>   MOVEA.l hunkoffsetbase,A2
00023C56 <AmiBlitz3.ab3@5848>   CMPA.w #$0,A2
00023C5A <AmiBlitz3.ab3@5849>    BEQ.w menu_createresidentfile__skip2
00023C5E <AmiBlitz3.ab3@5850>   LEA $4(A2),A1
00023C60 <AmiBlitz3.ab3@5851>   MOVE.l D7,D1
00023C62 <AmiBlitz3.ab3@5852>   MOVE.l A1,D2
00023C64 <AmiBlitz3.ab3@5853>   MOVEQ.l #$04,D3
00023C6A <AmiBlitz3.ab3@5854>   MOVEA.l _dosbase,A6
00023C6E <AmiBlitz3.ab3@5855>    JSR _Write(A6)
00023C70 <AmiBlitz3.ab3@5856>   MOVEA.l (A2),A2
00023C74 <AmiBlitz3.ab3@5857> BRA.w menu_createresidentfile__oloop
00023C76 <AmiBlitz3.ab3@5860>   MOVE.l D7,D1
00023C7C <AmiBlitz3.ab3@5861>   MOVE.l #zero,D2
00023C7E <AmiBlitz3.ab3@5862>   MOVEQ.l #$04,D3
00023C84 <AmiBlitz3.ab3@5863>   MOVEA.l _dosbase,A6
00023C88 <AmiBlitz3.ab3@5864>   JSR _Write(A6)
00023C8A <AmiBlitz3.ab3@5867>   MOVE.l D7,D1
00023C90 <AmiBlitz3.ab3@5868>   MOVE.l #tstdone,D2
00023C92 <AmiBlitz3.ab3@5869>   MOVEQ.l #$04,D3
00023C98 <AmiBlitz3.ab3@5870>   MOVEA.l _dosbase,A6
00023C9C <AmiBlitz3.ab3@5871>    JSR _Write(A6)
00023C9E <AmiBlitz3.ab3@5872>   MOVE.l (A7)+,D0
00023CA0 <AmiBlitz3.ab3@5873>   LSR.l #2,D0
00023CA6 <AmiBlitz3.ab3@5874>   MOVE.l D0,temp1
00023CA8 <AmiBlitz3.ab3@5875>   MOVE.l D7,D1
00023CAA <AmiBlitz3.ab3@5876>   MOVEQ.l #$14,D2
00023CAC <AmiBlitz3.ab3@5877>   MOVEQ.l #-$01,D3
00023CB0 <AmiBlitz3.ab3@5878>   JSR _Seek(A6)
00023CB2 <AmiBlitz3.ab3@5879>   MOVE.l D7,D1
00023CB8 <AmiBlitz3.ab3@5880>   MOVE.l #temp1,D2
00023CBA <AmiBlitz3.ab3@5881>   MOVEQ.l #$04,D3
00023CBE <AmiBlitz3.ab3@5882>    JSR _Write(A6)
00023CC0 <AmiBlitz3.ab3@5883>   MOVE.l D7,D1
00023CC2 <AmiBlitz3.ab3@5884>   MOVEQ.l #$1C,D2
00023CC4 <AmiBlitz3.ab3@5885>   MOVEQ.l #-$01,D3
00023CC8 <AmiBlitz3.ab3@5886>    JSR _Seek(A6)
00023CCA <AmiBlitz3.ab3@5887>   MOVE.l D7,D1
00023CD0 <AmiBlitz3.ab3@5888>   MOVE.l #temp1,D2
00023CD2 <AmiBlitz3.ab3@5889>   MOVEQ.l #$04,D3
00023CD6 <AmiBlitz3.ab3@5890>    JSR _Write(A6)
00023CD8 <AmiBlitz3.ab3@5891>   MOVE.l D7,D1
00023CDC <AmiBlitz3.ab3@5892>    JSR _Close(A6)
00023CE0 <AmiBlitz3.ab3@5893> BRA.w call_setpointernormal
00023CE2 <AmiBlitz3.ab3@5897>   ADDQ.w #5,D1
00023CE4 <AmiBlitz3.ab3@5898>   ADDQ.b #8,D0
00023CE8 <AmiBlitz3.ab3@5901>     CMPA.w #$0,A2
00023CEC <AmiBlitz3.ab3@5902>     BEQ.w writelist__done
00023CF0 <AmiBlitz3.ab3@5903>      BSR.w writeitem
00023CF2 <AmiBlitz3.ab3@5904>     MOVEA.l (A2),A2
00023CF6 <AmiBlitz3.ab3@5905> BRA.w writelist__loop
00023CF8 <AmiBlitz3.ab3@5908> RTS
00023CFA <AmiBlitz3.ab3@5911>   MOVEQ.l #$00,D3
00023CFE <AmiBlitz3.ab3@5912>   MOVE.b $0(A2,D5.W),D3
00023D00 <AmiBlitz3.ab3@5913>   ADDQ.w #1,D3
00023D04 <AmiBlitz3.ab3@5914>   BCLR #$0,D3                                              ;word align
00023D06 <AmiBlitz3.ab3@5915>   MOVE.l (A2),-(A7)
00023D0A <AmiBlitz3.ab3@5916>    BEQ.w writeitem__skip
00023D0E <AmiBlitz3.ab3@5917>    BSR.w resoff
00023D10 <AmiBlitz3.ab3@5918>   ADD.l D3,D6
00023D12 <AmiBlitz3.ab3@5919>   MOVE.l D6,(A2)
00023D14 <AmiBlitz3.ab3@5920>   SUB.l D3,D6
00023D16 <AmiBlitz3.ab3@5923>    ADD.l D3,D6
00023D18 <AmiBlitz3.ab3@5924>   MOVE.l A2,D2
00023D1A <AmiBlitz3.ab3@5925>   MOVE.l D7,D1
00023D20 <AmiBlitz3.ab3@5926>   MOVEA.l _dosbase,A6
00023D24 <AmiBlitz3.ab3@5927>    JSR _Write(A6)
00023D26 <AmiBlitz3.ab3@5928>   MOVE.l (A7)+,(A2)
00023D28 <AmiBlitz3.ab3@5929> RTS
00023D2A <AmiBlitz3.ab3@5932>   MOVE.l D6,D2
00023D2E <AmiBlitz3.ab3@5933> BRA.w addhunkoffset
00023D32 <AmiBlitz3.ab3@5937>     CMPA.w #$0,A2
00023D36 <AmiBlitz3.ab3@5938>      BEQ.w writeoffs__done
00023D3C <AmiBlitz3.ab3@5939>     MOVEA.l newtypebase,A1
00023D3E <AmiBlitz3.ab3@5940>     MOVEQ.l #$00,D1
00023D42 <AmiBlitz3.ab3@5943>       CMPA.w #$0,A1
00023D46 <AmiBlitz3.ab3@5944>       BEQ.w writeoffs__found
00023D4A <AmiBlitz3.ab3@5945>       CMPA.l $A(A2),A1
00023D4E <AmiBlitz3.ab3@5946>        BEQ.w writeoffs__found
00023D50 <AmiBlitz3.ab3@5947>       ADDQ.w #1,D1
00023D52 <AmiBlitz3.ab3@5948>       MOVEA.l (A1),A1
00023D56 <AmiBlitz3.ab3@5949> BRA.w writeoffs__loop2
00023D5A <AmiBlitz3.ab3@5952>     MOVE.w $A(A2),-(A7)
00023D5E <AmiBlitz3.ab3@5953>     MOVE.w D1,$A(A2)
00023D62 <AmiBlitz3.ab3@5954>      BSR.w writeitem
00023D66 <AmiBlitz3.ab3@5955>     MOVE.w (A7)+,$A(A2)
00023D68 <AmiBlitz3.ab3@5956>     MOVEA.l (A2),A2
00023D6C <AmiBlitz3.ab3@5957> BRA.w writeoffs
00023D6E <AmiBlitz3.ab3@5960> RTS
00023D70 <AmiBlitz3.ab3@5964>   MOVEQ.l #$00,D0
00023D74 <AmiBlitz3.ab3@5967>   CMPA.w #$0,A2
00023D78 <AmiBlitz3.ab3@5968>    BEQ.w countem__done
00023D7A <AmiBlitz3.ab3@5969>   ADDQ.w #1,D0
00023D7C <AmiBlitz3.ab3@5970>   MOVEA.l (A2),A2
00023D80 <AmiBlitz3.ab3@5971> BRA.w countem__loop
00023D86 <AmiBlitz3.ab3@5974>   MOVE.w D0,temp1
00023D88 <AmiBlitz3.ab3@5975>   MOVE.l D7,D1
00023D8E <AmiBlitz3.ab3@5976>   MOVE.l #temp1,D2
00023D90 <AmiBlitz3.ab3@5977>   MOVEQ.l #$02,D3
00023D92 <AmiBlitz3.ab3@5978>   ADDQ.l #2,D6
00023D98 <AmiBlitz3.ab3@5979>   MOVEA.l _dosbase,A6
00023D9C <AmiBlitz3.ab3@5980> JMP _Write(A6)
00023DA2 <AmiBlitz3.ab3@5984>    TST.b resdisable
00023DA6 <AmiBlitz3.ab3@5985>    BEQ resmacs__l1
00023DAC <AmiBlitz3.ab3@5986>    MOVE.l currentmacroaddr,a3
00023DB2 <AmiBlitz3.ab3@5987>    CMP.l #0,a3
00023DB6 <AmiBlitz3.ab3@5988>    BEQ resmacs__l1
00023DB8 <AmiBlitz3.ab3@5989>    MOVE.l (a3),a3
00023DBC <AmiBlitz3.ab3@5990> BRA resmacs__l2
00023DC2 <AmiBlitz3.ab3@5993>   MOVEA.l macrobase,A3                                     ;??begin org code??
00023DC4 <AmiBlitz3.ab3@5996>   MOVEA.l A3,A2
00023DC8 <AmiBlitz3.ab3@5997>   BSR.w countem
00023DCC <AmiBlitz3.ab3@6000>    CMPA.w #$0,A3
00023DD0 <AmiBlitz3.ab3@6001>    BEQ.w resmacs__done
00023DD2 <AmiBlitz3.ab3@6002>   MOVE.l D6,D5
00023DD4 <AmiBlitz3.ab3@6003>   MOVE.l (A3),-(A7)
00023DD8 <AmiBlitz3.ab3@6004>   MOVE.l $4(A3),-(A7)
00023DDA <AmiBlitz3.ab3@6005>   MOVEQ.l #$00,D3
00023DDE <AmiBlitz3.ab3@6006>   MOVE.b $C(A3),D3
00023DE0 <AmiBlitz3.ab3@6007>   ADDQ.w #1,D3
00023DE4 <AmiBlitz3.ab3@6008>   BCLR #$0,D3
00023DE6 <AmiBlitz3.ab3@6009>   ADD.l D3,D6                                              ;add len of struct
00023DEA <AmiBlitz3.ab3@6010>   TST.w $8(A3)
00023DEE <AmiBlitz3.ab3@6011>    BEQ.w resmacs__notext
00023DF2 <AmiBlitz3.ab3@6012>   MOVE.l D6,$4(A3)
00023DF4 <AmiBlitz3.ab3@6013>   MOVE.l D5,D2
00023DF6 <AmiBlitz3.ab3@6014>   ADDQ.l #4,D2
00023DFA <AmiBlitz3.ab3@6015>    BSR.w addhunkoffset
00023DFC <AmiBlitz3.ab3@6018>   MOVEQ.l #$00,D4
00023E00 <AmiBlitz3.ab3@6019>   MOVE.w $8(A3),D4
00023E02 <AmiBlitz3.ab3@6020>   ADDQ.w #1,D4
00023E06 <AmiBlitz3.ab3@6021>   BCLR #$0,D4
00023E08 <AmiBlitz3.ab3@6022>   ADD.l D4,D6
00023E0A <AmiBlitz3.ab3@6023>   TST.l (A3)
00023E0E <AmiBlitz3.ab3@6024>    BEQ.w resmacs__nomore
00023E10 <AmiBlitz3.ab3@6025>   MOVE.l D6,(A3)
00023E12 <AmiBlitz3.ab3@6026>   MOVE.l D5,D2
00023E16 <AmiBlitz3.ab3@6027>    BSR.w addhunkoffset
00023E18 <AmiBlitz3.ab3@6030>   MOVE.l A3,D2
00023E1A <AmiBlitz3.ab3@6031>   MOVE.l D7,D1
00023E20 <AmiBlitz3.ab3@6033>    MOVEA.l _dosbase,A6
00023E24 <AmiBlitz3.ab3@6034>    JSR _Write(a6)
00023E26 <AmiBlitz3.ab3@6035>   TST.l D4
00023E2A <AmiBlitz3.ab3@6036>    BEQ.w resmacs__skip
00023E2C <AmiBlitz3.ab3@6037>   MOVE.l (A7),D2
00023E2E <AmiBlitz3.ab3@6038>   MOVE.l D4,D3
00023E30 <AmiBlitz3.ab3@6039>   MOVE.l D7,D1
00023E36 <AmiBlitz3.ab3@6041>     MOVEA.l _dosbase,A6
00023E3A <AmiBlitz3.ab3@6042>    JSR _Write(A6)
00023E3E <AmiBlitz3.ab3@6045>   MOVE.l (A7)+,$4(A3)
00023E40 <AmiBlitz3.ab3@6046>   MOVE.l (A7)+,(A3)
00023E42 <AmiBlitz3.ab3@6047>   MOVEA.l (A3),A3
00023E46 <AmiBlitz3.ab3@6048> BRA.w resmacs__loop
00023E48 <AmiBlitz3.ab3@6051> RTS
00023E4E <AmiBlitz3.ab3@6055>   TST.b resdisable
00023E52 <AmiBlitz3.ab3@6056>   BEQ restypes__l1
00023E58 <AmiBlitz3.ab3@6057>   MOVE.l lastrestype,a3
00023E5E <AmiBlitz3.ab3@6058>   CMP.l #0,a3
00023E62 <AmiBlitz3.ab3@6059>   BEQ restypes__l1
00023E64 <AmiBlitz3.ab3@6060>   MOVE.l (a3),a3
00023E68 <AmiBlitz3.ab3@6061> BRA restypes__l2
00023E6E <AmiBlitz3.ab3@6064>   MOVEA.l newtype_string,A3
00023E70 <AmiBlitz3.ab3@6067>   MOVEA.l A3,A2
00023E74 <AmiBlitz3.ab3@6068>    BSR.w countem
00023E78 <AmiBlitz3.ab3@6071>    CMPA.w #$0,A3
00023E7C <AmiBlitz3.ab3@6072>    BEQ.w restypes__done
00023E7E <AmiBlitz3.ab3@6073>   MOVE.l D6,-(A7)
00023E82 <AmiBlitz3.ab3@6074>   MOVEA.l $4(A3),A2
00023E84 <AmiBlitz3.ab3@6075>   MOVEQ.l #$0E,D5
00023E88 <AmiBlitz3.ab3@6076>    BSR.w writeoffs
00023E8A <AmiBlitz3.ab3@6077>   MOVE.l (A7)+,D0
00023E8E <AmiBlitz3.ab3@6078>   MOVE.l $4(A3),-(A7)
00023E92 <AmiBlitz3.ab3@6079>   MOVE.l D0,$4(A3)
00023E94 <AmiBlitz3.ab3@6080>   MOVE.l D6,D2
00023E96 <AmiBlitz3.ab3@6081>   ADDQ.l #4,D2
00023E9A <AmiBlitz3.ab3@6082>    BSR.w addhunkoffset
00023E9C <AmiBlitz3.ab3@6083>   MOVEQ.l #$00,D3
00023EA0 <AmiBlitz3.ab3@6084>   MOVE.b $A(A3),D3
00023EA2 <AmiBlitz3.ab3@6085>   ADDQ.w #1,D3
00023EA6 <AmiBlitz3.ab3@6086>   BCLR #$0,D3
00023EA8 <AmiBlitz3.ab3@6087>   ADD.l D3,D6
00023EAA <AmiBlitz3.ab3@6088>   MOVE.l A3,D2
00023EAC <AmiBlitz3.ab3@6089>   MOVE.l D7,D1
00023EB2 <AmiBlitz3.ab3@6091>     MOVEA.l _dosbase,A6
00023EB6 <AmiBlitz3.ab3@6092>     JSR _Write(A6)
00023EBA <AmiBlitz3.ab3@6093>   MOVE.l (A7)+,$4(A3)
00023EBC <AmiBlitz3.ab3@6094>   MOVEA.l (A3),A3
00023EC0 <AmiBlitz3.ab3@6095> BRA.w restypes__loop
00023EC2 <AmiBlitz3.ab3@6098> RTS
00023EC8 <AmiBlitz3.ab3@6102>    TST.b resdisable
00023ECC <AmiBlitz3.ab3@6103>    BEQ resconsts__l1
00023ED2 <AmiBlitz3.ab3@6104>    MOVE.l currentlabeladdr,a2
00023ED8 <AmiBlitz3.ab3@6105>    CMP.l #0,a2
00023EDC <AmiBlitz3.ab3@6106>    BEQ resconsts__l1
00023EDE <AmiBlitz3.ab3@6107>    MOVE.l (a2),a2
00023EE2 <AmiBlitz3.ab3@6108> BRA resconsts__l2
00023EE8 <AmiBlitz3.ab3@6111>    MOVEA.l labelbase,A2
00023EEA <AmiBlitz3.ab3@6114>    MOVEQ.l #$00,D0
00023EEE <AmiBlitz3.ab3@6117>    CMPA.w #$0,A2
00023EF2 <AmiBlitz3.ab3@6118>    BEQ.w resconsts__done
00023EFA <AmiBlitz3.ab3@6119>   CMPI.l #$1,$4(A2)
00023EFE <AmiBlitz3.ab3@6120>    BNE.w resconsts__next
00023F00 <AmiBlitz3.ab3@6121>   ADDQ.w #1,D0
00023F02 <AmiBlitz3.ab3@6124>   MOVEA.l (A2),A2
00023F06 <AmiBlitz3.ab3@6125> BRA.w resconsts__loop
00023F0C <AmiBlitz3.ab3@6128>   MOVE.w D0,temp1
00023F0E <AmiBlitz3.ab3@6129>   MOVE.l D7,D1
00023F14 <AmiBlitz3.ab3@6130>   MOVE.l #temp1,D2
00023F16 <AmiBlitz3.ab3@6131>   MOVEQ.l #$02,D3
00023F18 <AmiBlitz3.ab3@6132>   ADDQ.l #2,D6
00023F1E <AmiBlitz3.ab3@6134>     MOVEA.l _dosbase,A6
00023F22 <AmiBlitz3.ab3@6135>     JSR _Write(A6)
00023F28 <AmiBlitz3.ab3@6136>    TST.b resdisable
00023F2C <AmiBlitz3.ab3@6137>    BEQ resconsts__done_l1
00023F32 <AmiBlitz3.ab3@6138>    MOVE.l currentlabeladdr,a2
00023F38 <AmiBlitz3.ab3@6139>    CMP.l #0,a2
00023F3C <AmiBlitz3.ab3@6140>    BEQ resconsts__done_l1
00023F3E <AmiBlitz3.ab3@6141>    MOVE.l (a2),a2
00023F42 <AmiBlitz3.ab3@6142> BRA resconsts__loop2
00023F48 <AmiBlitz3.ab3@6145>    MOVEA.l labelbase,A2                                    ;write resident labels
00023F4C <AmiBlitz3.ab3@6148>    CMPA.w #$0,A2
00023F50 <AmiBlitz3.ab3@6149>    BEQ.w resconsts__done2
00023F58 <AmiBlitz3.ab3@6150>   CMPI.l #$1,$4(A2)
00023F5C <AmiBlitz3.ab3@6151>    BNE.w resconsts__next2
00023F5E <AmiBlitz3.ab3@6152>    MOVEQ.l #$00,D3
00023F62 <AmiBlitz3.ab3@6153>   MOVE.b $12(A2),D3                                        ;length
00023F64 <AmiBlitz3.ab3@6154>   ADDQ.w #1,D3
00023F68 <AmiBlitz3.ab3@6155>   BCLR #$0,D3
00023F6A <AmiBlitz3.ab3@6156>   MOVE.l D6,D2
00023F6C <AmiBlitz3.ab3@6157>   ADD.l D3,D6
00023F6E <AmiBlitz3.ab3@6160>   MOVE.l (A2),-(A7)
00023F70 <AmiBlitz3.ab3@6161>   TST.l (A2)
00023F74 <AmiBlitz3.ab3@6162>    BEQ.w resconsts__nonext
00023F76 <AmiBlitz3.ab3@6163>   MOVE.l D6,(A2)
00023F7A <AmiBlitz3.ab3@6164>    BSR.w addhunkoffset
00023F7C <AmiBlitz3.ab3@6167>   MOVE.l A2,D2
00023F7E <AmiBlitz3.ab3@6168>   MOVE.l D7,D1
00023F84 <AmiBlitz3.ab3@6170>     MOVEA.l _dosbase,A6
00023F88 <AmiBlitz3.ab3@6171>     JSR _Write(A6)
00023F8A <AmiBlitz3.ab3@6172>   MOVE.l (A7)+,(A2)
00023F8C <AmiBlitz3.ab3@6175>   MOVEA.l (A2),A2
00023F90 <AmiBlitz3.ab3@6176> BRA.w resconsts__loop2
00023F92 <AmiBlitz3.ab3@6179> RTS
00023FBC <AmiBlitz3.ab3@6183>    !basic
00023FC2 <AmiBlitz3.ab3@6184>     MOVE.l ptr_resfile,d0
00023FD2 <AmiBlitz3.ab3@6185>     resfileP.l = Peek.l(?ptr_resfile)
00023FDC <AmiBlitz3.ab3@6186>     If resfileP
00024004 <AmiBlitz3.ab3@6187>       resfile$ = Peek.s(resfileP)
00024050 <AmiBlitz3.ab3@6188>       tests.b = Instr(resfile$,"/")
0002409C <AmiBlitz3.ab3@6189>       testc.b = Instr(resfile$,":")
000240BE <AmiBlitz3.ab3@6190>       If tests=0 AND testc=0
0002413E <AmiBlitz3.ab3@6191>         resfile$ = dos_AddPart{my_residentsdir$,resfile$}
00024150 <AmiBlitz3.ab3@6192>         Poke.l ?ptr_resfile,&resfile$
00024156 <AmiBlitz3.ab3@6194>     Else
00024190 <AmiBlitz3.ab3@6195>       error{"INTERNAL: Invalid pointer in ptr_resfile!"}
000241AE <AmiBlitz3.ab3@6197>    !asm
000241B0 <AmiBlitz3.ab3@6198> RTS
000241B6 <AmiBlitz3.ab3@6202> 
000241BC <AmiBlitz3.ab3@6203>   MOVE.l A7,errstack
000241C6 <AmiBlitz3.ab3@6206>   MOVE.l #next_resentry,errcont
000241CE <AmiBlitz3.ab3@6207>   MOVE.w #$FFFF,ezerr
000241D2 <AmiBlitz3.ab3@6208>   BSR.w Aclearallvars
000241D6 <AmiBlitz3.ab3@6209>   BSR.w free_residents
000241DC <AmiBlitz3.ab3@6211>   LEA residents_table,A5
000241DE <AmiBlitz3.ab3@6212>   MOVEQ.l #$07,D6
000241E0 <AmiBlitz3.ab3@6215>     TST.b (A5)
000241E4 <AmiBlitz3.ab3@6216>     BEQ.w next_resentry
000241EA <AmiBlitz3.ab3@6217>     MOVE.l A5,ptr_resfile
000241EE <AmiBlitz3.ab3@6218>     BSR check_residentpath
000241F4 <AmiBlitz3.ab3@6219>     MOVE.l ptr_resfile,d1
000241FA <AmiBlitz3.ab3@6220>     MOVEA.l _dosbase,A6
000241FE <AmiBlitz3.ab3@6221>     JSR _LoadSeg(A6)
00024202 <AmiBlitz3.ab3@6222>     MOVE.l D0,$40(A5)
00024206 <AmiBlitz3.ab3@6223>     BNE.w reloadresident__yeah
0002420A <AmiBlitz3.ab3@6224>     BSR.w reserr
0002420C <AmiBlitz3.ab3@6227>     MOVEA.l D0,A3
0002420E <AmiBlitz3.ab3@6228>     ADDA.l A3,A3
00024210 <AmiBlitz3.ab3@6229>     ADDA.l A3,A3
00024212 <AmiBlitz3.ab3@6230>     ADDQ.w #4,A3                                           ;start of res
00024216 <AmiBlitz3.ab3@6231>     BSR.w JL_0_5A9E
0002421A <AmiBlitz3.ab3@6232>     BSR.w JL_0_5A62                                        ;add macros to list
0002421E <AmiBlitz3.ab3@6233>     BSR.w JL_0_5A32                                        ;read labels
00024222 <AmiBlitz3.ab3@6236>     LEA ResidentEntryStep(A5),A5       ;$44
00024226 <AmiBlitz3.ab3@6237>   DBF D6,reloadresident__loop
00024230 <AmiBlitz3.ab3@6242>   MOVE.l #free_residents,errcont
00024236 <AmiBlitz3.ab3@6244>   MOVEA.l newtype_string,A3
00024238 <AmiBlitz3.ab3@6245>   MOVEQ.l #$0B,D7
0002423C <AmiBlitz3.ab3@6246>   BSR.w checkclash
00024242 <AmiBlitz3.ab3@6248>   MOVEA.l macrobase,A3
00024244 <AmiBlitz3.ab3@6249>   MOVEQ.l #$d,D7
00024248 <AmiBlitz3.ab3@6250>   BSR.w checkclash
0002424E <AmiBlitz3.ab3@6252>   MOVEA.l firstconst,A3
00024250 <AmiBlitz3.ab3@6253>   MOVEQ.l #$19,D7
00024254 <AmiBlitz3.ab3@6254>   BSR.w checkclash
00024256 <AmiBlitz3.ab3@6257> RTS
00024258 <AmiBlitz3.ab3@6261>   MOVEA.l A3,A4
0002425C <AmiBlitz3.ab3@6264>     CMPA.w #$0,A4
00024260 <AmiBlitz3.ab3@6265>     BEQ.w checkclash__done
00024266 <AmiBlitz3.ab3@6267>     LEA ptr_parameterstore,A0
0002426A <AmiBlitz3.ab3@6268>     LEA $0(A4,D7.W),A1
0002426C <AmiBlitz3.ab3@6269>     MOVEQ.l #-$01,D2
0002426E <AmiBlitz3.ab3@6272>       ADDQ.w #1,D2
00024270 <AmiBlitz3.ab3@6273>       MOVE.b (A1)+,(A0)+
00024274 <AmiBlitz3.ab3@6274>     BNE.w checkclash__loop2
00024276 <AmiBlitz3.ab3@6275>     MOVEA.l A3,A2
0002427A <AmiBlitz3.ab3@6278>     BSR.w findlab
0002427E <AmiBlitz3.ab3@6279>     BNE.w checkclash__next                                  ;not found
00024280 <AmiBlitz3.ab3@6280>     CMPA.l A2,A4
00024284 <AmiBlitz3.ab3@6281>     BEQ.w checkclash__l1
00024286 <AmiBlitz3.ab3@6282>     MOVE.l a1,a5
0002428A <AmiBlitz3.ab3@6283> BRA clasherr
0002428E <AmiBlitz3.ab3@6286> BRA.w checkclash__more
00024290 <AmiBlitz3.ab3@6289>     MOVEA.l (A4),A4
00024294 <AmiBlitz3.ab3@6290> BRA.w checkclash__loop
00024296 <AmiBlitz3.ab3@6293> RTS
0002429C <AmiBlitz3.ab3@6297>   MOVEA.l _dosbase,A6
000242A2 <AmiBlitz3.ab3@6299>   LEA newtype_string,A0
000242A8 <AmiBlitz3.ab3@6300>   MOVE.l A0,lastrestype
000242AA <AmiBlitz3.ab3@6301>   CLR.l (A0)
000242B0 <AmiBlitz3.ab3@6303>   LEA macrobase,A0
000242B6 <AmiBlitz3.ab3@6304>   MOVE.l A0,currentmacroaddr
000242B8 <AmiBlitz3.ab3@6305>   CLR.l (A0)
000242BE <AmiBlitz3.ab3@6307>   LEA labelbase,A0
000242C4 <AmiBlitz3.ab3@6308>   MOVE.l A0,currentlabeladdr
000242C6 <AmiBlitz3.ab3@6309>   CLR.l (A0)
000242CC <AmiBlitz3.ab3@6310>   CLR.w rescnt
00024304 <AmiBlitz3.ab3@6314>   !ComData_SetB{comByte_DebugMode,debugmode}
0002430A <AmiBlitz3.ab3@6317>   LEA residents_table,A2
0002430C <AmiBlitz3.ab3@6318>   MOVEQ.l #$07,D2
00024310 <AmiBlitz3.ab3@6321>      MOVE.l $40(A2),D1
00024314 <AmiBlitz3.ab3@6322>      BEQ.w free_residents__next
00024318 <AmiBlitz3.ab3@6323>       CLR.l $40(A2)
0002431E <AmiBlitz3.ab3@6324>       MOVEA.l _dosbase,A6
00024322 <AmiBlitz3.ab3@6325>       JSR _UnLoadSeg(A6)
00024326 <AmiBlitz3.ab3@6328>      LEA ResidentEntryStep(A2),A2   ; $44
0002432A <AmiBlitz3.ab3@6329>    DBF D2,free_residents__loop
0002432C <AmiBlitz3.ab3@6331> RTS
0002432E <AmiBlitz3.ab3@6335>   MOVE.w (A3)+,D1
00024332 <AmiBlitz3.ab3@6336>   BEQ.w JL_0_5A60
00024338 <AmiBlitz3.ab3@6337>   MOVEA.l currentlabeladdr,A2
0002433A <AmiBlitz3.ab3@6338>   MOVE.l A3,(A2)
0002433C <AmiBlitz3.ab3@6339>   SUBQ.w #1,D1
0002433E <AmiBlitz3.ab3@6342>     MOVEA.l A3,A2
00024340 <AmiBlitz3.ab3@6343>     MOVEA.l (A3),A3
00024344 <AmiBlitz3.ab3@6344>   DBF D1,JL_0_5A42
00024346 <AmiBlitz3.ab3@6346>   CLR.l (a2)                                               ;bugfix for object
0002434C <AmiBlitz3.ab3@6347>   MOVE.l A2,currentlabeladdr
0002434E <AmiBlitz3.ab3@6348>   MOVEA.l A2,A3
00024350 <AmiBlitz3.ab3@6349>   MOVEQ.l #$00,D0
00024354 <AmiBlitz3.ab3@6350>   MOVE.b $12(A3),D0
00024356 <AmiBlitz3.ab3@6351>   ADDQ.w #1,D0
0002435A <AmiBlitz3.ab3@6352>   BCLR #$0,D0
0002435C <AmiBlitz3.ab3@6353>   ADDA.w D0,A3
0002435E <AmiBlitz3.ab3@6356> RTS
00024360 <AmiBlitz3.ab3@6360>   MOVE.w (A3)+,D1
00024364 <AmiBlitz3.ab3@6361>   BEQ.w JL_0_5A9C
0002436A <AmiBlitz3.ab3@6363>   MOVEA.l currentmacroaddr,A2
0002436C <AmiBlitz3.ab3@6364>   MOVE.l A3,(A2)
0002436E <AmiBlitz3.ab3@6365>   SUBQ.w #1,D1
00024370 <AmiBlitz3.ab3@6368>     MOVEA.l A3,A2
00024372 <AmiBlitz3.ab3@6369>     MOVEA.l (A3),A3
00024376 <AmiBlitz3.ab3@6370>   DBF D1,JL_0_5A72
0002437C <AmiBlitz3.ab3@6372>   MOVE.l A2,currentmacroaddr
0002437E <AmiBlitz3.ab3@6373>   MOVEA.l A2,A3
00024380 <AmiBlitz3.ab3@6374>   MOVEQ.l #$00,D0
00024384 <AmiBlitz3.ab3@6375>   MOVE.b $C(A3),D0
00024386 <AmiBlitz3.ab3@6376>   ADDQ.w #1,D0
0002438A <AmiBlitz3.ab3@6377>   BCLR #$0,D0
0002438E <AmiBlitz3.ab3@6378>   MOVE.w $8(A3),D1
00024390 <AmiBlitz3.ab3@6379>   ADDQ.w #1,D1
00024394 <AmiBlitz3.ab3@6380>   BCLR #$0,D1
00024396 <AmiBlitz3.ab3@6381>   ADDA.w D0,A3
00024398 <AmiBlitz3.ab3@6382>   ADDA.w D1,A3
0002439A <AmiBlitz3.ab3@6385> RTS
0002439C <AmiBlitz3.ab3@6389>   MOVE.w (A3)+,D1
000243A0 <AmiBlitz3.ab3@6390>   BEQ.w JL_0_5B38
000243A2 <AmiBlitz3.ab3@6391>   MOVE.w D1,-(A7)
000243A4 <AmiBlitz3.ab3@6392>   SUBQ.w #1,D1
000243AA <AmiBlitz3.ab3@6393>   MOVEA.l lastrestype,A2
000243AC <AmiBlitz3.ab3@6394>   MOVE.l A2,-(A7)
000243AE <AmiBlitz3.ab3@6397>       MOVE.l (A3),D0
000243B2 <AmiBlitz3.ab3@6398>       BEQ.w JL_0_5ABC
000243B4 <AmiBlitz3.ab3@6399>       MOVEA.l D0,A3
000243B8 <AmiBlitz3.ab3@6400> BRA.w JL_0_5AB0
000243BC <AmiBlitz3.ab3@6403>       MOVE.b $E(A3),D0
000243BE <AmiBlitz3.ab3@6404>       ADDQ.w #1,D0
000243C2 <AmiBlitz3.ab3@6405>       BCLR #$0,D0
000243C4 <AmiBlitz3.ab3@6406>       ADDA.w D0,A3
000243C6 <AmiBlitz3.ab3@6407>       MOVE.l A3,(A2)
000243C8 <AmiBlitz3.ab3@6408>       MOVEA.l A3,A2
000243CA <AmiBlitz3.ab3@6409>       MOVEQ.l #$00,D0
000243CE <AmiBlitz3.ab3@6410>       MOVE.b $A(A3),D0
000243D0 <AmiBlitz3.ab3@6411>       ADDQ.w #1,D0
000243D4 <AmiBlitz3.ab3@6412>       BCLR #$0,D0
000243D6 <AmiBlitz3.ab3@6413>       ADDA.w D0,A3
000243DA <AmiBlitz3.ab3@6414>   DBF D1,JL_0_5AB0
000243DC <AmiBlitz3.ab3@6416>   MOVEA.l (A7)+,A0
000243DE <AmiBlitz3.ab3@6417>   MOVEA.l (A0),A0
000243E2 <AmiBlitz3.ab3@6420>     CMPA.w #$0,A0
000243E6 <AmiBlitz3.ab3@6421>     BEQ.w JL_0_5B2A
000243EA <AmiBlitz3.ab3@6422>     MOVEA.l $4(A0),A1
000243EE <AmiBlitz3.ab3@6425>     CMPA.w #$0,A1
000243F2 <AmiBlitz3.ab3@6426>     BEQ.w JL_0_5B24
000243F6 <AmiBlitz3.ab3@6427>     MOVE.w $A(A1),D0
000243FC <AmiBlitz3.ab3@6428>     MOVEA.l newtypebase,A4
00024400 <AmiBlitz3.ab3@6429>     CMP.w #$7,D0
00024404 <AmiBlitz3.ab3@6430>     BCS.w JL_0_5B0E
0002440A <AmiBlitz3.ab3@6431>     SUB.w rescnt,D0
0002440C <AmiBlitz3.ab3@6434>     SUBQ.w #1,D0
00024410 <AmiBlitz3.ab3@6435>     BMI.w JL_0_5B1A
00024412 <AmiBlitz3.ab3@6438>        MOVEA.l (A4),A4
00024416 <AmiBlitz3.ab3@6439>   DBF D0,JL_0_5B14
0002441A <AmiBlitz3.ab3@6442>     MOVE.l A4,$A(A1)
0002441C <AmiBlitz3.ab3@6443>     MOVEA.l (A1),A1
00024420 <AmiBlitz3.ab3@6444> BRA.w JL_0_5AEE
00024422 <AmiBlitz3.ab3@6447>     MOVEA.l (A0),A0
00024426 <AmiBlitz3.ab3@6448> BRA.w JL_0_5AE2
00024428 <AmiBlitz3.ab3@6451>   MOVE.w (A7)+,D0
0002442E <AmiBlitz3.ab3@6452>   ADD.w D0,rescnt
00024434 <AmiBlitz3.ab3@6453>   MOVE.l A2,lastrestype
00024436 <AmiBlitz3.ab3@6456> RTS
0002443C <AmiBlitz3.ab3@6460>   LEA tokens,A0
00024440 <AmiBlitz3.ab3@6461>   MOVE.w #$003A,D0                                         ; $003A : 58 dec
00024442 <AmiBlitz3.ab3@6464>     MOVEA.l (A0),A0
00024446 <AmiBlitz3.ab3@6465>   DBF D0,JL_0_5BD0
0002444C <AmiBlitz3.ab3@6467>   MOVEA.l #asmpnts,A1                                      ;create tokentab
00024450 <AmiBlitz3.ab3@6468>   MOVE.w #$0076,D0                                         ; $0076 : 118 dec
00024454 <AmiBlitz3.ab3@6471>       LEA $6(A0),A2
00024456 <AmiBlitz3.ab3@6474>         TST.b (A2)+
0002445A <AmiBlitz3.ab3@6475>       BNE.w JL_0_5BE4
0002445C <AmiBlitz3.ab3@6478>         TST.b (A2)+
00024460 <AmiBlitz3.ab3@6479>       BNE.w JL_0_5BEA
00024462 <AmiBlitz3.ab3@6481>       ADDQ.w #1,A2
00024464 <AmiBlitz3.ab3@6482>       EXG.l D1,A2
00024468 <AmiBlitz3.ab3@6483>       BCLR #$0,D1
0002446A <AmiBlitz3.ab3@6484>       EXG.l D1,A2
0002446C <AmiBlitz3.ab3@6485>       MOVE.l A2,(A1)+
0002446E <AmiBlitz3.ab3@6486>       MOVEA.l (A0),A0
00024472 <AmiBlitz3.ab3@6487>   DBF D0,JL_0_5BE0
00024474 <AmiBlitz3.ab3@6488> RTS
00024478 <AmiBlitz3.ab3@6492>   BSR.w asmconst
0002447A <AmiBlitz3.ab3@6493>   MOVEQ.l #$0B,D5
0002447C <AmiBlitz3.ab3@6494> RTS
0002447E <AmiBlitz3.ab3@6497> unmove:  Ds.w 1
00024482 <AmiBlitz3.ab3@6501>   MOVE.w #$48E7,D1
00024486 <AmiBlitz3.ab3@6502>   BSR.w writeword                                          ;movem.l -(a7)
0002448A <AmiBlitz3.ab3@6503>   MOVE.w #$000F,D2
0002448C <AmiBlitz3.ab3@6504>   SUB.w D4,D2
0002448E <AmiBlitz3.ab3@6505>   MOVEQ.l #-$01,D1
00024490 <AmiBlitz3.ab3@6506>   BCLR D2,D1
00024494 <AmiBlitz3.ab3@6507>   BSR.w writeword
00024496 <AmiBlitz3.ab3@6508>   MOVEQ.l #-$01,D1
00024498 <AmiBlitz3.ab3@6509>   BCLR D4,D1
0002449E <AmiBlitz3.ab3@6510>   MOVE.w D1,unmove
000244A0 <AmiBlitz3.ab3@6511> RTS
000244A4 <AmiBlitz3.ab3@6515>   MOVE.w #$4CDF,D1
000244A8 <AmiBlitz3.ab3@6516>   BSR.w writeword
000244AC <AmiBlitz3.ab3@6517>   MOVE.w unmove(PC),D1
000244B0 <AmiBlitz3.ab3@6518> BRA.w writeword
000244B4 <AmiBlitz3.ab3@6531>   BSR.w JL_0_5D22
000244B8 <AmiBlitz3.ab3@6532>   CMP.w #$2C,D0                                            ;#','
000244BC <AmiBlitz3.ab3@6533>    BNE.w syntaxerr
000244C2 <AmiBlitz3.ab3@6534>   MOVE.l #$48E7FFFE,D1                                     ;movem to stack
000244C6 <AmiBlitz3.ab3@6535>    BSR.w writelong
000244C8 <AmiBlitz3.ab3@6536>   MOVE.w D4,D1
000244CC <AmiBlitz3.ab3@6537>   ORI.w #$2F00,D1
000244D0 <AmiBlitz3.ab3@6538>    BSR.w writeword
000244D4 <AmiBlitz3.ab3@6539>    BSR.w get1bytemain
000244D8 <AmiBlitz3.ab3@6540>    BSR.w getparameter
000244DC <AmiBlitz3.ab3@6541>    BSR.w JL_0_8E3C
000244E0 <AmiBlitz3.ab3@6542>    BSR.w calcvar
000244E4 <AmiBlitz3.ab3@6543>    BTST #$E,D2
000244E8 <AmiBlitz3.ab3@6544>    BEQ.w JL_0_5C80
000244EC <AmiBlitz3.ab3@6547>    MOVE.b #$3,D2
000244F0 <AmiBlitz3.ab3@6548> BRA.w JL_0_5C8E
000244F2 <AmiBlitz3.ab3@6551>   TST.b D2
000244F6 <AmiBlitz3.ab3@6552>    BEQ.w JL_0_5C78
000244FA <AmiBlitz3.ab3@6553>   CMP.b #$7,D2
000244FE <AmiBlitz3.ab3@6554>    BEQ.w JL_0_5C78
00024502 <AmiBlitz3.ab3@6557>   BTST #$F,D2
00024506 <AmiBlitz3.ab3@6558>    BNE.w JL_0_5CA4
0002450A <AmiBlitz3.ab3@6559>   MOVE.w #$45ED,D1                                         ;lea x(a5),a2
0002450E <AmiBlitz3.ab3@6560>    BSR.w writeword
00024510 <AmiBlitz3.ab3@6561>   MOVE.w D3,D1
00024514 <AmiBlitz3.ab3@6562>    BSR.w writeword
00024518 <AmiBlitz3.ab3@6565>   MOVE.w #$201F,D1                                         ;move.l (a7)+,d0
0002451C <AmiBlitz3.ab3@6566>    BSR.w writeword
00024520 <AmiBlitz3.ab3@6567>   MOVE.w #$1480,D1
00024524 <AmiBlitz3.ab3@6568>   CMP.b #$1,D2
00024528 <AmiBlitz3.ab3@6569>    BEQ.w JL_0_5CC8
0002452C <AmiBlitz3.ab3@6570>   EORI.w #$3000,D1
00024530 <AmiBlitz3.ab3@6571>   CMP.b #$2,D2
00024534 <AmiBlitz3.ab3@6572>    BNE.w JL_0_5CC8
00024538 <AmiBlitz3.ab3@6573>   ORI.w #$1000,D1
0002453C <AmiBlitz3.ab3@6576>   BSR.w writeword
00024542 <AmiBlitz3.ab3@6577>   MOVE.l #$4CDF7FFF,D1
00024546 <AmiBlitz3.ab3@6578> BRA.w writelong
0002454A <AmiBlitz3.ab3@6582>   BSR.w JL_0_5D22
0002454E <AmiBlitz3.ab3@6583>   CMP.w #$2C,D0
00024552 <AmiBlitz3.ab3@6584>    BNE.w syntaxerr
00024556 <AmiBlitz3.ab3@6585>    BSR.w regmovems
00024558 <AmiBlitz3.ab3@6586>   MOVE.w D4,-(A7)
0002455A <AmiBlitz3.ab3@6587>   MOVEQ.l #$03,D2
0002455E <AmiBlitz3.ab3@6588>    BSR.w eval
00024560 <AmiBlitz3.ab3@6589>   MOVE.w (A7)+,D1
00024564 <AmiBlitz3.ab3@6590>    BEQ.w JL_0_5D1A
00024568 <AmiBlitz3.ab3@6591>   CMP.w #$8,D1
0002456C <AmiBlitz3.ab3@6592>    BCC.w JL_0_5D0C
0002456E <AmiBlitz3.ab3@6593>   LSL.w #8,D1
00024570 <AmiBlitz3.ab3@6594>   LSL.w #1,D1
00024574 <AmiBlitz3.ab3@6595>   ORI.w #$2000,D1
00024578 <AmiBlitz3.ab3@6596>    BSR.w writeword
0002457C <AmiBlitz3.ab3@6597> BRA.w JL_0_5D1A
0002457E <AmiBlitz3.ab3@6600>   SUBQ.w #8,D1
00024580 <AmiBlitz3.ab3@6601>   LSL.w #8,D1
00024582 <AmiBlitz3.ab3@6602>   LSL.w #1,D1
00024586 <AmiBlitz3.ab3@6603>   ORI.w #$2040,D1
0002458A <AmiBlitz3.ab3@6604>   BSR.w writeword
0002458E <AmiBlitz3.ab3@6607> BRA.w dounmove
00024592 <AmiBlitz3.ab3@6611>   BSR.w get1bytemain
00024596 <AmiBlitz3.ab3@6614>   ORI.w #$20,D0
0002459A <AmiBlitz3.ab3@6615>   CMP.w #$64,D0
0002459E <AmiBlitz3.ab3@6616>    BEQ.w JL_0_5D4E
000245A2 <AmiBlitz3.ab3@6617>   CMP.w #$61,D0
000245A6 <AmiBlitz3.ab3@6618>    BNE.w syntaxerr
000245AA <AmiBlitz3.ab3@6619>    BSR.w JL_0_5D4E
000245AC <AmiBlitz3.ab3@6620>   ADDQ.w #8,D4
000245AE <AmiBlitz3.ab3@6621> RTS
000245DA <AmiBlitz3.ab3@6625>   !fget                                                   ;bsr.w get1bytemain
000245DE <AmiBlitz3.ab3@6627>   ORI.w #$20,D0
000245E2 <AmiBlitz3.ab3@6630>   CMP.w #$61,D0
000245E6 <AmiBlitz3.ab3@6631>   BNE.w syntaxerr
00024612 <AmiBlitz3.ab3@6634>   !fget                                                    ;bsr.w get1bytemain
00024616 <AmiBlitz3.ab3@6635>   SUBI.w #$30,D0
0002461A <AmiBlitz3.ab3@6636>    BMI.w syntaxerr
0002461E <AmiBlitz3.ab3@6637>   CMP.w #$7,D0
00024622 <AmiBlitz3.ab3@6638>    BHI.w syntaxerr
00024624 <AmiBlitz3.ab3@6639>   MOVE.w D0,D4
00024650 <AmiBlitz3.ab3@6640>   !fget
00024652 <AmiBlitz3.ab3@6641> RTS                                                        ;bra.w get1bytemain
00024654 <AmiBlitz3.ab3@6645>   ADDQ.w #8,D4
00024656 <AmiBlitz3.ab3@6648>   MOVEQ.l #$00,D5
0002465A <AmiBlitz3.ab3@6649>   SUBI.w #$30,D4
0002465E <AmiBlitz3.ab3@6652>   CMP.w #$2D,D0
00024662 <AmiBlitz3.ab3@6653>    BEQ.w JL_0_5D9E
00024666 <AmiBlitz3.ab3@6654>   CMP.w #$2F,D0
0002466A <AmiBlitz3.ab3@6655>    BEQ.w JL_0_5D8C
0002466E <AmiBlitz3.ab3@6656> BRA.w syntaxerr
00024670 <AmiBlitz3.ab3@6659>   BSET D4,D5
00024672 <AmiBlitz3.ab3@6662>   MOVE.w D5,D4
00024674 <AmiBlitz3.ab3@6663>   MOVEQ.l #$0F,D5
00024676 <AmiBlitz3.ab3@6664> RTS
00024678 <AmiBlitz3.ab3@6667>   BSET D4,D5
0002467C <AmiBlitz3.ab3@6668>   BSR.w JL_0_5D1E
0002468E <AmiBlitz3.ab3@6669>   !compare3                                                ;bsr.w JL_0_5FC0
00024692 <AmiBlitz3.ab3@6670>   BNE.w JL_0_5D70
00024696 <AmiBlitz3.ab3@6671> BRA.w JL_0_5D84
00024698 <AmiBlitz3.ab3@6674>   MOVE.w D4,D1
0002469C <AmiBlitz3.ab3@6675>    BSR.w JL_0_5D1E
0002469E <AmiBlitz3.ab3@6676>   CMP.w D4,D1
000246A2 <AmiBlitz3.ab3@6677>    BLS.w JL_0_5DAC
000246A4 <AmiBlitz3.ab3@6678>   EXG.l D4,D1
000246A6 <AmiBlitz3.ab3@6681>   BSET D1,D5
000246A8 <AmiBlitz3.ab3@6682>   ADDQ.w #1,D1
000246AA <AmiBlitz3.ab3@6683>   CMP.w D4,D1
000246AE <AmiBlitz3.ab3@6684>    BLS.w JL_0_5DAC
000246C0 <AmiBlitz3.ab3@6685>   !compare3                                                ;bsr.w JL_0_5FC0
000246C4 <AmiBlitz3.ab3@6686>   BNE.w JL_0_5D70
000246C8 <AmiBlitz3.ab3@6687> BRA.w JL_0_5D86
000246CA <AmiBlitz3.ab3@6690>   MOVEA.l A5,A4                                            ;bsr.w get1bytemain
000246F6 <AmiBlitz3.ab3@6691>    !fget
000246FA <AmiBlitz3.ab3@6692>   CMP.w #$23,D0
000246FE <AmiBlitz3.ab3@6693>    BEQ.w getimm
00024702 <AmiBlitz3.ab3@6694>   CMP.w #$28,D0
00024706 <AmiBlitz3.ab3@6695>    BEQ.w JL_0_5DFE
0002470A <AmiBlitz3.ab3@6696>   CMP.w #$2D,D0
0002470E <AmiBlitz3.ab3@6697>    BNE.w JL_0_5E20
0002473A <AmiBlitz3.ab3@6698>    !fget                                                   ;bsr.w get1bytemain       -(
0002473E <AmiBlitz3.ab3@6699>   CMP.w #$28,D0
00024742 <AmiBlitz3.ab3@6700>    BNE.w JL_0_5F4E
00024746 <AmiBlitz3.ab3@6701>    BSR.w JL_0_5D3E
0002474A <AmiBlitz3.ab3@6702>   CMP.w #$29,D0
0002474E <AmiBlitz3.ab3@6703>    BNE.w syntaxerr
00024750 <AmiBlitz3.ab3@6704>   MOVEQ.l #$04,D5
0002477C <AmiBlitz3.ab3@6705>   !fget                                                    ;bsr.w get1bytemain
0002477E <AmiBlitz3.ab3@6706> RTS
00024782 <AmiBlitz3.ab3@6710>   BSR.w JL_0_5D3E
00024786 <AmiBlitz3.ab3@6711>   CMP.w #$29,D0
0002478A <AmiBlitz3.ab3@6712>    BNE.w syntaxerr
000247B6 <AmiBlitz3.ab3@6713>   !fget                                                    ;bsr.w get1bytemain
000247BA <AmiBlitz3.ab3@6714>   CMP.w #$2B,D0
000247BE <AmiBlitz3.ab3@6715>    BEQ.w JL_0_5E1A
000247C0 <AmiBlitz3.ab3@6716>   MOVEQ.l #$02,D5
000247C2 <AmiBlitz3.ab3@6717> RTS
000247C4 <AmiBlitz3.ab3@6721>   MOVEQ.l #$03,D5
000247F0 <AmiBlitz3.ab3@6722>   !fget                                                    ;bra.w get1bytemain
000247F2 <AmiBlitz3.ab3@6723> RTS
000247F6 <AmiBlitz3.ab3@6727>   ORI.w #$20,D0
000247F8 <AmiBlitz3.ab3@6728>   MOVE.w D0,D1                                            
00024824 <AmiBlitz3.ab3@6729>    !fget                                                   ;bsr.w get1bytemain
00024828 <AmiBlitz3.ab3@6730>   CMP.w #$64,D1
0002482C <AmiBlitz3.ab3@6731>    BNE.w JL_0_5E6C
00024830 <AmiBlitz3.ab3@6732>   CMP.w #$30,D0
00024834 <AmiBlitz3.ab3@6733>    BCS.w JL_0_5EAE
00024838 <AmiBlitz3.ab3@6734>   CMP.w #$37,D0
0002483C <AmiBlitz3.ab3@6735>    BHI.w JL_0_5EAE
0002483E <AmiBlitz3.ab3@6736>   MOVE.w D0,D4
0002486A <AmiBlitz3.ab3@6737>    !fget                                                   ;bsr.w get1bytemain
0002487C <AmiBlitz3.ab3@6738>    !compare3                                               ;bsr.w JL_0_5FC0
00024880 <AmiBlitz3.ab3@6739>    BEQ.w JL_0_5E64
00024884 <AmiBlitz3.ab3@6740>   CMP.w #$2D,D0
00024888 <AmiBlitz3.ab3@6741>    BEQ.w JL_0_5D6A
0002488C <AmiBlitz3.ab3@6742>   CMP.w #$2F,D0
00024890 <AmiBlitz3.ab3@6743>    BEQ.w JL_0_5D6A
00024894 <AmiBlitz3.ab3@6744> BRA.w JL_0_5EB8
00024896 <AmiBlitz3.ab3@6747>   MOVEQ.l #$00,D5
0002489A <AmiBlitz3.ab3@6748>   SUBI.w #$30,D4
0002489C <AmiBlitz3.ab3@6749> RTS
000248A0 <AmiBlitz3.ab3@6752>    CMP.w #$61,D1
000248A4 <AmiBlitz3.ab3@6753>    BNE.w JL_0_5EAE
000248A8 <AmiBlitz3.ab3@6754>   CMP.w #$30,D0
000248AC <AmiBlitz3.ab3@6755>    BCS.w JL_0_5EAE
000248B0 <AmiBlitz3.ab3@6756>   CMP.w #$37,D0
000248B4 <AmiBlitz3.ab3@6757>    BHI.w JL_0_5EAE
000248B6 <AmiBlitz3.ab3@6758>   MOVE.w D0,D4
000248E2 <AmiBlitz3.ab3@6759>    !fget                                                   ;bsr.w get1bytemain
000248F4 <AmiBlitz3.ab3@6760>    !compare3                                               ;bsr.w JL_0_5FC0
000248F8 <AmiBlitz3.ab3@6761>    BEQ.w JL_0_5EA6
000248FC <AmiBlitz3.ab3@6762>   CMP.w #$2D,D0
00024900 <AmiBlitz3.ab3@6763>    BEQ.w JL_0_5D68                                         ;movem
00024904 <AmiBlitz3.ab3@6764>   CMP.w #$2F,D0
00024908 <AmiBlitz3.ab3@6765>    BEQ.w JL_0_5D68
0002490C <AmiBlitz3.ab3@6766> BRA.w JL_0_5EB8
0002490E <AmiBlitz3.ab3@6769>   MOVEQ.l #1,d5
00024912 <AmiBlitz3.ab3@6770>   SUBI.w #$30,D4
00024916 <AmiBlitz3.ab3@6772> BRA 'l10
00024918 <AmiBlitz3.ab3@6773>   ADDQ.w #8,d4
0002491A <AmiBlitz3.ab3@6774>   MOVEQ #0,d5
0002491C <AmiBlitz3.ab3@6775>   BSET d4,d5
0002491E <AmiBlitz3.ab3@6776>   MOVE.w d5,d4
00024920 <AmiBlitz3.ab3@6777>   MOVEQ.l #$0f,D5                                          ;01
00024922 <AmiBlitz3.ab3@6780> RTS
00024926 <AmiBlitz3.ab3@6784>   ORI.w #$20,D0
00024928 <AmiBlitz3.ab3@6785>   MOVE.w D0,D4
00024954 <AmiBlitz3.ab3@6786>    !fget                                                   ;bsr.w get1bytemain
00024966 <AmiBlitz3.ab3@6789>   !compare3                                                ;bsr.w JL_0_5FC0
0002496A <AmiBlitz3.ab3@6790>    BNE.w JL_0_5EF2
0002496E <AmiBlitz3.ab3@6791>   CMP.w #$73,D1
00024972 <AmiBlitz3.ab3@6792>    BNE.w JL_0_5EF2
00024976 <AmiBlitz3.ab3@6793>   CMP.w #$70,D4
0002497A <AmiBlitz3.ab3@6794>    BNE.w JL_0_5EDE
0002498C <AmiBlitz3.ab3@6795>    !compare3                                               ;bsr.w JL_0_5FC0
00024990 <AmiBlitz3.ab3@6796>    BNE.w JL_0_5F4E
00024992 <AmiBlitz3.ab3@6797>   MOVEQ.l #$07,D4
00024994 <AmiBlitz3.ab3@6798>   MOVEQ.l #$01,D5
00024996 <AmiBlitz3.ab3@6799> RTS
0002499A <AmiBlitz3.ab3@6803>   CMP.w #$72,D4
0002499E <AmiBlitz3.ab3@6804>    BNE.w JL_0_5F4E
000249B0 <AmiBlitz3.ab3@6805>    !compare3                                               ;bsr.w JL_0_5FC0
000249B4 <AmiBlitz3.ab3@6806>    BNE.w JL_0_5F4E
000249B6 <AmiBlitz3.ab3@6807>   MOVEQ.l #$0D,D5
000249B8 <AmiBlitz3.ab3@6808> RTS
000249BC <AmiBlitz3.ab3@6812>   ORI.w #$20,D0
000249C0 <AmiBlitz3.ab3@6813>   CMP.w #$63,D1
000249C4 <AmiBlitz3.ab3@6814>    BNE.w JL_0_5F22
000249C8 <AmiBlitz3.ab3@6815>   CMP.w #$63,D4
000249CC <AmiBlitz3.ab3@6816>    BNE.w JL_0_5F4E
000249D0 <AmiBlitz3.ab3@6817>   CMP.w #$72,D0
000249D4 <AmiBlitz3.ab3@6818>    BNE.w JL_0_5F4E
000249D8 <AmiBlitz3.ab3@6819>    BSR.w get1bytemain                                      ;??wy not !fget
000249DC <AmiBlitz3.ab3@6820>    BEQ.w JL_0_5F1E
000249E0 <AmiBlitz3.ab3@6821>   CMP.w #$2C,D0
000249E4 <AmiBlitz3.ab3@6822>    BNE.w JL_0_5F4E
000249E6 <AmiBlitz3.ab3@6825>   MOVEQ.l #$0C,D5
000249E8 <AmiBlitz3.ab3@6826> RTS
000249EC <AmiBlitz3.ab3@6830>   CMP.w #$75,D1
000249F0 <AmiBlitz3.ab3@6831>    BNE.w JL_0_5F4E
000249F4 <AmiBlitz3.ab3@6832>   CMP.w #$73,D4
000249F8 <AmiBlitz3.ab3@6833>    BNE.w JL_0_5F4E
000249FC <AmiBlitz3.ab3@6834>   CMP.w #$70,D0
00024A00 <AmiBlitz3.ab3@6835>    BNE.w JL_0_5F4E
00024A04 <AmiBlitz3.ab3@6836>    BSR.w get1bytemain                                      ;??wy not !fget
00024A08 <AmiBlitz3.ab3@6837>    BEQ.w JL_0_5F4A
00024A0C <AmiBlitz3.ab3@6838>   CMP.w #$2C,D0
00024A10 <AmiBlitz3.ab3@6839>    BNE.w JL_0_5F4E
00024A12 <AmiBlitz3.ab3@6842>   MOVEQ.l #$0E,D5
00024A14 <AmiBlitz3.ab3@6843> RTS
00024A16 <AmiBlitz3.ab3@6847>   MOVEA.l A4,A5
00024A1A <AmiBlitz3.ab3@6848>    BSR.w asmconst
00024A2C <AmiBlitz3.ab3@6849>    !compare3                                               ;bsr.w JL_0_5FC0
00024A30 <AmiBlitz3.ab3@6850>    BEQ.w JL_0_5FB8
00024A34 <AmiBlitz3.ab3@6851>   CMP.w #$2E,D0
00024A38 <AmiBlitz3.ab3@6852>    BEQ.w JL_0_5FA0
00024A3C <AmiBlitz3.ab3@6853>   CMP.w #$28,D0
00024A40 <AmiBlitz3.ab3@6854>    BNE.w syntaxerr
00024A44 <AmiBlitz3.ab3@6855>    BSR.w get1bytemain                                      ;??wy not !fget
00024A48 <AmiBlitz3.ab3@6856>   ORI.w #$20,D0
00024A4C <AmiBlitz3.ab3@6857>   CMP.w #$70,D0
00024A50 <AmiBlitz3.ab3@6858>    BNE.w JL_0_5F98
00024A54 <AmiBlitz3.ab3@6859>    BSR.w get1bytemain                                      ;??wy not !fget
00024A58 <AmiBlitz3.ab3@6860>   ORI.w #$20,D0
00024A5C <AmiBlitz3.ab3@6861>   CMP.w #$63,D0
00024A60 <AmiBlitz3.ab3@6862>    BNE.w syntaxerr
00024A64 <AmiBlitz3.ab3@6863>    BSR.w get1bytemain                                      ;??wy not !fget
00024A68 <AmiBlitz3.ab3@6864>    BSR.w JL_0_5FD4
00024A6A <AmiBlitz3.ab3@6865>   ADDQ.w #4,D5
00024A6C <AmiBlitz3.ab3@6866> RTS
00024A70 <AmiBlitz3.ab3@6870>   BSR.w JL_0_5D46
00024A74 <AmiBlitz3.ab3@6871> BRA.w JL_0_5FD4
00024A78 <AmiBlitz3.ab3@6875>    BSR.w get1bytemain                                     ;??wy not !fget
00024A7C <AmiBlitz3.ab3@6876>   ORI.w #$20,D0
00024A80 <AmiBlitz3.ab3@6877>   CMP.w #$77,D0
00024A84 <AmiBlitz3.ab3@6878>    BEQ.w JL_0_5FBC
00024A88 <AmiBlitz3.ab3@6879>   CMP.w #$6C,D0
00024A8C <AmiBlitz3.ab3@6880>    BNE.w syntaxerr
00024A8E <AmiBlitz3.ab3@6883>   MOVEQ.l #$08,D5
00024A90 <AmiBlitz3.ab3@6884> RTS
00024A92 <AmiBlitz3.ab3@6888>   MOVEQ.l #$07,D5
00024A94 <AmiBlitz3.ab3@6889> RTS
00024A96 <AmiBlitz3.ab3@6893>   TST.w D0
00024A9A <AmiBlitz3.ab3@6894>    BEQ.w JL_0_5FD2
00024A9E <AmiBlitz3.ab3@6895>   CMP.w #$3A,D0
00024AA2 <AmiBlitz3.ab3@6896>    BEQ.w JL_0_5FD2
00024AA6 <AmiBlitz3.ab3@6897>   CMP.w #$2C,D0
00024AA8 <AmiBlitz3.ab3@6900> RTS
00024AAC <AmiBlitz3.ab3@6904>   CMP.w #$2C,D0
00024AB0 <AmiBlitz3.ab3@6905>    BNE.w JL_0_6054
00024AB4 <AmiBlitz3.ab3@6906>    BSR.w get1bytemain                                      ;??wy not !fget
00024AB8 <AmiBlitz3.ab3@6907>   ORI.w #$20,D0
00024ABA <AmiBlitz3.ab3@6908>   MOVEQ.l #$00,D1
00024ABE <AmiBlitz3.ab3@6909>   CMP.w #$64,D0
00024AC2 <AmiBlitz3.ab3@6910>    BEQ.w JL_0_5FFA
00024AC6 <AmiBlitz3.ab3@6911>   CMP.w #$61,D0
00024ACA <AmiBlitz3.ab3@6912>    BNE.w syntaxerr
00024ACE <AmiBlitz3.ab3@6913>   BSET #$F,D1
00024AD2 <AmiBlitz3.ab3@6916>    BSR.w get1bytemain                                      ;??wy not !fget
00024AD6 <AmiBlitz3.ab3@6917>   SUBI.w #$30,D0
00024ADA <AmiBlitz3.ab3@6918>    BMI.w syntaxerr
00024ADE <AmiBlitz3.ab3@6919>   CMP.w #$7,D0
00024AE2 <AmiBlitz3.ab3@6920>    BHI.w syntaxerr
00024AE4 <AmiBlitz3.ab3@6921>   LSL.w #8,D0
00024AE6 <AmiBlitz3.ab3@6922>   LSL.w #4,D0
00024AE8 <AmiBlitz3.ab3@6923>   OR.w D0,D1
00024AEC <AmiBlitz3.ab3@6924>    BSR.w get1bytemain                                      ;??wy not !fget
00024AF0 <AmiBlitz3.ab3@6925>   CMP.w #$2E,D0
00024AF4 <AmiBlitz3.ab3@6926>    BNE.w JL_0_6040
00024AF8 <AmiBlitz3.ab3@6927>    BSR.w get1bytemain                                      ;??wy not !fget
00024AFC <AmiBlitz3.ab3@6928>   ORI.w #$20,D0
00024B00 <AmiBlitz3.ab3@6929>   CMP.w #$77,D0
00024B04 <AmiBlitz3.ab3@6930>    BEQ.w JL_0_603C
00024B08 <AmiBlitz3.ab3@6931>   CMP.w #$6C,D0
00024B0C <AmiBlitz3.ab3@6932>    BNE.w syntaxerr
00024B10 <AmiBlitz3.ab3@6933>   BSET #$B,D1
00024B14 <AmiBlitz3.ab3@6936>    BSR.w get1bytemain                                      ;??wy not !fget
00024B18 <AmiBlitz3.ab3@6939>    CMP.b #"*",d0                                           ;020 * Mode
00024B1C <AmiBlitz3.ab3@6940>             BNE 'l1
00024B20 <AmiBlitz3.ab3@6941>             BSR.w get1bytemain                             ;??wy not !fget
00024B24 <AmiBlitz3.ab3@6942>             CMP.b #"2",d0
00024B28 <AmiBlitz3.ab3@6943>             BNE 'l2
00024B2C <AmiBlitz3.ab3@6944>             OR.w #$200,d1
00024B30 <AmiBlitz3.ab3@6945> BRA 'l1b
00024B34 <AmiBlitz3.ab3@6948>             CMP.b #"4",d0
00024B38 <AmiBlitz3.ab3@6949>             BNE 'l3
00024B3C <AmiBlitz3.ab3@6950>             OR.w #$400,d1
00024B40 <AmiBlitz3.ab3@6951> BRA 'l1b
00024B44 <AmiBlitz3.ab3@6954>             CMP.b #"8",d0
00024B48 <AmiBlitz3.ab3@6955>             BNE syntaxerr
00024B4C <AmiBlitz3.ab3@6956>             OR.w #$600,d1
00024B50 <AmiBlitz3.ab3@6959>         BSR.w get1bytemain                                 ;??wy not !fget
00024B54 <AmiBlitz3.ab3@6962>   CMP.w #$29,D0
00024B58 <AmiBlitz3.ab3@6963>    BNE.w syntaxerr
00024B5E <AmiBlitz3.ab3@6964>   MOVE.w D1,extraword
00024B60 <AmiBlitz3.ab3@6965>   MOVEQ.l #$06,D5
00024B64 <AmiBlitz3.ab3@6966> BRA.w get1bytemain                                         ;??wy not !fget
00024B68 <AmiBlitz3.ab3@6970>   CMP.w #")",D0                                            ;")"
00024B6C <AmiBlitz3.ab3@6971>    BNE.w errorbracketmiss                                  ; was syntax error
00024B6E <AmiBlitz3.ab3@6972>   MOVEQ.l #$05,D5
00024B72 <AmiBlitz3.ab3@6973> BRA.w get1bytemain                                         ;??wy not !fget
00024B78 <AmiBlitz3.ab3@6980>   MOVEA.l asmbuff,A0
00024B7E <AmiBlitz3.ab3@6981>   MOVE.w ininclude,D1
00024B84 <AmiBlitz3.ab3@6982>   OR.w inmacro,D1
00024B86 <AmiBlitz3.ab3@6983>   MOVE.w D1,(A0)+                                          ;flag!
00024B8A <AmiBlitz3.ab3@6984>    BNE.w copyconst
00024B8C <AmiBlitz3.ab3@6985>   MOVE.l A5,-(A7)
00024B90 <AmiBlitz3.ab3@6986>    BSR.w copyconst
00024B96 <AmiBlitz3.ab3@6987>   MOVEA.l asmbuff,A0
00024B9A <AmiBlitz3.ab3@6988>   CMP.w #$4,D1
00024B9E <AmiBlitz3.ab3@6989>    BLS.w asmconst__leave
00024BA4 <AmiBlitz3.ab3@6990>   TST.w lc
00024BA8 <AmiBlitz3.ab3@6991>    BNE.w asmconst__leave
00024BAA <AmiBlitz3.ab3@6992>   ADDQ.w #2,A0
00024BAC <AmiBlitz3.ab3@6993>   MOVE.l (A7)+,(A0)+
00024BAE <AmiBlitz3.ab3@6994>   CLR.b (A0)
00024BB6 <AmiBlitz3.ab3@6995>   MOVE.w #$0004,asmlen2                                    ;pointer + 0
00024BB8 <AmiBlitz3.ab3@6996> RTS
00024BBA <AmiBlitz3.ab3@7000>   NOT.w (A0)
00024BBC <AmiBlitz3.ab3@7001>   ADDQ.w #4,A7
00024BBE <AmiBlitz3.ab3@7002> RTS
00024BC0 <AmiBlitz3.ab3@7005> lc:  Ds.w 1
00024BC6 <AmiBlitz3.ab3@7009>   CLR.w lc
00024BC8 <AmiBlitz3.ab3@7010>   MOVEQ.l #$00,D1
00024BCA <AmiBlitz3.ab3@7013>    ADDQ.w #1,D1                                            ;label name
00024BF6 <AmiBlitz3.ab3@7014>    !fget                                                   ;bsr.w get1bytemain
00024BFA <AmiBlitz3.ab3@7015>    BEQ.w copyconst__done
00024BFE <AmiBlitz3.ab3@7016>    CMP.w #$22,d0
00024C02 <AmiBlitz3.ab3@7017>    BNE.s copyconst__loop_l10
00024C08 <AmiBlitz3.ab3@7018>    NOT.w instringon
00024C0C <AmiBlitz3.ab3@7021>    CMP.w #":",d0
00024C10 <AmiBlitz3.ab3@7022>    BNE.s copyconst__loop_l11
00024C16 <AmiBlitz3.ab3@7023>    TST.w instringon
00024C1A <AmiBlitz3.ab3@7024>    BEQ copyconst__done
00024C1C <AmiBlitz3.ab3@7027>   TST.w D0
00024C20 <AmiBlitz3.ab3@7028>   BPL.w copyconst__notmi
00024C22 <AmiBlitz3.ab3@7029>   MOVE.w D0,-(A7)
00024C24 <AmiBlitz3.ab3@7030>   LSR.w #8,D0
00024C26 <AmiBlitz3.ab3@7031>   MOVE.b D0,(A0)+
00024C28 <AmiBlitz3.ab3@7032>   MOVE.w (A7)+,D0
00024C2A <AmiBlitz3.ab3@7033>   MOVE.b D0,(A0)+
00024C2C <AmiBlitz3.ab3@7034>   ADDQ.w #1,D1
00024C30 <AmiBlitz3.ab3@7035> BRA.s copyconst__loop
00024C36 <AmiBlitz3.ab3@7038>    TST.w instringon
00024C3A <AmiBlitz3.ab3@7039>    BNE.w copyconst__putbyte
00024C40 <AmiBlitz3.ab3@7040>    TST.b _dcb
00024C44 <AmiBlitz3.ab3@7041>    BNE copyconst__notmi_l10
00024C48 <AmiBlitz3.ab3@7042>    CMP.w #$28,D0
00024C4C <AmiBlitz3.ab3@7043>    BEQ.w copyconst__done
00024C50 <AmiBlitz3.ab3@7046>    CMP.w #$2C,D0
00024C54 <AmiBlitz3.ab3@7047>    BEQ.w copyconst__done
00024C58 <AmiBlitz3.ab3@7048>    CMP.b #"'",D0
00024C5C <AmiBlitz3.ab3@7049>    BNE.w copyconst__putbyte
00024C62 <AmiBlitz3.ab3@7050>    MOVE.w D0,lc                                     ;locallabels
00024C64 <AmiBlitz3.ab3@7051>    MOVE.l A1,-(A7)
00024C6A <AmiBlitz3.ab3@7052>    LEA lastgloballabel,A1
00024C6C <AmiBlitz3.ab3@7053>    TST.b (A1)
00024C70 <AmiBlitz3.ab3@7054>    BEQ.w nolocerr
00024C72 <AmiBlitz3.ab3@7057>   ADDQ.w #1,D1
00024C74 <AmiBlitz3.ab3@7058>   MOVE.b (A1)+,(A0)+
00024C78 <AmiBlitz3.ab3@7059>    BNE.w copyconst__cloop
00024C7A <AmiBlitz3.ab3@7060>   SUBQ.w #1,D1
00024C7C <AmiBlitz3.ab3@7061>   SUBQ.w #1,A0
00024C7E <AmiBlitz3.ab3@7062>   MOVEA.l (A7)+,A1
00024C80 <AmiBlitz3.ab3@7065>   MOVE.b D0,(A0)+
00024C84 <AmiBlitz3.ab3@7066> BRA.w copyconst__loop
00024C86 <AmiBlitz3.ab3@7069>   CLR.b (A0)
00024C8C <AmiBlitz3.ab3@7070>   MOVE.w D1,asmlen2
00024C8E <AmiBlitz3.ab3@7071> RTS
00024C94 <AmiBlitz3.ab3@7076>   CMP.l #$80ad,d0
00024C98 <AmiBlitz3.ab3@7077>   BNE.s 'l12
00024C9E <AmiBlitz3.ab3@7078> JMP bssseg
00024CA4 <AmiBlitz3.ab3@7081>   CMP.l #$807f,d0
00024CA8 <AmiBlitz3.ab3@7082>     BNE.s 'l13
00024CAE <AmiBlitz3.ab3@7083> JMP chipseg
00024CB4 <AmiBlitz3.ab3@7086>   ADDQ.l #1,destpointer                                    ;even
00024CBC <AmiBlitz3.ab3@7087>   BCLR #$0,destpointer+3
00024CC0 <AmiBlitz3.ab3@7088>   SUBI.w #$803C,D0
00024CC2 <AmiBlitz3.ab3@7089>   LSL.w #2,D0
00024CC8 <AmiBlitz3.ab3@7090>   MOVEA.l #asmpnts,A0
00024CCC <AmiBlitz3.ab3@7091>   MOVEA.l $0(A0,D0.W),A0                                   ;begin inline assembler
00024CD2 <AmiBlitz3.ab3@7092>   MOVE.w D0,temp1
00024CD4 <AmiBlitz3.ab3@7093>   MOVE.l A0,-(A7)
00024CD6 <AmiBlitz3.ab3@7094>   MOVEQ.l #$01,D1
00024D02 <AmiBlitz3.ab3@7095>    !fget                                                   ;bsr.w get1bytemain
00024D06 <AmiBlitz3.ab3@7096>   CMP.w #$2E,D0
00024D0A <AmiBlitz3.ab3@7097>    BNE.w JL_0_6184
00024D36 <AmiBlitz3.ab3@7098>   !fget                                                    ;bsr.w get1bytemain
00024D3A <AmiBlitz3.ab3@7099>   ORI.w #$20,D0
00024D3E <AmiBlitz3.ab3@7100>   CMP.w #$77,D0                                            ;long
00024D42 <AmiBlitz3.ab3@7101>    BEQ.w JL_0_618A
00024D46 <AmiBlitz3.ab3@7102>   CMP.w #$62,D0                                            ;byte
00024D4A <AmiBlitz3.ab3@7103>    BEQ.w JL_0_617A
00024D4E <AmiBlitz3.ab3@7104>   CMP.w #$6C,D0                                            ;word
00024D52 <AmiBlitz3.ab3@7105>    BEQ.w JL_0_6196
00024D56 <AmiBlitz3.ab3@7106>   CMP.w #"s",d0
00024D5A <AmiBlitz3.ab3@7107>   BNE syntaxerr
00024D5E <AmiBlitz3.ab3@7108> BRA.w JL_0_617A
00024D60 <AmiBlitz3.ab3@7111>   MOVEQ.l #$00,D1
00024D64 <AmiBlitz3.ab3@7112>   MOVE.w $8(A0),D0
00024D68 <AmiBlitz3.ab3@7113> BRA.w JL_0_619E
00024D6A <AmiBlitz3.ab3@7116>   MOVEQ.l #$04,D1
00024D6E <AmiBlitz3.ab3@7117> BRA.w JL_0_61AE
00024D70 <AmiBlitz3.ab3@7120>   MOVEQ.l #$04,D1
00024D74 <AmiBlitz3.ab3@7121>   MOVE.w $8(A0),D0
00024D76 <AmiBlitz3.ab3@7122>   LSR.w #4,D0
00024D7A <AmiBlitz3.ab3@7123> BRA.w JL_0_619E
00024D7C <AmiBlitz3.ab3@7126>   MOVEQ.l #$08,D1
00024D80 <AmiBlitz3.ab3@7127>   MOVE.w $8(A0),D0
00024D82 <AmiBlitz3.ab3@7128>   LSR.w #8,D0
00024D86 <AmiBlitz3.ab3@7131>    ANDI.w #$F,D0
00024D8A <AmiBlitz3.ab3@7132>   CMP.w #$F,D0
00024D8E <AmiBlitz3.ab3@7133>    BNE.w 'cl60
00024D96 <AmiBlitz3.ab3@7136>    CMP.l #"MULS",-6(a0)
00024D9A <AmiBlitz3.ab3@7137>    BNE 'c20
00024DA0 <AmiBlitz3.ab3@7138>    MOVE.l #$4c000800,d1
00024DA6 <AmiBlitz3.ab3@7139> JMP do32
00024DAE <AmiBlitz3.ab3@7142>    CMP.l #"MULU",-6(a0)
00024DB2 <AmiBlitz3.ab3@7143>    BNE 'c30
00024DB8 <AmiBlitz3.ab3@7144>    MOVE.l #$4c000000,d1
00024DBE <AmiBlitz3.ab3@7145> JMP do32
00024DC6 <AmiBlitz3.ab3@7148>    CMP.l #"DIVS",-6(a0)
00024DCA <AmiBlitz3.ab3@7149>    BNE 'c40
00024DD0 <AmiBlitz3.ab3@7150>    MOVE.l #$4c400800,d1
00024DD6 <AmiBlitz3.ab3@7151> JMP do32
00024DDE <AmiBlitz3.ab3@7154>    CMP.l #"DIVU",-6(a0)
00024DE2 <AmiBlitz3.ab3@7155>    BNE 'c50
00024DE8 <AmiBlitz3.ab3@7156>    MOVE.l #$4c400000,d1
00024DEE <AmiBlitz3.ab3@7157> JMP do32
00024DF2 <AmiBlitz3.ab3@7160> BRA illsizeerr
00024E1E <AmiBlitz3.ab3@7163>   !fget                                                    ;bsr.w get1bytemain
00024E24 <AmiBlitz3.ab3@7166>   MOVE.w D1,asmsize
00024E26 <AmiBlitz3.ab3@7167>   MOVEQ.l #-$01,D3
00024E2A <AmiBlitz3.ab3@7168>    BSR.w reget
00024E2E <AmiBlitz3.ab3@7169>    BEQ.w JL_0_6200
00024E38 <AmiBlitz3.ab3@7170>   MOVE.l #ptr_parameterstore,asmbuff
00024E42 <AmiBlitz3.ab3@7172>    MOVE.w oldqflag,instringon
00024E48 <AmiBlitz3.ab3@7173>   MOVEA.l lastsourcepos,A5
00024E4C <AmiBlitz3.ab3@7174>    BSR.w JL_0_5DC2
00024E4E <AmiBlitz3.ab3@7175>   MOVE.l D4,D2                                             ;to src
00024E50 <AmiBlitz3.ab3@7176>   MOVE.l D5,D3
00024E5A <AmiBlitz3.ab3@7177>   MOVE.w asmlen2,asmlen
00024E5C <AmiBlitz3.ab3@7178>   MOVEQ.l #-$01,D5
00024E66 <AmiBlitz3.ab3@7179>   MOVE.w extraword,extraword2
00024E6A <AmiBlitz3.ab3@7180>   CMP.w #$2C,D0                                            ;','
00024E6E <AmiBlitz3.ab3@7181>    BNE.w JL_0_6200
00024E78 <AmiBlitz3.ab3@7182>   MOVE.l #namebuff2,asmbuff
00024E7C <AmiBlitz3.ab3@7183>    BSR.w JL_0_5DC2                                         ;dest
00024E7E <AmiBlitz3.ab3@7186>   MOVEA.l (A7)+,A0
00024E84 <AmiBlitz3.ab3@7187>   MOVEA.l destpointer,A1
00024E86 <AmiBlitz3.ab3@7188>   MOVEA.l A1,A4
00024E88 <AmiBlitz3.ab3@7189>   ADDQ.w #2,A1
00024E8A <AmiBlitz3.ab3@7190>   MOVE.w (A0),D1
00024E8C <AmiBlitz3.ab3@7191>   TST.w D3
00024E90 <AmiBlitz3.ab3@7192>    BMI.w JL_0_639E
00024E94 <AmiBlitz3.ab3@7193>   MOVE.w $E(A0),D0
00024E98 <AmiBlitz3.ab3@7194>    BPL.w JL_0_6264
00024E9C <AmiBlitz3.ab3@7195>   BTST #$0,D0
00024EA0 <AmiBlitz3.ab3@7196>    BEQ.w JL_0_6240
00024EA4 <AmiBlitz3.ab3@7197>   CMP.w #$1,D5
00024EA8 <AmiBlitz3.ab3@7198>    BNE.w JL_0_6240
00024EAC <AmiBlitz3.ab3@7199>   CMP.w #$E,D3
00024EB0 <AmiBlitz3.ab3@7200>    BEQ.w JL_0_6264
00024EB6 <AmiBlitz3.ab3@7201>   MOVE.w temp1,D0
00024EB8 <AmiBlitz3.ab3@7202>   ADDQ.w #4,D0
00024EBC <AmiBlitz3.ab3@7203> BRA.w JL_0_6256
00024EC0 <AmiBlitz3.ab3@7206>   BTST #$1,D0
00024EC4 <AmiBlitz3.ab3@7207>    BEQ.w JL_0_6264
00024EC8 <AmiBlitz3.ab3@7208>   CMP.w #$B,D3
00024ECC <AmiBlitz3.ab3@7209>    BNE.w JL_0_6264
00024ED2 <AmiBlitz3.ab3@7210>   MOVE.w temp1,D0
00024ED4 <AmiBlitz3.ab3@7213>   ADDQ.w #4,D0
00024EDA <AmiBlitz3.ab3@7214>   MOVEA.l #asmpnts,A0
00024EDE <AmiBlitz3.ab3@7215>   MOVEA.l $0(A0,D0.W),A0
00024EE0 <AmiBlitz3.ab3@7216>   MOVE.w (A0),D1
00024EEA <AmiBlitz3.ab3@7219>   MOVE.l #ptr_parameterstore,buff1
00024EF4 <AmiBlitz3.ab3@7220>   MOVE.l #namebuff2,buff2
00024EF8 <AmiBlitz3.ab3@7221>   MOVE.l $A(A0),D0
00024EFC <AmiBlitz3.ab3@7222>    BEQ.w JL_0_62DC
00024EFE <AmiBlitz3.ab3@7223>   MOVEA.l D0,A3
00024F04 <AmiBlitz3.ab3@7224>   MOVE.w asmsize,D6
00024F06 <AmiBlitz3.ab3@7227>    JSR (A3)
00024F0A <AmiBlitz3.ab3@7228>    BPL.w JL_0_629A
00024F0E <AmiBlitz3.ab3@7229>   CMP.w #-$2,D0
00024F12 <AmiBlitz3.ab3@7230>    BEQ.w illsizeerr
00024F16 <AmiBlitz3.ab3@7231> BRA.w illeaerr
00024F1A <AmiBlitz3.ab3@7234>   BEQ.w JL_0_62DC
00024F1C <AmiBlitz3.ab3@7235>   EXG.l D2,D4
00024F1E <AmiBlitz3.ab3@7236>   EXG.l D3,D5
00024F24 <AmiBlitz3.ab3@7237>   MOVE.l extraword,D6
00024F26 <AmiBlitz3.ab3@7238>   SWAP D6
00024F2C <AmiBlitz3.ab3@7239>   MOVE.l D6,extraword
00024F36 <AmiBlitz3.ab3@7240>   MOVE.l #namebuff2,buff1
00024F40 <AmiBlitz3.ab3@7241>   MOVE.l #ptr_parameterstore,buff2
00024F46 <AmiBlitz3.ab3@7242>   MOVE.w asmlen,D6
00024F4C <AmiBlitz3.ab3@7243>   MOVE.w asmlen2,D7
00024F52 <AmiBlitz3.ab3@7244>   MOVE.w D6,asmlen2
00024F58 <AmiBlitz3.ab3@7245>   MOVE.w D7,asmlen
00024F62 <AmiBlitz3.ab3@7248>   MOVE.l buff1,asmbuff
00024F66 <AmiBlitz3.ab3@7249>   MOVE.w $E(A0),D0
00024F6A <AmiBlitz3.ab3@7250>    BEQ.w JL_0_6348
00024F6E <AmiBlitz3.ab3@7251>    BMI.w JL_0_6348
00024F72 <AmiBlitz3.ab3@7252>    CMP.w #$7000,d1
00024F76 <AmiBlitz3.ab3@7253>    BNE 'skip
00024F7A <AmiBlitz3.ab3@7254>    CMP.w #$b,d3
00024F7E <AmiBlitz3.ab3@7255>    BNE illeaerr
00024F82 <AmiBlitz3.ab3@7258>    CMP.w #$1,D0
00024F86 <AmiBlitz3.ab3@7259>    BNE.w JL_0_630E
00024F8A <AmiBlitz3.ab3@7260>    CMP.w #$B,D3
00024F8E <AmiBlitz3.ab3@7261>    BNE.w JL_0_6348
00024F92 <AmiBlitz3.ab3@7264>    BSR.w insasm
00024F94 <AmiBlitz3.ab3@7265>   MOVE.w D4,D2
00024F96 <AmiBlitz3.ab3@7266>   MOVE.w D5,D3
00024F9A <AmiBlitz3.ab3@7267> BRA.w JL_0_6364
00024F9E <AmiBlitz3.ab3@7270>    CMP.w #$2,D0
00024FA2 <AmiBlitz3.ab3@7271>    BNE.w JL_0_6324
00024FA6 <AmiBlitz3.ab3@7272>   CMP.w #$8,D3
00024FAA <AmiBlitz3.ab3@7273>    BNE.w illeaerr
00024FAC <AmiBlitz3.ab3@7274>   MOVEQ.l #$09,D3
00024FB0 <AmiBlitz3.ab3@7275> BRA.w JL_0_6348
00024FB4 <AmiBlitz3.ab3@7278>    CMP.w #$3,D0
00024FB8 <AmiBlitz3.ab3@7279>    BEQ.w JL_0_6302
00024FBC <AmiBlitz3.ab3@7280>   CMP.w #$4,D0
00024FC0 <AmiBlitz3.ab3@7281>    BEQ.w JL_0_6302
00024FC4 <AmiBlitz3.ab3@7282>   CMP.w #$5,D0
00024FC8 <AmiBlitz3.ab3@7283>    BNE.w JL_0_6348
00024FCC <AmiBlitz3.ab3@7284>   CMP.w #$8,D5
00024FD0 <AmiBlitz3.ab3@7285>    BNE.w illeaerr
00024FD2 <AmiBlitz3.ab3@7286>   OR.w D2,D1
00024FD4 <AmiBlitz3.ab3@7287>   MOVEQ.l #$09,D5
00024FD8 <AmiBlitz3.ab3@7290>   MOVE.w $2(A0),D6
00024FDC <AmiBlitz3.ab3@7291>   MOVE.b $6(A0),D7
00024FE0 <AmiBlitz3.ab3@7292>   MOVEM.l D4-D5,-(A7)
00024FE6 <AmiBlitz3.ab3@7293>   MOVE.w extraword2,D4
00024FEA <AmiBlitz3.ab3@7294>    BSR.w doea
00024FEE <AmiBlitz3.ab3@7295>   MOVEM.l (A7)+,D2-D3
00024FF0 <AmiBlitz3.ab3@7296>   TST.w D3
00024FF4 <AmiBlitz3.ab3@7299>     BMI.w JL_0_6392
00024FFA <AmiBlitz3.ab3@7300>   MOVE.w extraword,D4
00024FFE <AmiBlitz3.ab3@7301>   MOVE.w $4(A0),D6
00025002 <AmiBlitz3.ab3@7302>   MOVE.b $7(A0),D7
0002500C <AmiBlitz3.ab3@7303>   MOVE.l buff2,asmbuff
00025016 <AmiBlitz3.ab3@7304>   MOVE.w asmlen2,asmlen
0002501A <AmiBlitz3.ab3@7305>    BSR.w doea
0002501E <AmiBlitz3.ab3@7306> BRA.w JL_0_63AA
00025022 <AmiBlitz3.ab3@7309>   MOVE.w $4(A0),D0
00025026 <AmiBlitz3.ab3@7310>    BNE.w illeaerr
0002502A <AmiBlitz3.ab3@7311> BRA.w JL_0_63AA
0002502E <AmiBlitz3.ab3@7315>   MOVE.w $2(A0),D0
00025032 <AmiBlitz3.ab3@7316>   OR.w $4(A0),D0
00025036 <AmiBlitz3.ab3@7317>    BNE.w illeaerr
0002503A <AmiBlitz3.ab3@7320>   MOVE.w $8(A0),D0
0002503E <AmiBlitz3.ab3@7321>   ANDI.w #$F000,D0
00025042 <AmiBlitz3.ab3@7322>   CMP.w #-$1000,D0
00025046 <AmiBlitz3.ab3@7323>    BEQ.w JL_0_63D2
00025048 <AmiBlitz3.ab3@7324>   LSR.w #8,D0
0002504A <AmiBlitz3.ab3@7325>   LSR.w #4,D0
0002504E <AmiBlitz3.ab3@7326>   MOVE.w $8(A0),D2
00025054 <AmiBlitz3.ab3@7327>   MOVE.w asmsize,D3
00025056 <AmiBlitz3.ab3@7328>   LSR.w D3,D2
0002505A <AmiBlitz3.ab3@7329>   ANDI.w #$F,D2
0002505C <AmiBlitz3.ab3@7330>   LSL.w D0,D2
0002505E <AmiBlitz3.ab3@7331>   OR.w D2,D1
00025064 <AmiBlitz3.ab3@7334>   CMPA.l destbufferend,A4
00025068 <AmiBlitz3.ab3@7335>    BCS.w JL_0_63E8
00025070 <AmiBlitz3.ab3@7337>   MOVE.w #$FFFF,dontwrite
00025074 <AmiBlitz3.ab3@7338> BRA.w JL_0_63EA
00025076 <AmiBlitz3.ab3@7341>   MOVE.w D1,(A4)
0002507C <AmiBlitz3.ab3@7344>   MOVE.l A1,destpointer
0002507E <AmiBlitz3.ab3@7345> RTS
00025084 <AmiBlitz3.ab3@7349>   MOVE.l destpointer,-(A7)
0002508A <AmiBlitz3.ab3@7350>   MOVE.l A1,destpointer
0002508E <AmiBlitz3.ab3@7351>    BSR.w addoff
00025094 <AmiBlitz3.ab3@7352>   MOVEA.l destpointer,A1
0002509A <AmiBlitz3.ab3@7353>   MOVE.l (A7)+,destpointer
0002509C <AmiBlitz3.ab3@7354> RTS
000250A0 <AmiBlitz3.ab3@7358>   MOVEM.l d2-d6,-(a7)
000250A6 <AmiBlitz3.ab3@7359>   JSR stripspaces
000250AA <AmiBlitz3.ab3@7360>   CMP.b #"d",(a5)+
000250AE <AmiBlitz3.ab3@7361>   BNE noreg
000250B0 <AmiBlitz3.ab3@7362>   MOVE.b (a5)+,d0
000250B4 <AmiBlitz3.ab3@7363>   CMP.b #$30,d0
000250B8 <AmiBlitz3.ab3@7364>   BLT noreg
000250BC <AmiBlitz3.ab3@7365>   CMP.b #$37,d0
000250C0 <AmiBlitz3.ab3@7366>   BGT noreg
000250C4 <AmiBlitz3.ab3@7367>   SUB.b #$30,d0
000250C6 <AmiBlitz3.ab3@7368>   MOVEQ #0,d3
000250C8 <AmiBlitz3.ab3@7369>   MOVE.b d0,d3                                             ;reg1
000250CA <AmiBlitz3.ab3@7370>   ASL.l #8,d3
000250CC <AmiBlitz3.ab3@7371>   ASL.l #8,d3
000250D2 <AmiBlitz3.ab3@7372>   JSR stripspaces
000250D6 <AmiBlitz3.ab3@7373>   CMP.b #",",(a5)+
000250DA <AmiBlitz3.ab3@7374>   BNE noreg
000250E0 <AmiBlitz3.ab3@7375>   JSR stripspaces
000250E4 <AmiBlitz3.ab3@7376>   CMP.b #"d",(a5)+
000250E8 <AmiBlitz3.ab3@7377>   BNE noreg
000250EA <AmiBlitz3.ab3@7378>   MOVE.b (a5)+,d0
000250EE <AmiBlitz3.ab3@7379>   CMP.b #$30,d0
000250F2 <AmiBlitz3.ab3@7380>   BLT noreg
000250F6 <AmiBlitz3.ab3@7381>   CMP.b #$37,d0
000250FA <AmiBlitz3.ab3@7382>   BGT noreg
000250FE <AmiBlitz3.ab3@7383>   SUB.b #$30,d0
00025100 <AmiBlitz3.ab3@7384>   MOVEQ #0,d4
00025102 <AmiBlitz3.ab3@7385>   MOVE.b d0,d4                                             ;reg2
00025104 <AmiBlitz3.ab3@7386>   ASL.l #8,d4
00025106 <AmiBlitz3.ab3@7387>   ASL.l #4,d4
00025108 <AmiBlitz3.ab3@7388>   OR.b d0,d1
0002510A <AmiBlitz3.ab3@7389>   OR.l d3,d1
0002510C <AmiBlitz3.ab3@7390>   OR.l d4,d1
00025112 <AmiBlitz3.ab3@7391>   JSR writelong
00025116 <AmiBlitz3.ab3@7392>   MOVEM.l (a7)+,d2-d6
0002511A <AmiBlitz3.ab3@7393>   MOVEM.l d1/a1-a3,-(a7)
0002511E <AmiBlitz3.ab3@7394> BRA exit
00025122 <AmiBlitz3.ab3@7398>   MOVEM.l (a7)+,d2-d6
00025128 <AmiBlitz3.ab3@7399>   LEA errtext,a0
0002512A <AmiBlitz3.ab3@7400>   MOVE.l a0,-(a7)
00025130 <AmiBlitz3.ab3@7401> JMP handle_compileerror
00025136 <AmiBlitz3.ab3@7410>   MOVE.w dontwrite,D1
0002513A <AmiBlitz3.ab3@7411>    BNE.w asmfixer__done
00025142 <AmiBlitz3.ab3@7412>   BTST #$7,make_smallestcode
00025146 <AmiBlitz3.ab3@7413>    BEQ.w asmfixer__go
0002514A <AmiBlitz3.ab3@7414>   MOVE.w pass(PC),D1
0002514E <AmiBlitz3.ab3@7415>    BEQ.w asmfixer__done
00025154 <AmiBlitz3.ab3@7418>   MOVEA.l templabel,A2                                     ;insert labels in Code
0002515C <AmiBlitz3.ab3@7419>   MOVE.b #1,curtemplabel
00025164 <AmiBlitz3.ab3@7420>   MOVE.w #$FFFF,constmode
0002516A <AmiBlitz3.ab3@7421>   CLR.w regnum
00025174 <AmiBlitz3.ab3@7422>           MOVE.l #forthstack,forthsp
0002517E <AmiBlitz3.ab3@7423>           MOVE.l #precstack,precsp
00025182 <AmiBlitz3.ab3@7424>    BSR.w prepstack
00025184 <AmiBlitz3.ab3@7427>   MOVE.l A2,-(A7)
00025188 <AmiBlitz3.ab3@7428>    BSR.w chkstop
0002518A <AmiBlitz3.ab3@7429>   MOVEA.l (A7)+,A2
0002518E <AmiBlitz3.ab3@7430>   CMPA.w #$0,A2
00025192 <AmiBlitz3.ab3@7431>    BEQ.w asmfixer__done2
00025198 <AmiBlitz3.ab3@7432>    CLR.b iee
0002519E <AmiBlitz3.ab3@7433>   MOVE.l A2,asmbuff
000251A2 <AmiBlitz3.ab3@7434>   LEA $10(A2),A5
000251A6 <AmiBlitz3.ab3@7435>   TST.b $F(A2)
000251AA <AmiBlitz3.ab3@7436>    BNE.w asmfixer__skipo
000251AC <AmiBlitz3.ab3@7437>   MOVEA.l (A5),A5                                          ;pointer to real text
000251B2 <AmiBlitz3.ab3@7440>    CLR.w asmtype
000251B6 <AmiBlitz3.ab3@7441>    CMP.b #".",(a5)
000251BA <AmiBlitz3.ab3@7442>    BNE.s asmfixer__skipo_l10
000251BC <AmiBlitz3.ab3@7443>    MOVE.l a2,-(a7)
000251BE <AmiBlitz3.ab3@7444>    ADDQ.l #1,a5
000251C4 <AmiBlitz3.ab3@7445>    LEA newtypebase,a2
000251C8 <AmiBlitz3.ab3@7446>    BSR getparameter2
000251CC <AmiBlitz3.ab3@7447>    BEQ.w syntaxerr
000251D0 <AmiBlitz3.ab3@7448>    BSR findtype
000251D4 <AmiBlitz3.ab3@7449>    BNE.w notypeerr
000251D8 <AmiBlitz3.ab3@7450>    LEA $4(a2),a2
000251DC <AmiBlitz3.ab3@7451>    BSR getparameter2
000251E0 <AmiBlitz3.ab3@7452>    BEQ.w syntaxerr
000251E4 <AmiBlitz3.ab3@7453>    BSR.w findvariable2
000251E8 <AmiBlitz3.ab3@7454>    BNE.w notypeerr
000251EC <AmiBlitz3.ab3@7455>    MOVE.w $4(a2),d3
000251EE <AmiBlitz3.ab3@7456>    EXT.l d3
000251F2 <AmiBlitz3.ab3@7457> BRA asmfixer__skipo_l30b
000251F6 <AmiBlitz3.ab3@7460>   CMP.b #"\",(a5)
000251FA <AmiBlitz3.ab3@7461>     BNE asmfixer__skipo_l20
000251FC <AmiBlitz3.ab3@7462>     ADDQ.l #1,a5
000251FE <AmiBlitz3.ab3@7463>    MOVE.l a2,-(a7)
00025200 <AmiBlitz3.ab3@7464>    MOVE.l a5,a4
00025206 <AmiBlitz3.ab3@7465>    LEA usedpath,a5
0002520A <AmiBlitz3.ab3@7466>    CMP.b #"*",(a5)
0002520E <AmiBlitz3.ab3@7467>    BNE asmfixer__skipo_lm1
00025210 <AmiBlitz3.ab3@7468>    ADDQ.l #1,a5
00025214 <AmiBlitz3.ab3@7471>    BSR.w getparameter2
00025218 <AmiBlitz3.ab3@7472>    BEQ.w syntaxerr
0002521E <AmiBlitz3.ab3@7473>    LEA varbase,A2
00025226 <AmiBlitz3.ab3@7474>    MOVE.b #1,newvariable
0002522A <AmiBlitz3.ab3@7475>    BSR.w findvariable
00025230 <AmiBlitz3.ab3@7476>    CLR.b newvariable
00025236 <AmiBlitz3.ab3@7477>    CMP.l #-1,d0
0002523A <AmiBlitz3.ab3@7478>    BEQ.w notypeerr
0002523C <AmiBlitz3.ab3@7479>    MOVE.l a4,a5
00025240 <AmiBlitz3.ab3@7480>    MOVE.l $a(a2),a2
00025244 <AmiBlitz3.ab3@7481>    LEA $4(a2),a2
00025248 <AmiBlitz3.ab3@7482>    BSR getparameter2
0002524C <AmiBlitz3.ab3@7483>    BEQ.w syntaxerr
00025250 <AmiBlitz3.ab3@7484>    BSR.w findvariable2
00025254 <AmiBlitz3.ab3@7485>    BNE.w notypeerr
00025258 <AmiBlitz3.ab3@7486>   MOVE.w $4(A2),D3
0002525A <AmiBlitz3.ab3@7487>   EXT.l D3
00025260 <AmiBlitz3.ab3@7490>    CMP.b #"[",-1(a5)
00025264 <AmiBlitz3.ab3@7491>    BNE asmfixer__skipo_l30c
00025266 <AmiBlitz3.ab3@7492>    MOVEQ #0,d0
00025268 <AmiBlitz3.ab3@7493>    MOVE.b (a5)+,d0
0002526A <AmiBlitz3.ab3@7494>    MOVE.l d3,-(a7)
0002526C <AmiBlitz3.ab3@7495>    MOVEQ #0,d3
00025272 <AmiBlitz3.ab3@7496>    JSR atoi
00025274 <AmiBlitz3.ab3@7497>    MOVE.l (a7)+,d1
00025278 <AmiBlitz3.ab3@7498>    MOVE.l $a(a2),a2
0002527C <AmiBlitz3.ab3@7499>    MOVE.w 8(a2),d0
0002527E <AmiBlitz3.ab3@7500>    MULS d0,d3
00025280 <AmiBlitz3.ab3@7501>    ADD.l d1,d3
00025282 <AmiBlitz3.ab3@7504>   MOVE.l (a7)+,a2
00025286 <AmiBlitz3.ab3@7505> BRA asmfixer__oko
0002528C <AmiBlitz3.ab3@7508>   CMP.w #$c,$8(a2)
00025290 <AmiBlitz3.ab3@7509>      BEQ asmfixer__skipo_lf1
00025296 <AmiBlitz3.ab3@7510>      CMP.w #$d,$8(a2)
0002529A <AmiBlitz3.ab3@7511>      BEQ asmfixer__skipo_lf1
000252A0 <AmiBlitz3.ab3@7514>   JSR AJL_0_BF6E
000252A6 <AmiBlitz3.ab3@7517>   MOVEA.l asmbuff,A2
000252AA <AmiBlitz3.ab3@7518>    BEQ.w asmfixer__oko
000252AE <AmiBlitz3.ab3@7519>   CMP.w #$28,D0
000252B2 <AmiBlitz3.ab3@7520>    BEQ.w asmfixer__oko
000252B6 <AmiBlitz3.ab3@7521>   CMP.w #$2C,D0
000252BA <AmiBlitz3.ab3@7522>    BEQ.w asmfixer__oko
000252BE <AmiBlitz3.ab3@7523> BRA.w syntaxerr
000252C6 <AmiBlitz3.ab3@7526>   MOVE.b #1,iee
000252CA <AmiBlitz3.ab3@7527> BRA asmfixer__skipo_lf2
000252CE <AmiBlitz3.ab3@7530>   MOVEA.l $4(A2),A1
000252D2 <AmiBlitz3.ab3@7532>   MOVE.w $8(A2),D1                                         ;labelmode
000252D6 <AmiBlitz3.ab3@7533>   CMP.w #$5,D1
000252DA <AmiBlitz3.ab3@7534>    BNE.w asmfixer__notdan
000252DE <AmiBlitz3.ab3@7537>    BSR.w chkword                                         ;word
000252E0 <AmiBlitz3.ab3@7540>   MOVE.w D3,(A1)
000252E4 <AmiBlitz3.ab3@7541> BRA.w asmfixer__next
000252E8 <AmiBlitz3.ab3@7544>   CMP.w #$6,D1
000252EC <AmiBlitz3.ab3@7545>    BNE.w asmfixer__notdanxi
000252F0 <AmiBlitz3.ab3@7548>    BSR.w chkbyte                                         ;byte
000252F4 <AmiBlitz3.ab3@7551>   MOVE.b D3,$1(A1)
000252F8 <AmiBlitz3.ab3@7552> BRA.w asmfixer__next
000252FC <AmiBlitz3.ab3@7555>    CMP.w #$11,D1                                           ;byte
00025300 <AmiBlitz3.ab3@7556>    BEQ.w asmfixer__isbyte2
00025304 <AmiBlitz3.ab3@7557>    CMP.w #$c,d1
00025308 <AmiBlitz3.ab3@7558>    BEQ asmfixer__single1
0002530C <AmiBlitz3.ab3@7559>    CMP.w #$d,d1
00025310 <AmiBlitz3.ab3@7560>    BEQ asmfixer__double1
00025314 <AmiBlitz3.ab3@7561>   CMP.w #$7,D1
00025318 <AmiBlitz3.ab3@7562>    BEQ.w asmfixer__word                                    ;word
0002531C <AmiBlitz3.ab3@7563>   CMP.w #$8,D1
00025320 <AmiBlitz3.ab3@7564>    BNE.w asmfixer__notabsl
00025326 <AmiBlitz3.ab3@7567>   MOVE.w asmtype,D1                                        ;long
0002532A <AmiBlitz3.ab3@7568>    BEQ.w asmfixer__notpcrel
0002532E <AmiBlitz3.ab3@7569>      BSR.w asmoff
00025330 <AmiBlitz3.ab3@7572>   MOVE.l D3,(A1)
00025334 <AmiBlitz3.ab3@7573> BRA.w asmfixer__next
0002533A <AmiBlitz3.ab3@7577>   fmove.s fp0,0(a1)
0002533E <AmiBlitz3.ab3@7578> BRA.w asmfixer__next
00025344 <AmiBlitz3.ab3@7582>   fmove.d fp0,0(a1)
00025348 <AmiBlitz3.ab3@7583> BRA.w asmfixer__next
0002534C <AmiBlitz3.ab3@7587>   CMP.w #$9,D1
00025350 <AmiBlitz3.ab3@7588>    BNE.w asmfixer__notdpc
00025352 <AmiBlitz3.ab3@7589>   SUB.l A1,D3                                              ;branchword
00025356 <AmiBlitz3.ab3@7590>    BSR.w chkword
00025358 <AmiBlitz3.ab3@7591>   MOVE.w D3,(A1)
0002535C <AmiBlitz3.ab3@7592> BRA.w asmfixer__next
00025360 <AmiBlitz3.ab3@7596>   CMP.w #$A,D1
00025364 <AmiBlitz3.ab3@7597>    BNE.w asmfixer__imm
00025366 <AmiBlitz3.ab3@7598>   SUB.l A1,D3                                              ;branchbyte
0002536A <AmiBlitz3.ab3@7599> BRA.w asmfixer__isbyte
0002536E <AmiBlitz3.ab3@7603>   CMP.w #$11,d1
00025372 <AmiBlitz3.ab3@7604>   BLE asmfixer__imm_org
00025374 <AmiBlitz3.ab3@7605>   MOVE.l a3,-(a7)
0002537A <AmiBlitz3.ab3@7606>   LEA pluginbase,a3
0002537E <AmiBlitz3.ab3@7607>   MOVE.l 8(a2),a0
00025380 <AmiBlitz3.ab3@7608>   JSR (a0)                                                 ;hook
00025382 <AmiBlitz3.ab3@7609>   MOVE.l (a7)+,a3
00025386 <AmiBlitz3.ab3@7610> BRA asmfixer__next
0002538A <AmiBlitz3.ab3@7613>   MOVE.w $A(A2),D0
0002538E <AmiBlitz3.ab3@7614>    BEQ.w asmfixer__noflag
00025392 <AmiBlitz3.ab3@7615>   CMP.w #$1,D0
00025396 <AmiBlitz3.ab3@7616>    BEQ.w asmfixer__tocount
0002539A <AmiBlitz3.ab3@7617>   CMP.w #$3,D0
0002539E <AmiBlitz3.ab3@7618>    BEQ.w asmfixer__tomoveq
000253A2 <AmiBlitz3.ab3@7619>   CMP.w #$4,D0
000253A6 <AmiBlitz3.ab3@7620>    BEQ.w asmfixer__totrap
000253AA <AmiBlitz3.ab3@7623>   CMP.w #$B,D1                                             ;long
000253AE <AmiBlitz3.ab3@7624>    BEQ.w asmfixer__isabsl
000253B2 <AmiBlitz3.ab3@7625> BRA asmfixer__word2                                              ;word
000253B8 <AmiBlitz3.ab3@7628>   CMP.l #$F,D3
000253BC <AmiBlitz3.ab3@7629>    BHI.w illtraperr
000253BE <AmiBlitz3.ab3@7630>   OR.b D3,-(A1)
000253C2 <AmiBlitz3.ab3@7631> BRA.w asmfixer__next
000253C8 <AmiBlitz3.ab3@7634>   CMP.l #$8,D3
000253CC <AmiBlitz3.ab3@7635>    BHI.w illimmerr
000253CE <AmiBlitz3.ab3@7636>   TST.l D3
000253D2 <AmiBlitz3.ab3@7637>    BEQ.w illimmerr
000253D6 <AmiBlitz3.ab3@7638>   ANDI.w #$7,D3
000253D8 <AmiBlitz3.ab3@7639>   LSL.w #8,D3
000253DA <AmiBlitz3.ab3@7640>   LSL.w #1,D3
000253DC <AmiBlitz3.ab3@7641>   OR.w D3,-(A1)
000253E0 <AmiBlitz3.ab3@7642> BRA.w asmfixer__next
000253E4 <AmiBlitz3.ab3@7645>    BSR.w chkbyte
000253E6 <AmiBlitz3.ab3@7646>   MOVE.b D3,-(A1)
000253E8 <AmiBlitz3.ab3@7649>   MOVEA.l (A2),A2
000253EC <AmiBlitz3.ab3@7650> BRA.w asmfixer__loop
000253F2 <AmiBlitz3.ab3@7653>   CLR.w constmode
000253F8 <AmiBlitz3.ab3@7656>   CLR.b curtemplabel
000253FA <AmiBlitz3.ab3@7657> RTS
000253FC <AmiBlitz3.ab3@7666>   BTST D3,D6
00025400 <AmiBlitz3.ab3@7667>    BEQ.w illeaerr
00025404 <AmiBlitz3.ab3@7668>    BSR.w makemode
00025408 <AmiBlitz3.ab3@7669>   CMP.w #$7,D3
0002540C <AmiBlitz3.ab3@7670>    BCS.w doea__skip
0002540E <AmiBlitz3.ab3@7671>   MOVE.w D3,D2
00025410 <AmiBlitz3.ab3@7672>   SUBQ.w #7,D2
00025414 <AmiBlitz3.ab3@7673>   CMP.w #$5,D2
00025418 <AmiBlitz3.ab3@7674>    BCS.w doea__skip0
0002541A <AmiBlitz3.ab3@7675>   MOVEQ.l #$04,D2
0002541C <AmiBlitz3.ab3@7678>   MOVEQ.l #$07,D3
0002541E <AmiBlitz3.ab3@7681>   MOVE.b D7,D0
00025422 <AmiBlitz3.ab3@7682>   ANDI.w #$F,D0
00025426 <AmiBlitz3.ab3@7683>   CMP.w #$F,D0
0002542A <AmiBlitz3.ab3@7684>    BEQ.w doea__skip2
0002542C <AmiBlitz3.ab3@7685>   LSL.w D0,D3
0002542E <AmiBlitz3.ab3@7686>   OR.w D3,D1
00025430 <AmiBlitz3.ab3@7689>   LSR.w #4,D7
00025434 <AmiBlitz3.ab3@7690>   ANDI.w #$F,D7
00025438 <AmiBlitz3.ab3@7691>   CMP.w #$F,D7
0002543C <AmiBlitz3.ab3@7692>    BEQ.w doea__skip3
0002543E <AmiBlitz3.ab3@7693>   LSL.w D7,D2
00025440 <AmiBlitz3.ab3@7694>   OR.w D2,D1
00025442 <AmiBlitz3.ab3@7697> RTS
00025448 <AmiBlitz3.ab3@7701>   CMP.l #$7F,D3
0002544C <AmiBlitz3.ab3@7702>    BGT.w illdiserr
00025452 <AmiBlitz3.ab3@7703>   CMP.l #$FFFFFF80,D3                                      ;#-128,d3 org source
00025456 <AmiBlitz3.ab3@7704>    BLT.w illdiserr
00025458 <AmiBlitz3.ab3@7705> RTS
0002545E <AmiBlitz3.ab3@7709>   CMP.l #$7fff,D3
00025462 <AmiBlitz3.ab3@7710>    BGT.w illdiserr
00025468 <AmiBlitz3.ab3@7711>   CMP.l #$FFFF8000,D3                                      ;#-32768,d3 org source
0002546C <AmiBlitz3.ab3@7712>    BLT.w illdiserr
0002546E <AmiBlitz3.ab3@7713> RTS
00025470 <AmiBlitz3.ab3@7718>   MOVE.b (a5)+,d0
00025472 <AmiBlitz3.ab3@7719>   CMP.b d1,d0
00025476 <AmiBlitz3.ab3@7720>   BEQ 'll10
00025478 <AmiBlitz3.ab3@7721>   TST.b d0
0002547C <AmiBlitz3.ab3@7722>   BNE 'll20
0002547E <AmiBlitz3.ab3@7725>   SUBQ #1,a5
00025480 <AmiBlitz3.ab3@7726> RTS
00025482 <AmiBlitz3.ab3@7731>   MOVE.b (a5)+,d0
00025486 <AmiBlitz3.ab3@7732>   CMP.b #",",d0
0002548A <AmiBlitz3.ab3@7733>   BEQ 'll10
0002548E <AmiBlitz3.ab3@7734>   CMP.b #";",d0
00025492 <AmiBlitz3.ab3@7735>   BEQ 'll10
00025496 <AmiBlitz3.ab3@7736>  CMP.b #":",d0
0002549A <AmiBlitz3.ab3@7737>   BEQ 'll10
0002549C <AmiBlitz3.ab3@7740>   TST.b d0
000254A0 <AmiBlitz3.ab3@7741>   BNE 'll20
000254A2 <AmiBlitz3.ab3@7744>   SUBQ #1,a5
000254A4 <AmiBlitz3.ab3@7745> RTS
000254A6 <AmiBlitz3.ab3@7749>   ADD.l a2,d1
000254AC <AmiBlitz3.ab3@7750>   LEA tempspace,a1
000254AE <AmiBlitz3.ab3@7751>   MOVE.l d1,a0
000254B0 <AmiBlitz3.ab3@7754>   MOVE.b (a0)+,(a1)+
000254B4 <AmiBlitz3.ab3@7755>   BNE.s 'l10
000254B6 <AmiBlitz3.ab3@7756>   SUBQ.l #1,a0
000254B8 <AmiBlitz3.ab3@7757>   SUBQ.l #1,a1
000254BA <AmiBlitz3.ab3@7760>   MOVE.b (a5)+,(a1)+
000254BE <AmiBlitz3.ab3@7761>   BNE.s 'l20
000254C0 <AmiBlitz3.ab3@7762>   CLR.b (a1)
000254C6 <AmiBlitz3.ab3@7763>   LEA tempspace,a5
000254C8 <AmiBlitz3.ab3@7764> RTS
000254CC <AmiBlitz3.ab3@7768>   MOVEM.l D1-D2/A0,-(A7)
000254CE <AmiBlitz3.ab3@7769>   MOVE.l d0,d2
000254D0 <AmiBlitz3.ab3@7770>   MOVEQ #0,d1
000254D2 <AmiBlitz3.ab3@7771>   MOVE.l a5,a4
000254D4 <AmiBlitz3.ab3@7774>   ADDQ.l #1,d1
000254D6 <AmiBlitz3.ab3@7775>   MOVE.b (a5)+,d0
000254DA <AmiBlitz3.ab3@7776>   CMP.b #",",d0
000254DE <AmiBlitz3.ab3@7777>   BEQ 'll10
000254E2 <AmiBlitz3.ab3@7778>   CMP.b #";",d0
000254E6 <AmiBlitz3.ab3@7779>   BEQ 'll10
000254EA <AmiBlitz3.ab3@7780>   CMP.b #":",d0
000254EE <AmiBlitz3.ab3@7781>   BEQ 'll10
000254F2 <AmiBlitz3.ab3@7782>   CMP.b #"(",d0
000254F6 <AmiBlitz3.ab3@7783>   BEQ 'll10
000254F8 <AmiBlitz3.ab3@7784>   TST.b d0
000254FC <AmiBlitz3.ab3@7785>   BNE 'll20
000254FE <AmiBlitz3.ab3@7788>   SUBQ #1,a5
00025502 <AmiBlitz3.ab3@7789>   CMP.b #"'",(a4)
00025506 <AmiBlitz3.ab3@7790>   BEQ 'llocal
0002550C <AmiBlitz3.ab3@7791>   TST.w inmacro
00025510 <AmiBlitz3.ab3@7792>   BNE 'lmacro
00025512 <AmiBlitz3.ab3@7793>   MOVEQ.l #$14+4,D0
00025514 <AmiBlitz3.ab3@7794>   ADD.l d1,d0
00025516 <AmiBlitz3.ab3@7795>   MOVE.l d1,-(a7)
00025518 <AmiBlitz3.ab3@7796>   MOVEQ.l #$01,D1
0002551E <AmiBlitz3.ab3@7797>   MOVEA.l _execbase,A6
00025524 <AmiBlitz3.ab3@7798>   MOVE.l mempool2,a0
00025528 <AmiBlitz3.ab3@7799>   JSR _AllocPooled(a6)
0002552A <AmiBlitz3.ab3@7801>   MOVE.l (a7)+,d1
0002552C <AmiBlitz3.ab3@7802>   TST.l d0
00025530 <AmiBlitz3.ab3@7803>   BEQ nomemory
00025532 <AmiBlitz3.ab3@7804>   MOVEA.l D0,A0
0002553A <AmiBlitz3.ab3@7806>   MOVE.w linenumat+2,$A(A0)
00025540 <AmiBlitz3.ab3@7808>   MOVE.l templabel,(A0)
00025546 <AmiBlitz3.ab3@7809>   MOVE.l A0,templabel
0002554E <AmiBlitz3.ab3@7810>   MOVE.l destpointer,$4(A0)
00025552 <AmiBlitz3.ab3@7811>   MOVE.l d2,$8(A0)
00025556 <AmiBlitz3.ab3@7812>   LEA $E(A0),A0
0002555A <AmiBlitz3.ab3@7813>   MOVE.b #$14,(A0)+
0002555C <AmiBlitz3.ab3@7814>   CLR.b (a0)+
0002555E <AmiBlitz3.ab3@7816>   MOVE.l a0,d2
00025560 <AmiBlitz3.ab3@7817>   ADDQ.l #4,d2
00025562 <AmiBlitz3.ab3@7818>   MOVE.l d2,(a0)+
00025564 <AmiBlitz3.ab3@7821>   MOVE.b (a4)+,(a0)+
00025566 <AmiBlitz3.ab3@7822>   SUBQ.l #1,d1
0002556A <AmiBlitz3.ab3@7823>   BNE 'lc1
0002556C <AmiBlitz3.ab3@7824>   CLR.b (a0)+
00025572 <AmiBlitz3.ab3@7825>   MOVE.w linenumat,(a0)
00025576 <AmiBlitz3.ab3@7826>   MOVEM.l (A7)+,D1-D2/A0
00025578 <AmiBlitz3.ab3@7827> RTS
0002557A <AmiBlitz3.ab3@7830>   MOVEQ.l #$10+2,D0
0002557C <AmiBlitz3.ab3@7831>   ADD.l d1,d0
00025580 <AmiBlitz3.ab3@7832>   MOVEM.l a4/d3,-(a7)
00025582 <AmiBlitz3.ab3@7833>   MOVE.l d1,d3
00025584 <AmiBlitz3.ab3@7834>   MOVEQ.l #$01,D1
0002558A <AmiBlitz3.ab3@7835>   MOVEA.l _execbase,A6
00025590 <AmiBlitz3.ab3@7836>   MOVE.l mempool2,a0
00025594 <AmiBlitz3.ab3@7837>   JSR _AllocPooled(a6)
00025596 <AmiBlitz3.ab3@7839>   TST.l d0
0002559A <AmiBlitz3.ab3@7840>   BEQ nomemory
0002559C <AmiBlitz3.ab3@7841>   MOVEA.l D0,A0
000255A4 <AmiBlitz3.ab3@7844>   MOVE.w linenumat+2,$C(A0)
000255AA <AmiBlitz3.ab3@7845>   MOVE.l templabel,(A0)
000255B0 <AmiBlitz3.ab3@7846>   MOVE.l A0,templabel
000255B8 <AmiBlitz3.ab3@7847>   MOVE.l destpointer,$4(A0)
000255BC <AmiBlitz3.ab3@7848>   MOVE.l d2,$8(A0)
000255C0 <AmiBlitz3.ab3@7849>   LEA $E(A0),A0
000255C2 <AmiBlitz3.ab3@7850>   MOVE.b d3,(A0)+
000255C8 <AmiBlitz3.ab3@7851>   ADD.b #$10,-1(a0)
000255CC <AmiBlitz3.ab3@7852>   MOVE.b #$1,(a0)+
000255CE <AmiBlitz3.ab3@7853>   SUBQ.w #1,d3
000255D0 <AmiBlitz3.ab3@7856>   MOVE.b (a4)+,(a0)+
000255D2 <AmiBlitz3.ab3@7857>   SUBQ.l #1,d3
000255D6 <AmiBlitz3.ab3@7858>   BNE.s 'lm2
000255D8 <AmiBlitz3.ab3@7859>   CLR.b (a0)+
000255DE <AmiBlitz3.ab3@7860>   MOVE.w linenumat,(a0)
000255E2 <AmiBlitz3.ab3@7861>   MOVEM.l (a7)+,d3/a4
000255E6 <AmiBlitz3.ab3@7862>   MOVEM.l (A7)+,D1-D2/A0
000255E8 <AmiBlitz3.ab3@7863> RTS
000255EE <AmiBlitz3.ab3@7866>   LEA lastgloballabel,a1
000255F0 <AmiBlitz3.ab3@7869>   ADDQ.l #1,d1
000255F2 <AmiBlitz3.ab3@7870>   TST.b (a1)+
000255F6 <AmiBlitz3.ab3@7871>   BNE.s 'll11
000255F8 <AmiBlitz3.ab3@7872>   MOVEQ.l #$10+2,D0
000255FA <AmiBlitz3.ab3@7873>   ADD.l d1,d0
000255FE <AmiBlitz3.ab3@7874>   MOVEM.l a4/d3,-(a7)
00025600 <AmiBlitz3.ab3@7875>   MOVE.l d1,d3
00025602 <AmiBlitz3.ab3@7876>   MOVEQ.l #$01,D1
00025608 <AmiBlitz3.ab3@7877>   MOVEA.l _execbase,A6
0002560E <AmiBlitz3.ab3@7878>   MOVE.l mempool2,a0
00025612 <AmiBlitz3.ab3@7879>   JSR _AllocPooled(a6)
00025614 <AmiBlitz3.ab3@7881>   TST.l d0
00025618 <AmiBlitz3.ab3@7882>   BEQ nomemory
0002561A <AmiBlitz3.ab3@7883>   MOVEA.l D0,A0
00025622 <AmiBlitz3.ab3@7886>   MOVE.w linenumat+2,$C(A0)
00025628 <AmiBlitz3.ab3@7887>   MOVE.l templabel,(A0)
0002562E <AmiBlitz3.ab3@7888>   MOVE.l A0,templabel
00025636 <AmiBlitz3.ab3@7889>   MOVE.l destpointer,$4(A0)
0002563A <AmiBlitz3.ab3@7890>   MOVE.l d2,$8(A0)
0002563E <AmiBlitz3.ab3@7891>   LEA $E(A0),A0
00025640 <AmiBlitz3.ab3@7892>   MOVE.b d3,(A0)+
00025646 <AmiBlitz3.ab3@7893>   ADD.b #$10,-1(a0)
0002564A <AmiBlitz3.ab3@7894>   MOVE.b #$1,(a0)+
0002564C <AmiBlitz3.ab3@7895>   SUBQ.w #1,d3
00025652 <AmiBlitz3.ab3@7896>   LEA lastgloballabel,a1
00025654 <AmiBlitz3.ab3@7899>   SUBQ.l #1,d3
00025656 <AmiBlitz3.ab3@7900>   MOVE.b (a1)+,(a0)+
0002565A <AmiBlitz3.ab3@7901>   BNE.s 'lm3
0002565C <AmiBlitz3.ab3@7902>   SUBQ.l #1,a0
0002565E <AmiBlitz3.ab3@7905>   MOVE.b (a4)+,(a0)+
00025660 <AmiBlitz3.ab3@7906>   SUBQ.l #1,d3
00025664 <AmiBlitz3.ab3@7907>   BNE.s 'lm1
00025666 <AmiBlitz3.ab3@7908>   CLR.b (a0)+
0002566C <AmiBlitz3.ab3@7909>   MOVE.w linenumat,(a0)
00025670 <AmiBlitz3.ab3@7910>   MOVEM.l (a7)+,d3/a4
00025674 <AmiBlitz3.ab3@7911>   MOVEM.l (A7)+,D1-D2/A0
00025676 <AmiBlitz3.ab3@7912> RTS
000256A0 <AmiBlitz3.ab3@7916>   !basic
00025702 <AmiBlitz3.ab3@7917>   error{!TRANS{"No memory available!!!\\nAB3 will terminate due to low memory!"}}
00025714 <AmiBlitz3.ab3@7918>   loop Delay_ 1
0002571A <AmiBlitz3.ab3@7919> Goto loop
0002571E <AmiBlitz3.ab3@7923>   MOVEM.l D0-D2/A0,-(A7)
00025722 <AmiBlitz3.ab3@7924>   MOVE.w $E(A0),-(A7)
00025726 <AmiBlitz3.ab3@7925>    BPL.w insasm__ok
00025728 <AmiBlitz3.ab3@7926>   CLR.w (A7)
0002572A <AmiBlitz3.ab3@7929>   MOVE.l A1,-(A7)
0002572C <AmiBlitz3.ab3@7930>   MOVEQ.l #$10+2,D0
00025732 <AmiBlitz3.ab3@7931>   ADD.w asmlen,D0
00025734 <AmiBlitz3.ab3@7932>   MOVE.w D0,D2
00025736 <AmiBlitz3.ab3@7933>   MOVEQ.l #$01,D1
0002573C <AmiBlitz3.ab3@7934>   MOVEA.l _execbase,A6
00025742 <AmiBlitz3.ab3@7935>   MOVE.l mempool2,a0
00025746 <AmiBlitz3.ab3@7936>   JSR _AllocPooled(a6)
00025748 <AmiBlitz3.ab3@7938>   MOVEA.l D0,A0
00025750 <AmiBlitz3.ab3@7941>   MOVE.w linenumat+2,$C(A0)
00025756 <AmiBlitz3.ab3@7942>   MOVE.l templabel,(A0)
0002575C <AmiBlitz3.ab3@7943>   MOVE.l A0,templabel
00025760 <AmiBlitz3.ab3@7944>   MOVE.l (A7),$4(A0)
00025764 <AmiBlitz3.ab3@7945>   MOVE.w d3,$8(A0)
0002576A <AmiBlitz3.ab3@7946>   MOVE.w $4(A7),$A(A0)
0002576E <AmiBlitz3.ab3@7947>   LEA $E(A0),A0
00025770 <AmiBlitz3.ab3@7948>   MOVE.b D2,(A0)+                                           ;length
00025776 <AmiBlitz3.ab3@7949>   MOVEA.l asmbuff,A1
00025778 <AmiBlitz3.ab3@7950>   ADDQ.w #1,A1
0002577A <AmiBlitz3.ab3@7951>   MOVE.b (A1)+,(A0)+                                        ;type - 0 = indirect,else direct
0002577E <AmiBlitz3.ab3@7952>    BNE.w insasm__loop
00025780 <AmiBlitz3.ab3@7953>   MOVE.l (A1)+,(A0)+
00025786 <AmiBlitz3.ab3@7954>   MOVE.w linenumat,(a0)
0002578A <AmiBlitz3.ab3@7955> BRA.w insasm__loopdone
0002578C <AmiBlitz3.ab3@7958>    MOVE.b (A1)+,(A0)+
00025790 <AmiBlitz3.ab3@7959>    BNE.w insasm__loop
00025796 <AmiBlitz3.ab3@7960>    MOVE.w linenumat,(a0)
00025798 <AmiBlitz3.ab3@7963>   MOVEA.l (A7)+,A1
0002579A <AmiBlitz3.ab3@7964>   ADDQ.w #2,A7
0002579E <AmiBlitz3.ab3@7965>   MOVEM.l (A7)+,D0-D2/A0
000257A0 <AmiBlitz3.ab3@7966> RTS
000257A4 <AmiBlitz3.ab3@7970>   CMP.w #$5,D3
000257A8 <AmiBlitz3.ab3@7971>    BCS.w makemode__done
000257AC <AmiBlitz3.ab3@7972>   CMP.w #$B,D3
000257B0 <AmiBlitz3.ab3@7973>    BHI.w makemode__done2
000257B4 <AmiBlitz3.ab3@7974>    BEQ.w makemode__imm
000257B8 <AmiBlitz3.ab3@7975>    BSR.w insasm
000257BC <AmiBlitz3.ab3@7976>   CMP.w #$5,D3
000257C0 <AmiBlitz3.ab3@7977>    BEQ.w makemode__word
000257C4 <AmiBlitz3.ab3@7978>   CMP.w #$6,D3
000257C8 <AmiBlitz3.ab3@7979>    BEQ.w makemode__dxi
000257CC <AmiBlitz3.ab3@7980>   CMP.w #$7,D3
000257D0 <AmiBlitz3.ab3@7981>    BEQ.w makemode__word
000257D4 <AmiBlitz3.ab3@7982>   CMP.w #$8,D3
000257D8 <AmiBlitz3.ab3@7983>    BEQ.w makemode__long
000257DC <AmiBlitz3.ab3@7984>   CMP.w #$9,D3
000257E0 <AmiBlitz3.ab3@7985>    BEQ.w makemode__word
000257E6 <AmiBlitz3.ab3@7989>   CMPA.l destbufferend,A1
000257EA <AmiBlitz3.ab3@7990>    BCS.w makemode__ok7
000257EC <AmiBlitz3.ab3@7991>   ADDQ.w #2,A1
000257EE <AmiBlitz3.ab3@7992> RTS
000257F0 <AmiBlitz3.ab3@7995>   MOVE.w D4,(A1)+
000257F2 <AmiBlitz3.ab3@7996> RTS
000257FA <AmiBlitz3.ab3@7999>   CMPI.w #$8,asmsize
000257FE <AmiBlitz3.ab3@8000>    BCC.w makemode__immlong
00025800 <AmiBlitz3.ab3@8001>   MOVEQ.l #$10,D3
00025804 <AmiBlitz3.ab3@8002>    BSR.w insasm
00025806 <AmiBlitz3.ab3@8003>   MOVEQ.l #$0B,D3
0002580A <AmiBlitz3.ab3@8004> BRA.w makemode__word
0002580E <AmiBlitz3.ab3@8007>   BSR.w insasm
00025810 <AmiBlitz3.ab3@8010>   ADDQ.w #2,A1
00025812 <AmiBlitz3.ab3@8013>   ADDQ.w #2,A1
00025814 <AmiBlitz3.ab3@8014> RTS
00025818 <AmiBlitz3.ab3@8017>   CMP.w #$F,D3
0002581C <AmiBlitz3.ab3@8018>    BNE.w makemode__done
00025822 <AmiBlitz3.ab3@8019>   CMPA.l destbufferend,A1
00025826 <AmiBlitz3.ab3@8020>    BCS.w makemode__ok3
00025828 <AmiBlitz3.ab3@8021>   ADDQ.w #2,A1
0002582A <AmiBlitz3.ab3@8022>   ADDQ.w #4,A7
0002582C <AmiBlitz3.ab3@8023> RTS
0002582E <AmiBlitz3.ab3@8026>   MOVE.w D2,(A1)+
00025830 <AmiBlitz3.ab3@8027>   ADDQ.w #4,A7
00025832 <AmiBlitz3.ab3@8030> RTS
00025836 <AmiBlitz3.ab3@8034>   BSR.w storeloc
00025840 <AmiBlitz3.ab3@8035>   MOVE.l linenumat,oldline
00025842 <AmiBlitz3.ab3@8036>   MOVEQ.l #$00,D1
00025846 <AmiBlitz3.ab3@8037>    BSR.w get1bytemain
0002584A <AmiBlitz3.ab3@8038>    BEQ.w JL_0_676E
0002584C <AmiBlitz3.ab3@8039>   MOVEQ.l #$00,D3
00025850 <AmiBlitz3.ab3@8040> BRA.w JL_0_6726
00025854 <AmiBlitz3.ab3@8043>    BSR.w get1bytemain
00025858 <AmiBlitz3.ab3@8044>    BNE.w JL_0_671C
0002585A <AmiBlitz3.ab3@8047>   TST.w D3
0002585E <AmiBlitz3.ab3@8048>    BNE.w brackets_                                         ;syntax error brackets
00025862 <AmiBlitz3.ab3@8049> BRA.w JL_0_676C
00025868 <AmiBlitz3.ab3@8052>    MOVE.w instringon,D4
0002586C <AmiBlitz3.ab3@8054>      BEQ JL_0_6726
0002586E <AmiBlitz3.ab3@8057>     MOVEQ #0,d0
00025870 <AmiBlitz3.ab3@8058>      MOVE.b (a5)+,d0                                       ;fix "ue"
00025876 <AmiBlitz3.ab3@8059>      MOVE.w d0,lastchar
0002587A <AmiBlitz3.ab3@8060>      BEQ ready
0002587E <AmiBlitz3.ab3@8061>      CMP.b #$22,d0
00025882 <AmiBlitz3.ab3@8062>      BNE 'l1
00025888 <AmiBlitz3.ab3@8063>      NOT.w instringon
0002588C <AmiBlitz3.ab3@8064> BRA JL_0_670A
00025890 <AmiBlitz3.ab3@8067>            CMP.b #"@",d0                                   ;expand line @@ 1. for parameter
00025894 <AmiBlitz3.ab3@8068>            BNE 'l10
00025898 <AmiBlitz3.ab3@8069>            CMP.b #"@",(a5)
0002589C <AmiBlitz3.ab3@8070>            BNE 'l10
000258A2 <AmiBlitz3.ab3@8073>            TST.w ininclude
000258A6 <AmiBlitz3.ab3@8074>            BNE 'inc
000258AC <AmiBlitz3.ab3@8075>            MOVE.l sourceline3,a5
000258B2 <AmiBlitz3.ab3@8076>            CMP.l #0,a5
000258B6 <AmiBlitz3.ab3@8077>            BNE 'l11t
000258BC <AmiBlitz3.ab3@8078>            MOVEA.l sourceline,A5
000258BE <AmiBlitz3.ab3@8081>            MOVEA.l (A5),A5
000258C4 <AmiBlitz3.ab3@8082>            CMP.l #0,a5
000258C8 <AmiBlitz3.ab3@8083>            BEQ JL_0_676C
000258CE <AmiBlitz3.ab3@8084>            MOVE.l a5,sourceline3
000258D2 <AmiBlitz3.ab3@8085>            LEA $9(A5),A5
000258D6 <AmiBlitz3.ab3@8086> BRA 'l11
000258D8 <AmiBlitz3.ab3@8089>            ADDQ.l #1,a5
000258DA <AmiBlitz3.ab3@8090>            TST.b (a5)
000258DE <AmiBlitz3.ab3@8091>            BNE 'inc
000258E0 <AmiBlitz3.ab3@8095>            ADDQ.l #1,a5
000258E2 <AmiBlitz3.ab3@8096>            TST.b (a5)
000258E6 <AmiBlitz3.ab3@8097>            BEQ illeolerr
000258E8 <AmiBlitz3.ab3@8098>            MOVE.l a5,-(a7)
000258EC <AmiBlitz3.ab3@8101>       CMP.b #" ",(a5)+
000258F0 <AmiBlitz3.ab3@8102>       BEQ 'l110
000258F6 <AmiBlitz3.ab3@8103>        CMP.b #";",-1(a5)
000258F8 <AmiBlitz3.ab3@8104>        MOVE.l (a7)+,a5
000258FC <AmiBlitz3.ab3@8105>        BEQ 'l111
00025900 <AmiBlitz3.ab3@8106> BRA JL_0_670A
00025904 <AmiBlitz3.ab3@8109>    CMP.w #$29,D0
00025908 <AmiBlitz3.ab3@8110>    BNE.w JL_0_673A
0002590A <AmiBlitz3.ab3@8111>   TST.w D3
0002590E <AmiBlitz3.ab3@8112>    BEQ.w JL_0_676C
00025910 <AmiBlitz3.ab3@8115>   SUBQ.w #1,D3
00025914 <AmiBlitz3.ab3@8116> BRA.w JL_0_670A
00025918 <AmiBlitz3.ab3@8119>    CMP.w #$7D,D0
0002591C <AmiBlitz3.ab3@8120>    BEQ.w JL_0_6734
00025920 <AmiBlitz3.ab3@8121>   CMP.w #$28,D0
00025924 <AmiBlitz3.ab3@8122>    BNE.w JL_0_6750
00025926 <AmiBlitz3.ab3@8125>    ADDQ.w #1,D3
0002592A <AmiBlitz3.ab3@8126> BRA.w JL_0_670A
0002592E <AmiBlitz3.ab3@8129>   CMP.w #$7B,D0
00025932 <AmiBlitz3.ab3@8130>    BEQ.w JL_0_674A
00025936 <AmiBlitz3.ab3@8131>   CMP.w #$2C,D0
0002593A <AmiBlitz3.ab3@8132>    BNE.w JL_0_670A
0002593C <AmiBlitz3.ab3@8133>   TST.w D3
00025940 <AmiBlitz3.ab3@8134>    BNE.w JL_0_670A
00025942 <AmiBlitz3.ab3@8135>   ADDQ.w #1,D1
00025946 <AmiBlitz3.ab3@8136> BRA.w JL_0_670A
00025948 <AmiBlitz3.ab3@8139>   ADDQ.w #1,D1
0002594E <AmiBlitz3.ab3@8142>   CLR.l sourceline3
00025958 <AmiBlitz3.ab3@8143>   MOVE.l oldline,linenumat
0002595C <AmiBlitz3.ab3@8144> BRA.w resloc
00025962 <AmiBlitz3.ab3@8148>    CLR.w numreps
00025964 <AmiBlitz3.ab3@8149>   MOVE.w D1,D0
00025968 <AmiBlitz3.ab3@8150>   ANDI.w #$FF00,D0
0002596C <AmiBlitz3.ab3@8151>    BEQ.w fetchlibps__noreps
0002596E <AmiBlitz3.ab3@8152>   LSR.w #8,D0
00025970 <AmiBlitz3.ab3@8153>   LSR.w #4,D0
00025974 <AmiBlitz3.ab3@8154>    BEQ.w fetchlibps__skip
00025976 <AmiBlitz3.ab3@8155>   SUB.b D0,D1
00025980 <AmiBlitz3.ab3@8156>    MOVE.w regnum,regnumfunc
00025986 <AmiBlitz3.ab3@8157>    MOVE.b funcparloop,-(a7)
0002598E <AmiBlitz3.ab3@8158>    MOVE.b #0,funcparloop
00025994 <AmiBlitz3.ab3@8159>    MOVE.l leftsidetype,-(a7)
0002599A <AmiBlitz3.ab3@8160>    MOVE.l rightsidetype,-(a7)
000259A0 <AmiBlitz3.ab3@8161>    CLR.l leftsidetype
000259A6 <AmiBlitz3.ab3@8162>    CLR.l rightsidetype
000259AC <AmiBlitz3.ab3@8163>    MOVE.b blitzparloop,-(a7)
000259B4 <AmiBlitz3.ab3@8164>    MOVE.b #1,blitzparloop
000259B8 <AmiBlitz3.ab3@8165>    BSR.w fetchpees2
000259BE <AmiBlitz3.ab3@8166>    MOVE.b (a7)+,blitzparloop
000259C4 <AmiBlitz3.ab3@8167>    MOVE.l (a7)+,rightsidetype
000259CA <AmiBlitz3.ab3@8168>    MOVE.l (a7)+,leftsidetype
000259D0 <AmiBlitz3.ab3@8169>    MOVE.b (a7)+,funcparloop
000259D4 <AmiBlitz3.ab3@8170>   CMP.w #$2C,D0
000259D8 <AmiBlitz3.ab3@8171>    BNE.w syntaxerr
000259DA <AmiBlitz3.ab3@8174>   MOVE.w D1,D2
000259DC <AmiBlitz3.ab3@8175>   LSR.w #8,D2
000259E0 <AmiBlitz3.ab3@8176>   ANDI.w #$7,D2
000259E2 <AmiBlitz3.ab3@8179>    CMP.b D2,D1
000259E6 <AmiBlitz3.ab3@8180>    BCS.w fetchlibps__repsdone
000259E8 <AmiBlitz3.ab3@8181>   SUB.b D2,D1
000259EC <AmiBlitz3.ab3@8182>   MOVEM.l D2/A2,-(A7)
000259EE <AmiBlitz3.ab3@8183>   MOVE.w D2,D0
000259F4 <AmiBlitz3.ab3@8184>   MOVE.b funcparloop,-(a7)
000259FC <AmiBlitz3.ab3@8185>   MOVE.b #0,funcparloop
00025A02 <AmiBlitz3.ab3@8186>   MOVE.l leftsidetype,-(a7)
00025A08 <AmiBlitz3.ab3@8187>   MOVE.l rightsidetype,-(a7)
00025A0E <AmiBlitz3.ab3@8188>   CLR.l leftsidetype
00025A14 <AmiBlitz3.ab3@8189>   CLR.l rightsidetype
00025A1A <AmiBlitz3.ab3@8190>   MOVE.b blitzparloop,-(a7)
00025A22 <AmiBlitz3.ab3@8191>   MOVE.b #1,blitzparloop
00025A26 <AmiBlitz3.ab3@8192>   BSR.w fetchpees4
00025A2C <AmiBlitz3.ab3@8193>   MOVE.b (a7)+,blitzparloop
00025A32 <AmiBlitz3.ab3@8194>   MOVE.l (a7)+,rightsidetype
00025A38 <AmiBlitz3.ab3@8195>   MOVE.l (a7)+,leftsidetype
00025A3E <AmiBlitz3.ab3@8196>   MOVE.b (a7)+,funcparloop
00025A42 <AmiBlitz3.ab3@8197>   MOVEM.l (A7)+,D2/A2
00025A48 <AmiBlitz3.ab3@8198>   ADDQ.w #1,numreps
00025A4C <AmiBlitz3.ab3@8199> BRA.w fetchlibps__rloop
00025A52 <AmiBlitz3.ab3@8202>    MOVE.w numreps,D3
00025A56 <AmiBlitz3.ab3@8203>    BEQ.w syntaxerr
00025A58 <AmiBlitz3.ab3@8204>   ADDA.w D2,A2
00025A5C <AmiBlitz3.ab3@8205>   ANDI.w #$FF,D1
00025A60 <AmiBlitz3.ab3@8206>    BEQ.w fetchlibps__done
00025A64 <AmiBlitz3.ab3@8207>   CMP.w #$2C,D0
00025A68 <AmiBlitz3.ab3@8208>    BNE.w syntaxerr
00025A6A <AmiBlitz3.ab3@8211>    MOVE.w D1,D0
00025A6E <AmiBlitz3.ab3@8212>    BNE.w fetchpees2b
00025A70 <AmiBlitz3.ab3@8215> RTS
00025A76 <AmiBlitz3.ab3@8218>   MOVE.b funcparloop,-(a7)
00025A7C <AmiBlitz3.ab3@8219>   MOVE.l leftsidetype,-(a7)
00025A82 <AmiBlitz3.ab3@8220>   MOVE.l rightsidetype,-(a7)
00025A88 <AmiBlitz3.ab3@8221>   CLR.l leftsidetype
00025A8E <AmiBlitz3.ab3@8222>   CLR.l rightsidetype
00025A96 <AmiBlitz3.ab3@8223>   MOVE.b #0,funcparloop
00025A9C <AmiBlitz3.ab3@8224>   MOVE.b blitzparloop,-(a7)
00025AA4 <AmiBlitz3.ab3@8225>   MOVE.b #1,blitzparloop
00025AA8 <AmiBlitz3.ab3@8226>   BSR.w fetchpees2
00025AAE <AmiBlitz3.ab3@8227>   MOVE.b (a7)+,blitzparloop
00025AB4 <AmiBlitz3.ab3@8228>   MOVE.l (a7)+,rightsidetype
00025ABA <AmiBlitz3.ab3@8229>   MOVE.l (a7)+,leftsidetype
00025AC0 <AmiBlitz3.ab3@8230>   MOVE.b (a7)+,funcparloop
00025AC2 <AmiBlitz3.ab3@8231> RTS
00025AC6 <AmiBlitz3.ab3@8235> ptype:    Dc.b $3F,$3C,$00,$00                             ;MOVE.W  #$0000,-(A7)
00025AC8 <AmiBlitz3.ab3@8238> partostack:  Ds.w 1                                        ;pmode org source
00025ACA <AmiBlitz3.ab3@8242>   MOVEQ.l #$01,D2
00025ACE <AmiBlitz3.ab3@8243> BRA.w fetchpees3
00025AD0 <AmiBlitz3.ab3@8246>   MOVEQ.l #$00,D2
00025AD4 <AmiBlitz3.ab3@8249>   ANDI.w #$F,D0
00025ADA <AmiBlitz3.ab3@8257>   CLR.w parnum
00025ADC <AmiBlitz3.ab3@8258>   MOVE.w D1,-(A7)
00025AE0 <AmiBlitz3.ab3@8259>   MOVE.w partostack(PC),-(A7)                              ;in case of recursion
00025AE6 <AmiBlitz3.ab3@8260>   MOVE.w D2,partostack
00025AE8 <AmiBlitz3.ab3@8261>   MOVE.w D0,-(A7)
00025AEC <AmiBlitz3.ab3@8262>   CMP.w #"@@",(a5)                                         ;was l15
00025AF0 <AmiBlitz3.ab3@8263>   BNE fetchpees__loop
00025AF6 <AmiBlitz3.ab3@8264>   TST.w ininclude                                          ;merge macrolines
00025AFA <AmiBlitz3.ab3@8265>   BNE errorjoin
00025B00 <AmiBlitz3.ab3@8266>        MOVEA.l sourceline,A5
00025B02 <AmiBlitz3.ab3@8269>            MOVEA.l (A5),A5
00025B08 <AmiBlitz3.ab3@8270>            MOVE.l a5,sourceline
00025B0C <AmiBlitz3.ab3@8271>            LEA $9(A5),A5
00025B12 <AmiBlitz3.ab3@8272>            ADDQ.l #1,linenumat
00025B14 <AmiBlitz3.ab3@8276>   MOVE.b (A2)+,D2                                          ;parameterloop   d2=vartype
00025B18 <AmiBlitz3.ab3@8277>    BNE.w fetchpees__skip0
00025B1E <AmiBlitz3.ab3@8278>   MOVE.w userp,D2                                          ;user selected type
00025B20 <AmiBlitz3.ab3@8280>    MOVE.l A2,-(A7)
00025B26 <AmiBlitz3.ab3@8281>    ADDQ.w #1,parnum
00025B2C <AmiBlitz3.ab3@8282>    TST.b funccall
00025B30 <AmiBlitz3.ab3@8283>    BEQ fetchpees__skip0_l1
00025B38 <AmiBlitz3.ab3@8284>    CMP.w #6,parnum
00025B3C <AmiBlitz3.ab3@8285>    BLE fetchpees__skip0_l1
00025B40 <AmiBlitz3.ab3@8286>    CMP.w #7,d2
00025B46 <AmiBlitz3.ab3@8292>    TST.b fpu
00025B4A <AmiBlitz3.ab3@8293>    BEQ fetchpees__skip0_old
00025B50 <AmiBlitz3.ab3@8294>    TST.w regnumfunc
00025B54 <AmiBlitz3.ab3@8295>    BEQ fetchpees__skip0_old
00025B5A <AmiBlitz3.ab3@8296>    CMP.w #$48e7,-4(a4)
00025B5E <AmiBlitz3.ab3@8297>    BNE fetchpees__skip0_old
00025B60 <AmiBlitz3.ab3@8298>    MOVEQ #0,d1
00025B66 <AmiBlitz3.ab3@8299>    MOVE.w regnum,d1
00025B6C <AmiBlitz3.ab3@8300>    CMP regnumfunc,d1                                       ;fpu reg function save
00025B70 <AmiBlitz3.ab3@8301>    BGE fetchpees__skip0_old
00025B72 <AmiBlitz3.ab3@8302>    ASL.w #7,d1
00025B74 <AmiBlitz3.ab3@8303>    MOVE.l d0,-(a7)
00025B7A <AmiBlitz3.ab3@8304>    MOVE.w regnumfunc,d0
00025B80 <AmiBlitz3.ab3@8305>    CLR.w regmask
00025B86 <AmiBlitz3.ab3@8307>    BSET d0,regmask
00025B88 <AmiBlitz3.ab3@8308>    SUBQ #1,d0
00025B8C <AmiBlitz3.ab3@8309>    BNE fetchpees__skip0_loop
00025B8E <AmiBlitz3.ab3@8310>     MOVEQ #0,d0
00025B94 <AmiBlitz3.ab3@8313>       BTST d0,regmask
00025B98 <AmiBlitz3.ab3@8314>       BEQ fetchpees__skip0_noa7
00025B9A <AmiBlitz3.ab3@8315>       MOVEQ #0,d1
00025B9C <AmiBlitz3.ab3@8316>       MOVE.w d0,d1
00025B9E <AmiBlitz3.ab3@8317>       SUBQ.w #1,d1
00025BA0 <AmiBlitz3.ab3@8318>       ASL #7,d1
00025BA6 <AmiBlitz3.ab3@8319>       OR.l #$f2277400,d1                                   ;fmove.d
00025BAA <AmiBlitz3.ab3@8321>       BSR writelong
00025BB0 <AmiBlitz3.ab3@8323>       ADDQ.l #2,stacktrack
00025BB6 <AmiBlitz3.ab3@8324>       MOVE.l stacktrack,d1
00025BBC <AmiBlitz3.ab3@8325>       CMP.l #180,d1
00025BC0 <AmiBlitz3.ab3@8326>       BGT conmemerr                                        ;formel too complex
00025BC2 <AmiBlitz3.ab3@8327>       MOVE.l a0,-(a7)
00025BC8 <AmiBlitz3.ab3@8328>       LEA fpustackbase,a0
00025BD0 <AmiBlitz3.ab3@8329>       MOVE.w regmask,0(a0,d1)
00025BD2 <AmiBlitz3.ab3@8330>       MOVE.l (a7)+,a0
00025BD4 <AmiBlitz3.ab3@8333>       ADDQ.w #1,d0
00025BDA <AmiBlitz3.ab3@8334>       CMP.w regnumfunc,d0
00025BDE <AmiBlitz3.ab3@8335>       BLE fetchpees__skip0_loop2
00025BE0 <AmiBlitz3.ab3@8338>       MOVE.l (a7)+,d0
00025BE6 <AmiBlitz3.ab3@8341>      MOVE.l currentfunccall,-(a7)
00025BEC <AmiBlitz3.ab3@8342>      MOVE.w parnum,-(a7)
00025BF2 <AmiBlitz3.ab3@8343>      TST.l rightsidetype
00025BF6 <AmiBlitz3.ab3@8344>      BSR.w JL_0_6836
00025BFC <AmiBlitz3.ab3@8345>      MOVE.w (a7)+,parnum
00025C02 <AmiBlitz3.ab3@8347>    MOVE.l (a7)+,currentfunccall
00025C08 <AmiBlitz3.ab3@8349>    TST.b typecheck                            ;typecheck for function call
00025C0C <AmiBlitz3.ab3@8350>    BEQ 'notypecheck
00025C12 <AmiBlitz3.ab3@8351>    TST.b notypecheck
00025C16 <AmiBlitz3.ab3@8352>    BNE 'notypecheck
00025C1C <AmiBlitz3.ab3@8353>    TST.b blitzparloop
00025C20 <AmiBlitz3.ab3@8354>    BNE 'isblitzlibcall                                    ;no typecheck for blitzlibs currently
00025C2A <AmiBlitz3.ab3@8355>    CMP.l #0,currentfunccall
00025C2E <AmiBlitz3.ab3@8356>    BEQ 'isblitzlibcall
00025C32 <AmiBlitz3.ab3@8357>    MOVEM.l a0/a1,-(a7)
00025C38 <AmiBlitz3.ab3@8358>    MOVE.l currentfunccall,a0
00025C3E <AmiBlitz3.ab3@8359>    MOVE.w parnum,d1
00025C44 <AmiBlitz3.ab3@8360>    TST.b isconstantvalue
00025C48 <AmiBlitz3.ab3@8361>    BEQ 'noconstant
00025C52 <AmiBlitz3.ab3@8362>    CMP.l #0,lastconstantvalue
00025C56 <AmiBlitz3.ab3@8363>    BEQ 'isnull
00025C5A <AmiBlitz3.ab3@8365>    MOVE.l funcstruct_parametertype-4(a0,d1*4),a0
00025C60 <AmiBlitz3.ab3@8366>    CMP.l #0,a0
00025C64 <AmiBlitz3.ab3@8367>    BEQ 'notype
00025C6C <AmiBlitz3.ab3@8368>    CMP.l #$100,4(a0)
00025C70 <AmiBlitz3.ab3@8369>    BLE 'notype
00025C76 <AmiBlitz3.ab3@8370>    MOVE.l lasttoken,d1
00025C7A <AmiBlitz3.ab3@8371>    CMP.w #$b581,d1                   ; ok, when token for null
00025C7E <AmiBlitz3.ab3@8372>    BEQ 'isnull
00025C84 <AmiBlitz3.ab3@8373>    TST.l typetocast
00025C88 <AmiBlitz3.ab3@8374>    BEQ 'nocast
00025C8E <AmiBlitz3.ab3@8375>    MOVE.l typetocast,a1
00025C92 <AmiBlitz3.ab3@8376>    BRA 'typecheck
00025C98 <AmiBlitz3.ab3@8378>    MOVE.l rightsidetype,a1
00025C9E <AmiBlitz3.ab3@8379>    CMP.l #0,a1
00025CA2 <AmiBlitz3.ab3@8380>    BEQ 'notype
00025CAA <AmiBlitz3.ab3@8381> 'typecheck   CMP.l #$100,4(a1)
00025CAC <AmiBlitz3.ab3@8383>    CMP.l a0,a1
00025CB0 <AmiBlitz3.ab3@8384>    BEQ 'ok
00025CB8 <AmiBlitz3.ab3@8386>    CMP.l #$100,4(a1)                 ; is a type here
00025CBC <AmiBlitz3.ab3@8387>    BLE 'error
00025CC0 <AmiBlitz3.ab3@8388>    MOVE.l 4(a1),a1                   ; load the address of type.
00025CC4 <AmiBlitz3.ab3@8389>    CMP.l $a(a1),a0                   ; check if the bigger type contain in first place same type as the function need
00025CC8 <AmiBlitz3.ab3@8390>    BEQ 'ok
00025CCE <AmiBlitz3.ab3@8391> 'error: JMP   error_convert_types    ; for syntax 4
00025CD4 <AmiBlitz3.ab3@8395>    CLR.l typetocast
00025CD8 <AmiBlitz3.ab3@8396>    MOVEM.l (a7)+,a0/a1
00025CDE <AmiBlitz3.ab3@8400>    CLR.l lastfunction
00025CE4 <AmiBlitz3.ab3@8401>    TST.b fpu
00025CE8 <AmiBlitz3.ab3@8402>    BEQ fetchpees__skip0_noprint
00025CEA <AmiBlitz3.ab3@8403>   MOVE.l (a7),a2
00025CEC <AmiBlitz3.ab3@8404>   ADDQ.l #1,a2
00025CF0 <AmiBlitz3.ab3@8405>    CMP.b #5,d2
00025CF4 <AmiBlitz3.ab3@8406>   BNE fetchpees__skip0_noprint
00025CFA <AmiBlitz3.ab3@8407>   CMP.b #$5d,24(a2)
00025CFE <AmiBlitz3.ab3@8408>   BNE fetchpees__skip0_noprint
00025D04 <AmiBlitz3.ab3@8409>   CMP.b #$81,25(a2)
00025D08 <AmiBlitz3.ab3@8410>   BLT fetchpees__skip0_noprint
00025D0E <AmiBlitz3.ab3@8411>   CMP.b #$86,25(a2)
00025D12 <AmiBlitz3.ab3@8412>   BEQ fetchpees__skip0_ok
00025D18 <AmiBlitz3.ab3@8413>   CMP.b #$87,25(a2)
00025D1C <AmiBlitz3.ab3@8414>   BEQ fetchpees__skip0_ok
00025D22 <AmiBlitz3.ab3@8415>   CMP.b #$88,25(a2)
00025D26 <AmiBlitz3.ab3@8416>   BEQ fetchpees__skip0_ok
00025D2C <AmiBlitz3.ab3@8417>   CMP.b #$83,25(a2)
00025D30 <AmiBlitz3.ab3@8418>   BGT fetchpees__skip0_noprint
00025D36 <AmiBlitz3.ab3@8421>   MOVE.l destpointer,a4
00025D3C <AmiBlitz3.ab3@8422>   CMP.w #$2f00,-2(a4)
00025D40 <AmiBlitz3.ab3@8423>   BNE fetchpees__skip0_noprint
00025D46 <AmiBlitz3.ab3@8424>   SUBQ.l #2,destpointer
00025D4C <AmiBlitz3.ab3@8426>   MOVE.l #$f2277400,d1
00025D50 <AmiBlitz3.ab3@8427>   BSR writelong                                            ;fmove.d fp0,-(a7)
00025D56 <AmiBlitz3.ab3@8428>   ADDQ #4,a2offset
00025D5C <AmiBlitz3.ab3@8446>   CLR.b optistring
00025D5E <AmiBlitz3.ab3@8447>   MOVEA.l (A7)+,A2
00025D62 <AmiBlitz3.ab3@8448>    CMP.w #"@",d0
00025D66 <AmiBlitz3.ab3@8449>   BNE fetchpees__skip0_l10
00025D6A <AmiBlitz3.ab3@8450>    CMP.b #"@",(a5)
00025D6E <AmiBlitz3.ab3@8451>   BNE fetchpees__skip0_l10
00025D74 <AmiBlitz3.ab3@8452>   TST.w ininclude
00025D78 <AmiBlitz3.ab3@8453>   BNE errorjoin
00025D7E <AmiBlitz3.ab3@8454>   MOVEA.l sourceline,A5
00025D80 <AmiBlitz3.ab3@8455>            MOVEA.l (A5),A5
00025D86 <AmiBlitz3.ab3@8456>            MOVE.l a5,sourceline
00025D8C <AmiBlitz3.ab3@8457>            ADDQ.l #1,linenumat
00025D90 <AmiBlitz3.ab3@8458>            LEA $9(A5),A5
00025D92 <AmiBlitz3.ab3@8459>            MOVEQ #0,d0
00025D96 <AmiBlitz3.ab3@8460>            BSR get1bytemain
00025D9A <AmiBlitz3.ab3@8463>    CMP.b #32,(a5)+ ;for space after a ,
00025D9E <AmiBlitz3.ab3@8464>    BEQ fetchpees__skip0_l10:
00025DA0 <AmiBlitz3.ab3@8465>    SUBQ.l #1,a5
00025DA4 <AmiBlitz3.ab3@8467>    CMP.w #"@@",(a5)                                        ;if merge
00025DA8 <AmiBlitz3.ab3@8468>    BNE fetchpees__skip0_l15
00025DAC <AmiBlitz3.ab3@8469>    MOVEM.l d0-d7/a0-a4/a6,-(a7)
00025DB2 <AmiBlitz3.ab3@8470>    JSR mergeline
00025DB6 <AmiBlitz3.ab3@8471>    MOVEM.l (a7)+,d0-d7/a0-a4/a6
00025DB8 <AmiBlitz3.ab3@8491>       SUBQ.w #1,(A7)
00025DBC <AmiBlitz3.ab3@8492>    BEQ.w fetchpees__done
00025DC0 <AmiBlitz3.ab3@8494>     CMP.w #$2C,D0
00025DC4 <AmiBlitz3.ab3@8496>    BNE overloadfunc
00025DC8 <AmiBlitz3.ab3@8497> BRA.w fetchpees__loop
00025DCA <AmiBlitz3.ab3@8500>   ADDQ.w #2,A7
00025DD0 <AmiBlitz3.ab3@8501>   MOVE.w (A7)+,partostack
00025DD2 <AmiBlitz3.ab3@8502>   MOVE.w (A7)+,D1
00025DD8 <AmiBlitz3.ab3@8503>   CLR.b isconstantvalue
00025DE2 <AmiBlitz3.ab3@8504>   MOVE.l currentfunccall,lastfunction
00025DE8 <AmiBlitz3.ab3@8505>   CLR.b funccall
00025DEE <AmiBlitz3.ab3@8506>   CLR.l currentfunccall
00025DF0 <AmiBlitz3.ab3@8507> RTS
00025DF6 <AmiBlitz3.ab3@8511>   CLR.b funccall
00025DFC <AmiBlitz3.ab3@8512>   MOVE.w regnum,d1
00025E02 <AmiBlitz3.ab3@8513>   MOVE.l currentfunccall,a4
00025E06 <AmiBlitz3.ab3@8514>   CMP.b $20(a4),d1                                         ;increase if more pars
00025E0A <AmiBlitz3.ab3@8515>   BLT notparerr
00025E0C <AmiBlitz3.ab3@8518>   MOVE.b (a2)+,d2
00025E14 <AmiBlitz3.ab3@8519>   ADD.w #1,parnum
00025E1A <AmiBlitz3.ab3@8520>   TST.b fpu
00025E1E <AmiBlitz3.ab3@8521>   BEQ 'nofpu
00025E22 <AmiBlitz3.ab3@8522>   CMP.b #5,d2
00025E26 <AmiBlitz3.ab3@8523>   BNE 'nofpu
00025E28 <AmiBlitz3.ab3@8524>   MOVEQ #0,d1
00025E2E <AmiBlitz3.ab3@8525>   MOVE.w regnum,d1
00025E36 <AmiBlitz3.ab3@8526>   CMP.w #6,regnum
00025E3A <AmiBlitz3.ab3@8527>   BLT 'nostack2
00025E3E <AmiBlitz3.ab3@8532>   MOVE.w #$2c3c,d1
00025E42 <AmiBlitz3.ab3@8533>   BSR writeword
00025E48 <AmiBlitz3.ab3@8534>   MOVE.l #$bf800000,d1
00025E4C <AmiBlitz3.ab3@8535>   BSR writelong
00025E50 <AmiBlitz3.ab3@8536>   MOVE.w #$c4ff,d1                                         ;savetemp+regnum
00025E56 <AmiBlitz3.ab3@8537>   ADD.w parnum,d1
00025E5C <AmiBlitz3.ab3@8538>   JSR Atokejsr
00025E62 <AmiBlitz3.ab3@8539>   TST.w dontwrite
00025E66 <AmiBlitz3.ab3@8540>   BNE 'l1
00025E6C <AmiBlitz3.ab3@8541>   MOVE.l data1start,d1
00025E72 <AmiBlitz3.ab3@8542>   MOVE.l destpointer,a4
00025E76 <AmiBlitz3.ab3@8543>   ADD.l d1,-4(a4)
00025E7C <AmiBlitz3.ab3@8544>   MOVE.l destpointer,d1
00025E7E <AmiBlitz3.ab3@8545>   SUBQ.l #4,d1
00025E84 <AmiBlitz3.ab3@8546>   SUB.l destbufferstart,d1
00025E86 <AmiBlitz3.ab3@8547>   MOVE.l d2,-(a7)
00025E88 <AmiBlitz3.ab3@8548>   MOVE.l d1,d2
00025E8E <AmiBlitz3.ab3@8549>   JSR addhunkoffset
00025E90 <AmiBlitz3.ab3@8550>   MOVE.l (a7)+,d2
00025E94 <AmiBlitz3.ab3@8551> BRA 'l1
00025E96 <AmiBlitz3.ab3@8554>   ASL.l #7,d1
00025E9C <AmiBlitz3.ab3@8555>   OR.l #$F23C5000,d1                                       ;fmove.w #-1,fpx
00025EA0 <AmiBlitz3.ab3@8556>   BSR writelong
00025EA2 <AmiBlitz3.ab3@8557>   MOVEQ #-1,d1                                             ;-1
00025EA6 <AmiBlitz3.ab3@8558>   BSR writeword
00025EAA <AmiBlitz3.ab3@8559> BRA 'l1
00025EB0 <AmiBlitz3.ab3@8562>   MOVE.w regnum,d1
00025EB8 <AmiBlitz3.ab3@8563>   CMP.w #6,regnum
00025EBC <AmiBlitz3.ab3@8564>   BLT 'nostack
00025EC0 <AmiBlitz3.ab3@8569>   CMP.b #2,d2
00025EC4 <AmiBlitz3.ab3@8570>   BGT 'nw
00025EC8 <AmiBlitz3.ab3@8571> BRA 'nos
00025ECC <AmiBlitz3.ab3@8580>   CMP.w #7,d2
00025ED0 <AmiBlitz3.ab3@8581>   BNE 'nos
00025ED6 <AmiBlitz3.ab3@8582>   ADDQ #4,a2offset
00025EDC <AmiBlitz3.ab3@8584>     MOVE.l #$48780000,d1
00025EE0 <AmiBlitz3.ab3@8585>     BSR writelong
00025EE6 <AmiBlitz3.ab3@8586>     ADDQ.w #4,a2offset
00025EEA <AmiBlitz3.ab3@8587>     MOVE.w #$2f3c,d1
00025EEE <AmiBlitz3.ab3@8588>     BSR writeword
00025EF4 <AmiBlitz3.ab3@8589>     MOVE.l #-1,d1
00025EF8 <AmiBlitz3.ab3@8590>     BSR writelong
00025EFC <AmiBlitz3.ab3@8591>   BRA 'l1
00025F00 <AmiBlitz3.ab3@8595>   CMP.b #4,d2
00025F04 <AmiBlitz3.ab3@8596>       BNE 'noq
00025F08 <AmiBlitz3.ab3@8597>       MOVE.w #$2c3c,d1
00025F0C <AmiBlitz3.ab3@8598>       BSR writeword
00025F12 <AmiBlitz3.ab3@8599>       MOVE.l #$ffff0000,d1
00025F16 <AmiBlitz3.ab3@8600>       BSR writelong
00025F1A <AmiBlitz3.ab3@8601> BRA 'noq2
00025F1E <AmiBlitz3.ab3@8604>      CMP.b #5,d2
00025F22 <AmiBlitz3.ab3@8605>      BNE 'nof
00025F26 <AmiBlitz3.ab3@8606>       MOVE.w #$2c3c,d1
00025F2A <AmiBlitz3.ab3@8607>       BSR writeword
00025F30 <AmiBlitz3.ab3@8608>       MOVE.l #$800000c1,d1
00025F34 <AmiBlitz3.ab3@8609>       BSR writelong
00025F38 <AmiBlitz3.ab3@8610> BRA 'noq2
00025F3C <AmiBlitz3.ab3@8613>   MOVE.w #$7cff,d1
00025F40 <AmiBlitz3.ab3@8614>   BSR writeword
00025F44 <AmiBlitz3.ab3@8617>   MOVE.w #$c4ff,d1                                         ;savetemp+regnum
00025F4A <AmiBlitz3.ab3@8618>   ADD.w parnum,d1
00025F50 <AmiBlitz3.ab3@8619>   JSR Atokejsr
00025F56 <AmiBlitz3.ab3@8620>    TST.w dontwrite
00025F5A <AmiBlitz3.ab3@8621>    BNE 'l1
00025F60 <AmiBlitz3.ab3@8622>    MOVE.l data1start,d1
00025F66 <AmiBlitz3.ab3@8623>    MOVE.l destpointer,a4
00025F6A <AmiBlitz3.ab3@8624>    ADD.l d1,-4(a4)
00025F70 <AmiBlitz3.ab3@8625>    MOVE.l destpointer,d1
00025F72 <AmiBlitz3.ab3@8626>    SUBQ.l #4,d1
00025F78 <AmiBlitz3.ab3@8627>    SUB.l destbufferstart,d1
00025F7A <AmiBlitz3.ab3@8628>    MOVE.l d2,-(a7)
00025F7C <AmiBlitz3.ab3@8629>    MOVE.l d1,d2
00025F82 <AmiBlitz3.ab3@8630>    JSR addhunkoffset
00025F84 <AmiBlitz3.ab3@8631>    MOVE.l (a7)+,d2
00025F88 <AmiBlitz3.ab3@8632> BRA 'l1
00025F8A <AmiBlitz3.ab3@8635>   ASL.l #8,d1
00025F8C <AmiBlitz3.ab3@8636>   ASL.l #1,d1
00025F92 <AmiBlitz3.ab3@8637>   OR.l #$203c,d1                                           ;-1
00025F96 <AmiBlitz3.ab3@8638>   BSR writeword
00025F9C <AmiBlitz3.ab3@8639>   MOVE.l #-1,d1
00025FA0 <AmiBlitz3.ab3@8640>   CMP.b #4,d2
00025FA4 <AmiBlitz3.ab3@8641>   BNE 'nq1
00025FAA <AmiBlitz3.ab3@8642>   MOVE.l #$ffff0000,d1
00025FAE <AmiBlitz3.ab3@8645>   CMP.b #5,d2
00025FB2 <AmiBlitz3.ab3@8646>   BNE 'nof2
00025FB8 <AmiBlitz3.ab3@8647>   TST.b fpu
00025FBC <AmiBlitz3.ab3@8648>   BNE 'nof2
00025FC2 <AmiBlitz3.ab3@8649>   MOVE.l #$800000c1,d1
00025FC6 <AmiBlitz3.ab3@8652>    BSR writelong
00025FCA <AmiBlitz3.ab3@8653>    CMP.b #7,d2
00025FCE <AmiBlitz3.ab3@8654>    BNE 'l1
00025FD4 <AmiBlitz3.ab3@8656>      MOVE.l #$48780000,d1
00025FD8 <AmiBlitz3.ab3@8657>      BSR writelong
00025FDE <AmiBlitz3.ab3@8659>    ADDQ.w #4,a2offset                                      ; bug fix for string parameters
00025FE4 <AmiBlitz3.ab3@8660>    MOVE.l #$594f,d1                                        ; subq #4,a7
00025FE8 <AmiBlitz3.ab3@8661>    BSR writeword
00025FEA <AmiBlitz3.ab3@8664>    SUBQ.w #1,(A7)
00025FEE <AmiBlitz3.ab3@8665>    BEQ.w fetchpees__done
00025FF4 <AmiBlitz3.ab3@8666>    ADDQ.w #1,regnum
00025FF8 <AmiBlitz3.ab3@8667> BRA 'ol2
00025FFA <AmiBlitz3.ab3@8670>    MOVE.w D2,D1
00025FFE <AmiBlitz3.ab3@8671>    ANDI.w #$40,D1
00026004 <AmiBlitz3.ab3@8672>    MOVE.b D1,partostack
00026006 <AmiBlitz3.ab3@8673>    TST.b D2
0002600A <AmiBlitz3.ab3@8674>     BMI.w handlevara
0002600E <AmiBlitz3.ab3@8675>    BTST #$5,D2
00026012 <AmiBlitz3.ab3@8676>     BNE.w handlearr
00026018 <AmiBlitz3.ab3@8677>     MOVE.w regnumstore,-(a7)
0002601E <AmiBlitz3.ab3@8678>     MOVE.w tempregnum,-(a7)
00026024 <AmiBlitz3.ab3@8679>     MOVE.w parnum,-(a7)
00026028 <AmiBlitz3.ab3@8680>     BSR.w getap                                        ;recursive entry
0002602E <AmiBlitz3.ab3@8681>     MOVE.w (a7)+,parnum
00026034 <AmiBlitz3.ab3@8682>     MOVE.w (a7)+,tempregnum
0002603A <AmiBlitz3.ab3@8683>     MOVE.w (a7)+,regnumstore
0002603E <AmiBlitz3.ab3@8686>     MOVE.w partostack(PC),D1
00026042 <AmiBlitz3.ab3@8687>     BEQ.w JL_0_6886
00026048 <AmiBlitz3.ab3@8690>    ADDQ.w #4,a2offset
0002604E <AmiBlitz3.ab3@8693>    MOVE.w pushdn,D1
00026054 <AmiBlitz3.ab3@8694>    OR.w regnum,D1
00026058 <AmiBlitz3.ab3@8695>    CMP.w #$3,D2
0002605C <AmiBlitz3.ab3@8696>     BCC.w JL_0_6880
00026062 <AmiBlitz3.ab3@8697>    SUBQ.w #2,a2offset
00026066 <AmiBlitz3.ab3@8698>    ORI.w #$1000,D1
0002606A <AmiBlitz3.ab3@8699>    BSR.w writeword
0002606C <AmiBlitz3.ab3@8700> RTS
00026070 <AmiBlitz3.ab3@8703>   CMP.b #7,d2
00026074 <AmiBlitz3.ab3@8704>    BNE 'l10
0002607C <AmiBlitz3.ab3@8705>    CMP.b #2,optistring
00026082 <AmiBlitz3.ab3@8709>   TST.b iee
00026086 <AmiBlitz3.ab3@8710>   BEQ 'old
0002608A <AmiBlitz3.ab3@8711>   CMP.b #5,d2
0002608E <AmiBlitz3.ab3@8712>   BNE 'old
00026092 <AmiBlitz3.ab3@8715>   BSR.w writeword                                          ;write val to stack
00026094 <AmiBlitz3.ab3@8716> RTS
0002609A <AmiBlitz3.ab3@8719>   SUBQ.w #4,a2offset
0002609C <AmiBlitz3.ab3@8720> RTS
000260A2 <AmiBlitz3.ab3@8723>   ADDQ.w #1,regnum
000260A4 <AmiBlitz3.ab3@8724> RTS
000260A6 <AmiBlitz3.ab3@8728>   MOVEQ.l #$03,D2
000260AA <AmiBlitz3.ab3@8729> BRA.w JL_0_6854
000260AE <AmiBlitz3.ab3@8733>   ANDI.w #$7,D2
000260B0 <AmiBlitz3.ab3@8734>   MOVE.w D2,-(A7)
000260B4 <AmiBlitz3.ab3@8735>    BSR.w JL_0_A916
000260B8 <AmiBlitz3.ab3@8736>   CMP.b #$7,D2                                             ;ignore pnt to $
000260BC <AmiBlitz3.ab3@8737>    BEQ.w JL_0_68C0
000260C0 <AmiBlitz3.ab3@8738>   BTST #$E,D2
000260C4 <AmiBlitz3.ab3@8739>    BEQ.w JL_0_68B6
000260C8 <AmiBlitz3.ab3@8740>   MOVE.b #$3,D2                                            ;pointer to long
000260CC <AmiBlitz3.ab3@8741> BRA.w JL_0_68C0
000260CE <AmiBlitz3.ab3@8744>    TST.b D2
000260D2 <AmiBlitz3.ab3@8745>    BNE.w JL_0_68C0
000260D6 <AmiBlitz3.ab3@8746>   MOVE.b #$3,D2
000260D8 <AmiBlitz3.ab3@8749>   MOVE.w (A7)+,D3
000260DA <AmiBlitz3.ab3@8750>   TST.b D3
000260DE <AmiBlitz3.ab3@8751>    BEQ.w JL_0_68D2
000260E0 <AmiBlitz3.ab3@8752>   CMP.b D2,D3
000260E4 <AmiBlitz3.ab3@8753>    BEQ.w putalp
000260E8 <AmiBlitz3.ab3@8754> BRA.w mismatcherr
000260EE <AmiBlitz3.ab3@8757>   ADDQ.w #2,a2offset
000260F2 <AmiBlitz3.ab3@8758>   MOVE.w ptype(PC),D1
000260F6 <AmiBlitz3.ab3@8759>    BSR.w writeword
000260F8 <AmiBlitz3.ab3@8760>   MOVEQ.l #$00,D1
000260FA <AmiBlitz3.ab3@8761>   MOVE.b D2,D1
000260FE <AmiBlitz3.ab3@8762>    BSR.w writeword
00026102 <AmiBlitz3.ab3@8763> BRA.w putalp
00026104 <AmiBlitz3.ab3@8766>    MOVE.w D2,-(A7)
00026108 <AmiBlitz3.ab3@8767>    BSR.w JL_0_694E
0002610E <AmiBlitz3.ab3@8768>   BTST #$4,$1(A7)
00026112 <AmiBlitz3.ab3@8769>    BEQ.w JL_0_6900
00026116 <AmiBlitz3.ab3@8770>    BSR.w JL_0_699A
0002611C <AmiBlitz3.ab3@8773>    BTST #$3,$1(A7)
00026120 <AmiBlitz3.ab3@8774>    BEQ.w JL_0_690E
00026124 <AmiBlitz3.ab3@8775>    BSR.w sendtype
00026126 <AmiBlitz3.ab3@8778>    MOVE.w (A7)+,D2
0002612A <AmiBlitz3.ab3@8779> BRA.w get1bytemain
00026130 <AmiBlitz3.ab3@8782>   MOVE.w regnum,D1
00026132 <AmiBlitz3.ab3@8783>   LSL.w #8,D1
00026134 <AmiBlitz3.ab3@8784>   LSL.w #1,D1
00026138 <AmiBlitz3.ab3@8785>   ORI.w #$7000,D1
0002613E <AmiBlitz3.ab3@8786>   BTST #$0,$7(A3)
00026142 <AmiBlitz3.ab3@8787>    BNE.w JL_0_6946                                         ;A Pointer
0002614A <AmiBlitz3.ab3@8788>   CMPI.l #$100,$4(A2)
0002614E <AmiBlitz3.ab3@8789>    BCC.w arrerr1                                           ;illegal type to send
00026152 <AmiBlitz3.ab3@8790>   MOVE.b $7(A2),D1
00026156 <AmiBlitz3.ab3@8793>   BSR.w writeword                                          ;moveq #type,d regat
00026158 <AmiBlitz3.ab3@8794>   MOVEQ.l #$02,D2                                          ;just a word.
0002615C <AmiBlitz3.ab3@8795> BRA.w JL_0_685C
00026160 <AmiBlitz3.ab3@8798>   MOVE.b #$3,D1
00026164 <AmiBlitz3.ab3@8799> BRA.w JL_0_693C
00026168 <AmiBlitz3.ab3@8803>    BSR.w get1bytemain                                      ;write array paramter code
0002616C <AmiBlitz3.ab3@8804>    BSR.w getparameter
00026174 <AmiBlitz3.ab3@8805>   BTST #$1,flagmask+1
00026178 <AmiBlitz3.ab3@8806>    BEQ.w syntaxerr
0002617C <AmiBlitz3.ab3@8807>    BSR.w JL_0_8E3C
00026180 <AmiBlitz3.ab3@8808>    BSR.w get1bytemain
00026184 <AmiBlitz3.ab3@8809>   CMP.w #$29,D0                                            ;we just want a() or whatever
00026188 <AmiBlitz3.ab3@8810>    BNE.w syntaxerr
0002618E <AmiBlitz3.ab3@8811>   MOVE.w notshared,D1
00026192 <AmiBlitz3.ab3@8812>    BNE.w noarrayerr
00026198 <AmiBlitz3.ab3@8813>   MOVE.w regnum,D1
0002619A <AmiBlitz3.ab3@8814>   LSL.w #8,D1
0002619C <AmiBlitz3.ab3@8815>   LSL.w #1,D1
000261A0 <AmiBlitz3.ab3@8816>   OR.w fbase(PC),D1
000261A6 <AmiBlitz3.ab3@8817>    TST.b varmode
000261AA <AmiBlitz3.ab3@8818>    BEQ 'l1
000261AE <AmiBlitz3.ab3@8819>    BCLR #0,d1
000261B2 <AmiBlitz3.ab3@8822>    BSR.w writeword
000261B6 <AmiBlitz3.ab3@8823>   MOVE.w $4(A3),D1
000261BA <AmiBlitz3.ab3@8824>    BSR.w writeword
000261BE <AmiBlitz3.ab3@8825> BRA.w putalp
000261C4 <AmiBlitz3.ab3@8829>   MOVE.w regnum,D1
000261C6 <AmiBlitz3.ab3@8830>   LSL.w #8,D1
000261C8 <AmiBlitz3.ab3@8831>   LSL.w #1,D1
000261CC <AmiBlitz3.ab3@8832>   OR.w fbase(PC),D1
000261D2 <AmiBlitz3.ab3@8833>    TST.b varmode
000261D6 <AmiBlitz3.ab3@8834>    BEQ 'l1
000261DA <AmiBlitz3.ab3@8835>    BCLR #0,d1
000261DE <AmiBlitz3.ab3@8838>    BSR.w writeword
000261E2 <AmiBlitz3.ab3@8839>   MOVE.w $8(A3),D1
000261E4 <AmiBlitz3.ab3@8840>   LSL.w #2,D1
000261EA <AmiBlitz3.ab3@8841>   MOVE.w varmode,D2
000261EE <AmiBlitz3.ab3@8842>    BEQ.w JL_0_69BE
000261F0 <AmiBlitz3.ab3@8843>   NEG.w D1
000261F4 <AmiBlitz3.ab3@8846>    ADD.w $4(A3),D1
000261F8 <AmiBlitz3.ab3@8847>    BSR.w writeword
000261FE <AmiBlitz3.ab3@8848>   MOVE.w regnum,D1
00026200 <AmiBlitz3.ab3@8849>   LSL.w #8,D1
00026202 <AmiBlitz3.ab3@8850>   LSL.w #1,D1
00026206 <AmiBlitz3.ab3@8851>   MOVE.w partostack(PC),D2
0002620A <AmiBlitz3.ab3@8852>    BNE.w JL_0_69F4
00026212 <AmiBlitz3.ab3@8853>   CMPI.w #$7,regnum
00026216 <AmiBlitz3.ab3@8854>    BCC.w JL_0_69F4
0002621A <AmiBlitz3.ab3@8855>   OR.w pushlast(PC),D1
00026220 <AmiBlitz3.ab3@8856>   MOVE.w regnum,D2
00026222 <AmiBlitz3.ab3@8857>   SUBQ.w #1,D2
00026224 <AmiBlitz3.ab3@8858>   OR.w D2,D1
00026228 <AmiBlitz3.ab3@8859> BRA.w JL_0_69F8
0002622C <AmiBlitz3.ab3@8862>   OR.w pushadd(PC),D1
00026230 <AmiBlitz3.ab3@8865>   BSR.w writeword
00026238 <AmiBlitz3.ab3@8866>   MOVE.b #$1,partostack
0002623C <AmiBlitz3.ab3@8867> BRA.w putalp
00026240 <AmiBlitz3.ab3@8871> fbase:       Dc.b $20,$2D,$00,$00                           ;MOVE.L  $0000(A5),D0
00026242 <AmiBlitz3.ab3@8872> pushadd:     Dc.b $D0,$97                                   ;ADD.L (A7),D0
00026244 <AmiBlitz3.ab3@8873> pushlast:    Dc.b $D0,$80                                   ;ADD.L D0,D0
00026248 <AmiBlitz3.ab3@8878>   ANDI.w #$7,D2                                            ;0-7 (unknown to string)
0002624C <AmiBlitz3.ab3@8879>    BEQ.w evalu2
00026250 <AmiBlitz3.ab3@8880> BRA.w eval
00026256 <AmiBlitz3.ab3@8884>   MOVEA.l libpointer,A1
0002625A <AmiBlitz3.ab3@8887>    CMPA.w #$0,A1
0002625E <AmiBlitz3.ab3@8888>    BEQ.w resetlibs__done
00026264 <AmiBlitz3.ab3@8889>   MOVE.w #-1,$A(A1)
0002626A <AmiBlitz3.ab3@8890>   BCLR #$7,$C(A1)
0002626C <AmiBlitz3.ab3@8891>   MOVEA.l (A1),A1
00026270 <AmiBlitz3.ab3@8892> BRA.w resetlibs__loop
00026272 <AmiBlitz3.ab3@8895> RTS
00026276 <AmiBlitz3.ab3@8899>   MOVE.w #$FFFE,D1
0002627A <AmiBlitz3.ab3@8902>    BSR.w JL_0_6F38
00026280 <AmiBlitz3.ab3@8905>   TST.w cfetchmode
00026284 <AmiBlitz3.ab3@8906>    BEQ.w uselib3__noconst
0002628A <AmiBlitz3.ab3@8907>   BTST #$6,$C(A1)
0002628E <AmiBlitz3.ab3@8908>    BNE.w uselib3__constok
00026292 <AmiBlitz3.ab3@8909> BRA.w badconerr                                            ;Can't use this Library!
00026294 <AmiBlitz3.ab3@8912> RTS
0002629A <AmiBlitz3.ab3@8915>    BSET #$7,$C(A1)
0002629E <AmiBlitz3.ab3@8916>    BNE.w JL_0_6C74                                         ;already done....
000262A4 <AmiBlitz3.ab3@8917>    CMPI.w #-1,$A(A1)
000262A8 <AmiBlitz3.ab3@8918>    BNE.w JL_0_6C74                                         ;something already here
000262AE <AmiBlitz3.ab3@8922>    TST.w dirmode
000262B2 <AmiBlitz3.ab3@8923>    BEQ.b JL_0_6A86
000262B8 <AmiBlitz3.ab3@8924>    TST.b exdebug
000262BC <AmiBlitz3.ab3@8925>    BEQ 'l1
000262C0 <AmiBlitz3.ab3@8926> BRA.b JL_0_6A86
000262C6 <AmiBlitz3.ab3@8929>   BCLR #$7,$C(A1)
000262CA <AmiBlitz3.ab3@8930> BRA.w dirliberr
000262D0 <AmiBlitz3.ab3@8933>   MOVE.b debugmode,-(a7)
000262D4 <AmiBlitz3.ab3@8934>   MOVEM.l D1/A0/A2,-(A7)
000262DC <AmiBlitz3.ab3@8940>   BTST #$7,use_debugger
000262E0 <AmiBlitz3.ab3@8941>   BNE 'debugon
000262E2 <AmiBlitz3.ab3@8942>   CLR.w D1
000262E6 <AmiBlitz3.ab3@8943> BRA.b 'debugoff
000262E8 <AmiBlitz3.ab3@8946>   SNE D1
000262EE <AmiBlitz3.ab3@8949>   MOVE.b d1,debugmode
000262F0 <AmiBlitz3.ab3@8953>   MOVEA.l A1,A0
000262F4 <AmiBlitz3.ab3@8954>   ADDA.l $12(A1),A0
000262F8 <AmiBlitz3.ab3@8955>   TST.w -$2(A0)
000262FC <AmiBlitz3.ab3@8956>    BEQ.w JL_0_6AD2
00026300 <AmiBlitz3.ab3@8957>   MOVEM.l A0-A1,-(A7)
00026304 <AmiBlitz3.ab3@8958>   MOVE.w #$FB4F,D1
00026308 <AmiBlitz3.ab3@8959>    BSR.w uselib
0002630C <AmiBlitz3.ab3@8960>   MOVEM.l (A7)+,A0-A1
00026312 <AmiBlitz3.ab3@8961>   ADDQ.w #1,globalvarpointer
0002631A <AmiBlitz3.ab3@8962>   BCLR #$0,globalvarpointer+1
00026322 <AmiBlitz3.ab3@8963>   MOVE.w globalvarpointer,-$6(A0)
00026328 <AmiBlitz3.ab3@8964>   ADDQ.w #4,globalvarpointer
0002632C <AmiBlitz3.ab3@8965>   TST.l -$E(A0)
00026330 <AmiBlitz3.ab3@8966>    BEQ.w JL_0_6AD2
00026336 <AmiBlitz3.ab3@8967>   ADDQ.w #4,globalvarpointer
0002633E <AmiBlitz3.ab3@8970>   MOVE.l libend,$28(A1)
00026340 <AmiBlitz3.ab3@8971>   MOVEA.l A1,A0
00026344 <AmiBlitz3.ab3@8972>   ADDA.l $12(A1),A0
00026346 <AmiBlitz3.ab3@8973>   MOVE.l A1,D1
0002634A <AmiBlitz3.ab3@8974>   ADD.l $6(A1),D1
0002634E <AmiBlitz3.ab3@8975>   TST.l $2C(A1)
00026352 <AmiBlitz3.ab3@8976>    BEQ.w JL_0_6AFE
00026358 <AmiBlitz3.ab3@8978>   TST.b debugmode
0002635C <AmiBlitz3.ab3@8979>    BNE.w JL_0_6AFE
0002635E <AmiBlitz3.ab3@8980>   MOVE.l A1,D1
00026362 <AmiBlitz3.ab3@8981>   ADD.l $2C(A1),D1
00026368 <AmiBlitz3.ab3@8984>   MOVEA.l libend,A2
0002636E <AmiBlitz3.ab3@8987>   CMPA.l data1start,A2
00026372 <AmiBlitz3.ab3@8988>    BCS.w JL_0_6B24
0002637A <AmiBlitz3.ab3@8989>   MOVE.w #$FFFF,dontwrite
0002637C <AmiBlitz3.ab3@8992>   ADDQ.w #2,A0
0002637E <AmiBlitz3.ab3@8993>   ADDQ.w #2,A2
00026380 <AmiBlitz3.ab3@8994>   CMPA.l D1,A0
00026384 <AmiBlitz3.ab3@8995>    BCS.w JL_0_6B16
00026388 <AmiBlitz3.ab3@8996> BRA.w JL_0_6B2C
0002638A <AmiBlitz3.ab3@8999>   MOVE.w (A0)+,(A2)+                                       ;copylibcode
0002638C <AmiBlitz3.ab3@9000>   CMPA.l D1,A0
00026390 <AmiBlitz3.ab3@9001>    BCS.w JL_0_6B04
00026396 <AmiBlitz3.ab3@9004>   MOVE.l A2,libend
0002639A <AmiBlitz3.ab3@9005>   MOVE.l $20(A1),D1
0002639E <AmiBlitz3.ab3@9006>    BEQ.w JL_0_6BB8
000263A2 <AmiBlitz3.ab3@9007>   MOVEM.l D0/D2-D3,-(A7)
000263A6 <AmiBlitz3.ab3@9008>   MOVEA.l $24(A1),A0
000263A8 <AmiBlitz3.ab3@9009>   MOVEQ.l #$00,D3
000263AA <AmiBlitz3.ab3@9012>   MOVE.l (A0)+,D2
000263AE <AmiBlitz3.ab3@9013>   TST.l $2C(A1)
000263B2 <AmiBlitz3.ab3@9014>    BEQ.w JL_0_6B60
000263B8 <AmiBlitz3.ab3@9015>   TST.b debugmode
000263BC <AmiBlitz3.ab3@9016>    BNE.w JL_0_6B60
000263C0 <AmiBlitz3.ab3@9017>   CMP.l $2C(A1),D2
000263C4 <AmiBlitz3.ab3@9018>    BCC.w JL_0_6BA0
000263C8 <AmiBlitz3.ab3@9021>   TST.w $0(A1,D2.L)
000263CC <AmiBlitz3.ab3@9022>    BPL.w JL_0_6B72
000263CE <AmiBlitz3.ab3@9023>   TST.l D3
000263D2 <AmiBlitz3.ab3@9024>    BNE.w JL_0_6B72
000263D4 <AmiBlitz3.ab3@9025>   MOVE.l A0,D0
000263D6 <AmiBlitz3.ab3@9026>   MOVE.l D1,D3
000263DA <AmiBlitz3.ab3@9029>   SUB.l $12(A1),D2
000263DE <AmiBlitz3.ab3@9030>    BMI.w JL_0_6BA0
000263E2 <AmiBlitz3.ab3@9031>   ADD.l $28(A1),D2
000263E4 <AmiBlitz3.ab3@9032>   MOVE.l D2,-(A7)
000263EA <AmiBlitz3.ab3@9033>   SUB.l destbufferstart,D2
000263EE <AmiBlitz3.ab3@9034>    BSR.w addhunkoffset
000263F0 <AmiBlitz3.ab3@9035>   MOVEA.l (A7)+,A2
000263F6 <AmiBlitz3.ab3@9036>   TST.w dontwrite
000263FA <AmiBlitz3.ab3@9037>    BNE.w JL_0_6BA0
000263FE <AmiBlitz3.ab3@9038>   MOVE.l $28(A1),D2
00026402 <AmiBlitz3.ab3@9039>   SUB.l $12(A1),D2
00026404 <AmiBlitz3.ab3@9040>   ADD.l D2,(A2)
00026406 <AmiBlitz3.ab3@9043>    SUBQ.l #1,D1
0002640A <AmiBlitz3.ab3@9044>    BNE.w JL_0_6B44
0002640C <AmiBlitz3.ab3@9045>   MOVE.l D3,D2
00026410 <AmiBlitz3.ab3@9046>    BEQ.w JL_0_6BB4
00026412 <AmiBlitz3.ab3@9047>   MOVEA.l D0,A2
00026414 <AmiBlitz3.ab3@9048>   SUBQ.w #4,A2
00026418 <AmiBlitz3.ab3@9049>    BSR.w JL_0_6E34
0002641C <AmiBlitz3.ab3@9052>    MOVEM.l (A7)+,D0/D2-D3
00026420 <AmiBlitz3.ab3@9055>    MOVEM.l (A7)+,D1/A0/A2
00026424 <AmiBlitz3.ab3@9056>   MOVEM.l D1-D2,-(A7)
00026428 <AmiBlitz3.ab3@9057>   TST.w $1A(A1)
0002642C <AmiBlitz3.ab3@9058>    BNE.w JL_0_6BD0
00026430 <AmiBlitz3.ab3@9059>   CLR.w $A(A1)
00026434 <AmiBlitz3.ab3@9060> BRA.w JL_0_6C5E
0002643A <AmiBlitz3.ab3@9063>   ADDQ.w #1,globalvarpointer
00026442 <AmiBlitz3.ab3@9064>   BCLR #$0,globalvarpointer+1
0002644A <AmiBlitz3.ab3@9065>   MOVE.w globalvarpointer,$A(A1)
0002644E <AmiBlitz3.ab3@9066>   CMP.w #-$12D,D1
00026452 <AmiBlitz3.ab3@9067>    BNE.w JL_0_6C16
0002645A <AmiBlitz3.ab3@9068>   MOVE.w $A(A1),movestdn+2
00026462 <AmiBlitz3.ab3@9069>   MOVE.w $A(A1),pusha3+2
0002646A <AmiBlitz3.ab3@9070>   MOVE.w $A(A1),pusha32+2
00026472 <AmiBlitz3.ab3@9071>   MOVE.w $A(A1),pulla3+2
0002647A <AmiBlitz3.ab3@9072>   MOVE.w $A(A1),geta3+2
0002647E <AmiBlitz3.ab3@9075>    CMP.w #-$3E9,D1
00026482 <AmiBlitz3.ab3@9076>    BNE.w JL_0_6C3E
0002648A <AmiBlitz3.ab3@9077>   MOVE.w $A(A1),dataget+2
00026492 <AmiBlitz3.ab3@9078>   MOVE.w $A(A1),dataput+2
0002649A <AmiBlitz3.ab3@9079>   MOVE.w $A(A1),rescode+6
000264A2 <AmiBlitz3.ab3@9080>   MOVE.w $A(A1),rescode2+2
000264A8 <AmiBlitz3.ab3@9083>   ADDQ.w #2,globalvarpointer
000264AC <AmiBlitz3.ab3@9084>   TST.w $1A(A1)
000264B0 <AmiBlitz3.ab3@9085>    BMI.w JL_0_6C52
000264B6 <AmiBlitz3.ab3@9086>   ADDQ.w #2,globalvarpointer
000264BA <AmiBlitz3.ab3@9089>   MOVEM.l D1/A1,-(A7)
000264BE <AmiBlitz3.ab3@9090>   BSR.w uselib2
000264C2 <AmiBlitz3.ab3@9091>   MOVEM.l (A7)+,D1/A1
000264C4 <AmiBlitz3.ab3@9094>   MOVE.w D1,D2
000264C8 <AmiBlitz3.ab3@9095>   MOVE.l $16(A1),D1
000264CC <AmiBlitz3.ab3@9096>    BSR.w uselib2_org
000264D0 <AmiBlitz3.ab3@9097>   MOVE.l $1C(A1),D1
000264D4 <AmiBlitz3.ab3@9098>    BSR.w uselib2_org
000264D8 <AmiBlitz3.ab3@9099>   MOVEM.l (A7)+,D1-D2
000264DE <AmiBlitz3.ab3@9101>   MOVE.b (a7)+,debugmode
000264E0 <AmiBlitz3.ab3@9104> RTS
000264E2 <AmiBlitz3.ab3@9108>   MOVEQ.l #$00,D2
000264E8 <AmiBlitz3.ab3@9111>   MOVEA.l tokeslist,A2
000264EA <AmiBlitz3.ab3@9112>   CMPA.l D2,A2
000264EE <AmiBlitz3.ab3@9113>    BEQ.w JL_0_6CE0
000264F0 <AmiBlitz3.ab3@9114>   MOVE.l A2,-(A7)
000264F2 <AmiBlitz3.ab3@9117>   MOVEQ.l #$00,D3
000264F6 <AmiBlitz3.ab3@9120>   MOVEA.l $8(A2),A3
000264F8 <AmiBlitz3.ab3@9121>   CMPA.l D3,A3
000264FC <AmiBlitz3.ab3@9122>    BEQ.w JL_0_6CD2
000264FE <AmiBlitz3.ab3@9123>   MOVE.l A3,-(A7)
00026502 <AmiBlitz3.ab3@9124>   MOVEM.l D2-D3/A2-A3,-(A7)
00026506 <AmiBlitz3.ab3@9125>   MOVE.w $4(A2),D1
0002650A <AmiBlitz3.ab3@9126>   MOVE.w $6(A2),D2
0002650E <AmiBlitz3.ab3@9127>    BSR.w JL_0_6CE2
00026512 <AmiBlitz3.ab3@9128>   MOVEM.l (A7)+,D2-D3/A2-A3
00026518 <AmiBlitz3.ab3@9129>   MOVE.w dontwrite,D0
0002651C <AmiBlitz3.ab3@9130>    BEQ.w JL_0_6CBE
0002651E <AmiBlitz3.ab3@9133>   MOVEA.l (A3),A3
00026520 <AmiBlitz3.ab3@9134>   CMPA.l D3,A3
00026524 <AmiBlitz3.ab3@9135>    BNE.w JL_0_6CB2
00026528 <AmiBlitz3.ab3@9136> BRA.w JL_0_6CCC
0002652C <AmiBlitz3.ab3@9139>   MOVEA.l $4(A3),A0
0002652E <AmiBlitz3.ab3@9140>   MOVE.l D7,(A0)
00026530 <AmiBlitz3.ab3@9141>   MOVEA.l (A3),A3
00026532 <AmiBlitz3.ab3@9142>   CMPA.l D3,A3
00026536 <AmiBlitz3.ab3@9143>    BNE.w JL_0_6CBE
00026538 <AmiBlitz3.ab3@9146>   MOVE.l (A7)+,D3
0002653C <AmiBlitz3.ab3@9147> BRA.w JL_0_6C88
0002653E <AmiBlitz3.ab3@9150>    MOVEA.l (A2),A2
00026540 <AmiBlitz3.ab3@9151>   CMPA.l D2,A2
00026544 <AmiBlitz3.ab3@9152>    BNE.w JL_0_6C86
00026546 <AmiBlitz3.ab3@9153>   MOVE.l (A7)+,D2
0002654A <AmiBlitz3.ab3@9154> BRA.w JL_0_6C78
0002654C <AmiBlitz3.ab3@9157> RTS
0002654E <AmiBlitz3.ab3@9161>   MOVE.w D2,-(A7)
00026552 <AmiBlitz3.ab3@9162>    BSR.w searchinstr
00026554 <AmiBlitz3.ab3@9163>   MOVE.w (A7)+,D2
0002655C <AmiBlitz3.ab3@9164>   BCLR #$7,blitzmode
00026560 <AmiBlitz3.ab3@9165>   BCLR #$E,D2
00026564 <AmiBlitz3.ab3@9166>    BEQ.w JL_0_6D02
0002656C <AmiBlitz3.ab3@9167>   BSET #$7,blitzmode
0002656E <AmiBlitz3.ab3@9170>   TST.w (A3)
00026572 <AmiBlitz3.ab3@9171>    BEQ.w JL_0_6DAC
00026578 <AmiBlitz3.ab3@9172>   BTST #$2,$1(A3)
0002657C <AmiBlitz3.ab3@9173>    BNE.w tokeerr
00026582 <AmiBlitz3.ab3@9174>   BTST #$3,$1(A3)
00026586 <AmiBlitz3.ab3@9175>    BNE.w tokeerr
0002658A <AmiBlitz3.ab3@9176>   LEA $6(A3),A3
0002658C <AmiBlitz3.ab3@9179>   MOVE.w (A3)+,D0
00026590 <AmiBlitz3.ab3@9180>    BMI.w tokeerr
00026594 <AmiBlitz3.ab3@9181>   ANDI.w #$FF,D0
00026596 <AmiBlitz3.ab3@9182>   ADDA.w D0,A3
00026598 <AmiBlitz3.ab3@9183>   ADDQ.w #1,A3
0002659A <AmiBlitz3.ab3@9184>   EXG.l D0,A3
0002659E <AmiBlitz3.ab3@9185>   BCLR #$0,D0
000265A0 <AmiBlitz3.ab3@9186>   EXG.l D0,A3
000265A2 <AmiBlitz3.ab3@9187>   SUBQ.w #1,D2
000265A6 <AmiBlitz3.ab3@9188>    BPL.w JL_0_6D98
000265A8 <AmiBlitz3.ab3@9189>   TST.w (A3)
000265AC <AmiBlitz3.ab3@9190>    BNE.w JL_0_6D76
000265B0 <AmiBlitz3.ab3@9191>   MOVE.l $2(A3),D0
000265B4 <AmiBlitz3.ab3@9192>   OR.l $A(A3),D0
000265B8 <AmiBlitz3.ab3@9193>    BNE.w JL_0_6D76
000265BE <AmiBlitz3.ab3@9194>   BTST #$0,$9(A3)
000265C2 <AmiBlitz3.ab3@9195>    BNE.w JL_0_6D76
000265C6 <AmiBlitz3.ab3@9196>   MOVE.l $6(A3),D7
000265CA <AmiBlitz3.ab3@9197>   MOVE.w $0(A2,D7.L),D0
000265CE <AmiBlitz3.ab3@9198>   ANDI.w #$F000,D0
000265D2 <AmiBlitz3.ab3@9199>   CMP.w #-$6000,D0
000265D6 <AmiBlitz3.ab3@9200>    BEQ.w JL_0_6D76
000265DA <AmiBlitz3.ab3@9203>   SUB.l $12(A2),D7
000265DE <AmiBlitz3.ab3@9204>   ADD.l $28(A2),D7
000265E0 <AmiBlitz3.ab3@9205> RTS
000265E6 <AmiBlitz3.ab3@9209>   LEA cutejsr,A0
000265EC <AmiBlitz3.ab3@9212>   MOVE.l destpointer,-(A7)
000265F4 <AmiBlitz3.ab3@9213>   MOVE.w #$FFFF,lasta6
000265F6 <AmiBlitz3.ab3@9216>    JSR (A0)
000265FA <AmiBlitz3.ab3@9217>   MOVE.w #$4E75,D1
000265FE <AmiBlitz3.ab3@9218>    BSR.w writeword
00026600 <AmiBlitz3.ab3@9219>   MOVE.l (A7)+,D7
00026602 <AmiBlitz3.ab3@9220> RTS
00026604 <AmiBlitz3.ab3@9224>   TST.w (A3)+
00026608 <AmiBlitz3.ab3@9225>    BEQ.w JL_0_6DA4
0002660A <AmiBlitz3.ab3@9226>   ADDQ.w #2,A3
0002660E <AmiBlitz3.ab3@9227> BRA.w JL_0_6D98
00026612 <AmiBlitz3.ab3@9230>   LEA $C(A3),A3
00026616 <AmiBlitz3.ab3@9231> BRA.w JL_0_6D20
00026618 <AmiBlitz3.ab3@9235>   TST.w D2
0002661C <AmiBlitz3.ab3@9236>    BNE.w tokeerr
00026620 <AmiBlitz3.ab3@9237>   TST.w $6(A3)
00026624 <AmiBlitz3.ab3@9238>    BNE.w JL_0_6DE4
00026628 <AmiBlitz3.ab3@9239>   MOVE.l $8(A3),D0
0002662C <AmiBlitz3.ab3@9240>   OR.l $10(A3),D0
00026630 <AmiBlitz3.ab3@9241>    BNE.w JL_0_6DE4
00026636 <AmiBlitz3.ab3@9242>   BTST #$0,$F(A3)
0002663A <AmiBlitz3.ab3@9243>    BNE.w JL_0_6DE4
0002663E <AmiBlitz3.ab3@9244>   MOVE.l $C(A3),D7
00026642 <AmiBlitz3.ab3@9245>   MOVE.w $0(A2,D7.L),D0
00026646 <AmiBlitz3.ab3@9246>   ANDI.w #$F000,D0
0002664A <AmiBlitz3.ab3@9247>   CMP.w #-$6000,D0
0002664E <AmiBlitz3.ab3@9248>    BNE.w JL_0_6D6C
00026650 <AmiBlitz3.ab3@9251>   MOVE.l A3,D1
00026652 <AmiBlitz3.ab3@9252>   SUB.l A2,D1
00026658 <AmiBlitz3.ab3@9253>   LEA Amakelibsub,A0
0002665C <AmiBlitz3.ab3@9254> BRA.w JL_0_6D7C
00026662 <AmiBlitz3.ab3@9258>   MOVEA.l _execbase,A6
00026668 <AmiBlitz3.ab3@9259>   MOVEA.l tokeslist,A2
0002666E <AmiBlitz3.ab3@9260>   CLR.l tokeslist
00026672 <AmiBlitz3.ab3@9263>     CMPA.w #$0,A2
00026676 <AmiBlitz3.ab3@9264>      BEQ.w JL_0_6E32
0002667A <AmiBlitz3.ab3@9265>     MOVEA.l $8(A2),A3
0002667E <AmiBlitz3.ab3@9268>       CMPA.w #$0,A3
00026682 <AmiBlitz3.ab3@9269>        BEQ.w JL_0_6E24
00026684 <AmiBlitz3.ab3@9270>       MOVEA.l A3,A1
00026686 <AmiBlitz3.ab3@9271>       MOVEA.l (A3),A3
00026688 <AmiBlitz3.ab3@9272>       MOVEQ.l #$08,D0
0002668E <AmiBlitz3.ab3@9273>       MOVE.l mempool,a0
00026694 <AmiBlitz3.ab3@9274>       MOVEA.l _execbase,A6
00026698 <AmiBlitz3.ab3@9275>       JSR _FreePooled(A6)
0002669C <AmiBlitz3.ab3@9276> BRA.w JL_0_6E0E
0002669E <AmiBlitz3.ab3@9279>     MOVEA.l A2,A1
000266A0 <AmiBlitz3.ab3@9280>     MOVEA.l (A2),A2
000266A2 <AmiBlitz3.ab3@9281>     MOVEQ.l #$0C,D0
000266A8 <AmiBlitz3.ab3@9282>     MOVE.l mempool,a0
000266AE <AmiBlitz3.ab3@9283>     MOVEA.l _execbase,A6
000266B2 <AmiBlitz3.ab3@9284>     JSR _FreePooled(A6)
000266B6 <AmiBlitz3.ab3@9285> BRA.w JL_0_6E02
000266B8 <AmiBlitz3.ab3@9288> RTS
000266BC <AmiBlitz3.ab3@9292>   MOVEM.l D3-D5/A1-A6,-(A7)
000266BE <AmiBlitz3.ab3@9293>   MOVEA.l A1,A4
000266C0 <AmiBlitz3.ab3@9296>   MOVE.l (A2)+,D3
000266C4 <AmiBlitz3.ab3@9297>   MOVE.w $0(A4,D3.L),D5
000266C8 <AmiBlitz3.ab3@9298>    BPL.w JL_0_6E7A
000266CC <AmiBlitz3.ab3@9299>   TST.l $2C(A4)
000266D0 <AmiBlitz3.ab3@9300>    BEQ.w JL_0_6E5E
000266D6 <AmiBlitz3.ab3@9301>   TST.b debugmode
000266DA <AmiBlitz3.ab3@9302>    BNE.w JL_0_6E5E
000266DE <AmiBlitz3.ab3@9303>   CMP.l $2C(A4),D3
000266E2 <AmiBlitz3.ab3@9304>    BCC.w JL_0_6E7A
000266E6 <AmiBlitz3.ab3@9307>   BCLR #$F,D5
000266EA <AmiBlitz3.ab3@9308>   MOVE.w $2(A4,D3.L),D4
000266EE <AmiBlitz3.ab3@9309>   SUB.l $12(A4),D3
000266F2 <AmiBlitz3.ab3@9310>   ADD.l $28(A4),D3
000266F6 <AmiBlitz3.ab3@9311>   MOVEM.l D2/A2/A4,-(A7)
000266FA <AmiBlitz3.ab3@9312>    BSR.w JL_0_6E86
000266FE <AmiBlitz3.ab3@9313>   MOVEM.l (A7)+,D2/A2/A4
00026700 <AmiBlitz3.ab3@9316>   SUBQ.l #1,D2
00026704 <AmiBlitz3.ab3@9317>    BNE.w JL_0_6E3A
00026708 <AmiBlitz3.ab3@9318>   MOVEM.l (A7)+,D3-D5/A1-A6
0002670A <AmiBlitz3.ab3@9319> RTS
00026710 <AmiBlitz3.ab3@9323>   LEA tokeslist,A3
00026716 <AmiBlitz3.ab3@9324>   MOVEA.l _execbase,A6
00026718 <AmiBlitz3.ab3@9327>   MOVE.l (A3),D0
0002671C <AmiBlitz3.ab3@9328>    BEQ.w JL_0_6EAC
0002671E <AmiBlitz3.ab3@9329>   MOVEA.l D0,A3
00026722 <AmiBlitz3.ab3@9330>   CMP.w $4(A3),D4
00026726 <AmiBlitz3.ab3@9331>    BNE.w JL_0_6E90
0002672A <AmiBlitz3.ab3@9332>   CMP.w $6(A3),D5
0002672E <AmiBlitz3.ab3@9333>    BNE.w JL_0_6E90
00026732 <AmiBlitz3.ab3@9334> BRA.w JL_0_6ED0
00026734 <AmiBlitz3.ab3@9337>   MOVEQ.l #$0C,D0
00026736 <AmiBlitz3.ab3@9338>   MOVEQ.l #$01,D1
0002673C <AmiBlitz3.ab3@9339>   MOVE.l mempool,a0
00026740 <AmiBlitz3.ab3@9340>   JSR _AllocPooled(a6)
00026742 <AmiBlitz3.ab3@9342>   MOVEA.l D0,A3
00026748 <AmiBlitz3.ab3@9343>   MOVE.l tokeslist,(A3)
0002674E <AmiBlitz3.ab3@9344>   MOVE.l A3,tokeslist
00026752 <AmiBlitz3.ab3@9345>   MOVE.w D4,$4(A3)
00026756 <AmiBlitz3.ab3@9346>   MOVE.w D5,$6(A3)
0002675A <AmiBlitz3.ab3@9347>   CLR.l $8(A3)
0002675C <AmiBlitz3.ab3@9350>   MOVEQ.l #$08,D0
0002675E <AmiBlitz3.ab3@9351>   MOVEQ.l #$01,D1
00026764 <AmiBlitz3.ab3@9352>   MOVE.l mempool,a0
00026768 <AmiBlitz3.ab3@9353>   JSR _AllocPooled(a6)
0002676A <AmiBlitz3.ab3@9355>   MOVEA.l D0,A0
0002676E <AmiBlitz3.ab3@9356>   MOVE.l D3,$4(A0)
00026772 <AmiBlitz3.ab3@9357>   MOVE.l $8(A3),(A0)
00026776 <AmiBlitz3.ab3@9358>   MOVE.l A0,$8(A3)
00026778 <AmiBlitz3.ab3@9359>   MOVE.w D4,D1
0002677C <AmiBlitz3.ab3@9360> BRA.w searchinstr
00026780 <AmiBlitz3.ab3@9363> tokeslist: Ds.l 1
00026784 <AmiBlitz3.ab3@9376>   BEQ.w uselib2_org__skip
00026786 <AmiBlitz3.ab3@9377>   MOVE.l A1,-(A7)
00026788 <AmiBlitz3.ab3@9378>   ADDA.l D1,A1
0002678A <AmiBlitz3.ab3@9379>   ADDQ.w #6,A1
0002678C <AmiBlitz3.ab3@9382>     MOVE.w (A1)+,D1
00026790 <AmiBlitz3.ab3@9383>     BEQ.w uselib2_org__done
00026792 <AmiBlitz3.ab3@9384>     CMP.w D2,D1
00026796 <AmiBlitz3.ab3@9385>     BEQ.w uselib2_org__skip2
00026798 <AmiBlitz3.ab3@9386>     MOVE.l A1,-(A7)
0002679C <AmiBlitz3.ab3@9387>     BSR.w uselib
0002679E <AmiBlitz3.ab3@9388>     MOVEA.l (A7)+,A1
000267A0 <AmiBlitz3.ab3@9391>     ADDQ.w #2,A1
000267A4 <AmiBlitz3.ab3@9392> BRA.w uselib2_org__loop
000267A6 <AmiBlitz3.ab3@9395>   MOVEA.l (A7)+,A1
000267A8 <AmiBlitz3.ab3@9398> RTS
000267AE <AmiBlitz3.ab3@9402>   MOVEA.l libpointer,A1
000267B2 <AmiBlitz3.ab3@9405>   CMPA.w #$0,A1
000267B6 <AmiBlitz3.ab3@9406>    BEQ.b JL_0_6F36
000267BA <AmiBlitz3.ab3@9407>   CMP.w $4(A1),D1
000267BE <AmiBlitz3.ab3@9408>    BEQ.w JL_0_6F34
000267C0 <AmiBlitz3.ab3@9409>   MOVEA.l (A1),A1
000267C4 <AmiBlitz3.ab3@9410> BRA.w JL_0_6F20
000267C6 <AmiBlitz3.ab3@9413>   MOVEQ.l #-$01,D1
000267C8 <AmiBlitz3.ab3@9416> RTS
000267CC <AmiBlitz3.ab3@9420>   MOVEM.l d0/a2,-(a7)
000267CE <AmiBlitz3.ab3@9421>   MOVEQ #0,d0
000267D4 <AmiBlitz3.ab3@9422>   LEA instrtab+4,a2
000267D6 <AmiBlitz3.ab3@9423>   MOVE.w d1,d0
000267D8 <AmiBlitz3.ab3@9424>   ASL.l #3,d0
000267DC <AmiBlitz3.ab3@9425>   MOVE.l 0(a2,d0.l),a1                                     ;*8
000267E2 <AmiBlitz3.ab3@9426>   CMP.l #0,a1
000267E6 <AmiBlitz3.ab3@9427>   BNE JL_0_6F54b
000267EC <AmiBlitz3.ab3@9429>   MOVEA.l libpointer,A1
000267F0 <AmiBlitz3.ab3@9432>     CMPA.w #$0,A1
000267F4 <AmiBlitz3.ab3@9433>     BEQ.w noliberr
000267F8 <AmiBlitz3.ab3@9434>     CMP.w $4(A1),D1
000267FC <AmiBlitz3.ab3@9435>     BEQ.w JL_0_6F54
000267FE <AmiBlitz3.ab3@9436>    MOVEA.l (A1),A1
00026802 <AmiBlitz3.ab3@9437> BRA.w JL_0_6F3E
00026806 <AmiBlitz3.ab3@9440>   MOVE.l a1,0(a2,d0.l)
0002680A <AmiBlitz3.ab3@9443>   MOVEM.l (a7)+,d0/a2
0002680C <AmiBlitz3.ab3@9444> RTS
00026810 <AmiBlitz3.ab3@9447>   MOVEM.l d0-d1/a1,-(a7)
00026812 <AmiBlitz3.ab3@9448>   MOVEQ #0,d0
00026818 <AmiBlitz3.ab3@9449>   LEA instrtab,a1
0002681A <AmiBlitz3.ab3@9450>   MOVE.w d1,d0
0002681C <AmiBlitz3.ab3@9451>   ASL.l #3,d0
00026820 <AmiBlitz3.ab3@9452>   MOVE.l 0(a1,d0.l),a3
00026824 <AmiBlitz3.ab3@9453>   MOVE.l 4(a1,d0.l),a2
0002682A <AmiBlitz3.ab3@9454>   CMP.l #0,a3
0002682E <AmiBlitz3.ab3@9455>   BNE JL_0_6F92b
00026834 <AmiBlitz3.ab3@9457>   MOVEA.l libpointer,A2
00026838 <AmiBlitz3.ab3@9460>   CMPA.w #$0,A2
0002683C <AmiBlitz3.ab3@9461>   BEQ.w notokerr
00026840 <AmiBlitz3.ab3@9462>   CMP.w $E(A2),D1
00026844 <AmiBlitz3.ab3@9463>   BCS.w JL_0_6FB8
00026848 <AmiBlitz3.ab3@9464>   CMP.w $10(A2),D1
0002684C <AmiBlitz3.ab3@9465>   BCC.w JL_0_6FB8
00026850 <AmiBlitz3.ab3@9466>   LEA $30(A2),A3
00026854 <AmiBlitz3.ab3@9467>   TST.w $4(A2)
00026858 <AmiBlitz3.ab3@9468>   BPL.w JL_0_6FA6
0002685C <AmiBlitz3.ab3@9471>     CMP.w $E(A2),D1
00026860 <AmiBlitz3.ab3@9472>     BEQ.w JL_0_6F92
00026862 <AmiBlitz3.ab3@9473>     SUBQ.w #1,D1
00026866 <AmiBlitz3.ab3@9474>     MOVEA.l $2(A3),A3
0002686A <AmiBlitz3.ab3@9475> BRA.w JL_0_6F80
0002686E <AmiBlitz3.ab3@9478>   MOVE.l a3,0(a1,d0.l)
00026872 <AmiBlitz3.ab3@9479>   MOVE.l a2,4(a1,d0.l)
00026876 <AmiBlitz3.ab3@9482>   MOVEM.l (a7)+,d0-d1/a1
0002687A <AmiBlitz3.ab3@9483>   MOVEM.l D1/A1-a3,-(A7)
0002687E <AmiBlitz3.ab3@9484>   CMP.w #1,(a3)
00026882 <AmiBlitz3.ab3@9485>   BNE.s ex10
0002688A <AmiBlitz3.ab3@9486>   CMP.l #$12345678,$e(a3)
0002688E <AmiBlitz3.ab3@9487>   BNE.s ex10
00026894 <AmiBlitz3.ab3@9488>   CMP.w #$ffff,$16(a3)
00026898 <AmiBlitz3.ab3@9489>   BNE.s ex10
0002689C <AmiBlitz3.ab3@9490>   MOVE.l $12(a3),d1
000268A0 <AmiBlitz3.ab3@9491>   BEQ.s ex10
000268A6 <AmiBlitz3.ab3@9492>   LEA pluginbase,a3
000268AA <AmiBlitz3.ab3@9494> JMP 0(a2,d1.l)                                             ;plugin
000268AE <AmiBlitz3.ab3@9497>   MOVEM.l (A7)+,D1/A1-a3
000268B4 <AmiBlitz3.ab3@9498>   JSR stripspaces
000268B6 <AmiBlitz3.ab3@9499>   MOVEQ #0,d0
000268B8 <AmiBlitz3.ab3@9500>   MOVE.b (a5)+,d0
000268BE <AmiBlitz3.ab3@9501>   MOVE.w d0,lastchar
000268C0 <AmiBlitz3.ab3@9502>   ADDQ.l #4,a7
000268C2 <AmiBlitz3.ab3@9503> RTS
000268C4 <AmiBlitz3.ab3@9507>   MOVEA.l A2,A1
000268CA <AmiBlitz3.ab3@9508>   CLR.b newmode
000268CE <AmiBlitz3.ab3@9509>   MOVE.w $4(A1),D1
000268D2 <AmiBlitz3.ab3@9512>   BSR.w uselib3
000268D6 <AmiBlitz3.ab3@9513>   MOVEM.l (A7)+,D1/A1-a3
000268D8 <AmiBlitz3.ab3@9514> RTS
000268DE <AmiBlitz3.ab3@9517>   MOVE.w globalvarpointer,-(a7)
000268E6 <AmiBlitz3.ab3@9518>   MOVE.w #$8004,globalvarpointer
000268EA <AmiBlitz3.ab3@9519>   BSR.w uselib3
000268F0 <AmiBlitz3.ab3@9520>   MOVE.w (a7)+,globalvarpointer
000268F4 <AmiBlitz3.ab3@9521>   MOVEM.l (A7)+,D1/A1-a3
000268F6 <AmiBlitz3.ab3@9522> RTS
000268FA <AmiBlitz3.ab3@9525>     CMP.w $E(A2),D1
000268FE <AmiBlitz3.ab3@9526>     BEQ.w JL_0_6F92
00026900 <AmiBlitz3.ab3@9527>     SUBQ.w #1,D1
00026904 <AmiBlitz3.ab3@9528>     MOVEA.l $2(A3),A3
00026908 <AmiBlitz3.ab3@9529> BRA.w JL_0_6FA6
0002690A <AmiBlitz3.ab3@9532>   MOVEA.l (A2),A2
0002690E <AmiBlitz3.ab3@9533> BRA.w JL_0_6F5C
00026914 <AmiBlitz3.ab3@9536> JMP writeword
00026918 <AmiBlitz3.ab3@9539> ptr_acidlibs:   Ds.l 1                                     ;deflibsat org source
0002691C <AmiBlitz3.ab3@9540> ptr_deflibs:    Ds.l 1                                     ;acidlibsat org source
00026920 <AmiBlitz3.ab3@9541> ptr_userlibs:   Ds.l 1                                     ;blitzlibsat org source  ;;start of blitzlibs list!
00026922 <AmiBlitz3.ab3@9547>   TST.l D0
00026926 <AmiBlitz3.ab3@9548>   BEQ.w exit_loadlibsfile
00026928 <AmiBlitz3.ab3@9549>     MOVE.l D0,D6                                           ;d6=len
0002692E <AmiBlitz3.ab3@9550>     MOVEA.l _dosbase,A6
00026934 <AmiBlitz3.ab3@9551>     MOVE.l #HUNK_RELOC_16__MODE_OLDFILE,D2
00026938 <AmiBlitz3.ab3@9552>     JSR _Open(A6)
0002693A <AmiBlitz3.ab3@9553>     MOVE.l D0,D7
0002693E <AmiBlitz3.ab3@9554>     BEQ.w exit_loadlibsfile
00026940 <AmiBlitz3.ab3@9555>       MOVE.l D6,D0
00026942 <AmiBlitz3.ab3@9556>       MOVEQ.l #$01,D1
00026948 <AmiBlitz3.ab3@9557>       MOVEA.l _execbase,A6
0002694E <AmiBlitz3.ab3@9558>       MOVE.l mempool,a0
00026952 <AmiBlitz3.ab3@9559>       JSR _AllocPooled(a6)
00026954 <AmiBlitz3.ab3@9560>       MOVE.l D0,D5                                         ;start address
00026956 <AmiBlitz3.ab3@9562>       MOVE.l D7,D1                                         ; handle
00026958 <AmiBlitz3.ab3@9563>       MOVE.l D5,D2                                         ; buffer addr
0002695A <AmiBlitz3.ab3@9564>       MOVE.l D6,D3                                         ; size
00026960 <AmiBlitz3.ab3@9565>       MOVEA.l _dosbase,A6
00026964 <AmiBlitz3.ab3@9566>       JSR _Read(A6)
00026966 <AmiBlitz3.ab3@9567>       MOVE.l D7,D1
0002696A <AmiBlitz3.ab3@9568>       JSR _Close(A6)
0002696C <AmiBlitz3.ab3@9570>       MOVEA.l D5,A0                                        ; buffer addr
0002696E <AmiBlitz3.ab3@9576>         MOVE.l (A0)+,D0                                    ; naechster Longwert nach DO
00026972 <AmiBlitz3.ab3@9577>         BEQ.b JL_0_7044                                    ; wenn <> 0, dann
00026976 <AmiBlitz3.ab3@9578>           LEA $20(A0),A1                                   ;   lade inhalt von D0+40bytes nach A1
00026978 <AmiBlitz3.ab3@9579>           MOVE.l A1,(A3)                                   ;   kopiere Adresse in A1 zum libpointer
0002697A <AmiBlitz3.ab3@9580>           MOVEA.l A1,A3                                    ;   kopiere A1 nach A3
0002697C <AmiBlitz3.ab3@9581>           ADDA.l D0,A0                                     ;   addiere inhalt von D0 zu A0 hinzu
00026980 <AmiBlitz3.ab3@9582>           MOVE.l -$4(A1),D0                                ;   hole die 4bytes vor nach D0
00026982 <AmiBlitz3.ab3@9583>           ADD.l D0,D0                                      ;   verdoppele D0
00026984 <AmiBlitz3.ab3@9584>           ADD.l D0,D0                                      ;   verdoppele D0 nochmal
00026988 <AmiBlitz3.ab3@9585>           MOVE.l D0,$6(A1)                                 ;   schreibe D0 6bytes nach A1
0002698C <AmiBlitz3.ab3@9586>           CLR.l $20(A1)                                    ;   loesche D0+40bytes
00026990 <AmiBlitz3.ab3@9587>           LEA $C(A1,D0.L),A2                               ;   lade inhalt von (A1)+D0+$C nach A2
00026992 <AmiBlitz3.ab3@9588>           CMPA.l A0,A2
00026996 <AmiBlitz3.ab3@9589>           BCC.b JL_0_7010                                  ; wenn A0=>A2
0002699C <AmiBlitz3.ab3@9590>             MOVE.l -$8(A2),$20(A1)                         ;
000269A0 <AmiBlitz3.ab3@9591>             MOVE.l A2,$24(A1)                              ;
000269A4 <AmiBlitz3.ab3@9592> BRA.w JL_0_7010
000269A6 <AmiBlitz3.ab3@9595>       MOVE.l D5,D0
000269A8 <AmiBlitz3.ab3@9598> RTS
000269D2 <AmiBlitz3.ab3@9602>   !basic
00026A46 <AmiBlitz3.ab3@9603>    tempmapping$ = dos_AddPart{my_systemdir$,"token_mapping_userlibs.txt"}
00026A7A <AmiBlitz3.ab3@9604>    dos_Delete{tempmapping$}
00026ABE <AmiBlitz3.ab3@9605>    fid.l = file_Open{tempmapping$,#file_forcewrite}
00026ADC <AmiBlitz3.ab3@9606>   !asm
00026AE2 <AmiBlitz3.ab3@9608>   LEA libpointer,A3
00026AE8 <AmiBlitz3.ab3@9612>   MOVE.l size_deflibs,D0
00026AEE <AmiBlitz3.ab3@9613>   MOVE.l deflib,d1
00026AF2 <AmiBlitz3.ab3@9614>   BEQ 'l1
00026AF6 <AmiBlitz3.ab3@9615> BRA 'l2
00026AFC <AmiBlitz3.ab3@9618>   MOVE.l #str_path_deflibs,D1
00026B00 <AmiBlitz3.ab3@9621>   BSR.w load_libsfile
00026B06 <AmiBlitz3.ab3@9622>   MOVE.l D0,ptr_deflibs
00026B0C <AmiBlitz3.ab3@9625>   MOVE.l size_acidlibs,D0
00026B12 <AmiBlitz3.ab3@9626>   MOVE.l #str_path_acidlibs,D1
00026B16 <AmiBlitz3.ab3@9627>   BSR.w load_libsfile
00026B1C <AmiBlitz3.ab3@9628>   MOVE.l D0,ptr_acidlibs
00026B1E <AmiBlitz3.ab3@9632>   CLR.l (A3)
00026B24 <AmiBlitz3.ab3@9633>   MOVE.l A3,ptr_userlibs
00026B2A <AmiBlitz3.ab3@9638>   LEA str_libfilename,A0
00026B30 <AmiBlitz3.ab3@9639>   LEA str_path_userlibs,A1
00026B32 <AmiBlitz3.ab3@9642>     MOVE.b (A1)+,(A0)+
00026B36 <AmiBlitz3.ab3@9643>   BNE.b JL_0_708E
00026B38 <AmiBlitz3.ab3@9645>   SUBQ.w #1,A0
00026B3C <AmiBlitz3.ab3@9646>   MOVE.b #$2F,(A0)+
00026B3E <AmiBlitz3.ab3@9649>   MOVE.l A0,-(A7)                                          ; -- store str_path_userlibs in A7
00026B44 <AmiBlitz3.ab3@9651>   LEA ptr_userlibs_list,A2
00026B4A <AmiBlitz3.ab3@9652>   MOVEA.l ptr_userlibs,A3
00026B50 <AmiBlitz3.ab3@9653>   MOVEA.l _dosbase,A6
00026B52 <AmiBlitz3.ab3@9658>       MOVE.l (A2),D0                                       ; addresse aus liste nach D0
00026B56 <AmiBlitz3.ab3@9659>       BNE.b JL_0_70C6                                      ; wenn nix drin, processing ueberspringen
00026B58 <AmiBlitz3.ab3@9661>       CLR.l (A3)
00026B5A <AmiBlitz3.ab3@9662>       ADDQ.w #4,A7
00026B84 <AmiBlitz3.ab3@9663>       !basic
00026B98 <AmiBlitz3.ab3@9664>       If fid<>-1
00026BA2 <AmiBlitz3.ab3@9665>         file_Close{fid}
00026BAE <AmiBlitz3.ab3@9666>         fid = -1
00026BCC <AmiBlitz3.ab3@9668>       !asm
00026BD0 <AmiBlitz3.ab3@9669> BRA.w process_libraries
00026BD2 <AmiBlitz3.ab3@9672>       MOVEA.l D0,A2                                        ; addresse zureuck nach A2
00026BD6 <AmiBlitz3.ab3@9673>       TST.w $4(A2)                                         ; naechste addresse pruefen
00026BDA <AmiBlitz3.ab3@9674>     BEQ.b JL_0_70BA
00026BDE <AmiBlitz3.ab3@9676>     LEA $6(A2),A1
00026BE0 <AmiBlitz3.ab3@9677>     MOVEA.l (A7),A0
00026BE2 <AmiBlitz3.ab3@9680>       MOVE.b (A1)+,(A0)+
00026BE6 <AmiBlitz3.ab3@9681>     BNE.w JL_0_70D4
00026BE8 <AmiBlitz3.ab3@9685>     MOVE.l A0,-(A7)
00026BEE <AmiBlitz3.ab3@9686>     MOVE.l #str_libfilename,D1
00026BF0 <AmiBlitz3.ab3@9687>     MOVEQ.l #-$02,D2
00026BF6 <AmiBlitz3.ab3@9688>     MOVEA.l _dosbase,A6
00026BFA <AmiBlitz3.ab3@9689>      JSR _Lock(A6)
00026BFC <AmiBlitz3.ab3@9690>     MOVE.l D0,D1
00026C00 <AmiBlitz3.ab3@9691>      BEQ.w JL_0_7156
00026C02 <AmiBlitz3.ab3@9692>     MOVEA.l (A7),A0
00026C08 <AmiBlitz3.ab3@9693>     MOVE.b #$2F,-$1(A0)
00026C0A <AmiBlitz3.ab3@9696>     MOVE.l D1,-(A7)
00026C10 <AmiBlitz3.ab3@9697>     MOVE.l #ptr_parameterstore,D2
00026C16 <AmiBlitz3.ab3@9698>     MOVEA.l _dosbase,A6
00026C1A <AmiBlitz3.ab3@9699>     JSR _Examine(A6)
00026C1C <AmiBlitz3.ab3@9700>     TST.l D0
00026C20 <AmiBlitz3.ab3@9701>      BEQ.w JL_0_7150
00026C26 <AmiBlitz3.ab3@9704>     LEA fib_FileName,A0
00026C2A <AmiBlitz3.ab3@9705>     BSR.w check_for_infoextention
00026C2E <AmiBlitz3.ab3@9706>     BEQ.w JL_0_7150
00026C58 <AmiBlitz3.ab3@9709>     !basic
00026CDC <AmiBlitz3.ab3@9710>       Poke$ ?str_libfilename,dos_AddPart{Peek$(?str_path_userlibs),Peek$(?fib_FileName)}
00026CFA <AmiBlitz3.ab3@9711>     !asm
00026D00 <AmiBlitz3.ab3@9712>     MOVE.l #str_libfilename,D1
00026D04 <AmiBlitz3.ab3@9713>     BSR.w open_userlibfile
00026D06 <AmiBlitz3.ab3@9716>     MOVE.l (A7)+,D1
00026D0C <AmiBlitz3.ab3@9717>     MOVEA.l _dosbase,A6
00026D10 <AmiBlitz3.ab3@9718>     JSR _UnLock(A6)
00026D12 <AmiBlitz3.ab3@9721>     ADDQ.w #4,A7
00026D16 <AmiBlitz3.ab3@9722> BRA.w JL_0_70BA
00026D1C <AmiBlitz3.ab3@9725>   MOVE.l #HUNK_RELOC_16__MODE_OLDFILE,D2
00026D22 <AmiBlitz3.ab3@9726>   MOVEA.l _dosbase,A6
00026D26 <AmiBlitz3.ab3@9727>    JSR _Open(A6)
00026D28 <AmiBlitz3.ab3@9728>   MOVE.l D0,D7
00026D2C <AmiBlitz3.ab3@9729>    BEQ.w exit_userlibfile
00026D2E <AmiBlitz3.ab3@9732>   MOVE.l D7,D1                                             ; filehandle
00026D34 <AmiBlitz3.ab3@9733>   MOVE.l #optstuff,D2                                     ; buffer
00026D3A <AmiBlitz3.ab3@9734>   MOVEA.l _dosbase,A6
00026D3C <AmiBlitz3.ab3@9735>   MOVEQ.l #$20,D3                                          ; size
00026D40 <AmiBlitz3.ab3@9736>   JSR _Read(A6)
00026D46 <AmiBlitz3.ab3@9739>   MOVE.l optstuff+28,D6
00026D48 <AmiBlitz3.ab3@9740>   LSL.l #2,D6
00026D4A <AmiBlitz3.ab3@9741>   MOVE.l D6,D0
00026D4C <AmiBlitz3.ab3@9742>   MOVEQ.l #$01,D1
00026D52 <AmiBlitz3.ab3@9743>   MOVEA.l _execbase,A6
00026D58 <AmiBlitz3.ab3@9744>   MOVE.l mempool,a0
00026D5C <AmiBlitz3.ab3@9745>   JSR _AllocPooled(a6)
00026D5E <AmiBlitz3.ab3@9746>   MOVEA.l D0,A5
00026D64 <AmiBlitz3.ab3@9749>   MOVEA.l _dosbase,A6
00026D66 <AmiBlitz3.ab3@9750>   MOVE.l D7,D1                                             ; filehandle
00026D68 <AmiBlitz3.ab3@9751>   MOVE.l A5,D2                                             ; buffer
00026D6A <AmiBlitz3.ab3@9752>   MOVE.l D6,D3                                             ; size
00026D6E <AmiBlitz3.ab3@9753>    JSR _Read(A6)
00026D70 <AmiBlitz3.ab3@9754>   MOVE.l A5,(A3)
00026D72 <AmiBlitz3.ab3@9756>   MOVE.l A5,d0
00026D74 <AmiBlitz3.ab3@9758>   MOVEA.l A5,A3
00026D78 <AmiBlitz3.ab3@9759>   MOVE.l D6,$6(A5)
00026D7C <AmiBlitz3.ab3@9760>   CLR.l $20(A5)
00026DA6 <AmiBlitz3.ab3@9762>   !basic
00026DB0 <AmiBlitz3.ab3@9764>   addr_libnum.l = PutD0 + 4
00026DC4 <AmiBlitz3.ab3@9765>   If fid<>-1
00026E64 <AmiBlitz3.ab3@9766>     currentlib$ = LSet$(Peek.s(?fib_FileName),30)+";"+LSet$(Get_Libinfo{addr_libnum},30) ;+";"+Str$(Peek.w(addr_libnum))
00026E96 <AmiBlitz3.ab3@9767>     file_WriteLine{fid,currentlib$}
00026EB4 <AmiBlitz3.ab3@9769>   !asm
00026EB6 <AmiBlitz3.ab3@9772>   MOVE.l D7,D1                                             ; filehandle
00026EBC <AmiBlitz3.ab3@9773>   MOVE.l #optstuff,D2                                     ; buffer
00026EBE <AmiBlitz3.ab3@9774>   MOVEQ.l #$0C,D3                                          ; size
00026EC4 <AmiBlitz3.ab3@9775>   MOVEA.l _dosbase,A6
00026EC8 <AmiBlitz3.ab3@9776>    JSR _Read(A6)
00026ECE <AmiBlitz3.ab3@9778>   CMP.l #$C,D0
00026ED2 <AmiBlitz3.ab3@9779>    BCS.w close_and_exit_userlibfile
00026ED8 <AmiBlitz3.ab3@9782>   MOVE.l optstuff+4,D0
00026EDC <AmiBlitz3.ab3@9783>   MOVE.l D0,$20(A5)
00026EDE <AmiBlitz3.ab3@9784>   LSL.l #2,D0
00026EE0 <AmiBlitz3.ab3@9785>   MOVE.l D0,D5
00026EE2 <AmiBlitz3.ab3@9786>   MOVEQ.l #$01,D1
00026EE8 <AmiBlitz3.ab3@9787>   MOVEA.l _execbase,A6
00026EEE <AmiBlitz3.ab3@9788>   MOVE.l mempool,a0
00026EF2 <AmiBlitz3.ab3@9789>   JSR _AllocPooled(a6)
00026EF8 <AmiBlitz3.ab3@9791>   MOVEA.l _dosbase,A6
00026EFC <AmiBlitz3.ab3@9792>   MOVE.l D0,$24(A5)
00026EFE <AmiBlitz3.ab3@9793>   MOVE.l D7,D1
00026F00 <AmiBlitz3.ab3@9794>   MOVE.l D0,D2
00026F02 <AmiBlitz3.ab3@9795>   MOVE.l D5,D3
00026F06 <AmiBlitz3.ab3@9796>   JSR _Read(A6)
00026F08 <AmiBlitz3.ab3@9799>   MOVE.l D7,D1
00026F0E <AmiBlitz3.ab3@9800>   MOVEA.l _dosbase,A6
00026F12 <AmiBlitz3.ab3@9801> JMP _Close(A6)
00026F14 <AmiBlitz3.ab3@9804> RTS
00026F1A <AmiBlitz3.ab3@9810>   CLR.w number_of_objects
00026F20 <AmiBlitz3.ab3@9811>   MOVEA.l end_of_tokenlist,A3
00026F26 <AmiBlitz3.ab3@9812>   MOVEA.l libpointer,A2
00026F2A <AmiBlitz3.ab3@9815>     CMPA.w #$0,A2
00026F2E <AmiBlitz3.ab3@9816>     BEQ.w JL_0_72D8                                        ; <-- abbruch mit RTS
00026F32 <AmiBlitz3.ab3@9818>     MOVE.w $4(A2),D7                                       ; <-- get tokennumber
00026F36 <AmiBlitz3.ab3@9819>     BMI.w JL_0_7226
00026F38 <AmiBlitz3.ab3@9820>       LSL.w #7,D7
00026F3A <AmiBlitz3.ab3@9821>       ADDQ.w #1,D7
00026F3E <AmiBlitz3.ab3@9822>       MOVE.w D7,$E(A2)
00026F42 <AmiBlitz3.ab3@9825>     LEA $30(A2),A1
00026F48 <AmiBlitz3.ab3@9826>     LEA temp1,A4
00026F4A <AmiBlitz3.ab3@9829>       MOVE.w (A1),D0
00026F4E <AmiBlitz3.ab3@9830>       BMI.w JL_0_72AE
00026F50 <AmiBlitz3.ab3@9831>       MOVE.l A1,(A4)
00026F52 <AmiBlitz3.ab3@9832>       MOVEA.l A1,A4
00026F54 <AmiBlitz3.ab3@9833>       ADDQ.w #2,A4
00026F56 <AmiBlitz3.ab3@9834>       ADDQ.w #6,A1
00026F5A <AmiBlitz3.ab3@9835>       CMP.w #$8,D0
00026F5E <AmiBlitz3.ab3@9836>       BEQ.w JL_0_7290
00026F62 <AmiBlitz3.ab3@9837>         ANDI.w #$F,D0
00026F66 <AmiBlitz3.ab3@9838>         BNE.w JL_0_725C
00026F6A <AmiBlitz3.ab3@9839>           BSR.w skiplibreg
00026F6E <AmiBlitz3.ab3@9840>           LEA $C(A1),A1
00026F70 <AmiBlitz3.ab3@9841>           ADDQ.w #1,D7
00026F74 <AmiBlitz3.ab3@9842> BRA.w JL_0_7230
00026F78 <AmiBlitz3.ab3@9845>     BTST #$2,D0
00026F7C <AmiBlitz3.ab3@9846>     BEQ.w JL_0_7274
00026F7E <AmiBlitz3.ab3@9847>       ADDQ.w #4,A1
00026F80 <AmiBlitz3.ab3@9850>         TST.b (A1)+
00026F84 <AmiBlitz3.ab3@9851>       BPL.w JL_0_7266
00026F88 <AmiBlitz3.ab3@9852>       BSR.w aligna1
00026F8C <AmiBlitz3.ab3@9853> BRA.w JL_0_7290
00026F8E <AmiBlitz3.ab3@9856>       MOVE.w (A1)+,D0
00026F92 <AmiBlitz3.ab3@9857>       BMI.w JL_0_7290
00026F96 <AmiBlitz3.ab3@9858>       ANDI.w #$FF,D0
00026F98 <AmiBlitz3.ab3@9859>       ADDA.w D0,A1
00026F9C <AmiBlitz3.ab3@9860>       BSR.w aligna1
00026FA0 <AmiBlitz3.ab3@9861>       BSR.w skiplibreg
00026FA4 <AmiBlitz3.ab3@9862>       LEA $C(A1),A1
00026FA8 <AmiBlitz3.ab3@9863> BRA.w JL_0_7274
00026FAA <AmiBlitz3.ab3@9866>     MOVE.l A1,(A3)
00026FAC <AmiBlitz3.ab3@9867>     MOVEA.l A1,A3
00026FAE <AmiBlitz3.ab3@9868>     ADDQ.w #4,A1
00026FB0 <AmiBlitz3.ab3@9869>     MOVE.w D7,(A1)+
00026FB2 <AmiBlitz3.ab3@9872>       TST.b (A1)+
00026FB6 <AmiBlitz3.ab3@9873>     BNE.w JL_0_7298
00026FB8 <AmiBlitz3.ab3@9876>       TST.b (A1)+
00026FBC <AmiBlitz3.ab3@9877>     BNE.w JL_0_729E
00026FC0 <AmiBlitz3.ab3@9879>     BSR.w aligna1
00026FC2 <AmiBlitz3.ab3@9880>     ADDQ.w #1,D7
00026FC6 <AmiBlitz3.ab3@9881> BRA.w JL_0_7230
00026FCA <AmiBlitz3.ab3@9884>     TST.w $4(A2)
00026FCE <AmiBlitz3.ab3@9885>      BMI.w JL_0_72BA
00026FD2 <AmiBlitz3.ab3@9886>     MOVE.w D7,$10(A2)
00026FD4 <AmiBlitz3.ab3@9889>     ADDQ.w #2,A1
00026FD6 <AmiBlitz3.ab3@9890>     TST.l (A1)+
00026FDA <AmiBlitz3.ab3@9891>      BEQ.w JL_0_72CC
00026FE0 <AmiBlitz3.ab3@9892>     ADDQ.w #1,number_of_objects
00026FE4 <AmiBlitz3.ab3@9893>     LEA $16(A1),A1
00026FE6 <AmiBlitz3.ab3@9896>     SUBA.l A2,A1
00026FEA <AmiBlitz3.ab3@9897>     MOVE.l A1,$12(A2)
00026FEC <AmiBlitz3.ab3@9898>     MOVEA.l (A2),A2
00026FF0 <AmiBlitz3.ab3@9899> BRA.w JL_0_720E
00026FF2 <AmiBlitz3.ab3@9902>   CLR.l (A3)
00026FF8 <AmiBlitz3.ab3@9903> 
00026FFE <AmiBlitz3.ab3@9904>   MOVE.l A7,errstack
00027008 <AmiBlitz3.ab3@9905>   MOVE.l #AL_0_730E,errcont
00027010 <AmiBlitz3.ab3@9906>   MOVE.w #$FFFF,ezerr
00027014 <AmiBlitz3.ab3@9907>   MOVE.w #$FFFA,D1
00027018 <AmiBlitz3.ab3@9908>    BSR.w JL_0_6F38
0002701E <AmiBlitz3.ab3@9909>   MOVE.l A1,tempvm
00027022 <AmiBlitz3.ab3@9910>   MOVE.w #$FDA7,D1
00027026 <AmiBlitz3.ab3@9911>    BSR.w JL_0_6F38
0002702C <AmiBlitz3.ab3@9912>   MOVE.l A1,ffplib
0002702E <AmiBlitz3.ab3@9915> RTS
00027032 <AmiBlitz3.ab3@9918> ffplib:  Ds.l 1
00027034 <AmiBlitz3.ab3@9922>     TST.w (A1)+
00027038 <AmiBlitz3.ab3@9923>     BEQ.w JL_0_7320
0002703A <AmiBlitz3.ab3@9924>     ADDQ.w #2,A1
0002703E <AmiBlitz3.ab3@9925> BRA.w skiplibreg
00027040 <AmiBlitz3.ab3@9928> RTS
00027042 <AmiBlitz3.ab3@9932>   EXG.l A1,A0
00027046 <AmiBlitz3.ab3@9933>   BSR.w aligna1
00027048 <AmiBlitz3.ab3@9934>   EXG.l A1,A0
0002704A <AmiBlitz3.ab3@9935> RTS
0002704C <AmiBlitz3.ab3@9938>   EXG.l D0,A1
0002704E <AmiBlitz3.ab3@9939>   ADDQ.l #1,D0
00027052 <AmiBlitz3.ab3@9940>   BCLR #$0,D0
00027054 <AmiBlitz3.ab3@9941>   EXG.l D0,A1
00027056 <AmiBlitz3.ab3@9942> RTS
0002705C <AmiBlitz3.ab3@9946>   MOVEA.l _execbase,A6
00027062 <AmiBlitz3.ab3@9947>   MOVEA.l ptr_userlibs,A2
00027064 <AmiBlitz3.ab3@9948>   MOVE.l (A2),D0
00027066 <AmiBlitz3.ab3@9949>   CLR.l (A2)
00027068 <AmiBlitz3.ab3@9950>   MOVEA.l D0,A2
0002706C <AmiBlitz3.ab3@9953>     CMPA.w #$0,A2
00027070 <AmiBlitz3.ab3@9954>     BEQ.w free_userlib
00027074 <AmiBlitz3.ab3@9956>     MOVE.l $20(A2),D0
00027078 <AmiBlitz3.ab3@9957>     BEQ.b JL_0_7360
0002707A <AmiBlitz3.ab3@9958>       LSL.l #2,D0
00027080 <AmiBlitz3.ab3@9959>       MOVE.l mempool,a0
00027084 <AmiBlitz3.ab3@9960>       MOVEA.l $24(A2),A1
00027088 <AmiBlitz3.ab3@9961>       JSR _FreePooled(A6)
0002708A <AmiBlitz3.ab3@9964>     MOVEA.l A2,A1
0002708E <AmiBlitz3.ab3@9965>     MOVE.l $6(A1),D0
00027094 <AmiBlitz3.ab3@9966>     MOVE.l mempool,a0
00027096 <AmiBlitz3.ab3@9967>     MOVEA.l (A2),A2
0002709C <AmiBlitz3.ab3@9968>     MOVEA.l _execbase,A6
000270A0 <AmiBlitz3.ab3@9969>     JSR _FreePooled(A6)
000270A4 <AmiBlitz3.ab3@9970> BRA.w JL_0_7348
000270A8 <AmiBlitz3.ab3@9974>   BSR.w free_userlibs
000270AE <AmiBlitz3.ab3@9975>   MOVEA.l _execbase,A6
000270B4 <AmiBlitz3.ab3@9976>   CLR.l libpointer
000270BA <AmiBlitz3.ab3@9977>   MOVEA.l end_of_tokenlist,A0
000270BC <AmiBlitz3.ab3@9978>   CLR.l (A0)
000270C2 <AmiBlitz3.ab3@9980>   MOVE.l size_acidlibs,D0
000270C6 <AmiBlitz3.ab3@9981>   BEQ.b JL_0_73A2
000270CC <AmiBlitz3.ab3@9982>     MOVE.l ptr_acidlibs,D1
000270D0 <AmiBlitz3.ab3@9983>     BEQ.b JL_0_73A2
000270D6 <AmiBlitz3.ab3@9984>       CLR.l ptr_acidlibs
000270D8 <AmiBlitz3.ab3@9985>       MOVEA.l D1,A1
000270DE <AmiBlitz3.ab3@9986>       MOVE.l mempool,a0
000270E4 <AmiBlitz3.ab3@9987>       MOVEA.l _execbase,A6
000270E8 <AmiBlitz3.ab3@9988>       JSR _FreePooled(A6)                                 ; free acidlibs
000270EE <AmiBlitz3.ab3@9991>   MOVE.l size_deflibs,D0
000270F2 <AmiBlitz3.ab3@9992>   BEQ.b JL_0_73BE
000270F8 <AmiBlitz3.ab3@9993>     MOVE.l ptr_deflibs,D1
000270FC <AmiBlitz3.ab3@9994>     BEQ.b JL_0_73BE
00027102 <AmiBlitz3.ab3@9995>       CLR.l ptr_deflibs                                    ; d0: memorySize
00027104 <AmiBlitz3.ab3@9996>       MOVEA.l D1,A1                                        ; a1: memory
0002710A <AmiBlitz3.ab3@9997>       MOVE.l mempool,a0                                    ; a0: poolHeader
00027110 <AmiBlitz3.ab3@9998>       MOVEA.l _execbase,A6
00027114 <AmiBlitz3.ab3@9999>       JSR _FreePooled(A6)                                  ; free deflibs
00027116 <AmiBlitz3.ab3@10002> RTS
0002711C <AmiBlitz3.ab3@10006>   MOVEA.l currentmacroaddr,A0
0002711E <AmiBlitz3.ab3@10007>   MOVEA.l (A0),A2
00027120 <AmiBlitz3.ab3@10008>   CLR.l (A0)
00027126 <AmiBlitz3.ab3@10009>   MOVEA.l _execbase,A6
0002712A <AmiBlitz3.ab3@10012>     CMPA.w #$0,A2
0002712E <AmiBlitz3.ab3@10013>     BEQ.w JL_0_73FA
00027130 <AmiBlitz3.ab3@10014>     MOVEQ.l #$00,D0
00027134 <AmiBlitz3.ab3@10015>     MOVE.w $8(A2),D0
00027138 <AmiBlitz3.ab3@10016>     BEQ.w JL_0_73E8
0002713C <AmiBlitz3.ab3@10017>     MOVEA.l $4(A2),A1
00027142 <AmiBlitz3.ab3@10018>     MOVE.l mempool,a0
00027146 <AmiBlitz3.ab3@10019>     JSR _FreePooled(A6)
00027148 <AmiBlitz3.ab3@10022>     MOVEA.l A2,A1
0002714A <AmiBlitz3.ab3@10023>     MOVEA.l (A2),A2
0002714C <AmiBlitz3.ab3@10024>     MOVEQ.l #$00,D0
00027150 <AmiBlitz3.ab3@10025>     MOVE.b $C(A1),D0
00027156 <AmiBlitz3.ab3@10026>     MOVE.l mempool2,a0
0002715A <AmiBlitz3.ab3@10027>     JSR _FreePooled(A6)
0002715E <AmiBlitz3.ab3@10028> BRA.w JL_0_73CE
00027160 <AmiBlitz3.ab3@10031> RTS
00027166 <AmiBlitz3.ab3@10035>   MOVEA.l templabel,A2
0002716C <AmiBlitz3.ab3@10036>   CLR.l templabel
0002716E <AmiBlitz3.ab3@10037> RTS
00027174 <AmiBlitz3.ab3@10040>   MOVEA.l _execbase,A6                                     ;??looks like dead code?
00027178 <AmiBlitz3.ab3@10043>     CMPA.w #$0,A2
0002717C <AmiBlitz3.ab3@10044>     BEQ.w JL_0_7426
0002717E <AmiBlitz3.ab3@10045>     MOVEQ.l #$00,D0
00027182 <AmiBlitz3.ab3@10046>     MOVE.b $E(A2),D0                                       ;labeltemp
00027184 <AmiBlitz3.ab3@10047>     MOVEA.l A2,A1
00027186 <AmiBlitz3.ab3@10048>     MOVEA.l (A2),A2
0002718C <AmiBlitz3.ab3@10049>     MOVE.l mempool2,a0
00027190 <AmiBlitz3.ab3@10051> BRA.w JL_0_740C
00027192 <AmiBlitz3.ab3@10054> RTS
00027198 <AmiBlitz3.ab3@10058>   MOVEA.l data1,A4
0002719E <AmiBlitz3.ab3@10059>   CMPA.l data2at,A4
000271A2 <AmiBlitz3.ab3@10060>   BCC.w JL_0_7442
000271A4 <AmiBlitz3.ab3@10061>     MOVE.b D1,(A4)+
000271AA <AmiBlitz3.ab3@10062>     MOVE.l A4,data1
000271AC <AmiBlitz3.ab3@10063> RTS
000271B4 <AmiBlitz3.ab3@10066>   MOVE.w #$FFFF,dontwrite                                  ;move #-1, org source
000271BA <AmiBlitz3.ab3@10067>   ADDQ.l #1,data1
000271BC <AmiBlitz3.ab3@10068> RTS
000271BE <AmiBlitz3.ab3@10072>   SWAP D1
000271C2 <AmiBlitz3.ab3@10073>   BSR.w pokedata1
000271C4 <AmiBlitz3.ab3@10074>   SWAP D1
000271CA <AmiBlitz3.ab3@10077>   MOVEA.l data1,A4
000271D0 <AmiBlitz3.ab3@10078>   CMPA.l data2at,A4
000271D4 <AmiBlitz3.ab3@10079>    BCC.w JL_0_7474
000271D6 <AmiBlitz3.ab3@10080>   MOVE.w D1,(A4)+
000271DC <AmiBlitz3.ab3@10081>   MOVE.l A4,data1
000271DE <AmiBlitz3.ab3@10082> RTS
000271E6 <AmiBlitz3.ab3@10085>   MOVE.w #$FFFF,dontwrite
000271EC <AmiBlitz3.ab3@10086>   ADDQ.l #2,data1
000271EE <AmiBlitz3.ab3@10087> RTS
000271F4 <AmiBlitz3.ab3@10091>   MOVE.l data1,D3                                      ;write local string/type allocs
000271F6 <AmiBlitz3.ab3@10092>   MOVEQ.l #$00,D4
000271FA <AmiBlitz3.ab3@10095>   CMPA.w #$0,A2
000271FE <AmiBlitz3.ab3@10096>    BEQ.w JL_0_74CAc
00027202 <AmiBlitz3.ab3@10097>   TST.w $6(A2)
00027206 <AmiBlitz3.ab3@10098>    BNE.w JL_0_74C4c
0002720A <AmiBlitz3.ab3@10099>   MOVEA.l $A(A2),A3
00027212 <AmiBlitz3.ab3@10100>   CMPI.l #$100,$4(A3)
00027216 <AmiBlitz3.ab3@10101>    BCS.w JL_0_74C4c
0002721A <AmiBlitz3.ab3@10102>   MOVE.w $4(A2),D1
0002721E <AmiBlitz3.ab3@10103>    BSR.w pokedata1
00027222 <AmiBlitz3.ab3@10104>   MOVE.w $8(A3),D1
00027226 <AmiBlitz3.ab3@10105>    BSR.w pokedata1
00027228 <AmiBlitz3.ab3@10106>   ADDQ.w #1,D4
0002722A <AmiBlitz3.ab3@10109>    MOVEA.l (A2),A2
0002722E <AmiBlitz3.ab3@10110> BRA.w JL_0_7492c
00027230 <AmiBlitz3.ab3@10113>    TST.w D4
00027234 <AmiBlitz3.ab3@10114>    BEQ.w JL_0_74E0
00027238 <AmiBlitz3.ab3@10115>   MOVE.w #$FF37,D1
0002723C <AmiBlitz3.ab3@10116>    BSR.w uselib
00027240 <AmiBlitz3.ab3@10117>   MOVE.w #$FFFA,D1
00027244 <AmiBlitz3.ab3@10118> BRA.w uselib
0002724A <AmiBlitz3.ab3@10126>   MOVEA.l varbase,A2                                       ;add alloc mem for types/strings global
00027250 <AmiBlitz3.ab3@10129>   MOVE.l data1,D3
00027252 <AmiBlitz3.ab3@10130>   MOVEQ.l #$00,D4
00027258 <AmiBlitz3.ab3@10131>   TST.b iserror
0002725C <AmiBlitz3.ab3@10132>   BEQ JL_0_7492
0002725E <AmiBlitz3.ab3@10133>   RTS
00027262 <AmiBlitz3.ab3@10135>    CMPA.w #$0,A2
00027266 <AmiBlitz3.ab3@10136>    BEQ.w JL_0_74CA
0002726A <AmiBlitz3.ab3@10137>   TST.w $6(A2)
0002726E <AmiBlitz3.ab3@10138>    BNE.w JL_0_74C4
00027272 <AmiBlitz3.ab3@10139>   MOVEA.l $A(A2),A3
0002727A <AmiBlitz3.ab3@10140>   CMPI.l #$100,$4(A3)
0002727E <AmiBlitz3.ab3@10141>    BCS.w JL_0_74C4
00027282 <AmiBlitz3.ab3@10142>   MOVE.w $4(A2),D1
00027286 <AmiBlitz3.ab3@10143>    BSR.w pokedata1
0002728A <AmiBlitz3.ab3@10144>   MOVE.w $8(A3),D1
0002728E <AmiBlitz3.ab3@10145>    BSR.w pokedata1
00027290 <AmiBlitz3.ab3@10146>   ADDQ.w #1,D4
00027292 <AmiBlitz3.ab3@10149>   MOVEA.l (A2),A2
00027296 <AmiBlitz3.ab3@10150> BRA.w JL_0_7492
0002729C <AmiBlitz3.ab3@10154>   MOVEA.l sharebase,A2
000272A0 <AmiBlitz3.ab3@10157>   CMPA.w #$0,A2
000272A4 <AmiBlitz3.ab3@10158>    BEQ.w JL_0_74CAb
000272A8 <AmiBlitz3.ab3@10160>   TST.w $6(A2)
000272AC <AmiBlitz3.ab3@10161>    BNE.w JL_0_74C4b
000272B0 <AmiBlitz3.ab3@10162>   MOVEA.l $A(A2),A3
000272B8 <AmiBlitz3.ab3@10163>   CMPI.l #$100,$4(A3)
000272BC <AmiBlitz3.ab3@10164>    BCS.w JL_0_74C4b
000272C0 <AmiBlitz3.ab3@10165>   MOVE.w $4(A2),D1
000272C4 <AmiBlitz3.ab3@10166>    BSR.w pokedata1
000272C8 <AmiBlitz3.ab3@10167>   MOVE.w $8(A3),D1
000272CC <AmiBlitz3.ab3@10168>    BSR.w pokedata1
000272CE <AmiBlitz3.ab3@10169>   ADDQ.w #1,D4
000272D0 <AmiBlitz3.ab3@10172>   MOVEA.l (A2),A2
000272D4 <AmiBlitz3.ab3@10173> BRA.w JL_0_7492b
000272D6 <AmiBlitz3.ab3@10176>    TST.w D4
000272DA <AmiBlitz3.ab3@10177>    BEQ.w JL_0_74E0
000272DE <AmiBlitz3.ab3@10178>   MOVE.w #$FF37,D1
000272E2 <AmiBlitz3.ab3@10179>    BSR.w uselib                                            ;use statics lib
000272E6 <AmiBlitz3.ab3@10180>   MOVE.w #$FFFA,D1                                         ;use memlib
000272EA <AmiBlitz3.ab3@10181> BRA.w uselib
000272EC <AmiBlitz3.ab3@10184> RTS
000272F2 <AmiBlitz3.ab3@10188>   MOVE.w numtoa2,D1
000272F6 <AmiBlitz3.ab3@10189>    BSR.w writeword
000272FA <AmiBlitz3.ab3@10190>    BSR.w addoff
000272FC <AmiBlitz3.ab3@10191>   MOVE.l D3,D1
00027300 <AmiBlitz3.ab3@10192>    BSR.w writelong
00027302 <AmiBlitz3.ab3@10193>   SUBQ.w #1,D4
00027308 <AmiBlitz3.ab3@10194>   MOVE.w D4,endarray+2
0002730E <AmiBlitz3.ab3@10195>   MOVE.l endarray,D1
00027312 <AmiBlitz3.ab3@10196> BRA.w writelong
00027314 <AmiBlitz3.ab3@10200>   MOVE.l D3,-(A7)
0002731A <AmiBlitz3.ab3@10203>   MOVEA.l _dosbase,A6
0002731E <AmiBlitz3.ab3@10204>   JSR _Write(a6)
00027320 <AmiBlitz3.ab3@10206>   CMP.l (A7)+,D0
00027324 <AmiBlitz3.ab3@10207>    BNE.w JL_0_7516
00027326 <AmiBlitz3.ab3@10208> RTS
00027328 <AmiBlitz3.ab3@10211>   MOVE.l D7,D1
0002732E <AmiBlitz3.ab3@10213>   MOVEA.l _dosbase,A6
00027332 <AmiBlitz3.ab3@10214>   JSR _Close(a6)
00027338 <AmiBlitz3.ab3@10217> JMP error_create_exe
0002733E <AmiBlitz3.ab3@10226> 
00027344 <AmiBlitz3.ab3@10227>   MOVE.l A7,errstack
00027348 <AmiBlitz3.ab3@10228>   MOVEM.l d2-d7/a2-a6,-(a7)
00027352 <AmiBlitz3.ab3@10229>   MOVE.l #AL_0_7790,errcont
00027358 <AmiBlitz3.ab3@10230>    JSR call_setpointerbusy
00027360 <AmiBlitz3.ab3@10231>   MOVE.w #$FFFF,anyerrs
0002736A <AmiBlitz3.ab3@10232>   CMP.l #-1,chipstart
0002736E <AmiBlitz3.ab3@10233>   BEQ 'l01
00027374 <AmiBlitz3.ab3@10234>   MOVE.l chipend,d1
00027376 <AmiBlitz3.ab3@10235>   ADDQ.l #3,d1
0002737C <AmiBlitz3.ab3@10236>   AND.l #$fffffffc,d1                                      ;bug
00027382 <AmiBlitz3.ab3@10237>   MOVE.l d1,chipend
00027384 <AmiBlitz3.ab3@10238>   MOVE.l d1,a1
0002738A <AmiBlitz3.ab3@10239>   MOVE.l chipstart,a0
0002738C <AmiBlitz3.ab3@10240>   MOVE.l a1,d1
0002738E <AmiBlitz3.ab3@10241>   SUB.l a0,d1
00027394 <AmiBlitz3.ab3@10242>   MOVE.l d1,chipsize
0002739E <AmiBlitz3.ab3@10245>   CMP.l #-1,bssstart
000273A2 <AmiBlitz3.ab3@10246>   BEQ 'l11
000273A8 <AmiBlitz3.ab3@10247>   MOVE.l realbssend,a1
000273AE <AmiBlitz3.ab3@10248>   MOVE.l bssstart,a0
000273B0 <AmiBlitz3.ab3@10249>   MOVE.l a1,d1
000273B2 <AmiBlitz3.ab3@10250>   SUB.l a0,d1
000273B8 <AmiBlitz3.ab3@10251>   MOVE.l d1,bsssize
000273BC <AmiBlitz3.ab3@10252>   BEQ 'l11
000273BE <AmiBlitz3.ab3@10255>   TST.b (a0)+
000273C2 <AmiBlitz3.ab3@10256>   BEQ 'l31
000273C8 <AmiBlitz3.ab3@10257>   TST.b debugmode
000273CC <AmiBlitz3.ab3@10258>   BEQ 'l1
000273D2 <AmiBlitz3.ab3@10259>   TST.b exdebug
000273D6 <AmiBlitz3.ab3@10260>   BNE 'l31
000273DC <AmiBlitz3.ab3@10263>   MOVE.l #nodata,-(a7)
000273E2 <AmiBlitz3.ab3@10264> JMP handle_compileerror
000273E4 <AmiBlitz3.ab3@10267>   CMP.l a0,a1
000273E8 <AmiBlitz3.ab3@10268>   BGT 'l32
000273EE <AmiBlitz3.ab3@10269>   MOVE.l bssend,d1
000273F0 <AmiBlitz3.ab3@10270>   ADDQ.l #3,d1
000273F6 <AmiBlitz3.ab3@10271>   AND.l #$fffffffc,d1                                      ;bug
000273FC <AmiBlitz3.ab3@10272>   MOVE.l d1,bssend
000273FE <AmiBlitz3.ab3@10273>   MOVE.l d1,a1
00027404 <AmiBlitz3.ab3@10274>   MOVE.l bssstart,a0
00027406 <AmiBlitz3.ab3@10275>   MOVE.l a1,d1
00027408 <AmiBlitz3.ab3@10276>   SUB.l a0,d1
0002740E <AmiBlitz3.ab3@10277>   MOVE.l d1,bsssize
00027412 <AmiBlitz3.ab3@10280>   MOVEM.l d5-d7/d3,-(a7)
00027418 <AmiBlitz3.ab3@10281>   MOVE.w dontwrite,D1
0002741C <AmiBlitz3.ab3@10282>   BNE.w JL_0_757C
00027422 <AmiBlitz3.ab3@10283>   MOVE.l chipsize,d5
00027428 <AmiBlitz3.ab3@10284>   MOVE.l bsssize,d3
0002742E <AmiBlitz3.ab3@10285>   MOVE.l chipstart,d7
00027434 <AmiBlitz3.ab3@10286>   MOVE.l bssstart,d6
0002743A <AmiBlitz3.ab3@10287>   MOVEA.l hunkoffsetbase,A2
00027440 <AmiBlitz3.ab3@10288>   MOVEA.l destbufferstart,A1
00027442 <AmiBlitz3.ab3@10289>   MOVE.l A1,D2
00027448 <AmiBlitz3.ab3@10290>   ADD.l noinits,D2
0002744E <AmiBlitz3.ab3@10291>   CLR.l hunkoffsetnum
00027452 <AmiBlitz3.ab3@10294>   CMPA.w #$0,A2
00027456 <AmiBlitz3.ab3@10295>    BEQ.w JL_0_757C
0002745A <AmiBlitz3.ab3@10296>   MOVE.l $4(A2),D0
0002745E <AmiBlitz3.ab3@10297>    LEA $0(a1,d0.l),a0
00027460 <AmiBlitz3.ab3@10298>    MOVE.l (a0),d1
00027462 <AmiBlitz3.ab3@10299>   TST.l d1
00027466 <AmiBlitz3.ab3@10300>    BMI.w 'lm1
0002746E <AmiBlitz3.ab3@10301>   MOVE.b #0,newhunk
00027478 <AmiBlitz3.ab3@10302>   CMP.l #-1,chipstart
0002747C <AmiBlitz3.ab3@10303>   BEQ 'l10
00027482 <AmiBlitz3.ab3@10304>   CMP.l chipstart,d1
00027486 <AmiBlitz3.ab3@10305>   BLT 'l10
0002748E <AmiBlitz3.ab3@10306>   MOVE.b #1,newhunk
00027494 <AmiBlitz3.ab3@10307>   CMP.l chipend,d1
00027498 <AmiBlitz3.ab3@10308>   BGE 'l110
0002749A <AmiBlitz3.ab3@10309>   SUB.l d7,(a0)
000274A2 <AmiBlitz3.ab3@10310>   ADD.l #$80000000,4(a2)
000274A6 <AmiBlitz3.ab3@10311> BRA JL_0_7576
000274AA <AmiBlitz3.ab3@10314>   SUB.l d5,0(a0)
000274B4 <AmiBlitz3.ab3@10317>   CMP.l #-1,bssstart
000274B8 <AmiBlitz3.ab3@10318>     BEQ 'l11
000274BE <AmiBlitz3.ab3@10319>   CMP.l bssstart,d1
000274C2 <AmiBlitz3.ab3@10320>   BLT 'l11
000274C8 <AmiBlitz3.ab3@10321>   CMP.l bssend,d1
000274CC <AmiBlitz3.ab3@10322>   BGE 'l111
000274D2 <AmiBlitz3.ab3@10323>   TST.b newhunk
000274D6 <AmiBlitz3.ab3@10324>   BEQ 'ln1
000274D8 <AmiBlitz3.ab3@10325>   ADD.l d5,(a0)
000274DA <AmiBlitz3.ab3@10328>   SUB.l d6,(a0)
000274E2 <AmiBlitz3.ab3@10329>   ADD.l #$40000000,4(a2)
000274E6 <AmiBlitz3.ab3@10330> BRA JL_0_7576
000274EA <AmiBlitz3.ab3@10333>   SUB.l d3,0(a0)
000274EC <AmiBlitz3.ab3@10336>   SUB.l D2,(A0)
000274F2 <AmiBlitz3.ab3@10339>   ADDQ.l #1,hunkoffsetnum
000274F4 <AmiBlitz3.ab3@10342>    MOVEA.l (A2),A2
000274F8 <AmiBlitz3.ab3@10343> BRA.w JL_0_755E
000274FC <AmiBlitz3.ab3@10347>   MOVEM.l (a7)+,d5-d7/d3
00027502 <AmiBlitz3.ab3@10348>   MOVE.l ptr_newexefilename,D1
00027508 <AmiBlitz3.ab3@10349>   MOVE.l #HUNK_RELOC_8__MODE_NEWFILE,D2
0002750E <AmiBlitz3.ab3@10350>   MOVEA.l _dosbase,A6
00027512 <AmiBlitz3.ab3@10351>    JSR _Open(A6)
00027514 <AmiBlitz3.ab3@10352>   MOVE.l D0,D7
00027518 <AmiBlitz3.ab3@10353>    BEQ.w execerr
0002751E <AmiBlitz3.ab3@10354>   MOVE.l objlen,D0
00027524 <AmiBlitz3.ab3@10355>   SUB.l #moremem,d0
0002752A <AmiBlitz3.ab3@10356>   SUB.l noinits,D0
00027534 <AmiBlitz3.ab3@10357>   CMP.l #-1,bssstart
00027538 <AmiBlitz3.ab3@10358>   BEQ 'l60
0002753E <AmiBlitz3.ab3@10359>   SUB.l bsssize,d0
00027544 <AmiBlitz3.ab3@10360>   SUB.l chipsize,d0
00027548 <AmiBlitz3.ab3@10361> BRA.s 'l61
00027552 <AmiBlitz3.ab3@10364>   CMP.l #-1,chipstart
00027556 <AmiBlitz3.ab3@10365>   BEQ 'l61
0002755C <AmiBlitz3.ab3@10366>   SUB.l bsssize,d0
00027562 <AmiBlitz3.ab3@10367>   SUB.l chipsize,d0
00027564 <AmiBlitz3.ab3@10370>   ADDQ.l #3,D0
00027566 <AmiBlitz3.ab3@10371>   LSR.l #2,D0
0002756C <AmiBlitz3.ab3@10372>   MOVE.l D0,tstsize1
00027572 <AmiBlitz3.ab3@10373>   MOVE.l D0,tstsize2
00027574 <AmiBlitz3.ab3@10374>   MOVE.l D7,D1
0002757A <AmiBlitz3.ab3@10375>   MOVE.l #tsthead,D2                                      ;hunkbegin
0002757C <AmiBlitz3.ab3@10376>   MOVEQ.l #$20,D3
00027586 <AmiBlitz3.ab3@10377>   CMP.l #-1,bssstart
0002758A <AmiBlitz3.ab3@10378>   BEQ 'lb1
00027594 <AmiBlitz3.ab3@10379>   CMP.l #-1,chipstart
00027598 <AmiBlitz3.ab3@10380>   BEQ 'lb1
000275A2 <AmiBlitz3.ab3@10381>   MOVE.l #1,bssnum
000275AC <AmiBlitz3.ab3@10382>   MOVE.l #2,chipnum
000275AE <AmiBlitz3.ab3@10383>   MOVEQ.l #$28,D3
000275B4 <AmiBlitz3.ab3@10384>   MOVE.l bsssize,d2
000275B6 <AmiBlitz3.ab3@10385>   ADDQ.l #3,d2
000275B8 <AmiBlitz3.ab3@10386>   ASR.l #2,d2
000275BE <AmiBlitz3.ab3@10387>   MOVE.l d2,hunkend+8
000275C4 <AmiBlitz3.ab3@10388>   MOVE.l d2,bsssize3
000275CA <AmiBlitz3.ab3@10389>   MOVE.l chipsize,d2
000275CC <AmiBlitz3.ab3@10390>   ADDQ.l #3,d2
000275CE <AmiBlitz3.ab3@10391>   ASR.l #2,d2
000275D4 <AmiBlitz3.ab3@10392>   MOVE.l d2,chipsize2
000275DE <AmiBlitz3.ab3@10393>   ADD.l #$40000000,chipsize2
000275E4 <AmiBlitz3.ab3@10394>   MOVE.l d2,hunkend2+8
000275EA <AmiBlitz3.ab3@10395>   MOVE.l D0,tstsize1c
000275F0 <AmiBlitz3.ab3@10396>   MOVE.l D0,tstsize2c
000275F6 <AmiBlitz3.ab3@10397>   MOVE.l #hunkbegin2,d2
000275FA <AmiBlitz3.ab3@10398> BRA 'l100
00027604 <AmiBlitz3.ab3@10401>   CMP.l #-1,bssstart
00027608 <AmiBlitz3.ab3@10402>   BEQ 'l10
00027612 <AmiBlitz3.ab3@10403>   MOVE.l #1,bssnum
00027614 <AmiBlitz3.ab3@10404>   MOVEQ.l #$24,D3
0002761A <AmiBlitz3.ab3@10405>   MOVE.l bsssize,d2
0002761C <AmiBlitz3.ab3@10406>   ADDQ.l #3,d2
0002761E <AmiBlitz3.ab3@10407>   ASR.l #2,d2
00027624 <AmiBlitz3.ab3@10408>   MOVE.l d2,hunkend+8
0002762A <AmiBlitz3.ab3@10409>   MOVE.l d2,bsssize2
00027630 <AmiBlitz3.ab3@10410>   MOVE.l D0,tstsize1b
00027636 <AmiBlitz3.ab3@10411>   MOVE.l D0,tstsize2b
0002763C <AmiBlitz3.ab3@10412>   MOVE.l #hunkbegin,d2
00027646 <AmiBlitz3.ab3@10415>   CMP.l #-1,chipstart
0002764A <AmiBlitz3.ab3@10416>   BEQ 'l100
00027654 <AmiBlitz3.ab3@10417>   MOVE.l #1,chipnum
00027656 <AmiBlitz3.ab3@10418>   MOVEQ.l #$24,D3
0002765C <AmiBlitz3.ab3@10419>   MOVE.l chipsize,d2
0002765E <AmiBlitz3.ab3@10420>   ADDQ.l #3,d2
00027660 <AmiBlitz3.ab3@10421>   ASR.l #2,d2
00027666 <AmiBlitz3.ab3@10422>   MOVE.l d2,hunkend2+8
0002766C <AmiBlitz3.ab3@10423>   MOVE.l d2,bsssize2
00027676 <AmiBlitz3.ab3@10424>   ADD.l #$40000000,bsssize2
0002767C <AmiBlitz3.ab3@10425>   MOVE.l D0,tstsize1b
00027682 <AmiBlitz3.ab3@10426>   MOVE.l D0,tstsize2b
00027688 <AmiBlitz3.ab3@10427>   MOVE.l #hunkbegin,d2
0002768C <AmiBlitz3.ab3@10430>    BSR.w mywrite
00027692 <AmiBlitz3.ab3@10431>   MOVE.l destbufferstart,D2
00027698 <AmiBlitz3.ab3@10432>   ADD.l noinits,D2
0002769E <AmiBlitz3.ab3@10433>   MOVE.l objlen,D3
000276A4 <AmiBlitz3.ab3@10434>   SUB.l #moremem,d3
000276AA <AmiBlitz3.ab3@10435>   SUB.l noinits,D3
000276B4 <AmiBlitz3.ab3@10436>   CMP.l #-1,bssstart
000276B8 <AmiBlitz3.ab3@10437>   BNE 'l40
000276C2 <AmiBlitz3.ab3@10438>   CMP.l #-1,chipstart
000276C6 <AmiBlitz3.ab3@10439>   BNE 'l40
000276CA <AmiBlitz3.ab3@10440> BRA 'l41
000276D0 <AmiBlitz3.ab3@10443>   MOVE.l codeend,d1
000276D2 <AmiBlitz3.ab3@10444>     SUB.l d2,d1
000276D4 <AmiBlitz3.ab3@10445>     MOVE.l d1,d3
000276DA <AmiBlitz3.ab3@10446>   SUB.l bsssize,d3
000276E0 <AmiBlitz3.ab3@10447>   SUB.l chipsize,d3
000276E2 <AmiBlitz3.ab3@10448>   MOVE.l D7,D1
000276E6 <AmiBlitz3.ab3@10449>   BSR.w mywrite
000276EC <AmiBlitz3.ab3@10450>   MOVE.l objlen,D3
000276F2 <AmiBlitz3.ab3@10451>   SUB.l #moremem,d3
000276F8 <AmiBlitz3.ab3@10452>   SUB.l noinits,D3
000276FA <AmiBlitz3.ab3@10453>   MOVE.l d3,d1
00027700 <AmiBlitz3.ab3@10454>   MOVE.l destbufferstart,D2
00027706 <AmiBlitz3.ab3@10455>   ADD.l noinits,D2
00027708 <AmiBlitz3.ab3@10456>   ADD.l d2,d1
0002770E <AmiBlitz3.ab3@10457>   SUB.l codeend,d1
00027710 <AmiBlitz3.ab3@10458>   MOVE.l d1,d3
00027716 <AmiBlitz3.ab3@10459>   MOVE.l codeend,d2
00027718 <AmiBlitz3.ab3@10462>   MOVE.l d2,d1
0002771A <AmiBlitz3.ab3@10463>   ADD.l d3,d1
0002771C <AmiBlitz3.ab3@10464>   ADDQ.l #3,D1
00027722 <AmiBlitz3.ab3@10465>   ANDI.l #$FFFFFFFC,D1
00027724 <AmiBlitz3.ab3@10466>   SUB.l d2,d1
00027726 <AmiBlitz3.ab3@10467>   MOVE.l d1,d3
00027728 <AmiBlitz3.ab3@10468>   MOVE.l D7,D1
0002772C <AmiBlitz3.ab3@10469>    BSR.w mywrite
00027736 <AmiBlitz3.ab3@10470>   MOVE.l hunkoffsetcounter,tstsize3
0002773A <AmiBlitz3.ab3@10471>    BEQ.w JL_0_7646
0002773C <AmiBlitz3.ab3@10472>   MOVE.l D7,D1
00027742 <AmiBlitz3.ab3@10473>   MOVE.l #tstend,D2
00027744 <AmiBlitz3.ab3@10474>   MOVEQ.l #$04,D3
00027748 <AmiBlitz3.ab3@10475>    BSR.w mywrite
0002774E <AmiBlitz3.ab3@10476>    MOVEA.l _execbase,A6
00027754 <AmiBlitz3.ab3@10477>    MOVE.l hunkoffsetcounter,d0
00027756 <AmiBlitz3.ab3@10478>    ASL.l #2,d0
0002775C <AmiBlitz3.ab3@10479>    ADD.l #12,d0
0002775E <AmiBlitz3.ab3@10480>    MOVEQ #0,d1
00027762 <AmiBlitz3.ab3@10481>    JSR _AllocMem(a6)
00027764 <AmiBlitz3.ab3@10482>    TST.l d0
00027768 <AmiBlitz3.ab3@10483>    BEQ nomem
0002776E <AmiBlitz3.ab3@10484>    MOVE.l noinits,D4
00027770 <AmiBlitz3.ab3@10485>    MOVE.l d5,-(a7)
00027772 <AmiBlitz3.ab3@10486>    MOVE.l d0,d5
00027774 <AmiBlitz3.ab3@10487>    MOVE.l d0,a1
0002777A <AmiBlitz3.ab3@10488>    MOVEA.l hunkoffsetbase,A2
00027782 <AmiBlitz3.ab3@10489>    MOVE.b #0,newhunk
00027786 <AmiBlitz3.ab3@10492>   CMPA.w #$0,A2
0002778A <AmiBlitz3.ab3@10493>    BEQ.w savehunk
00027790 <AmiBlitz3.ab3@10494>   MOVE.l destbufferstart,D2
00027796 <AmiBlitz3.ab3@10495>   ADD.l noinits,D2
0002779A <AmiBlitz3.ab3@10496>   MOVE.l  $4(A2),d1
0002779E <AmiBlitz3.ab3@10497>   BTST #31,d1
000277A2 <AmiBlitz3.ab3@10498>   BEQ 'lh1
000277AA <AmiBlitz3.ab3@10499>   MOVE.b #1,newhunk
000277AE <AmiBlitz3.ab3@10500> BRA 'lh3
000277B2 <AmiBlitz3.ab3@10503>   BTST #30,d1
000277B6 <AmiBlitz3.ab3@10504>   BEQ 'lh2
000277BE <AmiBlitz3.ab3@10505>   MOVE.b #1,newhunk
000277C2 <AmiBlitz3.ab3@10506> BRA 'lh3
000277C4 <AmiBlitz3.ab3@10509>   ADD.l d1,d2
000277CA <AmiBlitz3.ab3@10510>   CMP.l chipend,d2
000277CE <AmiBlitz3.ab3@10511>   BLT 'l100
000277D4 <AmiBlitz3.ab3@10512>   SUB.l chipsize,d1
000277DA <AmiBlitz3.ab3@10515>   CMP.l bssend,d2
000277DE <AmiBlitz3.ab3@10516>   BLT 'l101
000277E4 <AmiBlitz3.ab3@10517>   SUB.l bsssize,d1
000277E6 <AmiBlitz3.ab3@10520>   MOVE.l d1,(a1)
000277E8 <AmiBlitz3.ab3@10521>   SUB.l D4,(A1)+
000277EA <AmiBlitz3.ab3@10524>   MOVEA.l (A2),A2
000277EE <AmiBlitz3.ab3@10525> BRA.w menu_createresidentfile__oloopb
000277F0 <AmiBlitz3.ab3@10529>   MOVE.l D7,D1
000277F6 <AmiBlitz3.ab3@10530>   MOVEA.l _dosbase,A6
00027800 <AmiBlitz3.ab3@10531>   MOVE.l hunkoffsetnum,tstsize3
00027804 <AmiBlitz3.ab3@10532>   BEQ 'ln1
0002780A <AmiBlitz3.ab3@10533>   MOVE.l #tstend+4,d2
0002780C <AmiBlitz3.ab3@10534>     MOVEQ #8,d3
00027810 <AmiBlitz3.ab3@10535>    JSR _Write(A6)
00027812 <AmiBlitz3.ab3@10536>   MOVE.l d7,d1
00027818 <AmiBlitz3.ab3@10537>   MOVE.l hunkoffsetnum,d3
0002781A <AmiBlitz3.ab3@10538>   ASL.l #2,d3
0002781C <AmiBlitz3.ab3@10539>   MOVE.l d5,D2
00027820 <AmiBlitz3.ab3@10540>   JSR _Write(a6)
00027826 <AmiBlitz3.ab3@10543>   TST.b newhunk
0002782A <AmiBlitz3.ab3@10544>   BEQ 'l10
00027830 <AmiBlitz3.ab3@10545>   MOVEA.l hunkoffsetbase,A2
00027832 <AmiBlitz3.ab3@10546>   MOVE.l d5,a0
00027834 <AmiBlitz3.ab3@10547>   ADDQ #8,a0
0002783C <AmiBlitz3.ab3@10548>   MOVE.l bssnum,-4(a0)
0002783E <AmiBlitz3.ab3@10549>   MOVEQ #0,d6
00027842 <AmiBlitz3.ab3@10552>   CMPA.w #$0,A2
00027846 <AmiBlitz3.ab3@10553>    BEQ.w 'lh3
0002784C <AmiBlitz3.ab3@10554>   MOVE.l destbufferstart,D2
00027852 <AmiBlitz3.ab3@10555>   ADD.l noinits,D2
00027856 <AmiBlitz3.ab3@10556>   MOVE.l  $4(A2),d1
0002785A <AmiBlitz3.ab3@10557>   BTST #30,d1
0002785E <AmiBlitz3.ab3@10558>   BEQ 'lh1
00027862 <AmiBlitz3.ab3@10559>   BCLR #30,d1
00027864 <AmiBlitz3.ab3@10560>   MOVE.l d1,(a0)
00027866 <AmiBlitz3.ab3@10561>   SUB.l D4,(A0)+
00027868 <AmiBlitz3.ab3@10562>   ADDQ.l #1,d6
0002786A <AmiBlitz3.ab3@10565>   MOVE.l (a2),a2
0002786E <AmiBlitz3.ab3@10566> BRA 'lh2
00027870 <AmiBlitz3.ab3@10569>   TST.l d6
00027874 <AmiBlitz3.ab3@10570>     BEQ 'lh10
00027876 <AmiBlitz3.ab3@10571>     MOVE.l d5,a0
00027878 <AmiBlitz3.ab3@10572>     MOVE.l d6,(a0)
0002787A <AmiBlitz3.ab3@10573>     MOVE.l d7,d1
0002787C <AmiBlitz3.ab3@10574>     MOVE.l d5,d2
0002787E <AmiBlitz3.ab3@10575>     MOVE.l d6,d3
00027880 <AmiBlitz3.ab3@10576>     ASL.l #2,d3
00027882 <AmiBlitz3.ab3@10577>     ADDQ.l #8,d3
00027886 <AmiBlitz3.ab3@10578>     BSR.w mywrite
0002788C <AmiBlitz3.ab3@10581>   MOVEA.l hunkoffsetbase,A2
0002788E <AmiBlitz3.ab3@10582>   MOVE.l d5,a0
00027890 <AmiBlitz3.ab3@10583>   ADDQ #8,a0
00027898 <AmiBlitz3.ab3@10584>   MOVE.l chipnum,-4(a0)
0002789A <AmiBlitz3.ab3@10585>   MOVEQ #0,d6
0002789E <AmiBlitz3.ab3@10588>   CMPA.w #$0,A2
000278A2 <AmiBlitz3.ab3@10589>    BEQ.w 'lh30
000278A8 <AmiBlitz3.ab3@10590>   MOVE.l destbufferstart,D2
000278AE <AmiBlitz3.ab3@10591>   ADD.l noinits,D2
000278B2 <AmiBlitz3.ab3@10592>   MOVE.l  $4(A2),d1
000278B6 <AmiBlitz3.ab3@10593>   BTST #31,d1
000278BA <AmiBlitz3.ab3@10594>   BEQ 'lh11
000278BE <AmiBlitz3.ab3@10595>   BCLR #31,d1
000278C0 <AmiBlitz3.ab3@10596>   MOVE.l d1,(a0)
000278C2 <AmiBlitz3.ab3@10597>   SUB.l D4,(A0)+
000278C4 <AmiBlitz3.ab3@10598>   ADDQ.l #1,d6
000278C6 <AmiBlitz3.ab3@10601>   MOVE.l (a2),a2
000278CA <AmiBlitz3.ab3@10602> BRA 'lh20
000278CC <AmiBlitz3.ab3@10605>   TST.l d6
000278D0 <AmiBlitz3.ab3@10606>     BEQ 'l10
000278D2 <AmiBlitz3.ab3@10607>     MOVE.l d5,a0
000278D4 <AmiBlitz3.ab3@10608>     MOVE.l d6,(a0)
000278D6 <AmiBlitz3.ab3@10609>     MOVE.l d7,d1
000278D8 <AmiBlitz3.ab3@10610>     MOVE.l d5,d2
000278DA <AmiBlitz3.ab3@10611>     MOVE.l d6,d3
000278DC <AmiBlitz3.ab3@10612>     ASL.l #2,d3
000278DE <AmiBlitz3.ab3@10613>     ADDQ.l #8,d3
000278E2 <AmiBlitz3.ab3@10614>     BSR.w mywrite
000278E8 <AmiBlitz3.ab3@10618>    MOVEA.l _execbase,A6
000278EE <AmiBlitz3.ab3@10619>    MOVE.l hunkoffsetcounter,d0
000278F0 <AmiBlitz3.ab3@10620>    ASL.l #2,d0
000278F6 <AmiBlitz3.ab3@10621>    ADD.l #12,d0
000278F8 <AmiBlitz3.ab3@10622>    MOVE.l d5,a1
000278FC <AmiBlitz3.ab3@10623>    JSR _FreeMem(a6)
00027902 <AmiBlitz3.ab3@10624>    MOVEA.l _dosbase,A6
00027904 <AmiBlitz3.ab3@10625>    MOVE.l (a7)+,d5
00027908 <AmiBlitz3.ab3@10626> BRA JL_0_7632
0002790E <AmiBlitz3.ab3@10630>   MOVEA.l hunkoffsetbase,A2
00027914 <AmiBlitz3.ab3@10631>   MOVE.l noinits,D4
00027918 <AmiBlitz3.ab3@10634>   CMPA.w #$0,A2                                            ;write hunkoffsets
0002791C <AmiBlitz3.ab3@10635>   BEQ.w JL_0_7632
00027920 <AmiBlitz3.ab3@10636>   LEA $4(A2),A1
00027922 <AmiBlitz3.ab3@10637>   SUB.l D4,(A1)
00027924 <AmiBlitz3.ab3@10638>   MOVE.l D7,D1
00027926 <AmiBlitz3.ab3@10639>   MOVE.l A1,D2
00027928 <AmiBlitz3.ab3@10640>   MOVEQ.l #$04,D3
0002792C <AmiBlitz3.ab3@10641>   BSR.w mywrite
00027930 <AmiBlitz3.ab3@10642>   ADD.l D4,$4(A2)
00027932 <AmiBlitz3.ab3@10643>   MOVEA.l (A2),A2
00027936 <AmiBlitz3.ab3@10644> BRA.w JL_0_7610
0002793C <AmiBlitz3.ab3@10647>   CLR.l tstsize3
0002793E <AmiBlitz3.ab3@10648>   MOVE.l D7,D1
00027944 <AmiBlitz3.ab3@10649>   MOVE.l #tstsize3,D2
00027946 <AmiBlitz3.ab3@10650>   MOVEQ.l #$04,D3
0002794A <AmiBlitz3.ab3@10651>    BSR.w mywrite
00027952 <AmiBlitz3.ab3@10654>   BTST #$7,link_debuginfo
00027956 <AmiBlitz3.ab3@10655>    BEQ.w JL_0_7706
0002795C <AmiBlitz3.ab3@10656>   MOVE.l #sysdebug,D2                                      ;debughunks
0002795E <AmiBlitz3.ab3@10657>   MOVEQ.l #$04,D3
00027960 <AmiBlitz3.ab3@10658>   MOVE.l D7,D1
00027964 <AmiBlitz3.ab3@10659>    BSR.w mywrite
0002796A <AmiBlitz3.ab3@10660>   MOVEA.l labelbase,A2
0002796E <AmiBlitz3.ab3@10663>   CMPA.w #$0,A2
00027972 <AmiBlitz3.ab3@10664>    BEQ.w JL_0_76F8
00027978 <AmiBlitz3.ab3@10665>   BTST #$0,$7(A2)
0002797C <AmiBlitz3.ab3@10666>    BEQ.w JL_0_7682
00027984 <AmiBlitz3.ab3@10667>   CMPI.l #$1,$4(A2)
00027988 <AmiBlitz3.ab3@10669>   BRA.w JL_0_76F2                                            ;only addr labels
0002798A <AmiBlitz3.ab3@10671>   MOVEQ.l #$00,D4
0002798E <AmiBlitz3.ab3@10672>   MOVE.b $12(A2),D4
00027992 <AmiBlitz3.ab3@10673>   SUBI.w #$13,D4
00027994 <AmiBlitz3.ab3@10674>   ADDQ.w #2,D4
00027998 <AmiBlitz3.ab3@10675>   ANDI.w #$FFFC,D4
0002799A <AmiBlitz3.ab3@10676>   MOVE.l D4,D5
0002799C <AmiBlitz3.ab3@10677>   LSR.w #2,D5
000279A2 <AmiBlitz3.ab3@10678>   MOVE.l D5,temp1
000279A4 <AmiBlitz3.ab3@10679>   LSL.w #2,D5
000279AA <AmiBlitz3.ab3@10680>   MOVE.l #temp1,a1
000279B0 <AmiBlitz3.ab3@10682>   LEA debugstore,a0
000279B2 <AmiBlitz3.ab3@10683>   MOVE.l (a1),(a0)+
000279B4 <AmiBlitz3.ab3@10684>   MOVEQ.l #$04,D3
000279B8 <AmiBlitz3.ab3@10687>   LEA $13(A2),A1
000279BA <AmiBlitz3.ab3@10688>   MOVE.l d4,d1
000279BC <AmiBlitz3.ab3@10689>   SUBQ.l #1,d1
000279BE <AmiBlitz3.ab3@10692>     MOVE.b (a1)+,d0
000279C2 <AmiBlitz3.ab3@10693>     BEQ 'l21
000279C6 <AmiBlitz3.ab3@10694>     CMP.b #"'",d0                                            ; ' does reassembler/assembler not like, so replace
000279CA <AmiBlitz3.ab3@10695>     BNE 'ok
000279CE <AmiBlitz3.ab3@10696>     MOVE.b #"_",d0
000279D0 <AmiBlitz3.ab3@10697> 'ok    MOVE.b d0,(a0)+                                      ; copy labeltext to debuginfo
000279D4 <AmiBlitz3.ab3@10698>   DBF d1,'l10
000279D8 <AmiBlitz3.ab3@10700> BRA 'l22
000279DA <AmiBlitz3.ab3@10703>       CLR.b (a0)+
000279DE <AmiBlitz3.ab3@10704>   DBF d1,'l21
000279E0 <AmiBlitz3.ab3@10707>   ADD.l d4,d3
000279E2 <AmiBlitz3.ab3@10712>   SUB.l D4,D5
000279E6 <AmiBlitz3.ab3@10713>    BEQ.w JL_0_76CE
000279EC <AmiBlitz3.ab3@10714>   MOVE.l #zero,a1
000279EE <AmiBlitz3.ab3@10716>   MOVE.l (a1),(a0)+
000279F0 <AmiBlitz3.ab3@10718>   ADD.l d5,d3
000279F4 <AmiBlitz3.ab3@10723>   MOVE.l $8(A2),D2
000279FA <AmiBlitz3.ab3@10724>   SUB.l destbufferstart,D2
00027A00 <AmiBlitz3.ab3@10725>   SUB.l noinits,D2
00027A06 <AmiBlitz3.ab3@10726>   MOVE.l D2,temp1
00027A0C <AmiBlitz3.ab3@10727>   MOVE.l #temp1,a1
00027A0E <AmiBlitz3.ab3@10729>   MOVE.l (a1),(a0)+
00027A14 <AmiBlitz3.ab3@10730>   ADD.l #4,d3
00027A1A <AmiBlitz3.ab3@10731>   LEA debugstore,a0
00027A1C <AmiBlitz3.ab3@10732>   MOVE.l a0,d2
00027A1E <AmiBlitz3.ab3@10734>   MOVE.l D7,D1
00027A22 <AmiBlitz3.ab3@10735>   BSR.w mywrite
00027A24 <AmiBlitz3.ab3@10738>   MOVEA.l (A2),A2
00027A28 <AmiBlitz3.ab3@10739> BRA.w JL_0_7664
00027A2E <AmiBlitz3.ab3@10743>   MOVE.l #zero,D2
00027A30 <AmiBlitz3.ab3@10744>   MOVEQ.l #$04,D3
00027A32 <AmiBlitz3.ab3@10745>   MOVE.l D7,D1
00027A36 <AmiBlitz3.ab3@10746>   BSR.w mywrite
00027A38 <AmiBlitz3.ab3@10749>   MOVE.l D7,D1
00027A3E <AmiBlitz3.ab3@10750>   MOVE.l #tstdone,D2                                      ;hunkend
00027A40 <AmiBlitz3.ab3@10751>   MOVEQ.l #$04,D3
00027A4A <AmiBlitz3.ab3@10752>   CMPI.l #-1,bssstart
00027A4E <AmiBlitz3.ab3@10753>   BEQ 'l10
00027A50 <AmiBlitz3.ab3@10754>   MOVEQ #16,d3
00027A56 <AmiBlitz3.ab3@10755>   MOVE.l #hunkend,d2
00027A60 <AmiBlitz3.ab3@10756>   CMPI.l #-1,chipstart
00027A64 <AmiBlitz3.ab3@10757>   BEQ 'l10
00027A66 <AmiBlitz3.ab3@10758>   MOVE.l d7,d1
00027A68 <AmiBlitz3.ab3@10759>   MOVEQ #12,d3
00027A6C <AmiBlitz3.ab3@10760>   BSR.w mywrite
00027A76 <AmiBlitz3.ab3@10763>   CMPI.l #-1,chipstart
00027A7A <AmiBlitz3.ab3@10764>   BEQ 'l11
00027A7C <AmiBlitz3.ab3@10765>   MOVEQ #12,d3
00027A82 <AmiBlitz3.ab3@10766>   MOVE.l #hunkend2,d2
00027A84 <AmiBlitz3.ab3@10767>   MOVE.l d7,d1
00027A88 <AmiBlitz3.ab3@10768>   BSR.w mywrite
00027A8A <AmiBlitz3.ab3@10769>   MOVE.l d7,d1
00027A90 <AmiBlitz3.ab3@10770>   MOVE.l chipstart,d2
00027A96 <AmiBlitz3.ab3@10771>   MOVE.l chipsize,d3
00027A9A <AmiBlitz3.ab3@10772>   BSR.w mywrite
00027A9C <AmiBlitz3.ab3@10773>   MOVEQ #4,d3
00027AA2 <AmiBlitz3.ab3@10774>   MOVE.l #hunkend,d2
00027AA4 <AmiBlitz3.ab3@10775>   MOVE.l d7,d1
00027AA8 <AmiBlitz3.ab3@10778>   BSR.w mywrite
00027AAA <AmiBlitz3.ab3@10779>   MOVE.l D7,D1
00027AB0 <AmiBlitz3.ab3@10780>   MOVEA.l _dosbase,A6
00027AB4 <AmiBlitz3.ab3@10781>   JSR _Close(A6)
00027ABC <AmiBlitz3.ab3@10786>   BTST #$7,create_iconfile
00027AC0 <AmiBlitz3.ab3@10787>    BEQ.w skip_createicon
00027AC6 <AmiBlitz3.ab3@10789>   MOVEA.l ptr_newexefilename,A0
00027AC8 <AmiBlitz3.ab3@10792>     TST.b (A0)+
00027ACC <AmiBlitz3.ab3@10793>   BNE.w JL_0_772C
00027ACE <AmiBlitz3.ab3@10794>   SUBQ.w #1,A0
00027AD0 <AmiBlitz3.ab3@10795>   MOVE.l A0,-(A7)
00027AD6 <AmiBlitz3.ab3@10796>   LEA str_infoextention2,A1
00027AD8 <AmiBlitz3.ab3@10799>     MOVE.b (A1)+,(A0)+
00027ADC <AmiBlitz3.ab3@10800>   BNE.w JL_0_773A
00027AE2 <AmiBlitz3.ab3@10802>   MOVE.l ptr_newexefilename,D1
00027AE4 <AmiBlitz3.ab3@10803>   MOVEQ.l #-$02,D2
00027AEA <AmiBlitz3.ab3@10804>   MOVEA.l _dosbase,A6
00027AEE <AmiBlitz3.ab3@10805>   JSR _Lock(A6)
00027AF0 <AmiBlitz3.ab3@10806>   MOVE.l D0,D1
00027AF4 <AmiBlitz3.ab3@10807>   BEQ.w JL_0_775A                                          ;no icon exit so jump to create one  tomsmart1
00027AF8 <AmiBlitz3.ab3@10808>   JSR _UnLock(A6)                                          ;OH!! there is a Icon so we must Unlock it  tomsmart1
00027AFC <AmiBlitz3.ab3@10809> BRA.w JL_0_7788                                            ;and skip writing a Icon  tomsmart1
00027B02 <AmiBlitz3.ab3@10812>   MOVE.l ptr_newexefilename,D1
00027B08 <AmiBlitz3.ab3@10813>   MOVE.l #HUNK_RELOC_8__MODE_NEWFILE,D2
00027B0E <AmiBlitz3.ab3@10814>   MOVEA.l _dosbase,A6
00027B12 <AmiBlitz3.ab3@10815>    JSR _Open(A6)
00027B14 <AmiBlitz3.ab3@10816>   MOVE.l D0,D7
00027B18 <AmiBlitz3.ab3@10817>    BEQ.w JL_0_7788
00027B1E <AmiBlitz3.ab3@10818>   MOVE.l #icongfx_data,D2                                  ; icon graphics
00027B24 <AmiBlitz3.ab3@10819>   MOVE.l #icongfx_data_end-icongfx_data,D3                 ; length of gfx-data
00027B26 <AmiBlitz3.ab3@10820>   MOVE.l D7,D1
00027B2C <AmiBlitz3.ab3@10821>   MOVEA.l _dosbase,A6
00027B30 <AmiBlitz3.ab3@10822>   JSR _Write(A6)
00027B32 <AmiBlitz3.ab3@10823>   MOVE.l D7,D1
00027B36 <AmiBlitz3.ab3@10824>   JSR _Close(A6)
00027B38 <AmiBlitz3.ab3@10827>   MOVEA.l (A7)+,A0
00027B3A <AmiBlitz3.ab3@10828>   CLR.b (A0)
00027B40 <AmiBlitz3.ab3@10833>   TST.b exdebug
00027B44 <AmiBlitz3.ab3@10834>    BEQ JL_0_757Cb
00027B4A <AmiBlitz3.ab3@10835>   MOVE.w dontwrite,D1
00027B4E <AmiBlitz3.ab3@10836>   BNE.w JL_0_757Cb
00027B54 <AmiBlitz3.ab3@10837>   MOVE.l chipsize,d5
00027B5A <AmiBlitz3.ab3@10838>   MOVE.l bsssize,d3
00027B60 <AmiBlitz3.ab3@10839>   MOVE.l chipstart,d7
00027B66 <AmiBlitz3.ab3@10840>   MOVE.l bssstart,d6
00027B6C <AmiBlitz3.ab3@10841>   MOVEA.l hunkoffsetbase,A2
00027B72 <AmiBlitz3.ab3@10842>   MOVEA.l destbufferstart,A1
00027B74 <AmiBlitz3.ab3@10843>   MOVE.l A1,D2
00027B7A <AmiBlitz3.ab3@10844>   ADD.l noinits,D2
00027B80 <AmiBlitz3.ab3@10845>   CLR.l hunkoffsetnum
00027B84 <AmiBlitz3.ab3@10848>   CMPA.w #$0,A2
00027B88 <AmiBlitz3.ab3@10849>    BEQ.w JL_0_757Cb
00027B8C <AmiBlitz3.ab3@10850>   MOVE.l $4(A2),D0
00027B90 <AmiBlitz3.ab3@10851>    LEA $0(a1,d0.l),a0
00027B92 <AmiBlitz3.ab3@10852>    MOVE.l (a0),d1
00027B94 <AmiBlitz3.ab3@10853>   TST.l d1
00027B98 <AmiBlitz3.ab3@10854>    BMI.w 'lm1
00027BA0 <AmiBlitz3.ab3@10855>   MOVE.b #0,newhunk
00027BAA <AmiBlitz3.ab3@10856>   CMP.l #-1,chipstart
00027BAE <AmiBlitz3.ab3@10857>   BEQ 'l10
00027BB4 <AmiBlitz3.ab3@10858>   CMP.l chipstart,d1
00027BB8 <AmiBlitz3.ab3@10859>   BLT 'l10
00027BC0 <AmiBlitz3.ab3@10860>   MOVE.b #1,newhunk
00027BC6 <AmiBlitz3.ab3@10861>   CMP.l chipend,d1
00027BCA <AmiBlitz3.ab3@10862>   BGE 'l110
00027BCC <AmiBlitz3.ab3@10863>   ADD.l d7,(a0)
00027BD4 <AmiBlitz3.ab3@10864>   ADD.l #$80000000,4(a2)
00027BD8 <AmiBlitz3.ab3@10865> BRA JL_0_7576b
00027BDC <AmiBlitz3.ab3@10868>   ADD.l d5,0(a0)
00027BE6 <AmiBlitz3.ab3@10871>   CMP.l #-1,bssstart
00027BEA <AmiBlitz3.ab3@10872>     BEQ 'l11
00027BF0 <AmiBlitz3.ab3@10873>   CMP.l bssstart,d1
00027BF4 <AmiBlitz3.ab3@10874>   BLT 'l11
00027BFA <AmiBlitz3.ab3@10875>   CMP.l bssend,d1
00027BFE <AmiBlitz3.ab3@10876>   BGE 'l111
00027C04 <AmiBlitz3.ab3@10877>   TST.b newhunk
00027C08 <AmiBlitz3.ab3@10878>   BEQ 'ln1
00027C0A <AmiBlitz3.ab3@10879>   ADD.l d5,(a0)
00027C0C <AmiBlitz3.ab3@10882>   ADD.l d6,(a0)
00027C14 <AmiBlitz3.ab3@10883>   ADD.l #$40000000,4(a2)
00027C18 <AmiBlitz3.ab3@10884> BRA JL_0_7576b
00027C1C <AmiBlitz3.ab3@10887>   ADD.l d3,0(a0)
00027C1E <AmiBlitz3.ab3@10890>   ADD.l D2,(A0)                                            ;only normal code offsets restore
00027C24 <AmiBlitz3.ab3@10893>   ADDQ.l #1,hunkoffsetnum
00027C26 <AmiBlitz3.ab3@10896>   MOVEA.l (A2),A2
00027C2A <AmiBlitz3.ab3@10897> BRA.w JL_0_755Eb
00027C30 <AmiBlitz3.ab3@10900>   JSR call_setpointernormal
00027C34 <AmiBlitz3.ab3@10901>   MOVEM.l (a7)+,d2-d7/a2-a6
00027C36 <AmiBlitz3.ab3@10903> RTS
00027C38 <AmiBlitz3.ab3@10907>   MOVE.l D2,-(A7)
00027C3E <AmiBlitz3.ab3@10908>   MOVE.l destpointer,D2
00027C44 <AmiBlitz3.ab3@10909>   SUB.l destbufferstart,D2
00027C48 <AmiBlitz3.ab3@10910>   BSR.w addhunkoffset
00027C4A <AmiBlitz3.ab3@10911>   MOVE.l (A7)+,D2
00027C4C <AmiBlitz3.ab3@10912> RTS
00027C50 <AmiBlitz3.ab3@10916>   MOVEM.l D0-D1/A0-A1/A6,-(A7)
00027C56 <AmiBlitz3.ab3@10917>   TST.b nohunkoffset
00027C5A <AmiBlitz3.ab3@10918>   BNE 'l10
00027C5C <AmiBlitz3.ab3@10919>   MOVEQ.l #$8,D0
00027C5E <AmiBlitz3.ab3@10920>   MOVEQ.l #$01,D1
00027C64 <AmiBlitz3.ab3@10921>   MOVEA.l _execbase,A6
00027C6A <AmiBlitz3.ab3@10922>   MOVE.l mempool2,a0
00027C6E <AmiBlitz3.ab3@10923>   JSR _AllocPooled(a6)
00027C74 <AmiBlitz3.ab3@10925>   ADDQ.l #1,hunkoffsetcounter
00027C76 <AmiBlitz3.ab3@10926>   MOVEA.l D0,A0
00027C7C <AmiBlitz3.ab3@10927>   MOVE.l hunkoffsetbase,(A0)
00027C82 <AmiBlitz3.ab3@10928>   MOVE.l A0,hunkoffsetbase
00027C86 <AmiBlitz3.ab3@10929>   MOVE.l D2,$4(A0)
00027C8A <AmiBlitz3.ab3@10932>   MOVEM.l (A7)+,D0-D1/A0-A1/A6
00027C8C <AmiBlitz3.ab3@10933> RTS
00027C92 <AmiBlitz3.ab3@10937>   CLR.l hunkoffsetbase
00027C98 <AmiBlitz3.ab3@10938>   MOVEA.l _execbase,A6
00027C9E <AmiBlitz3.ab3@10939>   MOVEA.l hunkoffsetbase,A2
00027CA2 <AmiBlitz3.ab3@10942>     CMPA.w #$0,A2
00027CA6 <AmiBlitz3.ab3@10943>      BEQ.w JL_0_7988
00027CA8 <AmiBlitz3.ab3@10944>     MOVEA.l A2,A1
00027CAA <AmiBlitz3.ab3@10945>     MOVEQ.l #$08,D0
00027CAC <AmiBlitz3.ab3@10946>     MOVEA.l (A2),A2
00027CB2 <AmiBlitz3.ab3@10947>     MOVE.l mempool2,a0
00027CB6 <AmiBlitz3.ab3@10948>     JSR _FreePooled(A6)
00027CBA <AmiBlitz3.ab3@10949> BRA.w JL_0_7972
00027CC0 <AmiBlitz3.ab3@10952>   CLR.l hunkoffsetcounter
00027CC2 <AmiBlitz3.ab3@10953> RTS
00027CDA <AmiBlitz3.ab3@10956> cmakebuff:  Ds.l 6                                          ;dc.w 12 org source
00027CDE <AmiBlitz3.ab3@10957> cmakea5:    Ds.l 1
00027CE0 <AmiBlitz3.ab3@10958> cmake:      Ds.w 1
00027D60 <AmiBlitz3.ab3@10959> cmakebak:   Ds.l 32                                         ;ds.b 128 org source
00027D66 <AmiBlitz3.ab3@10963>   MOVE.l A5,lastsourcepos
00027D70 <AmiBlitz3.ab3@10964>   MOVE.w instringon,oldqflag
00027D72 <AmiBlitz3.ab3@10968>   MOVEQ.l #$00,D0
00027D74 <AmiBlitz3.ab3@10969>   MOVE.b (A5)+,D0
00027D78 <AmiBlitz3.ab3@10970>    BEQ getcharb__donea
00027D7C <AmiBlitz3.ab3@10971>   BPL getcharb__stuffa
00027D7E <AmiBlitz3.ab3@10972>   LSL.l #8,D0
00027D80 <AmiBlitz3.ab3@10973>   MOVE.b (A5)+,D0
00027D82 <AmiBlitz3.ab3@10974>   MOVE.l a1,-(a7)
00027D88 <AmiBlitz3.ab3@10975>   LEA replacedat,a1
00027D8C <AmiBlitz3.ab3@10976>   Dc.w $4a71,$0a00                                         ;TST.w 0(a1,d0.l*2)
00027D90 <AmiBlitz3.ab3@10977>   BEQ getchar__l10
00027D94 <AmiBlitz3.ab3@10978>   Dc.w $3031,$0a00                                         ;MOVE.w 0(a1,d0.l*2),d0
00027D96 <AmiBlitz3.ab3@10982>   MOVE.l (a7)+,a1
00027D9A <AmiBlitz3.ab3@10983> BRA getchar__weiter
00027D9E <AmiBlitz3.ab3@10986>   CMP.w #$22,D0
00027DA2 <AmiBlitz3.ab3@10987>    BEQ.b swapquotea
00027DA6 <AmiBlitz3.ab3@10988>   CMP.w #$3B,D0
00027DAA <AmiBlitz3.ab3@10989>    BNE.b getcharb__donea
00027DB0 <AmiBlitz3.ab3@10990>   TST.w instringon
00027DB4 <AmiBlitz3.ab3@10991>    BNE.b getcharb__donea
00027DB6 <AmiBlitz3.ab3@10994>   MOVE.b (A5)+,D0
00027DBA <AmiBlitz3.ab3@10995>              BEQ getchar__l1
00027DBE <AmiBlitz3.ab3@10996>              CMP.b #":",d0
00027DC2 <AmiBlitz3.ab3@10997>              BNE getcharb__loopa                                ;:@
00027DC6 <AmiBlitz3.ab3@10998>              CMP.b #"@",(a5)
00027DCA <AmiBlitz3.ab3@10999>              BNE getcharb__loopa
00027DCC <AmiBlitz3.ab3@11000>              ADDQ #1,a5
00027DD2 <AmiBlitz3.ab3@11003>   MOVE.w D0,lastchar
00027DD6 <AmiBlitz3.ab3@11006> BRA.s getchar__weiter
00027DDC <AmiBlitz3.ab3@11009>   NOT.w instringon
00027DE2 <AmiBlitz3.ab3@11012>    MOVE.w D0,lastchar
00027DE6 <AmiBlitz3.ab3@11013>    BEQ.w getchar__done
00027DEA <AmiBlitz3.ab3@11014>    BPL.w getchar__done2
00027DEE <AmiBlitz3.ab3@11015>   CMP.w #-$7FE4,D0                                         ;cnif
00027DF2 <AmiBlitz3.ab3@11016>    BEQ.w getchar__cnif
00027DF6 <AmiBlitz3.ab3@11017>   CMP.w #-$7FE3,D0                                         ;csif
00027DFA <AmiBlitz3.ab3@11018>    BEQ.w getchar__csif
00027DFE <AmiBlitz3.ab3@11019>   CMP.w #-$7FE2,D0                                         ;celse
00027E02 <AmiBlitz3.ab3@11020>    BEQ.w getchar__celse
00027E06 <AmiBlitz3.ab3@11021>   CMP.w #-$7FE1,D0                                         ;cend
00027E0A <AmiBlitz3.ab3@11022>    BEQ.w getchar__cend
00027E10 <AmiBlitz3.ab3@11025>   TST.w skipcode
00027E14 <AmiBlitz3.ab3@11026>    BEQ.w getchar
00027E18 <AmiBlitz3.ab3@11027>   CMP.w #$7E,D0
00027E1C <AmiBlitz3.ab3@11028>    BEQ.w getchar__cmake                                         ;tilde
00027E20 <AmiBlitz3.ab3@11029>   CMP.w #$2,D0
00027E24 <AmiBlitz3.ab3@11030>    BNE.w getchar__notunpath
00027E2A <AmiBlitz3.ab3@11031>   MOVEA.l usedfrom,A5
00027E30 <AmiBlitz3.ab3@11032>   CLR.l usedfrom
00027E34 <AmiBlitz3.ab3@11033> BRA.w getchar
00027E38 <AmiBlitz3.ab3@11036>   CMP.w #$1,D0
00027E3C <AmiBlitz3.ab3@11037>    BNE.w getchar__done
00027E40 <AmiBlitz3.ab3@11041>   MOVEA.l cmakea5(PC),A5
00027E44 <AmiBlitz3.ab3@11042> BRA.w getchar
00027E4A <AmiBlitz3.ab3@11045>   TST.w cmake
00027E4E <AmiBlitz3.ab3@11046>    BNE.w getchar__done
00027E52 <AmiBlitz3.ab3@11048>   MOVEM.l D0-D7/A0-A6,-(A7)
00027E58 <AmiBlitz3.ab3@11049>   LEA cmake,a0                                         ;reass
00027E5A <AmiBlitz3.ab3@11050>   NOT.w (a0)
00027E5E <AmiBlitz3.ab3@11051>   LEA cmakebak(PC),A0
00027E64 <AmiBlitz3.ab3@11052>   LEA ptr_parameterstore,A1
00027E66 <AmiBlitz3.ab3@11053>   MOVEQ.l #$1F,D0
00027E68 <AmiBlitz3.ab3@11056>     MOVE.l (A1)+,(A0)+
00027E6C <AmiBlitz3.ab3@11057>   DBF D0,getchar__cmloop
00027E72 <AmiBlitz3.ab3@11060>    JSR AJL_0_BF6E
00027E76 <AmiBlitz3.ab3@11061>   CMP.w #$7E,D0
00027E7A <AmiBlitz3.ab3@11062>    BNE.w syntaxerr
00027E80 <AmiBlitz3.ab3@11063>   MOVE.l A5,cmakea5                                      ;tilde
00027E84 <AmiBlitz3.ab3@11064>   LEA cmakebuff(PC),A0
00027E86 <AmiBlitz3.ab3@11065>   MOVE.l D3,D2
00027E8A <AmiBlitz3.ab3@11066>   BSR.w makelong
00027E8C <AmiBlitz3.ab3@11067>   ADDQ.b #1,(A0)
00027E92 <AmiBlitz3.ab3@11068>   LEA cmake,a0
00027E94 <AmiBlitz3.ab3@11069>   NOT.w (a0)                                               ;reass
00027E98 <AmiBlitz3.ab3@11070>   LEA cmakebak(PC),A0
00027E9E <AmiBlitz3.ab3@11071>   LEA ptr_parameterstore,A1
00027EA0 <AmiBlitz3.ab3@11072>   MOVEQ.l #$1F,D0
00027EA2 <AmiBlitz3.ab3@11075>     MOVE.l (A0)+,(A1)+
00027EA6 <AmiBlitz3.ab3@11076>   DBF D0,getchar__cmloop2
00027EAA <AmiBlitz3.ab3@11078>   MOVEM.l (A7)+,D0-D7/A0-A6
00027EAE <AmiBlitz3.ab3@11079>   LEA cmakebuff(PC),A5
00027EB2 <AmiBlitz3.ab3@11080> BRA.w getchar
00027EB4 <AmiBlitz3.ab3@11083> RTS
00027EBE <AmiBlitz3.ab3@11087>   MOVE.l linenumat,ciflineat                               ;csif
00027EC4 <AmiBlitz3.ab3@11088>   TST.w skipcode
00027EC8 <AmiBlitz3.ab3@11089>    BEQ.w getchar__incnest
00027ECC <AmiBlitz3.ab3@11090>    BSR.w get1bytemain
00027ECE <AmiBlitz3.ab3@11091>    MOVE.l a1,-(a7)
00027ED4 <AmiBlitz3.ab3@11092>    JSR JL_0_C492
00027ED6 <AmiBlitz3.ab3@11093>    MOVE.l (a7)+,a1
00027EDA <AmiBlitz3.ab3@11094> BRA.w getchar
00027EE4 <AmiBlitz3.ab3@11097>   MOVE.l linenumat,ciflineat                               ;cnif
00027EEA <AmiBlitz3.ab3@11098>   TST.w skipcode
00027EEE <AmiBlitz3.ab3@11099>    BEQ.w getchar__incnest
00027EF2 <AmiBlitz3.ab3@11100>    BSR.w get1bytemain
00027EF6 <AmiBlitz3.ab3@11101>    CMP.b #"@",d0
00027EFA <AmiBlitz3.ab3@11102>    BNE getchar__cnif_ok2
00027EFE <AmiBlitz3.ab3@11103>    BSR.w get1bytemain
00027F06 <AmiBlitz3.ab3@11104>    MOVE.b #1,incnif
00027F0C <AmiBlitz3.ab3@11105>    JSR findconstant2
00027F10 <AmiBlitz3.ab3@11106>    BEQ getchar__cnif_ok2
00027F16 <AmiBlitz3.ab3@11109>    MOVE.w fast,-(a7)
00027F1C <AmiBlitz3.ab3@11110>    CLR.b fast
00027F1E <AmiBlitz3.ab3@11111>    MOVE.l a1,-(a7)
00027F24 <AmiBlitz3.ab3@11112>    JSR JL_0_C47E
00027F2A <AmiBlitz3.ab3@11113>    CLR.b incnif
00027F2C <AmiBlitz3.ab3@11114>    MOVE.l (a7)+,a1
00027F32 <AmiBlitz3.ab3@11115>    MOVE.w (a7)+,fast
00027F36 <AmiBlitz3.ab3@11116> BRA.w getchar
00027F3C <AmiBlitz3.ab3@11119>   ADDQ.w #1,connest
00027F40 <AmiBlitz3.ab3@11120> BRA.w getchar
00027F46 <AmiBlitz3.ab3@11123>   MOVE.w connest,D0                                      ;celse
00027F4A <AmiBlitz3.ab3@11124>    BNE.w getchar
00027F50 <AmiBlitz3.ab3@11125>   NOT.w skipcode
00027F54 <AmiBlitz3.ab3@11126> BRA.w getchar
00027F5A <AmiBlitz3.ab3@11129>   SUBQ.w #1,connest                                      ;cend
00027F5E <AmiBlitz3.ab3@11130>    BPL.w getchar
00027F64 <AmiBlitz3.ab3@11131>   ADDQ.w #1,connest
00027F6A <AmiBlitz3.ab3@11132>   MOVEA.l concomsp,A0
00027F70 <AmiBlitz3.ab3@11133>   CMPA.l #concomstack,A0
00027F74 <AmiBlitz3.ab3@11134>    BEQ.w nociferr
00027F76 <AmiBlitz3.ab3@11135>   SUBQ.w #2,A0
00027F7C <AmiBlitz3.ab3@11136>   MOVE.l A0,concomsp
00027F82 <AmiBlitz3.ab3@11137>   MOVE.w (A0),skipcode
00027F86 <AmiBlitz3.ab3@11138> BRA.w getchar
00027F8A <AmiBlitz3.ab3@11141> ciflineat:   Ds.l 1
00027F8C <AmiBlitz3.ab3@11149>   MOVEQ.l #$00,D0
00027F8E <AmiBlitz3.ab3@11150>   MOVE.b (A5)+,D0
00027F92 <AmiBlitz3.ab3@11151>    BEQ.b getcharb__done
00027F96 <AmiBlitz3.ab3@11152>    BPL.b getcharb__stuff
00027F98 <AmiBlitz3.ab3@11153>   LSL.w #8,D0
00027F9A <AmiBlitz3.ab3@11154>   MOVE.b (A5)+,D0
00027F9C <AmiBlitz3.ab3@11155> RTS
00027FA0 <AmiBlitz3.ab3@11158>   CMP.w #$22,D0
00027FA4 <AmiBlitz3.ab3@11159>    BEQ.b swapquote
00027FA8 <AmiBlitz3.ab3@11160>   CMP.w #$3B,D0
00027FAC <AmiBlitz3.ab3@11161>    BNE.b getcharb__done
00027FB2 <AmiBlitz3.ab3@11162>   TST.w instringon
00027FB6 <AmiBlitz3.ab3@11163>    BNE.b getcharb__done
00027FB8 <AmiBlitz3.ab3@11166>   MOVE.b (A5)+,D0
00027FBC <AmiBlitz3.ab3@11167>             BEQ getcharb__loop_l1
00027FC0 <AmiBlitz3.ab3@11168>             CMP.b #":",d0
00027FC4 <AmiBlitz3.ab3@11169>             BNE getcharb__loop
00027FC8 <AmiBlitz3.ab3@11170>             CMP.b #"@",(a5)
00027FCC <AmiBlitz3.ab3@11171>             BNE getcharb__loop
00027FD2 <AmiBlitz3.ab3@11174>   MOVE.w D0,lastchar
00027FD4 <AmiBlitz3.ab3@11177> RTS
00027FDA <AmiBlitz3.ab3@11180>   NOT.w instringon
00027FDC <AmiBlitz3.ab3@11181> RTS
00027FE0 <AmiBlitz3.ab3@11185>   BSR.w getchar
00027FE6 <AmiBlitz3.ab3@11186>   TST.w instringon
00027FEA <AmiBlitz3.ab3@11187>    BNE.w get1byte__skip
00027FEE <AmiBlitz3.ab3@11188>   CMP.w #$20,D0
00027FF2 <AmiBlitz3.ab3@11189>    BEQ.w get1byte_
00027FF4 <AmiBlitz3.ab3@11192> RTS
0002800E <AmiBlitz3.ab3@11195> gs:        Ds.w 13                                         ;ds.b 26  org source
00028012 <AmiBlitz3.ab3@11196>            Dc.b $F6,$E4,$FC,$D6                            ;dc.b 228,246,252,196,214,220 org source
00028014 <AmiBlitz3.ab3@11197>            Dc.b $C4,$DC
00028018 <AmiBlitz3.ab3@11203>   BSR.w getchar
0002801E <AmiBlitz3.ab3@11204>   TST.w instringon
00028022 <AmiBlitz3.ab3@11205>    BNE.w gchar2
00028026 <AmiBlitz3.ab3@11206>   CMP.w #$20,D0
0002802A <AmiBlitz3.ab3@11207>    BEQ.w get1bytemain
0002802C <AmiBlitz3.ab3@11209>   TST.w D0
00028030 <AmiBlitz3.ab3@11212>   BEQ.b get1bytemain__zero
00028036 <AmiBlitz3.ab3@11213>   TST.w instringon
0002803A <AmiBlitz3.ab3@11214>    BEQ.b get1bytemain__noqoute
0002803E <AmiBlitz3.ab3@11215>   CMP.b #$20,D0
00028042 <AmiBlitz3.ab3@11216>    BCC.b get1bytemain__skip
00028046 <AmiBlitz3.ab3@11217>   MOVE.b gs(PC,D0.W),D0
00028048 <AmiBlitz3.ab3@11218> RTS
0002804C <AmiBlitz3.ab3@11221>   CMP.w #-$7FDE,D0                                         ;cmp #$8000+34,d0 org source  ;else
00028050 <AmiBlitz3.ab3@11222>    BEQ.b get1bytemain__zero
00028054 <AmiBlitz3.ab3@11223>   CMP.w #$3A,D0
00028058 <AmiBlitz3.ab3@11224>    BEQ.b get1bytemain__zero
0002805A <AmiBlitz3.ab3@11227>   TST.w D0
0002805C <AmiBlitz3.ab3@11230> RTS
00028062 <AmiBlitz3.ab3@11234>   MOVE.w lastchar,D0
00028066 <AmiBlitz3.ab3@11235> BRA.w gchar2
00028070 <AmiBlitz3.ab3@11239>   MOVE.w oldqflag,instringon
00028076 <AmiBlitz3.ab3@11240>   MOVEA.l lastsourcepos,A5
00028078 <AmiBlitz3.ab3@11241> RTS
0002807E <AmiBlitz3.ab3@11245>   MOVE.w D0,locchar
00028084 <AmiBlitz3.ab3@11246>   MOVE.l A5,locloc
00028086 <AmiBlitz3.ab3@11247> RTS
0002808C <AmiBlitz3.ab3@11251>   MOVEA.l locloc,A5
00028092 <AmiBlitz3.ab3@11252>   MOVE.w locchar,D0
00028098 <AmiBlitz3.ab3@11253>   MOVE.w D0,lastchar
0002809A <AmiBlitz3.ab3@11254> RTS
0002809A <internal_errormsg.ab3@1> XINCLUDE "internal_errormsg.ab3"
000280E2 <internal_errormsg.ab3@9> XINCLUDE "internal_errormsg.ab3"
00028134 <internal_errormsg.ab3@10> XINCLUDE "internal_errormsg.ab3"
00028172 <internal_errormsg.ab3@11> XINCLUDE "internal_errormsg.ab3"
000281B0 <internal_errormsg.ab3@12> XINCLUDE "internal_errormsg.ab3"
000281DA <internal_errormsg.ab3@13> XINCLUDE "internal_errormsg.ab3"
0002820A <internal_errormsg.ab3@14> XINCLUDE "internal_errormsg.ab3"
00028254 <internal_errormsg.ab3@15> XINCLUDE "internal_errormsg.ab3"
000282DA <internal_errormsg.ab3@16> XINCLUDE "internal_errormsg.ab3"
0002833C <internal_errormsg.ab3@17> XINCLUDE "internal_errormsg.ab3"
00028384 <internal_errormsg.ab3@18> XINCLUDE "internal_errormsg.ab3"
000283D6 <internal_errormsg.ab3@19> XINCLUDE "internal_errormsg.ab3"
00028438 <internal_errormsg.ab3@20> XINCLUDE "internal_errormsg.ab3"
00028486 <internal_errormsg.ab3@21> XINCLUDE "internal_errormsg.ab3"
000284BC <internal_errormsg.ab3@22> XINCLUDE "internal_errormsg.ab3"
000284EA <internal_errormsg.ab3@23> XINCLUDE "internal_errormsg.ab3"
00028504 <internal_errormsg.ab3@24> XINCLUDE "internal_errormsg.ab3"
00028522 <internal_errormsg.ab3@25> XINCLUDE "internal_errormsg.ab3"
000285A0 <internal_errormsg.ab3@26> XINCLUDE "internal_errormsg.ab3"
000285CA <internal_errormsg.ab3@27> XINCLUDE "internal_errormsg.ab3"
000285F0 <internal_errormsg.ab3@28> XINCLUDE "internal_errormsg.ab3"
00028610 <internal_errormsg.ab3@29> XINCLUDE "internal_errormsg.ab3"
0002862E <internal_errormsg.ab3@30> XINCLUDE "internal_errormsg.ab3"
0002864E <internal_errormsg.ab3@31> XINCLUDE "internal_errormsg.ab3"
00028676 <internal_errormsg.ab3@32> XINCLUDE "internal_errormsg.ab3"
000286A0 <internal_errormsg.ab3@33> XINCLUDE "internal_errormsg.ab3"
000286A2 <internal_errormsg.ab3@36> XINCLUDE "internal_errormsg.ab3"
000286BE <internal_errormsg.ab3@39> XINCLUDE "internal_errormsg.ab3"
000286E4 <internal_errormsg.ab3@40> XINCLUDE "internal_errormsg.ab3"
000286FC <internal_errormsg.ab3@41> XINCLUDE "internal_errormsg.ab3"
0002875A <internal_errormsg.ab3@42> XINCLUDE "internal_errormsg.ab3"
0002877C <internal_errormsg.ab3@43> XINCLUDE "internal_errormsg.ab3"
000287A2 <internal_errormsg.ab3@44> XINCLUDE "internal_errormsg.ab3"
000287CA <internal_errormsg.ab3@45> XINCLUDE "internal_errormsg.ab3"
000287EA <internal_errormsg.ab3@46> XINCLUDE "internal_errormsg.ab3"
0002880E <internal_errormsg.ab3@47> XINCLUDE "internal_errormsg.ab3"
00028854 <internal_errormsg.ab3@48> XINCLUDE "internal_errormsg.ab3"
00028878 <internal_errormsg.ab3@49> XINCLUDE "internal_errormsg.ab3"
0002889C <internal_errormsg.ab3@50> XINCLUDE "internal_errormsg.ab3"
000288BC <internal_errormsg.ab3@51> XINCLUDE "internal_errormsg.ab3"
000288E0 <internal_errormsg.ab3@52> XINCLUDE "internal_errormsg.ab3"
00028902 <internal_errormsg.ab3@53> XINCLUDE "internal_errormsg.ab3"
0002892E <internal_errormsg.ab3@54> XINCLUDE "internal_errormsg.ab3"
00028954 <internal_errormsg.ab3@55> XINCLUDE "internal_errormsg.ab3"
0002895E <internal_errormsg.ab3@58> XINCLUDE "internal_errormsg.ab3"
00028984 <internal_errormsg.ab3@59> XINCLUDE "internal_errormsg.ab3"
000289D6 <internal_errormsg.ab3@61> XINCLUDE "internal_errormsg.ab3"
00028A40 <internal_errormsg.ab3@62> XINCLUDE "internal_errormsg.ab3"
00028A9E <internal_errormsg.ab3@63> XINCLUDE "internal_errormsg.ab3"
00028B0C <internal_errormsg.ab3@64> XINCLUDE "internal_errormsg.ab3"
00028B48 <internal_errormsg.ab3@65> XINCLUDE "internal_errormsg.ab3"
00028B66 <internal_errormsg.ab3@66> XINCLUDE "internal_errormsg.ab3"
00028B8C <internal_errormsg.ab3@67> XINCLUDE "internal_errormsg.ab3"
00028BBC <internal_errormsg.ab3@68> XINCLUDE "internal_errormsg.ab3"
00028BE0 <internal_errormsg.ab3@69> XINCLUDE "internal_errormsg.ab3"
00028C0E <internal_errormsg.ab3@70> XINCLUDE "internal_errormsg.ab3"
00028C32 <internal_errormsg.ab3@71> XINCLUDE "internal_errormsg.ab3"
00028C48 <internal_errormsg.ab3@72> XINCLUDE "internal_errormsg.ab3"
00028C5E <internal_errormsg.ab3@73> XINCLUDE "internal_errormsg.ab3"
00028C64 <internal_errormsg.ab3@76> XINCLUDE "internal_errormsg.ab3"
00028C6C <internal_errormsg.ab3@78> XINCLUDE "internal_errormsg.ab3"
00028C6E <internal_errormsg.ab3@79> XINCLUDE "internal_errormsg.ab3"
00028C72 <internal_errormsg.ab3@80> XINCLUDE "internal_errormsg.ab3"
00028C7A <internal_errormsg.ab3@81> XINCLUDE "internal_errormsg.ab3"
00028C7C <internal_errormsg.ab3@82> XINCLUDE "internal_errormsg.ab3"
00028CB6 <internal_errormsg.ab3@84> XINCLUDE "internal_errormsg.ab3"
00028CE2 <internal_errormsg.ab3@85> XINCLUDE "internal_errormsg.ab3"
00028D12 <internal_errormsg.ab3@86> XINCLUDE "internal_errormsg.ab3"
00028D4A <internal_errormsg.ab3@87> XINCLUDE "internal_errormsg.ab3"
00028DA4 <internal_errormsg.ab3@88> XINCLUDE "internal_errormsg.ab3"
00028DA6 <internal_errormsg.ab3@92> XINCLUDE "internal_errormsg.ab3"
00028DAA <internal_errormsg.ab3@93> XINCLUDE "internal_errormsg.ab3"
00028DAE <internal_errormsg.ab3@94> XINCLUDE "internal_errormsg.ab3"
00028DB2 <internal_errormsg.ab3@95> XINCLUDE "internal_errormsg.ab3"
00028DB6 <internal_errormsg.ab3@96> XINCLUDE "internal_errormsg.ab3"
00028DBA <internal_errormsg.ab3@97> XINCLUDE "internal_errormsg.ab3"
00028DBE <internal_errormsg.ab3@98> XINCLUDE "internal_errormsg.ab3"
00028DC2 <internal_errormsg.ab3@99> XINCLUDE "internal_errormsg.ab3"
00028DC6 <internal_errormsg.ab3@100> XINCLUDE "internal_errormsg.ab3"
00028DCA <internal_errormsg.ab3@101> XINCLUDE "internal_errormsg.ab3"
00028DCE <internal_errormsg.ab3@102> XINCLUDE "internal_errormsg.ab3"
00028E0C <internal_errormsg.ab3@103> XINCLUDE "internal_errormsg.ab3"
00028E3E <internal_errormsg.ab3@105> XINCLUDE "internal_errormsg.ab3"
00028E5C <internal_errormsg.ab3@106> XINCLUDE "internal_errormsg.ab3"
00028E86 <internal_errormsg.ab3@107> XINCLUDE "internal_errormsg.ab3"
00028EA2 <internal_errormsg.ab3@108> XINCLUDE "internal_errormsg.ab3"
00028EBC <internal_errormsg.ab3@109> XINCLUDE "internal_errormsg.ab3"
00028EDA <internal_errormsg.ab3@110> XINCLUDE "internal_errormsg.ab3"
00028EFE <internal_errormsg.ab3@111> XINCLUDE "internal_errormsg.ab3"
00028F00 <internal_errormsg.ab3@114> XINCLUDE "internal_errormsg.ab3"
00028F52 <internal_errormsg.ab3@115> XINCLUDE "internal_errormsg.ab3"
00028F7A <internal_errormsg.ab3@117> XINCLUDE "internal_errormsg.ab3"
00028FA2 <internal_errormsg.ab3@118> XINCLUDE "internal_errormsg.ab3"
00028FBE <internal_errormsg.ab3@122> XINCLUDE "internal_errormsg.ab3"
00028FDE <internal_errormsg.ab3@123> XINCLUDE "internal_errormsg.ab3"
00028FF6 <internal_errormsg.ab3@124> XINCLUDE "internal_errormsg.ab3"
0002903A <internal_errormsg.ab3@125> XINCLUDE "internal_errormsg.ab3"
00029082 <internal_errormsg.ab3@126> XINCLUDE "internal_errormsg.ab3"
000290AC <internal_errormsg.ab3@127> XINCLUDE "internal_errormsg.ab3"
000290D6 <internal_errormsg.ab3@128> XINCLUDE "internal_errormsg.ab3"
000290F0 <internal_errormsg.ab3@132> XINCLUDE "internal_errormsg.ab3"
0002911A <internal_errormsg.ab3@133> XINCLUDE "internal_errormsg.ab3"
0002916E <internal_errormsg.ab3@134> XINCLUDE "internal_errormsg.ab3"
000291BA <internal_errormsg.ab3@135> XINCLUDE "internal_errormsg.ab3"
000291F2 <internal_errormsg.ab3@136> XINCLUDE "internal_errormsg.ab3"
000291F8 <internal_errormsg.ab3@139> XINCLUDE "internal_errormsg.ab3"
00029206 <internal_errormsg.ab3@141> XINCLUDE "internal_errormsg.ab3"
00029236 <internal_errormsg.ab3@144> XINCLUDE "internal_errormsg.ab3"
0002926A <internal_errormsg.ab3@145> XINCLUDE "internal_errormsg.ab3"
000292D0 <internal_errormsg.ab3@146> XINCLUDE "internal_errormsg.ab3"
000292EE <internal_errormsg.ab3@147> XINCLUDE "internal_errormsg.ab3"
00029368 <internal_errormsg.ab3@148> XINCLUDE "internal_errormsg.ab3"
00029390 <internal_errormsg.ab3@149> XINCLUDE "internal_errormsg.ab3"
000293A6 <internal_errormsg.ab3@150> XINCLUDE "internal_errormsg.ab3"
000293BA <internal_errormsg.ab3@151> XINCLUDE "internal_errormsg.ab3"
000293BC <internal_errormsg.ab3@154> XINCLUDE "internal_errormsg.ab3"
000293BD <internal_errormsg.ab3@155> XINCLUDE "internal_errormsg.ab3"
000293BE <internal_errormsg.ab3@156> XINCLUDE "internal_errormsg.ab3"
000293DE <internal_errormsg.ab3@158> XINCLUDE "internal_errormsg.ab3"
000293E4 <internal_errormsg.ab3@161> XINCLUDE "internal_errormsg.ab3"
000293F6 <internal_errormsg.ab3@163> XINCLUDE "internal_errormsg.ab3"
0002942A <internal_errormsg.ab3@166> XINCLUDE "internal_errormsg.ab3"
00029442 <internal_errormsg.ab3@167> XINCLUDE "internal_errormsg.ab3"
0002945E <internal_errormsg.ab3@168> XINCLUDE "internal_errormsg.ab3"
00029476 <internal_errormsg.ab3@169> XINCLUDE "internal_errormsg.ab3"
00029496 <internal_errormsg.ab3@170> XINCLUDE "internal_errormsg.ab3"
000294B6 <internal_errormsg.ab3@171> XINCLUDE "internal_errormsg.ab3"
000294DC <internal_errormsg.ab3@172> XINCLUDE "internal_errormsg.ab3"
000294F2 <internal_errormsg.ab3@173> XINCLUDE "internal_errormsg.ab3"
0002950E <internal_errormsg.ab3@174> XINCLUDE "internal_errormsg.ab3"
00029538 <internal_errormsg.ab3@175> XINCLUDE "internal_errormsg.ab3"
00029550 <internal_errormsg.ab3@176> XINCLUDE "internal_errormsg.ab3"
0002956C <internal_errormsg.ab3@177> XINCLUDE "internal_errormsg.ab3"
0002958C <internal_errormsg.ab3@178> XINCLUDE "internal_errormsg.ab3"
000295A4 <internal_errormsg.ab3@179> XINCLUDE "internal_errormsg.ab3"
000295A8 <internal_errormsg.ab3@182> XINCLUDE "internal_errormsg.ab3"
000295AE <internal_errormsg.ab3@183> XINCLUDE "internal_errormsg.ab3"
000295B4 <internal_errormsg.ab3@184> XINCLUDE "internal_errormsg.ab3"
000295C9 <internal_errormsg.ab3@185> XINCLUDE "internal_errormsg.ab3"
000295CF <internal_errormsg.ab3@187> XINCLUDE "internal_errormsg.ab3"
000295D0 <internal_errormsg.ab3@188> XINCLUDE "internal_errormsg.ab3"
000295D4 <internal_errormsg.ab3@191> XINCLUDE "internal_errormsg.ab3"
000295DA <internal_errormsg.ab3@192> XINCLUDE "internal_errormsg.ab3"
000295E0 <internal_errormsg.ab3@193> XINCLUDE "internal_errormsg.ab3"
000295F3 <internal_errormsg.ab3@194> XINCLUDE "internal_errormsg.ab3"
000295F9 <internal_errormsg.ab3@196> XINCLUDE "internal_errormsg.ab3"
000295FA <internal_errormsg.ab3@197> XINCLUDE "internal_errormsg.ab3"
00029618 <internal_errormsg.ab3@199> XINCLUDE "internal_errormsg.ab3"
00029630 <internal_errormsg.ab3@200> XINCLUDE "internal_errormsg.ab3"
0002964C <internal_errormsg.ab3@201> XINCLUDE "internal_errormsg.ab3"
00029676 <internal_errormsg.ab3@202> XINCLUDE "internal_errormsg.ab3"
00029690 <internal_errormsg.ab3@203> XINCLUDE "internal_errormsg.ab3"
000296B0 <internal_errormsg.ab3@204> XINCLUDE "internal_errormsg.ab3"
000296CE <internal_errormsg.ab3@205> XINCLUDE "internal_errormsg.ab3"
000296FC <internal_errormsg.ab3@206> XINCLUDE "internal_errormsg.ab3"
00029706 <internal_errormsg.ab3@209> XINCLUDE "internal_errormsg.ab3"
00029738 <internal_errormsg.ab3@210> XINCLUDE "internal_errormsg.ab3"
00029756 <internal_errormsg.ab3@212> XINCLUDE "internal_errormsg.ab3"
00029774 <internal_errormsg.ab3@213> XINCLUDE "internal_errormsg.ab3"
00029794 <internal_errormsg.ab3@214> XINCLUDE "internal_errormsg.ab3"
000297BA <internal_errormsg.ab3@215> XINCLUDE "internal_errormsg.ab3"
000297E0 <internal_errormsg.ab3@216> XINCLUDE "internal_errormsg.ab3"
00029808 <internal_errormsg.ab3@217> XINCLUDE "internal_errormsg.ab3"
00029826 <internal_errormsg.ab3@218> XINCLUDE "internal_errormsg.ab3"
00029846 <internal_errormsg.ab3@219> XINCLUDE "internal_errormsg.ab3"
00029860 <internal_errormsg.ab3@220> XINCLUDE "internal_errormsg.ab3"
00029882 <internal_errormsg.ab3@221> XINCLUDE "internal_errormsg.ab3"
000298A0 <internal_errormsg.ab3@222> XINCLUDE "internal_errormsg.ab3"
000298C2 <internal_errormsg.ab3@223> XINCLUDE "internal_errormsg.ab3"
000298E6 <internal_errormsg.ab3@224> XINCLUDE "internal_errormsg.ab3"
000298EC <internal_errormsg.ab3@227> XINCLUDE "internal_errormsg.ab3"
00029908 <internal_errormsg.ab3@228> XINCLUDE "internal_errormsg.ab3"
00029924 <internal_errormsg.ab3@230> XINCLUDE "internal_errormsg.ab3"
00029942 <internal_errormsg.ab3@231> XINCLUDE "internal_errormsg.ab3"
00029960 <internal_errormsg.ab3@232> XINCLUDE "internal_errormsg.ab3"
000299AE <internal_errormsg.ab3@233> XINCLUDE "internal_errormsg.ab3"
000299CC <internal_errormsg.ab3@234> XINCLUDE "internal_errormsg.ab3"
000299EA <internal_errormsg.ab3@235> XINCLUDE "internal_errormsg.ab3"
00029A04 <internal_errormsg.ab3@236> XINCLUDE "internal_errormsg.ab3"
00029A50 <internal_errormsg.ab3@237> XINCLUDE "internal_errormsg.ab3"
00029A76 <internal_errormsg.ab3@238> XINCLUDE "internal_errormsg.ab3"
00029A96 <internal_errormsg.ab3@239> XINCLUDE "internal_errormsg.ab3"
00029AB8 <internal_errormsg.ab3@240> XINCLUDE "internal_errormsg.ab3"
00029AD4 <internal_errormsg.ab3@241> XINCLUDE "internal_errormsg.ab3"
00029AFA <internal_errormsg.ab3@242> XINCLUDE "internal_errormsg.ab3"
00029B16 <internal_errormsg.ab3@243> XINCLUDE "internal_errormsg.ab3"
00029B34 <internal_errormsg.ab3@244> XINCLUDE "internal_errormsg.ab3"
00029B5C <internal_errormsg.ab3@245> XINCLUDE "internal_errormsg.ab3"
00029B78 <internal_errormsg.ab3@246> XINCLUDE "internal_errormsg.ab3"
00029B88 <internal_errormsg.ab3@247> XINCLUDE "internal_errormsg.ab3"
00029BAA <internal_errormsg.ab3@248> XINCLUDE "internal_errormsg.ab3"
00029BAE <internal_errormsg.ab3@251> XINCLUDE "internal_errormsg.ab3"
00029BB0 <internal_errormsg.ab3@254> XINCLUDE "internal_errormsg.ab3"
00029BCA <internal_errormsg.ab3@255> XINCLUDE "internal_errormsg.ab3"
00029BEE <internal_errormsg.ab3@257> XINCLUDE "internal_errormsg.ab3"
00029C0E <internal_errormsg.ab3@258> XINCLUDE "internal_errormsg.ab3"
00029C40 <internal_errormsg.ab3@259> XINCLUDE "internal_errormsg.ab3"
00029C9E <internal_errormsg.ab3@260> XINCLUDE "internal_errormsg.ab3"
00029CD6 <internal_errormsg.ab3@261> XINCLUDE "internal_errormsg.ab3"
00029D14 <internal_errormsg.ab3@262> XINCLUDE "internal_errormsg.ab3"
00029D4A <internal_errormsg.ab3@263> XINCLUDE "internal_errormsg.ab3"
00029D7C <internal_errormsg.ab3@264> XINCLUDE "internal_errormsg.ab3"
00029DA0 <internal_errormsg.ab3@265> XINCLUDE "internal_errormsg.ab3"
00029DC4 <internal_errormsg.ab3@266> XINCLUDE "internal_errormsg.ab3"
00029E0E <internal_errormsg.ab3@267> XINCLUDE "internal_errormsg.ab3"
00029E36 <internal_errormsg.ab3@268> XINCLUDE "internal_errormsg.ab3"
00029E80 <internal_errormsg.ab3@269> XINCLUDE "internal_errormsg.ab3"
00029EC0 <internal_errormsg.ab3@270> XINCLUDE "internal_errormsg.ab3"
00029EC0 <AmiBlitz3.ab3@11258> XINCLUDE "internal_errormsg.ab3"
00029EC2 <AmiBlitz3.ab3@11262> ezerr:   Ds.w 1                                            ;for simple errors
00029EC8 <AmiBlitz3.ab3@11268>    MOVE.l myline,d0
00029ECC <AmiBlitz3.ab3@11269>   BNE handle_compileerror__l2
00029ED2 <AmiBlitz3.ab3@11271>     MOVE.l a5,lastsourcepos
00029ED4 <AmiBlitz3.ab3@11273>     SUBA.l a5,a5
00029EDA <AmiBlitz3.ab3@11275>   TST.l usedfrom
00029EDE <AmiBlitz3.ab3@11276>   BEQ handle_compileerror__org
00029EE4 <AmiBlitz3.ab3@11277>     MOVEA.l usedfrom,a5
00029EEA <AmiBlitz3.ab3@11280>   TST.w dirmode
00029EEE <AmiBlitz3.ab3@11281>   BNE.b handle_compileerror__quiet
00029EF4 <AmiBlitz3.ab3@11282>     JSR call_setpointernormal
00029EF8 <AmiBlitz3.ab3@11283>     MOVE.w ezerr(PC),D0
00029EFC <AmiBlitz3.ab3@11284>     BNE.w handle_compileerror__skip
00029F02 <AmiBlitz3.ab3@11285>       MOVE.w cfetchmode,D0
00029F06 <AmiBlitz3.ab3@11286>       BEQ.w handle_compileerror__skip2
00029F10 <AmiBlitz3.ab3@11287>         MOVE.l oldlibat,destbufferend                      ;fix up lib thing.
00029F16 <AmiBlitz3.ab3@11290>   MOVE.w constmode,D0
00029F1A <AmiBlitz3.ab3@11291>   BEQ.b handle_compileerror__skip3
00029F1E <AmiBlitz3.ab3@11292>     BSR.w asmerr2
00029F24 <AmiBlitz3.ab3@11295>   MOVE.l firstlocal,D1
00029F2A <AmiBlitz3.ab3@11296>   OR.l firstglob,D1
00029F2E <AmiBlitz3.ab3@11297>   BEQ.b handle_compileerror__notproc                       ;?!?!?!
00029F34 <AmiBlitz3.ab3@11298> 
00029F38 <AmiBlitz3.ab3@11299>     BNE handle_compileerror__notproc                       ; yes skip
00029F3E <AmiBlitz3.ab3@11300>       JSR JL_0_DB5C                                        ; no free some data ????
00029F46 <AmiBlitz3.ab3@11303>   MOVE.w #$FFFF,anyerrs                                    ;#-1,anyerrs org source
00029F50 <AmiBlitz3.ab3@11304>   CMP.l #"NORE",reqmode                                    ;for used functions
00029F54 <AmiBlitz3.ab3@11305>   BEQ handle_compileerror__notproc_l1
00029F5E <AmiBlitz3.ab3@11306>     MOVE.l linenumat,compilelinecounter
00029F64 <AmiBlitz3.ab3@11309>   JSR close_compilewin
00029F66 <AmiBlitz3.ab3@11312>   MOVEA.l (A7)+,A0
00029F6C <AmiBlitz3.ab3@11313>   MOVE.l errorcounter,d0                                   ; added to make maxerrorcount changable in CLIMode  tomsmart1
00029F72 <AmiBlitz3.ab3@11314>   CMP.l maxerrorcount,d0                                   ; changed to make maxerrorcount changable in CLIMode  tomsmart1
00029F76 <AmiBlitz3.ab3@11315>   BLT 'lesserror
00029F7C <AmiBlitz3.ab3@11316>   LEA errorlimit_text,a0
00029F82 <AmiBlitz3.ab3@11319>   ADDQ.l #1,errorcounter
00029F88 <AmiBlitz3.ab3@11320>   JSR errorstringparse
00029F92 <AmiBlitz3.ab3@11321>   CMP.l #"NORE",reqmode                                    ;for used functions
00029F96 <AmiBlitz3.ab3@11322>   BEQ handle_compileerror__skip_Lxx2
00029F9C <AmiBlitz3.ab3@11323>   TST.l CLIMode
00029FA0 <AmiBlitz3.ab3@11324>   BNE 'climode_output
00029FA6 <AmiBlitz3.ab3@11327>     JSR save_errorfile
00029FAA <AmiBlitz3.ab3@11328>     BRA 'end_output
00029FB0 <AmiBlitz3.ab3@11331>     JSR stdout_error
00029FB6 <AmiBlitz3.ab3@11333>      MOVE.l errorcounter,d0                          ; added to make maxerrorcount changable in CLIMode  tomsmart1
00029FBC <AmiBlitz3.ab3@11334>      CMP.l maxerrorcount,d0                          ; changed to make maxerrorcount changable in CLIMode  tomsmart1
00029FC0 <AmiBlitz3.ab3@11335>      BGT 'end_output
00029FC6 <AmiBlitz3.ab3@11336>     MOVE.l lastsourcepos,a5
00029FC8 <AmiBlitz3.ab3@11338>  'loop TST.b (a5)
00029FCC <AmiBlitz3.ab3@11339>       BEQ 'ok2
00029FCE <AmiBlitz3.ab3@11340>     MOVE.b (a5)+,d0                                  ; position to usefull source position to avoid following errors
00029FD2 <AmiBlitz3.ab3@11341>     BEQ 'ok
00029FD6 <AmiBlitz3.ab3@11342>     CMP.b #":",d0
00029FDA <AmiBlitz3.ab3@11343>     BEQ 'ok
00029FDE <AmiBlitz3.ab3@11344>     BRA 'loop
00029FE0 <AmiBlitz3.ab3@11346>  'ok SUBQ.l #1,a5
00029FE8 <AmiBlitz3.ab3@11348>  'ok2 MOVE.w #0,lastchar
00029FF0 <AmiBlitz3.ab3@11349>     MOVE.b #1,iserror
00029FF6 <AmiBlitz3.ab3@11350>     MOVE.l stackaddr,a7
00029FF8 <AmiBlitz3.ab3@11351>     RTS
00029FFA <AmiBlitz3.ab3@11357>   MOVE.l A0,-(a7)
0002A038 <AmiBlitz3.ab3@11358>   !ComData_GetL{comFunc_ErrorRequest,A1}
0002A03A <AmiBlitz3.ab3@11359>   MOVE.l (a7)+,A0
0002A03E <AmiBlitz3.ab3@11361>   MOVEM.l d6/D7/A6,-(A7)
0002A044 <AmiBlitz3.ab3@11362>   MOVE.l includeline,d7
0002A04A <AmiBlitz3.ab3@11363>   MOVE.l #"INLN",a6
0002A054 <AmiBlitz3.ab3@11364>   MOVE.l errstack,tempa7
0002A056 <AmiBlitz3.ab3@11365>   JSR (A1)                                                  ;open ped errorrequest
0002A05A <AmiBlitz3.ab3@11367>   MOVEM.l (A7)+,D7/d6/A6
0002A060 <AmiBlitz3.ab3@11370>   MOVE.l tempa7,a7
0002A066 <AmiBlitz3.ab3@11371>   MOVEA.l errcont,A0
0002A068 <AmiBlitz3.ab3@11373> RTS
0002A06E <AmiBlitz3.ab3@11376>   MOVEA.l errstack,A7
0002A074 <AmiBlitz3.ab3@11377>   MOVEA.l errcont,A0
0002A076 <AmiBlitz3.ab3@11379> RTS
0002A078 <AmiBlitz3.ab3@11382>   MOVE.l (A7),D0
0002A07E <AmiBlitz3.ab3@11383>   MOVEA.l errstack,A7
0002A084 <AmiBlitz3.ab3@11384>   MOVEA.l errcont,A0
0002A086 <AmiBlitz3.ab3@11385> JMP (A0)
0002A08A <AmiBlitz3.ab3@11391>   CMP.w #$7A,D0                                            ;'z'
0002A08E <AmiBlitz3.ab3@11392>    BHI.w tstalpha__no
0002A092 <AmiBlitz3.ab3@11393>   CMP.w #$41,D0                                            ;'A'
0002A096 <AmiBlitz3.ab3@11394>    BCS.w tstalpha__no
0002A09A <AmiBlitz3.ab3@11395>   CMP.w #$61,D0                                            ;'a'
0002A09E <AmiBlitz3.ab3@11396>    BCC.w tstalpha__yes
0002A0A2 <AmiBlitz3.ab3@11397>   CMP.w #$5A,D0                                            ;'Z'
0002A0A6 <AmiBlitz3.ab3@11398>    BHI.w tstalpha__no
0002A0A8 <AmiBlitz3.ab3@11401>   CMP.w D0,D0
0002A0AA <AmiBlitz3.ab3@11404> RTS
0002A0AE <AmiBlitz3.ab3@11412>   CMP.w #$30,D0                                            ;'0'
0002A0B2 <AmiBlitz3.ab3@11413>    BCS.w tstnum__skip
0002A0B6 <AmiBlitz3.ab3@11414>   CMP.w #$39,D0                                            ;'9'
0002A0BA <AmiBlitz3.ab3@11415>    BHI.w tstnum__skip                                     
0002A0BC <AmiBlitz3.ab3@11416>   CMP.w D0,D0
0002A0BE <AmiBlitz3.ab3@11419> RTS
0002A0E0 <AmiBlitz3.ab3@11425>   !compare1                                                ;bsr.w tstalpha
0002A0E4 <AmiBlitz3.ab3@11426>    BEQ.w tstlab__skip
0002A0F6 <AmiBlitz3.ab3@11427>   !compare2                                                ;bsr.w tstnum2
0002A0FA <AmiBlitz3.ab3@11428>    BEQ.w tstlab__skip
0002A0FE <AmiBlitz3.ab3@11429>   CMP.w #$5F,D0                                            ;'_'
0002A102 <AmiBlitz3.ab3@11430>    BEQ.w tstlab__skip
0002A106 <AmiBlitz3.ab3@11431>   CMP.w #$27,D0                                            ;#loclabch,d0 org source
0002A108 <AmiBlitz3.ab3@11434> RTS
0002A112 <AmiBlitz3.ab3@11439>   MOVE.w oldqflag,instringon
0002A118 <AmiBlitz3.ab3@11440>   MOVEA.l lastsourcepos,A5
0002A11E <AmiBlitz3.ab3@11443>   MOVE.l a5,beforeparameterfetch
0002A124 <AmiBlitz3.ab3@11444>   LEA ptr_parameterstore,A1
0002A126 <AmiBlitz3.ab3@11447>   MOVEQ.l #$00,D2
0002A12C <AmiBlitz3.ab3@11450>   LEA chartab,a0
0002A12E <AmiBlitz3.ab3@11451>   MOVEQ #0,d0
0002A134 <AmiBlitz3.ab3@11452>   MOVE.l A5,lastsourcepos
0002A13E <AmiBlitz3.ab3@11453>   MOVE.w instringon,oldqflag
0002A140 <AmiBlitz3.ab3@11456>     MOVE.b (a5)+,d0
0002A144 <AmiBlitz3.ab3@11457>   CMP.b #$20,d0                                            ;space deftype
0002A148 <AmiBlitz3.ab3@11458>   BEQ makename4__retry
0002A14E <AmiBlitz3.ab3@11460>   MOVE.w d0,lastchar
0002A152 <AmiBlitz3.ab3@11461>   TST.b 0(a0,d0.w)
0002A156 <AmiBlitz3.ab3@11462>   BNE makename__done
0002A158 <AmiBlitz3.ab3@11471>   MOVE.b D0,(A1)+
0002A15A <AmiBlitz3.ab3@11472>   ADDQ.l #1,D2
0002A160 <AmiBlitz3.ab3@11473>   MOVE.l A5,lastsourcepos
0002A162 <AmiBlitz3.ab3@11476>   MOVE.b (a5)+,d0
0002A168 <AmiBlitz3.ab3@11477>   MOVE.b d0,lastchar+1
0002A16C <AmiBlitz3.ab3@11478>   CMP.b #$20,d0
0002A170 <AmiBlitz3.ab3@11479>   BEQ makename__loop_l20
0002A174 <AmiBlitz3.ab3@11481>   TST.b 0(a0,d0)
0002A178 <AmiBlitz3.ab3@11482>   BEQ makename__loop
0002A17C <AmiBlitz3.ab3@11483>   CMP.b #2,d0
0002A180 <AmiBlitz3.ab3@11484>   BNE makename__loop_lf1
0002A186 <AmiBlitz3.ab3@11485>   MOVEA.l usedfrom,A5
0002A18C <AmiBlitz3.ab3@11486>   CLR.l usedfrom
0002A190 <AmiBlitz3.ab3@11487> BRA makename__loop_ln1
0002A194 <AmiBlitz3.ab3@11490>   CMP.b #1,d0
0002A198 <AmiBlitz3.ab3@11491>   BNE makename__loop_l20
0002A19C <AmiBlitz3.ab3@11492>   MOVEA.l cmakea5(PC),A5
0002A1A0 <AmiBlitz3.ab3@11493> BRA makename__loop_ln1
0002A1A4 <AmiBlitz3.ab3@11496>   CMP.b #$7e,d0
0002A1A8 <AmiBlitz3.ab3@11497>             BNE makename__loop_lt
0002A1AE <AmiBlitz3.ab3@11498>             TST.w cmake
0002A1B2 <AmiBlitz3.ab3@11499>             BNE.w makename__loop_a1
0002A1B4 <AmiBlitz3.ab3@11500>             SUBQ.l #1,a5
0002A1B8 <AmiBlitz3.ab3@11501>             BSR.w get1bytemain
0002A1BC <AmiBlitz3.ab3@11502> BRA makename__loop
0002A1C0 <AmiBlitz3.ab3@11506> BRA makename__loop_gpex
0002A1C4 <AmiBlitz3.ab3@11510>   BSR.w getchar
0002A1E6 <AmiBlitz3.ab3@11511>    !compare1                                               ;bsr.w tstalpha
0002A1EA <AmiBlitz3.ab3@11512>    BEQ.w makename__loop_getp1
0002A1FC <AmiBlitz3.ab3@11513>    !compare2                                               ;bsr.w tstnum
0002A200 <AmiBlitz3.ab3@11514>    BEQ.w makename__loop_getp1
0002A204 <AmiBlitz3.ab3@11515>   CMP.w #$5F,D0                                            ;'_'
0002A208 <AmiBlitz3.ab3@11516>    BEQ.w makename__loop_getp1
0002A20C <AmiBlitz3.ab3@11517>   CMP.w #$27,D0                                            ;#loclabch,d0 org source
0002A210 <AmiBlitz3.ab3@11521>       BNE makename__loop_gpex
0002A214 <AmiBlitz3.ab3@11522>       CMP.b #$20,d0
0002A218 <AmiBlitz3.ab3@11523>       BNE.w makename__loop
0002A21A <AmiBlitz3.ab3@11526>      TST.b d0
0002A21E <AmiBlitz3.ab3@11527>      BPL makename__loop_l10
0002A220 <AmiBlitz3.ab3@11528>      SUBQ.l #1,a5
0002A224 <AmiBlitz3.ab3@11529>      BSR get1byte_
0002A228 <AmiBlitz3.ab3@11532>    CMP.w #$20,D0
0002A22C <AmiBlitz3.ab3@11533>    BNE.w makename__done
0002A22E <AmiBlitz3.ab3@11534>    MOVEQ #0,d0
0002A234 <AmiBlitz3.ab3@11535>   MOVE.l a5,lastsourcepos
0002A236 <AmiBlitz3.ab3@11538>   MOVE.b (a5)+,d0                                          ;neuneu
0002A23A <AmiBlitz3.ab3@11539>   BPL makename__loop_l101:
0002A23C <AmiBlitz3.ab3@11540>   ASL.w #8,d0
0002A23E <AmiBlitz3.ab3@11541>   MOVE.b (a5)+,d0
0002A244 <AmiBlitz3.ab3@11544>   TST.w instringon
0002A248 <AmiBlitz3.ab3@11545>   BNE makename__loop_l102
0002A24C <AmiBlitz3.ab3@11546>   CMP.b #$20,d0
0002A250 <AmiBlitz3.ab3@11547>   BEQ makename__loop_l103
0002A254 <AmiBlitz3.ab3@11548>   CMP.b #";",d0
0002A258 <AmiBlitz3.ab3@11549>   BNE makename__loop_l102
0002A25A <AmiBlitz3.ab3@11552>   MOVE.b (A5)+,D0
0002A25E <AmiBlitz3.ab3@11553>              BEQ makename__loop_l1
0002A262 <AmiBlitz3.ab3@11554>              CMP.b #":",d0
0002A266 <AmiBlitz3.ab3@11555>              BNE makename__loop_lr                         ;:@
0002A26A <AmiBlitz3.ab3@11556>              CMP.b #"@",(a5)
0002A26E <AmiBlitz3.ab3@11557>              BNE makename__loop_lr
0002A270 <AmiBlitz3.ab3@11558>              ADDQ #1,a5
0002A276 <AmiBlitz3.ab3@11562>   MOVE.w d0,lastchar
0002A27A <AmiBlitz3.ab3@11566>   CMP.b #";",d0
0002A27E <AmiBlitz3.ab3@11567>   BEQ makename__done_l11
0002A280 <AmiBlitz3.ab3@11568>   CLR.b (A1)
0002A282 <AmiBlitz3.ab3@11570>   TST.w D2
0002A284 <AmiBlitz3.ab3@11571> RTS
0002A286 <AmiBlitz3.ab3@11574>   CLR.b (a1)
0002A288 <AmiBlitz3.ab3@11575>   MOVEQ #0,d0
0002A28E <AmiBlitz3.ab3@11576>   MOVE.w d0,lastchar
0002A290 <AmiBlitz3.ab3@11578>   TST.w D2
0002A292 <AmiBlitz3.ab3@11579> RTS
0002A294 <AmiBlitz3.ab3@11585>   MOVE.l (A2),D0
0002A298 <AmiBlitz3.ab3@11588>   BEQ.w findlast__here
0002A29A <AmiBlitz3.ab3@11589>   MOVEA.l D0,A2
0002A29E <AmiBlitz3.ab3@11590> BRA.w findlast__loop
0002A2A2 <AmiBlitz3.ab3@11593> BRA.w reget
0002A2A4 <AmiBlitz3.ab3@11599>   MOVE.l (A2),-(A7)
0002A2A8 <AmiBlitz3.ab3@11600>   BSR.w addlabel
0002A2AA <AmiBlitz3.ab3@11601>   MOVE.l (A7)+,(A2)
0002A2AC <AmiBlitz3.ab3@11602> RTS
0002A2B2 <AmiBlitz3.ab3@11607>   CLR.l fp0addr
0002A2B8 <AmiBlitz3.ab3@11608>   TST.w dirmode
0002A2BC <AmiBlitz3.ab3@11609>    BNE.w illdirerr
0002A2BE <AmiBlitz3.ab3@11610>   MOVEQ.l #$00,D0
0002A2C0 <AmiBlitz3.ab3@11611>   MOVE.w D7,D0
0002A2C2 <AmiBlitz3.ab3@11612>   ADD.w D2,D0
0002A2C4 <AmiBlitz3.ab3@11613>   ADDQ.w #1,D0
0002A2C6 <AmiBlitz3.ab3@11614>   MOVE.w D0,D2
0002A2C8 <AmiBlitz3.ab3@11615>   ADDQ.l #2,d0
0002A2CA <AmiBlitz3.ab3@11616>   MOVEQ.l #$01,D1
0002A2D0 <AmiBlitz3.ab3@11617>   MOVEA.l _execbase,A6
0002A2D6 <AmiBlitz3.ab3@11618>   MOVE.l mempool2,a0
0002A2DA <AmiBlitz3.ab3@11619>   JSR _AllocPooled(a6)
0002A2E0 <AmiBlitz3.ab3@11621>   MOVE.l lastlabel,a2
0002A2E2 <AmiBlitz3.ab3@11622>   MOVE.l D0,(A2)
0002A2E4 <AmiBlitz3.ab3@11623>   MOVE.l d0,a0
0002A2E6 <AmiBlitz3.ab3@11624>   CLR.l (a0)
0002A2EC <AmiBlitz3.ab3@11625>   MOVE.l a0,lastlabel
0002A2EE <AmiBlitz3.ab3@11626>   MOVE.l d0,A2
0002A2F2 <AmiBlitz3.ab3@11627>   LEA -$1(A0,D7.W),A0
0002A2F4 <AmiBlitz3.ab3@11628>   MOVE.b D2,(A0)+
0002A2FA <AmiBlitz3.ab3@11629>   LEA ptr_parameterstore,A1
0002A2FC <AmiBlitz3.ab3@11630>   MOVEQ #0,d0
0002A2FE <AmiBlitz3.ab3@11631>   MOVEQ #0,d1
0002A300 <AmiBlitz3.ab3@11634>   MOVE.b (A1)+,d1
0002A304 <AmiBlitz3.ab3@11635>    BEQ 'l1
0002A30A <AmiBlitz3.ab3@11636>    !hashalgo
0002A30C <AmiBlitz3.ab3@11637>    MOVE.b d1,(A0)+
0002A310 <AmiBlitz3.ab3@11638> BRA addlabel_loop2a
0002A312 <AmiBlitz3.ab3@11641>    CLR.b (a0)+
0002A318 <AmiBlitz3.ab3@11642>    LEA labelhash,a0
0002A31E <AmiBlitz3.ab3@11643>    AND.l #hashsize,d0
0002A320 <AmiBlitz3.ab3@11644>    ASL.l #2,d0
0002A324 <AmiBlitz3.ab3@11645>    MOVE.l 0(a0,d0),d1
0002A328 <AmiBlitz3.ab3@11646>    MOVE.l d1,$c(a2)
0002A32C <AmiBlitz3.ab3@11647>    MOVE.l a2,0(a0,d0)
0002A32E <AmiBlitz3.ab3@11648>    MOVEQ #0,d0
0002A332 <AmiBlitz3.ab3@11649> BRA.w reget
0002A338 <AmiBlitz3.ab3@11653>    TST.b newvariable
0002A33C <AmiBlitz3.ab3@11654>    BNE addlabel
0002A342 <AmiBlitz3.ab3@11657>   TST.w dirmode
0002A346 <AmiBlitz3.ab3@11658>    BNE.w illdirerr
0002A348 <AmiBlitz3.ab3@11659>   MOVEQ.l #$00,D0
0002A34A <AmiBlitz3.ab3@11660>   MOVE.w D7,D0
0002A34C <AmiBlitz3.ab3@11661>   ADD.w D2,D0
0002A34E <AmiBlitz3.ab3@11662>   ADDQ.w #1,D0
0002A350 <AmiBlitz3.ab3@11663>   MOVE.w D0,D2
0002A352 <AmiBlitz3.ab3@11664>   MOVEQ.l #$01,D1
0002A358 <AmiBlitz3.ab3@11665>   MOVEA.l _execbase,A6
0002A35E <AmiBlitz3.ab3@11666>   MOVE.l mempool2,a0
0002A362 <AmiBlitz3.ab3@11667>   JSR _AllocPooled(a6)
0002A364 <AmiBlitz3.ab3@11668>   MOVEA.l D0,A0
0002A36A <AmiBlitz3.ab3@11670>   LEA varbase,a2
0002A36C <AmiBlitz3.ab3@11671>   MOVE.l (a2),(a0)
0002A36E <AmiBlitz3.ab3@11672>   MOVE.l A0,(A2)
0002A370 <AmiBlitz3.ab3@11673>   MOVEA.l A0,A2
0002A374 <AmiBlitz3.ab3@11674>   LEA -$1(A0,D7.W),A0
0002A376 <AmiBlitz3.ab3@11675>   MOVE.b D2,(A0)+
0002A37C <AmiBlitz3.ab3@11676>   LEA ptr_parameterstore,A1
0002A37E <AmiBlitz3.ab3@11677>   MOVEQ #0,d0
0002A380 <AmiBlitz3.ab3@11678>   MOVEQ #0,d1
0002A382 <AmiBlitz3.ab3@11681>   MOVE.b (A1)+,d1
0002A386 <AmiBlitz3.ab3@11682>    BEQ 'l12
0002A38C <AmiBlitz3.ab3@11683>    !hashalgo
0002A38E <AmiBlitz3.ab3@11684>    MOVE.b d1,(A0)+
0002A392 <AmiBlitz3.ab3@11685> BRA 'l11
0002A394 <AmiBlitz3.ab3@11688>   CLR.b (a0)+
0002A39A <AmiBlitz3.ab3@11689>   LEA variablehash,a0
0002A3A0 <AmiBlitz3.ab3@11690>    AND.l #hashsize,d0
0002A3A2 <AmiBlitz3.ab3@11691>    ASL.l #2,d0
0002A3A6 <AmiBlitz3.ab3@11692>    MOVE.l 0(a0,d0),d1
0002A3AA <AmiBlitz3.ab3@11693>    MOVE.l d1,$e(a2)
0002A3AE <AmiBlitz3.ab3@11694>    MOVE.l a2,0(a0,d0)
0002A3B0 <AmiBlitz3.ab3@11695>    MOVEQ #0,d0
0002A3B4 <AmiBlitz3.ab3@11696> BRA.w reget
0002A3BA <AmiBlitz3.ab3@11700>   TST.w dirmode
0002A3BE <AmiBlitz3.ab3@11701>    BNE.w illdirerr
0002A3C0 <AmiBlitz3.ab3@11708>   MOVEQ.l #$00,D0
0002A3C2 <AmiBlitz3.ab3@11709>   MOVE.w D7,D0
0002A3C4 <AmiBlitz3.ab3@11710>   ADD.w D2,D0
0002A3C6 <AmiBlitz3.ab3@11711>   ADDQ.w #1,D0
0002A3C8 <AmiBlitz3.ab3@11712>   MOVE.w D0,D2
0002A3CA <AmiBlitz3.ab3@11713>   MOVEQ.l #$01,D1
0002A3D0 <AmiBlitz3.ab3@11714>   MOVEA.l _execbase,A6
0002A3D6 <AmiBlitz3.ab3@11715>   MOVE.l mempool2,a0
0002A3DA <AmiBlitz3.ab3@11716>   JSR _AllocPooled(a6)
0002A3DC <AmiBlitz3.ab3@11718>   MOVEA.l D0,A0
0002A3DE <AmiBlitz3.ab3@11719>   MOVE.l A0,(A2)
0002A3E0 <AmiBlitz3.ab3@11720>   CLR.l (a0)
0002A3E4 <AmiBlitz3.ab3@11721>   CLR.l 8(a0)                                              ;clear next
0002A3E6 <AmiBlitz3.ab3@11722>   MOVEA.l A0,A2
0002A3EA <AmiBlitz3.ab3@11723>   LEA -$1(A0,D7.W),A0
0002A3EC <AmiBlitz3.ab3@11724>   MOVE.b D2,(A0)+                                          ;put in struct length
0002A3F2 <AmiBlitz3.ab3@11725>   LEA ptr_parameterstore,A1
0002A3F4 <AmiBlitz3.ab3@11726>   MOVEQ #0,d0
0002A3F6 <AmiBlitz3.ab3@11727>   MOVEQ #0,d1
0002A3F8 <AmiBlitz3.ab3@11730>   MOVE.b (A1)+,d1
0002A3FA <AmiBlitz3.ab3@11733>   MOVE.b d1,(A0)+
0002A3FE <AmiBlitz3.ab3@11734>   BNE.w addlabel_loop2
0002A402 <AmiBlitz3.ab3@11735> BRA.w reget
0002A404 <AmiBlitz3.ab3@11739>   MOVEQ.l #$13,D7
0002A40A <AmiBlitz3.ab3@11740>   LEA constantbase,A2
0002A40E <AmiBlitz3.ab3@11741> BRA.w findlab
0002A410 <AmiBlitz3.ab3@11745>   MOVEQ.l #$05+8,D7                                        ;#5,d7 org source
0002A416 <AmiBlitz3.ab3@11746>   LEA xinclude_base,A2
0002A41A <AmiBlitz3.ab3@11747> BRA.w findlab
0002A41C <AmiBlitz3.ab3@11751>   MOVEQ.l #$09,D7
0002A422 <AmiBlitz3.ab3@11752>   LEA firstconst,A2
0002A426 <AmiBlitz3.ab3@11753> BRA.w findlab
0002A428 <AmiBlitz3.ab3@11757>   MOVEQ.l #$0d,D7                                          ;find macro
0002A42E <AmiBlitz3.ab3@11758>   LEA macrobase,A2
0002A432 <AmiBlitz3.ab3@11759> BRA.w findlab
0002A438 <AmiBlitz3.ab3@11763>   LEA labelhash,A2
0002A43A <AmiBlitz3.ab3@11764>   MOVEQ.l #$13,D7
0002A43C <AmiBlitz3.ab3@11765>   EXT.l d2
0002A442 <AmiBlitz3.ab3@11766>   LEA ptr_parameterstore,A0
0002A444 <AmiBlitz3.ab3@11767>   MOVEQ #0,d0
0002A446 <AmiBlitz3.ab3@11768>   MOVEQ #0,d1
0002A448 <AmiBlitz3.ab3@11771>     MOVE.b (a0)+,d1
0002A44C <AmiBlitz3.ab3@11772>     BEQ 'l15
0002A452 <AmiBlitz3.ab3@11773>     !hashalgo
0002A456 <AmiBlitz3.ab3@11774> BRA 'l20
0002A45C <AmiBlitz3.ab3@11777>   AND.l #hashsize,d0
0002A45E <AmiBlitz3.ab3@11778>   ASL.l #2,d0
0002A462 <AmiBlitz3.ab3@11779>   MOVE.l 0(a2,d0),d0
0002A466 <AmiBlitz3.ab3@11780> BRA 'l11
0002A46A <AmiBlitz3.ab3@11783>   MOVE.l $c(A2),D0                                         ;find label
0002A46E <AmiBlitz3.ab3@11786>   BEQ findlab__no
0002A470 <AmiBlitz3.ab3@11787>   MOVEA.l D0,A2
0002A472 <AmiBlitz3.ab3@11788>   MOVEQ.l #$00,D0
0002A476 <AmiBlitz3.ab3@11789>   MOVE.b -$1(A2,D7.l),D0
0002A47C <AmiBlitz3.ab3@11790>   LEA ptr_parameterstore,A0
0002A47E <AmiBlitz3.ab3@11791>   SUB.l D7,D0
0002A480 <AmiBlitz3.ab3@11792>   SUBQ.l #1,D0
0002A482 <AmiBlitz3.ab3@11793>   CMP.l D0,D2
0002A486 <AmiBlitz3.ab3@11794>    BNE.b 'l10
0002A48A <AmiBlitz3.ab3@11795>   LEA $0(A2,D7.W),A1
0002A48C <AmiBlitz3.ab3@11796>   SUBQ.l #1,D0
0002A48E <AmiBlitz3.ab3@11799>     MOVE.b (a1)+,d1
0002A490 <AmiBlitz3.ab3@11800>     CMP.b (a0)+,d1
0002A494 <AmiBlitz3.ab3@11802>     BNE.b 'l10
0002A498 <AmiBlitz3.ab3@11803>   DBF D0,'l201
0002A49C <AmiBlitz3.ab3@11805>   BSR.w reget
0002A49E <AmiBlitz3.ab3@11806>   CMP.w D0,D0
0002A4A0 <AmiBlitz3.ab3@11807> RTS
0002A4A2 <AmiBlitz3.ab3@11811>   MOVEQ.l #$0B,D7
0002A4A6 <AmiBlitz3.ab3@11812> BRA.w findlab
0002A4AC <AmiBlitz3.ab3@11816>   LEA firstproc,A2
0002A4B2 <AmiBlitz3.ab3@11817>   MOVE.l #$21+#funcentry_extend,D7
0002A4B6 <AmiBlitz3.ab3@11818> BRA findlab
0002A4BC <AmiBlitz3.ab3@11822>   LEA firstfor,A2
0002A4BE <AmiBlitz3.ab3@11823>   MOVEQ.l #$11,D7
0002A4C2 <AmiBlitz3.ab3@11824> BRA.w findlab
0002A4C4 <AmiBlitz3.ab3@11828>   MOVEQ.l #$0F,D7
0002A4C8 <AmiBlitz3.ab3@11829> BRA.w findlab
0002A4CA <AmiBlitz3.ab3@11833>   MOVEQ.l #$0F+4,D7
0002A4D0 <AmiBlitz3.ab3@11834>   TST.b newvariable
0002A4D4 <AmiBlitz3.ab3@11835>    BNE.w findlab
0002A4DA <AmiBlitz3.ab3@11836>   LEA variablehash,A2
0002A4E0 <AmiBlitz3.ab3@11837>   LEA ptr_parameterstore,A0
0002A4E2 <AmiBlitz3.ab3@11838>   MOVEQ #0,d0
0002A4E4 <AmiBlitz3.ab3@11839>   MOVEQ #0,d1
0002A4E6 <AmiBlitz3.ab3@11842>     MOVE.b (a0)+,d1
0002A4EA <AmiBlitz3.ab3@11843>     BEQ 'l15
0002A4F0 <AmiBlitz3.ab3@11844>     !hashalgo
0002A4F4 <AmiBlitz3.ab3@11845> BRA 'l20
0002A4FA <AmiBlitz3.ab3@11848>   AND.l #hashsize,d0
0002A4FC <AmiBlitz3.ab3@11849>   ASL.l #2,d0
0002A500 <AmiBlitz3.ab3@11850>   MOVE.l 0(a2,d0),d0
0002A504 <AmiBlitz3.ab3@11851> BRA 'l11
0002A508 <AmiBlitz3.ab3@11854>   MOVE.l $e(A2),D0                                         ;find label
0002A50C <AmiBlitz3.ab3@11857>   BEQ findlab__no
0002A50E <AmiBlitz3.ab3@11858>   MOVEA.l D0,A2
0002A510 <AmiBlitz3.ab3@11859>   MOVEQ.l #$00,D0
0002A514 <AmiBlitz3.ab3@11860>   MOVE.b -$1(A2,D7.W),D0
0002A51A <AmiBlitz3.ab3@11861>   LEA ptr_parameterstore,A0
0002A51C <AmiBlitz3.ab3@11862>   SUB.w D7,D0
0002A51E <AmiBlitz3.ab3@11863>   SUBQ.l #1,D0
0002A520 <AmiBlitz3.ab3@11864>   CMP.w D0,D2
0002A524 <AmiBlitz3.ab3@11865>    BNE.b 'l10
0002A528 <AmiBlitz3.ab3@11866>   LEA $0(A2,D7.W),A1
0002A52A <AmiBlitz3.ab3@11867>   SUBQ.l #1,D0
0002A52C <AmiBlitz3.ab3@11870>     MOVE.b (a1)+,d1
0002A52E <AmiBlitz3.ab3@11871>     CMP.b (a0)+,d1
0002A532 <AmiBlitz3.ab3@11873>     BNE.b 'l10
0002A536 <AmiBlitz3.ab3@11874>   DBF D0,'l201
0002A53A <AmiBlitz3.ab3@11876>   BSR.w reget
0002A53C <AmiBlitz3.ab3@11877>   CMP.w D0,D0
0002A53E <AmiBlitz3.ab3@11878> RTS
0002A540 <AmiBlitz3.ab3@11891>     MOVE.l (A2),D0                                         ;find label
0002A544 <AmiBlitz3.ab3@11892>      BEQ.b findlab__no
0002A546 <AmiBlitz3.ab3@11893>     MOVEA.l D0,A2
0002A548 <AmiBlitz3.ab3@11894>     MOVEQ.l #$00,D0
0002A54C <AmiBlitz3.ab3@11895>     MOVE.b -$1(A2,D7.W),D0
0002A54E <AmiBlitz3.ab3@11896>     SUB.l D7,D0
0002A550 <AmiBlitz3.ab3@11897>     SUBQ.l #1,D0
0002A552 <AmiBlitz3.ab3@11898>   CMP.w D0,D2
0002A556 <AmiBlitz3.ab3@11899>   BNE.b findlab__loop
0002A55A <AmiBlitz3.ab3@11901>   LEA $0(A2,D7.W),A1
0002A560 <AmiBlitz3.ab3@11902>   LEA ptr_parameterstore,A0
0002A562 <AmiBlitz3.ab3@11903>   SUBQ.l #1,D0
0002A564 <AmiBlitz3.ab3@11906>     MOVE.b (a1)+,d1
0002A566 <AmiBlitz3.ab3@11907>     CMP.b (a0)+,d1
0002A56A <AmiBlitz3.ab3@11909>     BNE.b findlab__loop
0002A56E <AmiBlitz3.ab3@11910>   DBF D0,findlab__loop2
0002A572 <AmiBlitz3.ab3@11912>   BSR.w reget
0002A574 <AmiBlitz3.ab3@11913>   CMP.w D0,D0
0002A576 <AmiBlitz3.ab3@11914> RTS
0002A57A <AmiBlitz3.ab3@11917>   BSR.w reget
0002A57C <AmiBlitz3.ab3@11918>   MOVEQ.l #-$01,D1
0002A57E <AmiBlitz3.ab3@11919> RTS
0002A584 <AmiBlitz3.ab3@11923>   MOVEA.l alllocals,A4
0002A58A <AmiBlitz3.ab3@11924>   CLR.l alllocals
0002A58E <AmiBlitz3.ab3@11928>     CMPA.w #$0,A4
0002A592 <AmiBlitz3.ab3@11929>      BEQ.b freeprocvs__done
0002A596 <AmiBlitz3.ab3@11930>     MOVEA.l $4(A4),A3
0002A59A <AmiBlitz3.ab3@11932>     MOVEA.l $8(A4),A3
0002A59C <AmiBlitz3.ab3@11934>     MOVEA.l A4,A1
0002A59E <AmiBlitz3.ab3@11935>     MOVEA.l (A4),A4
0002A5A0 <AmiBlitz3.ab3@11936>     MOVEQ.l #$0C,D0
0002A5A6 <AmiBlitz3.ab3@11937>     MOVEA.l _execbase,A6
0002A5AC <AmiBlitz3.ab3@11938>     MOVE.l mempool,a0
0002A5B0 <AmiBlitz3.ab3@11939>     JSR _FreePooled(A6)
0002A5B4 <AmiBlitz3.ab3@11940> BRA.b freeprocvs__loop
0002A5BA <AmiBlitz3.ab3@11943>   CLR.l firstglob                                          ;fix 2*aclearallvar called
0002A5C0 <AmiBlitz3.ab3@11944>   CLR.l firstlocal
0002A5C6 <AmiBlitz3.ab3@11945>   CLR.l sharebase
0002A5CC <AmiBlitz3.ab3@11946>   TST.l mempool2
0002A5D0 <AmiBlitz3.ab3@11947>   BEQ freeprocvs__done_l10
0002A5D6 <AmiBlitz3.ab3@11949>   MOVEA.l _execbase,A6
0002A5DC <AmiBlitz3.ab3@11950>   MOVE.l mempool2,a0
0002A5E2 <AmiBlitz3.ab3@11951>   CLR.l mempool2
0002A5E6 <AmiBlitz3.ab3@11952>   JSR _DeletePool(a6)
0002A5EC <AmiBlitz3.ab3@11955>   MOVE.l _execbase,a6
0002A5F2 <AmiBlitz3.ab3@11956>   MOVE.l #$10000,d0
0002A5F8 <AmiBlitz3.ab3@11957>   MOVE.l #80000,d1
0002A5FA <AmiBlitz3.ab3@11958>   MOVE.l d1,d2
0002A5FE <AmiBlitz3.ab3@11959>   JSR _CreatePool(a6)
0002A604 <AmiBlitz3.ab3@11960>   MOVE.l d0,mempool2
0002A606 <AmiBlitz3.ab3@11961> RTS
0002A60A <AmiBlitz3.ab3@11965>   CMPA.w #$0,A3
0002A60E <AmiBlitz3.ab3@11966>    BEQ.w freevars__done
0002A610 <AmiBlitz3.ab3@11967>   MOVEA.l A3,A1
0002A612 <AmiBlitz3.ab3@11968>   MOVEA.l (A3),A3
0002A614 <AmiBlitz3.ab3@11969>   MOVEQ.l #$00,D0
0002A618 <AmiBlitz3.ab3@11970>   MOVE.b $E(A1),D0
0002A61E <AmiBlitz3.ab3@11971>   MOVEA.l _execbase,A6
0002A624 <AmiBlitz3.ab3@11972>   MOVE.l mempool2,a0
0002A628 <AmiBlitz3.ab3@11973>   JSR _FreePooled(A6)
0002A62C <AmiBlitz3.ab3@11974> BRA.w freevars
0002A630 <AmiBlitz3.ab3@11977>     CMPA.w #$0,A3
0002A634 <AmiBlitz3.ab3@11978>      BEQ.w freevars__done
0002A636 <AmiBlitz3.ab3@11979>     MOVEA.l A3,A1
0002A638 <AmiBlitz3.ab3@11980>     MOVEA.l (A3),A3
0002A63A <AmiBlitz3.ab3@11981>     MOVEQ.l #$00,D0
0002A63E <AmiBlitz3.ab3@11982>     MOVE.b $E+4(A1),D0
0002A644 <AmiBlitz3.ab3@11983>     MOVEA.l _execbase,A6
0002A64A <AmiBlitz3.ab3@11984>     MOVE.l mempool2,a0
0002A64E <AmiBlitz3.ab3@11985>     JSR _FreePooled(A6)
0002A652 <AmiBlitz3.ab3@11986> BRA.w freevarsb
0002A654 <AmiBlitz3.ab3@11989> RTS
0002A65A <AmiBlitz3.ab3@11993>   MOVEA.l currentlabeladdr,A0
0002A660 <AmiBlitz3.ab3@11994>   MOVE.l a0,lastlabel
0002A662 <AmiBlitz3.ab3@11995>   MOVEA.l (A0),A2
0002A664 <AmiBlitz3.ab3@11996>   CLR.l (A0)
0002A66A <AmiBlitz3.ab3@11997>   MOVEA.l _execbase,A6
0002A66E <AmiBlitz3.ab3@12000>   CMPA.w #$0,A2
0002A672 <AmiBlitz3.ab3@12001>    BEQ.w clearlabels__done
0002A676 <AmiBlitz3.ab3@12002>   MOVE.l $4(A2),D0
0002A67A <AmiBlitz3.ab3@12003>   BTST #$0,D0
0002A67E <AmiBlitz3.ab3@12004>    BNE.w clearlabels__skip
0002A680 <AmiBlitz3.ab3@12005>   MOVEA.l D0,A3
0002A684 <AmiBlitz3.ab3@12008>     CMPA.w #$0,A3
0002A688 <AmiBlitz3.ab3@12009>      BEQ.w clearlabels__skip
0002A68A <AmiBlitz3.ab3@12010>     MOVEA.l A3,A1
0002A68C <AmiBlitz3.ab3@12011>     MOVEA.l (A3),A3
0002A68E <AmiBlitz3.ab3@12012>     MOVEQ.l #$0C+2,D0                                      ;cancel fix
0002A694 <AmiBlitz3.ab3@12013>     MOVE.l mempool,a0
0002A698 <AmiBlitz3.ab3@12014>     JSR _FreePooled(A6)
0002A69C <AmiBlitz3.ab3@12015> BRA.w clearlabels__loop2
0002A69E <AmiBlitz3.ab3@12018>   MOVEQ.l #$00,D0
0002A6A2 <AmiBlitz3.ab3@12019>   MOVE.b $12(A2),D0
0002A6A4 <AmiBlitz3.ab3@12020>   MOVEA.l A2,A1
0002A6A6 <AmiBlitz3.ab3@12021>   MOVEA.l (A2),A2
0002A6AC <AmiBlitz3.ab3@12022>   MOVE.l mempool2,a0
0002A6B0 <AmiBlitz3.ab3@12024> BRA.w clearlabels__loop
0002A6B2 <AmiBlitz3.ab3@12027> RTS
0002A6B8 <AmiBlitz3.ab3@12031>   MOVEA.l firstpend,A3
0002A6BE <AmiBlitz3.ab3@12032>   CLR.l firstpend
0002A6C4 <AmiBlitz3.ab3@12033>   MOVEA.l _execbase,A6
0002A6C8 <AmiBlitz3.ab3@12036>     CMPA.w #$0,A3
0002A6CC <AmiBlitz3.ab3@12037>      BEQ.w freepends__done
0002A6CE <AmiBlitz3.ab3@12038>     MOVEA.l A3,A1
0002A6D0 <AmiBlitz3.ab3@12039>     MOVEQ.l #$08,D0
0002A6D2 <AmiBlitz3.ab3@12040>     MOVEA.l (A3),A3
0002A6D8 <AmiBlitz3.ab3@12041>     MOVE.l mempool,a0
0002A6DC <AmiBlitz3.ab3@12042>     JSR _FreePooled(A6)
0002A6E0 <AmiBlitz3.ab3@12043> BRA.w fpnd2
0002A6E2 <AmiBlitz3.ab3@12046> RTS
0002A6E8 <AmiBlitz3.ab3@12050>   MOVEA.l firstproc,A2
0002A6EE <AmiBlitz3.ab3@12051>   CLR.l firstproc
0002A6F4 <AmiBlitz3.ab3@12052>   MOVEA.l _execbase,A6
0002A6F8 <AmiBlitz3.ab3@12055>     CMPA.w #$0,A2
0002A6FC <AmiBlitz3.ab3@12056>      BEQ.w clearfunctionlist__done
0002A6FE <AmiBlitz3.ab3@12057>     MOVEA.l A2,A1
0002A700 <AmiBlitz3.ab3@12058>     MOVEA.l (A2),A2
0002A702 <AmiBlitz3.ab3@12059>     MOVEQ.l #$00,D0
0002A706 <AmiBlitz3.ab3@12060>     MOVE.b $20+#funcentry_extend(A1),D0
0002A70C <AmiBlitz3.ab3@12061>     MOVE.l mempool2,a0
0002A710 <AmiBlitz3.ab3@12062>     JSR _FreePooled(A6)
0002A714 <AmiBlitz3.ab3@12063> BRA.w clearfunctionlist__loop
0002A716 <AmiBlitz3.ab3@12066> RTS
0002A71A <AmiBlitz3.ab3@12070>   CMPA.w #$0,A2
0002A71E <AmiBlitz3.ab3@12071>    BEQ.w freetypes__done
0002A722 <AmiBlitz3.ab3@12072>   MOVEA.l $4(A2),A3
0002A726 <AmiBlitz3.ab3@12073>   CMPA.w #$FF,A3
0002A72A <AmiBlitz3.ab3@12074>    BEQ.w freetypes__noway
0002A72E <AmiBlitz3.ab3@12078>    BSR.w freevars
0002A730 <AmiBlitz3.ab3@12081>     MOVEA.l A2,A1
0002A732 <AmiBlitz3.ab3@12082>     MOVEA.l (A2),A2
0002A734 <AmiBlitz3.ab3@12083>     MOVEQ.l #$00,D0
0002A738 <AmiBlitz3.ab3@12084>     MOVE.b $A(A1),D0
0002A73E <AmiBlitz3.ab3@12085>     MOVEA.l _execbase,A6
0002A744 <AmiBlitz3.ab3@12086>     MOVE.l mempool2,a0
0002A748 <AmiBlitz3.ab3@12087>     JSR _FreePooled(A6)
0002A74C <AmiBlitz3.ab3@12088> BRA.w freetypes
0002A74E <AmiBlitz3.ab3@12091> RTS
0002A754 <AmiBlitz3.ab3@12095>   JSR uselib2
0002A75A <AmiBlitz3.ab3@12097>   CLR.w notshared
0002A760 <AmiBlitz3.ab3@12098>   CLR.w varmode
0002A766 <AmiBlitz3.ab3@12099>   MOVE.w proceduremode,D1
0002A76A <AmiBlitz3.ab3@12100>    BNE.w JL_0_8F4E
0002A770 <AmiBlitz3.ab3@12101>   LEA varbase,A2
0002A776 <AmiBlitz3.ab3@12102>   LEA ptr_parameterstore,a0
0002A77A <AmiBlitz3.ab3@12103>   CMP.b #$22,(a0)
0002A77E <AmiBlitz3.ab3@12104>   BNE JL_0_8E5E
0002A780 <AmiBlitz3.ab3@12105>   MOVEQ #0,d0
0002A786 <AmiBlitz3.ab3@12106> JMP error
0002A78A <AmiBlitz3.ab3@12109>   BSR.w findvariable
0002A78E <AmiBlitz3.ab3@12112>   BNE.w JL_0_8E7E
0002A794 <AmiBlitz3.ab3@12115>   MOVE.b flagmask+1,D1
0002A798 <AmiBlitz3.ab3@12116>   MOVE.b $7(A2),D3
0002A79A <AmiBlitz3.ab3@12117>   EOR.b D3,D1
0002A79E <AmiBlitz3.ab3@12118>   BNE 'l2
0002A7A6 <AmiBlitz3.ab3@12119>   CMP.b #2,nowdeclare
0002A7AA <AmiBlitz3.ab3@12120>   BEQ errormsg_declaredtwice
0002A7AE <AmiBlitz3.ab3@12121> BRA.w JL_0_8FA8
0002A7B2 <AmiBlitz3.ab3@12124>   BSR.w findlab
0002A7B6 <AmiBlitz3.ab3@12125>   BNE 'l1
0002A7BE <AmiBlitz3.ab3@12126>   CMP.b #2,nowdeclare
0002A7C2 <AmiBlitz3.ab3@12127>   BEQ errormsg_declaredtwice
0002A7C4 <AmiBlitz3.ab3@12128>   CMP.w d0,d0
0002A7C8 <AmiBlitz3.ab3@12131> BRA.w JL_0_8E62
0002A7CA <AmiBlitz3.ab3@12134>    MOVE.l a2,-(a7)
0002A7D0 <AmiBlitz3.ab3@12135>    LEA sharebase,a2
0002A7D2 <AmiBlitz3.ab3@12136>    MOVEQ #$f+4,d7
0002A7D6 <AmiBlitz3.ab3@12137>    BSR.w findlab
0002A7DA <AmiBlitz3.ab3@12138>    BEQ 'l2x
0002A7DC <AmiBlitz3.ab3@12139>    MOVE.l (a7)+,a2
0002A7E0 <AmiBlitz3.ab3@12140> BRA 'cont
0002A7E2 <AmiBlitz3.ab3@12143>   ADDQ.l #4,a7
0002A7E8 <AmiBlitz3.ab3@12144>   CLR.w varmode
0002A7EE <AmiBlitz3.ab3@12145>   MOVE.b flagmask+1,D1
0002A7F2 <AmiBlitz3.ab3@12146>   MOVE.b $7(A2),D3
0002A7F4 <AmiBlitz3.ab3@12147>   EOR.b D3,D1
0002A7F8 <AmiBlitz3.ab3@12148>   BNE vardeclareerr
0002A7FC <AmiBlitz3.ab3@12149> BRA JL_0_8FA8
0002A802 <AmiBlitz3.ab3@12152>    MOVE.w nonew,D1
0002A806 <AmiBlitz3.ab3@12153>    BNE.w nonewerr
0002A80C <AmiBlitz3.ab3@12154>    TST.b nowdeclare
0002A810 <AmiBlitz3.ab3@12155>    BNE 'l2
0002A816 <AmiBlitz3.ab3@12156>    TST.b declare2
0002A81A <AmiBlitz3.ab3@12157>    BEQ 'l1
0002A81E <AmiBlitz3.ab3@12158>    CMP.b #$2e,d0
0002A822 <AmiBlitz3.ab3@12159>    BEQ 'l2
0002A826 <AmiBlitz3.ab3@12160>    CMP.b #"$",d0
0002A82A <AmiBlitz3.ab3@12161>    BEQ 'l2
0002A82E <AmiBlitz3.ab3@12162> BRA vardeclareerr
0002A834 <AmiBlitz3.ab3@12165>   TST.b declare
0002A838 <AmiBlitz3.ab3@12166>    BNE vardeclareerr
0002A83C <AmiBlitz3.ab3@12169>   BSR.w addvariable
0002A842 <AmiBlitz3.ab3@12170>   NOT.w notshared
0002A844 <AmiBlitz3.ab3@12171>   MOVEA.l A2,A3
0002A84A <AmiBlitz3.ab3@12172>   MOVEA.l defaulttype,A2
0002A84E <AmiBlitz3.ab3@12173>   CMP.w #$2E,D0
0002A852 <AmiBlitz3.ab3@12174>    BEQ.w JL_0_8EB8
0002A856 <AmiBlitz3.ab3@12175>   CMP.w #$24,D0
0002A85A <AmiBlitz3.ab3@12176>    BNE.w JL_0_8ECA
0002A860 <AmiBlitz3.ab3@12177>   LEA newtype_string,A2
0002A864 <AmiBlitz3.ab3@12178>    BSR.w get1bytemain
0002A868 <AmiBlitz3.ab3@12179> BRA.w JL_0_8ECA
0002A86E <AmiBlitz3.ab3@12182> JMP JUMP_notypeerr
0002A872 <AmiBlitz3.ab3@12185>    BSR.w getparameter2
0002A878 <AmiBlitz3.ab3@12186>   LEA newtypebase,A2
0002A87C <AmiBlitz3.ab3@12187>    BSR.w findtype
0002A880 <AmiBlitz3.ab3@12188>    BNE.w notypeerr3
0002A886 <AmiBlitz3.ab3@12191>   CMPA.l #newtype_byte,A2
0002A88A <AmiBlitz3.ab3@12192>    BEQ.w JL_0_8EECb
0002A890 <AmiBlitz3.ab3@12193>   MOVE.w varmode,D1
0002A894 <AmiBlitz3.ab3@12194>    BNE.w JL_0_8EE4b
0002A89A <AmiBlitz3.ab3@12195>   ADDQ.w #1,globalvarpointer
0002A8A2 <AmiBlitz3.ab3@12198>   BCLR #$0,globalvarpointer+1
0002A8A6 <AmiBlitz3.ab3@12201>   MOVE.l A2,$A(A3)
0002A8AE <AmiBlitz3.ab3@12202>   MOVE.w flagmask,$6(A3)                                  ;??????????
0002A8B0 <AmiBlitz3.ab3@12204>   MOVEQ.l #$04,D1
0002A8B8 <AmiBlitz3.ab3@12205>   BTST #$0,flagmask+1
0002A8BC <AmiBlitz3.ab3@12206>    BNE.w JL_0_8F22b
0002A8C4 <AmiBlitz3.ab3@12207>   BTST #$1,flagmask+1
0002A8C8 <AmiBlitz3.ab3@12208>    BNE.w JL_0_8F22b
0002A8D0 <AmiBlitz3.ab3@12209>   CMPI.l #$100,$4(A2)
0002A8D4 <AmiBlitz3.ab3@12210>    BCC.w JL_0_8F22b
0002A8D8 <AmiBlitz3.ab3@12211>   MOVE.w $8(A2),D1
0002A8DE <AmiBlitz3.ab3@12214>   TST.w varmode
0002A8E2 <AmiBlitz3.ab3@12215> BRA.w JL_0_8F3E
0002A8E6 <AmiBlitz3.ab3@12224>   BSR.w getparameter2
0002A8EC <AmiBlitz3.ab3@12225>   LEA newtypebase,A2
0002A8F0 <AmiBlitz3.ab3@12226>    BSR.w findtype
0002A8F4 <AmiBlitz3.ab3@12227>    BNE.w notypeerr
0002A8FA <AmiBlitz3.ab3@12230>   CMPA.l #newtype_byte,A2
0002A8FE <AmiBlitz3.ab3@12231>    BEQ.w JL_0_8EEC
0002A904 <AmiBlitz3.ab3@12232>   MOVE.w varmode,D1
0002A908 <AmiBlitz3.ab3@12233>    BNE.w JL_0_8EE4
0002A90E <AmiBlitz3.ab3@12234>   ADDQ.w #1,globalvarpointer
0002A916 <AmiBlitz3.ab3@12237>   BCLR #$0,globalvarpointer+1
0002A91A <AmiBlitz3.ab3@12240>   MOVE.l A2,$A(A3)
0002A922 <AmiBlitz3.ab3@12241>   MOVE.w flagmask,$6(A3)                                  ;??????????
0002A924 <AmiBlitz3.ab3@12242>   MOVEQ.l #$04,D1
0002A92C <AmiBlitz3.ab3@12243>   BTST #$0,flagmask+1
0002A930 <AmiBlitz3.ab3@12244>    BNE.w JL_0_8F22
0002A938 <AmiBlitz3.ab3@12245>   BTST #$1,flagmask+1
0002A93C <AmiBlitz3.ab3@12246>    BNE.w JL_0_8F22
0002A944 <AmiBlitz3.ab3@12247>   CMPI.l #$100,$4(A2)
0002A948 <AmiBlitz3.ab3@12248>    BCC.w JL_0_8F22
0002A94C <AmiBlitz3.ab3@12249>   MOVE.w $8(A2),D1
0002A952 <AmiBlitz3.ab3@12252>   TST.w varmode
0002A956 <AmiBlitz3.ab3@12253>    BEQ.w JL_0_8F3E
0002A958 <AmiBlitz3.ab3@12254>   NEG.w D1
0002A95E <AmiBlitz3.ab3@12255>   ADD.w D1,globalvarpointer
0002A966 <AmiBlitz3.ab3@12256>   MOVE.w globalvarpointer,$4(A3)
0002A968 <AmiBlitz3.ab3@12257> RTS
0002A970 <AmiBlitz3.ab3@12260>   MOVE.w globalvarpointer,$4(A3)
0002A976 <AmiBlitz3.ab3@12261>   ADD.w D1,globalvarpointer
0002A978 <AmiBlitz3.ab3@12262> RTS
0002A97E <AmiBlitz3.ab3@12266>   LEA firstglob,A2
0002A982 <AmiBlitz3.ab3@12267>    BSR.w findvariable2
0002A986 <AmiBlitz3.ab3@12270>   BNE.w JL_0_8F74
0002A98C <AmiBlitz3.ab3@12271>   MOVE.b flagmask+1,D1
0002A990 <AmiBlitz3.ab3@12272>   MOVE.b $7(A2),D3
0002A992 <AmiBlitz3.ab3@12273>   EOR.b D3,D1
0002A996 <AmiBlitz3.ab3@12274>    BEQ.w JL_0_8FA8
0002A99A <AmiBlitz3.ab3@12275>    BSR.w findlab
0002A99E <AmiBlitz3.ab3@12276> BRA.w JL_0_8F58
0002A9A6 <AmiBlitz3.ab3@12279>   MOVE.w #$FFFF,varmode
0002A9AC <AmiBlitz3.ab3@12280>   MOVE.w globalvarpointer,-(A7)
0002A9B6 <AmiBlitz3.ab3@12281>   MOVE.w locvaroff,globalvarpointer
0002A9BC <AmiBlitz3.ab3@12282>   LEA firstlocal,A2
0002A9C4 <AmiBlitz3.ab3@12283>   MOVE.b #1,newvariable
0002A9C8 <AmiBlitz3.ab3@12284>    BSR.w JL_0_8E5E
0002A9CE <AmiBlitz3.ab3@12285>   CLR.b newvariable
0002A9D8 <AmiBlitz3.ab3@12286>   MOVE.w globalvarpointer,locvaroff
0002A9DE <AmiBlitz3.ab3@12287>   MOVE.w (A7)+,globalvarpointer
0002A9E0 <AmiBlitz3.ab3@12288> RTS
0002A9E2 <AmiBlitz3.ab3@12291>   MOVEA.l A2,A3
0002A9E6 <AmiBlitz3.ab3@12292>   CMP.w #$2E,D0
0002A9EA <AmiBlitz3.ab3@12293>    BEQ.w JL_0_8FCE
0002A9EE <AmiBlitz3.ab3@12294>   CMP.w #$24,D0
0002A9F2 <AmiBlitz3.ab3@12295>    BNE.w JL_0_8FE8
0002A9FA <AmiBlitz3.ab3@12296>   CMPI.l #newtype_string,$A(A3)
0002A9FE <AmiBlitz3.ab3@12297>    BNE.w rongtypeerr
0002AA02 <AmiBlitz3.ab3@12298>    BSR.w get1bytemain
0002AA06 <AmiBlitz3.ab3@12299> BRA.w JL_0_8FE8
0002AA0A <AmiBlitz3.ab3@12302>    BSR.w getparameter2
0002AA10 <AmiBlitz3.ab3@12303>   LEA newtypebase,A2
0002AA14 <AmiBlitz3.ab3@12304>    BSR.w findtype
0002AA18 <AmiBlitz3.ab3@12305>    BNE.w notypeerr
0002AA1C <AmiBlitz3.ab3@12306>   CMPA.l $A(A3),A2
0002AA20 <AmiBlitz3.ab3@12307>    BNE.w rongtypeerr
0002AA28 <AmiBlitz3.ab3@12309>   BTST #$0,flagmask+1
0002AA2C <AmiBlitz3.ab3@12310>    BEQ.w JL_0_8FFE
0002AA32 <AmiBlitz3.ab3@12311>   BTST #$0,$7(A3)
0002AA36 <AmiBlitz3.ab3@12312>    BEQ.w pointerr
0002AA3A <AmiBlitz3.ab3@12315>   MOVEA.l $A(A3),A2
0002AA3C <AmiBlitz3.ab3@12316> RTS
0002AA3E <AmiBlitz3.ab3@12320>    TST.l D3                                                ;newtype >32kb  .w to .l
0002AA42 <AmiBlitz3.ab3@12321>    BEQ.w JL_0_9042
0002AA4C <AmiBlitz3.ab3@12322>    MOVE.l destpointer,loada
0002AA50 <AmiBlitz3.ab3@12325> BRA JL_0_9032
0002AA54 <AmiBlitz3.ab3@12327>   CMP.w #$9,D3                                             ;_addq_arrays
0002AA58 <AmiBlitz3.ab3@12328>    BCC.w JL_0_9032
0002AA5E <AmiBlitz3.ab3@12329>   MOVE.w d3,arrayoffset
0002AA62 <AmiBlitz3.ab3@12330>   ANDI.w #$7,D3
0002AA64 <AmiBlitz3.ab3@12331>   LSL.w #8,D3
0002AA66 <AmiBlitz3.ab3@12332>   LSL.w #1,D3
0002AA6E <AmiBlitz3.ab3@12333>   ANDI.w #$F1FF,addqa0
0002AA74 <AmiBlitz3.ab3@12334>   OR.w D3,addqa0
0002AA7A <AmiBlitz3.ab3@12335>   MOVE.w addqa0,D1
0002AA7E <AmiBlitz3.ab3@12336> BRA.w writeword
0002AA84 <AmiBlitz3.ab3@12339>   CMP.l #$7fff,d3                                          ;>32kb newtypes
0002AA88 <AmiBlitz3.ab3@12340>   BGT longoffset
0002AA8E <AmiBlitz3.ab3@12341>   MOVE.w D3,leaa0a0+2
0002AA94 <AmiBlitz3.ab3@12342>   MOVE.w d3,arrayoffset
0002AA9A <AmiBlitz3.ab3@12343>   MOVE.l leaa0a0,D1
0002AA9E <AmiBlitz3.ab3@12344>   BSR.w writelong
0002AAA0 <AmiBlitz3.ab3@12347> RTS
0002AAA4 <AmiBlitz3.ab3@12350>    MOVE.w #$d5fc,d1
0002AAA8 <AmiBlitz3.ab3@12351>    BSR writeword
0002AAAA <AmiBlitz3.ab3@12352>    MOVE.l d3,d1
0002AAAE <AmiBlitz3.ab3@12353>    BSR.w writelong
0002AAB0 <AmiBlitz3.ab3@12354> RTS
0002AAB4 <AmiBlitz3.ab3@12358>   Dc.w $b0ad,0000                                          ;cmp.l $0(A5),D0    ;nooptimize
0002AAB8 <AmiBlitz3.ab3@12361>    BCS.w arrchk3                                           
0002AABE <AmiBlitz3.ab3@12362>    JSR $20000                                              ;jsr 0
0002AAC4 <AmiBlitz3.ab3@12368>   TST.b fast
0002AAC8 <AmiBlitz3.ab3@12369>   BEQ 'l1
0002AACA <AmiBlitz3.ab3@12370>    MOVEQ #0,d1                                             ;faster arrays
0002AAD0 <AmiBlitz3.ab3@12371>    MOVE.w regnum,d2
0002AAD2 <AmiBlitz3.ab3@12372>    MOVE.w d2,d1
0002AAD4 <AmiBlitz3.ab3@12373>    LSL.w #8,d1
0002AAD6 <AmiBlitz3.ab3@12374>    LSL.w #4,d1
0002AAD8 <AmiBlitz3.ab3@12375>    ADD.w d2,d1
0002AADE <AmiBlitz3.ab3@12376>    OR.l #$4c2d0000,d1
0002AAE4 <AmiBlitz3.ab3@12377>    TST.w varmode
0002AAE8 <AmiBlitz3.ab3@12378>    BEQ 'l1a
0002AAEC <AmiBlitz3.ab3@12379>    BCLR #16,d1
0002AAF0 <AmiBlitz3.ab3@12382>    BSR writelong
0002AAF4 <AmiBlitz3.ab3@12383>    MOVE.w $4(A7),D1
0002AAF8 <AmiBlitz3.ab3@12384>    BSR.w writeword
0002AAFE <AmiBlitz3.ab3@12385>    MOVE.w regnum,D1
0002AB00 <AmiBlitz3.ab3@12386>   SUBQ.w #1,D1
0002AB02 <AmiBlitz3.ab3@12387>   LSL.w #8,D1
0002AB04 <AmiBlitz3.ab3@12388>   LSL.w #1,D1
0002AB08 <AmiBlitz3.ab3@12389>   ORI.w #$D080,D1
0002AB0E <AmiBlitz3.ab3@12390>   OR.w regnum,D1
0002AB12 <AmiBlitz3.ab3@12391>    BSR.w writeword
0002AB14 <AmiBlitz3.ab3@12392> RTS
0002AB1A <AmiBlitz3.ab3@12395>   MOVE.w regnum,D2
0002AB1E <AmiBlitz3.ab3@12396>   MOVE.w arrmul1(PC),D1
0002AB20 <AmiBlitz3.ab3@12397>   OR.w D2,D1
0002AB22 <AmiBlitz3.ab3@12398>   SUBQ.w #1,D1
0002AB26 <AmiBlitz3.ab3@12399>    BSR.w writeword
0002AB2A <AmiBlitz3.ab3@12400>   MOVE.w arrmul2(PC),D1
0002AB2C <AmiBlitz3.ab3@12401>   OR.w D2,D1
0002AB2E <AmiBlitz3.ab3@12402>   MOVE.w D2,D3
0002AB30 <AmiBlitz3.ab3@12403>   SUBQ.w #1,D3
0002AB32 <AmiBlitz3.ab3@12404>   LSL.w #8,D3
0002AB34 <AmiBlitz3.ab3@12405>   LSL.w #1,D3
0002AB36 <AmiBlitz3.ab3@12406>   OR.w D3,D1
0002AB3A <AmiBlitz3.ab3@12407>    BSR.w writeword
0002AB3E <AmiBlitz3.ab3@12408>   MOVE.w arrmul3(PC),D1
0002AB40 <AmiBlitz3.ab3@12409>   MOVE.w D2,D3
0002AB42 <AmiBlitz3.ab3@12410>   LSL.w #8,D3
0002AB44 <AmiBlitz3.ab3@12411>   LSL.w #1,D3
0002AB46 <AmiBlitz3.ab3@12412>   OR.w D3,D1
0002AB4A <AmiBlitz3.ab3@12413>    BSR.w pokewda5s
0002AB4E <AmiBlitz3.ab3@12414>   MOVE.w $4(A7),D1
0002AB50 <AmiBlitz3.ab3@12415>   ADDQ.w #2,D1
0002AB54 <AmiBlitz3.ab3@12416>    BSR.w writeword
0002AB58 <AmiBlitz3.ab3@12417>   MOVE.w arrmul4(PC),D1
0002AB5A <AmiBlitz3.ab3@12418>   MOVE.w D2,D3
0002AB5C <AmiBlitz3.ab3@12419>   SUBQ.w #1,D3
0002AB5E <AmiBlitz3.ab3@12420>   LSL.w #8,D3
0002AB60 <AmiBlitz3.ab3@12421>   LSL.w #1,D3
0002AB62 <AmiBlitz3.ab3@12422>   OR.w D3,D1
0002AB66 <AmiBlitz3.ab3@12423>    BSR.w pokewda5s
0002AB6A <AmiBlitz3.ab3@12424>   MOVE.w $4(A7),D1
0002AB6E <AmiBlitz3.ab3@12425>    BSR.w writeword
0002AB72 <AmiBlitz3.ab3@12426>   MOVE.w arrmul5(PC),D1
0002AB74 <AmiBlitz3.ab3@12427>   OR.w D2,D1
0002AB76 <AmiBlitz3.ab3@12428>   SUBQ.w #1,D1
0002AB7A <AmiBlitz3.ab3@12429>    BSR.w writeword
0002AB7E <AmiBlitz3.ab3@12430>   MOVE.w arrmul6(PC),D1
0002AB80 <AmiBlitz3.ab3@12431>   OR.w D2,D1
0002AB82 <AmiBlitz3.ab3@12432>   SUBQ.w #1,D1
0002AB86 <AmiBlitz3.ab3@12433>    BSR.w writeword
0002AB8A <AmiBlitz3.ab3@12434>   MOVE.w arrmul7(PC),D1
0002AB8C <AmiBlitz3.ab3@12435>   OR.w D2,D1
0002AB8E <AmiBlitz3.ab3@12436>   SUBQ.w #1,D1
0002AB90 <AmiBlitz3.ab3@12437>   MOVE.w D2,D3
0002AB92 <AmiBlitz3.ab3@12438>   LSL.w #8,D3
0002AB94 <AmiBlitz3.ab3@12439>   LSL.w #1,D3
0002AB96 <AmiBlitz3.ab3@12440>   OR.w D3,D1
0002AB9A <AmiBlitz3.ab3@12441>    BSR.w writeword
0002AB9E <AmiBlitz3.ab3@12442>   MOVE.w arrmul8(PC),D1
0002ABA0 <AmiBlitz3.ab3@12443>   MOVE.w D2,D3
0002ABA2 <AmiBlitz3.ab3@12444>   SUBQ.w #1,D3
0002ABA4 <AmiBlitz3.ab3@12445>   LSL.w #8,D3
0002ABA6 <AmiBlitz3.ab3@12446>   LSL.w #1,D3
0002ABA8 <AmiBlitz3.ab3@12447>   OR.w D3,D1
0002ABAC <AmiBlitz3.ab3@12448>    BSR.w writeword
0002ABB2 <AmiBlitz3.ab3@12449>   MOVE.w regnum,D1
0002ABB4 <AmiBlitz3.ab3@12450>   SUBQ.w #1,D1
0002ABB6 <AmiBlitz3.ab3@12451>   LSL.w #8,D1
0002ABB8 <AmiBlitz3.ab3@12452>   LSL.w #1,D1
0002ABBC <AmiBlitz3.ab3@12453>   ORI.w #$D080,D1
0002ABC2 <AmiBlitz3.ab3@12454>   OR.w regnum,D1
0002ABC6 <AmiBlitz3.ab3@12455> BRA.w writeword
0002ABC8 <AmiBlitz3.ab3@12463> arrmul1:   MOVE.l d0,-(a7)                                ;write array access
0002ABCA <AmiBlitz3.ab3@12464> arrmul2:   MOVE  d0,d0
0002ABCE <AmiBlitz3.ab3@12465> arrmul3:   MULU 0(a5),d0                                  ;mulu   x+2(a5),d1  ;lo*lo
0002ABD2 <AmiBlitz3.ab3@12466> arrmul4:   MULU 0(a5),d0                                  ;mulu   x(a5),d0    ;hi*lo
0002ABD4 <AmiBlitz3.ab3@12468> arrmul5:   SWAP d0
0002ABD6 <AmiBlitz3.ab3@12469> arrmul6:   CLR d0
0002ABD8 <AmiBlitz3.ab3@12470> arrmul7:   ADD.l d0,d0
0002ABDA <AmiBlitz3.ab3@12471> arrmul8:   MOVE.l (a7)+,d0
0002ABDE <AmiBlitz3.ab3@12476> listcode1:  Dc.b $24,$6D :              Dc.b $00,$00       ;MOVEA.L $0000(A5),A2      ;pointer to start of array data
0002ABE2 <AmiBlitz3.ab3@12477> listcode2:  Dc.b $24,$6A,$FF,$E0                           ;MOVEA.L -$0020(A2),A2     ;pointer to current
0002ABE4 <AmiBlitz3.ab3@12478> listarfix:  Dc.b $50,$4A                                   ;ADDQ.W  #8,A2
0002ABEA <AmiBlitz3.ab3@12496>   CLR.l lastoffset_org
0002ABF0 <AmiBlitz3.ab3@12497>   BTST #$1,$7(A3)
0002ABF4 <AmiBlitz3.ab3@12498>    BEQ.w calcvar__notarr
0002ABFA <AmiBlitz3.ab3@12499>   MOVE.w notshared,D1
0002ABFE <AmiBlitz3.ab3@12500>    BNE.w noarrerr
0002AC02 <AmiBlitz3.ab3@12501>    BSR.w get1bytemain
0002AC06 <AmiBlitz3.ab3@12502>   CMP.w #$29,D0
0002AC0A <AmiBlitz3.ab3@12503>    BNE.w calcvar__notalist
0002AC10 <AmiBlitz3.ab3@12504>   BTST #$0,$6(A3)
0002AC14 <AmiBlitz3.ab3@12505>    BEQ.w nolisterr
0002AC1C <AmiBlitz3.ab3@12506>   MOVE.w $4(A3),listcode1+2
0002AC20 <AmiBlitz3.ab3@12507>   MOVE.l listcode1(PC),D1
0002AC24 <AmiBlitz3.ab3@12508>    BSR.w pokela5s
0002AC28 <AmiBlitz3.ab3@12509>   MOVE.l listcode2(PC),D1
0002AC2C <AmiBlitz3.ab3@12510>    BSR.w writelong
0002AC32 <AmiBlitz3.ab3@12511>   TST.b debugmode
0002AC36 <AmiBlitz3.ab3@12512>    BEQ.w calcvar__nolrerr
0002AC38 <AmiBlitz3.ab3@12516>   MOVE.l A2,-(A7)
0002AC3C <AmiBlitz3.ab3@12517>   MOVE.w #$C315,D1
0002AC40 <AmiBlitz3.ab3@12518>    BSR.w Atokejsr
0002AC42 <AmiBlitz3.ab3@12519>   MOVEA.l (A7)+,A2
0002AC46 <AmiBlitz3.ab3@12522>    MOVE.w listarfix(PC),D1                                 ;addq #8,a2
0002AC4A <AmiBlitz3.ab3@12524>    BSR.w writeword
0002AC4E <AmiBlitz3.ab3@12525> BRA.w calcvar__normalar
0002AC50 <AmiBlitz3.ab3@12528> calcvar__listoff:   Ds.w 1
0002AC56 <AmiBlitz3.ab3@12532>   CLR.w calcvar__listoff
0002AC5C <AmiBlitz3.ab3@12533>   BTST #$0,$6(A3)
0002AC60 <AmiBlitz3.ab3@12534>    BEQ.w calcvar__knop
0002AC68 <AmiBlitz3.ab3@12535>   MOVE.w #$0008,calcvar__listoff                            ;adjust size of one element if list.
0002AC6C <AmiBlitz3.ab3@12538>   MOVEM.l A2-A3,-(A7)
0002AC72 <AmiBlitz3.ab3@12539>   MOVE.w varmode,-(A7)
0002AC76 <AmiBlitz3.ab3@12540>   MOVE.w $8(A3),-(A7)                                       ;number of dims
0002AC7A <AmiBlitz3.ab3@12541>   MOVE.w $4(A3),-(A7)                                       ;varoff
0002AC7C <AmiBlitz3.ab3@12542>   MOVE.l A2,-(A7)
0002AC82 <AmiBlitz3.ab3@12543>   MOVE.w flagmask,-(A7)
0002AC8C <AmiBlitz3.ab3@12545>   MOVE.w oldqflag,instringon
0002AC92 <AmiBlitz3.ab3@12546>   MOVEA.l lastsourcepos,A5
0002AC96 <AmiBlitz3.ab3@12547>    BSR.w arreval
0002AC9C <AmiBlitz3.ab3@12548>   MOVE.w (A7)+,flagmask
0002ACA4 <AmiBlitz3.ab3@12549>   MOVE.w $8(A7),varmode
0002ACAA <AmiBlitz3.ab3@12550>   TST.b debugmode
0002ACAE <AmiBlitz3.ab3@12551>    BEQ.w calcvar__noszchk
0002ACB0 <AmiBlitz3.ab3@12555>   MOVEA.l (A7)+,A2
0002ACB2 <AmiBlitz3.ab3@12556>   MOVEQ.l #$04,D1
0002ACBA <AmiBlitz3.ab3@12557>   BTST #$0,flagmask+1                                      ;pointer?
0002ACBE <AmiBlitz3.ab3@12558>    BNE.b calcvar__domul                                          ;yes, then use 4 byte mul...
0002ACC2 <AmiBlitz3.ab3@12559>   MOVE.w $8(A2),D1
0002ACC6 <AmiBlitz3.ab3@12562>   ADD.w calcvar__listoff(PC),D1
0002ACCA <AmiBlitz3.ab3@12563>   BSR.w JL_0_B6DE
0002ACD0 <AmiBlitz3.ab3@12564>   ADDQ.w #1,regnum
0002ACD2 <AmiBlitz3.ab3@12567>   ADDQ.w #4,(A7)
0002ACD6 <AmiBlitz3.ab3@12568>   TST.w $4(A7)
0002ACDA <AmiBlitz3.ab3@12569>    BEQ.w calcvar__isglob
0002ACDC <AmiBlitz3.ab3@12570>   SUBQ.w #8,(A7)                                           ;range check local array
0002ACE2 <AmiBlitz3.ab3@12573>   TST.b debugmode
0002ACE6 <AmiBlitz3.ab3@12574>    BEQ.w calcvar__noer1
0002ACEC <AmiBlitz3.ab3@12575>   MOVE.w regnum,D1
0002ACEE <AmiBlitz3.ab3@12576>   SUBQ.w #1,D1
0002ACF0 <AmiBlitz3.ab3@12577>   LSL.w #8,D1
0002ACF2 <AmiBlitz3.ab3@12578>   LSL.w #1,D1
0002ACF6 <AmiBlitz3.ab3@12579>   OR.w zarrchk(PC),D1
0002ACFA <AmiBlitz3.ab3@12580>    BSR.w pokewda5s                                         ;cmp.l x(a5),D regat
0002ACFC <AmiBlitz3.ab3@12581>   MOVE.w (A7),D1
0002AD00 <AmiBlitz3.ab3@12582>    BSR.w writeword
0002AD04 <AmiBlitz3.ab3@12583>   MOVE.l arrchk2(PC),D1
0002AD08 <AmiBlitz3.ab3@12584>    BSR.w writelong
0002AD0C <AmiBlitz3.ab3@12585>   MOVE.w #$C309,D1
0002AD10 <AmiBlitz3.ab3@12586>    BSR.w Atokejsr
0002AD14 <AmiBlitz3.ab3@12589>   SUBQ.w #1,$2(A7)
0002AD18 <AmiBlitz3.ab3@12590>    BEQ.w calcvar__ardone
0002AD1C <AmiBlitz3.ab3@12591>   CMP.w #$2C,D0
0002AD20 <AmiBlitz3.ab3@12592>    BNE.w syntaxerr
0002AD26 <AmiBlitz3.ab3@12593>    TST.b fast
0002AD2A <AmiBlitz3.ab3@12594>    BNE 'l1
0002AD2E <AmiBlitz3.ab3@12595>    BSR.w arrevalchk
0002AD32 <AmiBlitz3.ab3@12596> BRA 'l2
0002AD36 <AmiBlitz3.ab3@12599>   BSR arreval
0002AD3E <AmiBlitz3.ab3@12602>   MOVE.w $4(A7),varmode
0002AD42 <AmiBlitz3.ab3@12603>   BSR.w JL_0_9052
0002AD46 <AmiBlitz3.ab3@12604> BRA.w calcvar__arloop
0002AD4A <AmiBlitz3.ab3@12608>   CMP.w #$29,D0
0002AD4E <AmiBlitz3.ab3@12609>    BNE.w syntaxerr
0002AD54 <AmiBlitz3.ab3@12610>   SUBQ.w #1,regnum
0002AD56 <AmiBlitz3.ab3@12611>   ADDQ.w #6,A7
0002AD5A <AmiBlitz3.ab3@12612>   MOVEM.l (A7)+,A2-A3
0002AD62 <AmiBlitz3.ab3@12613>   MOVE.w $4(A3),movea5a0+2
0002AD68 <AmiBlitz3.ab3@12614>   MOVE.l movea5a0,D1
0002AD6C <AmiBlitz3.ab3@12615>    BSR.w pokela5s
0002AD72 <AmiBlitz3.ab3@12616>   MOVE.w regnum,D1
0002AD76 <AmiBlitz3.ab3@12617>   ORI.w #$D5C0,D1                                          ;add.l Dr,a2
0002AD7A <AmiBlitz3.ab3@12618>    BSR.w writeword
0002AD80 <AmiBlitz3.ab3@12619>   BTST #$0,$6(A3)
0002AD84 <AmiBlitz3.ab3@12620>    BEQ.w calcvar__normalar
0002AD88 <AmiBlitz3.ab3@12624>   MOVE.w listarfix(PC),D1
0002AD8C <AmiBlitz3.ab3@12625>    BSR.w writeword
0002AD90 <AmiBlitz3.ab3@12628>   BSR.w get1bytemain
0002AD96 <AmiBlitz3.ab3@12632>   BTST #$0,$7(A3)
0002AD9A <AmiBlitz3.ab3@12633>    BEQ.w calcvar__noppnt
0002AD9E <AmiBlitz3.ab3@12634>   CMP.w #$5C,D0
0002ADA2 <AmiBlitz3.ab3@12635>    BNE.w calcvar__pmskip
0002ADA6 <AmiBlitz3.ab3@12636>   MOVE.w calcvar__pfix(PC),D1
0002ADAA <AmiBlitz3.ab3@12637>    BSR.w writeword
0002ADAE <AmiBlitz3.ab3@12640>   MOVE.w #$8000,D2
0002ADB2 <AmiBlitz3.ab3@12641> BRA.w calcvar__loopml
0002ADB6 <AmiBlitz3.ab3@12644>   MOVE.w #$C000,D2
0002ADBA <AmiBlitz3.ab3@12645> BRA.w calcvar__loopml
0002ADBC <AmiBlitz3.ab3@12649> calcvar__pfix:   Dc.b $24,$52                                   ;MOVEA.L (A2),A2
0002ADC0 <AmiBlitz3.ab3@12654>   CMP.w #$28,D0
0002ADC4 <AmiBlitz3.ab3@12655>    BEQ.w noarrerr
0002ADCC <AmiBlitz3.ab3@12656>   CMPI.l #$100,$4(A2)
0002ADD0 <AmiBlitz3.ab3@12657>    BCS.w calcvar__simpvar
0002ADD6 <AmiBlitz3.ab3@12658>   BTST #$0,$7(A3)
0002ADDA <AmiBlitz3.ab3@12659>    BEQ.w calcvar__notap
0002ADDE <AmiBlitz3.ab3@12663>   CMP.w #$5C,D0
0002ADE2 <AmiBlitz3.ab3@12664>    BEQ.w calcvar__notap
0002ADE4 <AmiBlitz3.ab3@12665>   MOVEQ.l #$00,D2
0002ADE8 <AmiBlitz3.ab3@12666> BRA.w calcvar__simpvar2
0002ADEC <AmiBlitz3.ab3@12669>   MOVE.w #$8000,D2
0002ADF4 <AmiBlitz3.ab3@12670>   MOVE.w $4(A3),movea5a0+2
0002ADFA <AmiBlitz3.ab3@12671>   MOVE.l movea5a0,D1
0002ADFE <AmiBlitz3.ab3@12672>    BSR.w pokela5s                                         ;move.l x(a5),a2
0002AE04 <AmiBlitz3.ab3@12674>    TST.b debugmode
0002AE08 <AmiBlitz3.ab3@12675>    BEQ.w 'skip
0002AE0C <AmiBlitz3.ab3@12676>    MOVE.w #$c320,D1
0002AE12 <AmiBlitz3.ab3@12677>    JSR Atokejsr
0002AE14 <AmiBlitz3.ab3@12681>   MOVEQ.l #$00,D3
0002AE18 <AmiBlitz3.ab3@12684>   CMP.w #$5C,D0
0002AE1C <AmiBlitz3.ab3@12685>    BNE.w calcvar__done
0002AE24 <AmiBlitz3.ab3@12686>   CMPI.l #$100,$4(A2)
0002AE28 <AmiBlitz3.ab3@12687>    BCS.w rongtypeerr
0002AE2A <AmiBlitz3.ab3@12688>   MOVE.w D2,-(A7)
0002AE2E <AmiBlitz3.ab3@12689>    BSR.w getparameter2
0002AE32 <AmiBlitz3.ab3@12690>    BEQ.w syntaxerr
0002AE34 <AmiBlitz3.ab3@12691>   ADDQ.w #4,A2
0002AE38 <AmiBlitz3.ab3@12692>    BSR.w findvariable2
0002AE3C <AmiBlitz3.ab3@12693>    BNE.w noofferr
0002AE3E <AmiBlitz3.ab3@12694>   MOVE.w (A7)+,D2
0002AE40 <AmiBlitz3.ab3@12695>   MOVEA.l A2,A3                                             ;pointer to offset
0002AE44 <AmiBlitz3.ab3@12696>   MOVEA.l $A(A3),A2                                         ;pointer to type
0002AE46 <AmiBlitz3.ab3@12697>   MOVEQ #0,d1
0002AE4A <AmiBlitz3.ab3@12698>   MOVE.w 4(a3),d1
0002AE4C <AmiBlitz3.ab3@12699>   ADD.l d1,d3
0002AE52 <AmiBlitz3.ab3@12701>   MOVE.l A3,lastoffset_org
0002AE56 <AmiBlitz3.ab3@12702>   CMP.w #$5B,D0
0002AE5A <AmiBlitz3.ab3@12703>    BNE.w calcvar__realdone
0002AE60 <AmiBlitz3.ab3@12704>   BTST #$1,$7(A3)                                           ;a array [] in newtype is found
0002AE64 <AmiBlitz3.ab3@12705>    BEQ.w rongtypeerr
0002AE68 <AmiBlitz3.ab3@12706>    BSR.w JL_0_9004
0002AE6C <AmiBlitz3.ab3@12707>   MOVEM.l A2-A3,-(A7)
0002AE72 <AmiBlitz3.ab3@12708>   MOVE.w varmode,-(A7)
0002AE78 <AmiBlitz3.ab3@12709>   MOVE.l lastoffset_org,-(A7)
0002AE7E <AmiBlitz3.ab3@12710>   MOVE.w pusha2,D1
0002AE82 <AmiBlitz3.ab3@12711>    BSR.w writeword
0002AE84 <AmiBlitz3.ab3@12712>   MOVEQ.l #$03,D2                                          ;was 2 >32kb types
0002AE8E <AmiBlitz3.ab3@12713>   MOVE.l destpointer,deststore
0002AE94 <AmiBlitz3.ab3@12714>    MOVE.l rightsidetype,-(a7)
0002AE9A <AmiBlitz3.ab3@12715>    MOVE.l leftsidetype,-(a7)
0002AEA0 <AmiBlitz3.ab3@12716>    CLR.l rightsidetype
0002AEA6 <AmiBlitz3.ab3@12717>    CLR.l leftsidetype
0002AEAA <AmiBlitz3.ab3@12718>    BSR.w eval
0002AEB0 <AmiBlitz3.ab3@12719>    MOVE.l (a7)+,rightsidetype
0002AEB6 <AmiBlitz3.ab3@12720>    MOVE.l (a7)+,leftsidetype
0002AEBA <AmiBlitz3.ab3@12721>   CMP.w #$5D,D0
0002AEBE <AmiBlitz3.ab3@12722>    BNE.w syntaxerr
0002AEC4 <AmiBlitz3.ab3@12723>   TST.b fast                                               ;a2,-(a7) array
0002AEC8 <AmiBlitz3.ab3@12724>   BEQ calcvar__loop0_l10
0002AECE <AmiBlitz3.ab3@12728>   MOVE.l destpointer,d1
0002AED4 <AmiBlitz3.ab3@12729>   SUB.l deststore,d1
0002AEDA <AmiBlitz3.ab3@12730>   CMP.l #4,d1
0002AEDE <AmiBlitz3.ab3@12731>   BNE calcvar__loop0_l10
0002AEE4 <AmiBlitz3.ab3@12732>   MOVE.l destpointer,a4
0002AEEA <AmiBlitz3.ab3@12733>   MOVE.l -4(a4),-6(a4)
0002AEF0 <AmiBlitz3.ab3@12734>   SUBQ.l #2,destpointer
0002AEF6 <AmiBlitz3.ab3@12735>   CLR.l imm_addr
0002AEFC <AmiBlitz3.ab3@12736>   CLR.l load_var_addr
0002AF00 <AmiBlitz3.ab3@12737> BRA calcvar__loop0_l20
0002AF06 <AmiBlitz3.ab3@12740>   MOVE.w pulla2,D1
0002AF0A <AmiBlitz3.ab3@12741>    BSR.w writeword
0002AF10 <AmiBlitz3.ab3@12744>   MOVE.l (A7)+,lastoffset_org
0002AF16 <AmiBlitz3.ab3@12745>   MOVE.w (A7)+,varmode
0002AF1A <AmiBlitz3.ab3@12746>   MOVEM.l (A7)+,A2-A3
0002AF20 <AmiBlitz3.ab3@12752>   TST.w debugmode
0002AF24 <AmiBlitz3.ab3@12753>    BEQ.b calcvar__nobchk
0002AF28 <AmiBlitz3.ab3@12754>   MOVE.w $8(A3),D1
0002AF2C <AmiBlitz3.ab3@12755>    BEQ.b calcvar__nobchk                                   ;no [0] checks!
0002AF32 <AmiBlitz3.ab3@12759>   MOVE.w D1,brchkcode+2
0002AF38 <AmiBlitz3.ab3@12760>   MOVE.w regnum,D1
0002AF3A <AmiBlitz3.ab3@12761>   LSL.w #8,D1
0002AF3C <AmiBlitz3.ab3@12762>   LSL.w #1,D1
0002AF40 <AmiBlitz3.ab3@12763>   OR.w brchkcode0(PC),D1
0002AF46 <AmiBlitz3.ab3@12764>   MOVE.w D1,brchkcode
0002AF4A <AmiBlitz3.ab3@12765>   MOVE.l brchkcode(PC),D1
0002AF4E <AmiBlitz3.ab3@12766>    BSR.w writelong
0002AF52 <AmiBlitz3.ab3@12767>   MOVE.l brchkcode+4(PC),D1
0002AF56 <AmiBlitz3.ab3@12768>    BSR.w writelong
0002AF5A <AmiBlitz3.ab3@12769>   MOVE.w brchkcode+8(PC),D1
0002AF5E <AmiBlitz3.ab3@12770>    BSR.w writeword
0002AF60 <AmiBlitz3.ab3@12773>   MOVEQ.l #$04,D1
0002AF66 <AmiBlitz3.ab3@12774>   BTST #$0,$7(A3)
0002AF6A <AmiBlitz3.ab3@12775>    BNE.w calcvar__dothemul
0002AF6E <AmiBlitz3.ab3@12776>   MOVE.w $8(A2),D1
0002AF72 <AmiBlitz3.ab3@12779>   BSR.w JL_0_B6DE
0002AF78 <AmiBlitz3.ab3@12780>   MOVE.w addrega2,D1
0002AF7E <AmiBlitz3.ab3@12781>   OR.w regnum,D1
0002AF82 <AmiBlitz3.ab3@12782>    OR.w #$100,d1                                           ;>32kb types
0002AF86 <AmiBlitz3.ab3@12783>    BSR.w writeword
0002AF8A <AmiBlitz3.ab3@12784>    BSR.w get1bytemain
0002AF8C <AmiBlitz3.ab3@12785>   MOVEQ.l #$00,D3
0002AF90 <AmiBlitz3.ab3@12786>   MOVE.w #$8000,D2
0002AF96 <AmiBlitz3.ab3@12789>   BTST #$0,$7(A3)
0002AF9A <AmiBlitz3.ab3@12790>    BNE.w calcvar__pointer
0002AF9E <AmiBlitz3.ab3@12791> BRA.w calcvar__loop0
0002AFA2 <AmiBlitz3.ab3@12795>  CMP.w #$5C,D0
0002AFA6 <AmiBlitz3.ab3@12796>    BNE.w calcvar__done3
0002AFA8 <AmiBlitz3.ab3@12797>   TST.w D3
0002AFAC <AmiBlitz3.ab3@12798>    BNE.w calcvar__pskip
0002AFB2 <AmiBlitz3.ab3@12799>   MOVE.w movea0,D1
0002AFB6 <AmiBlitz3.ab3@12800>    BSR.w writeword
0002AFBA <AmiBlitz3.ab3@12801> BRA.w calcvar__pmore
0002AFC0 <AmiBlitz3.ab3@12804>   MOVE.w D3,movea0a0+2
0002AFC6 <AmiBlitz3.ab3@12805>   MOVE.l movea0a0,D1
0002AFCA <AmiBlitz3.ab3@12806>    BSR.w writelong
0002AFD0 <AmiBlitz3.ab3@12809>   BTST #$2,$7(A3)
0002AFD4 <AmiBlitz3.ab3@12810>    BEQ.w calcvar__loopml
0002AFDA <AmiBlitz3.ab3@12811>   MOVE.l adda0a0,D1
0002AFDE <AmiBlitz3.ab3@12812>    BSR.w writelong
0002AFE2 <AmiBlitz3.ab3@12813> BRA.w calcvar__loopml
0002AFE6 <AmiBlitz3.ab3@12816>   BSET #$E,D2
0002AFEC <AmiBlitz3.ab3@12817>   BTST #$2,$7(A3)
0002AFF0 <AmiBlitz3.ab3@12818>    BNE.w calcvar__done
0002AFF4 <AmiBlitz3.ab3@12819>   BSET #$D,D2
0002AFFC <AmiBlitz3.ab3@12822>   CMPI.l #$100,$4(A2)
0002B000 <AmiBlitz3.ab3@12823>    BCC.w calcvar__done2
0002B004 <AmiBlitz3.ab3@12824>   MOVE.b $7(A2),D2
0002B008 <AmiBlitz3.ab3@12827> BRA.w JL_0_9004
0002B00C <AmiBlitz3.ab3@12830>   MOVE.w $6(A2),D2
0002B010 <AmiBlitz3.ab3@12833>   MOVE.w $4(A3),D3
0002B016 <AmiBlitz3.ab3@12834>   BTST #$0,$7(A3)
0002B01A <AmiBlitz3.ab3@12835>    BEQ.w calcvar__nopoint
0002B01E <AmiBlitz3.ab3@12836>   BSET #$E,D2
0002B020 <AmiBlitz3.ab3@12839> RTS
0002B024 <AmiBlitz3.ab3@12843> brchkcode0:  Dc.b $B0,$7C,$00,$00                          ;CMP.W   #$0000,D0
0002B028 <AmiBlitz3.ab3@12844> brchkcode:   Dc.b $B0,$7C :             Dc.b $00,$00       ;CMP.W   #$0000,D0
0002B02A <AmiBlitz3.ab3@12845>              Dc.b $65,$04                                  ;BCS.B   brchkcode__ok
0002B02C <AmiBlitz3.ab3@12846>              Dc.b $70,$02                                  ;MOVEQ   #$02,D0
0002B02E <AmiBlitz3.ab3@12847>              Dc.b $4E,$40                                  ;TRAP    #00
0002B034 <AmiBlitz3.ab3@12855>   TST.w varmode
0002B038 <AmiBlitz3.ab3@12856>    BEQ.w writeword
0002B03C <AmiBlitz3.ab3@12857>   BCLR #$0,D1
0002B040 <AmiBlitz3.ab3@12858> BRA.w writeword
0002B046 <AmiBlitz3.ab3@12861>   TST.w varmode
0002B04A <AmiBlitz3.ab3@12862>    BEQ.w writeword
0002B04E <AmiBlitz3.ab3@12863>   BCLR #$9,D1
0002B052 <AmiBlitz3.ab3@12864> BRA.w writeword
0002B058 <AmiBlitz3.ab3@12867>   TST.w proceduremode
0002B05C <AmiBlitz3.ab3@12868>    BEQ.w writelong
0002B060 <AmiBlitz3.ab3@12869>   BCLR #$19,D1
0002B064 <AmiBlitz3.ab3@12870> BRA.w writelong
0002B06A <AmiBlitz3.ab3@12873>   TST.w varmode
0002B06E <AmiBlitz3.ab3@12874>   BEQ.w writelong
0002B072 <AmiBlitz3.ab3@12875>   BCLR #$10,D1
0002B078 <AmiBlitz3.ab3@12878>   ADDQ.l #1,destpointer
0002B080 <AmiBlitz3.ab3@12879>   BCLR #$0,destpointer+3
0002B086 <AmiBlitz3.ab3@12880>   MOVEA.l destpointer,A4
0002B08C <AmiBlitz3.ab3@12881>   CMPA.l destbufferend,A4
0002B090 <AmiBlitz3.ab3@12882>    BCC.w writeword__overa
0002B092 <AmiBlitz3.ab3@12883>   MOVE.l D1,(A4)+
0002B098 <AmiBlitz3.ab3@12886>   MOVE.l A4,destpointer
0002B09C <AmiBlitz3.ab3@12887>   CMPA.l bigpc(PC),A4
0002B0A0 <AmiBlitz3.ab3@12888>    BHI.w writeword__nbp
0002B0A2 <AmiBlitz3.ab3@12889> RTS
0002B0AA <AmiBlitz3.ab3@12892>   MOVE.w #$FFFF,dontwrite                                  ;#-1 org source
0002B0B0 <AmiBlitz3.ab3@12893>   CLR.b fast
0002B0B6 <AmiBlitz3.ab3@12894>   CLR.b fpu
0002B0BC <AmiBlitz3.ab3@12895>   CLR.b iee
0002B0BE <AmiBlitz3.ab3@12896>   ADDQ.w #4,A4
0002B0C2 <AmiBlitz3.ab3@12897> BRA.w writeword__msa
0002B0C8 <AmiBlitz3.ab3@12903>   ADDQ.l #1,destpointer
0002B0D0 <AmiBlitz3.ab3@12904>   BCLR #$0,destpointer+3
0002B0D6 <AmiBlitz3.ab3@12905>   MOVEA.l destpointer,A4
0002B0DC <AmiBlitz3.ab3@12906>   CMPA.l destbufferend,A4
0002B0E0 <AmiBlitz3.ab3@12907>    BCC.w writeword__over
0002B0E2 <AmiBlitz3.ab3@12908>   MOVE.w D1,(A4)+
0002B0E8 <AmiBlitz3.ab3@12911>   MOVE.l A4,destpointer
0002B0EC <AmiBlitz3.ab3@12912>   CMPA.l bigpc(PC),A4
0002B0F0 <AmiBlitz3.ab3@12913>    BHI.w writeword__nbp
0002B0F2 <AmiBlitz3.ab3@12914> RTS
0002B0F8 <AmiBlitz3.ab3@12917>   ADDQ.l #1,destpointer
0002B100 <AmiBlitz3.ab3@12918>   BCLR #$0,destpointer+3
0002B106 <AmiBlitz3.ab3@12919>   MOVEA.l destpointer,A4
0002B10C <AmiBlitz3.ab3@12920>   CMPA.l destbufferend,A4
0002B110 <AmiBlitz3.ab3@12921>    BCC.w writeword__over
0002B112 <AmiBlitz3.ab3@12922>   MOVE.w D1,(A4)+
0002B118 <AmiBlitz3.ab3@12923>   MOVE.l A4,destpointer
0002B11C <AmiBlitz3.ab3@12924>   CMPA.l bigpc(PC),A4
0002B120 <AmiBlitz3.ab3@12925>    BHI.w writeword__nbp
0002B122 <AmiBlitz3.ab3@12926> RTS
0002B128 <AmiBlitz3.ab3@12929>   TST.w cfetchmode
0002B12C <AmiBlitz3.ab3@12930>   BNE.w writeword__nbp2
0002B132 <AmiBlitz3.ab3@12931>   MOVE.l A4,bigpc
0002B134 <AmiBlitz3.ab3@12934> RTS
0002B13C <AmiBlitz3.ab3@12937>   MOVE.w #$FFFF,dontwrite                                  ;#-1 org source
0002B13E <AmiBlitz3.ab3@12938>   ADDQ.w #2,A4
0002B144 <AmiBlitz3.ab3@12939>   CLR.b fast
0002B14A <AmiBlitz3.ab3@12940>   CLR.b fpu
0002B150 <AmiBlitz3.ab3@12941>   CLR.b iee
0002B154 <AmiBlitz3.ab3@12942> BRA.w writeword__ms
0002B15A <AmiBlitz3.ab3@12946>   MOVEA.l destpointer,A4
0002B160 <AmiBlitz3.ab3@12947>   CMPA.l destbufferend,A4
0002B164 <AmiBlitz3.ab3@12948>    BCC.w writebyte__over
0002B166 <AmiBlitz3.ab3@12949>   MOVE.b D1,(A4)+
0002B16C <AmiBlitz3.ab3@12952>   MOVE.l A4,destpointer
0002B170 <AmiBlitz3.ab3@12953>   CMPA.l bigpc(PC),A4
0002B174 <AmiBlitz3.ab3@12954>    BHI.w writebyte__nbp
0002B176 <AmiBlitz3.ab3@12955> RTS
0002B17C <AmiBlitz3.ab3@12958>   TST.w cfetchmode
0002B180 <AmiBlitz3.ab3@12959>    BNE.w writebyte__nbp2
0002B186 <AmiBlitz3.ab3@12960>   MOVE.l A4,bigpc
0002B188 <AmiBlitz3.ab3@12963> RTS
0002B190 <AmiBlitz3.ab3@12966>   MOVE.w #-1,dontwrite
0002B192 <AmiBlitz3.ab3@12967>   ADDQ.w #1,A4
0002B198 <AmiBlitz3.ab3@12968>   CLR.b fast
0002B19E <AmiBlitz3.ab3@12969>   CLR.b fpu
0002B1A4 <AmiBlitz3.ab3@12970>   CLR.b iee
0002B1A8 <AmiBlitz3.ab3@12971> BRA.w writebyte__ms
0002B1AC <AmiBlitz3.ab3@12974> bigpc:   Ds.l 1
0002B1AE <AmiBlitz3.ab3@12978>   MOVE.w (A0)+,D1
0002B1B2 <AmiBlitz3.ab3@12979>   BSR.w writeword
0002B1B4 <AmiBlitz3.ab3@12982>     CMPA.l A1,A0
0002B1B8 <AmiBlitz3.ab3@12983>     BCC.w pokecode__done
0002B1BA <AmiBlitz3.ab3@12984>       MOVE.w (A0)+,D1
0002B1BE <AmiBlitz3.ab3@12985>       BSR.w writeword
0002B1C2 <AmiBlitz3.ab3@12986> BRA.w pokecode__loop
0002B1C4 <AmiBlitz3.ab3@12989> RTS
0002B1C6 <AmiBlitz3.ab3@12992>   MOVE.w (A0)+,D1
0002B1CA <AmiBlitz3.ab3@12993>   BSR.w writeword
0002B1CC <AmiBlitz3.ab3@12994>   CMPA.l A1,A0
0002B1D0 <AmiBlitz3.ab3@12995>   BCS.w pokecode2
0002B1D2 <AmiBlitz3.ab3@12996> RTS
0002B1D8 <AmiBlitz3.ab3@13002>   TST.b iniffcommand
0002B1DC <AmiBlitz3.ab3@13003>   BEQ 'l1
0002B1E0 <AmiBlitz3.ab3@13004>     MOVE.w #$4880,D1
0002B1E6 <AmiBlitz3.ab3@13005>     OR.w regnum,D1
0002B1EA <AmiBlitz3.ab3@13006>     BSR writeword
0002B1EC <AmiBlitz3.ab3@13009> RTS
0002B1F0 <AmiBlitz3.ab3@13012>   BSR.w convert_byte_to_word
0002B1F6 <AmiBlitz3.ab3@13015>   TST.b iee
0002B1FA <AmiBlitz3.ab3@13016>   BEQ 'old
0002B1FE <AmiBlitz3.ab3@13017>   CMP.b #5,d2
0002B202 <AmiBlitz3.ab3@13018>   BEQ wtof
0002B206 <AmiBlitz3.ab3@13021>   MOVE.w #$48C0,D1
0002B20C <AmiBlitz3.ab3@13022>   OR.w regnum,D1
0002B210 <AmiBlitz3.ab3@13023> BRA.w writeword
0002B212 <AmiBlitz3.ab3@13026>   MOVEQ #0,d0
0002B218 <AmiBlitz3.ab3@13027>   MOVE.w regnum,d0
0002B21A <AmiBlitz3.ab3@13028>   ASL.l #7,d0
0002B220 <AmiBlitz3.ab3@13029>   MOVE.l #$f2005000,d1
0002B222 <AmiBlitz3.ab3@13030>   OR.l d0,d1
0002B224 <AmiBlitz3.ab3@13031>   ASL.l #1,d0
0002B226 <AmiBlitz3.ab3@13032>   ASL.l #8,d0
0002B228 <AmiBlitz3.ab3@13033>   OR.l d0,d1
0002B22C <AmiBlitz3.ab3@13034> BRA writelong
0002B230 <AmiBlitz3.ab3@13038>   BSR.w convert_byte_to_word
0002B234 <AmiBlitz3.ab3@13041>   MOVE.w #$4840,D1
0002B23A <AmiBlitz3.ab3@13042>   OR.w regnum,D1
0002B23E <AmiBlitz3.ab3@13043>    BSR.w writeword
0002B242 <AmiBlitz3.ab3@13044>   MOVE.w #$4240,D1
0002B248 <AmiBlitz3.ab3@13045>   OR.w regnum,D1
0002B24C <AmiBlitz3.ab3@13046> BRA.w writeword
0002B250 <AmiBlitz3.ab3@13050>   CMP.w #$ffdc,d1
0002B254 <AmiBlitz3.ab3@13051>   BNE 'negfpu
0002B256 <AmiBlitz3.ab3@13052>   MOVEQ #0,d0
0002B25C <AmiBlitz3.ab3@13053>   MOVE.w regnum,d0
0002B25E <AmiBlitz3.ab3@13054>   ASL.l #7,d0
0002B264 <AmiBlitz3.ab3@13055>   MOVE.l #$f2004000,d1
0002B266 <AmiBlitz3.ab3@13056>   OR.l d0,d1
0002B268 <AmiBlitz3.ab3@13057>   ASL.l #1,d0
0002B26A <AmiBlitz3.ab3@13058>   ASL.l #8,d0
0002B26C <AmiBlitz3.ab3@13059>   OR.l d0,d1
0002B270 <AmiBlitz3.ab3@13060> BRA writelong
0002B272 <AmiBlitz3.ab3@13064>   MOVEQ #0,d1
0002B278 <AmiBlitz3.ab3@13065>   MOVE.w regnum,d1                                         ;fpu neg
0002B27A <AmiBlitz3.ab3@13066>   ASL.l #7,d1
0002B280 <AmiBlitz3.ab3@13067>   OR.l #$f200001a,d1
0002B282 <AmiBlitz3.ab3@13068>   MOVE.l d0,-(a7)
0002B284 <AmiBlitz3.ab3@13069>   MOVEQ #0,d0
0002B28A <AmiBlitz3.ab3@13070>   MOVE.w regnum,d0
0002B28C <AmiBlitz3.ab3@13071>   ASL.l #8,d0
0002B28E <AmiBlitz3.ab3@13072>   ASL.l #2,d0
0002B290 <AmiBlitz3.ab3@13073>   OR.l d0,d1
0002B292 <AmiBlitz3.ab3@13074>   MOVE.l (a7)+,d0
0002B296 <AmiBlitz3.ab3@13075> BRA writelong
0002B29C <AmiBlitz3.ab3@13078>    TST.b iee
0002B2A0 <AmiBlitz3.ab3@13079>    BNE wtof
0002B2A4 <AmiBlitz3.ab3@13080>    BSR.w convert_byte_to_long
0002B2A8 <AmiBlitz3.ab3@13083>    MOVE.w #$FFDC,D1
0002B2AE <AmiBlitz3.ab3@13086>    TST.b iee
0002B2B2 <AmiBlitz3.ab3@13087>    BNE ltof
0002B2B8 <AmiBlitz3.ab3@13088>    MOVE.w D1,libjsr+2
0002B2BC <AmiBlitz3.ab3@13089>    BSR.w JL_0_AD40
0002B2BE <AmiBlitz3.ab3@13090>   MOVE.l D4,D1
0002B2C2 <AmiBlitz3.ab3@13091>    BSR.w JL_0_AD38
0002B2C6 <AmiBlitz3.ab3@13092>   MOVE.w #$C900,D1
0002B2CA <AmiBlitz3.ab3@13093>    BSR.w Atokejsr
0002B2CE <AmiBlitz3.ab3@13094>    BSR.w JL_0_A352
0002B2D4 <AmiBlitz3.ab3@13095>   MOVE.l libjsr,D1
0002B2D8 <AmiBlitz3.ab3@13096>    BSR.w writelong
0002B2DC <AmiBlitz3.ab3@13097>    BSR.w JL_0_A36E
0002B2DE <AmiBlitz3.ab3@13098>   MOVE.l D5,D1
0002B2E2 <AmiBlitz3.ab3@13099> BRA.w JL_0_AD38
0002B2E4 <AmiBlitz3.ab3@13102> RTS
0002B2E8 <AmiBlitz3.ab3@13105>   MOVE.w #$C317,D1
0002B2EE <AmiBlitz3.ab3@13106>   TST.b typecheck
0002B2F2 <AmiBlitz3.ab3@13107>   BEQ 'l1
0002B2F8 <AmiBlitz3.ab3@13108>    TST.b notypecheck
0002B2FC <AmiBlitz3.ab3@13109>    BNE 'l1
0002B302 <AmiBlitz3.ab3@13110>    TST.l lasttoken
0002B308 <AmiBlitz3.ab3@13117>   TST.b debugmode
0002B30C <AmiBlitz3.ab3@13118>    BEQ.w JL_0_9696
0002B314 <AmiBlitz3.ab3@13119>   BTST #$7,overflowcheck
0002B318 <AmiBlitz3.ab3@13120>    BEQ.w JL_0_9696
0002B31E <AmiBlitz3.ab3@13121>   TST.w cfetchmode
0002B322 <AmiBlitz3.ab3@13122>    BNE.w JL_0_9696
0002B328 <AmiBlitz3.ab3@13123>   TST.w regnum
0002B32C <AmiBlitz3.ab3@13124>    BEQ.w JL_0_968A
0002B32E <AmiBlitz3.ab3@13125>   MOVE.w D1,-(A7)
0002B332 <AmiBlitz3.ab3@13126>   MOVE.w JL_0_9698(PC),D1
0002B336 <AmiBlitz3.ab3@13127>    BSR.w writeword
0002B33C <AmiBlitz3.ab3@13128>   MOVE.w regnum,D1
0002B340 <AmiBlitz3.ab3@13129>   OR.w L_0_969C(PC),D1
0002B344 <AmiBlitz3.ab3@13130>    BSR.w writeword
0002B346 <AmiBlitz3.ab3@13131>   MOVE.w (A7)+,D1
0002B34A <AmiBlitz3.ab3@13132>    BSR.w JL_0_968A
0002B34E <AmiBlitz3.ab3@13133>   MOVE.w L_0_969A(PC),D1
0002B352 <AmiBlitz3.ab3@13134> BRA.w writeword
0002B356 <AmiBlitz3.ab3@13138>   MOVEM.l D0-D7/A0-A6,-(A7)
0002B35A <AmiBlitz3.ab3@13139>    BSR.w Atokejsr
0002B35E <AmiBlitz3.ab3@13140>   MOVEM.l (A7)+,D0-D7/A0-A6
0002B360 <AmiBlitz3.ab3@13143> RTS
0002B362 <AmiBlitz3.ab3@13146>   MOVE.l D0,-(A7)
0002B364 <AmiBlitz3.ab3@13149>   MOVE.l (A7)+,D0
0002B366 <AmiBlitz3.ab3@13152>   MOVE.l D0,D0
0002B36A <AmiBlitz3.ab3@13155>   BSR.w convert_word_to_long
0002B370 <AmiBlitz3.ab3@13156>   TST.b iee
0002B374 <AmiBlitz3.ab3@13157>   BEQ 'old
0002B378 <AmiBlitz3.ab3@13158>   CMP.b #5,d2
0002B37C <AmiBlitz3.ab3@13159>   BNE 'old
0002B37E <AmiBlitz3.ab3@13160> RTS
0002B382 <AmiBlitz3.ab3@13163> BRA.w JL_0_9600
0002B386 <AmiBlitz3.ab3@13167>   MOVE.w #$C316,D1
0002B38C <AmiBlitz3.ab3@13168>   TST.b typecheck
0002B390 <AmiBlitz3.ab3@13169>   BEQ 'l1
0002B396 <AmiBlitz3.ab3@13170>   TST.b peekaddrsize
0002B39A <AmiBlitz3.ab3@13171>   BNE 'l1
0002B3A0 <AmiBlitz3.ab3@13172>   TST.b notypecheck
0002B3A4 <AmiBlitz3.ab3@13173>   BNE 'l1
0002B3AA <AmiBlitz3.ab3@13174>   TST.l lasttoken
0002B3AE <AmiBlitz3.ab3@13180> BRA.w JL_0_963A
0002B3B2 <AmiBlitz3.ab3@13184>   MOVE.w #$C318,D1
0002B3B8 <AmiBlitz3.ab3@13185>   TST.b typecheck
0002B3BC <AmiBlitz3.ab3@13186>   BEQ 'l1
0002B3C2 <AmiBlitz3.ab3@13187>   TST.b peekaddrsize
0002B3C6 <AmiBlitz3.ab3@13188>   BNE 'l1
0002B3CC <AmiBlitz3.ab3@13189>   TST.b notypecheck
0002B3D0 <AmiBlitz3.ab3@13190>   BNE 'l1
0002B3D6 <AmiBlitz3.ab3@13191>   TST.l lasttoken
0002B3DA <AmiBlitz3.ab3@13197> BRA.w JL_0_963A
0002B3DE <AmiBlitz3.ab3@13201>   MOVE.w #$C318,D1
0002B3E4 <AmiBlitz3.ab3@13202>   TST.b typecheck
0002B3E8 <AmiBlitz3.ab3@13203>   BEQ 'l1
0002B3EE <AmiBlitz3.ab3@13204>   TST.b notypecheck
0002B3F2 <AmiBlitz3.ab3@13205>   BNE 'l1
0002B3F8 <AmiBlitz3.ab3@13206>   TST.l lasttoken
0002B3FC <AmiBlitz3.ab3@13212>   BSR.w JL_0_963A
0002B400 <AmiBlitz3.ab3@13213> BRA.w convert_word_to_quick
0002B404 <AmiBlitz3.ab3@13217> BRA.w JL_0_9600
0002B406 <AmiBlitz3.ab3@13221> RTS
0002B40A <AmiBlitz3.ab3@13225>   MOVE.w #$C319,D1
0002B410 <AmiBlitz3.ab3@13226>   TST.b typecheck
0002B414 <AmiBlitz3.ab3@13227>   BEQ 'l1
0002B41A <AmiBlitz3.ab3@13228>   TST.b notypecheck
0002B41E <AmiBlitz3.ab3@13229>   BNE 'l1
0002B424 <AmiBlitz3.ab3@13230>   TST.l lasttoken
0002B428 <AmiBlitz3.ab3@13237>   BSR.w JL_0_963A
0002B42C <AmiBlitz3.ab3@13240>   MOVE.w #$4240,D1
0002B432 <AmiBlitz3.ab3@13241>   OR.w regnum,D1
0002B436 <AmiBlitz3.ab3@13242>   BSR.w writeword
0002B43A <AmiBlitz3.ab3@13243>   MOVE.w #$4840,D1
0002B440 <AmiBlitz3.ab3@13244>   OR.w regnum,D1
0002B444 <AmiBlitz3.ab3@13245> BRA.w writeword
0002B448 <AmiBlitz3.ab3@13249> BRA.w JL_0_96D0
0002B44C <AmiBlitz3.ab3@13253>   BSR.w JL_0_96D0
0002B450 <AmiBlitz3.ab3@13254> BRA.w convert_word_to_long
0002B452 <AmiBlitz3.ab3@13259>   MOVEQ #0,d0
0002B458 <AmiBlitz3.ab3@13260>   MOVE.w regnum,d0
0002B45A <AmiBlitz3.ab3@13261>   ASL.l #7,d0
0002B460 <AmiBlitz3.ab3@13262>   MOVE.l #$f2004000,d1
0002B462 <AmiBlitz3.ab3@13263>   OR.l d0,d1
0002B464 <AmiBlitz3.ab3@13264>   ASL.l #1,d0
0002B466 <AmiBlitz3.ab3@13265>   ASL.l #8,d0
0002B468 <AmiBlitz3.ab3@13266>   OR.l d0,d1
0002B46C <AmiBlitz3.ab3@13267>   BSR writelong
0002B472 <AmiBlitz3.ab3@13268>   MOVE.w regnum,d0
0002B474 <AmiBlitz3.ab3@13269>   ASL.l #7,d0
0002B47A <AmiBlitz3.ab3@13270>   MOVE.l #$f23c4423,d1                                     ;fmul.s #1/65536,fpreg
0002B47C <AmiBlitz3.ab3@13271>   OR.w d0,d1
0002B480 <AmiBlitz3.ab3@13272>   BSR writelong
0002B486 <AmiBlitz3.ab3@13273>   MOVE.l #$37800000,d1
0002B48A <AmiBlitz3.ab3@13274>   BSR writelong
0002B48C <AmiBlitz3.ab3@13275> RTS
0002B492 <AmiBlitz3.ab3@13279>   TST.b iee
0002B496 <AmiBlitz3.ab3@13280>   BNE qtof
0002B49A <AmiBlitz3.ab3@13281>   MOVE.w #$D300,D1
0002B49C <AmiBlitz3.ab3@13284>   MOVE.w D1,-(A7)
0002B4A0 <AmiBlitz3.ab3@13285>    BSR.w JL_0_AD40
0002B4A2 <AmiBlitz3.ab3@13286>   MOVE.l D4,D1
0002B4A6 <AmiBlitz3.ab3@13287>    BSR.w JL_0_AD38
0002B4AA <AmiBlitz3.ab3@13288>    BSR.w JL_0_A352
0002B4AC <AmiBlitz3.ab3@13289>   MOVE.w (A7)+,D1
0002B4B0 <AmiBlitz3.ab3@13290>    BSR.w Atokejsr
0002B4B4 <AmiBlitz3.ab3@13291>    BSR.w JL_0_A36E
0002B4B6 <AmiBlitz3.ab3@13292>   MOVE.l D5,D1
0002B4BA <AmiBlitz3.ab3@13293> BRA.w JL_0_AD38
0002B4BC <AmiBlitz3.ab3@13297> RTS
0002B4C2 <AmiBlitz3.ab3@13300>   TST.b typecheck
0002B4C6 <AmiBlitz3.ab3@13301>   BEQ 'l1
0002B4CC <AmiBlitz3.ab3@13302>   TST.b notypecheck
0002B4D0 <AmiBlitz3.ab3@13303>   BNE 'l1
0002B4D6 <AmiBlitz3.ab3@13304>   TST.l lasttoken
0002B4DC <AmiBlitz3.ab3@13309>   TST.b iee
0002B4E0 <AmiBlitz3.ab3@13310>   BNE ftol
0002B4E4 <AmiBlitz3.ab3@13311>   MOVE.w #$C31A,D1
0002B4E8 <AmiBlitz3.ab3@13312>   BSR.w JL_0_963A
0002B4EC <AmiBlitz3.ab3@13313>   BSR.w JL_0_974A
0002B4F0 <AmiBlitz3.ab3@13314> BRA.w convert_long_to_byte
0002B4F2 <AmiBlitz3.ab3@13318> RTS
0002B4F8 <AmiBlitz3.ab3@13321>   TST.b typecheck
0002B4FC <AmiBlitz3.ab3@13322>   BEQ 'l1
0002B502 <AmiBlitz3.ab3@13323>   TST.b notypecheck
0002B506 <AmiBlitz3.ab3@13324>   BNE 'l1
0002B50C <AmiBlitz3.ab3@13325>   TST.l lasttoken
0002B512 <AmiBlitz3.ab3@13330>   TST.b iee
0002B516 <AmiBlitz3.ab3@13331>   BNE ftol
0002B51A <AmiBlitz3.ab3@13332>   MOVE.w #$C31B,D1
0002B51E <AmiBlitz3.ab3@13333>   BSR.w JL_0_963A
0002B522 <AmiBlitz3.ab3@13334>   BSR.w JL_0_974A
0002B526 <AmiBlitz3.ab3@13335> BRA.w convert_long_to_word
0002B528 <AmiBlitz3.ab3@13339> RTS
0002B52E <AmiBlitz3.ab3@13342>   TST.b iee
0002B532 <AmiBlitz3.ab3@13343>   BNE ftol
0002B536 <AmiBlitz3.ab3@13344>   MOVE.w #$C31C,D1
0002B53A <AmiBlitz3.ab3@13345>   BSR.w JL_0_963A
0002B53E <AmiBlitz3.ab3@13348>   MOVE.w #$FFE2,D1
0002B542 <AmiBlitz3.ab3@13349> BRA.w JL_0_9604
0002B544 <AmiBlitz3.ab3@13352>   MOVE.l d0,-(a7)
0002B546 <AmiBlitz3.ab3@13353>   MOVEQ #0,d0
0002B54C <AmiBlitz3.ab3@13354>   MOVE.w regnum,d0
0002B54E <AmiBlitz3.ab3@13355>   ASL.l #7,d0
0002B554 <AmiBlitz3.ab3@13356>   MOVE.l #$f2006000,d1
0002B556 <AmiBlitz3.ab3@13357>   OR.l d0,d1
0002B558 <AmiBlitz3.ab3@13358>   ASL.l #1,d0
0002B55A <AmiBlitz3.ab3@13359>   ASL.l #8,d0
0002B55C <AmiBlitz3.ab3@13360>   OR.l d0,d1
0002B55E <AmiBlitz3.ab3@13361>   MOVE.l (a7)+,d0
0002B562 <AmiBlitz3.ab3@13362> BRA writelong
0002B564 <AmiBlitz3.ab3@13366>   MOVE.l d0,-(a7)
0002B566 <AmiBlitz3.ab3@13367>   MOVEQ #0,d0
0002B56C <AmiBlitz3.ab3@13368>   MOVE.l #$f23c4023,d1
0002B572 <AmiBlitz3.ab3@13369>   MOVE.w regnum,d0
0002B574 <AmiBlitz3.ab3@13370>   ASL.l #7,d0
0002B576 <AmiBlitz3.ab3@13371>   OR.l d0,d1
0002B57A <AmiBlitz3.ab3@13372>   BSR writelong
0002B580 <AmiBlitz3.ab3@13373>   MOVE.l #$00010000,d1
0002B584 <AmiBlitz3.ab3@13374>   BSR writelong
0002B58A <AmiBlitz3.ab3@13375>   MOVE.w regnum,d0
0002B58C <AmiBlitz3.ab3@13376>   ASL.l #7,d0
0002B592 <AmiBlitz3.ab3@13377>   MOVE.l #$f2006000,d1
0002B594 <AmiBlitz3.ab3@13378>   OR.l d0,d1
0002B596 <AmiBlitz3.ab3@13379>   ASL.l #1,d0
0002B598 <AmiBlitz3.ab3@13380>   ASL.l #8,d0
0002B59A <AmiBlitz3.ab3@13381>   OR.l d0,d1
0002B59E <AmiBlitz3.ab3@13382>   BSR writelong
0002B5A0 <AmiBlitz3.ab3@13383>   MOVE.l (a7)+,d0
0002B5A2 <AmiBlitz3.ab3@13384> RTS
0002B5A4 <AmiBlitz3.ab3@13388> RTS
0002B5AA <AmiBlitz3.ab3@13392>   TST.b iee
0002B5AE <AmiBlitz3.ab3@13393>   BNE ftoq
0002B5B2 <AmiBlitz3.ab3@13394>   MOVE.w #$C31B,D1
0002B5B6 <AmiBlitz3.ab3@13395>   BSR.w JL_0_963A
0002B5BA <AmiBlitz3.ab3@13396>   MOVE.w #$D301,D1
0002B5BE <AmiBlitz3.ab3@13397> BRA.w JL_0_96FC
0002B5C4 <AmiBlitz3.ab3@13403>    TST.b blitzparloop
0002B5C8 <AmiBlitz3.ab3@13404>    BNE 'l1
0002B5CE <AmiBlitz3.ab3@13405>    TST.b funcparloop
0002B5D2 <AmiBlitz3.ab3@13406>    BNE 'l1
0002B5D6 <AmiBlitz3.ab3@13407>    BRA error_convert_types
0002B5DE <AmiBlitz3.ab3@13410>   CMP.b #2,optistring
0002B5E2 <AmiBlitz3.ab3@13411>   BEQ JLrts
0002B5E8 <AmiBlitz3.ab3@13412>   MOVE.w stol,D1
0002B5EC <AmiBlitz3.ab3@13413>   BSR.w writeword
0002B5F4 <AmiBlitz3.ab3@13414>   CMPI.w #$2,sbgot
0002B5F8 <AmiBlitz3.ab3@13415>   BCS.w sbtolong
0002B5FC <AmiBlitz3.ab3@13416>   MOVE.w ceos(PC),D1
0002B600 <AmiBlitz3.ab3@13417>   BSR.w writeword
0002B606 <AmiBlitz3.ab3@13420>   MOVE.w regnum,D1
0002B608 <AmiBlitz3.ab3@13421>   LSL.w #8,D1
0002B60A <AmiBlitz3.ab3@13422>   LSL.w #1,D1
0002B612 <AmiBlitz3.ab3@13423>   CMPI.w #$2,sbgot
0002B616 <AmiBlitz3.ab3@13424>   BCS.w JL_0_98E8
0002B61C <AmiBlitz3.ab3@13425>   MOVE.w a2offset,D3
0002B622 <AmiBlitz3.ab3@13426>   SUB.w thisstuse,D3
0002B626 <AmiBlitz3.ab3@13427>   CMP.w #$6,D3
0002B62A <AmiBlitz3.ab3@13428>   BNE.w JL_0_98D4b
0002B630 <AmiBlitz3.ab3@13429>   OR.w movestst2,D1
0002B634 <AmiBlitz3.ab3@13430>   BSR.w writeword
0002B63A <AmiBlitz3.ab3@13431>   LEA movestst2+2,A0
0002B640 <AmiBlitz3.ab3@13432>   LEA movestst2f,A1
0002B644 <AmiBlitz3.ab3@13433> BRA.w pokecode2
0002B64A <AmiBlitz3.ab3@13437>   OR.w movea7dn,D1
0002B64E <AmiBlitz3.ab3@13438>   BSR.w writeword
0002B654 <AmiBlitz3.ab3@13439>   MOVE.l #0,D1
0002B658 <AmiBlitz3.ab3@13440> BRA.w writeword
0002B65E <AmiBlitz3.ab3@13444>   ADDQ.w #1,fuckpos
0002B662 <AmiBlitz3.ab3@13445>   BSR.w writeconvertcode
0002B668 <AmiBlitz3.ab3@13446>   SUBQ.w #1,fuckpos
0002B66A <AmiBlitz3.ab3@13448> RTS
0002B66C <AmiBlitz3.ab3@13452>   MOVE.w D3,D1
0002B670 <AmiBlitz3.ab3@13453>   CMP.w #7,d1
0002B674 <AmiBlitz3.ab3@13454>   BLE 'ok
0002B67A <AmiBlitz3.ab3@13455>   JMP errorinternalconvert
0002B67C <AmiBlitz3.ab3@13456> 'ok  SUBQ.w #1,D1
0002B680 <AmiBlitz3.ab3@13457>   MULU #$7,D1
0002B682 <AmiBlitz3.ab3@13458>   ADD.w D2,D1
0002B684 <AmiBlitz3.ab3@13459>   SUBQ.w #1,D1
0002B686 <AmiBlitz3.ab3@13460>   LSL.w #2,D1
0002B68C <AmiBlitz3.ab3@13461>   LEA convtable,A0
0002B690 <AmiBlitz3.ab3@13462>   MOVE.l $0(A0,D1.W),D1
0002B694 <AmiBlitz3.ab3@13463>   BEQ.w JL_0_97A2
0002B696 <AmiBlitz3.ab3@13464>     MOVEA.l D1,A0
0002B69A <AmiBlitz3.ab3@13465>     CMP.b #$ff,d3
0002B69E <AmiBlitz3.ab3@13466>     BEQ JL_0_97A2
0002B6A0 <AmiBlitz3.ab3@13467> JMP (A0)
0002B6A2 <AmiBlitz3.ab3@13470> RTS
0002B6A6 <AmiBlitz3.ab3@13473> usedfrom:  Ds.l 1
0002B6AA <AmiBlitz3.ab3@13480>   CMP.w #"\",D0
0002B6AE <AmiBlitz3.ab3@13481>   BNE.w JL_0_97C2
0002B6B2 <AmiBlitz3.ab3@13482>     CMP.b #"\",(a5)
0002B6B6 <AmiBlitz3.ab3@13483>     BNE 'first
0002B6BC <AmiBlitz3.ab3@13484>       MOVE.l A5,usedfrom
0002B6C2 <AmiBlitz3.ab3@13485>       LEA path2,A5
0002B6C6 <AmiBlitz3.ab3@13486> BRA 'g1
0002B6C8 <AmiBlitz3.ab3@13489>     SUBQ.w #1,A5
0002B6CE <AmiBlitz3.ab3@13490>   MOVE.l A5,usedfrom
0002B6D4 <AmiBlitz3.ab3@13491>   LEA usedpath,A5                                          ;read path
0002B6D8 <AmiBlitz3.ab3@13494>   BSR.w get1bytemain
0002B6DE <AmiBlitz3.ab3@13497>   CLR.w flagmask
0002B6E2 <AmiBlitz3.ab3@13498>   CMP.w #$2A,D0
0002B6E6 <AmiBlitz3.ab3@13499>    BNE.w JL_0_983A
0002B6EE <AmiBlitz3.ab3@13500>   MOVE.w #$0001,flagmask
0002B6F2 <AmiBlitz3.ab3@13502>    BSR.w getparameter2
0002B6F6 <AmiBlitz3.ab3@13505>    BEQ.w syntaxerr
0002B6FA <AmiBlitz3.ab3@13506>   CMP.w #$28,D0
0002B6FE <AmiBlitz3.ab3@13507>    BEQ.w JL_0_9830
0002B702 <AmiBlitz3.ab3@13508>   CMP.w #$2E,D0
0002B706 <AmiBlitz3.ab3@13509>    BEQ.w JL_0_980C
0002B70A <AmiBlitz3.ab3@13510>   CMP.w #$24,D0
0002B70E <AmiBlitz3.ab3@13511>    BNE.w JL_0_9838
0002B716 <AmiBlitz3.ab3@13512>   ORI.w #$8,flagmask
0002B71A <AmiBlitz3.ab3@13513>    BSR.w storeloc
0002B71E <AmiBlitz3.ab3@13514>    BSR.w get1bytemain
0002B722 <AmiBlitz3.ab3@13515> BRA.w JL_0_9822
0002B726 <AmiBlitz3.ab3@13519>   BSR.w storeloc
0002B728 <AmiBlitz3.ab3@13520>   MOVE.w D2,-(A7)
0002B72E <AmiBlitz3.ab3@13521>   LEA namebuff2,A1
0002B732 <AmiBlitz3.ab3@13522>    BSR.w makename3
0002B736 <AmiBlitz3.ab3@13523>    BEQ.w syntaxerr
0002B738 <AmiBlitz3.ab3@13524>   MOVE.w (A7)+,D2
0002B73A <AmiBlitz3.ab3@13527>    MOVE.w D0,D1
0002B73E <AmiBlitz3.ab3@13528>    BSR.w resloc
0002B742 <AmiBlitz3.ab3@13529>    CMP.w #$28,D1
0002B746 <AmiBlitz3.ab3@13530>    BNE.w JL_0_9838
0002B74E <AmiBlitz3.ab3@13533>   ORI.w #$2,flagmask
0002B750 <AmiBlitz3.ab3@13536> RTS
0002B754 <AmiBlitz3.ab3@13540>   CMP.w #$40,D0
0002B758 <AmiBlitz3.ab3@13541>    BNE.w JL_0_984E
0002B760 <AmiBlitz3.ab3@13542>   MOVE.w #$0005,flagmask
0002B764 <AmiBlitz3.ab3@13543> BRA.w JL_0_97D8
0002B768 <AmiBlitz3.ab3@13547>   BSR.w makename2
0002B76C <AmiBlitz3.ab3@13548> BRA.w JL_0_97DC
0002B770 <AmiBlitz3.ab3@13552>   MOVE.w #$FED3,D1
0002B774 <AmiBlitz3.ab3@13553>    BSR.w uselib
0002B77A <AmiBlitz3.ab3@13554>   LEA pusha3,A0
0002B780 <AmiBlitz3.ab3@13555>   LEA pusha3f,A1
0002B784 <AmiBlitz3.ab3@13556> BRA.w pokecode
0002B788 <AmiBlitz3.ab3@13560>   MOVE.w #$FED3,D1
0002B78C <AmiBlitz3.ab3@13561>    BSR.w uselib
0002B792 <AmiBlitz3.ab3@13562>   LEA pulla3,A0
0002B798 <AmiBlitz3.ab3@13563>   LEA pulla3f,A1
0002B79C <AmiBlitz3.ab3@13564> BRA.w pokecode
0002B79E <AmiBlitz3.ab3@13568> ceos:   Dc.b $42,$1B                                       ;CLR.B   (A3)+             ;*!
0002B7A6 <AmiBlitz3.ab3@13573>     CMP.b #2,optistring
0002B7AA <AmiBlitz3.ab3@13574>    BEQ 'l10
0002B7AE <AmiBlitz3.ab3@13575>    MOVE.w ceos(PC),D1
0002B7B2 <AmiBlitz3.ab3@13576>    BSR.w writeword                                         ;clr.b (a3)
0002B7B8 <AmiBlitz3.ab3@13579>   MOVE.w regnum,D1
0002B7BA <AmiBlitz3.ab3@13580>   LSL.w #8,D1
0002B7BC <AmiBlitz3.ab3@13581>   LSL.w #1,D1
0002B7C4 <AmiBlitz3.ab3@13582>   CMPI.w #$2,sbgot
0002B7C8 <AmiBlitz3.ab3@13583>    BCS.w JL_0_98E8
0002B7CE <AmiBlitz3.ab3@13584>   MOVE.w a2offset,D3                                       ;stackuse,d3 org source
0002B7D4 <AmiBlitz3.ab3@13585>   SUB.w thisstuse,D3
0002B7D8 <AmiBlitz3.ab3@13586>   CMP.w #$6,D3
0002B7DC <AmiBlitz3.ab3@13587>    BNE.w JL_0_98D4
0002B7E2 <AmiBlitz3.ab3@13588>   OR.w movestst2,D1
0002B7E6 <AmiBlitz3.ab3@13589>    BSR.w writeword
0002B7EC <AmiBlitz3.ab3@13590>   LEA movestst2+2,A0
0002B7F2 <AmiBlitz3.ab3@13591>   LEA movestst2f,A1
0002B7F6 <AmiBlitz3.ab3@13592> BRA.w pokecode2
0002B7FC <AmiBlitz3.ab3@13596>    OR.w movea7dn,D1
0002B800 <AmiBlitz3.ab3@13597>    BSR.w writeword
0002B806 <AmiBlitz3.ab3@13598>   MOVE.l movea7dn+2,D1
0002B80A <AmiBlitz3.ab3@13610>   BSR writelong
0002B812 <AmiBlitz3.ab3@13613>    CMP.w #6,regnum
0002B816 <AmiBlitz3.ab3@13614>    BEQ 'l1
0002B81C <AmiBlitz3.ab3@13615>    TST.w stackpar
0002B820 <AmiBlitz3.ab3@13616>    BNE 'l1
0002B826 <AmiBlitz3.ab3@13617>    TST.b funcparloop
0002B82A <AmiBlitz3.ab3@13618>    BEQ 'l1
0002B830 <AmiBlitz3.ab3@13619>    MOVE.l #$48780000,d1
0002B834 <AmiBlitz3.ab3@13620>    BSR writelong
0002B836 <AmiBlitz3.ab3@13624> RTS
0002B838 <AmiBlitz3.ab3@13629>      MOVE.l d1,-(a7)
0002B840 <AmiBlitz3.ab3@13630>      CMP.w #6,regnum
0002B844 <AmiBlitz3.ab3@13631>      BEQ 'l1
0002B84A <AmiBlitz3.ab3@13632>      TST.w stackpar
0002B84E <AmiBlitz3.ab3@13633>      BNE 'l1
0002B854 <AmiBlitz3.ab3@13634>      TST.b funcparloop
0002B858 <AmiBlitz3.ab3@13635>      BEQ 'l1
0002B85E <AmiBlitz3.ab3@13636>      MOVE.l #$48780000,d1
0002B862 <AmiBlitz3.ab3@13637>      BSR writelong
0002B864 <AmiBlitz3.ab3@13640>      MOVE.l (a7)+,d1
0002B86A <AmiBlitz3.ab3@13642>    OR.w movestdn,D1
0002B86E <AmiBlitz3.ab3@13643>    BSR.w writeword
0002B872 <AmiBlitz3.ab3@13644>   MOVE.w #$FED3,D1
0002B876 <AmiBlitz3.ab3@13645>    BSR.w uselib
0002B87A <AmiBlitz3.ab3@13646>   MOVE.w $A(A1),D1
0002B87E <AmiBlitz3.ab3@13647> BRA.w writeword
0002B880 <AmiBlitz3.ab3@13650> unknown:    Ds.w 1
0002B886 <AmiBlitz3.ab3@13653> somecode:   Dc.b $0C,$80,$00,$01,$00,$00                   ;CMPI.L  #$00010000,D0
0002B88A <AmiBlitz3.ab3@13654> somecode2:  Dc.b $65,$00,$00,$08                           ;BCS.W   codeisok
0002B890 <AmiBlitz3.ab3@13655>             Dc.b $4E,$B9,$00,$00,$00,$00                   ;JSR $00000000
0002B896 <AmiBlitz3.ab3@13661>   TST.b debugmode
0002B89A <AmiBlitz3.ab3@13662>   BEQ.w sharreval
0002B89E <AmiBlitz3.ab3@13663>  BSR.w arreval
0002B8A2 <AmiBlitz3.ab3@13666>   MOVE.w somecode(PC),D1
0002B8A8 <AmiBlitz3.ab3@13667>   OR.w regnum,D1
0002B8AC <AmiBlitz3.ab3@13668>    BSR.w writeword
0002B8AE <AmiBlitz3.ab3@13669>   MOVEQ.l #$01,D1
0002B8B0 <AmiBlitz3.ab3@13670>   SWAP D1
0002B8B4 <AmiBlitz3.ab3@13671>    BSR.w writelong
0002B8B8 <AmiBlitz3.ab3@13672>   MOVE.l somecode2(PC),D1
0002B8BC <AmiBlitz3.ab3@13673>    BSR.w writelong
0002B8C0 <AmiBlitz3.ab3@13674>   MOVE.w #$C309,D1
0002B8C4 <AmiBlitz3.ab3@13675> BRA.w Atokejsr
0002B8C6 <AmiBlitz3.ab3@13679>   MOVEQ.l #$02,D2
0002B8C8 <AmiBlitz3.ab3@13680>   MOVEQ.l #$00,D1
0002B8CA <AmiBlitz3.ab3@13681>   MOVEQ.l #$00,D3
0002B8CE <AmiBlitz3.ab3@13682> BRA.w maineval2
0002B8D0 <AmiBlitz3.ab3@13686>   MOVEQ.l #$03,D2
0002B8D2 <AmiBlitz3.ab3@13687>   MOVEQ.l #$00,D1
0002B8D4 <AmiBlitz3.ab3@13688>   MOVEQ.l #$00,D3
0002B8DA <AmiBlitz3.ab3@13689>   MOVE.b notypecheck,-(a7)
0002B8E2 <AmiBlitz3.ab3@13690>   MOVE.b #1,notypecheck                                    ;typecheck need switch off for array offset calculation code
0002B8E8 <AmiBlitz3.ab3@13691>   JSR maineval2
0002B8EE <AmiBlitz3.ab3@13692>   MOVE.b (a7)+,notypecheck                                 ;now its switch to old state
0002B8F0 <AmiBlitz3.ab3@13693>   RTS
0002B8FA <AmiBlitz3.ab3@13697>   MOVE.w oldqflag,instringon
0002B900 <AmiBlitz3.ab3@13698>   MOVEA.l lastsourcepos,A5
0002B902 <AmiBlitz3.ab3@13699>   MOVEQ.l #-$01,D1
0002B904 <AmiBlitz3.ab3@13700>   MOVEQ.l #-$01,D3
0002B908 <AmiBlitz3.ab3@13701> BRA.w peval
0002B912 <AmiBlitz3.ab3@13706>   MOVE.w oldqflag,instringon
0002B918 <AmiBlitz3.ab3@13707>   MOVEA.l lastsourcepos,A5
0002B91A <AmiBlitz3.ab3@13710>   MOVEQ.l #-$01,D1
0002B91C <AmiBlitz3.ab3@13711>   MOVEQ.l #$00,D3
0002B922 <AmiBlitz3.ab3@13712>   MOVE.l leftsidetype,-(a7)
0002B928 <AmiBlitz3.ab3@13713>   MOVE.l rightsidetype,-(a7)
0002B92E <AmiBlitz3.ab3@13714>   CLR.l leftsidetype
0002B934 <AmiBlitz3.ab3@13715>   CLR.l rightsidetype
0002B93A <AmiBlitz3.ab3@13716>   JSR maineval
0002B940 <AmiBlitz3.ab3@13717>   MOVE.l (a7)+,rightsidetype
0002B946 <AmiBlitz3.ab3@13718>   MOVE.l (a7)+,leftsidetype
0002B948 <AmiBlitz3.ab3@13719>   RTS
0002B952 <AmiBlitz3.ab3@13723>   MOVE.w oldqflag,instringon
0002B958 <AmiBlitz3.ab3@13724>   MOVEA.l lastsourcepos,A5
0002B95A <AmiBlitz3.ab3@13725>   MOVEQ.l #$00,D1
0002B95C <AmiBlitz3.ab3@13726>   MOVEQ.l #-$01,D3
0002B960 <AmiBlitz3.ab3@13727> BRA.w maineval
0002B962 <AmiBlitz3.ab3@13731>   MOVEQ.l #$01,D1
0002B964 <AmiBlitz3.ab3@13732>   MOVEQ.l #-$01,D3
0002B968 <AmiBlitz3.ab3@13733> BRA.w maineval
0002B972 <AmiBlitz3.ab3@13738>   MOVE.w oldqflag,instringon
0002B978 <AmiBlitz3.ab3@13739>   MOVEA.l lastsourcepos,A5
0002B97A <AmiBlitz3.ab3@13742>   MOVEQ.l #$00,D1                                        ;no push
0002B97C <AmiBlitz3.ab3@13743>   MOVEQ.l #$00,D3
0002B984 <AmiBlitz3.ab3@13764>    CMPI.w #$6,regnum
0002B988 <AmiBlitz3.ab3@13765>    BCS.w maineval2
0002B98A <AmiBlitz3.ab3@13766>    MOVEQ #0,d1
0002B990 <AmiBlitz3.ab3@13767>    MOVE.l destpointer,a4
0002B996 <AmiBlitz3.ab3@13769>    CMPA.l destbufferend,A4
0002B99A <AmiBlitz3.ab3@13770>    BCC.w maineval__l2
0002B9A0 <AmiBlitz3.ab3@13772>    CMP.w #$2f0a,-2(a4)                                    ;bug is a move.l a2,-(a7) before (show temp calc)?
0002B9A4 <AmiBlitz3.ab3@13774>    BNE maineval__l2
0002B9A8 <AmiBlitz3.ab3@13778> BRA maineval__l1
0002B9AA <AmiBlitz3.ab3@13781>   MOVEQ.l #-$01,D1                                         ;do stackpar write
0002B9B2 <AmiBlitz3.ab3@13784>   MOVE.w #$0006,regnum                                     ;write a func par To stack
0002B9B8 <AmiBlitz3.ab3@13787>   MOVE.w thisstuse,-(A7)
0002B9C2 <AmiBlitz3.ab3@13788>   MOVE.w a2offset,thisstuse
0002B9C8 <AmiBlitz3.ab3@13789>   MOVE.w stackpar,-(A7)
0002B9CE <AmiBlitz3.ab3@13790>   MOVE.w D1,stackpar
0002B9D4 <AmiBlitz3.ab3@13791>   MOVE.w sbgot,-(A7)
0002B9DA <AmiBlitz3.ab3@13792>   CLR.w sbgot
0002B9DE <AmiBlitz3.ab3@13793>   MOVE.w unknown(PC),-(A7)
0002B9E4 <AmiBlitz3.ab3@13794>   MOVE.w D3,unknown
0002B9E6 <AmiBlitz3.ab3@13795>   MOVE.w D2,-(a7)
0002B9EC <AmiBlitz3.ab3@13796>   MOVE.w d2,mode
0002B9F0 <AmiBlitz3.ab3@13797>    BSR.w eval3
0002B9F2 <AmiBlitz3.ab3@13798>   MOVE.w (a7)+,d3
0002B9F6 <AmiBlitz3.ab3@13799>    BEQ.w maineval__noconv
0002B9FA <AmiBlitz3.ab3@13800>   MOVE.w unknown(PC),D1
0002B9FE <AmiBlitz3.ab3@13801>    BNE.w maineval__noconv
0002BA00 <AmiBlitz3.ab3@13802>   EXG.l D2,D3
0002BA02 <AmiBlitz3.ab3@13803>    MOVE.l a2,-(a7)
0002BA08 <AmiBlitz3.ab3@13804>    TST.b curtemplabel
0002BA0C <AmiBlitz3.ab3@13805>    BEQ maineval2__l10
0002BA12 <AmiBlitz3.ab3@13806>    MOVE.l asmbuff,a2
0002BA18 <AmiBlitz3.ab3@13807>    CMP.w #$c,$8(a2)
0002BA1C <AmiBlitz3.ab3@13808>    BEQ maineval2__l20
0002BA22 <AmiBlitz3.ab3@13809>    CMP.w #$d,$8(a2)
0002BA26 <AmiBlitz3.ab3@13810>    BEQ maineval2__l20
0002BA28 <AmiBlitz3.ab3@13813>   CMP.w d2,d3
0002BA2C <AmiBlitz3.ab3@13814>   BEQ maineval2__l20
0002BA30 <AmiBlitz3.ab3@13815>   BSR.w writeconvertcode
0002BA36 <AmiBlitz3.ab3@13816>   CLR.b doimmediate
0002BA38 <AmiBlitz3.ab3@13819>   MOVE.l (a7)+,a2
0002BA3E <AmiBlitz3.ab3@13822>   MOVE.w (A7)+,unknown
0002BA44 <AmiBlitz3.ab3@13823>   MOVE.w stackpar,D1
0002BA48 <AmiBlitz3.ab3@13824>    BEQ.w maineval__skipme
0002BA4C <AmiBlitz3.ab3@13825>    BMI.w maineval__skipme
0002BA52 <AmiBlitz3.ab3@13829>   MOVE.w regnum,D1
0002BA54 <AmiBlitz3.ab3@13830>   LSL.w #8,D1
0002BA56 <AmiBlitz3.ab3@13831>   LSL.w #1,D1
0002BA5A <AmiBlitz3.ab3@13832>   CMP.w #$7,D2
0002BA5E <AmiBlitz3.ab3@13833>    BNE.w maineval__hi1
0002BA66 <AmiBlitz3.ab3@13834>    CMP.b #2,optistring
0002BA6A <AmiBlitz3.ab3@13835>    BEQ maineval__hi1a
0002BA6C <AmiBlitz3.ab3@13836>   MOVE.w D1,-(A7)
0002BA72 <AmiBlitz3.ab3@13837>   OR.w getstlen,D1
0002BA76 <AmiBlitz3.ab3@13838>    BSR.w writeword
0002BA78 <AmiBlitz3.ab3@13839>   MOVE.w (A7)+,D1
0002BA7E <AmiBlitz3.ab3@13842>   ADDQ.w #2,a2offset                                        ;lib mode to stack
0002BA82 <AmiBlitz3.ab3@13846>   MOVE.w #$3f3c,d1
0002BA86 <AmiBlitz3.ab3@13847>    BSR.w writeword
0002BA88 <AmiBlitz3.ab3@13851>   MOVE.w d2,d1
0002BA8E <AmiBlitz3.ab3@13852>   MOVE.w d1,libmode
0002BA92 <AmiBlitz3.ab3@13853>    BSR.w writeword
0002BA96 <AmiBlitz3.ab3@13854>   CMP.w #$7,D2
0002BA9A <AmiBlitz3.ab3@13855>    BNE.w maineval__skipme
0002BAA0 <AmiBlitz3.ab3@13856>   MOVE.w putstlen,D1
0002BAA6 <AmiBlitz3.ab3@13857>   OR.w regnum,D1
0002BAAA <AmiBlitz3.ab3@13858>    BSR.w writeword
0002BAAE <AmiBlitz3.ab3@13861>    CMP.w #$7,D2
0002BAB2 <AmiBlitz3.ab3@13862>    BNE.w maineval__notst
0002BABA <AmiBlitz3.ab3@13873>    CMP.b #2,optistring
0002BABE <AmiBlitz3.ab3@13874>    BEQ maineval__skipme_l10
0002BAC4 <AmiBlitz3.ab3@13875>    ADDQ.w #4,a2offset                                      ;a length on da stack.....
0002BAC8 <AmiBlitz3.ab3@13876>    BSR.w sbtolong
0002BACC <AmiBlitz3.ab3@13877> BRA.w maineval__notst2
0002BAD4 <AmiBlitz3.ab3@13881>     CMP.w #6,regnum
0002BAD8 <AmiBlitz3.ab3@13882>     BEQ maineval__skipme_l10_l1
0002BADE <AmiBlitz3.ab3@13883>     TST.b funcparloop
0002BAE2 <AmiBlitz3.ab3@13884>     BEQ maineval__skipme_l10_l1
0002BAE8 <AmiBlitz3.ab3@13885>     MOVE.l #$48780000,d1
0002BAEC <AmiBlitz3.ab3@13886>     BSR writelong
0002BAF0 <AmiBlitz3.ab3@13889> BRA.w maineval__notst2
0002BAF6 <AmiBlitz3.ab3@13892>   ADDQ.w #2,a2offset
0002BAFA <AmiBlitz3.ab3@13893> BRA maineval__skipme
0002BB02 <AmiBlitz3.ab3@13896>   CMPI.w #$2,sbgot
0002BB06 <AmiBlitz3.ab3@13897>    BCS.w maineval__notst2                                         ;correct stack
0002BB0A <AmiBlitz3.ab3@13898>   MOVE.w ststfix(PC),D1
0002BB0E <AmiBlitz3.ab3@13899>    BSR.w writeword
0002BB14 <AmiBlitz3.ab3@13902>   MOVE.w (A7)+,sbgot
0002BB1A <AmiBlitz3.ab3@13903>   MOVE.w stackpar,D1
0002BB1E <AmiBlitz3.ab3@13904>    BPL.w maineval__skip
0002BB22 <AmiBlitz3.ab3@13905>    CMP.b #7,d2
0002BB26 <AmiBlitz3.ab3@13906>    BEQ maineval__notst2_l1
0002BB2C <AmiBlitz3.ab3@13907>   TST.b funcparloop
0002BB30 <AmiBlitz3.ab3@13908>   BEQ maineval__notst2_l1
0002BB34 <AmiBlitz3.ab3@13909>   CMP.b #5,d2
0002BB38 <AmiBlitz3.ab3@13910>   BNE maineval__notst2_skip
0002BB3E <AmiBlitz3.ab3@13911>   TST.b fpu
0002BB42 <AmiBlitz3.ab3@13912>   BEQ maineval__notst2_skip
0002BB48 <AmiBlitz3.ab3@13913>   MOVE.l #$f2066700,d1                                     ;fmove.s fp6,d6
0002BB4E <AmiBlitz3.ab3@13914>   JSR writelong
0002BB52 <AmiBlitz3.ab3@13917>   MOVE.w #$c4ff,d1                                         ;savetemp+regnum
0002BB58 <AmiBlitz3.ab3@13918>   ADD.w parnum,d1
0002BB5E <AmiBlitz3.ab3@13919>   JSR Atokejsr
0002BB64 <AmiBlitz3.ab3@13920>    TST.w dontwrite
0002BB68 <AmiBlitz3.ab3@13921>    BNE maineval__notst2_l1
0002BB6E <AmiBlitz3.ab3@13922>    MOVE.l data1start,d1
0002BB74 <AmiBlitz3.ab3@13923>    MOVE.l destpointer,a4
0002BB78 <AmiBlitz3.ab3@13924>    ADD.l d1,-4(a4)
0002BB7E <AmiBlitz3.ab3@13925>    MOVE.l destpointer,d1
0002BB80 <AmiBlitz3.ab3@13926>    SUBQ.l #4,d1
0002BB86 <AmiBlitz3.ab3@13927>    SUB.l destbufferstart,d1
0002BB88 <AmiBlitz3.ab3@13928>    MOVE.l d2,-(a7)
0002BB8A <AmiBlitz3.ab3@13929>    MOVE.l d1,d2
0002BB90 <AmiBlitz3.ab3@13930>    JSR addhunkoffset
0002BB92 <AmiBlitz3.ab3@13931>    MOVE.l (a7)+,d2
0002BB96 <AmiBlitz3.ab3@13932> BRA maineval__skip
0002BB9C <AmiBlitz3.ab3@13935>   ADDQ.w #2,a2offset
0002BBA2 <AmiBlitz3.ab3@13936>   MOVE.w pushd0wd,D1
0002BBA6 <AmiBlitz3.ab3@13937>   CMP.w #$3,D2                                             ;write parameter to stack
0002BBAA <AmiBlitz3.ab3@13938>    BCS.w maineval__ok
0002BBB0 <AmiBlitz3.ab3@13939>   ADDQ.w #2,a2offset
0002BBB6 <AmiBlitz3.ab3@13940>   TST.b fpu
0002BBBA <AmiBlitz3.ab3@13941>   BEQ maineval__notst2_nofpu
0002BBBE <AmiBlitz3.ab3@13942>   CMP.w #5,d2
0002BBC2 <AmiBlitz3.ab3@13943>   BNE maineval__notst2_nofpu
0002BBC4 <AmiBlitz3.ab3@13944>   MOVEQ #0,d1
0002BBCA <AmiBlitz3.ab3@13945>   MOVE.w regnum,d1
0002BBCC <AmiBlitz3.ab3@13946>   ASL.l #7,d1
0002BBD2 <AmiBlitz3.ab3@13947>   OR.l #$f2276400,d1
0002BBD6 <AmiBlitz3.ab3@13948>   BSR writelong
0002BBDA <AmiBlitz3.ab3@13949> BRA maineval__skip
0002BBE0 <AmiBlitz3.ab3@13952>   MOVE.w pushd0l,D1
0002BBE6 <AmiBlitz3.ab3@13955>    OR.w regnum,D1
0002BBEA <AmiBlitz3.ab3@13956>    BSR.w writeword                                         ;nat
0002BBF0 <AmiBlitz3.ab3@13959>   MOVE.w (A7)+,stackpar
0002BBF6 <AmiBlitz3.ab3@13960>   MOVE.w (A7)+,thisstuse
0002BBF8 <AmiBlitz3.ab3@13961> RTS
0002BBFA <AmiBlitz3.ab3@13964> thisstuse: Ds.w 1
0002BBFC <AmiBlitz3.ab3@13967> ststfix:   Dc.b $58,$4F                                    ;ADDQ.W  #4,A7
0002BBFE <AmiBlitz3.ab3@13968> pushut:    Dc.b $3F,$00                                    ;MOVE.W  D0,-(A7)
0002BC02 <AmiBlitz3.ab3@13973>   BSR.w eval4
0002BC0C <AmiBlitz3.ab3@13974>   SUBI.l #$12,forthsp
0002BC0E <AmiBlitz3.ab3@13975> RTS
0002BC10 <AmiBlitz3.ab3@13979>   MOVEQ.l #$01,D1
0002BC14 <AmiBlitz3.ab3@13981>       MOVEA.l precsp(PC),A1
0002BC16 <AmiBlitz3.ab3@13982>       MOVE.l A0,(A1)+
0002BC18 <AmiBlitz3.ab3@13983>       MOVE.w D1,(A1)+
0002BC1E <AmiBlitz3.ab3@13984>       MOVE.l A1,precsp
0002BC22 <AmiBlitz3.ab3@13985>    BSR.w calcloop
0002BC24 <AmiBlitz3.ab3@13986>   TST.w D1
0002BC28 <AmiBlitz3.ab3@13987>    BNE.w syntaxerr
0002BC2E <AmiBlitz3.ab3@13988>   SUBQ.l #6,precsp                                      ;pop the prec set up
0002BC30 <AmiBlitz3.ab3@13989> RTS
0002BC34 <AmiBlitz3.ab3@13994>   BSR.w JL_0_9C24
0002BC38 <AmiBlitz3.ab3@13997>   MOVEA.l precsp(PC),A1
0002BC3A <AmiBlitz3.ab3@13998>   CMP.w -(A1),D1
0002BC3E <AmiBlitz3.ab3@13999>    BHI.w JL_0_9B0A
0002BC40 <AmiBlitz3.ab3@14000> RTS
0002BC44 <AmiBlitz3.ab3@14005>   MOVEA.l precsp(PC),A1
0002BC46 <AmiBlitz3.ab3@14006>   MOVE.l A0,(A1)+
0002BC48 <AmiBlitz3.ab3@14007>   MOVE.w D1,(A1)+
0002BC4E <AmiBlitz3.ab3@14008>   MOVE.l A1,precsp
0002BC50 <AmiBlitz3.ab3@14009>   MOVE.w D2,-(A7)
0002BC56 <AmiBlitz3.ab3@14010>   ADDQ.w #1,regnum
0002BC5A <AmiBlitz3.ab3@14011>    BSR.w calcloop               ;constant optimizer
0002BC60 <AmiBlitz3.ab3@14012>   SUBQ.w #1,regnum
0002BC62 <AmiBlitz3.ab3@14013>   MOVE.w (A7)+,D3
0002BC66 <AmiBlitz3.ab3@14014>   MOVEM.l D1/A0,-(A7)
0002BC6A <AmiBlitz3.ab3@14015>    BEQ.w JL_0_9B2E
0002BC6E <AmiBlitz3.ab3@14016>    BSR.w JL_0_9770
0002BC72 <AmiBlitz3.ab3@14019>   BSR.w popprec
0002BC76 <AmiBlitz3.ab3@14020>   BSR.w writecode
0002BC7A <AmiBlitz3.ab3@14021>   MOVEA.l forthsp(PC),A0
0002BC7E <AmiBlitz3.ab3@14022>   MOVE.w -$2(A0),D1
0002BC82 <AmiBlitz3.ab3@14023>   OR.w -$14(A0),D1
0002BC86 <AmiBlitz3.ab3@14024>   MOVE.w D1,-$14(A0)
0002BC8A <AmiBlitz3.ab3@14025>    BNE.w JL_0_9C0E
0002BC90 <AmiBlitz3.ab3@14026>   MOVE.w dontwrite,D1
0002BC94 <AmiBlitz3.ab3@14027>    BNE.w JL_0_9C0E
0002BC98 <AmiBlitz3.ab3@14028>    MOVEA.l -$24(A0),A0
0002BDD4 <AmiBlitz3.ab3@14030>  !newcalc
0002BDD8 <AmiBlitz3.ab3@14031>    BEQ 'l10
0002BDDC <AmiBlitz3.ab3@14032>    MOVEA.l forthsp(PC),A0
0002BDE4 <AmiBlitz3.ab3@14033>    MOVE.w -$18(A0),lasta6
0002BDEC <AmiBlitz3.ab3@14034>    MOVE.l -$1C(A0),lasta6
0002BDF0 <AmiBlitz3.ab3@14035>    MOVEA.l -$24(A0),A0
0002BDF6 <AmiBlitz3.ab3@14036>    MOVE.l A0,destpointer
0002BDFC <AmiBlitz3.ab3@14037>    MOVEA.l _mathffpbase,A6
0002BE02 <AmiBlitz3.ab3@14038>    MOVEA.l ffplib,A1
0002BE06 <AmiBlitz3.ab3@14039> BRA cont1
0002BE0A <AmiBlitz3.ab3@14042>   MOVE.w #$2000,D1
0002BE10 <AmiBlitz3.ab3@14043>   OR.w regnum,D1
0002BE14 <AmiBlitz3.ab3@14044>    BSR.w writeword
0002BE16 <AmiBlitz3.ab3@14045>     MOVEQ #0,d1
0002BE1C <AmiBlitz3.ab3@14046>     MOVE.w regnum,D1
0002BE1E <AmiBlitz3.ab3@14047>     ASL.l #8,d1
0002BE20 <AmiBlitz3.ab3@14048>     ASL.l #2,d1
0002BE26 <AmiBlitz3.ab3@14049>     OR.l #$f2000000,d1
0002BE2A <AmiBlitz3.ab3@14050>     BSR writelong
0002BE2E <AmiBlitz3.ab3@14051>   MOVE.w #$4E75,D1
0002BE32 <AmiBlitz3.ab3@14052>    BSR.w writeword
0002BE3A <AmiBlitz3.ab3@14053>   MOVE.w -$18(A0),lasta6
0002BE42 <AmiBlitz3.ab3@14054>   MOVE.l -$1C(A0),lasta6
0002BE46 <AmiBlitz3.ab3@14055>   MOVEA.l -$24(A0),A0
0002BE4C <AmiBlitz3.ab3@14056>   MOVE.l A0,destpointer
0002BE50 <AmiBlitz3.ab3@14057>   MOVEM.l D2/A5,-(A7)
0002BE56 <AmiBlitz3.ab3@14058>   MOVEA.l _mathffpbase,A6
0002BE5C <AmiBlitz3.ab3@14059>   MOVEA.l ffplib,A1
0002BE60 <AmiBlitz3.ab3@14060>   MOVE.w $A(A1),D0
0002BE66 <AmiBlitz3.ab3@14061>   LEA _mathffpbase,A5
0002BE68 <AmiBlitz3.ab3@14062>   SUBA.w D0,A5
0002BE6E <AmiBlitz3.ab3@14063>   JSR Aclearcache                                          ;neg +
0002BE74 <AmiBlitz3.ab3@14064>   CLR.l load_var_addr
0002BE7A <AmiBlitz3.ab3@14065>   CLR.l imm_addr
0002BE80 <AmiBlitz3.ab3@14066>   TST.w dontwrite
0002BE84 <AmiBlitz3.ab3@14067>   BNE '1
0002BE86 <AmiBlitz3.ab3@14068>   JSR (A0)                                                 ;calc constant inline expression
0002BE8A <AmiBlitz3.ab3@14071>   MOVEM.l (A7)+,D2/A5
0002BE90 <AmiBlitz3.ab3@14074>   MOVE.b d2,isconstantvalue
0002BE96 <AmiBlitz3.ab3@14075>   MOVE.l d0,lastconstantvalue
0002BE9C <AmiBlitz3.ab3@14076>   MOVE.w regnum,D1
0002BE9E <AmiBlitz3.ab3@14077>   LSL.w #8,D1
0002BEA0 <AmiBlitz3.ab3@14078>   LSL.w #1,D1
0002BEA4 <AmiBlitz3.ab3@14079>   ORI.w #$203C,D1
0002BEA8 <AmiBlitz3.ab3@14080>   CMP.w #$3,D2
0002BEAC <AmiBlitz3.ab3@14081>    BCC.w JL_0_9BCE
0002BEB0 <AmiBlitz3.ab3@14082>   ORI.w #$1000,D1
0002BEB4 <AmiBlitz3.ab3@14083>    BSR.w writeword
0002BEB6 <AmiBlitz3.ab3@14084>   MOVE.w D0,D1
0002BEBA <AmiBlitz3.ab3@14085>    BSR.w writeword
0002BEBE <AmiBlitz3.ab3@14086> BRA.w JL_0_9BD8
0002BEC4 <AmiBlitz3.ab3@14090>   TST.b iee                                                ;fpu constant
0002BEC8 <AmiBlitz3.ab3@14091>   BEQ 'l10
0002BECC <AmiBlitz3.ab3@14092>   CMP.b #5,d2
0002BED0 <AmiBlitz3.ab3@14093>   BNE 'l10
0002BED2 <AmiBlitz3.ab3@14094>   MOVEQ #0,d1
0002BED8 <AmiBlitz3.ab3@14095>   MOVE.w regnum,D1
0002BEDA <AmiBlitz3.ab3@14096>   ASL.l #7,d1
0002BEE0 <AmiBlitz3.ab3@14097>   OR.l #$f23c5400,d1
0002BEE4 <AmiBlitz3.ab3@14098>   BSR writelong
0002BEE6 <AmiBlitz3.ab3@14099>   SUBQ.l #8,a7
0002BEEC <AmiBlitz3.ab3@14100>   fmove.d fp0,0(a7)
0002BEEE <AmiBlitz3.ab3@14101>   MOVE.l (a7)+,d1
0002BEF2 <AmiBlitz3.ab3@14102>   BSR writelong
0002BEF4 <AmiBlitz3.ab3@14103>   MOVE.l (a7)+,d1
0002BEF8 <AmiBlitz3.ab3@14104>   BSR writelong
0002BEFC <AmiBlitz3.ab3@14105> BRA JL_0_9BD8
0002BF00 <AmiBlitz3.ab3@14108>   BSR.w writeword
0002BF02 <AmiBlitz3.ab3@14109>   MOVE.l D0,D1
0002BF06 <AmiBlitz3.ab3@14110>   BSR.w writelong
0002BF0A <AmiBlitz3.ab3@14113>   MOVEA.l forthsp(PC),A0
0002BF0E <AmiBlitz3.ab3@14114>   MOVEA.l -$20(A0),A3
0002BF14 <AmiBlitz3.ab3@14115>   MOVEA.l hunkoffsetbase,A2
0002BF1A <AmiBlitz3.ab3@14116>   MOVE.l A3,hunkoffsetbase
0002BF20 <AmiBlitz3.ab3@14117>   MOVEA.l _execbase,A6
0002BF22 <AmiBlitz3.ab3@14120>   CMPA.l A3,A2
0002BF26 <AmiBlitz3.ab3@14121>   BEQ.w JL_0_9C0A
0002BF2C <AmiBlitz3.ab3@14122>   SUBQ.l #1,hunkoffsetcounter
0002BF2E <AmiBlitz3.ab3@14123>   MOVEA.l A2,A1
0002BF30 <AmiBlitz3.ab3@14124>   MOVEA.l (A2),A2
0002BF32 <AmiBlitz3.ab3@14125>   MOVEQ.l #$8,D0
0002BF38 <AmiBlitz3.ab3@14126>   MOVE.l mempool2,a0
0002BF3C <AmiBlitz3.ab3@14127>    JSR _FreePooled(A6)
0002BF40 <AmiBlitz3.ab3@14128> BRA.w JL_0_9BF0
0002BF44 <AmiBlitz3.ab3@14132>   MOVEA.l forthsp(PC),A0
0002BF48 <AmiBlitz3.ab3@14135>   LEA -$12(A0),A0
0002BF4E <AmiBlitz3.ab3@14136>   MOVE.l A0,forthsp
0002BF52 <AmiBlitz3.ab3@14137>   MOVEM.l (A7)+,D1/A0
0002BF56 <AmiBlitz3.ab3@14138>   BSR.w reget
0002BF5A <AmiBlitz3.ab3@14139> BRA.w JL_0_9AFE
0002BF5E <AmiBlitz3.ab3@14143>   BSR.w JL_0_A386
0002BF60 <AmiBlitz3.ab3@14144>   TST.w d0
0002BF64 <AmiBlitz3.ab3@14145>   BEQ JL_0_9C42
0002BF68 <AmiBlitz3.ab3@14146>   CMP.b #",",d0
0002BF6C <AmiBlitz3.ab3@14147>   BEQ JL_0_9C42
0002BF70 <AmiBlitz3.ab3@14148>   CMP.b #"@",d0                                            ;expandline @@
0002BF74 <AmiBlitz3.ab3@14149>   BEQ JL_0_9C42
0002BF7A <AmiBlitz3.ab3@14150>   LEA operators,A0
0002BF7C <AmiBlitz3.ab3@14153>    TST.w (A0)
0002BF80 <AmiBlitz3.ab3@14154>    BEQ.w JL_0_9C42
0002BF82 <AmiBlitz3.ab3@14155>   CMP.w (A0),D0
0002BF86 <AmiBlitz3.ab3@14156>    BEQ.w JL_0_9C46a
0002BF8A <AmiBlitz3.ab3@14157>   LEA $20(A0),A0
0002BF8E <AmiBlitz3.ab3@14158> BRA.w JL_0_9C2E
0002BF90 <AmiBlitz3.ab3@14162>   MOVEQ.l #$00,D1
0002BF92 <AmiBlitz3.ab3@14163> RTS
0002BF96 <AmiBlitz3.ab3@14167>   CMP.w #$3C,D0
0002BF9A <AmiBlitz3.ab3@14168>    BNE.w JL_0_9C70
0002BF9E <AmiBlitz3.ab3@14169>    BSR.w get1bytemain
0002BFA2 <AmiBlitz3.ab3@14170>   CMP.w #$3D,D0
0002BFA6 <AmiBlitz3.ab3@14171>    BNE.w JL_0_9C64
0002BFAC <AmiBlitz3.ab3@14172>   LEA ople,A0
0002BFB0 <AmiBlitz3.ab3@14173> BRA.w JL_0_9CCA
0002BFB4 <AmiBlitz3.ab3@14177>   CMP.w #$3E,D0
0002BFB8 <AmiBlitz3.ab3@14178>    BNE.w JL_0_9C96
0002BFBC <AmiBlitz3.ab3@14179> BRA.w JL_0_9CC4
0002BFC0 <AmiBlitz3.ab3@14183>   CMP.w #$3E,D0
0002BFC4 <AmiBlitz3.ab3@14184>    BNE.w JL_0_9C9E
0002BFC8 <AmiBlitz3.ab3@14185>    BSR.w get1bytemain
0002BFCC <AmiBlitz3.ab3@14186>   CMP.w #$3D,D0
0002BFD0 <AmiBlitz3.ab3@14187>    BNE.w JL_0_9C8E
0002BFD6 <AmiBlitz3.ab3@14188>   LEA opge,A0
0002BFDA <AmiBlitz3.ab3@14189> BRA.w JL_0_9CCA
0002BFDE <AmiBlitz3.ab3@14193>   CMP.w #$3C,D0
0002BFE2 <AmiBlitz3.ab3@14194>    BEQ.w JL_0_9CC4
0002BFEC <AmiBlitz3.ab3@14198>     MOVE.w oldqflag,instringon
0002BFF2 <AmiBlitz3.ab3@14199>     MOVEA.l lastsourcepos,A5
0002BFF6 <AmiBlitz3.ab3@14200> BRA.w JL_0_9CCA
0002BFFA <AmiBlitz3.ab3@14204>   CMP.w #$3D,D0
0002BFFE <AmiBlitz3.ab3@14205>    BNE.w JL_0_9CCA
0002C002 <AmiBlitz3.ab3@14206>    BSR.w get1bytemain
0002C006 <AmiBlitz3.ab3@14207>   CMP.w #$3E,D0
0002C00A <AmiBlitz3.ab3@14208>    BNE.w JL_0_9CBC
0002C010 <AmiBlitz3.ab3@14209>   LEA opge,A0
0002C014 <AmiBlitz3.ab3@14210> BRA.w JL_0_9CCA
0002C018 <AmiBlitz3.ab3@14214>   CMP.w #$3C,D0
0002C01C <AmiBlitz3.ab3@14215>   BNE.w JL_0_9C96
0002C022 <AmiBlitz3.ab3@14218>   LEA opne,A0
0002C026 <AmiBlitz3.ab3@14221>   MOVE.w $1E(A0),D1
0002C028 <AmiBlitz3.ab3@14222> RTS
0002C02A <AmiBlitz3.ab3@14229>   MOVE.w d2,d1
0002C02C <AmiBlitz3.ab3@14230>   SUBQ.w #1,D1
0002C030 <AmiBlitz3.ab3@14231>    BMI.w illoperr
0002C032 <AmiBlitz3.ab3@14232>   LSL.w #2,D1
0002C036 <AmiBlitz3.ab3@14233>   MOVE.l $2(A0,D1.W),D1
0002C03A <AmiBlitz3.ab3@14234>    BEQ.w illoperr
0002C03C <AmiBlitz3.ab3@14235>   MOVEA.l D1,A0
0002C03E <AmiBlitz3.ab3@14238> JMP (A0)
0002C042 <AmiBlitz3.ab3@14254>   MOVEA.l precsp(PC),A1
0002C048 <AmiBlitz3.ab3@14255>   CMPA.l #precstackf,A1
0002C04C <AmiBlitz3.ab3@14256>    BCC.w pserr
0002C04E <AmiBlitz3.ab3@14257>   MOVE.w -(A1),D1
0002C050 <AmiBlitz3.ab3@14258>   MOVEA.l -(A1),A0
0002C056 <AmiBlitz3.ab3@14259>   MOVE.l A1,precsp
0002C058 <AmiBlitz3.ab3@14260> RTS
0002C05C <AmiBlitz3.ab3@14263> precsp:      Dc.l precstack
0002C158 <AmiBlitz3.ab3@14264> precstack:   Ds.l 63                                       ;ds 6*32 org source   ;Lotsa Room?
0002C1DC <AmiBlitz3.ab3@14265>              Ds.l 33
0002C1DE <AmiBlitz3.ab3@14271> mseq:  SEQ D0
0002C1E0 <AmiBlitz3.ab3@14272> msne:    SNE D0
0002C1E2 <AmiBlitz3.ab3@14273> mslt:    SLT D0
0002C1E4 <AmiBlitz3.ab3@14274> msle:    SLE D0
0002C1E6 <AmiBlitz3.ab3@14275> msgt:    SGT D0
0002C1E8 <AmiBlitz3.ab3@14276> msge:    SGE D0
0002C1EA <AmiBlitz3.ab3@14278> cmp0:    CMP.b D0,D0
0002C1EC <AmiBlitz3.ab3@14279> cmp1:    CMP.w D0,D0
0002C1EE <AmiBlitz3.ab3@14280> cmp2:    CMP.l D0,D0
0002C1F2 <AmiBlitz3.ab3@14284>   MOVE.w cmp0(PC),D1
0002C1F6 <AmiBlitz3.ab3@14285> BRA.w doeqcmp2                                            ;writecompare
0002C1FA <AmiBlitz3.ab3@14289>   MOVE.w cmp0(PC),D1
0002C1FE <AmiBlitz3.ab3@14290> BRA.w donecmp2
0002C202 <AmiBlitz3.ab3@14294>   MOVE.w cmp0(PC),D1
0002C206 <AmiBlitz3.ab3@14295> BRA.w doltcmp2
0002C20A <AmiBlitz3.ab3@14299>   MOVE.w cmp0(PC),D1
0002C20E <AmiBlitz3.ab3@14300> BRA.w dolecmp2
0002C212 <AmiBlitz3.ab3@14304>   MOVE.w cmp0(PC),D1
0002C216 <AmiBlitz3.ab3@14305> BRA.w dogtcmp2
0002C21A <AmiBlitz3.ab3@14310>   MOVE.w cmp0(PC),D1
0002C21E <AmiBlitz3.ab3@14311> BRA.w dogecmp2
0002C222 <AmiBlitz3.ab3@14315>   MOVE.w cmp1(PC),D1
0002C226 <AmiBlitz3.ab3@14316> BRA.w doeqcmp2
0002C22A <AmiBlitz3.ab3@14320>   MOVE.w cmp1(PC),D1
0002C22E <AmiBlitz3.ab3@14321> BRA.w donecmp2
0002C232 <AmiBlitz3.ab3@14325>   MOVE.w cmp1(PC),D1
0002C236 <AmiBlitz3.ab3@14326> BRA.w doltcmp2
0002C23A <AmiBlitz3.ab3@14330>   MOVE.w cmp1(PC),D1
0002C23E <AmiBlitz3.ab3@14331> BRA.w dolecmp2
0002C242 <AmiBlitz3.ab3@14335>   MOVE.w cmp1(PC),D1
0002C246 <AmiBlitz3.ab3@14336> BRA.w dogtcmp2
0002C24A <AmiBlitz3.ab3@14341>   MOVE.w cmp1(PC),D1
0002C24E <AmiBlitz3.ab3@14342> BRA.w dogecmp2
0002C252 <AmiBlitz3.ab3@14346>   MOVE.w cmp2(PC),D1                                   ;writecomparelong
0002C256 <AmiBlitz3.ab3@14347> BRA doeqcmp2
0002C25A <AmiBlitz3.ab3@14350>   MOVE.w cmp2(PC),D1
0002C25E <AmiBlitz3.ab3@14351> BRA donecmp2
0002C262 <AmiBlitz3.ab3@14355>   MOVE.w cmp2(PC),D1
0002C266 <AmiBlitz3.ab3@14356> BRA.w doltcmp2
0002C26A <AmiBlitz3.ab3@14360>   MOVE.w cmp2(PC),D1
0002C26E <AmiBlitz3.ab3@14361> BRA.w dolecmp2
0002C272 <AmiBlitz3.ab3@14365>   MOVE.w cmp2(PC),D1
0002C276 <AmiBlitz3.ab3@14366> BRA.w dogtcmp2
0002C27A <AmiBlitz3.ab3@14370>   MOVE.w cmp2(PC),D1
0002C27E <AmiBlitz3.ab3@14371> BRA.w dogecmp2
0002C280 <AmiBlitz3.ab3@14374> cfregat:  Ds.w 1
0002C286 <AmiBlitz3.ab3@14378>   MOVE.w D1,libjsr+2
0002C28A <AmiBlitz3.ab3@14379>    BSR.w JL_0_AD40
0002C28C <AmiBlitz3.ab3@14380>   MOVE.l D4,D1
0002C290 <AmiBlitz3.ab3@14381>    BSR.w JL_0_AD38
0002C294 <AmiBlitz3.ab3@14382>   MOVE.w #$C900,D1
0002C298 <AmiBlitz3.ab3@14383>    BSR.w Atokejsr
0002C29C <AmiBlitz3.ab3@14384>    BSR.w JL_0_A352
0002C2A2 <AmiBlitz3.ab3@14385>   MOVE.l libjsr,D1
0002C2A6 <AmiBlitz3.ab3@14386>    BSR.w writelong
0002C2B0 <AmiBlitz3.ab3@14387>   MOVE.w regnum,cfregat
0002C2B6 <AmiBlitz3.ab3@14388>   CLR.w regnum
0002C2B8 <AmiBlitz3.ab3@14389> RTS
0002C2C2 <AmiBlitz3.ab3@14393>   MOVE.w cfregat,regnum
0002C2C6 <AmiBlitz3.ab3@14394>    BSR.w JL_0_A36E
0002C2C8 <AmiBlitz3.ab3@14395>   MOVE.l D5,D1
0002C2CC <AmiBlitz3.ab3@14396> BRA.w JL_0_AD38
0002C2CE <AmiBlitz3.ab3@14400>    MOVEQ.l #-$2A,D1
0002C2D4 <AmiBlitz3.ab3@14401>    TST.b fpu
0002C2D8 <AmiBlitz3.ab3@14402>    BEQ do_equal_float__nofpu
0002C2DA <AmiBlitz3.ab3@14403>    MOVEQ #0,d1
0002C2E0 <AmiBlitz3.ab3@14404>    MOVE.w regnum,d1
0002C2E2 <AmiBlitz3.ab3@14405>    MOVE.l d1,d2
0002C2E4 <AmiBlitz3.ab3@14406>    ASL.l #7,d1
0002C2E6 <AmiBlitz3.ab3@14407>    ADDQ  #1,d2
0002C2E8 <AmiBlitz3.ab3@14408>    ASL.l #8,d2
0002C2EA <AmiBlitz3.ab3@14409>    ASL.l #2,d2
0002C2EC <AmiBlitz3.ab3@14410>    OR.l d2,d1
0002C2F2 <AmiBlitz3.ab3@14411>    OR.l #$f2000038,d1
0002C2F8 <AmiBlitz3.ab3@14412>    JSR writelong
0002C2FC <AmiBlitz3.ab3@14413>    MOVE.w #$f240,d1
0002C302 <AmiBlitz3.ab3@14414>    OR.w regnum,d1
0002C306 <AmiBlitz3.ab3@14415>    BSR writeword
0002C308 <AmiBlitz3.ab3@14416>    MOVEQ.l #1,d2
0002C30C <AmiBlitz3.ab3@14417>    MOVE.w #1,d1                                            ;fpu comp fseq
0002C310 <AmiBlitz3.ab3@14418>    BSR writeword
0002C312 <AmiBlitz3.ab3@14419> RTS
0002C316 <AmiBlitz3.ab3@14422>    BSR.w docflib
0002C31A <AmiBlitz3.ab3@14423>    BSR.w doeqcmp
0002C31E <AmiBlitz3.ab3@14424> BRA.w docflib2
0002C320 <AmiBlitz3.ab3@14428>   MOVEQ.l #-$2A,D1
0002C326 <AmiBlitz3.ab3@14429>   TST.b fpu
0002C32A <AmiBlitz3.ab3@14430>    BEQ do_not_equal_float__nofpu
0002C32C <AmiBlitz3.ab3@14431>    MOVEQ #0,d1
0002C332 <AmiBlitz3.ab3@14432>    MOVE.w regnum,d1
0002C334 <AmiBlitz3.ab3@14433>    MOVE.l d1,d2
0002C336 <AmiBlitz3.ab3@14434>    ASL.l #7,d1
0002C338 <AmiBlitz3.ab3@14435>    ADDQ  #1,d2
0002C33A <AmiBlitz3.ab3@14436>    ASL.l #8,d2
0002C33C <AmiBlitz3.ab3@14437>    ASL.l #2,d2
0002C33E <AmiBlitz3.ab3@14438>    OR.l d2,d1
0002C344 <AmiBlitz3.ab3@14439>    OR.l #$f2000038,d1
0002C34A <AmiBlitz3.ab3@14440>    JSR writelong
0002C34E <AmiBlitz3.ab3@14441>    MOVE.w #$f240,d1
0002C354 <AmiBlitz3.ab3@14442>    OR.w regnum,d1
0002C358 <AmiBlitz3.ab3@14443>    BSR writeword
0002C35E <AmiBlitz3.ab3@14444>    MOVE.l #1,d2
0002C362 <AmiBlitz3.ab3@14445>    MOVE.w #$e,d1                                           ;fpu comp fsne
0002C366 <AmiBlitz3.ab3@14446>    BSR writeword
0002C368 <AmiBlitz3.ab3@14447> RTS
0002C36C <AmiBlitz3.ab3@14450>    BSR.w docflib
0002C370 <AmiBlitz3.ab3@14451>    BSR.w donecmp
0002C374 <AmiBlitz3.ab3@14452> BRA.w docflib2
0002C376 <AmiBlitz3.ab3@14456>   MOVEQ.l #-$2A,D1
0002C37C <AmiBlitz3.ab3@14457>     TST.b fpu
0002C380 <AmiBlitz3.ab3@14458>    BEQ do_littler_float__nofpu
0002C382 <AmiBlitz3.ab3@14459>    MOVEQ #0,d1
0002C388 <AmiBlitz3.ab3@14460>    MOVE.w regnum,d1
0002C38A <AmiBlitz3.ab3@14461>    MOVE.l d1,d2
0002C38C <AmiBlitz3.ab3@14462>    ASL.l #7,d1
0002C38E <AmiBlitz3.ab3@14463>    ADDQ  #1,d2
0002C390 <AmiBlitz3.ab3@14464>    ASL.l #8,d2
0002C392 <AmiBlitz3.ab3@14465>    ASL.l #2,d2
0002C394 <AmiBlitz3.ab3@14466>    OR.l d2,d1
0002C39A <AmiBlitz3.ab3@14467>    OR.l #$f2000038,d1
0002C3A0 <AmiBlitz3.ab3@14468>    JSR writelong
0002C3A4 <AmiBlitz3.ab3@14469>    MOVE.w #$f240,d1
0002C3AA <AmiBlitz3.ab3@14470>    OR.w regnum,d1
0002C3AE <AmiBlitz3.ab3@14471>    BSR writeword
0002C3B4 <AmiBlitz3.ab3@14472>    MOVE.l #$1,d2
0002C3B8 <AmiBlitz3.ab3@14473>    MOVE.w #$14,d1                                          ;fpu comp fslt
0002C3BC <AmiBlitz3.ab3@14474>    BSR writeword
0002C3BE <AmiBlitz3.ab3@14475> RTS
0002C3C2 <AmiBlitz3.ab3@14478>    BSR.w docflib
0002C3C6 <AmiBlitz3.ab3@14479>    BSR.w doltcmp
0002C3CA <AmiBlitz3.ab3@14480> BRA.w docflib2
0002C3CC <AmiBlitz3.ab3@14484>   MOVEQ.l #-$2A,D1
0002C3D2 <AmiBlitz3.ab3@14485>   TST.b fpu
0002C3D6 <AmiBlitz3.ab3@14486>    BEQ do_littler_equal_float__nofpu
0002C3D8 <AmiBlitz3.ab3@14487>    MOVEQ #0,d1
0002C3DE <AmiBlitz3.ab3@14488>    MOVE.w regnum,d1
0002C3E0 <AmiBlitz3.ab3@14489>    MOVE.l d1,d2
0002C3E2 <AmiBlitz3.ab3@14490>    ASL.l #7,d1
0002C3E4 <AmiBlitz3.ab3@14491>    ADDQ  #1,d2
0002C3E6 <AmiBlitz3.ab3@14492>    ASL.l #8,d2
0002C3E8 <AmiBlitz3.ab3@14493>    ASL.l #2,d2
0002C3EA <AmiBlitz3.ab3@14494>    OR.l d2,d1
0002C3F0 <AmiBlitz3.ab3@14495>    OR.l #$f2000038,d1
0002C3F6 <AmiBlitz3.ab3@14496>    JSR writelong
0002C3FA <AmiBlitz3.ab3@14497>    MOVE.w #$f240,d1
0002C400 <AmiBlitz3.ab3@14498>    OR.w regnum,d1
0002C404 <AmiBlitz3.ab3@14499>    BSR writeword
0002C40A <AmiBlitz3.ab3@14500>    MOVE.l #1,d2
0002C40E <AmiBlitz3.ab3@14501>    MOVE.w #$15,d1                                          ;fpu comp fsle
0002C412 <AmiBlitz3.ab3@14502>    BSR writeword
0002C414 <AmiBlitz3.ab3@14503> RTS
0002C418 <AmiBlitz3.ab3@14506>    BSR.w docflib
0002C41C <AmiBlitz3.ab3@14507>    BSR.w dolecmp
0002C420 <AmiBlitz3.ab3@14508> BRA.w docflib2
0002C422 <AmiBlitz3.ab3@14512>   MOVEQ.l #-$2A,D1
0002C428 <AmiBlitz3.ab3@14513>    TST.b fpu
0002C42C <AmiBlitz3.ab3@14514>    BEQ do_greater_float__nofpu
0002C42E <AmiBlitz3.ab3@14515>     MOVEQ #0,d1
0002C434 <AmiBlitz3.ab3@14516>    MOVE.w regnum,d1
0002C436 <AmiBlitz3.ab3@14517>    MOVE.l d1,d2
0002C438 <AmiBlitz3.ab3@14518>    ASL.l #7,d1
0002C43A <AmiBlitz3.ab3@14519>    ADDQ  #1,d2
0002C43C <AmiBlitz3.ab3@14520>    ASL.l #8,d2
0002C43E <AmiBlitz3.ab3@14521>    ASL.l #2,d2
0002C440 <AmiBlitz3.ab3@14522>    OR.l d2,d1
0002C446 <AmiBlitz3.ab3@14523>    OR.l #$f2000038,d1
0002C44C <AmiBlitz3.ab3@14524>    JSR writelong
0002C450 <AmiBlitz3.ab3@14525>    MOVE.w #$f240,d1
0002C456 <AmiBlitz3.ab3@14526>    OR.w regnum,d1
0002C45A <AmiBlitz3.ab3@14527>    BSR writeword
0002C460 <AmiBlitz3.ab3@14528>    MOVE.l #1,d2
0002C464 <AmiBlitz3.ab3@14529>    MOVE.w #$12,d1                                          ;fpu comp fsgt
0002C468 <AmiBlitz3.ab3@14530>    BSR writeword
0002C46A <AmiBlitz3.ab3@14531> RTS
0002C46E <AmiBlitz3.ab3@14534>    BSR.w docflib
0002C472 <AmiBlitz3.ab3@14535>    BSR.w dogtcmp
0002C476 <AmiBlitz3.ab3@14536> BRA.w docflib2
0002C478 <AmiBlitz3.ab3@14540>   MOVEQ.l #-$2A,D1
0002C47E <AmiBlitz3.ab3@14541>  TST.b fpu
0002C482 <AmiBlitz3.ab3@14542>    BEQ do_greater_equal_float__nofpu
0002C484 <AmiBlitz3.ab3@14543>    MOVEQ #0,d1
0002C48A <AmiBlitz3.ab3@14544>    MOVE.w regnum,d1
0002C48C <AmiBlitz3.ab3@14545>    MOVE.l d1,d2
0002C48E <AmiBlitz3.ab3@14546>    ASL.l #7,d1
0002C490 <AmiBlitz3.ab3@14547>    ADDQ  #1,d2
0002C492 <AmiBlitz3.ab3@14548>    ASL.l #8,d2
0002C494 <AmiBlitz3.ab3@14549>    ASL.l #2,d2
0002C496 <AmiBlitz3.ab3@14550>    OR.l d2,d1
0002C49C <AmiBlitz3.ab3@14551>    OR.l #$f2000038,d1
0002C4A2 <AmiBlitz3.ab3@14552>    JSR writelong
0002C4A6 <AmiBlitz3.ab3@14553>    MOVE.w #$f240,d1
0002C4AC <AmiBlitz3.ab3@14554>    OR.w regnum,d1
0002C4B0 <AmiBlitz3.ab3@14555>    BSR writeword
0002C4B6 <AmiBlitz3.ab3@14556>    MOVE.l #1,d2
0002C4BA <AmiBlitz3.ab3@14557>    MOVE.w #$13,d1                                          ;fpu comp fsge
0002C4BE <AmiBlitz3.ab3@14558>    BSR writeword
0002C4C0 <AmiBlitz3.ab3@14559> RTS
0002C4C4 <AmiBlitz3.ab3@14562>    BSR.w docflib
0002C4C8 <AmiBlitz3.ab3@14563>    BSR.w dogecmp
0002C4CC <AmiBlitz3.ab3@14564> BRA.w docflib2
0002C4D2 <AmiBlitz3.ab3@14569>   MOVE.l #$CE00,D1
0002C4D8 <AmiBlitz3.ab3@14570>    MOVE.l d1,lastinstruction
0002C4DC <AmiBlitz3.ab3@14571>    BSR.w Atokejsr
0002C4E0 <AmiBlitz3.ab3@14572> BRA.w doeqcmp
0002C4E6 <AmiBlitz3.ab3@14576>   MOVE.l #$CE00,D1
0002C4EC <AmiBlitz3.ab3@14577>    MOVE.l d1,lastinstruction
0002C4F0 <AmiBlitz3.ab3@14578>    BSR.w Atokejsr
0002C4F4 <AmiBlitz3.ab3@14579> BRA.w donecmp
0002C4FA <AmiBlitz3.ab3@14583>   MOVE.l #$CE00,D1
0002C500 <AmiBlitz3.ab3@14584>    MOVE.l d1,lastinstruction
0002C504 <AmiBlitz3.ab3@14585>    BSR.w Atokejsr
0002C508 <AmiBlitz3.ab3@14586> BRA.w doltcmp
0002C50E <AmiBlitz3.ab3@14590>   MOVE.l #$CE00,D1
0002C514 <AmiBlitz3.ab3@14591>    MOVE.l d1,lastinstruction
0002C518 <AmiBlitz3.ab3@14592>    BSR.w Atokejsr
0002C51C <AmiBlitz3.ab3@14593> BRA.w dolecmp
0002C522 <AmiBlitz3.ab3@14597>   MOVE.l #$CE00,D1
0002C528 <AmiBlitz3.ab3@14598>    MOVE.l d1,lastinstruction
0002C52C <AmiBlitz3.ab3@14599>    BSR.w Atokejsr
0002C530 <AmiBlitz3.ab3@14600> BRA.w dogtcmp
0002C536 <AmiBlitz3.ab3@14604>   MOVE.l #$CE00,D1
0002C53C <AmiBlitz3.ab3@14605>    MOVE.l d1,lastinstruction
0002C540 <AmiBlitz3.ab3@14606>    BSR.w Atokejsr
0002C544 <AmiBlitz3.ab3@14607> BRA.w dogecmp
0002C54A <AmiBlitz3.ab3@14612>   TST.b fast                                               ;compare
0002C54E <AmiBlitz3.ab3@14613>   BEQ cmpit__org
0002C554 <AmiBlitz3.ab3@14617>   MOVE.l destpointer,a0
0002C55A <AmiBlitz3.ab3@14618>   SUB.l imm_addr,a0
0002C560 <AmiBlitz3.ab3@14619>   CMP.l #6,a0
0002C564 <AmiBlitz3.ab3@14620>   BNE cmpit__l11
0002C56A <AmiBlitz3.ab3@14621>   MOVE.l imm_addr,a0
0002C572 <AmiBlitz3.ab3@14622>   CMP.w #$223c,imm_addr
0002C576 <AmiBlitz3.ab3@14623>   BNE cmpit__org
0002C57C <AmiBlitz3.ab3@14624>   ADD.w #$8e80,-6(a4)
0002C582 <AmiBlitz3.ab3@14627>   CLR.l imm_addr
0002C584 <AmiBlitz3.ab3@14628> RTS
0002C58A <AmiBlitz3.ab3@14631>   CMP.l #4,a0
0002C58E <AmiBlitz3.ab3@14632>   BNE cmpit__l10
0002C592 <AmiBlitz3.ab3@14633>   CMP.b #2,d3
0002C596 <AmiBlitz3.ab3@14634>   BNE cmpit__l11b
0002C59C <AmiBlitz3.ab3@14635>   ADD.w #$7e40,-4(a4)
0002C59E <AmiBlitz3.ab3@14636> RTS
0002C5A4 <AmiBlitz3.ab3@14639>  ADD.w #$7e00,-4(a4)
0002C5A6 <AmiBlitz3.ab3@14640> RTS
0002C5AC <AmiBlitz3.ab3@14643>    MOVE.l destpointer,a0
0002C5B2 <AmiBlitz3.ab3@14644>    SUB.l load_var_addr,a0
0002C5B6 <AmiBlitz3.ab3@14645>    CMP.w #4,a0
0002C5BA <AmiBlitz3.ab3@14646>    BNE cmpit__org
0002C5BE <AmiBlitz3.ab3@14647>    CMP.b #3,d3
0002C5C2 <AmiBlitz3.ab3@14648>    BCS cmpit__lv1
0002C5C8 <AmiBlitz3.ab3@14649>    CLR.l load_var_addr
0002C5CE <AmiBlitz3.ab3@14650>    ADD.w #$9080-$200,-4(a4)
0002C5D0 <AmiBlitz3.ab3@14651> RTS
0002C5D4 <AmiBlitz3.ab3@14654>   CMP.b #2,d3
0002C5D8 <AmiBlitz3.ab3@14655>    BNE cmpit__org
0002C5DE <AmiBlitz3.ab3@14656>    CLR.l load_var_addr
0002C5E4 <AmiBlitz3.ab3@14657>    ADD.w #$8040-$200,-4(a4)
0002C5E6 <AmiBlitz3.ab3@14658> RTS
0002C5EC <AmiBlitz3.ab3@14661>   MOVE.w regnum,D3
0002C5EE <AmiBlitz3.ab3@14662>   OR.w D3,D1
0002C5F0 <AmiBlitz3.ab3@14663>   LSL.w #8,D3
0002C5F2 <AmiBlitz3.ab3@14664>   LSL.w #1,D3
0002C5F4 <AmiBlitz3.ab3@14665>   OR.w D3,D1
0002C5F6 <AmiBlitz3.ab3@14666>   ADDQ.w #1,D1
0002C5FA <AmiBlitz3.ab3@14667> BRA.w writeword
0002C5FE <AmiBlitz3.ab3@14671>    BSR.w cmpit
0002C602 <AmiBlitz3.ab3@14674>    MOVE.w mseq(PC),D1
0002C606 <AmiBlitz3.ab3@14675> BRA.w cpoke
0002C60A <AmiBlitz3.ab3@14679>   BSR.w cmpit
0002C60E <AmiBlitz3.ab3@14682>   MOVE.w msne(PC),D1
0002C612 <AmiBlitz3.ab3@14683> BRA.w cpoke
0002C616 <AmiBlitz3.ab3@14687>   BSR.w cmpit
0002C61A <AmiBlitz3.ab3@14690>    MOVE.w mslt(PC),D1
0002C61E <AmiBlitz3.ab3@14691> BRA.w cpoke
0002C622 <AmiBlitz3.ab3@14695>    BSR.w cmpit
0002C626 <AmiBlitz3.ab3@14698>    MOVE.w msle(PC),D1
0002C62A <AmiBlitz3.ab3@14699> BRA.w cpoke
0002C62E <AmiBlitz3.ab3@14703>    BSR.w cmpit
0002C632 <AmiBlitz3.ab3@14706>    MOVE.w msgt(PC),D1
0002C636 <AmiBlitz3.ab3@14707> BRA.w cpoke
0002C63A <AmiBlitz3.ab3@14711>   BSR.w cmpit
0002C63E <AmiBlitz3.ab3@14714>    MOVE.w msge(PC),D1
0002C644 <AmiBlitz3.ab3@14717>    OR.w regnum,D1
0002C648 <AmiBlitz3.ab3@14718>    CMP.w #5,d2
0002C64C <AmiBlitz3.ab3@14719>    BNE cpoke__nod0
0002C650 <AmiBlitz3.ab3@14720>    CMP.w #5,d3
0002C654 <AmiBlitz3.ab3@14721>    BNE cpoke__nod0
0002C656 <AmiBlitz3.ab3@14722>    MOVE.l d1,-(a7)
0002C65C <AmiBlitz3.ab3@14723>    MOVE.l #$44004a00,d1                                    ;68k neg.b:tst.b
0002C660 <AmiBlitz3.ab3@14724>    BSR writelong
0002C662 <AmiBlitz3.ab3@14725>    MOVE.l (a7)+,d1
0002C666 <AmiBlitz3.ab3@14728>    BSR.w writeword                                         ;writeseq
0002C668 <AmiBlitz3.ab3@14729>    MOVEQ.l #1,d2
0002C66E <AmiBlitz3.ab3@14730>    MOVE.l lasttoken,d1
0002C674 <AmiBlitz3.ab3@14731>     TST.b fast
0002C678 <AmiBlitz3.ab3@14732>     BEQ.s cpoke__l11
0002C67E <AmiBlitz3.ab3@14733>    CMP.l #$800b,d1
0002C682 <AmiBlitz3.ab3@14734>    BEQ cpoke__l10
0002C686 <AmiBlitz3.ab3@14737>   MOVE.w #$4880,D1                                         ;ext.w D regat
0002C68C <AmiBlitz3.ab3@14738>   OR.w regnum,D1
0002C690 <AmiBlitz3.ab3@14739>    BSR.w writeword                                         ;writeext.w
0002C692 <AmiBlitz3.ab3@14740>   MOVEQ.l #$02,D2                                          ;type now WORD!
0002C694 <AmiBlitz3.ab3@14743> RTS
0002C698 <AmiBlitz3.ab3@14748>   MOVE.w #$D040,D1
0002C69A <AmiBlitz3.ab3@14749>   MOVEQ.l #$02,D2                                          ;writeaddword   ;now a word
0002C69E <AmiBlitz3.ab3@14750> BRA.w doplus2
0002C6A2 <AmiBlitz3.ab3@14754>   MOVE.w #$D040,D1
0002C6A4 <AmiBlitz3.ab3@14755>   MOVEQ.l #$03,D2                                          ;now a long
0002C6A8 <AmiBlitz3.ab3@14756>    BSR.w doplus2
0002C6AC <AmiBlitz3.ab3@14757> BRA.w convert_word_to_long
0002C6B0 <AmiBlitz3.ab3@14761>   MOVE.w #$D080,D1                                         ;writeaddlong
0002C6B2 <AmiBlitz3.ab3@14764>   MOVE.w d1,a1
0002C6B8 <AmiBlitz3.ab3@14765>   TST.b fast
0002C6BC <AmiBlitz3.ab3@14766>   BEQ doplus2__l10
0002C6BE <AmiBlitz3.ab3@14770>   ASR.w #8,d1
0002C6C2 <AmiBlitz3.ab3@14771>   CMP.b #$90,d1
0002C6C6 <AmiBlitz3.ab3@14772>   BEQ doplus2__sub1
0002C6CA <AmiBlitz3.ab3@14773>   CMP.b #$d0,d1
0002C6CE <AmiBlitz3.ab3@14774>   BNE doplus2__l10
0002C6D2 <AmiBlitz3.ab3@14775>   CMP.b #3,d3
0002C6D6 <AmiBlitz3.ab3@14776>   BCS doplus2__lq10
0002C6DC <AmiBlitz3.ab3@14777>   TST.b quickadd
0002C6E2 <AmiBlitz3.ab3@14781>    MOVE.l destpointer,a0
0002C6E8 <AmiBlitz3.ab3@14782>    CLR.b quickadd
0002C6EE <AmiBlitz3.ab3@14783>    CLR.l load_var_addr
0002C6F4 <AmiBlitz3.ab3@14784>    SUB.l imm_addr,a0
0002C6F8 <AmiBlitz3.ab3@14785>    CMP.w #6,a0
0002C6FC <AmiBlitz3.ab3@14786>    BEQ doplus2__li10
0002C700 <AmiBlitz3.ab3@14787>    CMP.w #4,a0
0002C704 <AmiBlitz3.ab3@14788>    BNE.s doplus2__li1
0002C70A <AmiBlitz3.ab3@14789>    CLR.l imm_addr
0002C710 <AmiBlitz3.ab3@14790>    ADD.w #$a040-$200,-4(a4)
0002C712 <AmiBlitz3.ab3@14791> RTS
0002C714 <AmiBlitz3.ab3@14794>    MOVE.l a4,a0
0002C71A <AmiBlitz3.ab3@14795>    SUB.l load_var_addr,a0
0002C720 <AmiBlitz3.ab3@14796>    CMP.l #$a,a0
0002C724 <AmiBlitz3.ab3@14797>    BNE doplus2__l10e
0002C72A <AmiBlitz3.ab3@14798>    CLR.l load_var_addr
0002C72E <AmiBlitz3.ab3@14799>    MOVE.w -$8(a4),d1
0002C734 <AmiBlitz3.ab3@14800>    MOVE.l -$4(a4),-$8(a4)
0002C738 <AmiBlitz3.ab3@14801>    MOVE.w d1,-$4(a4)
0002C73E <AmiBlitz3.ab3@14802>    SUB.w #$1980,-$a(a4)
0002C744 <AmiBlitz3.ab3@14803>    SUBQ.l #2,destpointer
0002C746 <AmiBlitz3.ab3@14804> RTS
0002C74C <AmiBlitz3.ab3@14807>   CLR.b quickadd
0002C750 <AmiBlitz3.ab3@14808> BRA doplus2__l10
0002C756 <AmiBlitz3.ab3@14811>    CLR.l imm_addr
0002C75A <AmiBlitz3.ab3@14812>    TST.l -4(a4)                                            ;skip If ADD.l #0,dx
0002C75E <AmiBlitz3.ab3@14813>    BNE doplus2__doit
0002C764 <AmiBlitz3.ab3@14814>    SUBQ.l #6,destpointer
0002C766 <AmiBlitz3.ab3@14815> RTS
0002C76C <AmiBlitz3.ab3@14818>    ADD.w #$b080-$200,-6(a4)
0002C76E <AmiBlitz3.ab3@14819> RTS
0002C774 <AmiBlitz3.ab3@14822>    MOVE.l destpointer,a0
0002C77A <AmiBlitz3.ab3@14823>    SUB.l load_var_addr,a0
0002C77E <AmiBlitz3.ab3@14824>    CMP.w #4,a0
0002C782 <AmiBlitz3.ab3@14825>    BNE doplus2__l10
0002C786 <AmiBlitz3.ab3@14826>    CMP.b #3,d3
0002C78A <AmiBlitz3.ab3@14827>    BNE doplus2__lv1
0002C790 <AmiBlitz3.ab3@14828>    CLR.l load_var_addr
0002C796 <AmiBlitz3.ab3@14829>    ADD.w #$b080-$200,-4(a4)
0002C798 <AmiBlitz3.ab3@14830> RTS
0002C79C <AmiBlitz3.ab3@14833>   CMP.b #2,d3
0002C7A0 <AmiBlitz3.ab3@14834>   BNE doplus2__l10
0002C7A6 <AmiBlitz3.ab3@14835>   CLR.l load_var_addr
0002C7AC <AmiBlitz3.ab3@14836>   ADD.w #$a040-$200,-4(a4)
0002C7AE <AmiBlitz3.ab3@14837> RTS
0002C7B4 <AmiBlitz3.ab3@14840>   MOVE.w regnum,D3
0002C7B6 <AmiBlitz3.ab3@14841>   MOVE.w a1,d1
0002C7B8 <AmiBlitz3.ab3@14842>   OR.w D3,D1
0002C7BA <AmiBlitz3.ab3@14843>   ADDQ.w #1,D1
0002C7BC <AmiBlitz3.ab3@14844>   LSL.w #8,D3
0002C7BE <AmiBlitz3.ab3@14845>   LSL.w #1,D3
0002C7C0 <AmiBlitz3.ab3@14846>   OR.w D3,D1
0002C7C4 <AmiBlitz3.ab3@14847> BRA.w writeword
0002C7C8 <AmiBlitz3.ab3@14850>    CMP.b #3,d3
0002C7CC <AmiBlitz3.ab3@14851>    BCS doplus2__sub1_lq10
0002C7D2 <AmiBlitz3.ab3@14852>    TST.b quickadd
0002C7D8 <AmiBlitz3.ab3@14856>    MOVE.l destpointer,a0
0002C7DE <AmiBlitz3.ab3@14857>    CLR.b quickadd
0002C7E4 <AmiBlitz3.ab3@14858>    CLR.l load_var_addr
0002C7EA <AmiBlitz3.ab3@14859>    SUB.l imm_addr,a0
0002C7EE <AmiBlitz3.ab3@14860>    CMP.w #6,a0
0002C7F2 <AmiBlitz3.ab3@14861>    BEQ doplus2__sub1_li10
0002C7F6 <AmiBlitz3.ab3@14862>    CMP.w #4,a0
0002C7FA <AmiBlitz3.ab3@14863>    BNE.s doplus2__sub1_li1
0002C800 <AmiBlitz3.ab3@14864>    CLR.l imm_addr
0002C806 <AmiBlitz3.ab3@14865>    ADD.w #$6040-$200,-4(a4)
0002C808 <AmiBlitz3.ab3@14866> RTS
0002C80A <AmiBlitz3.ab3@14869>    MOVE.l a4,a0
0002C810 <AmiBlitz3.ab3@14870>     SUB.l load_var_addr,a0
0002C816 <AmiBlitz3.ab3@14871>     CMP.l #$a,a0
0002C81A <AmiBlitz3.ab3@14872>     BNE doplus2__sub1_l10e
0002C820 <AmiBlitz3.ab3@14873>    CLR.l load_var_addr
0002C824 <AmiBlitz3.ab3@14874>    MOVE.w -$8(a4),d1
0002C82A <AmiBlitz3.ab3@14875>    MOVE.l -$4(a4),-$8(a4)
0002C82E <AmiBlitz3.ab3@14876>    MOVE.w d1,-$4(a4)
0002C834 <AmiBlitz3.ab3@14877>    SUB.w #$1b80,-$a(a4)
0002C83A <AmiBlitz3.ab3@14878>    SUBQ.l #2,destpointer
0002C83C <AmiBlitz3.ab3@14879> RTS
0002C842 <AmiBlitz3.ab3@14882>   CLR.b quickadd
0002C846 <AmiBlitz3.ab3@14883> BRA doplus2__sub1_l10
0002C84C <AmiBlitz3.ab3@14886>    CLR.l imm_addr
0002C852 <AmiBlitz3.ab3@14887>    ADD.w #$7080-$200,-6(a4)
0002C854 <AmiBlitz3.ab3@14888> RTS
0002C85A <AmiBlitz3.ab3@14891>    MOVE.l destpointer,a0
0002C860 <AmiBlitz3.ab3@14892>    SUB.l load_var_addr,a0
0002C864 <AmiBlitz3.ab3@14893>    CMP.w #4,a0
0002C868 <AmiBlitz3.ab3@14894>    BNE doplus2__sub1_l10
0002C86C <AmiBlitz3.ab3@14895>    CMP.b #3,d3
0002C870 <AmiBlitz3.ab3@14896>    BNE doplus2__sub1_lv1
0002C876 <AmiBlitz3.ab3@14897>    CLR.l load_var_addr
0002C87C <AmiBlitz3.ab3@14898>    ADD.w #$7080-$200,-4(a4)
0002C87E <AmiBlitz3.ab3@14899> RTS
0002C882 <AmiBlitz3.ab3@14902>    CMP.b #2,d3
0002C886 <AmiBlitz3.ab3@14903>    BNE doplus2__sub1_l10
0002C88C <AmiBlitz3.ab3@14904>    CLR.l load_var_addr
0002C892 <AmiBlitz3.ab3@14905>    ADD.w #$6040-$200,-4(a4)
0002C894 <AmiBlitz3.ab3@14906> RTS
0002C89A <AmiBlitz3.ab3@14909>   MOVE.w regnum,D3
0002C89C <AmiBlitz3.ab3@14910>   MOVE.w a1,d1
0002C89E <AmiBlitz3.ab3@14911>   OR.w D3,D1
0002C8A0 <AmiBlitz3.ab3@14912>   ADDQ.w #1,D1
0002C8A2 <AmiBlitz3.ab3@14913>   LSL.w #8,D3
0002C8A4 <AmiBlitz3.ab3@14914>   LSL.w #1,D3
0002C8A6 <AmiBlitz3.ab3@14915>   OR.w D3,D1
0002C8AA <AmiBlitz3.ab3@14916> BRA.w writeword
0002C8AC <AmiBlitz3.ab3@14920>   MOVEQ #0,d0
0002C8B2 <AmiBlitz3.ab3@14921>   MOVE.w regnum,d0
0002C8B4 <AmiBlitz3.ab3@14922>   ADDQ #1,d0
0002C8B6 <AmiBlitz3.ab3@14923>   ASL.w #8,d0
0002C8B8 <AmiBlitz3.ab3@14924>   ASL.w #2,d0
0002C8BE <AmiBlitz3.ab3@14925>   MOVE.l #$f2000022,d1                                     ;fpu add
0002C8C0 <AmiBlitz3.ab3@14926>   OR.l d0,d1
0002C8C6 <AmiBlitz3.ab3@14927>   MOVE.w regnum,d0
0002C8C8 <AmiBlitz3.ab3@14928>   ASL.w #7,d0
0002C8CA <AmiBlitz3.ab3@14929>   OR.l d0,d1
0002C8CE <AmiBlitz3.ab3@14930> BRA.w writelong
0002C8D4 <AmiBlitz3.ab3@14936>   TST.b iee
0002C8D8 <AmiBlitz3.ab3@14937>   BNE do_plus_float__fadd1
0002C8DC <AmiBlitz3.ab3@14938>   MOVE.w #$FFBE,D1                                         ;#-66,d1 org soruce ;floatadd
0002C8E2 <AmiBlitz3.ab3@14941>    MOVE.w D1,libjsr+2
0002C8E6 <AmiBlitz3.ab3@14942>    BSR.w JL_0_AD40
0002C8E8 <AmiBlitz3.ab3@14943>   MOVE.l D4,D1
0002C8EC <AmiBlitz3.ab3@14944>    BSR.w JL_0_AD38
0002C8F0 <AmiBlitz3.ab3@14945>   MOVE.w #$C900,D1
0002C8F4 <AmiBlitz3.ab3@14946>    BSR.w Atokejsr
0002C8F8 <AmiBlitz3.ab3@14947>    BSR.w JL_0_A352
0002C8FE <AmiBlitz3.ab3@14948>   MOVE.l libjsr,D1
0002C902 <AmiBlitz3.ab3@14949>    BSR.w writelong
0002C906 <AmiBlitz3.ab3@14950>    BSR.w JL_0_A36E
0002C908 <AmiBlitz3.ab3@14951>   MOVE.l D5,D1
0002C90C <AmiBlitz3.ab3@14952> BRA.w JL_0_AD38
0002C912 <AmiBlitz3.ab3@14956>   MOVE.w regnum,D1
0002C914 <AmiBlitz3.ab3@14957>   LSL.w #8,D1
0002C916 <AmiBlitz3.ab3@14958>   LSL.w #1,D1
0002C918 <AmiBlitz3.ab3@14959>   MOVE.w D1,-(A7)
0002C91C <AmiBlitz3.ab3@14960>   CMP.w #3072,d1
0002C920 <AmiBlitz3.ab3@14961>   BEQ 'l1
0002C926 <AmiBlitz3.ab3@14962>   OR.w addcode,D1                                          ;move.l (a7)+,d0
0002C92A <AmiBlitz3.ab3@14963> BRA 'l2
0002C92E <AmiBlitz3.ab3@14966>    MOVE.w #$588f,d1                                        ;addq.l #4,a7
0002C932 <AmiBlitz3.ab3@14969>    BSR.w writeword
0002C934 <AmiBlitz3.ab3@14970>   MOVE.w (A7)+,D1
0002C93A <AmiBlitz3.ab3@14971>   OR.w addcode+2,D1                                        ;native string add.l d0,(a7)
0002C93E <AmiBlitz3.ab3@14972> BRA.w writeword
0002C942 <AmiBlitz3.ab3@14978>   MOVE.w #$9040,D1
0002C946 <AmiBlitz3.ab3@14979> BRA.w doplus2
0002C94A <AmiBlitz3.ab3@14983>   MOVE.w #$9040,D1
0002C94E <AmiBlitz3.ab3@14984> BRA.w doplus2
0002C952 <AmiBlitz3.ab3@14988>   MOVE.w #$9080,D1
0002C956 <AmiBlitz3.ab3@14989> BRA.w doplus2
0002C95C <AmiBlitz3.ab3@14993>    TST.b iee
0002C960 <AmiBlitz3.ab3@14994>     BNE do_minus_float__fs1
0002C964 <AmiBlitz3.ab3@14995>   MOVE.w #$FFB8,D1                                         ;floatsub
0002C968 <AmiBlitz3.ab3@14996> BRA.w doflib
0002C96A <AmiBlitz3.ab3@14999>   MOVEQ #0,d0
0002C970 <AmiBlitz3.ab3@15000>   MOVE.w regnum,d0
0002C972 <AmiBlitz3.ab3@15001>   ADDQ #1,d0
0002C974 <AmiBlitz3.ab3@15002>   ASL.w #8,d0
0002C976 <AmiBlitz3.ab3@15003>   ASL.w #2,d0
0002C97C <AmiBlitz3.ab3@15004>   MOVE.l #$f2000028,d1
0002C97E <AmiBlitz3.ab3@15005>   OR.l d0,d1
0002C984 <AmiBlitz3.ab3@15006>   MOVE.w regnum,d0
0002C986 <AmiBlitz3.ab3@15007>   ASL.w #7,d0
0002C988 <AmiBlitz3.ab3@15008>   OR.l d0,d1
0002C98C <AmiBlitz3.ab3@15009> BRA.w writelong
0002C990 <AmiBlitz3.ab3@15015>   MOVE.w #$C1C0,D1
0002C992 <AmiBlitz3.ab3@15016>   MOVEQ.l #$02,D2                                          ;now a word
0002C996 <AmiBlitz3.ab3@15017> BRA.w doplus2
0002C99A <AmiBlitz3.ab3@15021>   MOVE.w #$C1C0,D1
0002C99C <AmiBlitz3.ab3@15022>   MOVEQ.l #$03,D2                                          ;now a long.
0002C9A0 <AmiBlitz3.ab3@15023> BRA.w doplus2
0002C9A4 <AmiBlitz3.ab3@15027>   MOVE.w #$CA00,D1                                         ;quickmul
0002C9A8 <AmiBlitz3.ab3@15028> BRA.w domylib
0002C9AE <AmiBlitz3.ab3@15032>   TST.b fast
0002C9B2 <AmiBlitz3.ab3@15033>   BNE.s 'l10
0002C9B6 <AmiBlitz3.ab3@15034>   MOVE.w #$CA01,D1                                         ;writelongmul
0002C9BA <AmiBlitz3.ab3@15035> BRA.w domylib
0002C9C0 <AmiBlitz3.ab3@15044>    MOVE.l destpointer,a0
0002C9C6 <AmiBlitz3.ab3@15045>    SUB.l imm_addr,a0
0002C9CA <AmiBlitz3.ab3@15046>    CMP.w #6,a0
0002C9CE <AmiBlitz3.ab3@15047>    BNE 'li1
0002C9D0 <AmiBlitz3.ab3@15048>    MOVEQ.l #2,d1
0002C9D2 <AmiBlitz3.ab3@15049>    MOVEQ #1,d3
0002C9D6 <AmiBlitz3.ab3@15052>   CMP.l -4(a4),d1
0002C9DA <AmiBlitz3.ab3@15053>    BEQ 'oklsl
0002C9DC <AmiBlitz3.ab3@15054>     LSL.l #1,d1
0002C9E2 <AmiBlitz3.ab3@15055>     ADD.l #1,d3
0002C9E8 <AmiBlitz3.ab3@15056>     CMP.l #9,d3
0002C9EC <AmiBlitz3.ab3@15057>     BNE 'ag
0002C9F0 <AmiBlitz3.ab3@15058>    MOVE.w -2(a4),d1
0002C9F4 <AmiBlitz3.ab3@15059>    BSR writeword
0002C9FA <AmiBlitz3.ab3@15060>    MOVE.w -6(a4),-4(a4)
0002CA02 <AmiBlitz3.ab3@15061>    MOVE.l #$4c3c0800,-8(a4)
0002CA08 <AmiBlitz3.ab3@15062>    MOVE.w regnum,D3
0002CA0C <AmiBlitz3.ab3@15063>    MULS #$1000,D3
0002CA10 <AmiBlitz3.ab3@15064>    OR.w D3,-6(a4)
0002CA16 <AmiBlitz3.ab3@15065>    CLR.l load_var_addr
0002CA1C <AmiBlitz3.ab3@15066>    CLR.l imm_addr
0002CA20 <AmiBlitz3.ab3@15067> BRA 'li3
0002CA24 <AmiBlitz3.ab3@15070>    CMP.w #8,d3
0002CA28 <AmiBlitz3.ab3@15071>    BEQ 'ok
0002CA2A <AmiBlitz3.ab3@15072>    ASL.l #1,d3
0002CA2C <AmiBlitz3.ab3@15073>    ASL.l #8,d3
0002CA30 <AmiBlitz3.ab3@15074>    MOVE.w #$e188,d1
0002CA32 <AmiBlitz3.ab3@15075>    OR.w d3,d1
0002CA36 <AmiBlitz3.ab3@15076>    MOVE.w d1,-6(a4)
0002CA3A <AmiBlitz3.ab3@15077> BRA 'okls
0002CA40 <AmiBlitz3.ab3@15080>   MOVE.w #$e188,-6(a4)                                     ;lsl.l #,dx
0002CA46 <AmiBlitz3.ab3@15083>   MOVE.w regnum,d3
0002CA4A <AmiBlitz3.ab3@15084>    OR.b d3,-5(a4)
0002CA50 <AmiBlitz3.ab3@15085>    SUBQ.l #4,destpointer
0002CA56 <AmiBlitz3.ab3@15086>    CLR.l load_var_addr
0002CA5C <AmiBlitz3.ab3@15087>    CLR.l imm_addr
0002CA60 <AmiBlitz3.ab3@15088> BRA 'li3
0002CA66 <AmiBlitz3.ab3@15091>    MOVE.l destpointer,a0
0002CA6C <AmiBlitz3.ab3@15092>    SUB.l load_var_addr,a0
0002CA70 <AmiBlitz3.ab3@15093>    CMP.w #4,a0
0002CA74 <AmiBlitz3.ab3@15094>    BNE 'li2
0002CA78 <AmiBlitz3.ab3@15095>    MOVE.w -2(a4),d1
0002CA7C <AmiBlitz3.ab3@15096>    BSR writeword
0002CA82 <AmiBlitz3.ab3@15097>    MOVE.b #$4c,-6(a4)
0002CA88 <AmiBlitz3.ab3@15098>    MOVE.w #$0800,-4(a4)
0002CA8E <AmiBlitz3.ab3@15099>    MOVE.w regnum,D3
0002CA92 <AmiBlitz3.ab3@15100>    MULS #$1000,d3
0002CA96 <AmiBlitz3.ab3@15101>    OR.w D3,-4(a4)
0002CA9A <AmiBlitz3.ab3@15102> BRA 'li3
0002CAA0 <AmiBlitz3.ab3@15105>    MOVE.l #$4c010800,d1
0002CAA6 <AmiBlitz3.ab3@15106>    MOVE.w regnum,D3
0002CAA8 <AmiBlitz3.ab3@15107>    EXT.l d3
0002CAAC <AmiBlitz3.ab3@15108>    MULS #$1000,d3
0002CAAE <AmiBlitz3.ab3@15109>    OR.w D3,d1
0002CAB2 <AmiBlitz3.ab3@15110>    MULS #$10,d3
0002CAB4 <AmiBlitz3.ab3@15111>    ADD.l d3,d1
0002CAB8 <AmiBlitz3.ab3@15112>    BSR writelong
0002CABA <AmiBlitz3.ab3@15117> RTS
0002CABC <AmiBlitz3.ab3@15121>   MOVE.w D1,-(A7)
0002CAC0 <AmiBlitz3.ab3@15122>    BSR.w JL_0_AD40
0002CAC2 <AmiBlitz3.ab3@15123>   MOVE.l D4,D1
0002CAC6 <AmiBlitz3.ab3@15124>    BSR.w JL_0_AD38
0002CACA <AmiBlitz3.ab3@15125>    BSR.w JL_0_A352
0002CACC <AmiBlitz3.ab3@15126>   MOVEQ #0,d1
0002CACE <AmiBlitz3.ab3@15127>   MOVE.w (A7)+,D1
0002CAD4 <AmiBlitz3.ab3@15128>   MOVE.l d1,lastinstruction
0002CAD8 <AmiBlitz3.ab3@15129>    BSR.w Atokejsr
0002CADC <AmiBlitz3.ab3@15130>    BSR.w JL_0_A36E
0002CADE <AmiBlitz3.ab3@15131>   MOVE.l D5,D1
0002CAE2 <AmiBlitz3.ab3@15132> BRA.w JL_0_AD38
0002CAE8 <AmiBlitz3.ab3@15136>    TST.b iee
0002CAEC <AmiBlitz3.ab3@15137>     BNE fm1
0002CAF0 <AmiBlitz3.ab3@15138>  MOVE.w #$FFB2,D1                                          ;floatmul
0002CAF4 <AmiBlitz3.ab3@15139> BRA.w doflib
0002CAF6 <AmiBlitz3.ab3@15142>   MOVEQ #0,d0
0002CAFC <AmiBlitz3.ab3@15143>  MOVE.w regnum,d0
0002CAFE <AmiBlitz3.ab3@15144>  ADDQ #1,d0
0002CB00 <AmiBlitz3.ab3@15145>  ASL.w #8,d0
0002CB02 <AmiBlitz3.ab3@15146>  ASL.w #2,d0
0002CB08 <AmiBlitz3.ab3@15147>  MOVE.l #$f2000023,d1
0002CB0A <AmiBlitz3.ab3@15148>  OR.l d0,d1
0002CB10 <AmiBlitz3.ab3@15149>  MOVE.w regnum,d0
0002CB12 <AmiBlitz3.ab3@15150>  ASL.w #7,d0
0002CB14 <AmiBlitz3.ab3@15151>  OR.l d0,d1
0002CB18 <AmiBlitz3.ab3@15152> BRA.w writelong
0002CB1A <AmiBlitz3.ab3@15156>   MOVE.w D2,-(A7)                                          ;dopow
0002CB1C <AmiBlitz3.ab3@15157>   MOVE.w D2,D3
0002CB1E <AmiBlitz3.ab3@15158>   MOVEQ.l #$05,D2
0002CB22 <AmiBlitz3.ab3@15159>    BSR.w JL_0_9770
0002CB28 <AmiBlitz3.ab3@15160>   ADDQ.w #1,regnum
0002CB2A <AmiBlitz3.ab3@15161>   MOVE.w (A7)+,D3
0002CB2C <AmiBlitz3.ab3@15162>   MOVEQ.l #$05,D2
0002CB30 <AmiBlitz3.ab3@15163>    BSR.w writeconvertcode
0002CB36 <AmiBlitz3.ab3@15164>   SUBQ.w #1,regnum
0002CB3A <AmiBlitz3.ab3@15165>    BSR.w nocando
0002CB40 <AmiBlitz3.ab3@15166>    TST.b fpu
0002CB44 <AmiBlitz3.ab3@15167>    BEQ 'old
0002CB46 <AmiBlitz3.ab3@15168>    MOVEQ #0,d1
0002CB4C <AmiBlitz3.ab3@15169>    MOVE.w regnum,d1
0002CB4E <AmiBlitz3.ab3@15170>   MOVE.l d1,d0
0002CB50 <AmiBlitz3.ab3@15171>   ASL.w #7,d1
0002CB52 <AmiBlitz3.ab3@15172>   ASL.w #8,d0
0002CB54 <AmiBlitz3.ab3@15173>   ASL.w #2,d0
0002CB56 <AmiBlitz3.ab3@15174>   OR.w d0,d1
0002CB58 <AmiBlitz3.ab3@15175>   MOVE.l d1,-(a7)
0002CB5E <AmiBlitz3.ab3@15177>    OR.l #$f2000016,d1                                       ;flog2.x fp0      ;fpu ^ pow
0002CB62 <AmiBlitz3.ab3@15178>    BSR writelong
0002CB68 <AmiBlitz3.ab3@15179>    MOVE.w regnum,d0
0002CB6A <AmiBlitz3.ab3@15180>  ADDQ #1,d0
0002CB6C <AmiBlitz3.ab3@15181>  ASL.w #8,d0
0002CB6E <AmiBlitz3.ab3@15182>  ASL.w #2,d0
0002CB74 <AmiBlitz3.ab3@15183>  MOVE.l #$f2000023,d1
0002CB76 <AmiBlitz3.ab3@15184>  OR.l d0,d1
0002CB7C <AmiBlitz3.ab3@15185>  MOVE.w regnum,d0
0002CB7E <AmiBlitz3.ab3@15186>  ASL.w #7,d0
0002CB80 <AmiBlitz3.ab3@15187>  OR.l d0,d1
0002CB86 <AmiBlitz3.ab3@15188>    OR.l #$f2000023,d1                                      ;fmulx.x fp1,fp0
0002CB8A <AmiBlitz3.ab3@15189>    BSR writelong
0002CB8C <AmiBlitz3.ab3@15190>    MOVE.l (a7)+,d1
0002CB92 <AmiBlitz3.ab3@15192>    OR.l #$f2000011,d1                                      ;ftwotox.x fp0
0002CB96 <AmiBlitz3.ab3@15193>    BSR writelong
0002CB98 <AmiBlitz3.ab3@15194> RTS
0002CB9C <AmiBlitz3.ab3@15197>   MOVE.w #$6001,D1
0002CBA0 <AmiBlitz3.ab3@15198> BRA.w domylib
0002CBA4 <AmiBlitz3.ab3@15204>   MOVEA.l forthsp(PC),A0
0002CBA8 <AmiBlitz3.ab3@15205>   MOVE.w #$FFFF,-(A0)                                      ;#-1,-(a0) org source
0002CBAA <AmiBlitz3.ab3@15206> RTS
0002CBAE <AmiBlitz3.ab3@15212>   MOVE.w #$D400,D1
0002CBB2 <AmiBlitz3.ab3@15213> BRA.w domylib
0002CBB6 <AmiBlitz3.ab3@15217>   MOVE.w #$D401,D1
0002CBBA <AmiBlitz3.ab3@15218> BRA.w domylib
0002CBBE <AmiBlitz3.ab3@15222>    BSR.w nocando                                           ;modlib uses an alibjsr here!
0002CBC2 <AmiBlitz3.ab3@15223>   MOVE.w #$D402,D1
0002CBC6 <AmiBlitz3.ab3@15224> BRA.w domylib
0002CBCA <AmiBlitz3.ab3@15228>   MOVE.w #$D403,D1
0002CBCC <AmiBlitz3.ab3@15229>   MOVEQ.l #$02,D2                                          ;now a word.
0002CBD0 <AmiBlitz3.ab3@15230> BRA.w domylib
0002CBD4 <AmiBlitz3.ab3@15234>    BSR.w nocando                                           ;modlib lib uses an alibjsr!  ;domod float
0002CBDA <AmiBlitz3.ab3@15235>   TST.b fpu
0002CBDE <AmiBlitz3.ab3@15236>   BEQ 'old
0002CBE0 <AmiBlitz3.ab3@15237>   MOVEQ #0,d1
0002CBE6 <AmiBlitz3.ab3@15238>   MOVE.w regnum,d1                                         ;fpu mod
0002CBE8 <AmiBlitz3.ab3@15239>   MOVE.l d1,d0
0002CBEA <AmiBlitz3.ab3@15240>   ADDQ.l #1,d1
0002CBEC <AmiBlitz3.ab3@15241>   ASL.l #7,d0
0002CBEE <AmiBlitz3.ab3@15242>   ASL.l #8,d1
0002CBF0 <AmiBlitz3.ab3@15243>   ASL.l #2,d1
0002CBF2 <AmiBlitz3.ab3@15244>   OR.l d0,d1
0002CBF4 <AmiBlitz3.ab3@15245>   MOVE.l d0,-(a7)
0002CBFA <AmiBlitz3.ab3@15246>   OR.l #$f2000021,d1
0002CBFE <AmiBlitz3.ab3@15247>   BSR writelong
0002CC00 <AmiBlitz3.ab3@15248>   MOVE.l (a7)+,d0
0002CC02 <AmiBlitz3.ab3@15249>  RTS
0002CC06 <AmiBlitz3.ab3@15252>   MOVE.w #$D404,D1
0002CC08 <AmiBlitz3.ab3@15253>   MOVEQ.l #$03,D2                                          ;now a long
0002CC0C <AmiBlitz3.ab3@15254> BRA.w domylib
0002CC10 <AmiBlitz3.ab3@15262>   MOVE.w #$48C0,D1
0002CC16 <AmiBlitz3.ab3@15263>   OR.w regnum,D1
0002CC1A <AmiBlitz3.ab3@15264>    BSR.w writeword
0002CC1C <AmiBlitz3.ab3@15265>   ADDQ.w #1,D1
0002CC20 <AmiBlitz3.ab3@15266>    BSR.w writeword
0002CC24 <AmiBlitz3.ab3@15269>    MOVE.w #$48C0,D1
0002CC2A <AmiBlitz3.ab3@15270>   OR.w regnum,D1
0002CC2E <AmiBlitz3.ab3@15271>    BSR.w writeword
0002CC32 <AmiBlitz3.ab3@15272>   MOVE.w #$81C0,D1
0002CC36 <AmiBlitz3.ab3@15273> BRA.w doplus2
0002CC3C <AmiBlitz3.ab3@15277>   TST.b fast
0002CC40 <AmiBlitz3.ab3@15278>   BNE.s 'l10
0002CC44 <AmiBlitz3.ab3@15279>   MOVE.w #$CB01,D1
0002CC48 <AmiBlitz3.ab3@15280> BRA.w domylib
0002CC4C <AmiBlitz3.ab3@15286>   BSR.w JL_0_AD40
0002CC4E <AmiBlitz3.ab3@15287>   MOVE.l D4,D1
0002CC52 <AmiBlitz3.ab3@15288>    BSR.w JL_0_AD38
0002CC56 <AmiBlitz3.ab3@15289>    BSR.w JL_0_A352
0002CC5C <AmiBlitz3.ab3@15303>    MOVE.l #$4c410800,d1
0002CC60 <AmiBlitz3.ab3@15304>    BSR writelong
0002CC64 <AmiBlitz3.ab3@15307>   MOVE.w #$4e71,d1
0002CC68 <AmiBlitz3.ab3@15309>    BSR.w JL_0_A36E
0002CC6A <AmiBlitz3.ab3@15310>   MOVE.l D5,D1
0002CC6E <AmiBlitz3.ab3@15311> BRA.w JL_0_AD38
0002CC72 <AmiBlitz3.ab3@15314>     CMP.w #8,d3
0002CC76 <AmiBlitz3.ab3@15315>     BEQ 'ok
0002CC78 <AmiBlitz3.ab3@15316>     ASL.l #1,d3
0002CC7A <AmiBlitz3.ab3@15317>     ASL.l #8,d3
0002CC7E <AmiBlitz3.ab3@15318>     MOVE.w #$e080,d1
0002CC80 <AmiBlitz3.ab3@15319>     OR.w d3,d1
0002CC84 <AmiBlitz3.ab3@15320> BRA 'oklsr2
0002CC88 <AmiBlitz3.ab3@15323>   MOVE.w #$e080,d1                                         ;lsr.l #,dx
0002CC8E <AmiBlitz3.ab3@15326>      SUBQ.l #6,destpointer
0002CC92 <AmiBlitz3.ab3@15327>      BSR writeword
0002CC94 <AmiBlitz3.ab3@15328>      MOVE.l (a7)+,d3
0002CC96 <AmiBlitz3.ab3@15329>      MOVEQ #0,d1
0002CC9C <AmiBlitz3.ab3@15330>      CLR.l load_var_addr
0002CCA2 <AmiBlitz3.ab3@15331>      CLR.l imm_addr
0002CCA6 <AmiBlitz3.ab3@15332> BRA JL_0_AD38
0002CCAA <AmiBlitz3.ab3@15336>   MOVE.w #$CB00,D1                                         ;quickdiv
0002CCAE <AmiBlitz3.ab3@15337> BRA.w domylib
0002CCB4 <AmiBlitz3.ab3@15341>    TST.b iee
0002CCB8 <AmiBlitz3.ab3@15342>    BNE fdiv1
0002CCBC <AmiBlitz3.ab3@15343>    MOVE.w #$FFAC,D1                                        ;floatdiv
0002CCC0 <AmiBlitz3.ab3@15344> BRA.w doflib
0002CCC2 <AmiBlitz3.ab3@15348>   MOVEQ #0,d0
0002CCC8 <AmiBlitz3.ab3@15349>   MOVE.w regnum,d0
0002CCCA <AmiBlitz3.ab3@15350>   ADDQ #1,d0
0002CCCC <AmiBlitz3.ab3@15351>   ASL.w #8,d0
0002CCCE <AmiBlitz3.ab3@15352>   ASL.w #2,d0
0002CCD4 <AmiBlitz3.ab3@15353>   MOVE.l #$f2000020,d1                                     ;fpu div
0002CCD6 <AmiBlitz3.ab3@15354>   OR.l d0,d1
0002CCDC <AmiBlitz3.ab3@15355>   MOVE.w regnum,d0
0002CCDE <AmiBlitz3.ab3@15356>   ASL.w #7,d0
0002CCE0 <AmiBlitz3.ab3@15357>   OR.l d0,d1
0002CCE4 <AmiBlitz3.ab3@15358> BRA.w writelong
0002CCE8 <AmiBlitz3.ab3@15362>   MOVE.w #$C000,D1
0002CCEC <AmiBlitz3.ab3@15363> BRA.w doplus2
0002CCF0 <AmiBlitz3.ab3@15367>   MOVE.w #$C040,D1
0002CCF4 <AmiBlitz3.ab3@15368> BRA.w doplus2
0002CCF8 <AmiBlitz3.ab3@15372>   MOVE.w #$C080,D1
0002CCFC <AmiBlitz3.ab3@15373> BRA.w doplus2
0002CD00 <AmiBlitz3.ab3@15377>   MOVE.w #$8000,D1
0002CD04 <AmiBlitz3.ab3@15378> BRA.w doplus2
0002CD08 <AmiBlitz3.ab3@15382>   MOVE.w #$8040,D1
0002CD0C <AmiBlitz3.ab3@15383> BRA.w doplus2
0002CD10 <AmiBlitz3.ab3@15387>   MOVE.w #$8080,D1
0002CD14 <AmiBlitz3.ab3@15388> BRA.w doplus2
0002CD18 <AmiBlitz3.ab3@15392>   MOVE.w #$B100,D1
0002CD1E <AmiBlitz3.ab3@15395>    MOVE.w regnum,D3
0002CD20 <AmiBlitz3.ab3@15396>   OR.w D3,D1
0002CD22 <AmiBlitz3.ab3@15397>   ADDQ.w #1,D3
0002CD24 <AmiBlitz3.ab3@15398>   LSL.w #8,D3
0002CD26 <AmiBlitz3.ab3@15399>   LSL.w #1,D3
0002CD28 <AmiBlitz3.ab3@15400>   OR.w D3,D1
0002CD2C <AmiBlitz3.ab3@15401> BRA.w writeword
0002CD30 <AmiBlitz3.ab3@15405>   MOVE.w #$B140,D1
0002CD34 <AmiBlitz3.ab3@15406> BRA.w JL_0_A25C
0002CD38 <AmiBlitz3.ab3@15410>   MOVE.w #$B180,D1
0002CD3C <AmiBlitz3.ab3@15411> BRA.w JL_0_A25C
0002CD40 <AmiBlitz3.ab3@15415>   MOVE.w #$E1A8,D1
0002CD44 <AmiBlitz3.ab3@15416> BRA.w JL_0_A298
0002CD48 <AmiBlitz3.ab3@15420>   MOVE.w #$E0A8,D1
0002CD4C <AmiBlitz3.ab3@15421> BRA.w JL_0_A298
0002CD50 <AmiBlitz3.ab3@15425>   MOVE.w #$E0A0,D1
0002CD54 <AmiBlitz3.ab3@15426> BRA.w JL_0_A298
0002CD56 <AmiBlitz3.ab3@15430>   MOVE.w D1,-(A7)
0002CD5C <AmiBlitz3.ab3@15431>   ADDQ.w #1,regnum
0002CD5E <AmiBlitz3.ab3@15432>   MOVE.w D2,-(A7)
0002CD60 <AmiBlitz3.ab3@15433>   MOVE.w D2,D3
0002CD62 <AmiBlitz3.ab3@15434>   MOVEQ.l #$02,D2
0002CD66 <AmiBlitz3.ab3@15439>    BSR.w writeconvertcode
0002CD68 <AmiBlitz3.ab3@15441>   MOVE.w (A7)+,D2
0002CD6E <AmiBlitz3.ab3@15442>   SUBQ.w #1,regnum
0002CD72 <AmiBlitz3.ab3@15443>   CMP.w #$4,D2
0002CD76 <AmiBlitz3.ab3@15444>    BEQ.w JL_0_A2C2
0002CD78 <AmiBlitz3.ab3@15445>   MOVE.w D2,D3
0002CD7A <AmiBlitz3.ab3@15446>   MOVEQ.l #$03,D2
0002CD7E <AmiBlitz3.ab3@15447>    BSR.w JL_0_9770
0002CD80 <AmiBlitz3.ab3@15450>    MOVE.w (A7)+,D1
0002CD86 <AmiBlitz3.ab3@15451>   MOVE.w regnum,D3
0002CD88 <AmiBlitz3.ab3@15452>   OR.w D3,D1
0002CD8A <AmiBlitz3.ab3@15453>   ADDQ.w #1,D3
0002CD8C <AmiBlitz3.ab3@15454>   LSL.w #8,D3
0002CD8E <AmiBlitz3.ab3@15455>   LSL.w #1,D3
0002CD90 <AmiBlitz3.ab3@15456>   OR.w D3,D1
0002CD94 <AmiBlitz3.ab3@15457> BRA.w writeword
0002CD98 <AmiBlitz3.ab3@15461>   MOVE.w #$0100,D1
0002CD9C <AmiBlitz3.ab3@15462>    BSR.w JL_0_A31C
0002CDA2 <AmiBlitz3.ab3@15463>   MOVE.w regnum,D1
0002CDA6 <AmiBlitz3.ab3@15464>   ORI.w #$56C0,D1
0002CDAA <AmiBlitz3.ab3@15465>    BSR.w writeword
0002CDB0 <AmiBlitz3.ab3@15466>   MOVE.w regnum,D1
0002CDB4 <AmiBlitz3.ab3@15467>   ORI.w #$4880,D1
0002CDB8 <AmiBlitz3.ab3@15468>    BSR.w writeword
0002CDBA <AmiBlitz3.ab3@15469>   MOVEQ.l #$02,D2
0002CDBC <AmiBlitz3.ab3@15470> RTS
0002CDC0 <AmiBlitz3.ab3@15474>   MOVE.w #$01C0,D1
0002CDC4 <AmiBlitz3.ab3@15477>    BSR.w JL_0_A31C
0002CDC6 <AmiBlitz3.ab3@15478>   MOVEQ.l #$03,D2
0002CDC8 <AmiBlitz3.ab3@15479> RTS
0002CDCC <AmiBlitz3.ab3@15483>   MOVE.w #$0180,D1
0002CDD0 <AmiBlitz3.ab3@15484> BRA.w JL_0_A304
0002CDD4 <AmiBlitz3.ab3@15488>   MOVE.w #$0140,D1
0002CDD8 <AmiBlitz3.ab3@15489> BRA.w JL_0_A304
0002CDDA <AmiBlitz3.ab3@15493>   MOVE.w D1,-(A7)
0002CDDC <AmiBlitz3.ab3@15494>   MOVE.w D2,-(A7)
0002CDDE <AmiBlitz3.ab3@15495>   MOVE.w D2,D3
0002CDE0 <AmiBlitz3.ab3@15496>   MOVEQ.l #$03,D2
0002CDE4 <AmiBlitz3.ab3@15497>    BSR.w JL_0_9770
0002CDE6 <AmiBlitz3.ab3@15498>   MOVE.w (A7)+,D3
0002CDE8 <AmiBlitz3.ab3@15499>   MOVEQ.l #$01,D2
0002CDEE <AmiBlitz3.ab3@15500>   ADDQ.w #1,regnum
0002CDF2 <AmiBlitz3.ab3@15501>    BSR.w writeconvertcode
0002CDF8 <AmiBlitz3.ab3@15502>   SUBQ.w #1,regnum
0002CDFE <AmiBlitz3.ab3@15503>   MOVE.w regnum,D1
0002CE00 <AmiBlitz3.ab3@15504>   MOVE.w D1,D2
0002CE02 <AmiBlitz3.ab3@15505>   ADDQ.w #1,D2
0002CE04 <AmiBlitz3.ab3@15506>   LSL.w #8,D2
0002CE06 <AmiBlitz3.ab3@15507>   LSL.w #1,D2
0002CE08 <AmiBlitz3.ab3@15508>   OR.w (A7)+,D1
0002CE0A <AmiBlitz3.ab3@15509>   OR.w D2,D1
0002CE0E <AmiBlitz3.ab3@15510> BRA.w writeword
0002CE14 <AmiBlitz3.ab3@15514>   MOVE.w regnum,D1
0002CE18 <AmiBlitz3.ab3@15515>    BEQ.w JL_0_A36C
0002CE1C <AmiBlitz3.ab3@15516>   ORI.w #$2000,D1
0002CE20 <AmiBlitz3.ab3@15517>    BSR.w writeword
0002CE24 <AmiBlitz3.ab3@15518>   ADDI.w #$201,D1
0002CE28 <AmiBlitz3.ab3@15519>    BSR.w writeword
0002CE2A <AmiBlitz3.ab3@15522> RTS
0002CE30 <AmiBlitz3.ab3@15526>   MOVE.w regnum,D1
0002CE34 <AmiBlitz3.ab3@15527>    BEQ.w JL_0_A384
0002CE36 <AmiBlitz3.ab3@15528>   LSL.w #8,D1
0002CE38 <AmiBlitz3.ab3@15529>   LSL.w #1,D1
0002CE3C <AmiBlitz3.ab3@15530>   ORI.w #$2000,D1
0002CE40 <AmiBlitz3.ab3@15531>    BSR.w writeword
0002CE42 <AmiBlitz3.ab3@15534> RTS
0002CE48 <AmiBlitz3.ab3@15538>    CLR.b isconstantvalue
0002CE4E <AmiBlitz3.ab3@15539>    CLR.l lastconstantvalue
0002CE56 <AmiBlitz3.ab3@15540>    CMPI.w #$7,regnum
0002CE5A <AmiBlitz3.ab3@15541>    BCS.w JL_0_A6B4
0002CE60 <AmiBlitz3.ab3@15542>   MOVE.l #$f2277700,d1                                     ;fmove.d fp6,-(a7)
0002CE64 <AmiBlitz3.ab3@15543>   BSR writelong
0002CE68 <AmiBlitz3.ab3@15544>   MOVE.w #$2F06,D1                                         ;d6 to stack
0002CE6C <AmiBlitz3.ab3@15546>   CMP.w #$3,D2
0002CE70 <AmiBlitz3.ab3@15547>    BCS.w JL_0_A3A2
0002CE74 <AmiBlitz3.ab3@15548>   MOVE.w #$2F06,D1
0002CE78 <AmiBlitz3.ab3@15551>   BSR.w writeword
0002CE7A <AmiBlitz3.ab3@15552>   MOVE.w D1,-(A7)
0002CE80 <AmiBlitz3.ab3@15553>   SUBQ.w #1,regnum
0002CE84 <AmiBlitz3.ab3@15554>    BSR.w JL_0_A6B4
0002CE8A <AmiBlitz3.ab3@15555>   ADDQ.w #1,regnum
0002CE90 <AmiBlitz3.ab3@15556>   MOVE.l #$f2001b80,d1
0002CE94 <AmiBlitz3.ab3@15557>   BSR writelong
0002CE98 <AmiBlitz3.ab3@15558>   MOVE.w #$3E06,D1
0002CE9C <AmiBlitz3.ab3@15559>   CMP.w #$3,D2
0002CEA0 <AmiBlitz3.ab3@15560>    BCS.w JL_0_A3C8
0002CEA4 <AmiBlitz3.ab3@15561>   MOVE.w #$2E06,D1
0002CEA8 <AmiBlitz3.ab3@15564>   BSR.w writeword
0002CEAA <AmiBlitz3.ab3@15565>   MOVE.w (A7)+,D1
0002CEAE <AmiBlitz3.ab3@15566>   ANDI.w #$F000,D1
0002CEB2 <AmiBlitz3.ab3@15567>   ORI.w #$C1F,D1
0002CEB8 <AmiBlitz3.ab3@15568>   JSR writeword
0002CEBE <AmiBlitz3.ab3@15569>   MOVE.l #$f21f5700,d1                                     ;fmove.d (a7)+,fp6
0002CEC2 <AmiBlitz3.ab3@15570> BRA writelong
0002CEC6 <AmiBlitz3.ab3@15574>   BSR.w JL_0_A6B4
0002CECA <AmiBlitz3.ab3@15575>   MOVE.w #$4440,D1
0002CECE <AmiBlitz3.ab3@15576>   CMP.w #$3,D2
0002CED2 <AmiBlitz3.ab3@15577>    BCS.w JL_0_A406
0002CED6 <AmiBlitz3.ab3@15578>   MOVE.w #$4480,D1
0002CEDA <AmiBlitz3.ab3@15579>   CMP.w #$5,D2
0002CEDE <AmiBlitz3.ab3@15580>    BCS.w JL_0_A406
0002CEE2 <AmiBlitz3.ab3@15581>   CMP.w #$6,D2
0002CEE6 <AmiBlitz3.ab3@15582>    BCC.w illoperr
0002CEEA <AmiBlitz3.ab3@15583>   MOVE.w #$FFC4,D1
0002CEEE <AmiBlitz3.ab3@15584> BRA.w JL_0_9604
0002CEF4 <AmiBlitz3.ab3@15587>   OR.w regnum,D1                                           ;negate
0002CEFA <AmiBlitz3.ab3@15588>   CLR.l imm_addr
0002CEFE <AmiBlitz3.ab3@15589> BRA.w writeword
0002CF02 <AmiBlitz3.ab3@15593>    BSR.w eval4
0002CF06 <AmiBlitz3.ab3@15594>   CMP.w #")",D0
0002CF0A <AmiBlitz3.ab3@15595>    BEQ.w JL_0_A424
0002CF0E <AmiBlitz3.ab3@15596>   CMP.w #"}",D0
0002CF12 <AmiBlitz3.ab3@15597>    BNE.w brackets_                                         ;syntax error brackets
0002CF16 <AmiBlitz3.ab3@15600> BRA.w get1bytemain
0002CF1A <AmiBlitz3.ab3@15604>    BSR.w eval4
0002CF1E <AmiBlitz3.ab3@15605>   CMP.w #$5,D2
0002CF22 <AmiBlitz3.ab3@15606>    BCC.w illoperr
0002CF28 <AmiBlitz3.ab3@15607>   MOVE.w regnum,D1
0002CF2C <AmiBlitz3.ab3@15608>   ORI.w #$4640,D1
0002CF30 <AmiBlitz3.ab3@15609>   CMP.w #$3,D2
0002CF34 <AmiBlitz3.ab3@15610>    BCS.w writeword
0002CF38 <AmiBlitz3.ab3@15611>   EORI.w #$C0,D1
0002CF3C <AmiBlitz3.ab3@15612> BRA.w writeword
0002CF3E <AmiBlitz3.ab3@15616>   MOVEQ.l #$05,D2                                          ;fpu pi
0002CF44 <AmiBlitz3.ab3@15617>    TST.b fpu
0002CF48 <AmiBlitz3.ab3@15618>   BEQ 'old
0002CF4E <AmiBlitz3.ab3@15619> JMP fpupi
0002CF54 <AmiBlitz3.ab3@15622>   MOVE.w regnum,D1
0002CF56 <AmiBlitz3.ab3@15623>   LSL.w #8,D1
0002CF58 <AmiBlitz3.ab3@15624>   LSL.w #1,D1
0002CF5C <AmiBlitz3.ab3@15625>   ORI.w #$203C,D1
0002CF60 <AmiBlitz3.ab3@15626>    BSR.w writeword
0002CF66 <AmiBlitz3.ab3@15627>   MOVE.l #$C90FDA42,D1
0002CF6A <AmiBlitz3.ab3@15628>    BSR.w writelong
0002CF6E <AmiBlitz3.ab3@15629> BRA.w get1bytemain
0002D06A <AmiBlitz3.ab3@15637> forthstack:  Ds.l 63                                       ;ds.b  18*32 org source
0002D166 <AmiBlitz3.ab3@15638>              Ds.l 63
0002D1AE <AmiBlitz3.ab3@15639>              Ds.l 18
0002D1B2 <AmiBlitz3.ab3@15640> forthsp:     Dc.l forthstack
0002D1DE <AmiBlitz3.ab3@15645>    !fget
0002D1E2 <AmiBlitz3.ab3@15646>    CMP.b #$7e,d0
0002D1E6 <AmiBlitz3.ab3@15647>    BNE 'noc
0002D1E8 <AmiBlitz3.ab3@15648>    SUBQ.l #1,a5
0002D1EC <AmiBlitz3.ab3@15649>    BSR get1bytemain
0002D1F0 <AmiBlitz3.ab3@15652>    CMP.b #"#",d0
0002D1F4 <AmiBlitz3.ab3@15653>    BNE 'ld1
0002D1F8 <AmiBlitz3.ab3@15654>    CMP.b #$22,(a5)
0002D1FC <AmiBlitz3.ab3@15655>    BNE 'ld1
0002D202 <AmiBlitz3.ab3@15656>    JSR addimmi
0002D206 <AmiBlitz3.ab3@15659>    CMP.b #$22,d0
0002D20A <AmiBlitz3.ab3@15660>    BNE 'l11
0002D210 <AmiBlitz3.ab3@15670>    NOT.w instringon
0002D212 <AmiBlitz3.ab3@15673>    TST.b d0
0002D216 <AmiBlitz3.ab3@15674>    BPL 'l10
0002D218 <AmiBlitz3.ab3@15675>    LSL.w #8,d0
0002D21A <AmiBlitz3.ab3@15676>    MOVE.b (a5)+,d0                      ; get blitzlib instruction with returnvalue(called in functions/statement)
0002D220 <AmiBlitz3.ab3@15677>    MOVE.l d0,lasttoken
0002D226 <AmiBlitz3.ab3@15678>    MOVE.w d0,lastchar
0002D22C <AmiBlitz3.ab3@15679>    CLR.l rightsidetype                  ; blitzlibs do currently no type check
0002D230 <AmiBlitz3.ab3@15681>   CMP.w #"(",D0
0002D234 <AmiBlitz3.ab3@15682>    BEQ.w checkcast2
0002D238 <AmiBlitz3.ab3@15683> nocast CMP.w #"{",D0
0002D23C <AmiBlitz3.ab3@15684>    BEQ.w JL_0_A410
0002D240 <AmiBlitz3.ab3@15685>   CMP.w #$2D,D0
0002D244 <AmiBlitz3.ab3@15686>    BEQ.w JL_0_A3DA
0002D248 <AmiBlitz3.ab3@15687>   CMP.w #-$7F77,D0
0002D24C <AmiBlitz3.ab3@15688>    BEQ.w JL_0_A428
0002D250 <AmiBlitz3.ab3@15689>   MOVEA.l forthsp(PC),A1
0002D256 <AmiBlitz3.ab3@15690>   CMPA.l #forthsp,A1
0002D25A <AmiBlitz3.ab3@15691>    BCC.w conmemerr
0002D260 <AmiBlitz3.ab3@15692>   MOVE.l destpointer,(A1)+
0002D266 <AmiBlitz3.ab3@15693>   MOVE.l hunkoffsetbase,(A1)+
0002D26C <AmiBlitz3.ab3@15694>   MOVE.l lasta6,(A1)+
0002D272 <AmiBlitz3.ab3@15695>   MOVE.w lasta6,(A1)+
0002D274 <AmiBlitz3.ab3@15696>   CLR.w (A1)+
0002D276 <AmiBlitz3.ab3@15697>   CLR.w (A1)+
0002D27C <AmiBlitz3.ab3@15698>   MOVE.l A1,forthsp
0002D28E <AmiBlitz3.ab3@15700>    !compare2
0002D292 <AmiBlitz3.ab3@15701>    BEQ.w JL_0_B224
0002D296 <AmiBlitz3.ab3@15702>   CMP.w #".",D0
0002D29A <AmiBlitz3.ab3@15703>    BEQ.w JL_0_B21E
0002D29E <AmiBlitz3.ab3@15704>   CMP.w #"#",D0
0002D2A2 <AmiBlitz3.ab3@15705>    BEQ.w get_constant
0002D2A6 <AmiBlitz3.ab3@15706>   CMP.w #"$",D0
0002D2AA <AmiBlitz3.ab3@15707>    BEQ.w get_hexconstant
0002D2AE <AmiBlitz3.ab3@15708>   CMP.w #"%",D0
0002D2B2 <AmiBlitz3.ab3@15709>    BEQ.w JL_0_A8C0
0002D2B6 <AmiBlitz3.ab3@15710>   CMP.w #-$7FD1,D0
0002D2BA <AmiBlitz3.ab3@15711>    BEQ.w _SizeOf
0002D2BE <AmiBlitz3.ab3@15712>   CMP.w #-$7F46,D0
0002D2C2 <AmiBlitz3.ab3@15713>    BEQ.w JL_0_A44E
0002D2C6 <AmiBlitz3.ab3@15714>   CMP.w #-$7F3B,D0
0002D2CA <AmiBlitz3.ab3@15715>    BEQ.w JL_0_A83C
0002D2CE <AmiBlitz3.ab3@15716>   CMP.w #-$7F3A,D0
0002D2D2 <AmiBlitz3.ab3@15717>    BEQ.w JL_0_A846
0002D2D8 <AmiBlitz3.ab3@15718>   MOVE.w constmode,D1
0002D2DC <AmiBlitz3.ab3@15719>    BEQ.w JL_0_A776
0002D2FE <AmiBlitz3.ab3@15720>    !compare1                                               ;bsr.w tstalpha
0002D302 <AmiBlitz3.ab3@15721>    BEQ.w JL_0_AF22
0002D306 <AmiBlitz3.ab3@15722>   CMP.w #$5F,D0
0002D30A <AmiBlitz3.ab3@15723>    BEQ.w JL_0_AF22
0002D30E <AmiBlitz3.ab3@15724>   CMP.w #$22,D0
0002D312 <AmiBlitz3.ab3@15725>    BEQ.w JL_0_AF00
0002D316 <AmiBlitz3.ab3@15726> BRA.w syntaxerr
0002D31C <AmiBlitz3.ab3@15728> checkcast2 JMP checkcast
0002D322 <AmiBlitz3.ab3@15731>   MOVE.w cfetchmode,D1
0002D326 <AmiBlitz3.ab3@15732>   BEQ.w JL_0_A784
0002D32A <AmiBlitz3.ab3@15733> BRA.w badconerr
0002D330 <AmiBlitz3.ab3@15736> JMP syntaxerropt4
0002D332 <AmiBlitz3.ab3@15740>   NOT.w -(A1)
0002D354 <AmiBlitz3.ab3@15741>   !compare1                                                ;bsr.w tstalpha
0002D358 <AmiBlitz3.ab3@15742>    BEQ.w JL_0_AF4C
0002D35C <AmiBlitz3.ab3@15743>   CMP.w #$2A,D0
0002D360 <AmiBlitz3.ab3@15744>    BEQ.w JL_0_AF4C
0002D364 <AmiBlitz3.ab3@15745>   CMP.w #$5C,D0
0002D368 <AmiBlitz3.ab3@15746>    BEQ.w JL_0_AF4C
0002D36C <AmiBlitz3.ab3@15747>   CMP.w #$22,D0
0002D370 <AmiBlitz3.ab3@15748>    BEQ.w JL_0_ADC0
0002D374 <AmiBlitz3.ab3@15749>   BTST #$F,D0
0002D378 <AmiBlitz3.ab3@15750>    BNE.w JL_0_AAF2
0002D37C <AmiBlitz3.ab3@15751>   CMP.w #"&",D0
0002D380 <AmiBlitz3.ab3@15752>    BEQ.w getvaraddr                                          ;jump to & address of var code
0002D384 <AmiBlitz3.ab3@15753>   CMP.w #"?",D0
0002D388 <AmiBlitz3.ab3@15754>    BEQ.w JL_0_AED4
0002D38C <AmiBlitz3.ab3@15757>   CMP.b #"@",d0
0002D390 <AmiBlitz3.ab3@15758>    BNE syntaxerr
0002D396 <AmiBlitz3.ab3@15759>   TST.b newsyntax
0002D39A <AmiBlitz3.ab3@15760>    BEQ JUMP_syntaxerropt4
0002D3A0 <AmiBlitz3.ab3@15761>   MOVE.w regnum,D1
0002D3A2 <AmiBlitz3.ab3@15762>   LSL.w #8,D1
0002D3A4 <AmiBlitz3.ab3@15763>   LSL.w #1,D1
0002D3A8 <AmiBlitz3.ab3@15764>   ORI.w #$203C,D1
0002D3AC <AmiBlitz3.ab3@15765>   BSR.w writeword
0002D3B0 <AmiBlitz3.ab3@15766>   CMP.b #$22,(a5)
0002D3B4 <AmiBlitz3.ab3@15767>    BNE syntaxerr
0002D3B6 <AmiBlitz3.ab3@15768>   ADDQ #1,a5
0002D3B8 <AmiBlitz3.ab3@15769>   MOVEQ #0,d0
0002D3BC <AmiBlitz3.ab3@15770>   CMP.b #1,d2
0002D3C0 <AmiBlitz3.ab3@15771>    BEQ 'l3b
0002D3C4 <AmiBlitz3.ab3@15772>   CMP.b #2,d2
0002D3C8 <AmiBlitz3.ab3@15773>    BEQ 'l2b
0002D3CC <AmiBlitz3.ab3@15774>   CMP.b #4,d2
0002D3D0 <AmiBlitz3.ab3@15775>    BEQ error_convert_types
0002D3D2 <AmiBlitz3.ab3@15776>   MOVE.b (a5)+,d0
0002D3D6 <AmiBlitz3.ab3@15777>   BEQ syntaxerr
0002D3DA <AmiBlitz3.ab3@15778>   CMP.b #$22,d0
0002D3DE <AmiBlitz3.ab3@15779>   BNE 'l1
0002D3E2 <AmiBlitz3.ab3@15780>     MOVE.b #0,d0
0002D3E6 <AmiBlitz3.ab3@15781> BRA 'do
0002D3E8 <AmiBlitz3.ab3@15784>   ASL.l #8,d0
0002D3EA <AmiBlitz3.ab3@15785>   MOVE.b (a5)+,d0
0002D3EE <AmiBlitz3.ab3@15786>   BEQ syntaxerr
0002D3F2 <AmiBlitz3.ab3@15787>   CMP.b #$22,d0
0002D3F6 <AmiBlitz3.ab3@15788>   BNE 'l2
0002D3FA <AmiBlitz3.ab3@15789>     MOVE.b #0,d0
0002D3FC <AmiBlitz3.ab3@15790>     ASR.l #8,d0
0002D400 <AmiBlitz3.ab3@15791> BRA 'do
0002D402 <AmiBlitz3.ab3@15794>   ASL.l #8,d0
0002D404 <AmiBlitz3.ab3@15797>   MOVE.b (a5)+,d0
0002D408 <AmiBlitz3.ab3@15798>    BEQ syntaxerr
0002D40C <AmiBlitz3.ab3@15799>    CMP.b #$22,d0
0002D410 <AmiBlitz3.ab3@15800>    BNE 'l3
0002D414 <AmiBlitz3.ab3@15801>    MOVE.b #0,d0
0002D416 <AmiBlitz3.ab3@15802>    ASR.l #8,d0
0002D41A <AmiBlitz3.ab3@15803> BRA 'do
0002D41C <AmiBlitz3.ab3@15806>   ASL.l #8,d0
0002D41E <AmiBlitz3.ab3@15809>   MOVE.b (a5)+,d0
0002D422 <AmiBlitz3.ab3@15810>    BEQ syntaxerr
0002D426 <AmiBlitz3.ab3@15811>    CMP.b #$22,d0
0002D42A <AmiBlitz3.ab3@15812>    BNE 'l4
0002D42E <AmiBlitz3.ab3@15813>    MOVE.b #0,d0
0002D430 <AmiBlitz3.ab3@15814>    ASR.l #8,d0
0002D434 <AmiBlitz3.ab3@15815> BRA 'do
0002D438 <AmiBlitz3.ab3@15818>    CMP.b #$22,(a5)+
0002D43C <AmiBlitz3.ab3@15819>    BNE JUMP_error4char
0002D43E <AmiBlitz3.ab3@15822>   MOVE.l d0,d1
0002D442 <AmiBlitz3.ab3@15823>     BSR writelong
0002D446 <AmiBlitz3.ab3@15824>     BSR get1bytemain
0002D448 <AmiBlitz3.ab3@15825> RTS
0002D44C <AmiBlitz3.ab3@15829>   BSR.w get1bytemain
0002D450 <AmiBlitz3.ab3@15830>   CMP.w #$2E,D0
0002D454 <AmiBlitz3.ab3@15831>    BEQ.b JL_0_A7F4
0002D45E <AmiBlitz3.ab3@15833>   MOVE.w oldqflag,instringon
0002D464 <AmiBlitz3.ab3@15834>   MOVEA.l lastsourcepos,A5
0002D466 <AmiBlitz3.ab3@15835>   MOVE.w D2,-(A7)
0002D46A <AmiBlitz3.ab3@15836>    BSR.w getparameter2
0002D46E <AmiBlitz3.ab3@15837>    BEQ.w syntaxerr
0002D474 <AmiBlitz3.ab3@15838>   LEA varbase,A2
0002D478 <AmiBlitz3.ab3@15839>    BSR.w findvariable
0002D47C <AmiBlitz3.ab3@15840>    BNE.w notypeerr
0002D480 <AmiBlitz3.ab3@15841>   MOVE.w $4(A2),D3
0002D482 <AmiBlitz3.ab3@15842>   EXT.l D3
0002D484 <AmiBlitz3.ab3@15843>   MOVE.w (A7)+,D2
0002D488 <AmiBlitz3.ab3@15844> BRA.w JL_0_B46E
0002D48A <AmiBlitz3.ab3@15848>   MOVE.w D2,-(A7)
0002D48E <AmiBlitz3.ab3@15849>    BSR.w getparameter2
0002D492 <AmiBlitz3.ab3@15850>    BEQ.w syntaxerr
0002D498 <AmiBlitz3.ab3@15851>   LEA newtypebase,A2
0002D49C <AmiBlitz3.ab3@15852>    BSR.w findtype
0002D4A0 <AmiBlitz3.ab3@15853>    BNE.w notypeerr
0002D4A2 <AmiBlitz3.ab3@15854>   MOVEQ.l #$00,D3
0002D4A6 <AmiBlitz3.ab3@15855>   CMP.w #$5C,D0
0002D4AA <AmiBlitz3.ab3@15856>    BNE.w JL_0_A832
0002D4AE <AmiBlitz3.ab3@15857>    BSR.w getparameter2
0002D4B2 <AmiBlitz3.ab3@15858>    BEQ.w syntaxerr
0002D4B6 <AmiBlitz3.ab3@15859>   LEA $4(A2),A2
0002D4BA <AmiBlitz3.ab3@15860>    BSR.w findvariable2
0002D4BE <AmiBlitz3.ab3@15861>    BNE.w noofferr
0002D4C2 <AmiBlitz3.ab3@15862>   MOVE.w $4(A2),D3
0002D4C6 <AmiBlitz3.ab3@15863> BRA.w JL_0_A836
0002D4CA <AmiBlitz3.ab3@15867>   MOVE.w $8(A2),D3
0002D4CC <AmiBlitz3.ab3@15870>   MOVE.w (A7)+,D2
0002D4D0 <AmiBlitz3.ab3@15871> BRA.w JL_0_B46E
0002D4D2 <AmiBlitz3.ab3@15875>   MOVEQ.l #-$01,D3
0002D4D6 <AmiBlitz3.ab3@15876>    BSR.w get1bytemain
0002D4DA <AmiBlitz3.ab3@15877> BRA.w JL_0_B46E
0002D4DC <AmiBlitz3.ab3@15881>   MOVEQ.l #$00,D3
0002D4E0 <AmiBlitz3.ab3@15882>    BSR.w get1bytemain
0002D4E4 <AmiBlitz3.ab3@15883> BRA.w JL_0_B46E
0002D4E8 <AmiBlitz3.ab3@15887>   CMP.w #$30,D0
0002D4EC <AmiBlitz3.ab3@15888>    BCS.w JL_0_A876
0002D4F0 <AmiBlitz3.ab3@15889>   CMP.w #$39,D0
0002D4F4 <AmiBlitz3.ab3@15890>    BLS.w JL_0_A874
0002D4F8 <AmiBlitz3.ab3@15891>   ANDI.w #$FFDF,D0
0002D4FC <AmiBlitz3.ab3@15892>   CMP.w #$46,D0
0002D500 <AmiBlitz3.ab3@15893>    BHI.w JL_0_A876
0002D504 <AmiBlitz3.ab3@15894>   CMP.w #$41,D0
0002D508 <AmiBlitz3.ab3@15895>    BCS.w JL_0_A876
0002D50A <AmiBlitz3.ab3@15898>    CMP.w D0,D0
0002D50C <AmiBlitz3.ab3@15901> RTS
0002D510 <AmiBlitz3.ab3@15905>   CMP.w #$31,D0
0002D514 <AmiBlitz3.ab3@15906>    BEQ.w JL_0_A884
0002D518 <AmiBlitz3.ab3@15907>   CMP.w #$30,D0
0002D51A <AmiBlitz3.ab3@15910> RTS
0002D51C <AmiBlitz3.ab3@15914>    MOVEQ #0,d0
0002D51E <AmiBlitz3.ab3@15915>    MOVE.b (a5)+,d0
0002D520 <AmiBlitz3.ab3@15916>    MOVE.b (a5)+,d0
0002D524 <AmiBlitz3.ab3@15917>    BSR ishex
0002D528 <AmiBlitz3.ab3@15918>    BNE syntaxerr
0002D52C <AmiBlitz3.ab3@15919>    SUBI.w #$30,D0
0002D530 <AmiBlitz3.ab3@15920>    CMP.w #$9,D0
0002D534 <AmiBlitz3.ab3@15921>    BLS.w 'l1
0002D536 <AmiBlitz3.ab3@15922>    SUBQ.w #7,D0
0002D538 <AmiBlitz3.ab3@15925>    MOVE.l d0,d1
0002D53A <AmiBlitz3.ab3@15926>    MOVE.b (a5)+,d0
0002D53E <AmiBlitz3.ab3@15927>      BSR ishex
0002D542 <AmiBlitz3.ab3@15928>     BNE syntaxerr
0002D544 <AmiBlitz3.ab3@15929>     LSL.l #4,d1
0002D548 <AmiBlitz3.ab3@15930>     SUBI.w #$30,D0
0002D54C <AmiBlitz3.ab3@15931>    CMP.w #$9,D0
0002D550 <AmiBlitz3.ab3@15932>    BLS.w 'l2
0002D552 <AmiBlitz3.ab3@15933>    SUBQ.w #7,D0
0002D554 <AmiBlitz3.ab3@15936>   ADD.l d1,d0
0002D556 <AmiBlitz3.ab3@15937> RTS
0002D55A <AmiBlitz3.ab3@15941>    BSR.w get1bytemain
0002D55E <AmiBlitz3.ab3@15942>    BSR.w ishex
0002D562 <AmiBlitz3.ab3@15943>    BNE.w syntaxerr
0002D564 <AmiBlitz3.ab3@15944>   MOVEQ.l #$00,D3
0002D568 <AmiBlitz3.ab3@15945>   CMP.w #5,d2
0002D56C <AmiBlitz3.ab3@15946>   BNE JL_0_A894
0002D572 <AmiBlitz3.ab3@15947>   CMP.l #newtype_double,a2
0002D576 <AmiBlitz3.ab3@15948>   BEQ 'doit
0002D57C <AmiBlitz3.ab3@15949>   CMP.l #newtype_float,a2
0002D580 <AmiBlitz3.ab3@15950>   BNE JL_0_A894
0002D588 <AmiBlitz3.ab3@15953>    fmove.s #0,fp0
0002D58E <AmiBlitz3.ab3@15955>   TST.b fpu
0002D592 <AmiBlitz3.ab3@15956>   BEQ JL_0_A894
0002D598 <AmiBlitz3.ab3@15957>   fmove.w #16,fp1
0002D59C <AmiBlitz3.ab3@15958>   fmul.x fp1,fp0
0002D5A0 <AmiBlitz3.ab3@15959>   SUBI.w #$30,D0
0002D5A4 <AmiBlitz3.ab3@15960>   CMP.w #$9,D0
0002D5A8 <AmiBlitz3.ab3@15961>    BLS.w JL_0_A8AEa
0002D5AA <AmiBlitz3.ab3@15962>   SUBQ.w #7,D0
0002D5AE <AmiBlitz3.ab3@15965>    fmove.w d0,fp1
0002D5B2 <AmiBlitz3.ab3@15966>    fadd.x fp1,fp0
0002D5B6 <AmiBlitz3.ab3@15967>    BSR.w get1bytemain
0002D5BA <AmiBlitz3.ab3@15968>    BSR.w ishex
0002D5BE <AmiBlitz3.ab3@15969>    BEQ.w JL_0_A894a
0002D5C2 <AmiBlitz3.ab3@15970> BRA.w nofpregload
0002D5C8 <AmiBlitz3.ab3@15974>   CMP.l #$10000000,D3
0002D5CC <AmiBlitz3.ab3@15975>    BCC.w overerr
0002D5CE <AmiBlitz3.ab3@15976>   LSL.l #4,D3
0002D5D2 <AmiBlitz3.ab3@15977>   SUBI.w #$30,D0
0002D5D6 <AmiBlitz3.ab3@15978>   CMP.w #$9,D0
0002D5DA <AmiBlitz3.ab3@15979>    BLS.w JL_0_A8AE
0002D5DC <AmiBlitz3.ab3@15980>   SUBQ.w #7,D0
0002D5DE <AmiBlitz3.ab3@15983>   OR.w D0,D3
0002D5E2 <AmiBlitz3.ab3@15984>    BSR.w get1bytemain
0002D5E6 <AmiBlitz3.ab3@15985>    BSR.w ishex
0002D5EA <AmiBlitz3.ab3@15986>    BEQ.w JL_0_A894
0002D5EE <AmiBlitz3.ab3@15987> BRA.w JL_0_B46E
0002D5F2 <AmiBlitz3.ab3@15991>    BSR.w get1bytemain
0002D5F6 <AmiBlitz3.ab3@15992>    BSR.w JL_0_A878
0002D5FA <AmiBlitz3.ab3@15993>    BNE.w syntaxerr
0002D5FC <AmiBlitz3.ab3@15994>    MOVEQ.l #$00,D3
0002D5FE <AmiBlitz3.ab3@15997>    LSL.l #1,D3
0002D602 <AmiBlitz3.ab3@15998>    BCS.w overerr
0002D606 <AmiBlitz3.ab3@15999>   SUBI.w #$30,D0
0002D608 <AmiBlitz3.ab3@16000>   OR.w D0,D3
0002D60C <AmiBlitz3.ab3@16001>    BSR.w get1bytemain
0002D610 <AmiBlitz3.ab3@16002>    BSR.w JL_0_A878
0002D614 <AmiBlitz3.ab3@16003>    BEQ.w JL_0_A8CE
0002D618 <AmiBlitz3.ab3@16004> BRA.w JL_0_B46E
0002D61A <AmiBlitz3.ab3@16008>    MOVE.w d2,-(A7)
0002D622 <AmiBlitz3.ab3@16009>    MOVE.b #0,automode
0002D626 <AmiBlitz3.ab3@16010>    CMP.b #"@",(a5)
0002D62A <AmiBlitz3.ab3@16011>    BNE 'l1
0002D62C <AmiBlitz3.ab3@16012>    ADDQ.l #1,a5
0002D634 <AmiBlitz3.ab3@16013>    MOVE.b #1,automode
0002D638 <AmiBlitz3.ab3@16014>    BSR getparameter2
0002D63C <AmiBlitz3.ab3@16015>    BSR findlabel2
0002D640 <AmiBlitz3.ab3@16016>    BNE 'addit
0002D644 <AmiBlitz3.ab3@16017> BRA errormsg_autocount
0002D648 <AmiBlitz3.ab3@16020>   BSR.w addlabelhash
0002D650 <AmiBlitz3.ab3@16021>   MOVE.l #$1,$4(A2)
0002D654 <AmiBlitz3.ab3@16022>   MOVEM.l a2/a5,-(a7)
0002D65A <AmiBlitz3.ab3@16023>   MOVE.w lastchar,-(a7)
0002D660 <AmiBlitz3.ab3@16024>   LEA autostorename,a5
0002D664 <AmiBlitz3.ab3@16025>   BSR getparameter2
0002D668 <AmiBlitz3.ab3@16026>   BSR findlabel2
0002D66C <AmiBlitz3.ab3@16027>   BEQ 'found
0002D670 <AmiBlitz3.ab3@16028>   BSR.w addlabelhash
0002D678 <AmiBlitz3.ab3@16029>   MOVE.l #$1,$4(A2)
0002D680 <AmiBlitz3.ab3@16030>   MOVE.l #0,8(a2)
0002D682 <AmiBlitz3.ab3@16033>    MOVE.w (a7)+,d0
0002D688 <AmiBlitz3.ab3@16034>    MOVE.w d0,lastchar
0002D68C <AmiBlitz3.ab3@16035>   MOVE.l 8(a2),d3
0002D694 <AmiBlitz3.ab3@16036>   ADD.l #1,8(a2)
0002D698 <AmiBlitz3.ab3@16037>   MOVEM.l (a7)+,a2/a5
0002D69C <AmiBlitz3.ab3@16038>   MOVE.l d3,8(a2)
0002D6A0 <AmiBlitz3.ab3@16039>   MOVE.l $8(A2),D3
0002D6A4 <AmiBlitz3.ab3@16040> BRA.l 'l3
0002D6A8 <AmiBlitz3.ab3@16043>   BSR.w getparameter2
0002D6AE <AmiBlitz3.ab3@16044>     TST.b incnif
0002D6B2 <AmiBlitz3.ab3@16045>     BEQ 'lc1
0002D6B6 <AmiBlitz3.ab3@16046>     BSR.w findlabel2
0002D6BA <AmiBlitz3.ab3@16047>     BNE 'l5
0002D6BC <AmiBlitz3.ab3@16048>     MOVEQ #1,d3
0002D6BE <AmiBlitz3.ab3@16049>     MOVE.w (A7)+,D2
0002D6C2 <AmiBlitz3.ab3@16050> BRA JL_0_B46E
0002D6C4 <AmiBlitz3.ab3@16053>   MOVEQ #0,d3
0002D6C6 <AmiBlitz3.ab3@16054>     MOVE.w (A7)+,D2
0002D6CA <AmiBlitz3.ab3@16055> BRA JL_0_B46E
0002D6CE <AmiBlitz3.ab3@16058>    BSR.w findlabel2
0002D6D2 <AmiBlitz3.ab3@16059>    BNE.w cnferr
0002D6DA <AmiBlitz3.ab3@16062>    CMPI.l #$1,$4(A2)
0002D6DE <AmiBlitz3.ab3@16063>    BNE.w cnferr
0002D6E2 <AmiBlitz3.ab3@16065>    MOVE.l $8(A2),D3
0002D6E4 <AmiBlitz3.ab3@16066>    MOVE.w (A7)+,D2
0002D6E8 <AmiBlitz3.ab3@16067> BRA.w JL_0_B46E
0002D6EE <AmiBlitz3.ab3@16071>   CLR.w vartype
0002D6F6 <AmiBlitz3.ab3@16072>   MOVE.b #3,peekaddrsize
0002D6FA <AmiBlitz3.ab3@16073>   BSR.w JL_0_A916
0002D700 <AmiBlitz3.ab3@16074>   MOVE.l a2,rightsidetype
0002D702 <AmiBlitz3.ab3@16075>   MOVEQ.l #$03,D2
0002D704 <AmiBlitz3.ab3@16076> RTS
0002D708 <AmiBlitz3.ab3@16080>    BSR.w get1bytemain
0002D71A <AmiBlitz3.ab3@16081>    !compare2
0002D71E <AmiBlitz3.ab3@16082>    BEQ andop2
0002D722 <AmiBlitz3.ab3@16083>    BSR.w getparameter
0002D726 <AmiBlitz3.ab3@16084>    BSR.w JL_0_8E3C
0002D72A <AmiBlitz3.ab3@16085>    BSR.w calcvar
0002D72E <AmiBlitz3.ab3@16086>   CMP.b #$7,D2
0002D732 <AmiBlitz3.ab3@16087>    BNE.w JL_0_A960
0002D736 <AmiBlitz3.ab3@16088>   BTST #$F,D2
0002D73A <AmiBlitz3.ab3@16089>    BNE.w JL_0_A94A
0002D740 <AmiBlitz3.ab3@16090>   MOVE.w D3,stamp2+2
0002D746 <AmiBlitz3.ab3@16091>   MOVE.l stamp2,D1
0002D74A <AmiBlitz3.ab3@16092>    BSR.w pokela5s
0002D74E <AmiBlitz3.ab3@16093> BRA.w JL_0_A978
0002D754 <AmiBlitz3.ab3@16097>   MOVE.w regnum,D1
0002D756 <AmiBlitz3.ab3@16098>   LSL.w #8,D1
0002D758 <AmiBlitz3.ab3@16099>   LSL.w #1,D1
0002D75E <AmiBlitz3.ab3@16100>   OR.w stamp,D1
0002D762 <AmiBlitz3.ab3@16101>    BSR.w writeword
0002D764 <AmiBlitz3.ab3@16102> RTS
0002D768 <AmiBlitz3.ab3@16106>   BTST #$F,D2
0002D76C <AmiBlitz3.ab3@16107>    BNE.w JL_0_A978
0002D772 <AmiBlitz3.ab3@16108>   MOVE.w D3,leaamp+2
0002D778 <AmiBlitz3.ab3@16109>   MOVE.l leaamp,D1
0002D77C <AmiBlitz3.ab3@16110>    BSR.w pokela5s
0002D782 <AmiBlitz3.ab3@16113>   MOVE.w regnum,D1
0002D784 <AmiBlitz3.ab3@16114>   LSL.w #8,D1
0002D786 <AmiBlitz3.ab3@16115>   LSL.w #1,D1
0002D78C <AmiBlitz3.ab3@16116>   OR.w leaamp2,D1
0002D790 <AmiBlitz3.ab3@16117> BRA.w writeword
0002D794 <AmiBlitz3.ab3@16121>   MOVE.w #$D200,D1
0002D798 <AmiBlitz3.ab3@16122>    BSR.w Atokejsr
0002D79A <AmiBlitz3.ab3@16123>   MOVEQ.l #$03,D2
0002D79C <AmiBlitz3.ab3@16124> RTS
0002D7A0 <AmiBlitz3.ab3@16128> addrcode:  Dc.b $20,$6D,$00,$00                            ;MOVEA.L $0000(A5),A0
0002D7A2 <AmiBlitz3.ab3@16129>            Dc.b $D0,$C0                                    ;ADDA.W  D0,A0
0002D7A4 <AmiBlitz3.ab3@16130>            Dc.b $20,$08                                    ;MOVE.L  A0,D0
0002D7A8 <AmiBlitz3.ab3@16136>    BSR.w get1bytemain
0002D7AA <AmiBlitz3.ab3@16137>   MOVE.w D0,D1
0002D7AE <AmiBlitz3.ab3@16138>    BPL.w syntaxerr
0002D7B0 <AmiBlitz3.ab3@16139>   MOVE.w D2,-(A7)
0002D7B4 <AmiBlitz3.ab3@16140>   BCLR #$F,D1
0002D7B8 <AmiBlitz3.ab3@16141>    BSR.w searchinstr
0002D7BC <AmiBlitz3.ab3@16142>   MOVE.l $12(A2),D0
0002D7C0 <AmiBlitz3.ab3@16143>   TST.w -$2(A2,D0.L)
0002D7C4 <AmiBlitz3.ab3@16144>    BEQ.w freeerr
0002D7C6 <AmiBlitz3.ab3@16145>   MOVE.w (A7)+,D2
0002D7C8 <AmiBlitz3.ab3@16146> RTS
0002D7CC <AmiBlitz3.ab3@16150>   MOVE.l $0(A5),D0
0002D7D0 <AmiBlitz3.ab3@16151>    BNE.b ucodeskip
0002D7D2 <AmiBlitz3.ab3@16152>   MOVEQ.l #-$01,D0
0002D7D6 <AmiBlitz3.ab3@16153> BRA.b usedcodef
0002D7DA <AmiBlitz3.ab3@16156>   SUB.l $0(A5),D0
0002D7DC <AmiBlitz3.ab3@16159>   LSR.w #8,D0
0002D7E0 <AmiBlitz3.ab3@16164>    MOVE.l $0(A5),D0
0002D7E4 <AmiBlitz3.ab3@16165>    BNE.b ucodeskip2
0002D7E6 <AmiBlitz3.ab3@16166>   MOVEQ.l #-$01,D0
0002D7EA <AmiBlitz3.ab3@16167> BRA.b usedcode2f
0002D7EE <AmiBlitz3.ab3@16170>   SUB.l $0(A5),D0                                          ;usedcode2
0002D7F0 <AmiBlitz3.ab3@16171>   LSR.w #8,D0
0002D7F2 <AmiBlitz3.ab3@16174>   LSR.w #8,D0
0002D7F4 <AmiBlitz3.ab3@16179>   MOVE.l D0,-(A7)
0002D7F6 <AmiBlitz3.ab3@16182>   MOVE.l (A7)+,D0
0002D7F8 <AmiBlitz3.ab3@16185>   MOVE.l D0,D0
0002D7FC <AmiBlitz3.ab3@16191>   BSR.w JL_0_A9A0
0002D800 <AmiBlitz3.ab3@16193>   MOVE.w -$2(A2,D0.L),D3
0002D804 <AmiBlitz3.ab3@16194>   CMP.w #$9,D3
0002D808 <AmiBlitz3.ab3@16195>    BCC.w doused__skip
0002D80C <AmiBlitz3.ab3@16199>   LEA usedcode(PC),A0
0002D810 <AmiBlitz3.ab3@16200>   LEA usedcodef(PC),A1
0002D816 <AmiBlitz3.ab3@16202>   ANDI.w #$F1FF,$E+4(A0)                                   ;and #$f1ff,ucodediv-usedcode(a0) org source
0002D81A <AmiBlitz3.ab3@16203>   ANDI.w #$7,D3
0002D81C <AmiBlitz3.ab3@16204>   LSL.w #8,D3
0002D81E <AmiBlitz3.ab3@16205>   LSL.w #1,D3
0002D822 <AmiBlitz3.ab3@16206>   OR.w D3,$E+4(A0)                                         ;or  d3,ucodediv-usedcode(a0) org source
0002D826 <AmiBlitz3.ab3@16207> BRA.w doused__skip2
0002D82A <AmiBlitz3.ab3@16212>   LEA usedcode2(PC),A0
0002D82E <AmiBlitz3.ab3@16213>   LEA usedcode2f(PC),A1
0002D834 <AmiBlitz3.ab3@16215>   ANDI.w #$F1FF,$10+4(A0)                                  ;and #$f1ff,ucodediv2-usedcode2(a0) org source
0002D836 <AmiBlitz3.ab3@16216>   SUBQ.w #8,D3
0002D838 <AmiBlitz3.ab3@16217>   LSL.w #8,D3
0002D83A <AmiBlitz3.ab3@16218>   LSL.w #1,D3
0002D83E <AmiBlitz3.ab3@16219>   OR.w D3,$10+4(A0)                                        ;or  d3,ucodediv2-usedcode2(a0) org source
0002D842 <AmiBlitz3.ab3@16222>   MOVE.w -$6(A2,D0.L),D3
0002D846 <AmiBlitz3.ab3@16223>   MOVE.w D3,$C+4(A0)                                       ;move d3,ucodeskip-usedcode+2(a0) org source
0002D848 <AmiBlitz3.ab3@16224>   ADDQ.w #4,D3
0002D84C <AmiBlitz3.ab3@16225>   MOVE.w D3,$2(A0)
0002D852 <AmiBlitz3.ab3@16226>   MOVE.w regnum,D1
0002D856 <AmiBlitz3.ab3@16227>    BEQ.w doused__skip3
0002D85A <AmiBlitz3.ab3@16228>   MOVE.w usedprep(PC),D1
0002D85E <AmiBlitz3.ab3@16229>    BSR.w writeword
0002D862 <AmiBlitz3.ab3@16232>   BSR.w pokecode
0002D868 <AmiBlitz3.ab3@16233>   MOVE.w regnum,D1
0002D86C <AmiBlitz3.ab3@16234>    BEQ.w doused__skip4
0002D86E <AmiBlitz3.ab3@16235>   LSL.w #8,D1
0002D870 <AmiBlitz3.ab3@16236>   LSL.w #1,D1
0002D874 <AmiBlitz3.ab3@16237>   OR.w usedfix(PC),D1
0002D878 <AmiBlitz3.ab3@16238>    BSR.w writeword
0002D87C <AmiBlitz3.ab3@16239>   MOVE.w useddone(PC),D1
0002D880 <AmiBlitz3.ab3@16240>    BSR.w writeword
0002D882 <AmiBlitz3.ab3@16243>    MOVEQ.l #$02,D2
0002D886 <AmiBlitz3.ab3@16244> BRA.w get1bytemain
0002D88A <AmiBlitz3.ab3@16252>    BSR.w JL_0_A9A0
0002D88C <AmiBlitz3.ab3@16254>   MOVEQ.l #$00,D3
0002D890 <AmiBlitz3.ab3@16255>   MOVE.w -$4(A2,D0.L),D3
0002D894 <AmiBlitz3.ab3@16256>    BSR.w get1bytemain
0002D898 <AmiBlitz3.ab3@16257> BRA.w JL_0_B46E
0002D89C <AmiBlitz3.ab3@16264>    BSR.w get1bytemain
0002D89E <AmiBlitz3.ab3@16265>   MOVE.w D0,-(A7)
0002D8A2 <AmiBlitz3.ab3@16266>    BSR.w get1bytemain
0002D8A6 <AmiBlitz3.ab3@16267>   CMP.w #$28,D0
0002D8AA <AmiBlitz3.ab3@16268>    BNE.w syntaxerr
0002D8AC <AmiBlitz3.ab3@16269>   MOVE.w (A7)+,D0
0002D8B0 <AmiBlitz3.ab3@16270>    BSR.w JL_0_C340
0002D8B4 <AmiBlitz3.ab3@16271>    BSR.w reget
0002D8B8 <AmiBlitz3.ab3@16272>   CMP.w #$29,D0
0002D8BC <AmiBlitz3.ab3@16273>    BNE.w syntaxerr
0002D8C0 <AmiBlitz3.ab3@16277>   LEA addrcode(PC),A0
0002D8C4 <AmiBlitz3.ab3@16278>   LEA addrcodef(PC),A1
0002D8CA <AmiBlitz3.ab3@16279>   MOVE.w -$6(A2),$2(A0)
0002D8CE <AmiBlitz3.ab3@16280>   MOVE.w $4(A0),D1
0002D8D2 <AmiBlitz3.ab3@16281>   ANDI.w #$FFF8,D1
0002D8D8 <AmiBlitz3.ab3@16282>   OR.w regnum,D1
0002D8DC <AmiBlitz3.ab3@16283>   MOVE.w D1,$4(A0)
0002D8E0 <AmiBlitz3.ab3@16284>   MOVE.w $6(A0),D1
0002D8E4 <AmiBlitz3.ab3@16285>   ANDI.w #$F1FF,D1
0002D8EA <AmiBlitz3.ab3@16286>   MOVE.w regnum,D0
0002D8EC <AmiBlitz3.ab3@16287>   LSL.w #8,D0
0002D8EE <AmiBlitz3.ab3@16288>   LSL.w #1,D0
0002D8F0 <AmiBlitz3.ab3@16289>   OR.w D0,D1
0002D8F4 <AmiBlitz3.ab3@16290>   MOVE.w D1,$6(A0)
0002D8F8 <AmiBlitz3.ab3@16291>    BSR.w pokecode
0002D8FA <AmiBlitz3.ab3@16292>   MOVEQ.l #$03,D2
0002D8FE <AmiBlitz3.ab3@16293> BRA.w get1bytemain
0002D902 <AmiBlitz3.ab3@16297>   CMP.w #-$7F4D,D0
0002D906 <AmiBlitz3.ab3@16298>    BHI.w JL_0_AAFE
0002D90A <AmiBlitz3.ab3@16299> BRA.w syntaxerr
0002D90E <AmiBlitz3.ab3@16306> .do_null   CMP.w #$b581,d0
0002D912 <AmiBlitz3.ab3@16307>    BNE 'nonull
0002D918 <AmiBlitz3.ab3@16308>    MOVE.l d0,lastinstruction
0002D91C <AmiBlitz3.ab3@16309>    MOVE.w #$7000,d1                                            ;asm instr moveq #0,dx
0002D922 <AmiBlitz3.ab3@16310>    MOVE.w regnum,d0
0002D924 <AmiBlitz3.ab3@16311>    ASL.l #7,d0
0002D926 <AmiBlitz3.ab3@16312>    ASL.l #2,d0
0002D928 <AmiBlitz3.ab3@16313>    OR.l d0,d1
0002D92C <AmiBlitz3.ab3@16314>    BSR writeword
0002D932 <AmiBlitz3.ab3@16315>    JSR get1bytemain
0002D934 <AmiBlitz3.ab3@16316>    RTS
0002D938 <AmiBlitz3.ab3@16318> 'nonull CMP.w #$c982,d0
0002D93C <AmiBlitz3.ab3@16319>        BNE nonew_
0002D93E <AmiBlitz3.ab3@16321>   MOVE.l a5,-(a7)
0002D944 <AmiBlitz3.ab3@16322>   MOVE.w lastchar,-(a7)
0002D94A <AmiBlitz3.ab3@16323>   JSR get1bytemain
0002D94E <AmiBlitz3.ab3@16324>   CMP.w #"(",d0                                             ; use oldcode
0002D952 <AmiBlitz3.ab3@16325>   BNE 'newcode
0002D958 <AmiBlitz3.ab3@16326>   JSR get1bytemain
0002D95C <AmiBlitz3.ab3@16327>   CMP.w #")",d0
0002D960 <AmiBlitz3.ab3@16328>   BEQ 'newcode
0002D966 <AmiBlitz3.ab3@16329>   MOVE.w (a7)+,lastchar
0002D968 <AmiBlitz3.ab3@16330>   MOVE.l (a7)+,a5
0002D96E <AmiBlitz3.ab3@16331>   MOVE.w lastchar,d0
0002D972 <AmiBlitz3.ab3@16332>   BRA nonew_
0002D974 <AmiBlitz3.ab3@16333> 'newcode  MOVE.l a0,-(a7)
0002D97A <AmiBlitz3.ab3@16334>   TST.b blitzparloop
0002D97E <AmiBlitz3.ab3@16335>   BNE 'err
0002D984 <AmiBlitz3.ab3@16336>   TST.b funcparloop
0002D988 <AmiBlitz3.ab3@16337>   BNE 'err
0002D98C <AmiBlitz3.ab3@16338>   BRA 'ok
0002D992 <AmiBlitz3.ab3@16339> 'err JMP errornewnotincalls
0002D998 <AmiBlitz3.ab3@16340> 'ok  MOVE.l #$203c0000,d1
0002D99C <AmiBlitz3.ab3@16341>   BSR writelong                                            ; 68k asm move.l #$xx,d0
0002D99E <AmiBlitz3.ab3@16342>   MOVEQ #0,d1
0002D9A2 <AmiBlitz3.ab3@16343>   MOVE.w 8(a0),d1
0002D9A6 <AmiBlitz3.ab3@16344>   BSR writeword
0002D9AA <AmiBlitz3.ab3@16345>   MOVE.w #$7200,d1                                         ; 68k asm "moveq #0,d1"
0002D9AE <AmiBlitz3.ab3@16346>   BSR writeword
0002D9B2 <AmiBlitz3.ab3@16347>   MOVE.w #$C002,D1                                         ;call function to alloc global mem
0002D9B6 <AmiBlitz3.ab3@16348>   BSR.w tokejsr2
0002D9B8 <AmiBlitz3.ab3@16349>   MOVE.l (a7)+,a0
0002D9BA <AmiBlitz3.ab3@16350>   ADDQ.l #6,a7                      ; a5 need not restore
0002D9BE <AmiBlitz3.ab3@16351>   CMP.w #")",d0
0002D9C2 <AmiBlitz3.ab3@16352>   BNE 'nobracket
0002D9C8 <AmiBlitz3.ab3@16353>   JSR get1bytemain
0002D9CA <AmiBlitz3.ab3@16354> 'nobracket  RTS
0002D9CE <AmiBlitz3.ab3@16356> nonew_  CMP.w #-$7F4A,D0
0002D9D2 <AmiBlitz3.ab3@16357>    BEQ.w JL_0_A98C
0002D9D6 <AmiBlitz3.ab3@16358>   CMP.w #-$7F48,D0
0002D9DA <AmiBlitz3.ab3@16359>    BEQ.w doaddr
0002D9DE <AmiBlitz3.ab3@16360>   CMP.w #-$7F3C,D0
0002D9E2 <AmiBlitz3.ab3@16361>    BEQ.w domaximum
0002D9E6 <AmiBlitz3.ab3@16362>   CMP.w #-$7F2F,D0
0002D9EA <AmiBlitz3.ab3@16363>    BEQ.w doused
0002D9EC <AmiBlitz3.ab3@16364>   MOVE.w D2,-(A7)
0002D9EE <AmiBlitz3.ab3@16365>   MOVE.w D0,D1
0002D9F2 <AmiBlitz3.ab3@16366>   BCLR #$F,D1
0002D9F6 <AmiBlitz3.ab3@16368>    BSR.w searchinstr
0002D9F8 <AmiBlitz3.ab3@16369>   MOVE.w (A3),D1
0002D9FC <AmiBlitz3.ab3@16370>   BTST #$1,D1
0002DA00 <AmiBlitz3.ab3@16371>    BEQ.w noreturn_                                         ;syntax error noreturn
0002DA04 <AmiBlitz3.ab3@16372>   BTST #$2,D1
0002DA08 <AmiBlitz3.ab3@16373>    BNE.w JL_0_AC1A
0002DA0A <AmiBlitz3.ab3@16374>   LSR.w #8,D1
0002DA10 <AmiBlitz3.ab3@16375>   BTST #$3,$1(A3)
0002DA14 <AmiBlitz3.ab3@16376>    BEQ.w JL_0_AB4C
0002DA1A <AmiBlitz3.ab3@16377>    JSR AJL_0_498A
0002DA20 <AmiBlitz3.ab3@16380>    CLR.l rightsidetype
0002DA22 <AmiBlitz3.ab3@16381>    MOVE.w D1,-(A7)                                         ;is library instruction
0002DA26 <AmiBlitz3.ab3@16382>   CMP.w #$7,D1
0002DA2A <AmiBlitz3.ab3@16383>    BNE.w JL_0_AB5E
0002DA2C <AmiBlitz3.ab3@16384>   MOVE.l A2,-(A7)
0002DA30 <AmiBlitz3.ab3@16385>    BSR.w makesbase
0002DA32 <AmiBlitz3.ab3@16386>   MOVEA.l (A7)+,A2
0002DA36 <AmiBlitz3.ab3@16389>     BSR.w JL_0_AFA2
0002DA38 <AmiBlitz3.ab3@16390>   MOVE.w D3,-(A7)
0002DA3C <AmiBlitz3.ab3@16391>    BSR.w get1bytemain
0002DA3E <AmiBlitz3.ab3@16392>   MOVEQ.l #$00,D1
0002DA42 <AmiBlitz3.ab3@16393>   CMP.w #$28,D0
0002DA46 <AmiBlitz3.ab3@16394>    BNE.w JL_0_AB80
0002DA4C <AmiBlitz3.ab3@16395>    JSR JL_0_66F6
0002DA4E <AmiBlitz3.ab3@16396>   TST.w D1
0002DA52 <AmiBlitz3.ab3@16397>    BEQ.w syntaxerr
0002DA56 <AmiBlitz3.ab3@16398> BRA.w JL_0_AB84
0002DA60 <AmiBlitz3.ab3@16403>   MOVE.w oldqflag,instringon
0002DA66 <AmiBlitz3.ab3@16404>   MOVEA.l lastsourcepos,A5
0002DA6C <AmiBlitz3.ab3@16407>    MOVE.w regnum,-(A7)
0002DA76 <AmiBlitz3.ab3@16408>    MOVE.w regnum,regnumstore
0002DA7C <AmiBlitz3.ab3@16409>    TST.b fpu
0002DA80 <AmiBlitz3.ab3@16410>             BEQ 'nofloat
0002DA86 <AmiBlitz3.ab3@16411>             CMP.w #$ffff,28(a3)
0002DA8A <AmiBlitz3.ab3@16412>             BNE 'nofloat
0002DA90 <AmiBlitz3.ab3@16413>             CMP.w #$3c01,34(a3)                            ;val do nofpu stuff
0002DA94 <AmiBlitz3.ab3@16414>             BEQ 'nofloat
0002DA9A <AmiBlitz3.ab3@16415>             CMP.w #$3c02,34(a3)                            ;int skip
0002DA9E <AmiBlitz3.ab3@16416>             BEQ 'quick
0002DAA2 <AmiBlitz3.ab3@16417>             CMP.b #5,(a3)
0002DAA6 <AmiBlitz3.ab3@16418>             BNE 'nofloat
0002DAAC <AmiBlitz3.ab3@16421>             CLR.l load_var_addr
0002DAB0 <AmiBlitz3.ab3@16422> BRA 'isfpu
0002DAB6 <AmiBlitz3.ab3@16425>    CLR.w regnum
0002DAB8 <AmiBlitz3.ab3@16428>    MOVE.w D1,-(A7)
0002DABE <AmiBlitz3.ab3@16429>   BTST #$3,$1(A3)
0002DAC2 <AmiBlitz3.ab3@16430>    BEQ.w JL_0_ABB0
0002DAC6 <AmiBlitz3.ab3@16449>   MOVE.w $6(A7),D1
0002DACC <AmiBlitz3.ab3@16450>   MOVE.w d1,peeksize
0002DAD0 <AmiBlitz3.ab3@16460>   ORI.w #$7000,D1
0002DAD4 <AmiBlitz3.ab3@16461>   BSR.w writeword                                          ;write peekmode
0002DADA <AmiBlitz3.ab3@16464>   ADDQ.w #1,regnum
0002DADC <AmiBlitz3.ab3@16465>   MOVE.w (A7),D1
0002DAE4 <AmiBlitz3.ab3@16468>   MOVE.w 2(a7),tempregnum
0002DAEA <AmiBlitz3.ab3@16469>   MOVE.w parnum,-(a7)                                       ;7.2014 parnum need store to allow functioncall in parameter >6
0002DAF0 <AmiBlitz3.ab3@16470>   CLR.w parnum                                              ;7.2014
0002DAF6 <AmiBlitz3.ab3@16471>   JSR JL_0_4878                                             ;write code of blitzfunc
0002DAFC <AmiBlitz3.ab3@16472>   MOVE.w (a7)+,parnum                                       ;7.2014 new restore parnum
0002DAFE <AmiBlitz3.ab3@16473>   TST.w (A7)+
0002DB02 <AmiBlitz3.ab3@16474>   BEQ.w JL_0_ABC6
0002DB06 <AmiBlitz3.ab3@16475>   CMP.w #")",D0                                             ; check if ) here for correct end of blitzlib function call
0002DB0A <AmiBlitz3.ab3@16476>   BNE.w errorbracketmiss                                    ; was syntax error
0002DB10 <AmiBlitz3.ab3@16477>   CLR.l lasttoken
0002DB14 <AmiBlitz3.ab3@16478>   BSR.w get1bytemain
0002DB16 <AmiBlitz3.ab3@16481>    MOVE.w (A7)+,D1
0002DB1C <AmiBlitz3.ab3@16482>    MOVE.w D1,regnum
0002DB20 <AmiBlitz3.ab3@16483>    BEQ.w JL_0_ABDE
0002DB26 <AmiBlitz3.ab3@16484>    CMP.w #$3c01,24(a2)                                     ;val skipped
0002DB2A <AmiBlitz3.ab3@16485>    BNE 'noval
0002DB30 <AmiBlitz3.ab3@16486>    TST.b fpu
0002DB34 <AmiBlitz3.ab3@16487>    BEQ 'noval
0002DB3A <AmiBlitz3.ab3@16488>    CLR.l load_var_addr
0002DB3C <AmiBlitz3.ab3@16489>    MOVEQ #0,d1
0002DB42 <AmiBlitz3.ab3@16490>    MOVE.w regnum,d1
0002DB44 <AmiBlitz3.ab3@16491>    LSL.l #7,d1
0002DB4A <AmiBlitz3.ab3@16492>    OR.l #$f2000000,d1
0002DB4E <AmiBlitz3.ab3@16493>    BSR writelong
0002DB52 <AmiBlitz3.ab3@16494> BRA JL_0_ABDE
0002DB58 <AmiBlitz3.ab3@16498>    CMP.w #$3c02,24(a2)                                     ;int skipped
0002DB5C <AmiBlitz3.ab3@16499>    BEQ 'quick
0002DB60 <AmiBlitz3.ab3@16500>    CMP.b #5,d2
0002DB64 <AmiBlitz3.ab3@16501>    BNE 'nofpu
0002DB6A <AmiBlitz3.ab3@16502>    TST.b fpu
0002DB6E <AmiBlitz3.ab3@16503>    BEQ 'nofpu
0002DB74 <AmiBlitz3.ab3@16508>    CLR.l load_var_addr
0002DB78 <AmiBlitz3.ab3@16509> BRA JL_0_ABDE
0002DB7A <AmiBlitz3.ab3@16512>   LSL.w #8,D1
0002DB7C <AmiBlitz3.ab3@16513>   LSL.w #1,D1
0002DB80 <AmiBlitz3.ab3@16514>   ORI.w #$2000,D1
0002DB84 <AmiBlitz3.ab3@16515>   BSR.w writeword                                          ;write move.l d0,dx
0002DB8A <AmiBlitz3.ab3@16516>   TST.b fpu
0002DB8E <AmiBlitz3.ab3@16517>   BEQ JL_0_ABDE
0002DB90 <AmiBlitz3.ab3@16518>   MOVEQ #0,d1
0002DB96 <AmiBlitz3.ab3@16519>   MOVE.w regnum,d1
0002DB98 <AmiBlitz3.ab3@16520>   LSL.l #7,d1
0002DB9E <AmiBlitz3.ab3@16521>   OR.l #$f2000000,d1
0002DBA0 <AmiBlitz3.ab3@16525>        MOVE.w (A7)+,D3
0002DBA4 <AmiBlitz3.ab3@16526>        BEQ.w JL_0_ABFC
0002DBAA <AmiBlitz3.ab3@16527>        TST.b fpu
0002DBAE <AmiBlitz3.ab3@16528>        BEQ 'nofpu
0002DBB0 <AmiBlitz3.ab3@16529>       MOVE.l d0,-(a7)
0002DBB2 <AmiBlitz3.ab3@16530>        MOVE.l a0,-(a7)
0002DBB8 <AmiBlitz3.ab3@16531>        MOVE.l stacktrack,d1
0002DBBE <AmiBlitz3.ab3@16532>        LEA fpustackbase,a0
0002DBC6 <AmiBlitz3.ab3@16533>        MOVE.w 0(a0,d1),regmask
0002DBC8 <AmiBlitz3.ab3@16534>        MOVE.l (a7)+,a0
0002DBCC <AmiBlitz3.ab3@16535>       MOVE.w #8,d0
0002DBD0 <AmiBlitz3.ab3@16538>       BEQ 'ready
0002DBD6 <AmiBlitz3.ab3@16539>       BTST d0,regmask
0002DBDA <AmiBlitz3.ab3@16540>       BEQ 'noa7
0002DBDC <AmiBlitz3.ab3@16541>       MOVEQ #0,d1
0002DBDE <AmiBlitz3.ab3@16542>       MOVE.w d0,d1
0002DBE0 <AmiBlitz3.ab3@16543>       SUBQ.w #1,d1
0002DBE2 <AmiBlitz3.ab3@16544>       ASL #7,d1
0002DBE8 <AmiBlitz3.ab3@16546>       OR.l #$f21f5400,d1                                   ;fmove.d (a7)+
0002DBEC <AmiBlitz3.ab3@16547>       BSR writelong
0002DBF2 <AmiBlitz3.ab3@16548>       SUBQ.l #2,stacktrack
0002DBF4 <AmiBlitz3.ab3@16551>       SUBQ.w #1,d0
0002DBF8 <AmiBlitz3.ab3@16552>       BNE 'loop
0002DBFA <AmiBlitz3.ab3@16555>       MOVE.l (a7)+,d0
0002DC00 <AmiBlitz3.ab3@16556>       SUBQ.l #2,stacktrack                                 ;int track
0002DC04 <AmiBlitz3.ab3@16559>    MOVE.w #$4CDF,D1
0002DC08 <AmiBlitz3.ab3@16560>    BSR.w writeword                                         ;write movem.l (a7)+,
0002DC0A <AmiBlitz3.ab3@16561>   MOVEQ.l #$00,D1
0002DC0C <AmiBlitz3.ab3@16562>   MOVEQ.l #$0F,D4
0002DC0E <AmiBlitz3.ab3@16565>     LSL.w #1,D3
0002DC10 <AmiBlitz3.ab3@16566>     ROXR.w #1,D1
0002DC14 <AmiBlitz3.ab3@16567>   DBF D4,JL_0_ABF0
0002DC18 <AmiBlitz3.ab3@16569>    BSR.w writeword
0002DC1E <AmiBlitz3.ab3@16570>    TST.b fast
0002DC22 <AmiBlitz3.ab3@16571>    BEQ JL_0_ABFC
0002DC28 <AmiBlitz3.ab3@16572>    TST.w regnum
0002DC2C <AmiBlitz3.ab3@16573>    BEQ JL_0_ABFC
0002DC32 <AmiBlitz3.ab3@16574>    CMP.w #$3c0e,$1c(a3)                                    ;true
0002DC36 <AmiBlitz3.ab3@16575>    BNE 'l1
0002DC3C <AmiBlitz3.ab3@16576>    MOVE.w regnum,d1
0002DC3E <AmiBlitz3.ab3@16577>    ASL.l #8,d1
0002DC40 <AmiBlitz3.ab3@16578>    ASL.l #1,d1
0002DC44 <AmiBlitz3.ab3@16579>    OR.w #$70ff,d1
0002DC4E <AmiBlitz3.ab3@16580>    SUB.l #12,destpointer
0002DC52 <AmiBlitz3.ab3@16581>    BSR writeword
0002DC58 <AmiBlitz3.ab3@16584>   CMP.w #$3c0f,$1c(a3)                                     ;false
0002DC5C <AmiBlitz3.ab3@16585>    BNE 'l2
0002DC62 <AmiBlitz3.ab3@16586>     MOVE.w regnum,d1
0002DC64 <AmiBlitz3.ab3@16587>     ASL.l #8,d1
0002DC66 <AmiBlitz3.ab3@16588>     ASL.l #1,d1
0002DC6A <AmiBlitz3.ab3@16589>     OR.w #$7000,d1
0002DC74 <AmiBlitz3.ab3@16590>     SUB.l #12,destpointer
0002DC78 <AmiBlitz3.ab3@16591>     BSR writeword
0002DC7A <AmiBlitz3.ab3@16595>    MOVE.w (A7)+,D2
0002DC7E <AmiBlitz3.ab3@16596>   CMP.w #$7,D2                                             ;destination var type
0002DC82 <AmiBlitz3.ab3@16597>    BNE.w JL_0_AC16
0002DC88 <AmiBlitz3.ab3@16598>   MOVE.w putstlen,D1
0002DC8E <AmiBlitz3.ab3@16599>   OR.w regnum,D1
0002DC92 <AmiBlitz3.ab3@16600>    BSR.w writeword
0002DC96 <AmiBlitz3.ab3@16603> BRA.w JL_0_AF66
0002DC9A <AmiBlitz3.ab3@16608>   MOVE.w $6(A3),D1
0002DC9E <AmiBlitz3.ab3@16609>    BSR.w uselib
0002DCA2 <AmiBlitz3.ab3@16610>    BSR.w JL_0_AD40
0002DCA4 <AmiBlitz3.ab3@16611>   MOVE.l D4,D1
0002DCA6 <AmiBlitz3.ab3@16612>   MOVE.l D5,-(A7)
0002DCAA <AmiBlitz3.ab3@16613>    BSR.w JL_0_AD38
0002DCAE <AmiBlitz3.ab3@16614>   MOVE.w $A(A1),-(A7)
0002DCB0 <AmiBlitz3.ab3@16615>   ADDQ.w #8,A3
0002DCB2 <AmiBlitz3.ab3@16616>   MOVE.w (A3)+,-(A7)
0002DCB4 <AmiBlitz3.ab3@16617>   MOVE.l A3,-(A7)
0002DCB8 <AmiBlitz3.ab3@16618>    BSR.w get1bytemain
0002DCBA <AmiBlitz3.ab3@16619>   MOVE.w D0,-(A7)
0002DCBC <AmiBlitz3.ab3@16620>   MOVEQ.l #$00,D3
0002DCC2 <AmiBlitz3.ab3@16621>   JSR checka4a5
0002DCC4 <AmiBlitz3.ab3@16623>   MOVE.b (A3)+,D1
0002DCC8 <AmiBlitz3.ab3@16624>    BMI.w JL_0_AC6A
0002DCCA <AmiBlitz3.ab3@16625>   MOVEQ.l #$03,D2
0002DCCC <AmiBlitz3.ab3@16626>   ADDQ.w #1,D3
0002DCD0 <AmiBlitz3.ab3@16627>   MOVEM.l D3/A3,-(A7)
0002DCD6 <AmiBlitz3.ab3@16628>   MOVE.b funcparloop,-(a7)
0002DCDC <AmiBlitz3.ab3@16629>   CLR.b funcparloop
0002DCE2 <AmiBlitz3.ab3@16630>   MOVE.b blitzparloop,-(a7)
0002DCEA <AmiBlitz3.ab3@16631>   MOVE.b #1,blitzparloop
0002DCF0 <AmiBlitz3.ab3@16632>   MOVE.l lasttoken,-(a7)
0002DCF6 <AmiBlitz3.ab3@16633>   MOVE.l leftsidetype,-(a7)
0002DCFC <AmiBlitz3.ab3@16634>   MOVE.l rightsidetype,-(a7)
0002DD00 <AmiBlitz3.ab3@16635>   BSR.w peval
0002DD06 <AmiBlitz3.ab3@16636>   MOVE.l (a7)+,rightsidetype
0002DD0C <AmiBlitz3.ab3@16637>   MOVE.l (a7)+,leftsidetype
0002DD12 <AmiBlitz3.ab3@16638>   MOVE.l (a7)+,lasttoken
0002DD18 <AmiBlitz3.ab3@16639>   MOVE.b (a7)+,blitzparloop
0002DD1E <AmiBlitz3.ab3@16640>   MOVE.b (a7)+,funcparloop
0002DD24 <AmiBlitz3.ab3@16641>   SUBQ.w #4,a2offset
0002DD28 <AmiBlitz3.ab3@16642>   MOVEM.l (A7)+,D3/A3
0002DD2C <AmiBlitz3.ab3@16643>   CMP.w #$2C,D0
0002DD30 <AmiBlitz3.ab3@16644>    BEQ.w JL_0_AC40
0002DD32 <AmiBlitz3.ab3@16645>   TST.b (A3)
0002DD36 <AmiBlitz3.ab3@16646>    BPL.w syntaxerr
0002DD38 <AmiBlitz3.ab3@16649>   MOVE.w (A7)+,D1
0002DD3C <AmiBlitz3.ab3@16650>    BSR.w JL_0_AD04
0002DD3E <AmiBlitz3.ab3@16651>   MOVEA.l (A7)+,A3
0002DD40 <AmiBlitz3.ab3@16652>   SUBQ.w #1,D3
0002DD44 <AmiBlitz3.ab3@16653>    BMI.w JL_0_ACBE
0002DD46 <AmiBlitz3.ab3@16656>   TST.b (A3)+
0002DD4A <AmiBlitz3.ab3@16657>    BPL.w JL_0_AC78
0002DD4C <AmiBlitz3.ab3@16658>   SUBQ.w #1,A3
0002DD4E <AmiBlitz3.ab3@16661>     MOVEQ.l #$00,D1
0002DD50 <AmiBlitz3.ab3@16662>     MOVE.b -(A3),D1
0002DD54 <AmiBlitz3.ab3@16663>     BTST #$4,D1
0002DD58 <AmiBlitz3.ab3@16664>      BNE.w JL_0_ACAA
0002DD5E <AmiBlitz3.ab3@16665>     CMP.w regnum,D1
0002DD62 <AmiBlitz3.ab3@16666>      BCC.w JL_0_AC9E
0002DD64 <AmiBlitz3.ab3@16667>     BSET D1,D5
0002DD66 <AmiBlitz3.ab3@16668>     MOVEQ.l #$0F,D0
0002DD68 <AmiBlitz3.ab3@16669>     SUB.w D1,D0
0002DD6A <AmiBlitz3.ab3@16670>     BSET D0,D4
0002DD6C <AmiBlitz3.ab3@16673>     LSL.w #8,D1
0002DD6E <AmiBlitz3.ab3@16674>     LSL.w #1,D1
0002DD72 <AmiBlitz3.ab3@16675>     ORI.w #$201F,D1
0002DD76 <AmiBlitz3.ab3@16676>   BRA.w JL_0_ACB6
0002DD7A <AmiBlitz3.ab3@16679>     ANDI.w #$7,D1
0002DD7C <AmiBlitz3.ab3@16680>     LSL.w #8,D1
0002DD7E <AmiBlitz3.ab3@16681>     LSL.w #1,D1
0002DD82 <AmiBlitz3.ab3@16682>     ORI.w #$205F,D1
0002DD86 <AmiBlitz3.ab3@16685>      BSR.w writeword
0002DD8A <AmiBlitz3.ab3@16686>   DBF D3,JL_0_AC80
0002DD90 <AmiBlitz3.ab3@16689>   MOVE.w (A7)+,libjsr+2
0002DD96 <AmiBlitz3.ab3@16690>   MOVE.w (A7)+,libbase+2
0002DD9C <AmiBlitz3.ab3@16691>   MOVE.l libbase,D1
0002DDA0 <AmiBlitz3.ab3@16692>    BSR.w writelong
0002DDA6 <AmiBlitz3.ab3@16693>   MOVE.l libjsr,D1
0002DDAA <AmiBlitz3.ab3@16694>    BSR.w writelong
0002DDB0 <AmiBlitz3.ab3@16695>   MOVE.w regnum,D1
0002DDB4 <AmiBlitz3.ab3@16696>    BEQ.w JL_0_ACF4
0002DDB6 <AmiBlitz3.ab3@16697>   LSL.w #8,D1
0002DDB8 <AmiBlitz3.ab3@16698>   LSL.w #1,D1
0002DDBC <AmiBlitz3.ab3@16699>   ORI.w #$2000,D1
0002DDC0 <AmiBlitz3.ab3@16700>    BSR.w writeword
0002DDC2 <AmiBlitz3.ab3@16703>   MOVE.l (A7)+,D1
0002DDC6 <AmiBlitz3.ab3@16704>    BSR.w JL_0_AD38
0002DDCC <AmiBlitz3.ab3@16705>    JSR restorea4a5
0002DDCE <AmiBlitz3.ab3@16706>   MOVEQ.l #$03,D2
0002DDD2 <AmiBlitz3.ab3@16707>    BSR.w reget
0002DDD6 <AmiBlitz3.ab3@16708> BRA.w JL_0_AF66
0002DDD8 <AmiBlitz3.ab3@16711>   TST.w D3
0002DDDC <AmiBlitz3.ab3@16712>    BEQ.w JL_0_AD1E
0002DDE0 <AmiBlitz3.ab3@16713>   CMP.w #$28,D1
0002DDE4 <AmiBlitz3.ab3@16714>    BNE.w syntaxerr
0002DDE8 <AmiBlitz3.ab3@16715>   CMP.w #$29,D0
0002DDEC <AmiBlitz3.ab3@16716>    BNE.w syntaxerr
0002DDF0 <AmiBlitz3.ab3@16717> BRA.w get1bytemain
0002DDF4 <AmiBlitz3.ab3@16720>   CMP.w #$28,D1
0002DDF8 <AmiBlitz3.ab3@16721>    BNE.w JL_0_AD36
0002DDFC <AmiBlitz3.ab3@16722>    BSR.w get1bytemain
0002DE00 <AmiBlitz3.ab3@16723>   CMP.w #$29,D0
0002DE04 <AmiBlitz3.ab3@16724>    BNE.w syntaxerr
0002DE08 <AmiBlitz3.ab3@16725> BRA.w get1bytemain
0002DE0A <AmiBlitz3.ab3@16728> RTS
0002DE0C <AmiBlitz3.ab3@16731>   TST.w D1
0002DE10 <AmiBlitz3.ab3@16732>    BNE.w writelong
0002DE12 <AmiBlitz3.ab3@16733> RTS
0002DE16 <AmiBlitz3.ab3@16737>   MOVE.w #$48E7,D4
0002DE18 <AmiBlitz3.ab3@16738>   SWAP D4
0002DE1A <AmiBlitz3.ab3@16739>   CLR.w D4
0002DE1E <AmiBlitz3.ab3@16740>   MOVE.w #$4CDF,D5
0002DE20 <AmiBlitz3.ab3@16741>   SWAP D5
0002DE22 <AmiBlitz3.ab3@16742>   CLR.w D5
0002DE28 <AmiBlitz3.ab3@16743>   MOVE.w regnum,D1
0002DE2C <AmiBlitz3.ab3@16744>    BEQ.w JL_0_AD74
0002DE30 <AmiBlitz3.ab3@16745>   BSET #$F,D4
0002DE34 <AmiBlitz3.ab3@16746>   BSET #$0,D5
0002DE38 <AmiBlitz3.ab3@16747>   CMP.w #$2,D1
0002DE3C <AmiBlitz3.ab3@16748>    BCS.w JL_0_AD72
0002DE40 <AmiBlitz3.ab3@16751>   BSET #$E,D4
0002DE44 <AmiBlitz3.ab3@16752>   BSET #$1,D5
0002DE46 <AmiBlitz3.ab3@16755> RTS
0002DE4C <AmiBlitz3.ab3@16758>   TST.w fuckpos
0002DE50 <AmiBlitz3.ab3@16759>   BNE.w JL_0_AD6A
0002DE52 <AmiBlitz3.ab3@16760> RTS
0002DE54 <AmiBlitz3.ab3@16763> fuckpos:  Ds.w 1
0002DE5A <AmiBlitz3.ab3@16767>   MOVE.w sbasegot,D1
0002DE5E <AmiBlitz3.ab3@16768>    BEQ.w makesbase__skip
0002DE62 <AmiBlitz3.ab3@16772>   MOVE.w sbgot(PC),D1
0002DE66 <AmiBlitz3.ab3@16773>    BNE.w makesbase__skip2
0002DE6E <AmiBlitz3.ab3@16777>   MOVE.w #$0002,sbgot
0002DE74 <AmiBlitz3.ab3@16778>   MOVE.w movea3a7,D1
0002DE78 <AmiBlitz3.ab3@16779> BRA.w writeword
0002DE7A <AmiBlitz3.ab3@16782> RTS
0002DE82 <AmiBlitz3.ab3@16787>   MOVE.w #$0001,sbgot                                      ;voodoo magic! - Will it work?
0002DE88 <AmiBlitz3.ab3@16790>   MOVE.l #$C601,D1
0002DE90 <AmiBlitz3.ab3@16791>   MOVE.w #-1,sbasegot
0002DE96 <AmiBlitz3.ab3@16792>   MOVE.l d1,lastinstruction
0002DE9A <AmiBlitz3.ab3@16793>   BSR.w Atokejsr
0002DE9C <AmiBlitz3.ab3@16794> RTS
0002DEA6 <AmiBlitz3.ab3@16799>   MOVE.l data1,litdata1
0002DEAC <AmiBlitz3.ab3@16800>   TST.b fast
0002DEB0 <AmiBlitz3.ab3@16801>   BEQ 'l50                                                 ;optistring  seem impossible to get work
0002DEB4 <AmiBlitz3.ab3@16805> BRA 'l50                                                   ;to deactivate
0002DEBA <AmiBlitz3.ab3@16811>   TST.b optistring
0002DEBE <AmiBlitz3.ab3@16812>   BNE.s 'l21
0002DEC4 <AmiBlitz3.ab3@16813>   CLR.b string1
0002DECC <AmiBlitz3.ab3@16814>   MOVE.b #1,optistring
0002DED2 <AmiBlitz3.ab3@16815>   TST.b nostringopt
0002DED6 <AmiBlitz3.ab3@16816>   BNE 'l21
0002DED8 <AmiBlitz3.ab3@16817>   MOVE.l a5,a4
0002DEDA <AmiBlitz3.ab3@16818>   SUBQ.l #1,a4
0002DEDC <AmiBlitz3.ab3@16821>     TST.b (a4)
0002DEE0 <AmiBlitz3.ab3@16822>     BMI 'l19a
0002DEE4 <AmiBlitz3.ab3@16823>     BEQ.s 'l20
0002DEE8 <AmiBlitz3.ab3@16824>     CMP.b #$22,(a4)
0002DEEC <AmiBlitz3.ab3@16825>     BEQ.s 'l19
0002DEF2 <AmiBlitz3.ab3@16828>     TST.w string1
0002DEF6 <AmiBlitz3.ab3@16829>     BNE 'l11
0002DEFA <AmiBlitz3.ab3@16830>     CMP.b #":",(a4)
0002DEFE <AmiBlitz3.ab3@16831>     BEQ.s 'l20
0002DF02 <AmiBlitz3.ab3@16832>     CMP.b #";",(a4)
0002DF06 <AmiBlitz3.ab3@16833>     BEQ.s 'l20
0002DF0A <AmiBlitz3.ab3@16834>     CMP.b #"+",(a4)
0002DF0E <AmiBlitz3.ab3@16835>     BEQ.s 'l21
0002DF12 <AmiBlitz3.ab3@16836>     CMP.b #",",(a4)
0002DF16 <AmiBlitz3.ab3@16837>     BEQ.s 'l20                                             ;was l21
0002DF1A <AmiBlitz3.ab3@16838>     CMP.b #")",(a4)
0002DF1E <AmiBlitz3.ab3@16839>     BEQ.s 'l20                                             ;was l21
0002DF20 <AmiBlitz3.ab3@16842>     ADDQ.l #1,a4
0002DF24 <AmiBlitz3.ab3@16843> BRA.s 'l10
0002DF2C <AmiBlitz3.ab3@16846>   BCHG #0,string1
0002DF30 <AmiBlitz3.ab3@16847> BRA 'l18
0002DF32 <AmiBlitz3.ab3@16850>   ADDQ.l #1,a4
0002DF34 <AmiBlitz3.ab3@16851>   TST.b (a4)
0002DF38 <AmiBlitz3.ab3@16852>   BEQ 'l21
0002DF3C <AmiBlitz3.ab3@16853> BRA 'l11
0002DF3E <AmiBlitz3.ab3@16856>   MOVE.l a5,a4
0002DF40 <AmiBlitz3.ab3@16857>   SUBQ.l #1,a4
0002DF44 <AmiBlitz3.ab3@16860>   CMP.b #$20,-(a4)
0002DF48 <AmiBlitz3.ab3@16861>   BEQ 'll1
0002DF4C <AmiBlitz3.ab3@16862>   CMP.b #"+",(a4)
0002DF50 <AmiBlitz3.ab3@16863>   BEQ 'l21
0002DF58 <AmiBlitz3.ab3@16878>   MOVE.b #2,optistring
0002DF60 <AmiBlitz3.ab3@16881>   CMP.b #2,optistring
0002DF64 <AmiBlitz3.ab3@16882>   BEQ.s 'l100
0002DF68 <AmiBlitz3.ab3@16885>   BSR.w makesbase
0002DF6C <AmiBlitz3.ab3@16886>   BSR.w pokedata1                                          ;writestringsizespace
0002DF70 <AmiBlitz3.ab3@16887>   BSR.w pokedata1
0002DF72 <AmiBlitz3.ab3@16890>   MOVEQ.l #$00,D2
0002DF78 <AmiBlitz3.ab3@16893>     MOVE.l a5,lastsourcepos
0002DF7A <AmiBlitz3.ab3@16894>     MOVEQ #0,d0
0002DF7C <AmiBlitz3.ab3@16895>     MOVE.b (a5)+,d0
0002DF7E <AmiBlitz3.ab3@16896>     TST.w D0
0002DF82 <AmiBlitz3.ab3@16897>      BEQ.w notqerr
0002DF86 <AmiBlitz3.ab3@16898>     CMP.w #$22,D0                                          ; --- " ---
0002DF8A <AmiBlitz3.ab3@16899>      BEQ.w JL_0_ADF6
0002DF8E <AmiBlitz3.ab3@16900>     CMP.b #"\",d0
0002DF92 <AmiBlitz3.ab3@16901>      BNE 'l1
0002DF96 <AmiBlitz3.ab3@16902>     CMP.b #"\",(a5)
0002DF9A <AmiBlitz3.ab3@16903>      BNE 'l1
0002DFA0 <AmiBlitz3.ab3@16904>     TST.b newsyntax
0002DFA4 <AmiBlitz3.ab3@16905>      BEQ 'l1
0002DFAA <AmiBlitz3.ab3@16906>     CMP.w #"\\",1(a5)                                      ; new compiler constants
0002DFAE <AmiBlitz3.ab3@16907>     BNE 'l2
0002DFB0 <AmiBlitz3.ab3@16908>     ADDQ #2,a5
0002DFB2 <AmiBlitz3.ab3@16911>     ADDQ.w #1,D2
0002DFB4 <AmiBlitz3.ab3@16912>     MOVE.w D0,D1
0002DFB8 <AmiBlitz3.ab3@16913>     BSR.w pokedata1b                                        ;writestring
0002DFBC <AmiBlitz3.ab3@16914> BRA.w writestring
0002DFC2 <AmiBlitz3.ab3@16917>     JSR check_newconstants
0002DFC6 <AmiBlitz3.ab3@16918> BRA writestring
0002DFCC <AmiBlitz3.ab3@16921>   NOT instringon
0002DFD2 <AmiBlitz3.ab3@16922>   MOVE.w dontwrite,D1
0002DFD6 <AmiBlitz3.ab3@16923>   BNE.w JL_0_AE0A
0002DFDE <AmiBlitz3.ab3@16924>   CMP.b #2,optistring
0002DFE2 <AmiBlitz3.ab3@16925>   BEQ 'l10
0002DFE8 <AmiBlitz3.ab3@16926>     MOVEA.l litdata1,A0
0002DFEA <AmiBlitz3.ab3@16927>     CLR.w (A0)+                                            ;writesize
0002DFEC <AmiBlitz3.ab3@16928>     MOVE.w D2,(A0)
0002DFF0 <AmiBlitz3.ab3@16932>   BSR.w JL_0_AEA4                                          ;writestringconstantcode
0002DFF6 <AmiBlitz3.ab3@16933>   ADDQ.l #1,data1
0002DFFE <AmiBlitz3.ab3@16934>   BCLR #$0,data1+3
0002E000 <AmiBlitz3.ab3@16935>   MOVEQ.l #$07,D2
0002E004 <AmiBlitz3.ab3@16936> BRA.w get1bytemain
0002E008 <AmiBlitz3.ab3@16940>   BSR.w makename2
0002E00C <AmiBlitz3.ab3@16941>   BSR.w findlabel2
0002E010 <AmiBlitz3.ab3@16942>   BEQ.w JL_0_AE4A
0002E014 <AmiBlitz3.ab3@16943>   BSR.w addlabelhash
0002E018 <AmiBlitz3.ab3@16944>   CLR.l $4(A2)
0002E01C <AmiBlitz3.ab3@16945>   CLR.l $8(A2)
0002E024 <AmiBlitz3.ab3@16947>   MOVE.w linenumat+2,$10(A2)
0002E02A <AmiBlitz3.ab3@16948>   MOVE.w linenumat,d0
0002E02C <AmiBlitz3.ab3@16949>   MOVEQ #0,d1
0002E030 <AmiBlitz3.ab3@16950>   MOVE.b -1(a2,d7),d1
0002E034 <AmiBlitz3.ab3@16951>   MOVE.w d0,0(a2,d1)
0002E038 <AmiBlitz3.ab3@16952> BRA.w JL_0_AE52
0002E03C <AmiBlitz3.ab3@16955>   TST.l $8(A2)
0002E040 <AmiBlitz3.ab3@16956>   BNE.w JL_0_AE88
0002E046 <AmiBlitz3.ab3@16959>   MOVEA.l _execbase,A6
0002E048 <AmiBlitz3.ab3@16960>   MOVEQ.l #$0C+2,D0
0002E04A <AmiBlitz3.ab3@16961>   MOVEQ.l #$01,D1
0002E050 <AmiBlitz3.ab3@16962>   MOVE.l mempool,a0
0002E054 <AmiBlitz3.ab3@16963>   JSR _AllocPooled(a6)
0002E056 <AmiBlitz3.ab3@16965>   MOVEA.l D0,A0
0002E05A <AmiBlitz3.ab3@16966>   MOVE.l $4(A2),(A0)
0002E05E <AmiBlitz3.ab3@16967>   MOVE.l A0,$4(A2)
0002E066 <AmiBlitz3.ab3@16968>   MOVE.l destpointer,$4(A0)
0002E06A <AmiBlitz3.ab3@16969>   ADDQ.l #2,$4(A0)
0002E072 <AmiBlitz3.ab3@16970>   MOVE.w procnum,$8(A0)
0002E07A <AmiBlitz3.ab3@16971>   MOVE.w linenumat+2,$A(A0)
0002E082 <AmiBlitz3.ab3@16972>   MOVE.w linenumat,$c(a0)
0002E084 <AmiBlitz3.ab3@16973> RTS
0002E088 <AmiBlitz3.ab3@16976>   MOVE.l $4(A2),D1
0002E08C <AmiBlitz3.ab3@16977>   BTST #$0,D1
0002E090 <AmiBlitz3.ab3@16978>    BNE.w illlaberr
0002E096 <AmiBlitz3.ab3@16979>   MOVE.w procnum,D1
0002E09A <AmiBlitz3.ab3@16980>   CMP.w $10(A2),D1
0002E09E <AmiBlitz3.ab3@16981>    BNE.w referr
0002E0A0 <AmiBlitz3.ab3@16982> RTS
0002E0A2 <AmiBlitz3.ab3@16986>   MOVE.w D0,-(A7)
0002E0AA <AmiBlitz3.ab3@16987>   CMP.b #2,optistring
0002E0AE <AmiBlitz3.ab3@16988>   BEQ 'l10
0002E0B4 <AmiBlitz3.ab3@16991>   MOVE.w numtoa0,D1
0002E0B8 <AmiBlitz3.ab3@16992>    BSR.w writeword
0002E0BC <AmiBlitz3.ab3@16993>    BSR.w addoff
0002E0C2 <AmiBlitz3.ab3@16994>   MOVE.l litdata1,D1
0002E0C6 <AmiBlitz3.ab3@16995>    BSR.w writelong
0002E0CC <AmiBlitz3.ab3@16996>   MOVE.w pushlen,D1
0002E0D0 <AmiBlitz3.ab3@16997>    BSR.w writeword
0002E0D4 <AmiBlitz3.ab3@16998>   MOVE.w #$C600,D1
0002E0D8 <AmiBlitz3.ab3@16999>    BSR.w Atokejsr
0002E0DA <AmiBlitz3.ab3@17000>   MOVE.w (A7)+,D0
0002E0DC <AmiBlitz3.ab3@17001> RTS
0002E0DE <AmiBlitz3.ab3@17004>   MOVEQ #0,d1
0002E0E2 <AmiBlitz3.ab3@17005>   BSR.w pokedata1b
0002E0E8 <AmiBlitz3.ab3@17006>   MOVE.l destpointer,a4
0002E0EC <AmiBlitz3.ab3@17007>   MOVE.w #$203c,d1
0002E0F2 <AmiBlitz3.ab3@17008>   TST.w mode
0002E0F6 <AmiBlitz3.ab3@17009>   BNE 'lm10
0002E0FC <AmiBlitz3.ab3@17010>    ADDQ.w #4,a2offset
0002E100 <AmiBlitz3.ab3@17011>   MOVE.w #$2f3c,d1
0002E106 <AmiBlitz3.ab3@17014>   TST.w mode
0002E10A <AmiBlitz3.ab3@17015>   BEQ 'lm3
0002E110 <AmiBlitz3.ab3@17016>   MOVE.w regnum,D0
0002E112 <AmiBlitz3.ab3@17017>   LSL.w #8,D0
0002E114 <AmiBlitz3.ab3@17018>   LSL.w #1,D0
0002E116 <AmiBlitz3.ab3@17019>   OR.w d0,d1
0002E11A <AmiBlitz3.ab3@17020>   BSR writeword
0002E11E <AmiBlitz3.ab3@17021>   BSR.w addoff
0002E124 <AmiBlitz3.ab3@17022>   MOVE.l litdata1,D1
0002E128 <AmiBlitz3.ab3@17023>   BSR.w writelong
0002E130 <AmiBlitz3.ab3@17024>   CMP.w #3,mode
0002E134 <AmiBlitz3.ab3@17025>   BEQ 'l30
0002E13A <AmiBlitz3.ab3@17026>    ADDQ.w #4,a2offset
0002E13E <AmiBlitz3.ab3@17027>   MOVE.w #$4878,D1
0002E142 <AmiBlitz3.ab3@17028>   BSR.w writeword
0002E144 <AmiBlitz3.ab3@17029>   MOVE.l d2,d1
0002E148 <AmiBlitz3.ab3@17030>   BSR writeword
0002E14A <AmiBlitz3.ab3@17033>   MOVE.w (A7)+,D0
0002E14C <AmiBlitz3.ab3@17034> RTS
0002E152 <AmiBlitz3.ab3@17037>   MOVE.l #$3f3c0007,d1
0002E156 <AmiBlitz3.ab3@17038>   BSR writelong
0002E15C <AmiBlitz3.ab3@17039>   MOVE.w regnum,D1
0002E15E <AmiBlitz3.ab3@17040>   LSL.w #8,D1
0002E160 <AmiBlitz3.ab3@17041>   LSL.w #1,D1
0002E164 <AmiBlitz3.ab3@17042>   ORI.w #$2f3c,d1
0002E168 <AmiBlitz3.ab3@17043>   BSR writeword
0002E16E <AmiBlitz3.ab3@17044>    ADDQ.w #4,a2offset
0002E170 <AmiBlitz3.ab3@17045>   MOVE.l d2,d1
0002E174 <AmiBlitz3.ab3@17046>   BSR writelong
0002E178 <AmiBlitz3.ab3@17047>   MOVE.w #$2f3c,d1
0002E17C <AmiBlitz3.ab3@17048>   BSR writeword
0002E180 <AmiBlitz3.ab3@17049>   BSR.w addoff
0002E186 <AmiBlitz3.ab3@17050>   MOVE.l litdata1,D1
0002E18A <AmiBlitz3.ab3@17051>   BSR.w writelong
0002E18C <AmiBlitz3.ab3@17052>   MOVE.w (A7)+,D0
0002E18E <AmiBlitz3.ab3@17053> RTS
0002E192 <AmiBlitz3.ab3@17057>   BSR.w get1bytemain
0002E196 <AmiBlitz3.ab3@17058>    BSR.w JL_0_AE22
0002E19C <AmiBlitz3.ab3@17059>   MOVE.w regnum,D1
0002E19E <AmiBlitz3.ab3@17060>   LSL.w #8,D1
0002E1A0 <AmiBlitz3.ab3@17061>   LSL.w #1,D1
0002E1A4 <AmiBlitz3.ab3@17062>   ORI.w #$203C,D1
0002E1A8 <AmiBlitz3.ab3@17063>    BSR.w writeword
0002E1AC <AmiBlitz3.ab3@17064>    BSR.w addoff
0002E1B0 <AmiBlitz3.ab3@17065>   MOVE.l $8(A2),D1
0002E1B4 <AmiBlitz3.ab3@17066>    BSR.w writelong
0002E1B6 <AmiBlitz3.ab3@17067>   MOVEQ.l #$03,D2
0002E1BC <AmiBlitz3.ab3@17068>   CLR.b peekaddrsize
0002E1C0 <AmiBlitz3.ab3@17069> BRA.w reget
0002E1C2 <AmiBlitz3.ab3@17072>   MOVEQ.l #$00,D3
0002E1C6 <AmiBlitz3.ab3@17075>   BSR.w get1bytemain
0002E1CA <AmiBlitz3.ab3@17076>    BEQ.w syntaxerr
0002E1CE <AmiBlitz3.ab3@17077>   CMP.w #$22,D0
0002E1D2 <AmiBlitz3.ab3@17078>    BEQ.w JL_0_AF1A
0002E1D4 <AmiBlitz3.ab3@17079>   LSL.l #8,D3
0002E1D6 <AmiBlitz3.ab3@17080>   MOVE.b D0,D3
0002E1DA <AmiBlitz3.ab3@17081> BRA.w JL_0_AF02
0002E1DE <AmiBlitz3.ab3@17084>   BSR.w get1bytemain
0002E1E2 <AmiBlitz3.ab3@17085> BRA.w JL_0_B46E
0002E1E4 <AmiBlitz3.ab3@17088>   MOVE.w D2,-(A7)                                          ;basicvarsforasm
0002E1E8 <AmiBlitz3.ab3@17089>    BSR.w makename2
0002E1EC <AmiBlitz3.ab3@17090>    BSR.w findlabel2
0002E1F0 <AmiBlitz3.ab3@17091>    BEQ.w 'l10
0002E1F6 <AmiBlitz3.ab3@17092>    LEA ptr_parameterstore,a0
0002E1FC <AmiBlitz3.ab3@17093>    CMP.b #"@",-1(a0,d2.w)
0002E200 <AmiBlitz3.ab3@17094>    BNE cnferr
0002E204 <AmiBlitz3.ab3@17095>    CLR.b -1(a0,d2.w)
0002E206 <AmiBlitz3.ab3@17096>    SUBQ.l #1,d2
0002E20C <AmiBlitz3.ab3@17097>    LEA varbase,a2
0002E210 <AmiBlitz3.ab3@17098>    BSR findvariable
0002E214 <AmiBlitz3.ab3@17099>    BNE cnferr
0002E218 <AmiBlitz3.ab3@17100>    CMP.b #"\",d0
0002E21C <AmiBlitz3.ab3@17101>    BNE 'l6
0002E222 <AmiBlitz3.ab3@17102>    ADDQ #1,lastsourcepos
0002E226 <AmiBlitz3.ab3@17103>    MOVE.l $a(a2),a2
0002E228 <AmiBlitz3.ab3@17104>    ADDQ.l #4,a2
0002E22C <AmiBlitz3.ab3@17105>    BSR.w makename2
0002E230 <AmiBlitz3.ab3@17106>    BSR findvariable2
0002E234 <AmiBlitz3.ab3@17107>    BNE cnferr
0002E238 <AmiBlitz3.ab3@17108> BRA.s 'l6                                                  ;???
0002E23C <AmiBlitz3.ab3@17111>    MOVE.w $4(a2),d3
0002E23E <AmiBlitz3.ab3@17112>    EXT.l d3
0002E242 <AmiBlitz3.ab3@17113> BRA JL_0_AF46
0002E246 <AmiBlitz3.ab3@17116>   MOVE.l $8(A2),D3
0002E24E <AmiBlitz3.ab3@17117>   CMPI.l #$1,$4(A2)
0002E252 <AmiBlitz3.ab3@17118>    BEQ.w JL_0_AF46
0002E258 <AmiBlitz3.ab3@17119>   NOT.w asmtype
0002E25A <AmiBlitz3.ab3@17122>   MOVE.w (A7)+,D2
0002E25E <AmiBlitz3.ab3@17123> BRA.w JL_0_B46E
0002E260 <AmiBlitz3.ab3@17127>   MOVE.w D2,-(A7)
0002E264 <AmiBlitz3.ab3@17128>    BSR.w getparameter
0002E268 <AmiBlitz3.ab3@17129>   CMP.w #"{",D0                                          ;test if var = function{}
0002E26C <AmiBlitz3.ab3@17130>    BEQ.w isfunction
0002E270 <AmiBlitz3.ab3@17131>    BSR.w JL_0_8E3C
0002E274 <AmiBlitz3.ab3@17133>    BSR.w calcvar                                         ;getvaroffset+type
0002E278 <AmiBlitz3.ab3@17134>    BSR.w JL_0_B150
0002E27E <AmiBlitz3.ab3@17135>    MOVE.l a2,rightsidetype
0002E284 <AmiBlitz3.ab3@17146>    TST.b typecheck
0002E288 <AmiBlitz3.ab3@17147>    BEQ JL_0_AF66
0002E292 <AmiBlitz3.ab3@17148>    CMP.l #$da01,lasttoken                                  ;poke
0002E296 <AmiBlitz3.ab3@17149>    BEQ 'l1
0002E2A0 <AmiBlitz3.ab3@17150>    CMP.l #$da02,lasttoken                                  ;peek
0002E2A4 <AmiBlitz3.ab3@17151>    BNE 'l2
0002E2AC <AmiBlitz3.ab3@17154>    CMP.w #1,parnum                                         ; is not call when & is used in parameter
0002E2B0 <AmiBlitz3.ab3@17155>    BNE JL_0_AF66
0002E2B6 <AmiBlitz3.ab3@17156>    MOVE.b d2,peekaddrsize
0002E2BA <AmiBlitz3.ab3@17157>    BRA JL_0_AF66
0002E2C0 <AmiBlitz3.ab3@17160>   CLR.b peekaddrsize
0002E2C4 <AmiBlitz3.ab3@17163>   CMP.w #$1,D2
0002E2C8 <AmiBlitz3.ab3@17164>    BNE.w JL_0_AF7C
0002E2CE <AmiBlitz3.ab3@17165>   MOVE.w regnum,D1
0002E2D2 <AmiBlitz3.ab3@17166>   ORI.w #$4880,D1
0002E2D6 <AmiBlitz3.ab3@17167>    BSR.w writeword
0002E2D8 <AmiBlitz3.ab3@17170>   MOVE.w (A7)+,D3
0002E2DC <AmiBlitz3.ab3@17171>    BEQ.w JL_0_AF9E
0002E2E2 <AmiBlitz3.ab3@17172>    MOVE.l lastinstructionaddr,a0
0002E2E6 <AmiBlitz3.ab3@17173>   CMP.w #$3,D3
0002E2EA <AmiBlitz3.ab3@17174>    BNE.w JL_0_AF92
0002E2EE <AmiBlitz3.ab3@17175>   CMP.w #$4,D2
0002E2F2 <AmiBlitz3.ab3@17176>    BEQ.w JL_0_AF98
0002E2F4 <AmiBlitz3.ab3@17179>   CMP.w D2,D3
0002E2F8 <AmiBlitz3.ab3@17180>    BLS.w JL_0_AF9E
0002E2FA <AmiBlitz3.ab3@17183>   EXG.l D2,D3
0002E2FC <AmiBlitz3.ab3@17184>   MOVE.l a0,-(a7)
0002E302 <AmiBlitz3.ab3@17185>   TST.b typecheck
0002E306 <AmiBlitz3.ab3@17186>   BEQ 'ok
0002E30C <AmiBlitz3.ab3@17187>   TST.b notypecheck
0002E310 <AmiBlitz3.ab3@17188>   BNE 'ok
0002E316 <AmiBlitz3.ab3@17189>   MOVE.l leftsidetype,a0
0002E320 <AmiBlitz3.ab3@17190>   CMP.l #0,leftsidetype
0002E324 <AmiBlitz3.ab3@17191>   BEQ 'ok
0002E32C <AmiBlitz3.ab3@17192>   CMP.l #$100,4(a0)
0002E330 <AmiBlitz3.ab3@17193>   BLE 'ok
0002E334 <AmiBlitz3.ab3@17194>   CMP.b #3,d3
0002E338 <AmiBlitz3.ab3@17195>   BEQ 'ok
0002E33C <AmiBlitz3.ab3@17196>   CMP.b #7,d3
0002E340 <AmiBlitz3.ab3@17197>   BEQ 'ok
0002E346 <AmiBlitz3.ab3@17198>   JMP   error_convert_types      ;for all syntax only long and string allowed to assign to a type
0002E348 <AmiBlitz3.ab3@17200>   MOVE.l (a7)+,a0
0002E34C <AmiBlitz3.ab3@17201>   BSR.w writeconvertcode         ;called from var assign
0002E350 <AmiBlitz3.ab3@17204> BRA.w reget
0002E352 <AmiBlitz3.ab3@17207>   MOVEQ.l #$00,D3
0002E358 <AmiBlitz3.ab3@17208>   MOVE.w regnum,D1
0002E35C <AmiBlitz3.ab3@17209>    BEQ.w JL_0_AFC8
0002E35E <AmiBlitz3.ab3@17210>   SUBQ.w #1,D1
0002E360 <AmiBlitz3.ab3@17213>      LSR.l #1,D3
0002E364 <AmiBlitz3.ab3@17214>      BSET #$F,D3
0002E368 <AmiBlitz3.ab3@17215>   DBF D1,JL_0_AFB0b
0002E36E <AmiBlitz3.ab3@17217>    TST.b fpu
0002E372 <AmiBlitz3.ab3@17218>    BEQ 'l1
0002E378 <AmiBlitz3.ab3@17219>    ADDQ.l #2,stacktrack                                    ;intern command
0002E37A <AmiBlitz3.ab3@17220>     MOVE.l a0,-(a7)
0002E380 <AmiBlitz3.ab3@17221>     MOVE.l stacktrack,d1
0002E386 <AmiBlitz3.ab3@17222>     LEA fpustackbase,a0
0002E38A <AmiBlitz3.ab3@17223>     CLR.w 0(a0,d1)
0002E390 <AmiBlitz3.ab3@17224>     CLR.w regmask
0002E392 <AmiBlitz3.ab3@17225>     MOVE.l (a7)+,a0
0002E396 <AmiBlitz3.ab3@17228>   MOVE.w #$48E7,D1
0002E39A <AmiBlitz3.ab3@17229>    BSR.w writeword                                         ;write movem.l d0/d1,-(a7)
0002E39C <AmiBlitz3.ab3@17230>   MOVE.w D3,D1
0002E3A0 <AmiBlitz3.ab3@17231> BRA.w writeword
0002E3A2 <AmiBlitz3.ab3@17236>   MOVEQ.l #$00,D3
0002E3A8 <AmiBlitz3.ab3@17237>   MOVE.w regnum,D1
0002E3AC <AmiBlitz3.ab3@17238>    BEQ.w JL_0_AFC8
0002E3AE <AmiBlitz3.ab3@17239>   SUBQ.w #1,D1
0002E3B0 <AmiBlitz3.ab3@17242>     LSR.l #1,D3
0002E3B4 <AmiBlitz3.ab3@17243>     BSET #$F,D3
0002E3B8 <AmiBlitz3.ab3@17244>   DBF D1,JL_0_AFB0
0002E3BE <AmiBlitz3.ab3@17246>    TST.b fpu
0002E3C2 <AmiBlitz3.ab3@17247>    BEQ 'l1
0002E3C8 <AmiBlitz3.ab3@17248>    ADDQ.l #2,stacktrack                                    ;intern command
0002E3CA <AmiBlitz3.ab3@17249>     MOVE.l a0,-(a7)
0002E3D0 <AmiBlitz3.ab3@17250>     MOVE.l stacktrack,d1
0002E3D6 <AmiBlitz3.ab3@17251>     LEA fpustackbase,a0
0002E3DA <AmiBlitz3.ab3@17252>     CLR.w 0(a0,d1)
0002E3DE <AmiBlitz3.ab3@17253>    CMP.b #5,(a3)                                           ;result float ?
0002E3E2 <AmiBlitz3.ab3@17254>     BNE 'nofpu
0002E3EC <AmiBlitz3.ab3@17256>     MOVE.w regnum,regnumfunc
0002E3F2 <AmiBlitz3.ab3@17259>   CLR.w regmask
0002E3F4 <AmiBlitz3.ab3@17260>     MOVE.l (a7)+,a0
0002E3F8 <AmiBlitz3.ab3@17263>   MOVE.w #$48E7,D1
0002E3FC <AmiBlitz3.ab3@17264>    BSR.w writeword                                         ;write movem.l d0/d1,-(a7)
0002E3FE <AmiBlitz3.ab3@17265>   MOVE.w D3,D1
0002E402 <AmiBlitz3.ab3@17266> BRA.w writeword
0002E404 <AmiBlitz3.ab3@17269> RTS
0002E406 <AmiBlitz3.ab3@17273>   MOVE.l D1,-(A7)
0002E40A <AmiBlitz3.ab3@17274>   MOVE.w #$4EB9,D1
0002E40E <AmiBlitz3.ab3@17275>    BSR.w writeword
0002E412 <AmiBlitz3.ab3@17276>    BSR.w addoff
0002E414 <AmiBlitz3.ab3@17277>   MOVE.l (A7)+,D1
0002E418 <AmiBlitz3.ab3@17278> BRA.w writelong
0002E41C <AmiBlitz3.ab3@17282>    BSR.w findproc                                          ;write function call
0002E420 <AmiBlitz3.ab3@17283>    BEQ 'l1
0002E426 <AmiBlitz3.ab3@17284>    TST.l unusedfunc
0002E42A <AmiBlitz3.ab3@17285>    BEQ noprocerr
0002E430 <AmiBlitz3.ab3@17287>    JSR gotoendsource
0002E438 <AmiBlitz3.ab3@17290>   MOVE.l funcstruct_returntype(a2),rightsidetype
0002E43E <AmiBlitz3.ab3@17291>   TST.l typetocast
0002E442 <AmiBlitz3.ab3@17292>   BEQ 'nocast
0002E44C <AmiBlitz3.ab3@17293>   MOVE.l typetocast,rightsidetype
0002E452 <AmiBlitz3.ab3@17294>   CLR.l typetocast
0002E454 <AmiBlitz3.ab3@17295>   MOVE.l a1,-(a7)
0002E45A <AmiBlitz3.ab3@17296>   MOVE.l rightsidetype,a1
0002E460 <AmiBlitz3.ab3@17297>   CMP.l leftsidetype,a1
0002E464 <AmiBlitz3.ab3@17298>   BEQ 'ok
0002E46A <AmiBlitz3.ab3@17299>   JMP errorconvertreturntype2
0002E46C <AmiBlitz3.ab3@17300> 'ok  MOVE.l (a7)+,a1
0002E46E <AmiBlitz3.ab3@17302>   MOVEQ.l #$00,D1
0002E472 <AmiBlitz3.ab3@17303>   MOVE.b $5(A2),D1
0002E478 <AmiBlitz3.ab3@17304>   MOVE.b d1,retmode
0002E47C <AmiBlitz3.ab3@17305>    BMI.w illprocerr
0002E482 <AmiBlitz3.ab3@17306>    MOVE.b #1,isfunc(a2)
0002E484 <AmiBlitz3.ab3@17307>   MOVE.w D1,-(A7)
0002E486 <AmiBlitz3.ab3@17308>   MOVEQ.l #$00,D1
0002E48A <AmiBlitz3.ab3@17309>   MOVE.b $4(A2),D1
0002E48C <AmiBlitz3.ab3@17310>   LSR.w #4,D1
0002E490 <AmiBlitz3.ab3@17311>    BEQ.w JL_0_B006
0002E492 <AmiBlitz3.ab3@17312>   LSL.w #2,D1
0002E498 <AmiBlitz3.ab3@17313>   SUB.w D1,a2offset
0002E49C <AmiBlitz3.ab3@17316>   CMPI.w #$7,(A7)
0002E4A0 <AmiBlitz3.ab3@17317>    BNE.b JL_0_B014
0002E4A2 <AmiBlitz3.ab3@17318>   MOVE.l A2,-(A7)
0002E4A6 <AmiBlitz3.ab3@17319>    BSR.w makesbase
0002E4A8 <AmiBlitz3.ab3@17320>   MOVEA.l (A7)+,A2
0002E4AE <AmiBlitz3.ab3@17323>   MOVE.w sbasegot,-(A7)
0002E4B2 <AmiBlitz3.ab3@17324>    BEQ.b JL_0_B020
0002E4B6 <AmiBlitz3.ab3@17325>    BSR.w dopusha3
0002E4BA <AmiBlitz3.ab3@17328>   BSR.w JL_0_AFA2func
0002E4BC <AmiBlitz3.ab3@17329>   MOVE.w D3,-(A7)
0002E4C0 <AmiBlitz3.ab3@17330>   MOVE.l $E(A2),D1
0002E4C4 <AmiBlitz3.ab3@17331>   TST.b $20(a2)                                            ;increase if morepar
0002E4C8 <AmiBlitz3.ab3@17332>   BNE 'no0par
0002E4CA <AmiBlitz3.ab3@17333>   MOVE.l a5,a4
0002E4CE <AmiBlitz3.ab3@17336>   CMP.b #$20,(a4)+
0002E4D2 <AmiBlitz3.ab3@17337>   BEQ 'l1
0002E4D8 <AmiBlitz3.ab3@17338>   CMP.b #"}",-1(a4)
0002E4DC <AmiBlitz3.ab3@17339>   BNE  'no0par
0002E4DE <AmiBlitz3.ab3@17340>   MOVEQ #0,d0
0002E4E2 <AmiBlitz3.ab3@17343>   LEA $16(A2),A1
0002E4E4 <AmiBlitz3.ab3@17346>   MOVE.l d1,-(a7)
0002E4E6 <AmiBlitz3.ab3@17347>   MOVE.b (a1),d2
0002E4E8 <AmiBlitz3.ab3@17348>   MOVE.l d0,d1
0002E4EC <AmiBlitz3.ab3@17349>   CMP.w #4,d2
0002E4F0 <AmiBlitz3.ab3@17350>   BNE 'l1b
0002E4F6 <AmiBlitz3.ab3@17351>   ADD.l #$203c,d1
0002E4FA <AmiBlitz3.ab3@17352>   BSR writeword
0002E500 <AmiBlitz3.ab3@17353>   MOVE.l #$ffff0000,d1
0002E504 <AmiBlitz3.ab3@17354>   BSR writelong
0002E508 <AmiBlitz3.ab3@17355> BRA 'l2b
0002E50E <AmiBlitz3.ab3@17358>    TST.b fpu
0002E512 <AmiBlitz3.ab3@17359>    BNE 'l1c
0002E516 <AmiBlitz3.ab3@17360>    CMP.w #5,d2
0002E51A <AmiBlitz3.ab3@17361>    BNE 'l1c
0002E520 <AmiBlitz3.ab3@17362>    ADD.l #$203c,d1
0002E524 <AmiBlitz3.ab3@17363>    BSR writeword
0002E52A <AmiBlitz3.ab3@17364>    MOVE.l #$800000c1,d1
0002E52E <AmiBlitz3.ab3@17365>    BSR writelong
0002E532 <AmiBlitz3.ab3@17366> BRA 'l2b
0002E538 <AmiBlitz3.ab3@17369>   ADD.l #$70ff,d1
0002E53C <AmiBlitz3.ab3@17370>   BSR writeword
0002E540 <AmiBlitz3.ab3@17371>   CMP.w #7,d2
0002E544 <AmiBlitz3.ab3@17372>   BNE 'l1d
0002E54A <AmiBlitz3.ab3@17373>   MOVE.l #$2f3c0000,d1      ; write code move.l #0,-(a7)
0002E54E <AmiBlitz3.ab3@17374>   BSR writelong
0002E550 <AmiBlitz3.ab3@17375>   MOVEQ #0,d1
0002E554 <AmiBlitz3.ab3@17376>   BSR writeword
0002E55A <AmiBlitz3.ab3@17377>   MOVE.l #$2f3c0000,d1      ; write code move.l #0,-(a7)
0002E55E <AmiBlitz3.ab3@17378>   BSR writelong
0002E560 <AmiBlitz3.ab3@17379>   MOVEQ #0,d1
0002E564 <AmiBlitz3.ab3@17380>   BSR writeword
0002E56A <AmiBlitz3.ab3@17382> 'l1d  MOVE.l #$f23c5000,d1
0002E56C <AmiBlitz3.ab3@17383>   MOVE.l d0,d2
0002E56E <AmiBlitz3.ab3@17384>   ASR.l #2,d2
0002E570 <AmiBlitz3.ab3@17385>   ADD.l d2,d1
0002E574 <AmiBlitz3.ab3@17386>   BSR writelong
0002E578 <AmiBlitz3.ab3@17387>   MOVE.w #$ffff,d1
0002E57C <AmiBlitz3.ab3@17388>   BSR writeword
0002E57E <AmiBlitz3.ab3@17392>   MOVE.l (a7)+,d1
0002E580 <AmiBlitz3.ab3@17393>      ADDQ.l #1,a1
0002E586 <AmiBlitz3.ab3@17394>      ADD.l #$0200,d0
0002E58C <AmiBlitz3.ab3@17395>      CMP.l #$0e00,d0
0002E590 <AmiBlitz3.ab3@17396>      BEQ syntaxerr
0002E592 <AmiBlitz3.ab3@17397>      TST.b (a1)
0002E596 <AmiBlitz3.ab3@17398>      BNE 'again
0002E59A <AmiBlitz3.ab3@17399> BRA 'p1
0002E59E <AmiBlitz3.ab3@17402>   TST.b $4(A2)
0002E5A2 <AmiBlitz3.ab3@17403>    BNE.w JL_0_B03E
0002E5A6 <AmiBlitz3.ab3@17406>   BSR.w JL_0_AFCA
0002E5AA <AmiBlitz3.ab3@17407>    BSR.w get1bytemain
0002E5AE <AmiBlitz3.ab3@17408> BRA.w JL_0_B06C
0002E5B4 <AmiBlitz3.ab3@17412>   MOVE.w parnum,-(a7)                                      ;7.2014 need store so function calls in parameter >6 can work
0002E5BA <AmiBlitz3.ab3@17413>   MOVE.w regnum,-(A7)
0002E5C4 <AmiBlitz3.ab3@17414>   MOVE.w regnum,regnumfunc
0002E5C6 <AmiBlitz3.ab3@17417>   MOVE.l D1,-(A7)                                          ;write functioncall with pars
0002E5CE <AmiBlitz3.ab3@17418>   MOVE.b #1,funccall
0002E5D0 <AmiBlitz3.ab3@17419>   MOVEQ.l #$00,D0
0002E5D4 <AmiBlitz3.ab3@17420>   MOVE.b $4(A2),D0
0002E5DE <AmiBlitz3.ab3@17421>   MOVE.w a2offset,a2offset2
0002E5E6 <AmiBlitz3.ab3@17422>   MOVE.b 5(a2),retmode
0002E5EC <AmiBlitz3.ab3@17423>   MOVE.l a2,currentfunccall
0002E5F0 <AmiBlitz3.ab3@17424>   LEA $16(A2),A2
0002E5F6 <AmiBlitz3.ab3@17425>   CLR.w regnum
0002E5FC <AmiBlitz3.ab3@17426>   CLR.w regmask
0002E602 <AmiBlitz3.ab3@17427>   MOVE.b isconstantvalue,-(a7)
0002E608 <AmiBlitz3.ab3@17428>   MOVE.b funcparloop,-(a7)
0002E610 <AmiBlitz3.ab3@17429>   MOVE.b #1,funcparloop
0002E616 <AmiBlitz3.ab3@17430>   MOVE.l rightsidetype,-(a7)
0002E61C <AmiBlitz3.ab3@17431>   MOVE.l leftsidetype,-(a7)                               ;store values To stack so it can work recursive
0002E622 <AmiBlitz3.ab3@17432>   MOVE.b blitzparloop,-(a7)
0002E628 <AmiBlitz3.ab3@17433>   CLR.b blitzparloop
0002E62E <AmiBlitz3.ab3@17434>   JSR fetchpees2
0002E634 <AmiBlitz3.ab3@17435>   MOVE.b (a7)+,blitzparloop
0002E63A <AmiBlitz3.ab3@17436>   MOVE.l (a7)+,leftsidetype
0002E640 <AmiBlitz3.ab3@17437>   MOVE.l (a7)+,rightsidetype
0002E646 <AmiBlitz3.ab3@17438>   MOVE.b (a7)+,funcparloop
0002E64C <AmiBlitz3.ab3@17439>   MOVE.b (a7)+,isconstantvalue
0002E652 <AmiBlitz3.ab3@17440>   JSR chkstak
0002E654 <AmiBlitz3.ab3@17441>   MOVE.l (A7)+,D1
0002E658 <AmiBlitz3.ab3@17457>    BTST #0,d1
0002E65C <AmiBlitz3.ab3@17458>    BNE intern1
0002E660 <AmiBlitz3.ab3@17459>    BSR.w JL_0_AFCA
0002E666 <AmiBlitz3.ab3@17481>   MOVE.w (A7)+,regnum
0002E66C <AmiBlitz3.ab3@17482>   MOVE.w (a7)+,parnum                                     ;07.2014
0002E670 <AmiBlitz3.ab3@17485>   CMP.w #"}",D0
0002E674 <AmiBlitz3.ab3@17486>    BNE.w errorbracketmiss2
0002E676 <AmiBlitz3.ab3@17487>    MOVEQ #0,d1                                            ; end of function call pars
0002E67C <AmiBlitz3.ab3@17488>   MOVE.w regnum,D1
0002E680 <AmiBlitz3.ab3@17489>    BEQ.w JL_0_B08A
0002E686 <AmiBlitz3.ab3@17490>    TST.b fpu
0002E68A <AmiBlitz3.ab3@17491>    BEQ 'old
0002E692 <AmiBlitz3.ab3@17492>    CMP.b #5,retmode
0002E696 <AmiBlitz3.ab3@17493>    BNE 'old
0002E698 <AmiBlitz3.ab3@17494>    ASL.l #7,d1
0002E69E <AmiBlitz3.ab3@17495>    OR.l #$f2000000,d1
0002E6A2 <AmiBlitz3.ab3@17496>    BSR writelong
0002E6A6 <AmiBlitz3.ab3@17497> BRA JL_0_B08A
0002E6A8 <AmiBlitz3.ab3@17499>  'old  LSL.w #8,D1
0002E6AA <AmiBlitz3.ab3@17500>   LSL.w #1,D1
0002E6AE <AmiBlitz3.ab3@17501>   ORI.w #$2000,D1
0002E6B2 <AmiBlitz3.ab3@17502>    BSR.w writeword
0002E6B4 <AmiBlitz3.ab3@17505>    MOVE.w (A7)+,D3
0002E6B8 <AmiBlitz3.ab3@17506>    BEQ.w JL_0_B0A8
0002E6BE <AmiBlitz3.ab3@17507>    TST.b fpu
0002E6C2 <AmiBlitz3.ab3@17508>    BEQ 'old
0002E6C4 <AmiBlitz3.ab3@17509>    MOVE.l d0,-(a7)
0002E6C8 <AmiBlitz3.ab3@17510>    MOVE.w #8,d0
0002E6CA <AmiBlitz3.ab3@17511>    MOVE.l a0,-(a7)
0002E6D0 <AmiBlitz3.ab3@17512>    MOVE.l stacktrack,d1
0002E6D6 <AmiBlitz3.ab3@17513>    LEA fpustackbase,a0
0002E6DE <AmiBlitz3.ab3@17514>    MOVE.w 0(a0,d1),regmask
0002E6E0 <AmiBlitz3.ab3@17515>    MOVE.l (a7)+,a0
0002E6E4 <AmiBlitz3.ab3@17518>   BEQ 'ready
0002E6EA <AmiBlitz3.ab3@17519>    BTST d0,regmask
0002E6EE <AmiBlitz3.ab3@17520>    BEQ 'noa7
0002E6F0 <AmiBlitz3.ab3@17521>    MOVEQ #0,d1
0002E6F2 <AmiBlitz3.ab3@17522>    MOVE.w d0,d1
0002E6F4 <AmiBlitz3.ab3@17523>    SUBQ.w #1,d1
0002E6F6 <AmiBlitz3.ab3@17524>    ASL #7,d1
0002E6FC <AmiBlitz3.ab3@17526>    OR.l #$f21f5400,d1                                      ;fmove.d (a7)+
0002E700 <AmiBlitz3.ab3@17527>    BSR writelong
0002E706 <AmiBlitz3.ab3@17528>    SUBQ.l #2,stacktrack
0002E708 <AmiBlitz3.ab3@17531>    SUBQ.w #1,d0
0002E70C <AmiBlitz3.ab3@17532>    BNE 'loop
0002E712 <AmiBlitz3.ab3@17535>   SUBQ.l #2,stacktrack                                     ;integer sub
0002E714 <AmiBlitz3.ab3@17536>   MOVE.l (a7)+,d0
0002E718 <AmiBlitz3.ab3@17539>   MOVE.w #$4CDF,D1
0002E71C <AmiBlitz3.ab3@17540>    BSR.w writeword
0002E71E <AmiBlitz3.ab3@17541>   MOVEQ.l #$00,D1
0002E720 <AmiBlitz3.ab3@17542>   MOVEQ.l #$0F,D4
0002E722 <AmiBlitz3.ab3@17545>     LSL.w #1,D3
0002E724 <AmiBlitz3.ab3@17546>     ROXR.w #1,D1
0002E728 <AmiBlitz3.ab3@17547>   DBF D4,JL_0_B09C                                         ;movem.l (a7)+,dx
0002E72C <AmiBlitz3.ab3@17549>     BSR.w writeword
0002E732 <AmiBlitz3.ab3@17550>    CLR.w regnumfunc
0002E734 <AmiBlitz3.ab3@17553>   MOVE.w (A7)+,D1
0002E738 <AmiBlitz3.ab3@17554>    BEQ.b JL_0_B0D2
0002E73C <AmiBlitz3.ab3@17555>   CMPI.w #$7,(A7)
0002E740 <AmiBlitz3.ab3@17556>    BEQ.b JL_0_B0C4
0002E746 <AmiBlitz3.ab3@17557>   LEA geta3,A0
0002E74C <AmiBlitz3.ab3@17558>   LEA numtoa0,A1
0002E750 <AmiBlitz3.ab3@17559>    BSR.w pokecode
0002E754 <AmiBlitz3.ab3@17560> BRA.b JL_0_B0CE
0002E75A <AmiBlitz3.ab3@17563>   MOVE.w deca3,D1
0002E75E <AmiBlitz3.ab3@17564>    BSR.w writeword
0002E762 <AmiBlitz3.ab3@17567>   BSR.w dopulla3                                           ;fix up string base
0002E764 <AmiBlitz3.ab3@17570>   MOVE.w (A7)+,D2                                          ;what it returns!
0002E768 <AmiBlitz3.ab3@17571>   CMP.w #$7,D2
0002E76C <AmiBlitz3.ab3@17572>    BNE.w JL_0_B0EC
0002E772 <AmiBlitz3.ab3@17573>   MOVE.w putstlen,D1
0002E778 <AmiBlitz3.ab3@17574>   OR.w regnum,D1
0002E77C <AmiBlitz3.ab3@17575>    BSR.w writeword
0002E780 <AmiBlitz3.ab3@17578>   BSR.w get1bytemain
0002E784 <AmiBlitz3.ab3@17579> BRA.w JL_0_AF66
0002E786 <AmiBlitz3.ab3@17583> deca3:   Dc.b $53,$4B                                      ;SUBQ.W  #1,A3
0002E78E <AmiBlitz3.ab3@17588>   CMP.b #2,optistring
0002E792 <AmiBlitz3.ab3@17589>   BEQ fs2
0002E796 <AmiBlitz3.ab3@17590>   BSR.w makesbase                                          ;writestringvariable
0002E79A <AmiBlitz3.ab3@17591>   BTST #$F,D2
0002E79E <AmiBlitz3.ab3@17592>    BNE.w JL_0_B112
0002E7A4 <AmiBlitz3.ab3@17593>   MOVE.w D3,leaa5d3a2+2
0002E7AA <AmiBlitz3.ab3@17594>   MOVE.l leaa5d3a2,D1
0002E7AE <AmiBlitz3.ab3@17595>    BSR.w pokela5s
0002E7B4 <AmiBlitz3.ab3@17598>   MOVE.w regnum,D1
0002E7B6 <AmiBlitz3.ab3@17599>   LSL.w #8,D1
0002E7B8 <AmiBlitz3.ab3@17600>   LSL.w #1,D1
0002E7BC <AmiBlitz3.ab3@17601>   ORI.w #$7000,D1
0002E7C2 <AmiBlitz3.ab3@17602>   LEA stvarget2,A0
0002E7C4 <AmiBlitz3.ab3@17603>   MOVE.w D1,(A0)
0002E7CA <AmiBlitz3.ab3@17604>   MOVE.w regnum,D1
0002E7D0 <AmiBlitz3.ab3@17605>   ANDI.w #$FFF8,$2(A0)
0002E7D4 <AmiBlitz3.ab3@17606>   OR.w D1,$2(A0)
0002E7DA <AmiBlitz3.ab3@17607>   LEA stvarget2f,A1
0002E7DE <AmiBlitz3.ab3@17608>    BSR.w pokecode
0002E7E2 <AmiBlitz3.ab3@17609>   MOVE.w #$C600,D1
0002E7E6 <AmiBlitz3.ab3@17610>    BSR.w Atokejsr
0002E7E8 <AmiBlitz3.ab3@17611>   MOVEQ.l #$07,D2
0002E7EC <AmiBlitz3.ab3@17612> BRA.w reget
0002E7F2 <AmiBlitz3.ab3@17615>      TST.w stackpar
0002E7F6 <AmiBlitz3.ab3@17616>      BMI 'l10
0002E7FC <AmiBlitz3.ab3@17617>      MOVE.l #$3f3c0007,d1
0002E802 <AmiBlitz3.ab3@17618>      ADDQ.w #2,a2offset
0002E806 <AmiBlitz3.ab3@17619>      BSR writelong
0002E80A <AmiBlitz3.ab3@17622>   MOVE.w #$4878,d1
0002E810 <AmiBlitz3.ab3@17623>      CLR.w stackpar
0002E814 <AmiBlitz3.ab3@17624>      BSR writeword
0002E818 <AmiBlitz3.ab3@17625>      MOVE.w #$0,d1
0002E81C <AmiBlitz3.ab3@17626>      BSR writeword
0002E820 <AmiBlitz3.ab3@17627>      MOVE.w #$246d,d1
0002E824 <AmiBlitz3.ab3@17628>      BSR writeword
0002E826 <AmiBlitz3.ab3@17629>      MOVE.w d3,d1
0002E82A <AmiBlitz3.ab3@17630>      BSR writeword
0002E830 <AmiBlitz3.ab3@17631>      MOVE.l #$4a926704,d1
0002E834 <AmiBlitz3.ab3@17632>      BSR writelong
0002E83A <AmiBlitz3.ab3@17633>      MOVE.l #$2eaafffc,d1
0002E83E <AmiBlitz3.ab3@17634>      BSR writelong
0002E842 <AmiBlitz3.ab3@17635>      MOVE.w #$2f0a,d1
0002E848 <AmiBlitz3.ab3@17636>      ADDQ.w #8,a2offset
0002E84C <AmiBlitz3.ab3@17637>      BSR writeword
0002E850 <AmiBlitz3.ab3@17638> BRA.w reget
0002E854 <AmiBlitz3.ab3@17641>   CMP.b #$7,D2                                             ;load basic var
0002E858 <AmiBlitz3.ab3@17642>    BEQ.w JL_0_B0F6
0002E85E <AmiBlitz3.ab3@17644>    TST.b iee
0002E862 <AmiBlitz3.ab3@17645>    BEQ 'noiee
0002E866 <AmiBlitz3.ab3@17646>    CMP.b #5,d2
0002E86A <AmiBlitz3.ab3@17647>    BNE 'noiee
0002E86C <AmiBlitz3.ab3@17648>    MOVE.l d0,-(a7)                                         ;fpu load var
0002E870 <AmiBlitz3.ab3@17649>    BTST #15,d2
0002E874 <AmiBlitz3.ab3@17650>    BEQ 'var
0002E87A <AmiBlitz3.ab3@17651>    CMP.l #$7fff,d3
0002E87E <AmiBlitz3.ab3@17652>    BGT 'longoffset
0002E884 <AmiBlitz3.ab3@17653>    MOVE.l #$f22a4400,d1                                    ;newtype     >32kb
0002E886 <AmiBlitz3.ab3@17654>    TST.w d3                                                ;offset =0
0002E88A <AmiBlitz3.ab3@17655>    BNE 'offset
0002E890 <AmiBlitz3.ab3@17658>   MOVE.l #$f2124400,d1
0002E892 <AmiBlitz3.ab3@17659>    MOVEQ #0,d3
0002E896 <AmiBlitz3.ab3@17660> BRA 'glob
0002E89C <AmiBlitz3.ab3@17663>   SUBQ.l #4,destpointer
0002E8A0 <AmiBlitz3.ab3@17664> BRA 'glob
0002E8A6 <AmiBlitz3.ab3@17667>   TST.b fast
0002E8AA <AmiBlitz3.ab3@17668>    BEQ 'nofastload
0002E8B0 <AmiBlitz3.ab3@17669>    TST.w regnum
0002E8B4 <AmiBlitz3.ab3@17670>    BNE 'nofastload
0002E8BA <AmiBlitz3.ab3@17671>    CMP.l fp0addr,a4
0002E8BE <AmiBlitz3.ab3@17672>    BNE 'nofastload
0002E8C4 <AmiBlitz3.ab3@17673>    MOVE.l fp0iff,d1
0002E8CA <AmiBlitz3.ab3@17674>    CMP.l firstiff,d1
0002E8CE <AmiBlitz3.ab3@17675>    BNE 'nofastload
0002E8D4 <AmiBlitz3.ab3@17676>    MOVE.w varmode,d1
0002E8DA <AmiBlitz3.ab3@17677>    CMP.w fp0mode,d1
0002E8DE <AmiBlitz3.ab3@17678>    BNE 'nofastload
0002E8E4 <AmiBlitz3.ab3@17679>    CMP.w fp0var,d3
0002E8E8 <AmiBlitz3.ab3@17680>    BNE 'nofastload
0002E8EC <AmiBlitz3.ab3@17681>    BCLR #16,d2
0002E8EE <AmiBlitz3.ab3@17682>    MOVE.l (a7)+,d0
0002E8F0 <AmiBlitz3.ab3@17683> RTS
0002E8F2 <AmiBlitz3.ab3@17686>    MOVEQ #0,d0
0002E8F8 <AmiBlitz3.ab3@17687>    MOVE.w regnum,d0
0002E8FE <AmiBlitz3.ab3@17688>    CMP.l maxregs,d0
0002E902 <AmiBlitz3.ab3@17689>    BLE 'ok
0002E908 <AmiBlitz3.ab3@17690>    LEA cmplxerr,a0
0002E90A <AmiBlitz3.ab3@17691>   MOVE.l a0,-(a7)
0002E910 <AmiBlitz3.ab3@17692> JMP handle_compileerror
0002E916 <AmiBlitz3.ab3@17695>    LEA regtable,a4
0002E918 <AmiBlitz3.ab3@17696>    TST.l (a4)
0002E91C <AmiBlitz3.ab3@17697>    BEQ 'noreg
0002E920 <AmiBlitz3.ab3@17698>    CMP.w 0+4(a4),d3
0002E924 <AmiBlitz3.ab3@17699>    BNE 'doreg1
0002E92A <AmiBlitz3.ab3@17700>    MOVE.l #$f2001c00,d1
0002E930 <AmiBlitz3.ab3@17701>    MOVE.w regnum,d0
0002E932 <AmiBlitz3.ab3@17702>    ASL.w #7,d0
0002E934 <AmiBlitz3.ab3@17703>    OR.w d0,d1
0002E938 <AmiBlitz3.ab3@17704>    BSR writelong
0002E93A <AmiBlitz3.ab3@17705>    MOVE.l (a7)+,d0
0002E93C <AmiBlitz3.ab3@17706> RTS
0002E940 <AmiBlitz3.ab3@17709>   CMP.w 8+4(a4),d3
0002E944 <AmiBlitz3.ab3@17710>    BNE 'doreg2
0002E94A <AmiBlitz3.ab3@17711>    MOVE.l #$f2001800,d1
0002E950 <AmiBlitz3.ab3@17712>    MOVE.w regnum,d0
0002E952 <AmiBlitz3.ab3@17713>    ASL.w #7,d0
0002E954 <AmiBlitz3.ab3@17714>    OR.w d0,d1
0002E958 <AmiBlitz3.ab3@17715>    BSR writelong
0002E95A <AmiBlitz3.ab3@17716>    MOVE.l (a7)+,d0
0002E95C <AmiBlitz3.ab3@17717> RTS
0002E960 <AmiBlitz3.ab3@17720>   CMP.w 16+4(a4),d3
0002E964 <AmiBlitz3.ab3@17721>    BNE 'doreg3
0002E96A <AmiBlitz3.ab3@17722>    MOVE.l #$f2001400,d1
0002E970 <AmiBlitz3.ab3@17723>    MOVE.w regnum,d0
0002E972 <AmiBlitz3.ab3@17724>    ASL.w #7,d0
0002E974 <AmiBlitz3.ab3@17725>    OR.w d0,d1
0002E978 <AmiBlitz3.ab3@17726>    BSR  writelong
0002E97A <AmiBlitz3.ab3@17727>    MOVE.l (a7)+,d0
0002E97C <AmiBlitz3.ab3@17728> RTS
0002E980 <AmiBlitz3.ab3@17731>   CMP.w 24+4(a4),d3
0002E984 <AmiBlitz3.ab3@17732>    BNE 'doreg4
0002E98A <AmiBlitz3.ab3@17733>    MOVE.l #$f2001000,d1
0002E990 <AmiBlitz3.ab3@17734>    MOVE.w regnum,d0
0002E992 <AmiBlitz3.ab3@17735>    ASL.w #7,d0
0002E994 <AmiBlitz3.ab3@17736>    OR.w d0,d1
0002E998 <AmiBlitz3.ab3@17737>    BSR writelong
0002E99A <AmiBlitz3.ab3@17738>    MOVE.l (a7)+,d0
0002E99C <AmiBlitz3.ab3@17739> RTS
0002E9A0 <AmiBlitz3.ab3@17742>    CMP.w 32+4(a4),d3
0002E9A4 <AmiBlitz3.ab3@17743>    BNE 'noreg
0002E9AA <AmiBlitz3.ab3@17744>    MOVE.l #$f2000c00,d1
0002E9B0 <AmiBlitz3.ab3@17745>    MOVE.w regnum,d0
0002E9B2 <AmiBlitz3.ab3@17746>    ASL.w #7,d0
0002E9B4 <AmiBlitz3.ab3@17747>    OR.w d0,d1
0002E9B8 <AmiBlitz3.ab3@17748>    BSR writelong
0002E9BA <AmiBlitz3.ab3@17749>    MOVE.l (a7)+,d0
0002E9BC <AmiBlitz3.ab3@17750> RTS
0002E9C2 <AmiBlitz3.ab3@17753>    MOVE.l #$f22d4400,d1                                    ;var
0002E9C8 <AmiBlitz3.ab3@17754>    TST.w varmode
0002E9CC <AmiBlitz3.ab3@17755>   BEQ 'glob
0002E9D0 <AmiBlitz3.ab3@17756>   BCLR #16,d1                                              ;local
0002E9D2 <AmiBlitz3.ab3@17759>    MOVEQ #0,d0
0002E9D8 <AmiBlitz3.ab3@17760>    MOVE.w regnum,d0
0002E9DC <AmiBlitz3.ab3@17761>    CMP.w #7,d0
0002E9E0 <AmiBlitz3.ab3@17762>    BLE 'ok2
0002E9E6 <AmiBlitz3.ab3@17763>    LEA cmplxerr,a0
0002E9E8 <AmiBlitz3.ab3@17764>   MOVE.l a0,-(a7)
0002E9EE <AmiBlitz3.ab3@17765> JMP handle_compileerror
0002E9F0 <AmiBlitz3.ab3@17768>      ASL.w #7,d0
0002E9F2 <AmiBlitz3.ab3@17769>    OR.l d0,d1
0002E9FA <AmiBlitz3.ab3@17770>    CMP.l #doublecheck,8(a2)
0002E9FE <AmiBlitz3.ab3@17771>    BNE 'dbl
0002EA04 <AmiBlitz3.ab3@17772>    OR.l #$00001000,d1
0002EA08 <AmiBlitz3.ab3@17775>   BSR writelong
0002EA0A <AmiBlitz3.ab3@17776>    MOVE.l (a7)+,d0
0002EA0E <AmiBlitz3.ab3@17777>    AND.w #$ff,d2
0002EA10 <AmiBlitz3.ab3@17778>    MOVE.w d3,d1
0002EA14 <AmiBlitz3.ab3@17779>    BEQ 'nooffs
0002EA18 <AmiBlitz3.ab3@17780> BRA writeword
0002EA1A <AmiBlitz3.ab3@17785> RTS
0002EA20 <AmiBlitz3.ab3@17788>   MOVE.w regnum,D1
0002EA26 <AmiBlitz3.ab3@17789>   MOVE.w d1,load_var_reg
0002EA28 <AmiBlitz3.ab3@17790>   LSL.w #8,D1
0002EA32 <AmiBlitz3.ab3@17791>   MOVE.l destpointer,load_var_addr
0002EA38 <AmiBlitz3.ab3@17792>   MOVE.w d2,load_var_size
0002EA3A <AmiBlitz3.ab3@17793>   LSL.w #1,D1
0002EA3E <AmiBlitz3.ab3@17794>   BTST #$E,D2
0002EA42 <AmiBlitz3.ab3@17795>    BNE.w JL_0_B17A
0002EA44 <AmiBlitz3.ab3@17796>   TST.b D2
0002EA48 <AmiBlitz3.ab3@17797>    BNE.w JL_0_B17E
0002EA4A <AmiBlitz3.ab3@17798>   MOVEQ.l #$03,D2
0002EA4E <AmiBlitz3.ab3@17799>   ORI.w #$200A,D1
0002EA52 <AmiBlitz3.ab3@17800> BRA.w writeword
0002EA56 <AmiBlitz3.ab3@17803>   MOVE.b #$3,D2
0002EA5A <AmiBlitz3.ab3@17806>   BTST #$F,D2
0002EA5E <AmiBlitz3.ab3@17807>    BEQ.w JL_0_B19A                                         ;loadarray
0002EA64 <AmiBlitz3.ab3@17808>    TST.b fast                                              ;lea->move xx(a2)
0002EA68 <AmiBlitz3.ab3@17809>    BEQ 'la10
0002EA6E <AmiBlitz3.ab3@17814>    CLR.l load_var_addr
0002EA72 <AmiBlitz3.ab3@17815> BRA 'la10
0002EA7A <AmiBlitz3.ab3@17817>    CMP.w #$2012,movea2dn                                  ;??Looks like dead code??
0002EA7E <AmiBlitz3.ab3@17818>    BNE 'la10
0002EA84 <AmiBlitz3.ab3@17819>    TST.b optiarray
0002EA88 <AmiBlitz3.ab3@17820>    BNE 'la10
0002EA8E <AmiBlitz3.ab3@17821>    MOVE.l destpointer,a4
0002EA94 <AmiBlitz3.ab3@17822>    SUB.l loada,a4
0002EA98 <AmiBlitz3.ab3@17823>    CMP.w #4,a4
0002EA9C <AmiBlitz3.ab3@17824>    BEQ 'la100
0002EAA0 <AmiBlitz3.ab3@17825>    CMP.w #2,a4
0002EAA4 <AmiBlitz3.ab3@17826>    BNE 'la10
0002EAAA <AmiBlitz3.ab3@17827>    MOVE.l destpointer,a4
0002EAAE <AmiBlitz3.ab3@17828>    CMP.b #3,d2
0002EAB2 <AmiBlitz3.ab3@17829>    BCS 'la110
0002EAB8 <AmiBlitz3.ab3@17830>    MOVE.w #$202a,-2(a4)
0002EABC <AmiBlitz3.ab3@17831>    OR.w d1,-2(a4)
0002EAC2 <AmiBlitz3.ab3@17832>    MOVE.w arrayoffset,d1
0002EAC6 <AmiBlitz3.ab3@17833>    BSR writeword
0002EACA <AmiBlitz3.ab3@17834> BRA JL_0_B194
0002EACE <AmiBlitz3.ab3@17837>    CMP.b #2,d2
0002EAD2 <AmiBlitz3.ab3@17838>    BNE 'la120
0002EAD8 <AmiBlitz3.ab3@17839>     MOVE.w #$302a,-2(a4)
0002EADC <AmiBlitz3.ab3@17840>    OR.w d1,-2(a4)
0002EAE2 <AmiBlitz3.ab3@17842>    MOVE.w arrayoffset,d1
0002EAE6 <AmiBlitz3.ab3@17843>    BSR writeword
0002EAEA <AmiBlitz3.ab3@17844> BRA JL_0_B194
0002EAEE <AmiBlitz3.ab3@17847>   CMP.b #1,d2
0002EAF2 <AmiBlitz3.ab3@17848>    BNE.s 'la10
0002EAF8 <AmiBlitz3.ab3@17849>     MOVE.w #$102a,-2(a4)
0002EAFC <AmiBlitz3.ab3@17850>    OR.w d1,-2(a4)
0002EB02 <AmiBlitz3.ab3@17851>    MOVE.w arrayoffset,d1
0002EB06 <AmiBlitz3.ab3@17852>    BSR writeword
0002EB0A <AmiBlitz3.ab3@17853> BRA JL_0_B194
0002EB10 <AmiBlitz3.ab3@17856>   MOVE.l destpointer,a4
0002EB16 <AmiBlitz3.ab3@17857>    CMP.w #$45ea,-2(a4)
0002EB1A <AmiBlitz3.ab3@17858>    BNE 'la10
0002EB1E <AmiBlitz3.ab3@17859>    CMP.b #3,d2
0002EB22 <AmiBlitz3.ab3@17860>    BCS 'la11
0002EB28 <AmiBlitz3.ab3@17861>    MOVE.w #$202a,-4(a4)
0002EB2C <AmiBlitz3.ab3@17862>    OR.w d1,-4(a4)
0002EB30 <AmiBlitz3.ab3@17863> BRA JL_0_B194
0002EB34 <AmiBlitz3.ab3@17866>    CMP.b #2,d2
0002EB38 <AmiBlitz3.ab3@17867>    BNE 'la12
0002EB3E <AmiBlitz3.ab3@17868>     MOVE.w #$302a,-4(a4)
0002EB42 <AmiBlitz3.ab3@17869>    OR.w d1,-4(a4)
0002EB46 <AmiBlitz3.ab3@17870> BRA JL_0_B194
0002EB4A <AmiBlitz3.ab3@17873>   CMP.b #1,d2
0002EB4E <AmiBlitz3.ab3@17874>    BNE.s 'la10
0002EB54 <AmiBlitz3.ab3@17875>     MOVE.w #$102a,-4(a4)
0002EB58 <AmiBlitz3.ab3@17876>    OR.w d1,-4(a4)
0002EB5C <AmiBlitz3.ab3@17877> BRA JL_0_B194
0002EB62 <AmiBlitz3.ab3@17880>    OR.w movea2dn,D1
0002EB66 <AmiBlitz3.ab3@17881>    BSR.w JL_0_B1B2
0002EB6A <AmiBlitz3.ab3@17882>    BSR.w writeword
0002EB6E <AmiBlitz3.ab3@17885>   ANDI.w #$FF,D2
0002EB70 <AmiBlitz3.ab3@17886> RTS
0002EB76 <AmiBlitz3.ab3@17890>    MOVE.l destpointer,a4
0002EB7E <AmiBlitz3.ab3@17891>    MOVE.l #$f22a4400,-4(a4)
0002EB84 <AmiBlitz3.ab3@17892>    MOVE.w arrayoffset,d1
0002EB88 <AmiBlitz3.ab3@17893> BRA writeword
0002EB8E <AmiBlitz3.ab3@17897>   OR.w moved3a5dn,D1                                        ;write move.l 0(a5),reg
0002EB92 <AmiBlitz3.ab3@17898>    BSR.w JL_0_B1B2
0002EB96 <AmiBlitz3.ab3@17899>    BSR.w pokewda5s
0002EB98 <AmiBlitz3.ab3@17900>   MOVE.w D3,D1
0002EB9C <AmiBlitz3.ab3@17901>    BSR.w writeword
0002EBA0 <AmiBlitz3.ab3@17902> BRA.w JL_0_B194
0002EBA4 <AmiBlitz3.ab3@17905>   BTST #$E,D2
0002EBA8 <AmiBlitz3.ab3@17906>    BNE.w JL_0_B1CA
0002EBAC <AmiBlitz3.ab3@17907>   CMP.b #$1,D2
0002EBB0 <AmiBlitz3.ab3@17908>    BEQ.w JL_0_B1CC
0002EBB4 <AmiBlitz3.ab3@17909>   CMP.b #$2,D2
0002EBB8 <AmiBlitz3.ab3@17910>    BEQ.w JL_0_B1D2
0002EBBA <AmiBlitz3.ab3@17913> RTS
0002EBBE <AmiBlitz3.ab3@17916>   EORI.w #$3000,D1
0002EBC0 <AmiBlitz3.ab3@17917> RTS
0002EBC4 <AmiBlitz3.ab3@17920>   ORI.w #$1000,D1
0002EBC6 <AmiBlitz3.ab3@17921> RTS
0002EBCE <AmiBlitz3.ab3@17925>   MOVE.w #$FFFF,dfetch
0002EBD2 <AmiBlitz3.ab3@17926>   BSR.w get1bytemain
0002EBD6 <AmiBlitz3.ab3@17927>   CMP.w #$2D,D0
0002EBDA <AmiBlitz3.ab3@17928>    BNE.w JL_0_B206
0002EBDE <AmiBlitz3.ab3@17929>   BSR.w get1bytemain
0002EBE2 <AmiBlitz3.ab3@17930>   BSR.w JL_0_B206
0002EBE6 <AmiBlitz3.ab3@17931>   CMP.w #$5,D2
0002EBEA <AmiBlitz3.ab3@17932>    BCC.w JL_0_B200
0002EBEC <AmiBlitz3.ab3@17933>   NEG.l D0
0002EBEE <AmiBlitz3.ab3@17934> RTS
0002EBF4 <AmiBlitz3.ab3@17937>   TST.b fpu
0002EBF8 <AmiBlitz3.ab3@17938>   BEQ 'noneg
0002EBFC <AmiBlitz3.ab3@17939>   fneg.x fp0
0002EBFE <AmiBlitz3.ab3@17940> RTS
0002EC02 <AmiBlitz3.ab3@17943>   BCHG #$7,D0
0002EC04 <AmiBlitz3.ab3@17944> RTS
0002EC08 <AmiBlitz3.ab3@17947>   CMP.w #$24,D0
0002EC0C <AmiBlitz3.ab3@17948>    BEQ.w get_hexconstant
0002EC10 <AmiBlitz3.ab3@17949>   CMP.w #$25,D0
0002EC14 <AmiBlitz3.ab3@17950>    BEQ.w JL_0_A8C0
0002EC18 <AmiBlitz3.ab3@17951>   CMP.w #$2E,D0
0002EC1C <AmiBlitz3.ab3@17952>    BNE.w JL_0_B224
0002EC1E <AmiBlitz3.ab3@17955>   MOVEQ.l #$00,D3
0002EC22 <AmiBlitz3.ab3@17956> BRA.w JL_0_B272
0002EC24 <AmiBlitz3.ab3@17959>   MOVEQ.l #$00,D3                                          ;number
0002EC28 <AmiBlitz3.ab3@17960>    BSR.w atoi
0002EC2C <AmiBlitz3.ab3@17961>   CMP.w #$2E,D0
0002EC30 <AmiBlitz3.ab3@17962>    BEQ.w JL_0_B268
0002EC34 <AmiBlitz3.ab3@17963>   ORI.w #$20,D0
0002EC38 <AmiBlitz3.ab3@17964>   CMP.w #$65,D0
0002EC3C <AmiBlitz3.ab3@17965>    BNE.w JL_0_B46E
0002EC42 <AmiBlitz3.ab3@17966>   CMP.l #$800000,D3
0002EC46 <AmiBlitz3.ab3@17967>    BCC.w overerr
0002EC48 <AmiBlitz3.ab3@17968>   MOVEQ.l #-$01,D6
0002EC4C <AmiBlitz3.ab3@17969>   fmove.l d3,fp0
0002EC4E <AmiBlitz3.ab3@17970>   MOVE.l D3,D0
0002EC54 <AmiBlitz3.ab3@17971>   MOVEA.l _mathffpbase,A6
0002EC58 <AmiBlitz3.ab3@17972>    JSR -$24(A6)
0002EC5A <AmiBlitz3.ab3@17973>   MOVE.l D0,D3
0002EC5E <AmiBlitz3.ab3@17974>    BSR.w JL_0_B2E6
0002EC62 <AmiBlitz3.ab3@17975>    BSR.w reget
0002EC66 <AmiBlitz3.ab3@17976>    BSR.w JL_0_B480
0002EC6A <AmiBlitz3.ab3@17977> BRA.w JL_0_B3DC
0002EC6E <AmiBlitz3.ab3@17980>   CMP.b #4,d2
0002EC72 <AmiBlitz3.ab3@17981>   BEQ 'l4
0002EC76 <AmiBlitz3.ab3@17982>   MOVE.b #5,d2                                             ;nprint 2/0.5 bugfix
0002EC7C <AmiBlitz3.ab3@17985>    TST.b fpu
0002EC80 <AmiBlitz3.ab3@17986>    BNE 'l1
0002EC86 <AmiBlitz3.ab3@17987>    CMP.l #$800000,D3
0002EC8A <AmiBlitz3.ab3@17988>    BCC.w overerr
0002EC8E <AmiBlitz3.ab3@17989> BRA JL_0_B272
0002EC94 <AmiBlitz3.ab3@17992>   CMP.l #$7fffffff,d3
0002EC98 <AmiBlitz3.ab3@17993>     BCC.w overerr
0002EC9A <AmiBlitz3.ab3@17996>   MOVEQ.l #-$01,D6
0002EC9C <AmiBlitz3.ab3@17997>   MOVE.l D3,D0
0002ECA0 <AmiBlitz3.ab3@17998>   fmove.l d3,fp0
0002ECA6 <AmiBlitz3.ab3@17999>   MOVEA.l _mathffpbase,A6
0002ECAA <AmiBlitz3.ab3@18000>    JSR -$24(A6)                                            ;integer to ffp
0002ECAC <AmiBlitz3.ab3@18001>   MOVE.l D0,-(A7)
0002ECB0 <AmiBlitz3.ab3@18002>    BSR.w get1bytemain
0002ECB4 <AmiBlitz3.ab3@18003>    BSR.w tstnum
0002ECB8 <AmiBlitz3.ab3@18004>    BNE.w syntaxerr
0002ECBA <AmiBlitz3.ab3@18005>   MOVEQ.l #$00,D3
0002ECBE <AmiBlitz3.ab3@18006>    BSR.w atoi
0002ECC0 <AmiBlitz3.ab3@18007>   TST.l D3
0002ECC4 <AmiBlitz3.ab3@18008>    BEQ.w JL_0_B2E0
0002ECCA <AmiBlitz3.ab3@18009>   TST.b fpu
0002ECCE <AmiBlitz3.ab3@18010>   BNE 'l1
0002ECD4 <AmiBlitz3.ab3@18011>   CMP.l #$800000,D3
0002ECD8 <AmiBlitz3.ab3@18012>    BCC.w overerr
0002ECDC <AmiBlitz3.ab3@18013> BRA 'l2
0002ECE2 <AmiBlitz3.ab3@18016>   CMP.l #$7fffffff,d3
0002ECE6 <AmiBlitz3.ab3@18017>   BCC overerr
0002ECEA <AmiBlitz3.ab3@18020>   fmove.l d5,fp1
0002ECEC <AmiBlitz3.ab3@18021>   MOVE.l D5,D0
0002ECF0 <AmiBlitz3.ab3@18022>    JSR -$24(A6)
0002ECF2 <AmiBlitz3.ab3@18023>   MOVE.l D0,D5
0002ECF6 <AmiBlitz3.ab3@18024>   fmove.l d3,fp2
0002ECF8 <AmiBlitz3.ab3@18025>   MOVE.l D3,D0
0002ECFC <AmiBlitz3.ab3@18026>    JSR -$24(A6)
0002ED00 <AmiBlitz3.ab3@18027>   fdiv.x fp1,fp2
0002ED02 <AmiBlitz3.ab3@18028>   MOVE.l D5,D1
0002ED06 <AmiBlitz3.ab3@18029>    JSR -$54(A6)
0002ED0A <AmiBlitz3.ab3@18030>   fadd.x fp2,fp0
0002ED0C <AmiBlitz3.ab3@18031>   MOVE.l (A7)+,D1
0002ED10 <AmiBlitz3.ab3@18032>    JSR -$42(A6)
0002ED12 <AmiBlitz3.ab3@18033>   MOVE.l D0,D3
0002ED16 <AmiBlitz3.ab3@18034>    BSR.w reget
0002ED1A <AmiBlitz3.ab3@18035>   ORI.w #$20,D0
0002ED1E <AmiBlitz3.ab3@18036>   CMP.w #$65,D0
0002ED22 <AmiBlitz3.ab3@18037>    BNE.w JL_0_B2D4
0002ED26 <AmiBlitz3.ab3@18038>    BSR.w JL_0_B2E6
0002ED2A <AmiBlitz3.ab3@18041>    BSR.w reget
0002ED2E <AmiBlitz3.ab3@18042>    BSR.w JL_0_B480
0002ED32 <AmiBlitz3.ab3@18043> BRA.w JL_0_B3DC
0002ED34 <AmiBlitz3.ab3@18046>   MOVE.l (A7)+,D3
0002ED38 <AmiBlitz3.ab3@18047> BRA.w JL_0_B2D4
0002ED3C <AmiBlitz3.ab3@18050>   BSR.w get1bytemain
0002ED40 <AmiBlitz3.ab3@18051>   CMP.w #$2B,D0
0002ED44 <AmiBlitz3.ab3@18052>    BEQ.w JL_0_B30E
0002ED48 <AmiBlitz3.ab3@18053>   CMP.w #$2D,D0
0002ED4C <AmiBlitz3.ab3@18054>    BNE.w JL_0_B312
0002ED50 <AmiBlitz3.ab3@18055>    BSR.w get1bytemain
0002ED54 <AmiBlitz3.ab3@18056>    BSR.w getsign
0002ED56 <AmiBlitz3.ab3@18057>   MOVE.l D3,D0
0002ED5A <AmiBlitz3.ab3@18058>   fdiv.x fp1,fp0
0002ED5C <AmiBlitz3.ab3@18059>   MOVE.l D4,D1
0002ED60 <AmiBlitz3.ab3@18060>    JSR -$54(A6)
0002ED62 <AmiBlitz3.ab3@18061>   MOVE.l D0,D3
0002ED64 <AmiBlitz3.ab3@18062> RTS
0002ED68 <AmiBlitz3.ab3@18065>   BSR.w get1bytemain
0002ED6C <AmiBlitz3.ab3@18068>   BSR.w getsign
0002ED70 <AmiBlitz3.ab3@18069>   fmul.x fp1,fp0
0002ED72 <AmiBlitz3.ab3@18070>   MOVE.l D3,D0
0002ED74 <AmiBlitz3.ab3@18071>   MOVE.l D4,D1
0002ED78 <AmiBlitz3.ab3@18072>    JSR -$4E(A6)
0002ED7A <AmiBlitz3.ab3@18073>   MOVE.l D0,D3
0002ED7C <AmiBlitz3.ab3@18074> RTS
0002ED80 <AmiBlitz3.ab3@18077>   BSR.w tstnum
0002ED84 <AmiBlitz3.ab3@18078>    BNE.w syntaxerr
0002ED86 <AmiBlitz3.ab3@18079>   MOVE.w D0,D4
0002ED8A <AmiBlitz3.ab3@18080>   SUBI.w #$30,D4
0002ED8E <AmiBlitz3.ab3@18081>    BSR.w get1bytemain
0002ED92 <AmiBlitz3.ab3@18082>    BSR.w tstnum
0002ED96 <AmiBlitz3.ab3@18083>    BNE.w getsign__skip
0002ED9A <AmiBlitz3.ab3@18084>   MULU #$A,D4
0002ED9E <AmiBlitz3.ab3@18085>   SUBI.w #$30,D0
0002EDA0 <AmiBlitz3.ab3@18086>   ADD.w D0,D4
0002EDA4 <AmiBlitz3.ab3@18087>    BSR.w get1bytemain
0002EDA8 <AmiBlitz3.ab3@18090>   CMP.w #$12,D4
0002EDAC <AmiBlitz3.ab3@18091>    BHI.w overerr
0002EDAE <AmiBlitz3.ab3@18092>   LSL.w #3,D4
0002EDB4 <AmiBlitz3.ab3@18093>   LEA fputab,a0
0002EDB6 <AmiBlitz3.ab3@18094>   ADD.l d4,a0
0002EDBC <AmiBlitz3.ab3@18095>   fmove.d 0(a0),fp1
0002EDBE <AmiBlitz3.ab3@18096>   LSR.w #1,d4
0002EDC2 <AmiBlitz3.ab3@18097>   MOVE.l facts(PC,D4.W),D4
0002EDC4 <AmiBlitz3.ab3@18098> RTS
0002EE0C <AmiBlitz3.ab3@18102>   Dc.d 1,10,100,1000,10000,100000,1000000,10000000,100000000  ;,1000000000,10000000000
0002EE10 <AmiBlitz3.ab3@18107>   Dc.l $80000041
0002EE14 <AmiBlitz3.ab3@18108>   Dc.l $A0000044
0002EE18 <AmiBlitz3.ab3@18109>   Dc.l $C8000047
0002EE1C <AmiBlitz3.ab3@18110>   Dc.l $FA00004A
0002EE20 <AmiBlitz3.ab3@18111>   Dc.l $9C40004E
0002EE24 <AmiBlitz3.ab3@18112>   Dc.l $C3500051
0002EE28 <AmiBlitz3.ab3@18113>   Dc.l $F4240054
0002EE2C <AmiBlitz3.ab3@18114>   Dc.l $98968058
0002EE30 <AmiBlitz3.ab3@18115>   Dc.l $BEBC205B
0002EE34 <AmiBlitz3.ab3@18116>   Dc.l $EE6B285E
0002EE38 <AmiBlitz3.ab3@18117>   Dc.l $9502F962
0002EE3C <AmiBlitz3.ab3@18118>   Dc.l $BA43B765
0002EE40 <AmiBlitz3.ab3@18119>   Dc.l $E8D4A568
0002EE44 <AmiBlitz3.ab3@18120>   Dc.l $9184E76C
0002EE48 <AmiBlitz3.ab3@18121>   Dc.l $B5E6A96F
0002EE4C <AmiBlitz3.ab3@18122>   Dc.l $E35F2972
0002EE50 <AmiBlitz3.ab3@18123>   Dc.l $8E1BCA76
0002EE54 <AmiBlitz3.ab3@18124>   Dc.l $B1A2BD79
0002EE58 <AmiBlitz3.ab3@18125>   Dc.l $DE0B6C7C
0002EE5A <AmiBlitz3.ab3@18129>   MOVEQ.l #$01,D5
0002EE5C <AmiBlitz3.ab3@18132>   LSL.l #1,D5
0002EE5E <AmiBlitz3.ab3@18133>   MOVE.l D5,D1
0002EE60 <AmiBlitz3.ab3@18134>   LSL.l #2,D5
0002EE62 <AmiBlitz3.ab3@18135>   ADD.l D1,D5                                              ;divisor for frac convert!
0002EE64 <AmiBlitz3.ab3@18136>   LSL.l #1,D3
0002EE68 <AmiBlitz3.ab3@18137>    BCS.w overerr
0002EE6A <AmiBlitz3.ab3@18138>   MOVE.l D3,D1
0002EE6C <AmiBlitz3.ab3@18139>   LSL.l #1,D3
0002EE70 <AmiBlitz3.ab3@18140>    BCS.w overerr
0002EE72 <AmiBlitz3.ab3@18141>   LSL.l #1,D3
0002EE76 <AmiBlitz3.ab3@18142>    BCS.w overerr
0002EE78 <AmiBlitz3.ab3@18143>   ADD.l D1,D3
0002EE7C <AmiBlitz3.ab3@18144>   SUBI.w #$30,D0
0002EE7E <AmiBlitz3.ab3@18145>   ADD.l D0,D3
0002EEAA <AmiBlitz3.ab3@18146>    !fget                                                   ;bsr.w get1bytemain
0002EEAE <AmiBlitz3.ab3@18147>    CMP.b #1,d0
0002EEB2 <AmiBlitz3.ab3@18148>    BNE 'cm1
0002EEB4 <AmiBlitz3.ab3@18149>    SUBQ.l #1,a5
0002EEB8 <AmiBlitz3.ab3@18150>    BSR get1bytemain                                        ;??wy not !fget
0002EEBC <AmiBlitz3.ab3@18153>   CMP.b #$7e,d0
0002EEC0 <AmiBlitz3.ab3@18154>    BNE 'cm2
0002EEC2 <AmiBlitz3.ab3@18155>    SUBQ.l #1,a5
0002EEC6 <AmiBlitz3.ab3@18156>    BSR get1bytemain
0002EEC8 <AmiBlitz3.ab3@18159>   TST.b d0
0002EECC <AmiBlitz3.ab3@18160>    BPL 'l10
0002EECE <AmiBlitz3.ab3@18161>    LSL.w #8,d0
0002EED0 <AmiBlitz3.ab3@18162>    MOVE.b (a5)+,d0
0002EED6 <AmiBlitz3.ab3@18163>    MOVE.w d0,lastchar
0002EEE8 <AmiBlitz3.ab3@18166>   !compare2                                                ;bsr.w tstnum ;cmake bug
0002EEEC <AmiBlitz3.ab3@18167>    BEQ.w atoi__loop
0002EEEE <AmiBlitz3.ab3@18168> RTS
0002EEF0 <AmiBlitz3.ab3@18171> dfetch:  Ds.w 1                                            ;fetching data?
0002EEF4 <AmiBlitz3.ab3@18175>   MOVE.w dfetch(PC),D1
0002EEF8 <AmiBlitz3.ab3@18176>    BEQ.w JL_0_B3EC
0002EEFE <AmiBlitz3.ab3@18177>   CLR.w dfetch
0002EF00 <AmiBlitz3.ab3@18178> RTS
0002EF06 <AmiBlitz3.ab3@18181>   MOVE.b d2,isconstantvalue
0002EF0C <AmiBlitz3.ab3@18182>   MOVE.l d0,lastconstantvalue
0002EF12 <AmiBlitz3.ab3@18183>   MOVE.w d2,imm_size
0002EF1C <AmiBlitz3.ab3@18184>   MOVE.w regnum,imm_reg
0002EF26 <AmiBlitz3.ab3@18185>   MOVE.l destpointer,imm_addr                           ; long
0002EF2A <AmiBlitz3.ab3@18186>   CMP.w #$3,D2
0002EF2E <AmiBlitz3.ab3@18187>   BEQ.w JL_0_B434
0002EF32 <AmiBlitz3.ab3@18188>   CMP.w #$5,D2                                          ;float
0002EF36 <AmiBlitz3.ab3@18189>   BEQ.w JL_0_B434
0002EF3A <AmiBlitz3.ab3@18190>   CMP.w #$1,D2
0002EF3E <AmiBlitz3.ab3@18191>   BEQ.w JL_0_B418
0002EF42 <AmiBlitz3.ab3@18192>   CMP.w #$2,D2
0002EF46 <AmiBlitz3.ab3@18193>   BEQ.w JL_0_B418
0002EF4A <AmiBlitz3.ab3@18194>   CMP.w #$4,D2
0002EF4E <AmiBlitz3.ab3@18195>   BEQ.w JL_0_B434
0002EF52 <AmiBlitz3.ab3@18197> BRA.w mismatcherr
0002EF58 <AmiBlitz3.ab3@18200>   MOVE.w regnum,D1
0002EF5A <AmiBlitz3.ab3@18201>   LSL.w #8,D1
0002EF5C <AmiBlitz3.ab3@18202>   LSL.w #1,D1
0002EF60 <AmiBlitz3.ab3@18203>   ORI.w #$303C,D1
0002EF64 <AmiBlitz3.ab3@18204>    BSR.w writeword
0002EF66 <AmiBlitz3.ab3@18205>   MOVE.w D0,D1
0002EF6A <AmiBlitz3.ab3@18206>    BSR.w writeword
0002EF6E <AmiBlitz3.ab3@18207> BRA.w reget
0002EF70 <AmiBlitz3.ab3@18210>   MOVEQ #0,d1
0002EF76 <AmiBlitz3.ab3@18211>   MOVE.w regnum,D1
0002EF7C <AmiBlitz3.ab3@18212>   TST.b fpu
0002EF80 <AmiBlitz3.ab3@18213>   BEQ 'f1
0002EF84 <AmiBlitz3.ab3@18214>   CMP.w #5,d2
0002EF88 <AmiBlitz3.ab3@18215>   BEQ 'l10
0002EF8C <AmiBlitz3.ab3@18216> BRA 'f2
0002EF92 <AmiBlitz3.ab3@18219>   TST.b iee
0002EF96 <AmiBlitz3.ab3@18220>   BNE 'l10
0002EF98 <AmiBlitz3.ab3@18223>   LSL.w #8,D1
0002EF9A <AmiBlitz3.ab3@18224>   LSL.w #1,D1
0002EF9E <AmiBlitz3.ab3@18225>   ORI.w #$203C,D1
0002EFA2 <AmiBlitz3.ab3@18226>    BSR.w writeword
0002EFA4 <AmiBlitz3.ab3@18227>   MOVE.l D0,D1
0002EFA8 <AmiBlitz3.ab3@18228>    BSR.w writelong
0002EFAC <AmiBlitz3.ab3@18229> BRA.w reget
0002EFAE <AmiBlitz3.ab3@18232>   MOVEQ #5,d2
0002EFB0 <AmiBlitz3.ab3@18233>   ASL.l #7,d1
0002EFB2 <AmiBlitz3.ab3@18234>   SUBQ.l #8,a7
0002EFB8 <AmiBlitz3.ab3@18239>       OR.l #$f23c4400,d1                                   ;fmove.s
0002EFBE <AmiBlitz3.ab3@18240>        fmove.s fp0,0(a7)
0002EFC2 <AmiBlitz3.ab3@18242>   BSR writelong
0002EFC4 <AmiBlitz3.ab3@18243>   MOVE.l (a7)+,d1
0002EFC8 <AmiBlitz3.ab3@18244>   BSR writelong
0002EFCA <AmiBlitz3.ab3@18245>   MOVE.l (a7)+,d1
0002EFCE <AmiBlitz3.ab3@18249> BRA.w reget
0002EFD0 <AmiBlitz3.ab3@18255>  MOVE.l D3,D0
0002EFD2 <AmiBlitz3.ab3@18256>   TST.w D6
0002EFD6 <AmiBlitz3.ab3@18257>    BEQ.w JL_0_B46C
0002EFDC <AmiBlitz3.ab3@18258>   MOVEA.l _mathffpbase,A6
0002EFE0 <AmiBlitz3.ab3@18259>    JSR -$1E(A6)
0002EFE4 <AmiBlitz3.ab3@18260>    BVC.w JL_0_B46C
0002EFE6 <AmiBlitz3.ab3@18261>   ADDQ.w #4,A7
0002EFEA <AmiBlitz3.ab3@18262> BRA.w JL_0_B5A0
0002EFEC <AmiBlitz3.ab3@18265> RTS
0002EFEE <AmiBlitz3.ab3@18269>   MOVEQ.l #$00,D6
0002EFF2 <AmiBlitz3.ab3@18270>    fmove.l d3,fp0
0002EFF6 <AmiBlitz3.ab3@18273>   BSR.w JL_0_B480
0002EFFA <AmiBlitz3.ab3@18274> BRA.w JL_0_B3DC
0002EFFC <AmiBlitz3.ab3@18277>   MOVE.w D2,-(A7)
0002F000 <AmiBlitz3.ab3@18278>    BSR.w JL_0_BF6A
0002F002 <AmiBlitz3.ab3@18279>   MOVE.w (A7)+,D2
0002F004 <AmiBlitz3.ab3@18282>   TST.w D2
0002F008 <AmiBlitz3.ab3@18283>    BNE.w JL_0_B498
0002F00A <AmiBlitz3.ab3@18284>   TST.w D6
0002F00E <AmiBlitz3.ab3@18285>    BEQ.w JL_0_B492
0002F010 <AmiBlitz3.ab3@18286>   MOVEQ.l #$04,D2
0002F014 <AmiBlitz3.ab3@18287> BRA.w JL_0_B510
0002F016 <AmiBlitz3.ab3@18290>   MOVEQ.l #$02,D2
0002F01A <AmiBlitz3.ab3@18291> BRA.w JL_0_B4C4
0002F01E <AmiBlitz3.ab3@18294>   CMP.w #$1,D2
0002F022 <AmiBlitz3.ab3@18295>    BEQ.w JL_0_B4C4
0002F026 <AmiBlitz3.ab3@18296>   CMP.w #$2,D2
0002F02A <AmiBlitz3.ab3@18297>    BEQ.w JL_0_B4F8
0002F02E <AmiBlitz3.ab3@18298>   CMP.w #$3,D2
0002F032 <AmiBlitz3.ab3@18299>    BEQ.w JL_0_B57A
0002F036 <AmiBlitz3.ab3@18300>   CMP.w #$4,D2
0002F03A <AmiBlitz3.ab3@18301>    BEQ.w JL_0_B506
0002F03E <AmiBlitz3.ab3@18302>   CMP.w #$5,D2
0002F042 <AmiBlitz3.ab3@18303>    BEQ.w JL_0_B586
0002F046 <AmiBlitz3.ab3@18304> BRA.w mismatcherr
0002F04A <AmiBlitz3.ab3@18307>   BSR.w JL_0_B450                                          ;bugfix if a.b=$90 bug fix
0002F050 <AmiBlitz3.ab3@18308>   CMP.l #$7f,D0
0002F054 <AmiBlitz3.ab3@18309>    BGT.w JL_0_B4DC
0002F05A <AmiBlitz3.ab3@18310>   CMP.l #$FFFFFF80,D0
0002F05E <AmiBlitz3.ab3@18311>    BGE.w JL_0_B59E
0002F060 <AmiBlitz3.ab3@18314>   MOVEQ.l #$02,D2                                          ;was 2 before
0002F066 <AmiBlitz3.ab3@18315>   CMP.l #$7fff,D0
0002F06A <AmiBlitz3.ab3@18316>    BGT.w JL_0_B4F2
0002F070 <AmiBlitz3.ab3@18317>   CMP.l #$FFFF8000,D0
0002F074 <AmiBlitz3.ab3@18318>    BGE.w JL_0_B59E
0002F076 <AmiBlitz3.ab3@18321>   MOVEQ.l #$03,D2
0002F07A <AmiBlitz3.ab3@18322> BRA.w JL_0_B59E
0002F07C <AmiBlitz3.ab3@18348>   TST.w D6
0002F080 <AmiBlitz3.ab3@18349>    BNE.w JL_0_B510
0002F084 <AmiBlitz3.ab3@18350>    BSR.w JL_0_B450
0002F088 <AmiBlitz3.ab3@18351> BRA.w JL_0_B4DC
0002F08C <AmiBlitz3.ab3@18354>   BSR.w JL_0_B450
0002F08E <AmiBlitz3.ab3@18355>   TST.w D6
0002F092 <AmiBlitz3.ab3@18356>   BEQ.w JL_0_B560
0002F098 <AmiBlitz3.ab3@18359>   CMP.l #MaxWordSgnd,D0
0002F09C <AmiBlitz3.ab3@18360>    BGT.w JL_0_B5A0
0002F0A2 <AmiBlitz3.ab3@18361>   CMP.l #$FFFF8000,D0
0002F0A6 <AmiBlitz3.ab3@18362>    BLT.w JL_0_B5A0
0002F0A8 <AmiBlitz3.ab3@18363>   MOVE.w D0,-(A7)
0002F0AC <AmiBlitz3.ab3@18364>    JSR -$24(A6)
0002F0AE <AmiBlitz3.ab3@18365>   MOVE.l D0,D1
0002F0B0 <AmiBlitz3.ab3@18366>   MOVE.l D3,D0
0002F0B4 <AmiBlitz3.ab3@18367>    JSR -$48(A6)
0002F0BA <AmiBlitz3.ab3@18368>   MOVE.l #$80000051,D1
0002F0BE <AmiBlitz3.ab3@18369>    JSR -$4E(A6)
0002F0C2 <AmiBlitz3.ab3@18370>    JSR -$1E(A6)
0002F0C6 <AmiBlitz3.ab3@18371>    BEQ.w JL_0_B55A
0002F0CC <AmiBlitz3.ab3@18372>   CMP.l #$10000,D0
0002F0D0 <AmiBlitz3.ab3@18373>    BCC.w JL_0_B55A
0002F0D2 <AmiBlitz3.ab3@18374>   MOVE.w D0,D1
0002F0D4 <AmiBlitz3.ab3@18375>   MOVE.w (A7)+,D0
0002F0D6 <AmiBlitz3.ab3@18376>   SWAP D0
0002F0D8 <AmiBlitz3.ab3@18377>   MOVE.w D1,D0
0002F0DC <AmiBlitz3.ab3@18378> BRA.w JL_0_B59E
0002F0DE <AmiBlitz3.ab3@18381>   ADDQ.w #2,A7
0002F0E2 <AmiBlitz3.ab3@18382> BRA.w JL_0_B5A0
0002F0E8 <AmiBlitz3.ab3@18385>   CMP.l #MaxWordSgnd,D0
0002F0EC <AmiBlitz3.ab3@18386>    BGT.w JL_0_B4F2
0002F0F2 <AmiBlitz3.ab3@18387>   CMP.l #$FFFF8000,D0
0002F0F6 <AmiBlitz3.ab3@18388>    BLT.w JL_0_B4F2
0002F0F8 <AmiBlitz3.ab3@18389>   SWAP D0
0002F0FC <AmiBlitz3.ab3@18390> BRA.w JL_0_B59E
0002F0FE <AmiBlitz3.ab3@18393>   TST.w D6
0002F102 <AmiBlitz3.ab3@18394>   BNE.w JL_0_B5A0
0002F104 <AmiBlitz3.ab3@18395>   MOVE.l D3,D0
0002F108 <AmiBlitz3.ab3@18396> BRA.w JL_0_B59E
0002F10A <AmiBlitz3.ab3@18399>   TST.w D6
0002F10E <AmiBlitz3.ab3@18400>   BNE.w JL_0_B5A0
0002F110 <AmiBlitz3.ab3@18401>   MOVE.l D3,D0
0002F116 <AmiBlitz3.ab3@18402>   MOVEA.l _mathffpbase,A6
0002F11A <AmiBlitz3.ab3@18403>   JSR -$24(A6)
0002F11C <AmiBlitz3.ab3@18404>   MOVE.l D0,D3
0002F120 <AmiBlitz3.ab3@18405> BRA.w JL_0_B5A0
0002F122 <AmiBlitz3.ab3@18408> RTS
0002F124 <AmiBlitz3.ab3@18411>   MOVEQ.l #$05,D2
0002F126 <AmiBlitz3.ab3@18412>   MOVE.l D3,D0
0002F128 <AmiBlitz3.ab3@18413> RTS
0002F12C <AmiBlitz3.ab3@18417>             Ds.l 1                                         ;??Looks like unused data??
0002F130 <AmiBlitz3.ab3@18418> pushpc:     Ds.l 1
0002F134 <AmiBlitz3.ab3@18419> pushoff:    Ds.l 1
0002F138 <AmiBlitz3.ab3@18420> pushdooff:  Ds.l 1
0002F13A <AmiBlitz3.ab3@18421> pushclen:   Ds.w 1
0002F13E <AmiBlitz3.ab3@18422> pushat:     Ds.l 1
0002F148 <AmiBlitz3.ab3@18426>   MOVE.l destpointer,pushpc
0002F152 <AmiBlitz3.ab3@18427>   MOVE.l hunkoffsetbase,pushoff
0002F154 <AmiBlitz3.ab3@18428> RTS
0002F158 <AmiBlitz3.ab3@18432>   MOVEM.l D0-D1/A0-A1,-(A7)
0002F15E <AmiBlitz3.ab3@18433>   MOVE.l destpointer,D0
0002F162 <AmiBlitz3.ab3@18434>   MOVE.l pushpc(PC),D1
0002F168 <AmiBlitz3.ab3@18435>   MOVE.l D1,destpointer
0002F16A <AmiBlitz3.ab3@18436>   SUB.l D1,D0
0002F170 <AmiBlitz3.ab3@18437>   MOVE.w D0,pushclen
0002F174 <AmiBlitz3.ab3@18438>    BEQ.w JL_0_B636
0002F17A <AmiBlitz3.ab3@18439>   MOVE.w dontwrite,D1
0002F17E <AmiBlitz3.ab3@18440>    BNE.w JL_0_B636
0002F186 <AmiBlitz3.ab3@18441>    CMP.w #1000,pushclen
0002F18A <AmiBlitz3.ab3@18442>    BGE conmemerr
0002F190 <AmiBlitz3.ab3@18443>    MOVE.l pushat,d0
0002F194 <AmiBlitz3.ab3@18444>    BNE 'nomem
0002F19A <AmiBlitz3.ab3@18445>    MOVE.l #1024,d0
0002F19C <AmiBlitz3.ab3@18446>   MOVEQ.l #$01,D1
0002F1A2 <AmiBlitz3.ab3@18447>   MOVEA.l _execbase,A6
0002F1A8 <AmiBlitz3.ab3@18448>   MOVE.l mempool,a0
0002F1AC <AmiBlitz3.ab3@18449>   JSR _AllocPooled(a6)
0002F1B2 <AmiBlitz3.ab3@18451>   MOVE.l D0,pushat
0002F1B4 <AmiBlitz3.ab3@18454>   MOVEA.l D0,A0
0002F1BA <AmiBlitz3.ab3@18455>   MOVEA.l pushpc,A1
0002F1C0 <AmiBlitz3.ab3@18456>   MOVE.l A1,destpointer
0002F1C6 <AmiBlitz3.ab3@18457>   MOVE.w pushclen,D0
0002F1C8 <AmiBlitz3.ab3@18458>   LSR.w #1,D0
0002F1CA <AmiBlitz3.ab3@18459>   SUBQ.w #1,D0
0002F1CC <AmiBlitz3.ab3@18462>     MOVE.w (A1)+,(A0)+
0002F1D0 <AmiBlitz3.ab3@18463>   DBF D0,JL_0_B626
0002F1DA <AmiBlitz3.ab3@18465>    MOVE.l hunkoffsetbase,pushdooff
0002F1DE <AmiBlitz3.ab3@18468>   MOVEM.l (A7)+,D0-D1/A0-A1
0002F1E0 <AmiBlitz3.ab3@18469> RTS
0002F1E4 <AmiBlitz3.ab3@18473>   MOVEM.l D0-D1/A0-A1,-(A7)
0002F1E6 <AmiBlitz3.ab3@18474>   MOVEQ.l #$00,D0
0002F1EC <AmiBlitz3.ab3@18475>   MOVE.w pushclen,D0
0002F1F0 <AmiBlitz3.ab3@18476>    BEQ.w JL_0_B6D8
0002F1F6 <AmiBlitz3.ab3@18477>   MOVE.l destpointer,D1
0002F1FC <AmiBlitz3.ab3@18478>   ADD.l D0,destpointer
0002F202 <AmiBlitz3.ab3@18479>   TST.w dontwrite
0002F206 <AmiBlitz3.ab3@18480>    BNE.w JL_0_B6D8
0002F208 <AmiBlitz3.ab3@18481>   LSR.w #1,D0
0002F20A <AmiBlitz3.ab3@18482>   SUBQ.w #1,D0
0002F20C <AmiBlitz3.ab3@18483>   MOVEA.l D1,A1
0002F212 <AmiBlitz3.ab3@18484>   MOVEA.l pushat,A0
0002F218 <AmiBlitz3.ab3@18487>     CMPA.l destbufferend,A1
0002F21C <AmiBlitz3.ab3@18488>     BCS.w JL_0_B684
0002F224 <AmiBlitz3.ab3@18490>     MOVE.w #$FFFF,dontwrite
0002F228 <AmiBlitz3.ab3@18491>   BRA.w JL_0_B6D8
0002F22A <AmiBlitz3.ab3@18494>      MOVE.w (A0)+,(A1)+                                    ;copylibcode
0002F22E <AmiBlitz3.ab3@18495>   DBF D0,JL_0_B66E
0002F234 <AmiBlitz3.ab3@18497>   SUB.l pushpc,D1
0002F238 <AmiBlitz3.ab3@18498>   BEQ.w JL_0_B6C2
0002F23E <AmiBlitz3.ab3@18499>   MOVEA.l pushdooff,A0
0002F244 <AmiBlitz3.ab3@18502>   CMPA.l pushoff,A0
0002F248 <AmiBlitz3.ab3@18503>   BEQ.w JL_0_B6C2
0002F24C <AmiBlitz3.ab3@18504>   MOVEA.l $4(A0),A1
0002F252 <AmiBlitz3.ab3@18505>   ADDA.l destbufferstart,A1
0002F258 <AmiBlitz3.ab3@18506>   CMPA.l destbufferend,A1
0002F25C <AmiBlitz3.ab3@18507>   BCC.w JL_0_B6BC
0002F260 <AmiBlitz3.ab3@18508>   ADD.l D1,$4(A0)
0002F262 <AmiBlitz3.ab3@18511>   MOVEA.l (A0),A0
0002F266 <AmiBlitz3.ab3@18512> BRA.w JL_0_B69A
0002F26C <AmiBlitz3.ab3@18515>   MOVEA.l pushat,A1
0002F26E <AmiBlitz3.ab3@18516>   MOVEQ.l #$00,D0
0002F274 <AmiBlitz3.ab3@18517>   MOVE.w pushclen,D0
0002F27A <AmiBlitz3.ab3@18518>   MOVEA.l _execbase,A6
0002F280 <AmiBlitz3.ab3@18519>   MOVE.l mempool,a0
0002F284 <AmiBlitz3.ab3@18523>   MOVEM.l (A7)+,D0-D1/A0-A1
0002F286 <AmiBlitz3.ab3@18524> RTS
0002F288 <AmiBlitz3.ab3@18527>   MOVE.l D1,-(A7)                                          ;array mul
0002F28A <AmiBlitz3.ab3@18528>   MOVEQ.l #$00,D2
0002F28C <AmiBlitz3.ab3@18529>   MOVEQ.l #$0F,D3
0002F28E <AmiBlitz3.ab3@18532>     LSL.w #1,D1
0002F292 <AmiBlitz3.ab3@18533>     BCC.w JL_0_B6EE
0002F294 <AmiBlitz3.ab3@18534>     ADDQ.w #1,D2
0002F296 <AmiBlitz3.ab3@18535>     MOVE.w D3,D4
0002F29A <AmiBlitz3.ab3@18538>   DBF D3,JL_0_B6E4
0002F29C <AmiBlitz3.ab3@18540>   SUBQ.w #1,D2
0002F2A0 <AmiBlitz3.ab3@18541>    BNE.w JL_0_B726
0002F2A2 <AmiBlitz3.ab3@18542>   ADDQ.w #4,A7
0002F2A4 <AmiBlitz3.ab3@18543>   MOVE.w D4,D1
0002F2A8 <AmiBlitz3.ab3@18544>    BEQ.w JL_0_B724
0002F2AC <AmiBlitz3.ab3@18545>   CMP.w #$8,D1
0002F2B0 <AmiBlitz3.ab3@18546>    BCS.w JL_0_B712
0002F2B4 <AmiBlitz3.ab3@18547>   SUBI.w #$8,D1
0002F2B8 <AmiBlitz3.ab3@18548>    BSR.w JL_0_B712
0002F2BA <AmiBlitz3.ab3@18549>   MOVEQ.l #$00,D1
0002F2BC <AmiBlitz3.ab3@18552>   LSL.w #8,D1
0002F2BE <AmiBlitz3.ab3@18553>   LSL.w #1,D1
0002F2C2 <AmiBlitz3.ab3@18554>   ORI.w #$E188,D1
0002F2C8 <AmiBlitz3.ab3@18555>   OR.w regnum,D1
0002F2CC <AmiBlitz3.ab3@18556> BRA.w writeword
0002F2CE <AmiBlitz3.ab3@18559> RTS
0002F2D0 <AmiBlitz3.ab3@18562>   MOVEQ #0,d1
0002F2D6 <AmiBlitz3.ab3@18563>   MOVE.w regnum,D1
0002F2D8 <AmiBlitz3.ab3@18564>   LSL.l #8,D1
0002F2DA <AmiBlitz3.ab3@18566>   LSL.l #4,d1
0002F2E0 <AmiBlitz3.ab3@18568>   OR.l #$4c3c0000,d1
0002F2E6 <AmiBlitz3.ab3@18569>   OR.w regnum,d1
0002F2EA <AmiBlitz3.ab3@18570>   BSR.w writelong
0002F2EC <AmiBlitz3.ab3@18571>   MOVE.l (A7)+,D1
0002F2F0 <AmiBlitz3.ab3@18573> BRA writelong
0002F2F6 <AmiBlitz3.ab3@18576>   MOVE.l destpointer,-(A7)
0002F2F8 <AmiBlitz3.ab3@18577>   MOVEQ.l #-$01,D7
0002F2FC <AmiBlitz3.ab3@18580>     BSR.w findhilib
0002F300 <AmiBlitz3.ab3@18581>      BEQ.w JL_0_B8A4
0002F304 <AmiBlitz3.ab3@18582>     TST.w $C(A2)
0002F308 <AmiBlitz3.ab3@18583>      BPL.w JL_0_B746
0002F30C <AmiBlitz3.ab3@18585>     MOVE.l $16(A2),D1
0002F310 <AmiBlitz3.ab3@18586>     BEQ.w JL_0_B746
0002F314 <AmiBlitz3.ab3@18588>     MOVE.w $4(A2),D1                                       ; check state in D1 and do some things
0002F318 <AmiBlitz3.ab3@18589>     CMP.w #-$2,D1
0002F31C <AmiBlitz3.ab3@18590>      BNE.w JL_0_B772
0002F320 <AmiBlitz3.ab3@18591>     BSR.w makevsize
0002F324 <AmiBlitz3.ab3@18592> BRA.w JL_0_B7FE
0002F328 <AmiBlitz3.ab3@18595>     CMP.w #-$5C4,D1
0002F32C <AmiBlitz3.ab3@18596>      BNE.w JL_0_B790
0002F330 <AmiBlitz3.ab3@18597>     MOVE.w #$7000,D1
0002F338 <AmiBlitz3.ab3@18598>     BTST #$7,autorun
0002F33A <AmiBlitz3.ab3@18599>     SNE D1
0002F33E <AmiBlitz3.ab3@18600>     BSR.w writeword
0002F342 <AmiBlitz3.ab3@18601> BRA.w JL_0_B7FE
0002F346 <AmiBlitz3.ab3@18604>     CMP.w #-$12D,D1
0002F34A <AmiBlitz3.ab3@18605>      BNE.w JL_0_B7A0
0002F34E <AmiBlitz3.ab3@18606>     BSR.w makessize
0002F352 <AmiBlitz3.ab3@18607> BRA.w JL_0_B7FE
0002F356 <AmiBlitz3.ab3@18610>     CMP.w #-$1F5,D1
0002F35A <AmiBlitz3.ab3@18611>      BNE.w JL_0_B7C2
0002F35E <AmiBlitz3.ab3@18612>     MOVE.w #$203C,D1
0002F362 <AmiBlitz3.ab3@18613>     BSR.w writeword
0002F366 <AmiBlitz3.ab3@18614>     BSR.w addoff
0002F36C <AmiBlitz3.ab3@18615>     MOVE.l endop,D1
0002F370 <AmiBlitz3.ab3@18616>     BSR.w writelong
0002F374 <AmiBlitz3.ab3@18617> BRA.w JL_0_B7FE
0002F378 <AmiBlitz3.ab3@18620>     CMP.w #-$3E9,D1
0002F37C <AmiBlitz3.ab3@18621>      BNE.w JL_0_B7E4
0002F380 <AmiBlitz3.ab3@18622>     MOVE.w #$203C,D1
0002F384 <AmiBlitz3.ab3@18623>     BSR.w writeword
0002F388 <AmiBlitz3.ab3@18624>     BSR.w addoff
0002F38E <AmiBlitz3.ab3@18625>     MOVE.l data2at,D1
0002F392 <AmiBlitz3.ab3@18626>     BSR.w writelong
0002F396 <AmiBlitz3.ab3@18627> BRA.w JL_0_B7FE
0002F39A <AmiBlitz3.ab3@18630>     CMP.w #$1,D1
0002F39E <AmiBlitz3.ab3@18631>      BNE.w JL_0_B7FE
0002F3A2 <AmiBlitz3.ab3@18632>     MOVE.w #$203C,D1
0002F3A6 <AmiBlitz3.ab3@18633>     BSR.w writeword
0002F3AC <AmiBlitz3.ab3@18634>     MOVE.l ptr_seg_debugger,D1
0002F3B0 <AmiBlitz3.ab3@18635>     BSR.w writelong
0002F3B4 <AmiBlitz3.ab3@18638>     MOVE.l $16(A2),D1
0002F3BC <AmiBlitz3.ab3@18639>     MOVE.w #$FFFF,lasta6
0002F3C0 <AmiBlitz3.ab3@18640>     BSR.w Amakelibsub
0002F3C6 <AmiBlitz3.ab3@18641>     CMPI.w #$FFFE,$4(A2)
0002F3CA <AmiBlitz3.ab3@18642>      BNE.w JL_0_B83A
0002F3D0 <AmiBlitz3.ab3@18643>     MOVE.l intdata1,D1
0002F3D4 <AmiBlitz3.ab3@18644>      BEQ.w JL_0_B83A
0002F3DA <AmiBlitz3.ab3@18645>     MOVE.w putidata1,D1
0002F3DE <AmiBlitz3.ab3@18646>     BSR.w writeword
0002F3E2 <AmiBlitz3.ab3@18647>     BSR.w addoff
0002F3E8 <AmiBlitz3.ab3@18648>     MOVE.l intdata1,D1
0002F3EC <AmiBlitz3.ab3@18649>     BSR.w writelong
0002F3F0 <AmiBlitz3.ab3@18652>     MOVE.w #$2B40,D1
0002F3F4 <AmiBlitz3.ab3@18653>     TST.w $1A(A2)
0002F3F8 <AmiBlitz3.ab3@18654>      BEQ.w JL_0_B746
0002F3FC <AmiBlitz3.ab3@18655>      BPL.w JL_0_B84E
0002F400 <AmiBlitz3.ab3@18656>     MOVE.w #$3B40,D1
0002F404 <AmiBlitz3.ab3@18659>     BSR.w writeword
0002F408 <AmiBlitz3.ab3@18660>     MOVE.w $A(A2),D1
0002F40C <AmiBlitz3.ab3@18661>      BSR.w writeword
0002F412 <AmiBlitz3.ab3@18662>     CMPI.w #$FFFA,$4(A2)
0002F416 <AmiBlitz3.ab3@18663>      BNE.w JL_0_B746
0002F418 <AmiBlitz3.ab3@18664>     MOVE.w D7,-(A7)
0002F41E <AmiBlitz3.ab3@18665>     MOVE.w numstatic,D4
0002F422 <AmiBlitz3.ab3@18666>      BEQ.w JL_0_B882
0002F428 <AmiBlitz3.ab3@18667>     MOVE.l staticdata,D3
0002F42E <AmiBlitz3.ab3@18668>      JSR datastart
0002F432 <AmiBlitz3.ab3@18669>     MOVE.w #$C500,D1
0002F436 <AmiBlitz3.ab3@18670>      BSR.w tokejsr2
0002F43C <AmiBlitz3.ab3@18673>     MOVE.w maxsused,D4
0002F440 <AmiBlitz3.ab3@18674>      BEQ.w JL_0_B89E
0002F446 <AmiBlitz3.ab3@18675>     MOVE.l maxsat,D3
0002F44C <AmiBlitz3.ab3@18676>      JSR datastart
0002F450 <AmiBlitz3.ab3@18677>     MOVE.w #$CF00,D1
0002F454 <AmiBlitz3.ab3@18678>      BSR.w tokejsr2
0002F456 <AmiBlitz3.ab3@18681>     MOVE.w (A7)+,D7
0002F45A <AmiBlitz3.ab3@18682> BRA.w JL_0_B746
0002F460 <AmiBlitz3.ab3@18685>   MOVE.l destpointer,D1
0002F462 <AmiBlitz3.ab3@18686>   CMP.l (A7),D1
0002F466 <AmiBlitz3.ab3@18687>    BNE.w JL_0_B8BC
0002F46E <AmiBlitz3.ab3@18688>   MOVE.w #$0008,noinits+2
0002F472 <AmiBlitz3.ab3@18689> BRA.w JL_0_B8E6
0002F478 <AmiBlitz3.ab3@18692>   CLR.w noinits+2
0002F47E <AmiBlitz3.ab3@18693>   MOVE.w dontwrite,D1
0002F482 <AmiBlitz3.ab3@18694>    BNE.w JL_0_B8DE
0002F488 <AmiBlitz3.ab3@18695>   TST.l newinitaddr
0002F48C <AmiBlitz3.ab3@18696>    BEQ 'l10
0002F492 <AmiBlitz3.ab3@18697>   MOVE.l newinitaddr,D2
0002F498 <AmiBlitz3.ab3@18698>   SUB.l destbufferstart,D2
0002F49A <AmiBlitz3.ab3@18699>   ADDQ.l #2,d2
0002F4A0 <AmiBlitz3.ab3@18700>   MOVEA.l newinitaddr,A0                                   ;write newinitcode
0002F4A4 <AmiBlitz3.ab3@18702>   MOVE.w #$4EB9,(A0)+
0002F4A6 <AmiBlitz3.ab3@18703>   MOVE.l (A7),(A0)+
0002F4AA <AmiBlitz3.ab3@18705> BRA 'l20
0002F4B0 <AmiBlitz3.ab3@18708>   MOVEA.l destbufferstart,A0                               ;write initcode
0002F4B6 <AmiBlitz3.ab3@18709>   TST.b saved0
0002F4BA <AmiBlitz3.ab3@18710>   BEQ 'l1
0002F4BE <AmiBlitz3.ab3@18711>   MOVE.w #$23c0,(a0)+
0002F4C0 <AmiBlitz3.ab3@18712>   MOVE.l a0,a1
0002F4C2 <AmiBlitz3.ab3@18713>   ADDQ.l #6,a1
0002F4C4 <AmiBlitz3.ab3@18714>   MOVE.l a1,(a0)+
0002F4C6 <AmiBlitz3.ab3@18715>   MOVEQ.l #$02,D2
0002F4CA <AmiBlitz3.ab3@18716>   BSR.w addhunkoffset
0002F4CE <AmiBlitz3.ab3@18717>   MOVE.w #$6004,(a0)+
0002F4D4 <AmiBlitz3.ab3@18718>   MOVE.l #$4e714e71,(a0)+
0002F4D8 <AmiBlitz3.ab3@18721>   MOVE.w #$4EB9,(A0)+
0002F4DA <AmiBlitz3.ab3@18722>   MOVE.l (A7),(A0)+
0002F4DC <AmiBlitz3.ab3@18723>   MOVEQ #2,d2
0002F4E2 <AmiBlitz3.ab3@18724>   TST.b saved0
0002F4E6 <AmiBlitz3.ab3@18725>   BEQ 'l20
0002F4E8 <AmiBlitz3.ab3@18726>   MOVEQ.l #14,D2
0002F4EC <AmiBlitz3.ab3@18729>   BSR.w addhunkoffset
0002F4F0 <AmiBlitz3.ab3@18730>   MOVE.w #$2039,(a0)+
0002F4F2 <AmiBlitz3.ab3@18731>   MOVE.l a1,(a0)+
0002F4F4 <AmiBlitz3.ab3@18732>   MOVEQ.l #20,d2
0002F4F8 <AmiBlitz3.ab3@18735>   BSR.w addhunkoffset
0002F4FC <AmiBlitz3.ab3@18738>   MOVE.w #$4E75,D1
0002F500 <AmiBlitz3.ab3@18739>   BSR.w writeword
0002F502 <AmiBlitz3.ab3@18742>   ADDQ.w #4,A7
0002F504 <AmiBlitz3.ab3@18743> RTS
0002F508 <AmiBlitz3.ab3@18748>   Dc.b $22,$2D,$00,$00                                     ;MOVE.L  $0000(A5),D1
0002F50E <AmiBlitz3.ab3@18750>   Dc.b $23,$CD,$00,$00,$00,$00                             ;MOVE.L  A5,$00000000
0002F514 <AmiBlitz3.ab3@18752>   Dc.b $24,$7C,$00,$00,$00,$00                             ;MOVEA.L #$00000000,A2
0002F51A <AmiBlitz3.ab3@18757>   MOVE.l stringbuffer,D1
0002F51E <AmiBlitz3.ab3@18758> BRA.w makesize
0002F520 <AmiBlitz3.ab3@18761>   MOVEQ.l #$00,D1
0002F526 <AmiBlitz3.ab3@18762>   MOVE.w globalvarpointer,D1
0002F52A <AmiBlitz3.ab3@18763>   SUBI.w #$8000,D1
0002F52E <AmiBlitz3.ab3@18764>   BNE.w makesize
0002F530 <AmiBlitz3.ab3@18765>     MOVEQ.l #$08,D1
0002F532 <AmiBlitz3.ab3@18768>   MOVE.l D1,-(A7)
0002F536 <AmiBlitz3.ab3@18769>   MOVE.w #$203C,D1
0002F53A <AmiBlitz3.ab3@18770>   BSR.w writeword
0002F53C <AmiBlitz3.ab3@18771>   MOVE.l (A7)+,D1
0002F540 <AmiBlitz3.ab3@18772> BRA.w writelong
0002F542 <AmiBlitz3.ab3@18780>   MOVEQ.l #$00,D1
0002F548 <AmiBlitz3.ab3@18781>   MOVEA.l libpointer,A1
0002F54C <AmiBlitz3.ab3@18784>     CMPA.w #$0,A1
0002F550 <AmiBlitz3.ab3@18785>     BEQ.w findhilib__done
0002F554 <AmiBlitz3.ab3@18786>       CMP.w $4(A1),D7
0002F558 <AmiBlitz3.ab3@18787>       BLS.w findhilib__next
0002F55C <AmiBlitz3.ab3@18788>         CMP.w $4(A1),D1
0002F560 <AmiBlitz3.ab3@18789>         BCC.w findhilib__next
0002F564 <AmiBlitz3.ab3@18790>           MOVE.w $4(A1),D1
0002F566 <AmiBlitz3.ab3@18791>           MOVEA.l A1,A2
0002F568 <AmiBlitz3.ab3@18794>     MOVEA.l (A1),A1
0002F56C <AmiBlitz3.ab3@18795> BRA.w findhilib__loop
0002F56E <AmiBlitz3.ab3@18798>   MOVE.w D1,D7
0002F570 <AmiBlitz3.ab3@18799> RTS
0002F572 <AmiBlitz3.ab3@18807>   MOVEQ.l #-$01,D1
0002F578 <AmiBlitz3.ab3@18808>   MOVEA.l libpointer,A1
0002F57C <AmiBlitz3.ab3@18811>     CMPA.w #$0,A1
0002F580 <AmiBlitz3.ab3@18812>      BEQ.w findlolib__done
0002F584 <AmiBlitz3.ab3@18813>     CMP.w $4(A1),D7
0002F588 <AmiBlitz3.ab3@18814>      BCC.w findlolib__next
0002F58C <AmiBlitz3.ab3@18815>     CMP.w $4(A1),D1
0002F590 <AmiBlitz3.ab3@18816>      BLS.w findlolib__next
0002F594 <AmiBlitz3.ab3@18817>     MOVE.w $4(A1),D1
0002F596 <AmiBlitz3.ab3@18818>     MOVEA.l A1,A2
0002F598 <AmiBlitz3.ab3@18821>     MOVEA.l (A1),A1
0002F59C <AmiBlitz3.ab3@18822> BRA.w findlolib__loop
0002F59E <AmiBlitz3.ab3@18825>   MOVE.w D1,D7
0002F5A2 <AmiBlitz3.ab3@18826>   CMP.w #-$1,D1
0002F5A4 <AmiBlitz3.ab3@18827> RTS
0002F5AA <AmiBlitz3.ab3@18831>   ADDQ.w #1,globalvarpointer
0002F5B2 <AmiBlitz3.ab3@18832>   BCLR #$0,globalvarpointer+1
0002F5B4 <AmiBlitz3.ab3@18833>   MOVEQ.l #$00,D7
0002F5B8 <AmiBlitz3.ab3@18836>     BSR.w findlolib
0002F5BC <AmiBlitz3.ab3@18837>     BEQ.w JL_0_BA74
0002F5C0 <AmiBlitz3.ab3@18838>     TST.w $C(A2)
0002F5C4 <AmiBlitz3.ab3@18839>     BPL.w JL_0_B99A
0002F5C6 <AmiBlitz3.ab3@18840>     MOVEA.l A2,A1
0002F5CA <AmiBlitz3.ab3@18841>     ADDA.l $12(A1),A1
0002F5CE <AmiBlitz3.ab3@18842>     TST.w -$2(A1)
0002F5D2 <AmiBlitz3.ab3@18843>     BEQ.w JL_0_BA34
0002F5D6 <AmiBlitz3.ab3@18844>     MOVE.l -$A(A1),D1
0002F5DA <AmiBlitz3.ab3@18845>     LEA $6(A2,D1.L),A3
0002F5DC <AmiBlitz3.ab3@18848>       TST.w (A3)+
0002F5E0 <AmiBlitz3.ab3@18849>       BEQ.w JL_0_B9CC
0002F5E2 <AmiBlitz3.ab3@18850>         ADDQ.w #2,A3
0002F5E6 <AmiBlitz3.ab3@18851> BRA.w JL_0_B9C0
0002F5EA <AmiBlitz3.ab3@18854>     TST.l $4(A3)
0002F5EE <AmiBlitz3.ab3@18855>     BEQ.w JL_0_BA34
0002F5F2 <AmiBlitz3.ab3@18856>       MOVE.w freemax(PC),D1
0002F5F6 <AmiBlitz3.ab3@18857>       BSR.w writeword
0002F5FA <AmiBlitz3.ab3@18858>       MOVE.w -$4(A1),D1
0002F5FE <AmiBlitz3.ab3@18859>       BSR.w writeword
0002F604 <AmiBlitz3.ab3@18860>       MOVE.l free,D1
0002F608 <AmiBlitz3.ab3@18861>       MOVE.w -$6(A1),D1
0002F60C <AmiBlitz3.ab3@18862>       BSR.w writelong
0002F612 <AmiBlitz3.ab3@18863>       MOVE.l destpointer,-(A7)
0002F614 <AmiBlitz3.ab3@18864>       MOVEQ.l #$01,D1
0002F618 <AmiBlitz3.ab3@18865>       MOVE.w -$2(A1),D2
0002F61A <AmiBlitz3.ab3@18866>       LSL.w D2,D1
0002F61C <AmiBlitz3.ab3@18867>       MOVE.w D1,-(A7)
0002F620 <AmiBlitz3.ab3@18868>       MOVE.l -$A(A1),D1
0002F624 <AmiBlitz3.ab3@18869>       BSR.w Amakelibsub
0002F628 <AmiBlitz3.ab3@18870>       MOVE.w freemax3(PC),D1
0002F62C <AmiBlitz3.ab3@18871>       BSR.w writeword
0002F62E <AmiBlitz3.ab3@18872>       MOVE.w (A7)+,D1
0002F632 <AmiBlitz3.ab3@18873>       BSR.w writeword
0002F636 <AmiBlitz3.ab3@18874>       MOVE.l freemax2(PC),D1
0002F63A <AmiBlitz3.ab3@18875>       BSR.w writelong
0002F63C <AmiBlitz3.ab3@18876>       MOVE.l (A7)+,D1
0002F642 <AmiBlitz3.ab3@18877>       SUB.l destpointer,D1
0002F646 <AmiBlitz3.ab3@18878>       BSR.w writeword
0002F64A <AmiBlitz3.ab3@18879>       MOVE.w freemax4(PC),D1
0002F64E <AmiBlitz3.ab3@18880>       BSR.w writeword
0002F652 <AmiBlitz3.ab3@18883>     MOVE.l $1C(A2),D1
0002F656 <AmiBlitz3.ab3@18884>     BEQ.w JL_0_B99A
0002F65A <AmiBlitz3.ab3@18886>     MOVE.w $4(A2),D1
0002F65E <AmiBlitz3.ab3@18887>     CMP.w #-$2,D1
0002F662 <AmiBlitz3.ab3@18888>     BNE.w JL_0_BA50
0002F666 <AmiBlitz3.ab3@18889>       BSR.w makevsize
0002F66A <AmiBlitz3.ab3@18890> BRA.w JL_0_BA60
0002F66E <AmiBlitz3.ab3@18893>     CMP.w #-$12D,D1
0002F672 <AmiBlitz3.ab3@18894>     BNE.w JL_0_BA60
0002F676 <AmiBlitz3.ab3@18895>       BSR.w makessize
0002F67A <AmiBlitz3.ab3@18896> BRA.w JL_0_BA60
0002F67E <AmiBlitz3.ab3@18899>     MOVE.l $1C(A2),D1
0002F686 <AmiBlitz3.ab3@18900>     MOVE.w #$FFFF,lasta6
0002F68A <AmiBlitz3.ab3@18901>     BSR.w Amakelibsub
0002F68E <AmiBlitz3.ab3@18902> BRA.w JL_0_B99A
0002F690 <AmiBlitz3.ab3@18905> RTS
0002F694 <AmiBlitz3.ab3@18909> freemax:   Dc.b $3F,$3C,$00,$00                            ;MOVE.W  #$0000,-(A7)
0002F696 <AmiBlitz3.ab3@18911> freemax2:  Dc.b $53,$57                                    ;SUBQ.W  #1,(A7)
0002F69A <AmiBlitz3.ab3@18912>            Dc.b $66,$00,$FF,$FC                            ;BNE.W freemax2
0002F69C <AmiBlitz3.ab3@18913> freemax4:  Dc.b $54,$4F                                    ;ADDQ.W  #2,A7
0002F6A0 <AmiBlitz3.ab3@18914> freemax3:  Dc.b $47,$EB,$00,$00                            ;LEA $0000(A3),A3
0002F6A6 <AmiBlitz3.ab3@18919>   TST.b debugmode
0002F6AA <AmiBlitz3.ab3@18920>    BEQ.b chkstak__skip
0002F6B0 <AmiBlitz3.ab3@18921>   TST.w debugversion
0002F6B4 <AmiBlitz3.ab3@18922>    BNE.b chkstak__skip
0002F6B8 <AmiBlitz3.ab3@18923>   MOVE.w #$C308,D1
0002F6BC <AmiBlitz3.ab3@18924> BRA.w Atokejsr
0002F6BE <AmiBlitz3.ab3@18927> RTS
0002F6C6 <AmiBlitz3.ab3@18931>   MOVE.w #$FFFF,lasta6
0002F6CA <AmiBlitz3.ab3@18936>   MOVEM.l D0-d7/A0-a6,-(A7)
0002F6D2 <AmiBlitz3.ab3@18937>   MOVE.b #1,nostringopt
0002F6D8 <AmiBlitz3.ab3@18938>   JSR searchinstr
0002F6DA <AmiBlitz3.ab3@18939>   MOVE.l A3,D1
0002F6DC <AmiBlitz3.ab3@18940>   SUB.l A2,D1
0002F6E0 <AmiBlitz3.ab3@18941>   BSR.w Amakelibsub
0002F6E4 <AmiBlitz3.ab3@18942>   MOVEM.l (A7)+,d0-d7/a0-a6
0002F6E6 <AmiBlitz3.ab3@18943> RTS
0002F6EC <AmiBlitz3.ab3@18950>   MOVE.l libisat,-(A7)                                   ;library write
0002F6F2 <AmiBlitz3.ab3@18951>   MOVE.l A2,libisat
0002F6F4 <AmiBlitz3.ab3@18953>   MOVEA.l A1,A2
0002F6F6 <AmiBlitz3.ab3@18954>   MOVE.w (A2)+,D1
0002F6FC <AmiBlitz3.ab3@18955>   MOVE.l a2,lastinstructionaddr
0002F700 <AmiBlitz3.ab3@18956>   ANDI.w #$FF,D1
0002F702 <AmiBlitz3.ab3@18957>   ADDA.w D1,A2
0002F704 <AmiBlitz3.ab3@18958>   EXG.l D0,A2
0002F706 <AmiBlitz3.ab3@18959>   ADDQ.l #1,D0
0002F70A <AmiBlitz3.ab3@18960>   BCLR #$0,D0
0002F70C <AmiBlitz3.ab3@18961>   EXG.l D0,A2
0002F710 <AmiBlitz3.ab3@18962> BRA.w JL_0_BB08
0002F716 <AmiBlitz3.ab3@18966>   MOVE.l libisat,-(A7)
0002F71C <AmiBlitz3.ab3@18967>   MOVE.l A2,libisat
0002F71E <AmiBlitz3.ab3@18968>   MOVEA.l A3,A2
0002F722 <AmiBlitz3.ab3@18969> BRA.w JL_0_BB08
0002F724 <AmiBlitz3.ab3@18973>   MOVE.l a1,-(a7)
0002F726 <AmiBlitz3.ab3@18976>   MOVE.l d0,a0
0002F72A <AmiBlitz3.ab3@18977>   MOVE.l $a(a0),d0
0002F72C <AmiBlitz3.ab3@18978>   MOVE.l d0,a1
0002F734 <AmiBlitz3.ab3@18979>   CMP.l #8,4(a1)
0002F738 <AmiBlitz3.ab3@18980>   BLE 'norec
0002F73A <AmiBlitz3.ab3@18981>   MOVE.l a0,-(a7)
0002F740 <AmiBlitz3.ab3@18982>   MOVE.l typebase,-(a7)
0002F742 <AmiBlitz3.ab3@18983>   MOVEQ #0,d0
0002F746 <AmiBlitz3.ab3@18984>   MOVE.w 4(a0),d0
0002F74C <AmiBlitz3.ab3@18985>   ADD.l d0,typebase
0002F750 <AmiBlitz3.ab3@18986>   MOVE.l $4(a1),d0
0002F754 <AmiBlitz3.ab3@18987>   BSR scantype
0002F75A <AmiBlitz3.ab3@18988>   MOVE.l (a7)+,typebase
0002F75C <AmiBlitz3.ab3@18989>   MOVE.l (a7)+,a0
0002F762 <AmiBlitz3.ab3@18992>   CMP.l #newtype_string,d0
0002F766 <AmiBlitz3.ab3@18993>   BNE 'nostring
0002F76C <AmiBlitz3.ab3@18994>   ADDQ #2,a2offset
0002F772 <AmiBlitz3.ab3@18995>   MOVE.l #$3f3c0000,d1
0002F774 <AmiBlitz3.ab3@18996>   MOVEQ #0,d0
0002F778 <AmiBlitz3.ab3@18997>   MOVE.w 4(a0),d0
0002F77E <AmiBlitz3.ab3@18998>   ADD.l typebase,d0
0002F780 <AmiBlitz3.ab3@18999>   MOVE.w d0,d1
0002F784 <AmiBlitz3.ab3@19000>   BSR writelong
0002F78A <AmiBlitz3.ab3@19001>   TST.b debugmode
0002F78E <AmiBlitz3.ab3@19002>   BEQ 'l1a
0002F790 <AmiBlitz3.ab3@19003>   MOVE.l d1,-(a7)
0002F796 <AmiBlitz3.ab3@19004>   MOVE.l #$c308,d1
0002F79C <AmiBlitz3.ab3@19005>   JSR Atokejsr
0002F79E <AmiBlitz3.ab3@19006>   MOVE.l (a7)+,d1
0002F7A2 <AmiBlitz3.ab3@19009>   TST.w 8(a0)
0002F7A6 <AmiBlitz3.ab3@19010>   BEQ 'nostring
0002F7AA <AmiBlitz3.ab3@19011>   MOVEM.l d2/d3,-(a7)
0002F7AC <AmiBlitz3.ab3@19012>   MOVE.l d1,d2
0002F7AE <AmiBlitz3.ab3@19013>   MOVEQ #0,d3
0002F7B2 <AmiBlitz3.ab3@19014>   MOVE.w 8(a0),d3
0002F7B4 <AmiBlitz3.ab3@19015>   SUBQ.l #1,d3
0002F7B8 <AmiBlitz3.ab3@19016>   BEQ 'nostring2
0002F7BA <AmiBlitz3.ab3@19019>   ADDQ.l #4,d2
0002F7BC <AmiBlitz3.ab3@19020>   MOVE.l d2,d1
0002F7C0 <AmiBlitz3.ab3@19021>   BSR writelong
0002F7C6 <AmiBlitz3.ab3@19022>   TST.b debugmode
0002F7CA <AmiBlitz3.ab3@19023>   BEQ 'l1
0002F7D0 <AmiBlitz3.ab3@19024>   MOVE.l #$c308,d1
0002F7D6 <AmiBlitz3.ab3@19025>   JSR Atokejsr
0002F7DC <AmiBlitz3.ab3@19028>   ADDQ #2,a2offset
0002F7DE <AmiBlitz3.ab3@19029>   SUBQ.l #1,d3
0002F7E2 <AmiBlitz3.ab3@19030>   BNE 'loop
0002F7E6 <AmiBlitz3.ab3@19033>   MOVEM.l (a7)+,d2/d3
0002F7E8 <AmiBlitz3.ab3@19036>   MOVE.l (a0),d0
0002F7EC <AmiBlitz3.ab3@19037>   BNE 'more
0002F7EE <AmiBlitz3.ab3@19038>   MOVE.l (a7)+,a1
0002F7F0 <AmiBlitz3.ab3@19039> RTS
0002F7F4 <AmiBlitz3.ab3@19042> libisat:   Ds.l 1
0002F7FA <AmiBlitz3.ab3@19048>   MOVE.l libisat,-(A7)                                   
0002F800 <AmiBlitz3.ab3@19049>   MOVE.l A2,libisat
0002F804 <AmiBlitz3.ab3@19050>   LEA $6(A2,D1.L),A2
0002F80C <AmiBlitz3.ab3@19054>   CMP.l #$3e19436c,$1c-8(a2)                               ;clear type
0002F810 <AmiBlitz3.ab3@19055>   BEQ 'dowritevar
0002F818 <AmiBlitz3.ab3@19056>   CMP.l #$3e18436f,$1c-8(a2)                               ;copy type
0002F81C <AmiBlitz3.ab3@19057>   BEQ 'dowritevar
0002F824 <AmiBlitz3.ab3@19058>   CMP.l #$3e175265,$1c(a2)
0002F828 <AmiBlitz3.ab3@19059>   BEQ 'dowritevar
0002F830 <AmiBlitz3.ab3@19060>   CMP.l #$3e165772,$1c(a2)
0002F834 <AmiBlitz3.ab3@19061>   BNE 'nowritef
0002F838 <AmiBlitz3.ab3@19064>   MOVEM.l a0-a2/d2,-(a7)
0002F83A <AmiBlitz3.ab3@19065>   MOVEQ #0,d1
0002F844 <AmiBlitz3.ab3@19066>   MOVE.l #0,typebase
0002F848 <AmiBlitz3.ab3@19067>   MOVE.l $a(a3),a0
0002F84C <AmiBlitz3.ab3@19068>   MOVE.l $4(a0),d0
0002F852 <AmiBlitz3.ab3@19069>   CMP.l #8,d0
0002F856 <AmiBlitz3.ab3@19070>   BLE 'notype
0002F85A <AmiBlitz3.ab3@19071>   BSR scantype
0002F860 <AmiBlitz3.ab3@19074>   MOVE.l #$3f3c0000,d1
0002F866 <AmiBlitz3.ab3@19075>   MOVE.w a2offset,d1
0002F86A <AmiBlitz3.ab3@19076>   BSR writelong
0002F870 <AmiBlitz3.ab3@19077>   MOVE.l #$3f3c0000,d1
0002F874 <AmiBlitz3.ab3@19078>   MOVE.l $a(a3),a0
0002F878 <AmiBlitz3.ab3@19079>   MOVE.w 8(a0),d1
0002F87C <AmiBlitz3.ab3@19080>   BSR writelong
0002F882 <AmiBlitz3.ab3@19081>   MOVE.l #$3f3cab12,d1
0002F886 <AmiBlitz3.ab3@19082>   BSR writelong
0002F88C <AmiBlitz3.ab3@19083>   ADDQ.w #6,a2offset
0002F890 <AmiBlitz3.ab3@19084>   MOVEM.l (a7)+,a0-a2/d2
0002F896 <AmiBlitz3.ab3@19087>   TST.b fpu
0002F89A <AmiBlitz3.ab3@19088>   BEQ 'nofpu2
0002F8A2 <AmiBlitz3.ab3@19089>   CMP.l #$496e7400,$1a(a2)
0002F8A6 <AmiBlitz3.ab3@19090>   BNE 'noint
0002F8A8 <AmiBlitz3.ab3@19091>   MOVEQ #0,d1
0002F8AE <AmiBlitz3.ab3@19092>   SUBQ.l #8,destpointer                                    ;fpu int
0002F8B4 <AmiBlitz3.ab3@19093>   CLR.w a2offset
0002F8B8 <AmiBlitz3.ab3@19094>   CMP.b #2,d2
0002F8BC <AmiBlitz3.ab3@19095>   BGT 'noword
0002F8C0 <AmiBlitz3.ab3@19096>   MOVE.w #$48c0,d1
0002F8C6 <AmiBlitz3.ab3@19097>   OR.w regnumstore,d1
0002F8CA <AmiBlitz3.ab3@19098>   BSR writeword
0002F8CE <AmiBlitz3.ab3@19099> BRA 'exit2
0002F8D2 <AmiBlitz3.ab3@19102>    CMP.b #3,d2
0002F8D6 <AmiBlitz3.ab3@19103>         BNE 'nolong
0002F8DA <AmiBlitz3.ab3@19104> BRA 'exit2
0002F8DE <AmiBlitz3.ab3@19107>    CMP.b #4,d2
0002F8E2 <AmiBlitz3.ab3@19108>         BNE 'noquick
0002F8E6 <AmiBlitz3.ab3@19109>         MOVE.w #$e080,d1
0002F8EC <AmiBlitz3.ab3@19110>         OR.w regnumstore,d1
0002F8F0 <AmiBlitz3.ab3@19111>         BSR writeword
0002F8F4 <AmiBlitz3.ab3@19112>         MOVE.w #$e080,d1
0002F8FA <AmiBlitz3.ab3@19113>         OR.w regnumstore,d1
0002F8FE <AmiBlitz3.ab3@19114>         BSR writeword
0002F902 <AmiBlitz3.ab3@19115> BRA 'exit2
0002F904 <AmiBlitz3.ab3@19118>         MOVEQ #0,d0
0002F906 <AmiBlitz3.ab3@19119>         MOVEQ #0,d1
0002F90C <AmiBlitz3.ab3@19120>         MOVE.w regnumstore,d0
0002F90E <AmiBlitz3.ab3@19121>         ASL.l #7,d0
0002F914 <AmiBlitz3.ab3@19122>         OR.l #$f23c4428,d1                                 ;fsub.s 0.5,fpx
0002F916 <AmiBlitz3.ab3@19123>         OR.l d0,d1
0002F91C <AmiBlitz3.ab3@19125>         MOVE.l #$3f000000,d1
0002F91E <AmiBlitz3.ab3@19127>         MOVEQ #0,d0
0002F920 <AmiBlitz3.ab3@19128>         MOVEQ #0,d1
0002F926 <AmiBlitz3.ab3@19129>         MOVE.w regnumstore,d0
0002F928 <AmiBlitz3.ab3@19130>         ASL.l #7,d0
0002F92A <AmiBlitz3.ab3@19131>         MOVE.l d0,d1
0002F930 <AmiBlitz3.ab3@19132>         OR.l #$f2000003,d1                                 ;fintrz fpx
0002F932 <AmiBlitz3.ab3@19133>         ASL.l #3,d0
0002F934 <AmiBlitz3.ab3@19134>         OR.l d0,d1
0002F938 <AmiBlitz3.ab3@19135>         BSR writelong
0002F93A <AmiBlitz3.ab3@19136>         MOVEQ #0,d0
0002F940 <AmiBlitz3.ab3@19137>         MOVE.w regnumstore,d0
0002F942 <AmiBlitz3.ab3@19138>         ASL.l #7,d0
0002F948 <AmiBlitz3.ab3@19139>         MOVE.l #$f2006000,d1                               ;fmove.l fp0,d0
0002F94A <AmiBlitz3.ab3@19140>         OR.l d0,d1
0002F94C <AmiBlitz3.ab3@19141>         ASL.l #1,d0
0002F94E <AmiBlitz3.ab3@19142>         ASL.l #8,d0
0002F950 <AmiBlitz3.ab3@19143>         OR.l d0,d1
0002F954 <AmiBlitz3.ab3@19144> BRA 'exit
0002F95A <AmiBlitz3.ab3@19147>   CMP.w #$3c01,24(a2)
0002F95E <AmiBlitz3.ab3@19148>   BNE 'noval
0002F960 <AmiBlitz3.ab3@19149>   MOVE.l a2,-(a7)
0002F964 <AmiBlitz3.ab3@19150>   BSR.w JL_0_BB14
0002F966 <AmiBlitz3.ab3@19151>   MOVE.l (a7)+,a2
0002F96A <AmiBlitz3.ab3@19152> BRA 'exit2
0002F972 <AmiBlitz3.ab3@19169>   CMP.l #$41627300,$1a(a2)
0002F976 <AmiBlitz3.ab3@19170>   BNE 'noabs
0002F978 <AmiBlitz3.ab3@19171>   MOVEQ #0,d1
0002F97E <AmiBlitz3.ab3@19172>   MOVE.w regnumstore,d1
0002F980 <AmiBlitz3.ab3@19173>   MOVE.w d1,d0
0002F982 <AmiBlitz3.ab3@19174>   ASL.w #7,d1
0002F984 <AmiBlitz3.ab3@19175>   ASL.w #8,d0
0002F986 <AmiBlitz3.ab3@19176>   ASL.w #2,d0
0002F988 <AmiBlitz3.ab3@19177>   OR.w d0,d1
0002F98E <AmiBlitz3.ab3@19178>   SUBQ.l #8,destpointer                                    ;fpu abs
0002F992 <AmiBlitz3.ab3@19179>   MOVEM.l d3/d1,-(a7)
0002F996 <AmiBlitz3.ab3@19180>   MOVE.w #5,d3
0002F998 <AmiBlitz3.ab3@19181>   EXG d2,d3
0002F99E <AmiBlitz3.ab3@19182>   MOVE.w regnum,-(a7)
0002F9A8 <AmiBlitz3.ab3@19183>   MOVE.w regnumstore,regnum
0002F9AC <AmiBlitz3.ab3@19184>   BSR writeconvertcode
0002F9B2 <AmiBlitz3.ab3@19185>   MOVE.w (a7)+,regnum
0002F9B4 <AmiBlitz3.ab3@19186>   EXG d2,d3
0002F9B8 <AmiBlitz3.ab3@19187>   MOVEM.l (a7)+,d3/d1
0002F9BE <AmiBlitz3.ab3@19188>   OR.l #$f2000018,d1
0002F9C4 <AmiBlitz3.ab3@19189>   CLR.w a2offset
0002F9C8 <AmiBlitz3.ab3@19190> BRA 'exit
0002F9CC <AmiBlitz3.ab3@19193>   CMP.b #5,d2
0002F9D0 <AmiBlitz3.ab3@19194>   BNE 'nofpu2
0002F9D4 <AmiBlitz3.ab3@19195>   MOVE.b 24(a2),d0
0002F9D8 <AmiBlitz3.ab3@19196>   CMP.b #$60,d0                                            ;nolib $edxx
0002F9DC <AmiBlitz3.ab3@19197>   BNE 'nofpu
0002F9DE <AmiBlitz3.ab3@19198>   MOVEQ #0,d1
0002F9E4 <AmiBlitz3.ab3@19199>   MOVE.w regnumstore,d1
0002F9E6 <AmiBlitz3.ab3@19200>   MOVE.w d1,d0
0002F9E8 <AmiBlitz3.ab3@19201>   ASL.w #7,d1
0002F9EA <AmiBlitz3.ab3@19202>   ASL.w #8,d0
0002F9EC <AmiBlitz3.ab3@19203>   ASL.w #2,d0
0002F9EE <AmiBlitz3.ab3@19204>   OR.w d0,d1
0002F9F2 <AmiBlitz3.ab3@19205>   MOVE.b 25(a2),d0
0002F9F6 <AmiBlitz3.ab3@19206>   CMP.b #5,d0
0002F9FA <AmiBlitz3.ab3@19207>   BNE 'nocos
0002FA00 <AmiBlitz3.ab3@19208>   OR.l #$f200001d,d1                                       ;fpu cos
0002FA04 <AmiBlitz3.ab3@19209> BRA 'exit
0002FA08 <AmiBlitz3.ab3@19212>   CMP.b #$c,d0
0002FA0C <AmiBlitz3.ab3@19213>   BNE 'nosqr
0002FA12 <AmiBlitz3.ab3@19214>   OR.l #$f2000004,d1                                       ;fpu sqr
0002FA16 <AmiBlitz3.ab3@19215> BRA 'exit
0002FA1A <AmiBlitz3.ab3@19218>   CMP.b #$d,d0
0002FA1E <AmiBlitz3.ab3@19219>   BNE 'notan
0002FA24 <AmiBlitz3.ab3@19220>   OR.l #$f200000f,d1                                       ;fpu tan
0002FA28 <AmiBlitz3.ab3@19221> BRA 'exit
0002FA2C <AmiBlitz3.ab3@19224>   CMP.b #$a,d0
0002FA30 <AmiBlitz3.ab3@19225>   BNE 'nosin
0002FA36 <AmiBlitz3.ab3@19226>   OR.l #$f200000e,d1                                       ;fpu sin
0002FA3A <AmiBlitz3.ab3@19227> BRA 'exit
0002FA3E <AmiBlitz3.ab3@19230>   CMP.b #$3,d0
0002FA42 <AmiBlitz3.ab3@19231>   BNE 'noasin
0002FA48 <AmiBlitz3.ab3@19232>   OR.l #$f200000c,d1                                       ;fpu asin
0002FA4C <AmiBlitz3.ab3@19233> BRA 'exit
0002FA50 <AmiBlitz3.ab3@19236>   CMP.b #$2,d0
0002FA54 <AmiBlitz3.ab3@19237>   BNE 'noacos
0002FA5A <AmiBlitz3.ab3@19238>   OR.l #$f200001c,d1                                       ;fpu acos
0002FA5E <AmiBlitz3.ab3@19239> BRA 'exit
0002FA62 <AmiBlitz3.ab3@19242>   CMP.b #$4,d0
0002FA66 <AmiBlitz3.ab3@19243>   BNE 'noatan
0002FA6C <AmiBlitz3.ab3@19244>   OR.l #$f200000a,d1                                       ;fpu atan
0002FA70 <AmiBlitz3.ab3@19245> BRA 'exit
0002FA74 <AmiBlitz3.ab3@19248>   CMP.b #$e,d0
0002FA78 <AmiBlitz3.ab3@19249>   BNE 'nohtan
0002FA7E <AmiBlitz3.ab3@19250>   OR.l #$f2000009,d1                                       ;fpu htan
0002FA82 <AmiBlitz3.ab3@19251> BRA 'exit
0002FA86 <AmiBlitz3.ab3@19254>   CMP.b #$6,d0
0002FA8A <AmiBlitz3.ab3@19255>   BNE 'nohcos
0002FA90 <AmiBlitz3.ab3@19256>   OR.l #$f2000019,d1                                       ;fpu hcos
0002FA94 <AmiBlitz3.ab3@19257> BRA 'exit
0002FA98 <AmiBlitz3.ab3@19260>   CMP.b #$b,d0
0002FA9C <AmiBlitz3.ab3@19261>   BNE 'nohsin
0002FAA2 <AmiBlitz3.ab3@19262>   OR.l #$f2000002,d1                                       ;fpu hsin
0002FAA6 <AmiBlitz3.ab3@19263> BRA 'exit
0002FAAA <AmiBlitz3.ab3@19266>   CMP.b #$9,d0
0002FAAE <AmiBlitz3.ab3@19267>   BNE 'nolog
0002FAB4 <AmiBlitz3.ab3@19268>   OR.l #$f2000014,d1                                       ;fpu log
0002FAB8 <AmiBlitz3.ab3@19269> BRA 'exit
0002FABC <AmiBlitz3.ab3@19272>   CMP.b #$8,d0
0002FAC0 <AmiBlitz3.ab3@19273>   BNE 'nolog10
0002FAC6 <AmiBlitz3.ab3@19274>   OR.l #$f2000015,d1                                       ;fpu log10
0002FACA <AmiBlitz3.ab3@19275> BRA 'exit
0002FACE <AmiBlitz3.ab3@19278>   CMP.b #$7,d0
0002FAD2 <AmiBlitz3.ab3@19279>   BNE 'noexp
0002FAD8 <AmiBlitz3.ab3@19280>   OR.l #$f2000010,d1                                       ;fpu exp
0002FADC <AmiBlitz3.ab3@19281> BRA 'exit
0002FAE2 <AmiBlitz3.ab3@19284>   LEA fpuerr,a0
0002FAE4 <AmiBlitz3.ab3@19285>   MOVE.l a0,-(a7)
0002FAEA <AmiBlitz3.ab3@19286> JMP handle_compileerror
0002FAEE <AmiBlitz3.ab3@19290>   CMP.b #$3c,d0
0002FAF2 <AmiBlitz3.ab3@19291>   BNE 'nofpu2
0002FAF4 <AmiBlitz3.ab3@19292>   MOVEQ #0,d1
0002FAFA <AmiBlitz3.ab3@19293>       MOVE.w regnumstore,d1
0002FAFC <AmiBlitz3.ab3@19294>       MOVE.w d1,d0
0002FAFE <AmiBlitz3.ab3@19295>       ASL.w #7,d1
0002FB00 <AmiBlitz3.ab3@19296>       ASL.w #8,d0
0002FB02 <AmiBlitz3.ab3@19297>       ASL.w #2,d0
0002FB04 <AmiBlitz3.ab3@19298>       OR.w d0,d1
0002FB0A <AmiBlitz3.ab3@19299>       CMP.b #$03,25(a2)
0002FB0E <AmiBlitz3.ab3@19300>       BNE 'nosgn
0002FB14 <AmiBlitz3.ab3@19303>       SUBQ.l #8,destpointer                                ;fpu sgn
0002FB1A <AmiBlitz3.ab3@19304>         OR.l #$f200003a,d1
0002FB1E <AmiBlitz3.ab3@19305>         BSR writelong
0002FB24 <AmiBlitz3.ab3@19306>         CLR.w a2offset
0002FB2A <AmiBlitz3.ab3@19307>          MOVE.l #$F28E0006,d1
0002FB2E <AmiBlitz3.ab3@19308>          BSR writelong
0002FB34 <AmiBlitz3.ab3@19309>   MOVE.l #$7000600a,d1
0002FB38 <AmiBlitz3.ab3@19310>   BSR writelong
0002FB3E <AmiBlitz3.ab3@19311>   MOVE.l #$70014840,d1
0002FB42 <AmiBlitz3.ab3@19312>   BSR writelong
0002FB48 <AmiBlitz3.ab3@19313>   MOVE.l #$F292,d1
0002FB4C <AmiBlitz3.ab3@19314>   BSR writeword
0002FB52 <AmiBlitz3.ab3@19315>   MOVE.l #$000470FF,d1
0002FB56 <AmiBlitz3.ab3@19316> BRA 'exit
0002FB5E <AmiBlitz3.ab3@19319>   CMP.l #"Frac",$1a(a2)
0002FB62 <AmiBlitz3.ab3@19320>   BNE 'nofrac
0002FB68 <AmiBlitz3.ab3@19321> JMP notwork
0002FB6C <AmiBlitz3.ab3@19362> BRA 'exit
0002FB70 <AmiBlitz3.ab3@19366>   BSR.w JL_0_BB14                                          ;write lib code
0002FB76 <AmiBlitz3.ab3@19367>   MOVE.l (A7)+,libisat
0002FB78 <AmiBlitz3.ab3@19368> RTS
0002FB7C <AmiBlitz3.ab3@19371>   BSR writelong
0002FB82 <AmiBlitz3.ab3@19374>   MOVE.l (A7)+,libisat
0002FB84 <AmiBlitz3.ab3@19375> RTS
0002FB88 <AmiBlitz3.ab3@19379>   BSR.w fetchregs
0002FB8E <AmiBlitz3.ab3@19380>   TST.b debugmode
0002FB92 <AmiBlitz3.ab3@19381>    BEQ.w JL_0_BB76
0002FB94 <AmiBlitz3.ab3@19382>   MOVE.l (A2),D1
0002FB98 <AmiBlitz3.ab3@19383>   OR.l $8(A2),D1
0002FB9C <AmiBlitz3.ab3@19384>   BCLR #$0,D1
0002FB9E <AmiBlitz3.ab3@19385>   TST.l D1
0002FBA2 <AmiBlitz3.ab3@19386>    BEQ.w JL_0_BB76
0002FBA4 <AmiBlitz3.ab3@19387>   MOVE.l (A2)+,D1
0002FBA8 <AmiBlitz3.ab3@19388>   BTST #$0,D1
0002FBAC <AmiBlitz3.ab3@19389>    BEQ.w JL_0_BB60
0002FBB2 <AmiBlitz3.ab3@19390>   TST.w blitzmode
0002FBB6 <AmiBlitz3.ab3@19391>    BPL.w blitzerr
0002FBBC <AmiBlitz3.ab3@19392>   TST.b debugmode
0002FBC0 <AmiBlitz3.ab3@19393>    BEQ.w JL_0_BB5C
0002FBC2 <AmiBlitz3.ab3@19394>   MOVE.l D1,-(A7)
0002FBC6 <AmiBlitz3.ab3@19395>   MOVE.w #$C311,D1
0002FBCA <AmiBlitz3.ab3@19396>    BSR.w makebtst
0002FBCC <AmiBlitz3.ab3@19397>   MOVE.l (A7)+,D1
0002FBD0 <AmiBlitz3.ab3@19400>   BCLR #$0,D1
0002FBD2 <AmiBlitz3.ab3@19403>   TST.l D1
0002FBD6 <AmiBlitz3.ab3@19404>    BSR.w JL_0_BBC6
0002FBD8 <AmiBlitz3.ab3@19405>   MOVE.l (A2)+,D1
0002FBDC <AmiBlitz3.ab3@19406>    BSR.w JL_0_BB98
0002FBDE <AmiBlitz3.ab3@19407>   MOVE.l (A2)+,D1
0002FBE2 <AmiBlitz3.ab3@19408>    BSR.w JL_0_BBC6
0002FBE6 <AmiBlitz3.ab3@19409> BRA.w JL_0_BB90
0002FBEC <AmiBlitz3.ab3@19412>   BTST #$0,$3(A2)
0002FBF0 <AmiBlitz3.ab3@19413>    BEQ.w JL_0_BB88
0002FBF4 <AmiBlitz3.ab3@19414>   MOVE.w blitzmode(PC),D1
0002FBF8 <AmiBlitz3.ab3@19415>    BPL.w blitzerr
0002FBFC <AmiBlitz3.ab3@19418>   MOVE.l $4(A2),D1
0002FC00 <AmiBlitz3.ab3@19419>    BSR.w JL_0_BB98
0002FC06 <AmiBlitz3.ab3@19422>   MOVEA.l libisat,A2
0002FC08 <AmiBlitz3.ab3@19423> RTS
0002FC0C <AmiBlitz3.ab3@19426>   BTST #$0,D1
0002FC10 <AmiBlitz3.ab3@19427>    BEQ.w JL_0_BBC4
0002FC16 <AmiBlitz3.ab3@19428>   TST.w blitzmode
0002FC1A <AmiBlitz3.ab3@19429>    BMI.w amigaerr
0002FC20 <AmiBlitz3.ab3@19430>   TST.b debugmode
0002FC24 <AmiBlitz3.ab3@19431>    BEQ.w JL_0_BBC0
0002FC26 <AmiBlitz3.ab3@19432>   MOVE.l D1,-(A7)
0002FC2A <AmiBlitz3.ab3@19433>   MOVE.w #$C312,D1
0002FC2E <AmiBlitz3.ab3@19434>    BSR.w makebtst
0002FC30 <AmiBlitz3.ab3@19435>   MOVE.l (A7)+,D1
0002FC34 <AmiBlitz3.ab3@19438>   BCLR #$0,D1
0002FC36 <AmiBlitz3.ab3@19441>   TST.l D1
0002FC3A <AmiBlitz3.ab3@19444>    BEQ.w JL_0_BBD2
0002FC3C <AmiBlitz3.ab3@19445>   MOVE.l A1,-(A7)
0002FC40 <AmiBlitz3.ab3@19446>    BSR.w JL_0_BBD4
0002FC42 <AmiBlitz3.ab3@19447>   MOVEA.l (A7)+,A1
0002FC44 <AmiBlitz3.ab3@19450> RTS
0002FC4A <AmiBlitz3.ab3@19453>   MOVEA.l libisat,A0
0002FC50 <AmiBlitz3.ab3@19454>   TST.w cfetchmode
0002FC54 <AmiBlitz3.ab3@19455>    BEQ.w JL_0_BBF6
0002FC56 <AmiBlitz3.ab3@19456>   ADD.l A0,D1
0002FC58 <AmiBlitz3.ab3@19457>   MOVE.l D1,-(A7)
0002FC5C <AmiBlitz3.ab3@19458>   MOVE.w #$4EB9,D1
0002FC60 <AmiBlitz3.ab3@19459>    BSR.w writeword
0002FC62 <AmiBlitz3.ab3@19460>   MOVE.l (A7)+,D1
0002FC66 <AmiBlitz3.ab3@19461> BRA.w writelong
0002FC6A <AmiBlitz3.ab3@19464>   LEA $0(A0,D1.L),A1
0002FC70 <AmiBlitz3.ab3@19465>   CLR.w inline
0002FC74 <AmiBlitz3.ab3@19468>   CMPI.b #$A0,(A1)+
0002FC78 <AmiBlitz3.ab3@19469>    BNE.w JL_0_BC68
0002FC7A <AmiBlitz3.ab3@19470>   TST.b (A1)+
0002FC7E <AmiBlitz3.ab3@19471>    BEQ.w JL_0_BC18
0002FC84 <AmiBlitz3.ab3@19472>   CMPI.b #$1,-$1(A1)
0002FC88 <AmiBlitz3.ab3@19473>    BEQ.w JL_0_BC24
0002FC8E <AmiBlitz3.ab3@19476>   MOVE.w (A1)+,inline
0002FC90 <AmiBlitz3.ab3@19477>   ADDQ.l #4,D1
0002FC94 <AmiBlitz3.ab3@19478> BRA.w JL_0_BC00
0002FC9A <AmiBlitz3.ab3@19481>   TST.w blitzmode
0002FC9E <AmiBlitz3.ab3@19482>    BPL.w JL_0_BC4A
0002FCA4 <AmiBlitz3.ab3@19483>   TST.b debugmode
0002FCA8 <AmiBlitz3.ab3@19484>    BEQ.w JL_0_BC40
0002FCAC <AmiBlitz3.ab3@19485>   MOVE.w #$C311,D1
0002FCB0 <AmiBlitz3.ab3@19486>    BSR.w makebtst
0002FCB2 <AmiBlitz3.ab3@19489>   MOVE.l (A1)+,D1
0002FCB6 <AmiBlitz3.ab3@19490>   LEA $0(A0,D1.L),A1
0002FCBA <AmiBlitz3.ab3@19491> BRA.w JL_0_BC00
0002FCC0 <AmiBlitz3.ab3@19494>   TST.b debugmode
0002FCC4 <AmiBlitz3.ab3@19495>    BEQ.w JL_0_BC60
0002FCC6 <AmiBlitz3.ab3@19496>   MOVE.l D1,-(A7)
0002FCCA <AmiBlitz3.ab3@19497>   MOVE.w #$C312,D1
0002FCCE <AmiBlitz3.ab3@19498>    BSR.w makebtst
0002FCD0 <AmiBlitz3.ab3@19499>   MOVE.l (A7)+,D1
0002FCD2 <AmiBlitz3.ab3@19502>   ADDQ.w #4,A1
0002FCD4 <AmiBlitz3.ab3@19503>   ADDQ.l #6,D1
0002FCD8 <AmiBlitz3.ab3@19504> BRA.w JL_0_BC00
0002FCDE <AmiBlitz3.ab3@19507>   TST.w inline
0002FCE2 <AmiBlitz3.ab3@19508>    BEQ.w JL_0_BC7E
0002FCE4 <AmiBlitz3.ab3@19509>   SUBQ.w #1,A1
0002FCE6 <AmiBlitz3.ab3@19510>   MOVEA.l A1,A0
0002FCEA <AmiBlitz3.ab3@19511>   ADDA.w inline(PC),A1
0002FCEE <AmiBlitz3.ab3@19512> BRA.w pokecode2
0002FCF2 <AmiBlitz3.ab3@19515>   MOVEM.l a0/D1,-(A7)
0002FCF8 <AmiBlitz3.ab3@19516>   TST.w debugversion
0002FCFC <AmiBlitz3.ab3@19517>   BEQ 'l11
0002FD04 <AmiBlitz3.ab3@19518>   BTST #$7,link_debuginfo
0002FD08 <AmiBlitz3.ab3@19519>   BEQ.w 'l11
0002FD0E <AmiBlitz3.ab3@19520>   MOVE.l lastinstruction,d1
0002FD12 <AmiBlitz3.ab3@19521>   BEQ 'l11
0002FD18 <AmiBlitz3.ab3@19522>   CLR.l lastinstruction
0002FD1E <AmiBlitz3.ab3@19523>   CMP.l #$e000,d1
0002FD22 <AmiBlitz3.ab3@19524>   BGE 'ln99
0002FD28 <AmiBlitz3.ab3@19525>   LEA notf,a0
0002FD2E <AmiBlitz3.ab3@19526>   CMP.l #$c601,d1
0002FD32 <AmiBlitz3.ab3@19527>   BNE 'ln1
0002FD38 <AmiBlitz3.ab3@19528>   LEA strcpy,a0
0002FD3C <AmiBlitz3.ab3@19529> BRA 'ln3
0002FD42 <AmiBlitz3.ab3@19532>   CMP.l #$c700,d1
0002FD46 <AmiBlitz3.ab3@19533>   BNE 'ln2
0002FD4C <AmiBlitz3.ab3@19534>   LEA strvar,a0
0002FD50 <AmiBlitz3.ab3@19535> BRA 'ln3
0002FD56 <AmiBlitz3.ab3@19538>   CMP.l #$ce00,d1
0002FD5A <AmiBlitz3.ab3@19539>   BNE 'ln4
0002FD60 <AmiBlitz3.ab3@19540>   LEA strcmp,a0
0002FD64 <AmiBlitz3.ab3@19541> BRA 'ln3
0002FD6A <AmiBlitz3.ab3@19544>   CMP.l #$ca00,d1
0002FD6E <AmiBlitz3.ab3@19545>   BNE 'ln5
0002FD74 <AmiBlitz3.ab3@19546>   LEA qmul,a0
0002FD78 <AmiBlitz3.ab3@19547> BRA 'ln3
0002FD7E <AmiBlitz3.ab3@19550>   CMP.l #$d000,d1
0002FD82 <AmiBlitz3.ab3@19551>      BNE 'ln6
0002FD88 <AmiBlitz3.ab3@19552>      LEA _MaxLen,a0
0002FD8C <AmiBlitz3.ab3@19553> BRA 'ln3
0002FD92 <AmiBlitz3.ab3@19556>   CMP.l #$cb00,d1
0002FD96 <AmiBlitz3.ab3@19557>   BNE 'ln3
0002FD9C <AmiBlitz3.ab3@19558>   LEA qdiv,a0
0002FDA0 <AmiBlitz3.ab3@19559> BRA 'ln3
0002FDA2 <AmiBlitz3.ab3@19562>   MOVE.l d1,a0
0002FDA6 <AmiBlitz3.ab3@19563>   LEA $8(a0),a0
0002FDAA <AmiBlitz3.ab3@19566>   CMP.w #$ffff,(a0)+
0002FDAE <AmiBlitz3.ab3@19567>   BNE 'l1
0002FDB2 <AmiBlitz3.ab3@19568>   LEA 6(a0),a0
0002FDB6 <AmiBlitz3.ab3@19571>   MOVEM.l a1/a2/d7/d2,-(a7)
0002FDB8 <AmiBlitz3.ab3@19572>   MOVEQ #0,d2
0002FDBE <AmiBlitz3.ab3@19573>   LEA ptr_parameterstore,a1
0002FDC0 <AmiBlitz3.ab3@19576>   ADDQ.l #1,d2
0002FDC2 <AmiBlitz3.ab3@19577>   MOVE.b (a0)+,d0
0002FDC6 <AmiBlitz3.ab3@19578> 
0002FDCA <AmiBlitz3.ab3@19579>   BNE 'nodollar
0002FDCE <AmiBlitz3.ab3@19580>   MOVE.b #"S",d0
0002FDD2 <AmiBlitz3.ab3@19582>   CMP.b #"?",d0
0002FDD6 <AmiBlitz3.ab3@19583>   BEQ 'nolabelwrite
0002FDD8 <AmiBlitz3.ab3@19584>   MOVE.b d0,(a1)+
0002FDDC <AmiBlitz3.ab3@19585>   BNE 'l2
0002FDE2 <AmiBlitz3.ab3@19586>   MOVE.w #"__",-1(a1)
0002FDE4 <AmiBlitz3.ab3@19587>   ADDQ.l #2,d2
0002FDE8 <AmiBlitz3.ab3@19588>   CLR.b 1(a1)
0002FDEE <AmiBlitz3.ab3@19589>   JSR findlabel2
0002FDF2 <AmiBlitz3.ab3@19590>   BEQ 'l3
0002FDF8 <AmiBlitz3.ab3@19591>   JSR addlabelhash
0002FDFC <AmiBlitz3.ab3@19594>   CLR.l 4(a2)
0002FE00 <AmiBlitz3.ab3@19595>   MOVE.l $14(a7),a0
0002FE04 <AmiBlitz3.ab3@19596>   MOVE.l $10(a7),d1
0002FE08 <AmiBlitz3.ab3@19597>   SUB.l $12(a0),d1
0002FE0C <AmiBlitz3.ab3@19598>   ADD.l $28(a0),d1
0002FE10 <AmiBlitz3.ab3@19599>   MOVE.l d1,8(a2)
0002FE14 <AmiBlitz3.ab3@19600> 'nolabelwrite MOVEM.l (a7)+,a1/a2/d7/d2
0002FE1A <AmiBlitz3.ab3@19603>   TST.b typecheck
0002FE1E <AmiBlitz3.ab3@19604>   BEQ 'p1
0002FE24 <AmiBlitz3.ab3@19605>   MOVE.l lasttoken,d1
0002FE2A <AmiBlitz3.ab3@19606>   CMP.l #$da01,d1                                          ;poke
0002FE2E <AmiBlitz3.ab3@19607>   BEQ 'lp1
0002FE34 <AmiBlitz3.ab3@19608>   CMP.l #$da02,d1                                          ;peek
0002FE38 <AmiBlitz3.ab3@19609>   BNE 'p1
0002FE3E <AmiBlitz3.ab3@19612>   TST.b peekaddrsize
0002FE42 <AmiBlitz3.ab3@19613>   BEQ 'p1
0002FE4A <AmiBlitz3.ab3@19614>   CMP.b #3,peekaddrsize
0002FE4E <AmiBlitz3.ab3@19615>   BNE errormsg_onlylong
0002FE54 <AmiBlitz3.ab3@19616>   CLR.b peekaddrsize
0002FE5A <AmiBlitz3.ab3@19624>    TST.b fpu
0002FE5E <AmiBlitz3.ab3@19625>   BNE 'optf
0002FE64 <AmiBlitz3.ab3@19626>   TST.b fast
0002FE68 <AmiBlitz3.ab3@19627>   BEQ JL11a2
0002FE70 <AmiBlitz3.ab3@19634>   CMP.l #"Poke",20(a2)                                     ;poke
0002FE74 <AmiBlitz3.ab3@19635>   BNE peekopt
0002FE78 <AmiBlitz3.ab3@19636>   TST.b 24(a2)
0002FE7C <AmiBlitz3.ab3@19637>   BNE peekopt
0002FE80 <AmiBlitz3.ab3@19638>   CMP.b #3,d2
0002FE84 <AmiBlitz3.ab3@19639>   BNE 'lw1
0002FE8A <AmiBlitz3.ab3@19642>   MOVE.l #$21821990,d1
0002FE8E <AmiBlitz3.ab3@19643> BRA.s 'lpx
0002FE92 <AmiBlitz3.ab3@19646>   CMP.b #2,d2
0002FE96 <AmiBlitz3.ab3@19647>   BNE 'lb1
0002FE9C <AmiBlitz3.ab3@19648>   MOVE.l #$31821990,d1
0002FEA0 <AmiBlitz3.ab3@19649> BRA.s 'lpx
0002FEA4 <AmiBlitz3.ab3@19652>   CMP.b #1,d2
0002FEA8 <AmiBlitz3.ab3@19653>   BNE 'lp3
0002FEAE <AmiBlitz3.ab3@19654>   MOVE.l #$11821990,d1
0002FEB2 <AmiBlitz3.ab3@19655> BRA.s 'lpx
0002FEB6 <AmiBlitz3.ab3@19658>   CMP.b #5,d2
0002FEBA <AmiBlitz3.ab3@19659>     BNE JL11a2
0002FEC0 <AmiBlitz3.ab3@19660>     TST.b fpu
0002FEC4 <AmiBlitz3.ab3@19661>     BEQ 'll1
0002FECA <AmiBlitz3.ab3@19662>      MOVE.l destpointer,a4
0002FED2 <AmiBlitz3.ab3@19663>     CMP.l #$f22d4500,-6(a4)
0002FED6 <AmiBlitz3.ab3@19664>     BNE 'noglob
0002FEDC <AmiBlitz3.ab3@19665>     TST.b doublepeek
0002FEE0 <AmiBlitz3.ab3@19666>     BNE 'noglob
0002FEE6 <AmiBlitz3.ab3@19667>     MOVE.w -2(a4),-4(a4)
0002FEEC <AmiBlitz3.ab3@19668>     MOVE.w #$21ad,-6(a4)
0002FEF2 <AmiBlitz3.ab3@19669>     MOVE.w #$1990,-2(a4)
0002FEFA <AmiBlitz3.ab3@19670>     MOVE.w #9,peeksize
0002FEFC <AmiBlitz3.ab3@19671>     ADDQ #8,a7
0002FEFE <AmiBlitz3.ab3@19672> RTS
0002FF06 <AmiBlitz3.ab3@19675>     CMP.l #$f22c4500,-6(a4)
0002FF0A <AmiBlitz3.ab3@19676>     BNE 'nolocal
0002FF10 <AmiBlitz3.ab3@19677>     MOVE.w -2(a4),-4(a4)
0002FF16 <AmiBlitz3.ab3@19678>     TST.b doublepeek                                       ;dont move longfix on double floats
0002FF1A <AmiBlitz3.ab3@19679>     BNE 'nolocal
0002FF20 <AmiBlitz3.ab3@19680>     MOVE.w #$21ac,-6(a4)
0002FF26 <AmiBlitz3.ab3@19681>     MOVE.w #$1990,-2(a4)
0002FF2E <AmiBlitz3.ab3@19682>     MOVE.w #9,peeksize
0002FF30 <AmiBlitz3.ab3@19683>     ADDQ #8,a7
0002FF32 <AmiBlitz3.ab3@19684> RTS
0002FF36 <AmiBlitz3.ab3@19687>     MOVE.w #$f230,d1
0002FF3A <AmiBlitz3.ab3@19688>     BSR writeword
0002FF40 <AmiBlitz3.ab3@19689>   MOVE.l #$65001990,d1
0002FF46 <AmiBlitz3.ab3@19690>   TST.b doublepeek
0002FF4A <AmiBlitz3.ab3@19691>   BEQ 'lpx
0002FF50 <AmiBlitz3.ab3@19692>   OR.l   #$10000000,d1
0002FF52 <AmiBlitz3.ab3@19696>   ADDQ #8,a7
0002FF5A <AmiBlitz3.ab3@19697>   MOVE.w #9,peeksize
0002FF5E <AmiBlitz3.ab3@19698> BRA writelong
0002FF66 <AmiBlitz3.ab3@19701>   CMP.l #"Peek",20(a2)
0002FF6A <AmiBlitz3.ab3@19702>   BNE 'l10
0002FF6E <AmiBlitz3.ab3@19703>   TST.b 24(a2)
0002FF72 <AmiBlitz3.ab3@19704>   BNE 'l10
0002FF7A <AmiBlitz3.ab3@19705>   CMP.w #7,peeksize
0002FF7E <AmiBlitz3.ab3@19706>   BEQ 'l10
0002FF86 <AmiBlitz3.ab3@19707>    CMP.w #3,peeksize
0002FF8A <AmiBlitz3.ab3@19708>    BNE.s 'lw1
0002FF90 <AmiBlitz3.ab3@19711>   MOVE.l #$20301990,d1
0002FF94 <AmiBlitz3.ab3@19712> BRA exitjsr
0002FF9C <AmiBlitz3.ab3@19715>   CMP.w #2,peeksize
0002FFA0 <AmiBlitz3.ab3@19716>    BNE.s 'lb1
0002FFA6 <AmiBlitz3.ab3@19717>    MOVE.l #$30301990,d1
0002FFAA <AmiBlitz3.ab3@19718> BRA exitjsr
0002FFB2 <AmiBlitz3.ab3@19721>   CMP.w #1,peeksize
0002FFB6 <AmiBlitz3.ab3@19722>    BNE.s 'lf1
0002FFBC <AmiBlitz3.ab3@19723>    MOVE.l #$10301990,d1
0002FFC0 <AmiBlitz3.ab3@19724> BRA exitjsr
0002FFC8 <AmiBlitz3.ab3@19727>   CMP.w #5,peeksize
0002FFCC <AmiBlitz3.ab3@19728>    BNE 'l10
0002FFD2 <AmiBlitz3.ab3@19729>    TST.b fpu
0002FFD6 <AmiBlitz3.ab3@19730>    BEQ 'll1
0002FFDA <AmiBlitz3.ab3@19731>    MOVE.w #$f230,d1
0002FFDE <AmiBlitz3.ab3@19732>    BSR writeword
0002FFE0 <AmiBlitz3.ab3@19733>    MOVEQ #0,d1
0002FFE6 <AmiBlitz3.ab3@19734>    MOVE.w tempregnum,d1
0002FFE8 <AmiBlitz3.ab3@19735>    ASL.l #7,d1
0002FFEA <AmiBlitz3.ab3@19736>    ASL.l #8,d1
0002FFEC <AmiBlitz3.ab3@19737>    ASL.l #8,d1
0002FFF2 <AmiBlitz3.ab3@19738>    ADD.l #$44001990,d1
0002FFF8 <AmiBlitz3.ab3@19739>     TST.b doublepeek
0002FFFC <AmiBlitz3.ab3@19740>     BEQ 'lpx2
00030002 <AmiBlitz3.ab3@19741>     OR.l   #$10000000,d1
00030006 <AmiBlitz3.ab3@19743> BRA exitjsr
0003000A <AmiBlitz3.ab3@19747>   MOVE.w #$4EB9,D1
0003000E <AmiBlitz3.ab3@19748>    BSR.w writeword                                         ;writesysjsr
00030012 <AmiBlitz3.ab3@19749>   MOVEM.l (A7)+,a0/D1
00030018 <AmiBlitz3.ab3@19750>    JSR addoff
0003001C <AmiBlitz3.ab3@19751>   SUB.l $12(A0),D1
00030020 <AmiBlitz3.ab3@19752>   ADD.l $28(A0),D1
00030024 <AmiBlitz3.ab3@19753> BRA.w writelong
00030026 <AmiBlitz3.ab3@19758>   MOVE.w D1,-(A7)
0003002A <AmiBlitz3.ab3@19759>   MOVE.w tstmode(PC),D1
0003002E <AmiBlitz3.ab3@19760>    BSR.w writeword
00030032 <AmiBlitz3.ab3@19761>    BSR.w getbbase
00030036 <AmiBlitz3.ab3@19762>    BSR.w writeword
00030038 <AmiBlitz3.ab3@19763>   MOVE.w (A7)+,D1
0003003C <AmiBlitz3.ab3@19764>   MOVEM.l D0/D3-D7/A0-A2/A4,-(A7)
00030040 <AmiBlitz3.ab3@19765>    BSR.w Atokejsr
00030044 <AmiBlitz3.ab3@19766>   MOVEM.l (A7)+,D0/D3-D7/A0-A2/A4
00030046 <AmiBlitz3.ab3@19767> RTS
0003004A <AmiBlitz3.ab3@19775>   MOVE.w blitzoff(PC),D1
0003004E <AmiBlitz3.ab3@19776>   CMP.w #-$1,D1
00030052 <AmiBlitz3.ab3@19777>    BNE.w getbbase__done
00030058 <AmiBlitz3.ab3@19778>   ADDQ.w #1,globalvarpointer
00030060 <AmiBlitz3.ab3@19779>   BCLR #$0,globalvarpointer+1
00030066 <AmiBlitz3.ab3@19780>   MOVE.w globalvarpointer,D1
0003006C <AmiBlitz3.ab3@19781>   MOVE.w D1,blitzoff
00030072 <AmiBlitz3.ab3@19782>   ADDQ.w #2,globalvarpointer
00030074 <AmiBlitz3.ab3@19785> RTS
00030078 <AmiBlitz3.ab3@19789> tstmode:    Dc.b $4A,$6D,$00,$00                           ;TST.W $0000(A5)
0003007A <AmiBlitz3.ab3@19792> inline:     Ds.w 1
0003007C <AmiBlitz3.ab3@19793> blitzoff:   Dc.w $FFFF                                   ;-1 org source
0003007E <AmiBlitz3.ab3@19794> blitzmode:  Ds.w 1                                       ;+=amiga, -=blitz
00030080 <AmiBlitz3.ab3@19798>   MOVE.w (A2)+,D1
00030084 <AmiBlitz3.ab3@19799>    BEQ.w fetchregs__done
00030086 <AmiBlitz3.ab3@19800>   MOVE.w (A2)+,D2
0003008A <AmiBlitz3.ab3@19801>    BSR.w toreg
0003008E <AmiBlitz3.ab3@19802> BRA.w fetchregs
00030090 <AmiBlitz3.ab3@19805> RTS
00030094 <AmiBlitz3.ab3@19810>   CMP.w #-$100,D2
00030098 <AmiBlitz3.ab3@19811>    BCC.w toreg__yeah
0003009C <AmiBlitz3.ab3@19813>   BCLR #$F,D2
000300A0 <AmiBlitz3.ab3@19814>    BEQ.w toreg__nobm
000300A6 <AmiBlitz3.ab3@19816>   TST.w blitzmode
000300AA <AmiBlitz3.ab3@19817>    BMI.w toreg__yeah
000300AC <AmiBlitz3.ab3@19818> RTS
000300B0 <AmiBlitz3.ab3@19821>   BCLR #$E,D2
000300B4 <AmiBlitz3.ab3@19822>    BEQ.w toreg__yeah
000300BA <AmiBlitz3.ab3@19824>   TST.w blitzmode
000300BE <AmiBlitz3.ab3@19825>    BPL.w toreg__yeah
000300C0 <AmiBlitz3.ab3@19826> RTS
000300C6 <AmiBlitz3.ab3@19829>   JSR uselib
000300C8 <AmiBlitz3.ab3@19830>   TST.b D2
000300CC <AmiBlitz3.ab3@19831>    BEQ.w toreg__norm
000300D0 <AmiBlitz3.ab3@19832>   CMP.b #$4,D2
000300D4 <AmiBlitz3.ab3@19833>    BNE.w toreg__suv
000300D8 <AmiBlitz3.ab3@19834>   MOVE.w #$0004,-(A7)
000300DE <AmiBlitz3.ab3@19835>   MOVE.l #$FFFFFFFA,-(A7)                                  ;#-6,-(a7) org source
000300E2 <AmiBlitz3.ab3@19836> BRA.w toreg__sendmd
000300E6 <AmiBlitz3.ab3@19839>   CMP.b #$3,D2
000300EA <AmiBlitz3.ab3@19840>    BNE.w toreg__notnmax
000300EC <AmiBlitz3.ab3@19841>   CLR.w -(A7)
000300F2 <AmiBlitz3.ab3@19842>   MOVE.l #$FFFFFFFC,-(A7)                                  ;#-4,-(a7) org source
000300F4 <AmiBlitz3.ab3@19848>   LSR.w #8,D2
000300F8 <AmiBlitz3.ab3@19849>   MOVE.w #$303C,D1                                         ;move.w #x,dn
000300FC <AmiBlitz3.ab3@19850>   BTST #$7,D2
00030100 <AmiBlitz3.ab3@19851>    BEQ.w toreg__skipad
00030104 <AmiBlitz3.ab3@19852>   MOVE.w #$307C,D1                                         ;move.w #x,an
00030108 <AmiBlitz3.ab3@19853>   CMP.w #$16,D2
0003010C <AmiBlitz3.ab3@19854>    BNE.w toreg__skipad
00030114 <AmiBlitz3.ab3@19855>   MOVE.w #$FFFF,lasta6                                     ;-1 org source
00030118 <AmiBlitz3.ab3@19858>   ANDI.w #$7,D2
0003011A <AmiBlitz3.ab3@19859>   LSL.w #8,D2
0003011C <AmiBlitz3.ab3@19860>   LSL.w #1,D2
0003011E <AmiBlitz3.ab3@19861>   OR.w D2,D1
00030122 <AmiBlitz3.ab3@19862>    BSR.w writeword
00030126 <AmiBlitz3.ab3@19863>   MOVE.l $12(A1),D1
00030128 <AmiBlitz3.ab3@19864>   ADD.l (A7)+,D1
0003012C <AmiBlitz3.ab3@19865>   MOVE.w $0(A1,D1.L),D1
0003012E <AmiBlitz3.ab3@19866>   ADD.w (A7)+,D1
00030132 <AmiBlitz3.ab3@19867> BRA.w writeword
00030134 <AmiBlitz3.ab3@19870>   MOVE.w D2,-(A7)
00030136 <AmiBlitz3.ab3@19871>   LSR.w #8,D2
0003013A <AmiBlitz3.ab3@19872>   CMP.w #$16,D2
0003013E <AmiBlitz3.ab3@19873>    BNE.w toreg__isnta6
00030146 <AmiBlitz3.ab3@19874>   MOVE.w #$FFFF,lasta6                                     ;-1 org source
0003014A <AmiBlitz3.ab3@19877>   MOVE.l $12(A1),D1                                        ;objectspace
0003014E <AmiBlitz3.ab3@19878>   MOVE.w -$6(A1,D1.L),-(A7)
00030152 <AmiBlitz3.ab3@19879>    BSR.w makeregop
00030156 <AmiBlitz3.ab3@19880>    BSR.w writeword
00030158 <AmiBlitz3.ab3@19881>   MOVE.w (A7)+,D1
0003015A <AmiBlitz3.ab3@19882>   MOVE.w (A7)+,D2
0003015C <AmiBlitz3.ab3@19883>   TST.b D2
00030160 <AmiBlitz3.ab3@19884>    BPL.w toreg__skippy1
00030164 <AmiBlitz3.ab3@19889>    BSR.w writeword                                         ;move.l x(a5),dn
00030166 <AmiBlitz3.ab3@19890>   MOVE.w D2,-(A7)                                          ;store reg used
0003016A <AmiBlitz3.ab3@19892>   ADDA.l $12(A1),A1
0003016C <AmiBlitz3.ab3@19893>   MOVE.b D2,D1
00030170 <AmiBlitz3.ab3@19894>   ANDI.w #$7,D1
00030176 <AmiBlitz3.ab3@19896>   TST.b debugmode
0003017A <AmiBlitz3.ab3@19897>    BEQ.w toreg__norerr
0003017C <AmiBlitz3.ab3@19899>   MOVE.w D1,-(A7)
0003017E <AmiBlitz3.ab3@19900>   LSL.w #8,D1
00030180 <AmiBlitz3.ab3@19901>   LSL.w #1,D1
00030184 <AmiBlitz3.ab3@19902>   ORI.w #$B07C,D1                                          ;cmp #x,dn
00030188 <AmiBlitz3.ab3@19903>    BSR.w writeword
0003018C <AmiBlitz3.ab3@19904>   MOVE.w -$4(A1),D1
00030190 <AmiBlitz3.ab3@19905>    BSR.w writeword
00030194 <AmiBlitz3.ab3@19906>   MOVE.l maxchk(PC),D1                                  ;bcs
00030198 <AmiBlitz3.ab3@19907>    BSR.w writelong
0003019A <AmiBlitz3.ab3@19908>   MOVE.l A2,-(A7)
0003019E <AmiBlitz3.ab3@19909>   MOVE.w #$C30A,D1
000301A2 <AmiBlitz3.ab3@19910>    BSR.w Atokejsr
000301A4 <AmiBlitz3.ab3@19911>   MOVEA.l (A7)+,A2
000301A6 <AmiBlitz3.ab3@19912>   MOVE.w (A7)+,D1
000301AA <AmiBlitz3.ab3@19915>   MOVE.w -$2(A1),D2                                        ;shift amount
000301AE <AmiBlitz3.ab3@19918>   CMP.w #$9,D2
000301B2 <AmiBlitz3.ab3@19919>    BCS.w toreg__simp
000301B6 <AmiBlitz3.ab3@19920>   MOVEM.w D1-D2,-(A7)
000301B8 <AmiBlitz3.ab3@19922>   MOVEQ.l #$00,D2                                          ;!!!!!
000301BA <AmiBlitz3.ab3@19924>   LSL.w #8,D2
000301BC <AmiBlitz3.ab3@19925>   LSL.w #1,D2
000301BE <AmiBlitz3.ab3@19926>   OR.w D2,D1
000301C2 <AmiBlitz3.ab3@19927>   OR.w lsldn(PC),D1
000301C6 <AmiBlitz3.ab3@19928>    BSR.w writeword
000301CA <AmiBlitz3.ab3@19929>   MOVEM.w (A7)+,D1-D2
000301CC <AmiBlitz3.ab3@19930>   SUBQ.w #8,D2
000301D0 <AmiBlitz3.ab3@19931> BRA.w toreg__shloop
000301D2 <AmiBlitz3.ab3@19934>   MOVE.w D1,-(A7)
000301D6 <AmiBlitz3.ab3@19935>   OR.w #$48c0,d1
000301DA <AmiBlitz3.ab3@19936>   BSR writeword
000301DC <AmiBlitz3.ab3@19937>   MOVE.w (a7),d1
000301DE <AmiBlitz3.ab3@19938>   TST.w D2
000301E2 <AmiBlitz3.ab3@19939>   BEQ.w toreg__simp2
000301E6 <AmiBlitz3.ab3@19941>   ANDI.w #$7,D2                                            ;?????
000301E8 <AmiBlitz3.ab3@19943>   LSL.w #8,D2
000301EA <AmiBlitz3.ab3@19944>   LSL.w #1,D2
000301EC <AmiBlitz3.ab3@19945>   OR.w D2,D1
000301F0 <AmiBlitz3.ab3@19946>   OR.w lsldn(PC),D1
000301F4 <AmiBlitz3.ab3@19947>    BSR.w writeword
000301F6 <AmiBlitz3.ab3@19953>   MOVE.w (A7)+,D1
000301FA <AmiBlitz3.ab3@19954>   ANDI.w #$7,D1
000301FE <AmiBlitz3.ab3@19955>   OR.w maxdo(PC),D1
00030200 <AmiBlitz3.ab3@19956>   MOVE.w (A7)+,D2
00030202 <AmiBlitz3.ab3@19957>   LSL.w #1,D2
00030206 <AmiBlitz3.ab3@19958>   ANDI.w #$E00,D2
00030208 <AmiBlitz3.ab3@19959>   OR.w D2,D1
0003020C <AmiBlitz3.ab3@19960> BRA.w writeword
00030210 <AmiBlitz3.ab3@19963>   CMP.b #$1,D2
00030214 <AmiBlitz3.ab3@19964>    BEQ.w toreg__skippy
00030216 <AmiBlitz3.ab3@19968>   ADDQ.w #4,D1
0003021C <AmiBlitz3.ab3@19970>   TST.b debugmode
00030220 <AmiBlitz3.ab3@19971>    BEQ.w toreg__skippy
00030224 <AmiBlitz3.ab3@19973>    BSR.w writeword
00030226 <AmiBlitz3.ab3@19974>   SWAP D1
0003022A <AmiBlitz3.ab3@19975>   MOVE.w toreg__theretest(PC),D1
0003022C <AmiBlitz3.ab3@19976>   SWAP D1
00030230 <AmiBlitz3.ab3@19977>    BSR.w writelong
00030234 <AmiBlitz3.ab3@19978>   MOVE.l toreg__theretest+4(PC),D1
00030238 <AmiBlitz3.ab3@19979>    BSR.w writelong
0003023C <AmiBlitz3.ab3@19980>   MOVE.l toreg__theretest+8(PC),D1
00030240 <AmiBlitz3.ab3@19981> BRA.w writelong
00030244 <AmiBlitz3.ab3@19984> BRA.w writeword
00030248 <AmiBlitz3.ab3@19989>             Dc.b $4A,$AD,$00,$00                           ;TST.L  $0000(A5)
0003024C <AmiBlitz3.ab3@19990>             Dc.b $66,$00,$00,$06                           ;BNE.W  toreg__ttskip
0003024E <AmiBlitz3.ab3@19991>             Dc.b $70,$01                                   ;MOVEQ  #$01,D0
00030250 <AmiBlitz3.ab3@19992>             Dc.b $4E,$40                                   ;TRAP   #00
00030252 <AmiBlitz3.ab3@19997>   LSR.w #8,D2
00030256 <AmiBlitz3.ab3@19998>   CMP.b #$16,D2
0003025A <AmiBlitz3.ab3@19999>    BNE.w toreg__nota6
0003025E <AmiBlitz3.ab3@20000>   MOVE.w $A(A1),D1
00030264 <AmiBlitz3.ab3@20001>   CMP.w lasta6,D1
00030268 <AmiBlitz3.ab3@20002>    BEQ.w toreg__sk
0003026E <AmiBlitz3.ab3@20003>   MOVE.w D1,lasta6
00030272 <AmiBlitz3.ab3@20006>    BSR.w makeregop
00030276 <AmiBlitz3.ab3@20007>   TST.w $1A(A1)
0003027A <AmiBlitz3.ab3@20008>    BPL.w toreg__long
0003027E <AmiBlitz3.ab3@20009>   CMP.w stackop(PC),D1
00030282 <AmiBlitz3.ab3@20010>    BNE.w toreg__notst
00030288 <AmiBlitz3.ab3@20011>   SUBQ.w #2,a2offset
0003028C <AmiBlitz3.ab3@20014>    ORI.w #$1000,D1
00030290 <AmiBlitz3.ab3@20017>    BSR.w writeword
00030294 <AmiBlitz3.ab3@20018>   MOVE.w $A(A1),D1
00030298 <AmiBlitz3.ab3@20019>    BSR.w writeword
0003029A <AmiBlitz3.ab3@20022> RTS
0003029C <AmiBlitz3.ab3@20026> lsldn:      Dc.b $E1,$88                 ;Dc.b $48 ;object long acsess    ;LSL.L   #8,D0
000302A0 <AmiBlitz3.ab3@20027> maxchk:     Dc.b $65,$00,$00,$08                                          ;BCS.W   maxchk__ok
000302A6 <AmiBlitz3.ab3@20028>             Dc.b $4E,$B9,$00,$00,$00,$00                                  ;JSR     $00000000
000302A8 <AmiBlitz3.ab3@20031> 
000302AA <AmiBlitz3.ab3@20034>             Dc.b $00,$00
000302AE <AmiBlitz3.ab3@20035> stackop:    Dc.b $2F,$2D,$00,$00                                          ;MOVE.L  $0000(A5),-(A7)
000302B2 <AmiBlitz3.ab3@20042>   CMP.b #$FF,D2
000302B6 <AmiBlitz3.ab3@20043>    BNE.w makeregop__notst
000302BA <AmiBlitz3.ab3@20044>   MOVE.w stackop(PC),D1
000302C0 <AmiBlitz3.ab3@20045>   ADDQ.w #4,a2offset
000302C2 <AmiBlitz3.ab3@20046> RTS
000302C4 <AmiBlitz3.ab3@20049>   MOVE.l A3,-(A7)
000302CA <AmiBlitz3.ab3@20050>   LEA regtransd,A3
000302CE <AmiBlitz3.ab3@20051>   BTST #$4,D2
000302D2 <AmiBlitz3.ab3@20052>    BEQ.w makeregop__skip
000302D8 <AmiBlitz3.ab3@20053>   LEA regtransa,A3
000302DC <AmiBlitz3.ab3@20056>   ANDI.w #$7,D2
000302DE <AmiBlitz3.ab3@20057>   MOVE.w D2,D1
000302E0 <AmiBlitz3.ab3@20058>   LSL.w #8,D1
000302E2 <AmiBlitz3.ab3@20059>   LSL.w #1,D1
000302E4 <AmiBlitz3.ab3@20060>   OR.w (A3),D1
000302E6 <AmiBlitz3.ab3@20061>   MOVEA.l (A7)+,A3
000302E8 <AmiBlitz3.ab3@20062> RTS
000302EC <AmiBlitz3.ab3@20068>   CMP.w #$3C,D0
000302F0 <AmiBlitz3.ab3@20069>    BCS.w ifchar__no
000302F4 <AmiBlitz3.ab3@20070>   CMP.w #$3E,D0
000302F8 <AmiBlitz3.ab3@20071>    BHI.w ifchar__no
000302FC <AmiBlitz3.ab3@20072>   SUBI.w #$3C,D0
000302FE <AmiBlitz3.ab3@20073>   CMP.w D0,D0
00030300 <AmiBlitz3.ab3@20076> RTS
0003030A <AmiBlitz3.ab3@20081>   MOVE.w oldqflag,instringon
00030310 <AmiBlitz3.ab3@20082>   MOVEA.l lastsourcepos,A5
00030316 <AmiBlitz3.ab3@20087>   MOVE.w regnum,-(A7)
0003031C <AmiBlitz3.ab3@20088>   CLR.w regnum
00030322 <AmiBlitz3.ab3@20089>   MOVE.l destpointer,-(A7)
00030328 <AmiBlitz3.ab3@20090>   MOVE.l destbufferend,-(A7)
0003032E <AmiBlitz3.ab3@20091>   MOVE.w dontwrite,-(A7)
00030334 <AmiBlitz3.ab3@20092>   MOVE.w lasta6,-(A7)
0003033A <AmiBlitz3.ab3@20093>   MOVE.w cfetchmode,-(A7)
0003033E <AmiBlitz3.ab3@20094>    BNE.w JL_0_BFB6
00030348 <AmiBlitz3.ab3@20095>   MOVE.l destbufferend,oldlibat
0003034E <AmiBlitz3.ab3@20096>   MOVEA.l constpcat,A0
00030354 <AmiBlitz3.ab3@20097>   MOVE.l A0,destpointer
00030358 <AmiBlitz3.ab3@20098> BRA.w JL_0_BFBC
0003035E <AmiBlitz3.ab3@20101>   MOVEA.l destpointer,A0
00030360 <AmiBlitz3.ab3@20104>   MOVE.l A0,-(A7)
0003036A <AmiBlitz3.ab3@20105>   MOVE.l constlibat,destbufferend
00030370 <AmiBlitz3.ab3@20106>   CLR.w dontwrite
00030378 <AmiBlitz3.ab3@20108>   MOVE.w #$FFFF,lasta6
00030380 <AmiBlitz3.ab3@20109>   MOVE.w #$FFFF,cfetchmode
00030384 <AmiBlitz3.ab3@20111>     BSR.w arreval
00030386 <AmiBlitz3.ab3@20112>    MOVE.l (a7),a0
000304C2 <AmiBlitz3.ab3@20114>  !newcalc
000304C6 <AmiBlitz3.ab3@20115>    BEQ 'l10
000304C8 <AmiBlitz3.ab3@20116>    MOVE.l d0,d3
000304CA <AmiBlitz3.ab3@20117>    MOVEA.l (A7)+,A0
000304CE <AmiBlitz3.ab3@20118> BRA bc1
000304D2 <AmiBlitz3.ab3@20121>    MOVE.w #$2600,D1
000304D8 <AmiBlitz3.ab3@20122>   OR.w regnum,D1
000304DC <AmiBlitz3.ab3@20123>    BSR.w writeword
000304E0 <AmiBlitz3.ab3@20124>   MOVE.w #$4E75,D1
000304E4 <AmiBlitz3.ab3@20125>    BSR.w writeword
000304EA <AmiBlitz3.ab3@20126>   MOVE.w dontwrite,D1
000304EE <AmiBlitz3.ab3@20127>    BNE.w conmemerr
000304F0 <AmiBlitz3.ab3@20128>   MOVEA.l (A7)+,A0
000304F2 <AmiBlitz3.ab3@20129>   NOP
000304F8 <AmiBlitz3.ab3@20130>    JSR Aclearcache                                         ;simple expression
000304FA <AmiBlitz3.ab3@20133>    JSR (A0)                                                ;writeresult
00030500 <AmiBlitz3.ab3@20136>   MOVE.w (A7)+,cfetchmode
00030506 <AmiBlitz3.ab3@20137>   MOVE.w (A7)+,lasta6
0003050C <AmiBlitz3.ab3@20138>   MOVE.w (A7)+,dontwrite
00030512 <AmiBlitz3.ab3@20139>   MOVE.l (A7)+,destbufferend
00030518 <AmiBlitz3.ab3@20140>   MOVE.l (A7)+,destpointer
0003051E <AmiBlitz3.ab3@20141>   MOVE.w (A7)+,regnum
00030524 <AmiBlitz3.ab3@20144> JMP reget
00030528 <AmiBlitz3.ab3@20147> oldlibat:   Ds.l 1
0003052E <AmiBlitz3.ab3@20151>   LEA incdir,A0
00030532 <AmiBlitz3.ab3@20154>   CMP.w #$22,D0
00030536 <AmiBlitz3.ab3@20155>    BEQ.w JL_0_C052
00030538 <AmiBlitz3.ab3@20156>   MOVE.b D0,(A0)+
0003053A <AmiBlitz3.ab3@20157>   TST.w D0
0003053E <AmiBlitz3.ab3@20158>    BEQ.w JL_0_C05A
00030542 <AmiBlitz3.ab3@20159>    BMI.w syntaxerr
00030548 <AmiBlitz3.ab3@20162>   JSR get1bytemain                                         ;_long
0003054C <AmiBlitz3.ab3@20163> BRA.w JL_0_C03E
0003054E <AmiBlitz3.ab3@20166> RTS
00030554 <AmiBlitz3.ab3@20170>   LEA ptr_parameterstore,A1                                ;getparameter
0003055A <AmiBlitz3.ab3@20171>   LEA incdir,A0
0003055C <AmiBlitz3.ab3@20172>   MOVEQ.l #-$01,D2
0003055E <AmiBlitz3.ab3@20175>     ADDQ.w #1,D2
00030560 <AmiBlitz3.ab3@20176>     MOVE.b (A0)+,(A1)+
00030564 <AmiBlitz3.ab3@20177>   BNE.w JL_0_C06A
00030566 <AmiBlitz3.ab3@20178>   SUBQ.w #1,A1
00030570 <AmiBlitz3.ab3@20180>   MOVE.w oldqflag,instringon
00030576 <AmiBlitz3.ab3@20181>   MOVEA.l lastsourcepos,A5
0003057C <AmiBlitz3.ab3@20185>   JSR get1bytemain
0003057E <AmiBlitz3.ab3@20186>   TST.w D0
00030582 <AmiBlitz3.ab3@20187>    BMI.w syntaxerr
00030586 <AmiBlitz3.ab3@20188>   CMP.b #$22,D0
0003058A <AmiBlitz3.ab3@20189>    BEQ.w JL_0_C078
0003058C <AmiBlitz3.ab3@20190>   MOVE.b D0,(A1)+
00030590 <AmiBlitz3.ab3@20191>    BEQ.w JL_0_C096
00030592 <AmiBlitz3.ab3@20192>   ADDQ.w #1,D2
00030596 <AmiBlitz3.ab3@20193> BRA.w JL_0_C078
00030598 <AmiBlitz3.ab3@20196>   TST.w D2
0003059C <AmiBlitz3.ab3@20197>    BEQ.w syntaxerr
0003059E <AmiBlitz3.ab3@20198> RTS
000305A4 <AmiBlitz3.ab3@20202>   MOVEA.l constantbase,A2
000305A8 <AmiBlitz3.ab3@20203>   MOVEA.l $E(A2),A5
000305AE <AmiBlitz3.ab3@20204>   MOVE.l a5,includesourceline
000305B4 <AmiBlitz3.ab3@20205>   LEA inctab,a0
000305BA <AmiBlitz3.ab3@20206>   MOVE.w ininclude,d0
000305BE <AmiBlitz3.ab3@20207>   MOVE.l $0(a0,d0*4),d0
000305C2 <AmiBlitz3.ab3@20208>   MOVEA.l $4(A2),A0
000305C6 <AmiBlitz3.ab3@20210>   LEA $0(A0,D0.l),A0
000305C8 <AmiBlitz3.ab3@20211>   MOVEA.l A5,A1
000305CA <AmiBlitz3.ab3@20214>     CMPA.l A0,A1
000305CE <AmiBlitz3.ab3@20215>      BCC.w JL_0_C0C6
000305D0 <AmiBlitz3.ab3@20216>   TST.b (A1)+
000305D4 <AmiBlitz3.ab3@20217>   BNE.w JL_0_C0B6
000305D8 <AmiBlitz3.ab3@20218> BRA.w JL_0_C112
000305DC <AmiBlitz3.ab3@20221>   MOVEA.l $4(A2),A1
000305DE <AmiBlitz3.ab3@20224>   CMPA.l A0,A5
000305E2 <AmiBlitz3.ab3@20225>   BCC.w JL_0_C0D6
000305E4 <AmiBlitz3.ab3@20226>   MOVE.b (A5)+,(A1)+
000305E8 <AmiBlitz3.ab3@20227> BRA.w JL_0_C0CA
000305EA <AmiBlitz3.ab3@20230>   MOVE.l A1,D0
000305EE <AmiBlitz3.ab3@20231>   SUB.l $4(A2),D0
000305F4 <AmiBlitz3.ab3@20232>   LEA inctab,a0
000305F6 <AmiBlitz3.ab3@20233>   MOVEQ #0,d1
000305FC <AmiBlitz3.ab3@20234>   MOVE.w ininclude,d1
00030600 <AmiBlitz3.ab3@20235>   MOVE.l d0,0(a0,d1*4)
00030606 <AmiBlitz3.ab3@20237>   MOVEA.l _dosbase,A6
0003060A <AmiBlitz3.ab3@20238>   MOVE.l $8(A2),D1
0003060C <AmiBlitz3.ab3@20239>   MOVE.l A1,D2
00030612 <AmiBlitz3.ab3@20240>   MOVE.l D2,include_base
00030618 <AmiBlitz3.ab3@20242>   MOVE.l #$10000000,d3                                     ;load whole file
0003061A <AmiBlitz3.ab3@20243>   SUB.l D0,D3
0003061E <AmiBlitz3.ab3@20244>    JSR _Read(A6)
00030620 <AmiBlitz3.ab3@20245>   TST.l D0
00030624 <AmiBlitz3.ab3@20246>    BMI.w error_reading_file
00030628 <AmiBlitz3.ab3@20247>    BEQ.w JL_0_C120
0003062E <AmiBlitz3.ab3@20248>    MOVE.l D0,include_length
00030670 <AmiBlitz3.ab3@20249>    !ComData_GetL{comPtr_PreProcessor,include_preprocessor}
0003069A <AmiBlitz3.ab3@20250>    !basic
000306AA <AmiBlitz3.ab3@20251>    ilen.l  = Peek.l(?include_length)
000306BA <AmiBlitz3.ab3@20252>    ibase.l = Peek.l(?include_base)
000306CA <AmiBlitz3.ab3@20253>    ido.l   = Peek.l(?include_process)
000306DA <AmiBlitz3.ab3@20254>    *tn.preprocessor = Peek.l(?include_preprocessor)
000306E4 <AmiBlitz3.ab3@20255>    If ido
000306F6 <AmiBlitz3.ab3@20256>      ioffset.l = SkipXtraHeader{ibase,ilen}
0003071C <AmiBlitz3.ab3@20257>      nilen.l = preproc_Tokenize{*tn,ibase+ioffset,ibase,ilen-ioffset}
0003072E <AmiBlitz3.ab3@20258>      If nilen>0
0003073E <AmiBlitz3.ab3@20262>        Poke.l ?include_length,nilen
0003075C <AmiBlitz3.ab3@20265>    !asm
00030766 <AmiBlitz3.ab3@20266>    MOVE.l #0,include_process
0003076C <AmiBlitz3.ab3@20267>    MOVE.l include_length,D0
00030772 <AmiBlitz3.ab3@20268>    LEA inctab,a0
00030774 <AmiBlitz3.ab3@20269>    MOVEQ #0,d1
0003077A <AmiBlitz3.ab3@20270>    MOVE.w ininclude,d1
0003077E <AmiBlitz3.ab3@20271>    ADD.l d0,0(a0,d1*4)
00030782 <AmiBlitz3.ab3@20273>   MOVEA.l $4(A2),A5
00030786 <AmiBlitz3.ab3@20275>    MOVE.l 0(a0,d1*4),d0
0003078A <AmiBlitz3.ab3@20276>   CLR.b $0(A5,D0.l)
0003078C <AmiBlitz3.ab3@20279>   MOVEA.l A5,A0
0003078E <AmiBlitz3.ab3@20282>     TST.b (A0)+
00030792 <AmiBlitz3.ab3@20283>   BNE.w JL_0_C114
00030796 <AmiBlitz3.ab3@20284>   MOVE.l A0,$E(A2)
00030798 <AmiBlitz3.ab3@20285> RTS
0003079C <AmiBlitz3.ab3@20288> include_length:        Dc.l 0                              ; for tokenizer!
000307A0 <AmiBlitz3.ab3@20289> include_base:          Dc.l 0
000307A4 <AmiBlitz3.ab3@20290> include_process:       Dc.l 0
000307A8 <AmiBlitz3.ab3@20291> include_preprocessor:  Dc.l 0
000307AC <AmiBlitz3.ab3@20295>   MOVE.l $8(A2),D1
000307B2 <AmiBlitz3.ab3@20297>   MOVEA.l _dosbase,A6
000307B6 <AmiBlitz3.ab3@20298>   JSR _Close(a6)
000307BC <AmiBlitz3.ab3@20299>   MOVEA.l _execbase,A6
000307C0 <AmiBlitz3.ab3@20300>   MOVEA.l $4(A2),A1
000307C6 <AmiBlitz3.ab3@20301>   MOVE.l #$400*8,D0                                        ;exit include
000307CA <AmiBlitz3.ab3@20303>   JSR _FreeVec(a6)
000307D0 <AmiBlitz3.ab3@20306>   MOVE.l (A2),constantbase
000307D2 <AmiBlitz3.ab3@20307>   MOVEA.l A2,A1
000307D4 <AmiBlitz3.ab3@20308>   MOVEQ.l #$00,D0
000307D8 <AmiBlitz3.ab3@20309>   MOVE.b $12(A2),D0
000307DE <AmiBlitz3.ab3@20310>   MOVEA.l _execbase,A6
000307E4 <AmiBlitz3.ab3@20311>   MOVE.l mempool2,a0
000307E8 <AmiBlitz3.ab3@20312>   JSR _FreePooled(A6)
000307EE <AmiBlitz3.ab3@20313>   JSR zero_includename
000307F4 <AmiBlitz3.ab3@20314>   SUBQ.w #1,ininclude
000307F8 <AmiBlitz3.ab3@20315>   BNE.w AJL_0_C09E
000307FE <AmiBlitz3.ab3@20318>   LEA _include,a0
00030802 <AmiBlitz3.ab3@20319>   MOVEM.l a0-a6/d0-d7,-(a7)
00030808 <AmiBlitz3.ab3@20320>   LEA ptr_parameterstore,a1
0003080A <AmiBlitz3.ab3@20323>     MOVE.b (a0)+,(a1)+
0003080E <AmiBlitz3.ab3@20324>   BNE 'l1b
00030810 <AmiBlitz3.ab3@20325>   MOVEQ #9,d2
00030816 <AmiBlitz3.ab3@20326>   JSR findlabel2
0003081A <AmiBlitz3.ab3@20327>   BNE 'd
0003081E <AmiBlitz3.ab3@20328>   CLR.l 8(a2)
00030822 <AmiBlitz3.ab3@20331>   MOVEM.l (a7)+,a0-a6/d0-d7
00030824 <AmiBlitz3.ab3@20332> RTS
0003082A <AmiBlitz3.ab3@20336>   MOVE.l unusedfunc,d0
0003082E <AmiBlitz3.ab3@20337>   BEQ 'noclear
00030832 <AmiBlitz3.ab3@20338>   MOVEM.l d0-d2/a0-a1/a6,-(a7)
00030834 <AmiBlitz3.ab3@20341>     MOVE.l d0,a1
00030838 <AmiBlitz3.ab3@20342>     MOVE.l 4(a1),d0
0003083A <AmiBlitz3.ab3@20343>     MOVE.l (a1),d2
00030840 <AmiBlitz3.ab3@20344>     MOVE.l _execbase,a6
00030844 <AmiBlitz3.ab3@20345>     JSR _FreeMem(a6)
00030846 <AmiBlitz3.ab3@20346>     MOVE.l d2,d0
0003084A <AmiBlitz3.ab3@20347>   BNE 'f1
00030850 <AmiBlitz3.ab3@20348>   CLR.l unusedfunc
00030854 <AmiBlitz3.ab3@20349>   MOVEM.l (a7)+,a0-a1/a6/d0-d2
00030856 <AmiBlitz3.ab3@20352> RTS
0003085C <AmiBlitz3.ab3@20356>   MOVEA.l xinclude_base,A2
00030862 <AmiBlitz3.ab3@20357>   CLR.l xinclude_base
00030866 <AmiBlitz3.ab3@20360>     CMPA.w #$0,A2
0003086A <AmiBlitz3.ab3@20361>      BEQ.w JL_0_C186
0003086C <AmiBlitz3.ab3@20362>     MOVEQ.l #$00,D0
00030870 <AmiBlitz3.ab3@20363>     MOVE.b 4+8(A2),D0
00030872 <AmiBlitz3.ab3@20364>     MOVEA.l A2,A1
00030874 <AmiBlitz3.ab3@20365>     MOVEA.l (A2),A2
0003087A <AmiBlitz3.ab3@20366>     MOVEA.l _execbase,A6
00030880 <AmiBlitz3.ab3@20367>     MOVE.l mempool2,a0
00030884 <AmiBlitz3.ab3@20368>     JSR _FreePooled(A6)
00030888 <AmiBlitz3.ab3@20369> BRA.w JL_0_C168
0003088A <AmiBlitz3.ab3@20372> RTS
00030890 <AmiBlitz3.ab3@20376>   MOVEA.l constantbase,A2
00030896 <AmiBlitz3.ab3@20377>   CLR.l constantbase
0003089A <AmiBlitz3.ab3@20380>     CMPA.w #$0,A2
0003089E <AmiBlitz3.ab3@20381>      BEQ.w JL_0_C1DC
000308A2 <AmiBlitz3.ab3@20382>     MOVE.l $8(A2),D1
000308A6 <AmiBlitz3.ab3@20383>      BEQ.w JL_0_C1AE
000308AC <AmiBlitz3.ab3@20384>     MOVEA.l _dosbase,A6
000308B0 <AmiBlitz3.ab3@20385>      JSR _Close(A6)
000308B4 <AmiBlitz3.ab3@20388>     MOVE.l $4(A2),D0
000308B8 <AmiBlitz3.ab3@20389>      BEQ.w JL_0_C1C6
000308BA <AmiBlitz3.ab3@20390>     MOVEA.l D0,A1
000308C0 <AmiBlitz3.ab3@20391>     MOVE.l #$400*8,D0
000308C6 <AmiBlitz3.ab3@20392>     MOVEA.l _execbase,A6
000308CC <AmiBlitz3.ab3@20393>     MOVE.l mempool,a0
000308D0 <AmiBlitz3.ab3@20394>     JSR _FreeVec(a6)
000308D2 <AmiBlitz3.ab3@20397>     MOVEQ.l #$00,D0
000308D6 <AmiBlitz3.ab3@20398>     MOVE.b $12(A2),D0
000308D8 <AmiBlitz3.ab3@20399>     MOVEA.l A2,A1
000308DA <AmiBlitz3.ab3@20400>     MOVEA.l (A2),A2
000308E0 <AmiBlitz3.ab3@20401>     MOVEA.l _execbase,A6
000308E6 <AmiBlitz3.ab3@20402>     MOVE.l mempool2,a0
000308EA <AmiBlitz3.ab3@20403>     JSR _FreePooled(A6)
000308EE <AmiBlitz3.ab3@20404> BRA.w JL_0_C194
000308F0 <AmiBlitz3.ab3@20407> RTS
000308F2 <AmiBlitz3.ab3@20411>   SWAP D0
000308F6 <AmiBlitz3.ab3@20412>    BSR.w JL_0_C1E6
000308F8 <AmiBlitz3.ab3@20413>   SWAP D0
000308FE <AmiBlitz3.ab3@20416>   MOVEA.l data2,A4
00030904 <AmiBlitz3.ab3@20417>   CMPA.l allat,A4
00030908 <AmiBlitz3.ab3@20418>    BCC.w JL_0_C200
0003090A <AmiBlitz3.ab3@20419>   MOVE.w D0,(A4)+
00030910 <AmiBlitz3.ab3@20420>   MOVE.l A4,data2
00030912 <AmiBlitz3.ab3@20421> RTS
0003091A <AmiBlitz3.ab3@20424>   MOVE.w #$FFFF,dontwrite
00030920 <AmiBlitz3.ab3@20425>   ADDQ.l #2,data2
00030922 <AmiBlitz3.ab3@20426> RTS
00030928 <AmiBlitz3.ab3@20430>   MOVEA.l data2,A4
0003092E <AmiBlitz3.ab3@20431>   CMPA.l allat,A4
00030932 <AmiBlitz3.ab3@20432>    BCC.w JL_0_C22A
00030934 <AmiBlitz3.ab3@20433>   MOVE.b D0,(A4)+
0003093A <AmiBlitz3.ab3@20434>   MOVE.l A4,data2
0003093C <AmiBlitz3.ab3@20435> RTS
00030944 <AmiBlitz3.ab3@20438>   MOVE.w #$FFFF,dontwrite
0003094A <AmiBlitz3.ab3@20439>   ADDQ.l #1,data2
0003094C <AmiBlitz3.ab3@20440> RTS
00030950 <AmiBlitz3.ab3@20444>   CMP.w #$22,D0
00030954 <AmiBlitz3.ab3@20445>    BNE.w syntaxerr
0003095A <AmiBlitz3.ab3@20449>   JSR get1bytemain
0003095E <AmiBlitz3.ab3@20450>   CMP.b #$22,D0
00030962 <AmiBlitz3.ab3@20451>    BEQ.w JL_0_C25A
00030964 <AmiBlitz3.ab3@20452>   TST.w D0
00030968 <AmiBlitz3.ab3@20453>    BEQ.w syntaxerr
0003096A <AmiBlitz3.ab3@20454>   MOVE.b D0,(A0)+
0003096E <AmiBlitz3.ab3@20455> BRA.w JL_0_C242
00030970 <AmiBlitz3.ab3@20458>   CLR.b (A0)
00030972 <AmiBlitz3.ab3@20459> RTS
00030974 <AmiBlitz3.ab3@20462>   TST.l D3
00030976 <AmiBlitz3.ab3@20463> RTS
0003097C <AmiBlitz3.ab3@20466>   LEA ptr_parameterstore,A0
00030982 <AmiBlitz3.ab3@20467>   LEA namebuff2,A1
00030984 <AmiBlitz3.ab3@20470>     MOVE.b (A0)+,D0
00030988 <AmiBlitz3.ab3@20471>     BEQ.w JL_0_C27C
0003098A <AmiBlitz3.ab3@20472>   CMP.b (A1)+,D0
0003098E <AmiBlitz3.ab3@20473>   BEQ.w JL_0_C26E
00030990 <AmiBlitz3.ab3@20474> RTS
00030992 <AmiBlitz3.ab3@20477>   TST.b (A1)
00030996 <AmiBlitz3.ab3@20478>   BNE.w JL_0_C284
00030998 <AmiBlitz3.ab3@20479> RTS
0003099C <AmiBlitz3.ab3@20482>   CMP.w #$1,D0
0003099E <AmiBlitz3.ab3@20483> RTS
000309A2 <AmiBlitz3.ab3@20487>   CMP.w #$2E,D0                                            ;dodeftype
000309A6 <AmiBlitz3.ab3@20488>    BNE.w syntaxerr
000309AA <AmiBlitz3.ab3@20489>   BSR.w getparameter2
000309B0 <AmiBlitz3.ab3@20490>   LEA newtypebase,A2
000309B4 <AmiBlitz3.ab3@20491>   BSR.w findtype
000309B8 <AmiBlitz3.ab3@20492>    BNE.w notypeerr
000309BE <AmiBlitz3.ab3@20493>   TST.b declare
000309C2 <AmiBlitz3.ab3@20494>    BNE 'l1
000309C8 <AmiBlitz3.ab3@20495>   TST.b declare2
000309CC <AmiBlitz3.ab3@20496>    BEQ 'l2
000309D4 <AmiBlitz3.ab3@20499>   MOVE.b #2,nowdeclare
000309DA <AmiBlitz3.ab3@20503>   JSR reget
000309DE <AmiBlitz3.ab3@20504>    BNE.w JL_0_C2B4
000309E4 <AmiBlitz3.ab3@20505>   MOVE.l A2,defaulttype
000309E6 <AmiBlitz3.ab3@20506> RTS
000309EC <AmiBlitz3.ab3@20509>   MOVE.l defaulttype,-(A7)
000309F2 <AmiBlitz3.ab3@20510>   MOVE.l A2,defaulttype
000309F6 <AmiBlitz3.ab3@20513>   BSR.w getparameter
000309FA <AmiBlitz3.ab3@20514>    BSR.w JL_0_8E3C
000309FE <AmiBlitz3.ab3@20515>   CMP.w #$2C,D0
00030A02 <AmiBlitz3.ab3@20516>    BNE.w JL_0_C2D8
00030A08 <AmiBlitz3.ab3@20517>    JSR get1bytemain                                        ; was BSR.w
00030A0C <AmiBlitz3.ab3@20518> BRA.w JL_0_C2C0
00030A12 <AmiBlitz3.ab3@20521>   MOVE.l (A7)+,defaulttype
00030A14 <AmiBlitz3.ab3@20522> RTS
00030A18 <AmiBlitz3.ab3@20526>   LEA $4(A5),A2                                            ;fehler function
00030A1A <AmiBlitz3.ab3@20529>   MOVE.l A2,D0
00030A1E <AmiBlitz3.ab3@20532>   BSR.w getparameter
00030A22 <AmiBlitz3.ab3@20533>   BSR.w JL_0_8E3C
00030A26 <AmiBlitz3.ab3@20534>   BSR.w calcvar
00030A2A <AmiBlitz3.ab3@20535>   CMP.b #$7,D2
00030A2E <AmiBlitz3.ab3@20536>    BNE.w mismatcherr
00030A32 <AmiBlitz3.ab3@20537>   MOVE.w varmode(PC),-(A7)
00030A36 <AmiBlitz3.ab3@20538>   CMP.w #$3D,D0
00030A3A <AmiBlitz3.ab3@20539>    BNE.w syntaxerr
00030A3E <AmiBlitz3.ab3@20540>   BTST #$F,D2
00030A42 <AmiBlitz3.ab3@20541>    BNE.w JL_0_C31C
00030A46 <AmiBlitz3.ab3@20542>   MOVE.w JL_0_C2E0(PC),D1
00030A4A <AmiBlitz3.ab3@20543>   BSR.w pokewda5s
00030A4C <AmiBlitz3.ab3@20544>   MOVE.w D3,D1
00030A50 <AmiBlitz3.ab3@20545>   BSR.w writeword
00030A54 <AmiBlitz3.ab3@20548>   MOVE.w L_0_C2E4(PC),D1
00030A58 <AmiBlitz3.ab3@20549>   BSR.w writeword
00030A5E <AmiBlitz3.ab3@20550>   ADDQ.w #1,regnum
00030A60 <AmiBlitz3.ab3@20551>   MOVEQ.l #$03,D2
00030A64 <AmiBlitz3.ab3@20552>   BSR.w eval
00030A6A <AmiBlitz3.ab3@20553>   MOVE.l #$D000,D1
00030A70 <AmiBlitz3.ab3@20554>   MOVE.l d1,lastinstruction
00030A72 <AmiBlitz3.ab3@20555>   TST.w (A7)+
00030A76 <AmiBlitz3.ab3@20556>    BEQ.w Atokejsr
00030A78 <AmiBlitz3.ab3@20557>   ADDQ.w #1,D1
00030A7C <AmiBlitz3.ab3@20558> BRA.w Atokejsr
00030A7E <AmiBlitz3.ab3@20562>   MOVE.w D0,D1
00030A82 <AmiBlitz3.ab3@20563>    BPL.w syntaxerr
00030A86 <AmiBlitz3.ab3@20564>   BCLR #$F,D1
00030A8C <AmiBlitz3.ab3@20565>    JSR searchinstr
00030A90 <AmiBlitz3.ab3@20566>   MOVE.l $12(A2),D0
00030A94 <AmiBlitz3.ab3@20567>   TST.w -$2(A2,D0.L)
00030A98 <AmiBlitz3.ab3@20568>    BEQ.w freeerr
00030A9A <AmiBlitz3.ab3@20569>   MOVEQ.l #$02,D2
00030A9C <AmiBlitz3.ab3@20570>   MOVE.l A2,-(A7)
00030AA0 <AmiBlitz3.ab3@20571>    BSR.w eval
00030AA2 <AmiBlitz3.ab3@20572>   MOVEA.l (A7)+,A2
00030AA8 <AmiBlitz3.ab3@20573>   MOVE.l A2,mymaxlib
00030AAC <AmiBlitz3.ab3@20574>   ADDA.l $12(A2),A2
00030AB2 <AmiBlitz3.ab3@20575>   TST.b debugmode
00030AB6 <AmiBlitz3.ab3@20576>    BEQ.w JL_0_C3A8
00030ABC <AmiBlitz3.ab3@20577>   MOVE.w regnum,D1
00030ABE <AmiBlitz3.ab3@20578>   LSL.w #8,D1
00030AC0 <AmiBlitz3.ab3@20579>   LSL.w #1,D1
00030AC4 <AmiBlitz3.ab3@20580>   ORI.w #$B07C,D1
00030AC8 <AmiBlitz3.ab3@20581>    BSR.w writeword
00030ACC <AmiBlitz3.ab3@20582>   MOVE.w -$4(A2),D1
00030AD0 <AmiBlitz3.ab3@20583>    BSR.w writeword
00030AD6 <AmiBlitz3.ab3@20584>   MOVE.l maxchk,D1
00030ADA <AmiBlitz3.ab3@20585>    BSR.w writelong
00030ADC <AmiBlitz3.ab3@20586>   MOVE.l A2,-(A7)
00030AE0 <AmiBlitz3.ab3@20587>   MOVE.w #$C30A,D1
00030AE4 <AmiBlitz3.ab3@20588>    BSR.w Atokejsr
00030AE6 <AmiBlitz3.ab3@20589>   MOVEA.l (A7)+,A2
00030AEA <AmiBlitz3.ab3@20592>   MOVE.w -$2(A2),D2
00030AF0 <AmiBlitz3.ab3@20595>   MOVE.w regnum,D1
00030AF6 <AmiBlitz3.ab3@20596>   OR.w lslimm,D1
00030AFA <AmiBlitz3.ab3@20597>   CMP.w #$8,D2
00030AFE <AmiBlitz3.ab3@20598>    BCS.w JL_0_C3CE
00030B02 <AmiBlitz3.ab3@20599>    BSR.w writeword
00030B04 <AmiBlitz3.ab3@20600>   SUBQ.w #8,D2
00030B08 <AmiBlitz3.ab3@20601>    BNE.w JL_0_C3AC
00030B0C <AmiBlitz3.ab3@20602> BRA.w JL_0_C3DA
00030B0E <AmiBlitz3.ab3@20605>   MOVE.w D2,D0
00030B10 <AmiBlitz3.ab3@20606>   LSL.w #8,D0
00030B12 <AmiBlitz3.ab3@20607>   LSL.w #1,D0
00030B14 <AmiBlitz3.ab3@20608>   OR.w D0,D1
00030B18 <AmiBlitz3.ab3@20609>   BSR.w writeword
00030B1A <AmiBlitz3.ab3@20612> RTS
00030B1E <AmiBlitz3.ab3@20617>   Dc.b $26,$6D,$00,$00                                     ;MOVEA.L $0000(A5),A3
00030B20 <AmiBlitz3.ab3@20618>   Dc.b $D6,$C0                                             ;ADDA.W  D0,A3
00030B24 <AmiBlitz3.ab3@20622> mymaxlib:  Ds.l 1
00030B28 <AmiBlitz3.ab3@20626>   BSR.w JL_0_C340
00030B2C <AmiBlitz3.ab3@20627>   LEA free(PC),A0
00030B30 <AmiBlitz3.ab3@20628>   LEA freef(PC),A1
00030B36 <AmiBlitz3.ab3@20629>   MOVE.w -$6(A2),$2(A0)
00030B3A <AmiBlitz3.ab3@20630>   BSR.w pokecode
00030B3E <AmiBlitz3.ab3@20631>   MOVE.l -$A(A2),D1
00030B42 <AmiBlitz3.ab3@20634>   BEQ.w nosuperr
00030B46 <AmiBlitz3.ab3@20635>   MOVEA.l mymaxlib(PC),A2
00030B4A <AmiBlitz3.ab3@20636> BRA.w Amakelibsub
00030B4E <AmiBlitz3.ab3@20641>   BSR.w JL_0_C340
00030B54 <AmiBlitz3.ab3@20642>   LEA use,A0
00030B5A <AmiBlitz3.ab3@20643>   LEA usef,A1
00030B60 <AmiBlitz3.ab3@20644>   MOVE.w -$6(A2),$2(A0)
00030B66 <AmiBlitz3.ab3@20645>   MOVE.w -$6(A2),-$2(A1)
00030B6A <AmiBlitz3.ab3@20646>   ADDQ.w #4,-$2(A1)
00030B6E <AmiBlitz3.ab3@20647>   BSR.w pokecode
00030B72 <AmiBlitz3.ab3@20648>   MOVE.l -$E(A2),D1
00030B76 <AmiBlitz3.ab3@20649> BRA.w maxjsr
00030B7C <AmiBlitz3.ab3@20653>   JSR get1bytemain
00030B82 <AmiBlitz3.ab3@20657>   MOVE.l firstiff,D0
00030B86 <AmiBlitz3.ab3@20658>    BEQ.w noiferr
00030B88 <AmiBlitz3.ab3@20659>   MOVEA.l D0,A0
00030B8E <AmiBlitz3.ab3@20660>   CMPI.b #$1,$D(A0)
00030B92 <AmiBlitz3.ab3@20661>    BEQ.w illelseerr
00030B96 <AmiBlitz3.ab3@20662>   MOVE.w #$6000,D1
00030B9C <AmiBlitz3.ab3@20664>     TST.b fast
00030BA0 <AmiBlitz3.ab3@20665>     BEQ 'l1
00030BA6 <AmiBlitz3.ab3@20666>     OR.l #$ff,d1
00030BAA <AmiBlitz3.ab3@20667>     BSR writeword
00030BAC <AmiBlitz3.ab3@20671>   SWAP D1
00030BB0 <AmiBlitz3.ab3@20672>   BSR.w writelong
00030BB2 <AmiBlitz3.ab3@20673>   MOVEQ.l #$00,D1
00030BB6 <AmiBlitz3.ab3@20674>   BSR.w AJL_0_D7B8
00030BBE <AmiBlitz3.ab3@20675>   MOVE.l destpointer,$8(A0)
00030BC2 <AmiBlitz3.ab3@20676> BRA.w do_then
00030BC8 <AmiBlitz3.ab3@20680>   LEA ptr_parameterstore,A0
00030BCA <AmiBlitz3.ab3@20681>   MOVE.l A0,-(A7)
00030BCE <AmiBlitz3.ab3@20682>   BSR.w JL_0_C23A
00030BD2 <AmiBlitz3.ab3@20683> BRA.w handle_compileerror
00030BD6 <AmiBlitz3.ab3@20687>   BSR.w JL_0_BF6A
00030BD8 <AmiBlitz3.ab3@20688>   MOVEQ.l #$05,D1
00030BE2 <AmiBlitz3.ab3@20690>   MOVE.w oldqflag,instringon
00030BE8 <AmiBlitz3.ab3@20691>   MOVEA.l lastsourcepos,A5
00030BEE <AmiBlitz3.ab3@20692>   LEA AJL_0_C25E,A0
00030BF2 <AmiBlitz3.ab3@20693> BRA.w JL_0_C4B4
00030BF8 <AmiBlitz3.ab3@20697>   LEA ptr_parameterstore,A0
00030BFC <AmiBlitz3.ab3@20698>   BSR.w JL_0_C23A
00030C02 <AmiBlitz3.ab3@20699>   JSR get1bytemain
00030C06 <AmiBlitz3.ab3@20700>   BSR.w JL_0_CCA8
00030C0C <AmiBlitz3.ab3@20701>   LEA namebuff2,A0
00030C10 <AmiBlitz3.ab3@20702>   BSR.w JL_0_C23A
00030C16 <AmiBlitz3.ab3@20703>   LEA AJL_0_C262,A0
00030C18 <AmiBlitz3.ab3@20706>   LSL.w #2,D1
00030C1E <AmiBlitz3.ab3@20707>   LEA CIF_branches,A1
00030C22 <AmiBlitz3.ab3@20708>   MOVE.l $0(A1,D1.W),-(A7)
00030C24 <AmiBlitz3.ab3@20709>   MOVEQ.l #-$01,D1
00030C26 <AmiBlitz3.ab3@20712>   JSR (A0)
00030C28 <AmiBlitz3.ab3@20714>   MOVEA.l (A7)+,A1
00030C2A <AmiBlitz3.ab3@20716> JMP (A1)
00030C2E <AmiBlitz3.ab3@20720>   BEQ.w JL_0_C4F6
00030C32 <AmiBlitz3.ab3@20721> BRA.w JL_0_C4F4
00030C36 <AmiBlitz3.ab3@20725>   BNE.w JL_0_C4F6
00030C3A <AmiBlitz3.ab3@20726> BRA.w JL_0_C4F4
00030C3E <AmiBlitz3.ab3@20730>   BLT.w JL_0_C4F6
00030C42 <AmiBlitz3.ab3@20731> BRA.w JL_0_C4F4
00030C46 <AmiBlitz3.ab3@20735>   BLE.w JL_0_C4F6
00030C4A <AmiBlitz3.ab3@20736> BRA.w JL_0_C4F4
00030C4E <AmiBlitz3.ab3@20740>   BGT.w JL_0_C4F6
00030C52 <AmiBlitz3.ab3@20741> BRA.w JL_0_C4F4
00030C56 <AmiBlitz3.ab3@20745>   BGE.w JL_0_C4F6
00030C58 <AmiBlitz3.ab3@20748>   MOVEQ.l #$00,D1
00030C5E <AmiBlitz3.ab3@20751>   MOVEA.l concomsp,A0
00030C64 <AmiBlitz3.ab3@20752>   MOVE.w skipcode,(A0)+
00030C6A <AmiBlitz3.ab3@20753>   MOVE.l A0,concomsp
00030C70 <AmiBlitz3.ab3@20754>   MOVE.w D1,skipcode
00030C76 <AmiBlitz3.ab3@20755>   JSR get1bytemain
00030C7A <AmiBlitz3.ab3@20756>    BNE.w syntaxerr
00030C80 <AmiBlitz3.ab3@20757> JMP bakup
00030C88 <AmiBlitz3.ab3@20761> rescode:   Dc.b $2B,$7c,$00,$00,$00,$00 :   Ds.w 1         ;MOVE.L  #$00000000,$0000(A5)
00030C8C <AmiBlitz3.ab3@20762> rescode2:  Dc.b $2B,$40                 :   Ds.w 1         ;MOVE.L  D0,$0000(A5)
00030C90 <AmiBlitz3.ab3@20769>   MOVE.w #$FC17,D1
00030C96 <AmiBlitz3.ab3@20770>   JSR uselib
00030C9C <AmiBlitz3.ab3@20772>   JSR reget
00030CA0 <AmiBlitz3.ab3@20773>    BEQ.w do_Restore__resbeg
00030CA4 <AmiBlitz3.ab3@20774>   BSR.w JL_0_AE22                                          ;get label name!
00030CA8 <AmiBlitz3.ab3@20775>   MOVE.w rescode(PC),D1
00030CAC <AmiBlitz3.ab3@20776>   BSR.w writeword
00030CB2 <AmiBlitz3.ab3@20777>   JSR addoff                                               ;add offset
00030CB6 <AmiBlitz3.ab3@20778>   MOVE.l $C(A2),D1
00030CBA <AmiBlitz3.ab3@20779>   BSR.w writelong
00030CBE <AmiBlitz3.ab3@20780>   MOVE.w rescode+6(PC),D1
00030CC2 <AmiBlitz3.ab3@20781>   BSR.w writeword
00030CC6 <AmiBlitz3.ab3@20782>   MOVE.l $4(A2),D1                                         ;is it outstanding?
00030CCA <AmiBlitz3.ab3@20783>   BEQ.w do_Restore__no
00030CCC <AmiBlitz3.ab3@20785>   MOVEA.l D1,A1
00030CD0 <AmiBlitz3.ab3@20786>   ADDQ.l #1,$4(A1)                                         ;make odd - flag for data reference.
00030CD2 <AmiBlitz3.ab3@20787> RTS
00030CD4 <AmiBlitz3.ab3@20792> RTS
00030CD8 <AmiBlitz3.ab3@20795>   MOVE.w #$CD00,D1
00030CDE <AmiBlitz3.ab3@20796>   JSR Atokejsr
00030CE2 <AmiBlitz3.ab3@20797>   MOVE.l rescode2(PC),D1
00030CE8 <AmiBlitz3.ab3@20798> JMP writelong
00030CEC <AmiBlitz3.ab3@20802>   MOVE.w #$FC17,D1
00030CF2 <AmiBlitz3.ab3@20803>   JSR uselib
00030CF8 <AmiBlitz3.ab3@20806>   MOVE.l dataget,D1
00030CFC <AmiBlitz3.ab3@20807>   BSR.w writelong
00030D00 <AmiBlitz3.ab3@20808>   BSR.w getparameter
00030D04 <AmiBlitz3.ab3@20809>   BSR.w JL_0_8E3C
00030D08 <AmiBlitz3.ab3@20810>   BSR.w calcvar
00030D0C <AmiBlitz3.ab3@20811>   BTST #$E,D2
00030D10 <AmiBlitz3.ab3@20812>    BEQ.w JL_0_C5A6
00030D14 <AmiBlitz3.ab3@20813>   MOVE.b #$6,D2
00030D16 <AmiBlitz3.ab3@20816>   TST.b D2
00030D1A <AmiBlitz3.ab3@20817>    BEQ.w noleterr
00030D20 <AmiBlitz3.ab3@20818>   TST.b debugmode
00030D24 <AmiBlitz3.ab3@20819>    BEQ.w JL_0_C5D0
00030D28 <AmiBlitz3.ab3@20820>   MOVE.w #$7000,D1
00030D2A <AmiBlitz3.ab3@20821>   MOVE.b D2,D1
00030D2E <AmiBlitz3.ab3@20822>   ANDI.b #$F,D1
00030D32 <AmiBlitz3.ab3@20823>   BSR.w writeword
00030D36 <AmiBlitz3.ab3@20824>   MOVE.w #$C310,D1
00030D38 <AmiBlitz3.ab3@20825>   MOVE.w D2,-(A7)
00030D3C <AmiBlitz3.ab3@20826>   BSR.w Atokejsr
00030D3E <AmiBlitz3.ab3@20827>   MOVE.w (A7)+,D2
00030D42 <AmiBlitz3.ab3@20830>   CMP.b #$7,D2
00030D46 <AmiBlitz3.ab3@20831>    BEQ.w JL_0_C684
00030D4A <AmiBlitz3.ab3@20832>   CMP.b #$1,D2
00030D4E <AmiBlitz3.ab3@20833>    BNE.w JL_0_C62A
00030D54 <AmiBlitz3.ab3@20834>   LEA dataletb2,A0
00030D5A <AmiBlitz3.ab3@20835>   LEA dataletb2f,A1
00030D5E <AmiBlitz3.ab3@20836>   BTST #$F,D2
00030D62 <AmiBlitz3.ab3@20837>    BEQ.w JL_0_C5FC
00030D66 <AmiBlitz3.ab3@20838>   BSR.w pokecode
00030D6A <AmiBlitz3.ab3@20839> BRA.w JL_0_C668
00030D70 <AmiBlitz3.ab3@20842>   LEA dataletb,A0
00030D76 <AmiBlitz3.ab3@20843>   LEA dataletbf,A1
00030D7C <AmiBlitz3.ab3@20844>   TST.w varmode
00030D80 <AmiBlitz3.ab3@20845>    BEQ.w JL_0_C61E
00030D86 <AmiBlitz3.ab3@20846>   LEA dataletbl,A0
00030D8C <AmiBlitz3.ab3@20847>   LEA dataletblf,A1
00030D90 <AmiBlitz3.ab3@20850>   MOVE.w D3,$4(A0)
00030D94 <AmiBlitz3.ab3@20851>   BSR.w pokecode
00030D98 <AmiBlitz3.ab3@20852> BRA.w JL_0_C668
00030D9E <AmiBlitz3.ab3@20855>   LEA dataletw,A0
00030DA2 <AmiBlitz3.ab3@20856>   CMP.b #$3,D2
00030DA6 <AmiBlitz3.ab3@20857>    BCS.w JL_0_C63E
00030DAC <AmiBlitz3.ab3@20858>   LEA dataletl,A0
00030DB0 <AmiBlitz3.ab3@20861>   BTST #$F,D2
00030DB4 <AmiBlitz3.ab3@20862>    BEQ.w JL_0_C652
00030DB8 <AmiBlitz3.ab3@20863>   MOVE.w $4(A0),D1
00030DBC <AmiBlitz3.ab3@20864>    BSR.w writeword
00030DC0 <AmiBlitz3.ab3@20865> BRA.w JL_0_C668
00030DC6 <AmiBlitz3.ab3@20868>   TST.w varmode
00030DCA <AmiBlitz3.ab3@20869>    BEQ.w JL_0_C65E
00030DCC <AmiBlitz3.ab3@20870>   ADDQ.w #6,A0
00030DD0 <AmiBlitz3.ab3@20873>   MOVE.w D3,$2(A0)
00030DD2 <AmiBlitz3.ab3@20874>   MOVE.l (A0),D1
00030DD6 <AmiBlitz3.ab3@20875>   BSR.w writelong
00030DDC <AmiBlitz3.ab3@20878>   MOVE.l dataput,D1
00030DE0 <AmiBlitz3.ab3@20879>    BSR.w writelong
00030DE4 <AmiBlitz3.ab3@20880>   CMP.w #$2C,D0
00030DE8 <AmiBlitz3.ab3@20881>    BEQ.w JL_0_C67C
00030DEA <AmiBlitz3.ab3@20882> RTS
00030DF0 <AmiBlitz3.ab3@20885>   JSR get1bytemain
00030DF4 <AmiBlitz3.ab3@20886> BRA.w JL_0_C584
00030DFA <AmiBlitz3.ab3@20890>   MOVE.w stlenget,D1
00030DFE <AmiBlitz3.ab3@20891>    BSR.w writeword
00030E02 <AmiBlitz3.ab3@20892>   BTST #$F,D2
00030E06 <AmiBlitz3.ab3@20893>    BNE.w JL_0_C6C0
00030E0C <AmiBlitz3.ab3@20894>   TST.w varmode
00030E10 <AmiBlitz3.ab3@20895>    BEQ.w JL_0_C6B0
00030E16 <AmiBlitz3.ab3@20896>   MOVE.w D3,leaampl+2
00030E1C <AmiBlitz3.ab3@20897>   MOVE.l leaampl,D1
00030E20 <AmiBlitz3.ab3@20898> BRA.w JL_0_C6BC
00030E26 <AmiBlitz3.ab3@20901>   MOVE.w D3,leaamp+2
00030E2C <AmiBlitz3.ab3@20902>   MOVE.l leaamp,D1
00030E30 <AmiBlitz3.ab3@20905>   BSR.w writelong
00030E34 <AmiBlitz3.ab3@20908>   MOVE.w #$C701,D1
00030E3A <AmiBlitz3.ab3@20909>   MOVE.w varmode,D2
00030E3E <AmiBlitz3.ab3@20910>    BEQ.w JL_0_C6D0
00030E40 <AmiBlitz3.ab3@20911>   SUBQ.w #1,D1
00030E44 <AmiBlitz3.ab3@20914>   BSR.w Atokejsr
00030E4C <AmiBlitz3.ab3@20915>   MOVE.w #$FFFF,lasta6
00030E52 <AmiBlitz3.ab3@20916>   LEA stalign,A0
00030E58 <AmiBlitz3.ab3@20917>   LEA stalignf,A1
00030E5C <AmiBlitz3.ab3@20918>   BSR.w pokecode
00030E60 <AmiBlitz3.ab3@20919> BRA.w JL_0_C668
00030E64 <AmiBlitz3.ab3@20923>   CMP.w #$2E,D0                                            ;definecode 'lb 'lw 'll
00030E68 <AmiBlitz3.ab3@20924>    BNE.w JL_0_C720
00030E6E <AmiBlitz3.ab3@20925>   JSR get1bytemain
00030E72 <AmiBlitz3.ab3@20926>   CMP.w #$77,D0
00030E76 <AmiBlitz3.ab3@20927>    BEQ.w JL_0_C71C
00030E7A <AmiBlitz3.ab3@20928>   CMP.w #$62,D0
00030E7E <AmiBlitz3.ab3@20929>    BEQ.w JL_0_C718
00030E82 <AmiBlitz3.ab3@20930>   CMP.w #"s",d0
00030E86 <AmiBlitz3.ab3@20931>   BEQ single3
00030E8A <AmiBlitz3.ab3@20932>   CMP.w #"d",d0
00030E8E <AmiBlitz3.ab3@20933>   BEQ double3
00030E92 <AmiBlitz3.ab3@20934>   CMP.w #$6C,D0
00030E96 <AmiBlitz3.ab3@20935>    BNE.w syntaxerr
00030E98 <AmiBlitz3.ab3@20936>   MOVEQ.l #$02,D1
00030E9A <AmiBlitz3.ab3@20937> RTS
00030EA2 <AmiBlitz3.ab3@20941>   MOVE.b #1,iee
00030EA4 <AmiBlitz3.ab3@20942>   MOVEQ.l #$3,d1
00030EA6 <AmiBlitz3.ab3@20943> RTS
00030EAE <AmiBlitz3.ab3@20947>   MOVE.b #1,iee
00030EB0 <AmiBlitz3.ab3@20948>   MOVEQ.l #$4,d1
00030EB2 <AmiBlitz3.ab3@20949> RTS
00030EB4 <AmiBlitz3.ab3@20953>   MOVEQ.l #$00,D1
00030EB6 <AmiBlitz3.ab3@20954> RTS
00030EB8 <AmiBlitz3.ab3@20958>   MOVEQ.l #$01,D1
00030EBA <AmiBlitz3.ab3@20959> RTS
00030EBC <AmiBlitz3.ab3@20963>   MOVEQ.l #$01,D1
00030EC2 <AmiBlitz3.ab3@20964> JMP bakup
00030EC6 <AmiBlitz3.ab3@20968>   BSR.w JL_0_C6F0
00030EC8 <AmiBlitz3.ab3@20970>   MOVE.w D1,-(A7)
00030ECC <AmiBlitz3.ab3@20971>    BSR.w AJL_0_BF6E
00030ED0 <AmiBlitz3.ab3@20972>   CMP.w #$2C,D0
00030ED4 <AmiBlitz3.ab3@20973>    BNE.w syntaxerr
00030ED6 <AmiBlitz3.ab3@20974>   MOVE.l D3,-(A7)
00030EDA <AmiBlitz3.ab3@20975>    BSR.w AJL_0_BF6E
00030EDC <AmiBlitz3.ab3@20976>   MOVE.l D3,D1
00030EDE <AmiBlitz3.ab3@20977>   MOVE.l (A7)+,D3
00030EE0 <AmiBlitz3.ab3@20978>   MOVE.w (A7)+,D2
00030EE4 <AmiBlitz3.ab3@20979>    BEQ.w JL_0_C774
00030EE8 <AmiBlitz3.ab3@20983>   CMP.w #$1,D2
00030EEC <AmiBlitz3.ab3@20984>    BEQ.w JL_0_C768
00030EEE <AmiBlitz3.ab3@20987>   SWAP D1
00030EF2 <AmiBlitz3.ab3@20988>    BSR.w writeword
00030EF4 <AmiBlitz3.ab3@20989>   SWAP D1
00030EF8 <AmiBlitz3.ab3@20990>    BSR.w writeword
00030EFA <AmiBlitz3.ab3@20991>   SUBQ.l #1,D3
00030EFE <AmiBlitz3.ab3@20992>    BNE.w JL_0_C754
00030F00 <AmiBlitz3.ab3@20993> RTS
00030F04 <AmiBlitz3.ab3@20996>    BSR.w writeword
00030F06 <AmiBlitz3.ab3@20997>   SUBQ.l #1,D3
00030F0A <AmiBlitz3.ab3@20998>    BNE.w JL_0_C768
00030F0C <AmiBlitz3.ab3@20999> RTS
00030F10 <AmiBlitz3.ab3@21002>    BSR.w writebyte
00030F12 <AmiBlitz3.ab3@21003>   SUBQ.l #1,D3
00030F16 <AmiBlitz3.ab3@21004>    BNE.w JL_0_C774
00030F18 <AmiBlitz3.ab3@21005> RTS
00030F1C <AmiBlitz3.ab3@21009>   BSR.w JL_0_C6F0                                          ;definestorage
00030F1E <AmiBlitz3.ab3@21010>   MOVE.w D1,-(A7)
00030F22 <AmiBlitz3.ab3@21011>   BSR.w AJL_0_BF6E
00030F24 <AmiBlitz3.ab3@21012>   MOVE.w (A7)+,D1
00030F26 <AmiBlitz3.ab3@21013>   LSL.l D1,D3
00030F28 <AmiBlitz3.ab3@21014>   MOVE.l d3,d0
00030F2C <AmiBlitz3.ab3@21015>   BEQ 'll5
00030F2E <AmiBlitz3.ab3@21016>   MOVEQ #0,d1
00030F34 <AmiBlitz3.ab3@21019>     JSR writebyte
00030F36 <AmiBlitz3.ab3@21020>     SUBQ.l #1,d3
00030F3A <AmiBlitz3.ab3@21021>   BNE.s 'll10
00030F3C <AmiBlitz3.ab3@21024> RTS
00030F3E <AmiBlitz3.ab3@21028>   MOVE.w D0,-(A7)
00030F44 <AmiBlitz3.ab3@21029>   LEA dummyasm,A0
00030F4A <AmiBlitz3.ab3@21030>   MOVEA.l destpointer,A1
00030F54 <AmiBlitz3.ab3@21031>   MOVE.w asmlen2,asmlen
00030F5A <AmiBlitz3.ab3@21032>   JSR insasm
00030F5C <AmiBlitz3.ab3@21033>   MOVE.w (A7)+,D0
00030F5E <AmiBlitz3.ab3@21034> RTS
00030F62 <AmiBlitz3.ab3@21038>   BSR.w JL_0_C6F0
00030F6C <AmiBlitz3.ab3@21040>   MOVE.l #ptr_parameterstore,asmbuff
00030F6E <AmiBlitz3.ab3@21041>   TST.w D1
00030F72 <AmiBlitz3.ab3@21042>    BEQ.w JL_0_C7EE
00030F76 <AmiBlitz3.ab3@21043>   CMP.w #$1,D1
00030F7A <AmiBlitz3.ab3@21044>    BEQ.w JL_0_C844
00030F7E <AmiBlitz3.ab3@21045>   CMP.w #$2,d1
00030F82 <AmiBlitz3.ab3@21046>    BEQ long
00030F86 <AmiBlitz3.ab3@21047>   CMP.w #$3,d1
00030F8A <AmiBlitz3.ab3@21048>    BEQ single
00030F8C <AmiBlitz3.ab3@21049>    MOVEQ.l #$0d,D3
00030F92 <AmiBlitz3.ab3@21055>    JSR asmconst
00030F96 <AmiBlitz3.ab3@21056>    BSR.w JL_0_C796
00030F9A <AmiBlitz3.ab3@21057>    BSR.w writelong
00030F9E <AmiBlitz3.ab3@21058>    BSR   writelong
00030FA2 <AmiBlitz3.ab3@21059>   CMP.w #$2C,D0
00030FA6 <AmiBlitz3.ab3@21060>    BEQ.w JL_0_C7D8b
00030FA8 <AmiBlitz3.ab3@21061> RTS
00030FAA <AmiBlitz3.ab3@21065>   MOVEQ.l #$0B,D3
00030FB2 <AmiBlitz3.ab3@21069>   MOVE.b #1,_dcb
00030FB8 <AmiBlitz3.ab3@21072>   JSR asmconst
00030FBE <AmiBlitz3.ab3@21073>   CLR.b _dcb
00030FC2 <AmiBlitz3.ab3@21074>   BSR.w JL_0_C796
00030FC6 <AmiBlitz3.ab3@21075>   BSR writebyte
00030FCA <AmiBlitz3.ab3@21076>   BSR writebyte
00030FCE <AmiBlitz3.ab3@21077>   BSR writebyte                                            ;long
00030FD2 <AmiBlitz3.ab3@21078>   BSR writebyte
00030FD6 <AmiBlitz3.ab3@21079>   CMP.w #$2C,D0
00030FDA <AmiBlitz3.ab3@21080>    BEQ.w JL_0_C7D8
00030FDC <AmiBlitz3.ab3@21081> RTS
00030FDE <AmiBlitz3.ab3@21085>   MOVEQ.l #$0c,D3
00030FE6 <AmiBlitz3.ab3@21089>   MOVE.b #1,_dcb
00030FEC <AmiBlitz3.ab3@21092>   JSR asmconst
00030FF2 <AmiBlitz3.ab3@21093>   CLR.b _dcb
00030FF6 <AmiBlitz3.ab3@21094>   BSR.w JL_0_C796
00030FFA <AmiBlitz3.ab3@21095>   BSR.w writebyte
00030FFE <AmiBlitz3.ab3@21096>   BSR.w writebyte
00031002 <AmiBlitz3.ab3@21097>   BSR.w writebyte
00031006 <AmiBlitz3.ab3@21098>   BSR.w writebyte
0003100A <AmiBlitz3.ab3@21099>   CMP.w #$2C,D0
0003100E <AmiBlitz3.ab3@21100>    BEQ.w JL_0_C7D8a
00031010 <AmiBlitz3.ab3@21101> RTS
00031012 <AmiBlitz3.ab3@21106>   MOVEQ.l #$11,D3
00031018 <AmiBlitz3.ab3@21109>   JSR get1bytemain
0003101C <AmiBlitz3.ab3@21110>   CMP.w #$22,D0
00031020 <AmiBlitz3.ab3@21111>    BNE.w JL_0_C81E
00031022 <AmiBlitz3.ab3@21114>   MOVE.b (a5)+,d0                                          ;bsr.w get1bytemain ascii dc.b
00031026 <AmiBlitz3.ab3@21115>    BEQ.w syntaxerr
0003102A <AmiBlitz3.ab3@21116>   CMP.w #$22,D0
0003102E <AmiBlitz3.ab3@21117>    BEQ.w JL_0_C816
00031032 <AmiBlitz3.ab3@21118>   CMP.b #"\",d0
00031036 <AmiBlitz3.ab3@21119>    BNE 'n1
0003103A <AmiBlitz3.ab3@21120>   CMP.b #"\",(a5)
0003103E <AmiBlitz3.ab3@21121>    BEQ 'do1
00031040 <AmiBlitz3.ab3@21124>   MOVE.w D0,D1
00031044 <AmiBlitz3.ab3@21125>   BSR.w writebyte
00031048 <AmiBlitz3.ab3@21126> BRA.w JL_0_C7FC
00031050 <AmiBlitz3.ab3@21129>   CMP.l #"__DA",1(a5)
00031054 <AmiBlitz3.ab3@21130>    BNE 'nodate1
0003105C <AmiBlitz3.ab3@21131>   CMP.l #"TE__",5(a5)
00031060 <AmiBlitz3.ab3@21132>    BEQ 'c1
00031068 <AmiBlitz3.ab3@21133>   CMP.l #"TE_G",5(a5)
0003106C <AmiBlitz3.ab3@21134>    BNE 'nodate1
00031074 <AmiBlitz3.ab3@21135>   CMP.l #"ER__",9(a5)
00031078 <AmiBlitz3.ab3@21136>    BNE 'nodate1
0003107E <AmiBlitz3.ab3@21137>   JSR compiledatedc_ger
00031082 <AmiBlitz3.ab3@21138> BRA 'n1
00031088 <AmiBlitz3.ab3@21141>   JSR compiledatedc
0003108C <AmiBlitz3.ab3@21142> BRA 'n1
00031094 <AmiBlitz3.ab3@21145>   CMP.l #"__VE",1(a5)
00031098 <AmiBlitz3.ab3@21146>    BNE 'n1
0003109E <AmiBlitz3.ab3@21147>   CMP.w #"R_",5(a5)
000310A2 <AmiBlitz3.ab3@21148>    BNE 'n1
000310A8 <AmiBlitz3.ab3@21149>   JSR version_string_dc
000310AC <AmiBlitz3.ab3@21150> BRA.w JL_0_C7FC
000310B2 <AmiBlitz3.ab3@21154>   CLR.w instringon
000310B8 <AmiBlitz3.ab3@21155>   JSR get1bytemain
000310BC <AmiBlitz3.ab3@21156> BRA.w JL_0_C83A
000310C6 <AmiBlitz3.ab3@21161>    MOVE.w oldqflag,instringon
000310CC <AmiBlitz3.ab3@21162>   MOVEA.l lastsourcepos,A5
000310D2 <AmiBlitz3.ab3@21163>    JSR asmconst
000310D8 <AmiBlitz3.ab3@21164>   SUBQ.l #1,destpointer
000310DC <AmiBlitz3.ab3@21165>    BSR.w JL_0_C796
000310E2 <AmiBlitz3.ab3@21166>   ADDQ.l #1,destpointer
000310E6 <AmiBlitz3.ab3@21167>    BSR.w writebyte
000310EA <AmiBlitz3.ab3@21170>   CMP.w #$2C,D0
000310EE <AmiBlitz3.ab3@21171>    BEQ.w JL_0_C7F0
000310F0 <AmiBlitz3.ab3@21172> RTS
000310F2 <AmiBlitz3.ab3@21176>   MOVEQ.l #$10,D3
000310FA <AmiBlitz3.ab3@21182>   MOVE.b #1,_dcb
00031100 <AmiBlitz3.ab3@21183>   JSR asmconst
00031106 <AmiBlitz3.ab3@21184>   CLR.b _dcb
0003110A <AmiBlitz3.ab3@21185>   BSR.w JL_0_C796
0003110E <AmiBlitz3.ab3@21186>   BSR.w writebyte
00031112 <AmiBlitz3.ab3@21187>   BSR.w writebyte
00031116 <AmiBlitz3.ab3@21188>   CMP.w #$2C,D0
0003111A <AmiBlitz3.ab3@21189>    BEQ.w JL_0_C84A
0003111C <AmiBlitz3.ab3@21190> RTS
00031122 <AmiBlitz3.ab3@21194>   ADDQ.l #3,destpointer
0003112A <AmiBlitz3.ab3@21195>   ANDI.w #$FFFC,destpointer+2
0003112C <AmiBlitz3.ab3@21196> RTS
00031132 <AmiBlitz3.ab3@21200>   ADDQ.l #7,destpointer
0003113A <AmiBlitz3.ab3@21201>   ANDI.w #$FFF8,destpointer+2
0003113C <AmiBlitz3.ab3@21202> RTS
00031142 <AmiBlitz3.ab3@21206>   ADDQ.l #1,destpointer                                    ;even
0003114A <AmiBlitz3.ab3@21207>   BCLR #$0,destpointer+3
0003114C <AmiBlitz3.ab3@21208> RTS
0003114E <AmiBlitz3.ab3@21211> datasize: Ds.w 1
00031154 <AmiBlitz3.ab3@21221>   TST.b debugmode
00031158 <AmiBlitz3.ab3@21222>   BEQ.w pdt__skip
0003115C <AmiBlitz3.ab3@21223>   MOVE.w #$4420,D0                                         ;'D '
00031160 <AmiBlitz3.ab3@21224>   MOVE.b datasize+1(PC),D0
00031164 <AmiBlitz3.ab3@21225> BRA.w JL_0_C1E6
00031166 <AmiBlitz3.ab3@21228> RTS
0003116A <AmiBlitz3.ab3@21232>   MOVE.w #$FC17,D1
00031170 <AmiBlitz3.ab3@21233>    JSR uselib
0003117A <AmiBlitz3.ab3@21235>    MOVE.w oldqflag,instringon
00031180 <AmiBlitz3.ab3@21236>   MOVEA.l lastsourcepos,A5
00031186 <AmiBlitz3.ab3@21237>    JSR AJL_0_498A
0003118C <AmiBlitz3.ab3@21238>   MOVE.w D1,datasize
00031190 <AmiBlitz3.ab3@21239>   CMP.w #$7,D1
00031194 <AmiBlitz3.ab3@21240>    BEQ.w JL_0_C944
00031196 <AmiBlitz3.ab3@21241>   MOVE.w D1,-(A7)
0003119A <AmiBlitz3.ab3@21244>   BSR.w pdt
0003119C <AmiBlitz3.ab3@21245>   MOVE.w (A7),D2
000311A0 <AmiBlitz3.ab3@21246>    BSR.w JL_0_B1D8
000311A2 <AmiBlitz3.ab3@21247>   CMP.w (A7),D2                                            ;datamode
000311A6 <AmiBlitz3.ab3@21248>    BEQ.w JL_0_C920
000311A8 <AmiBlitz3.ab3@21249>   MOVE.w D2,D1
000311AA <AmiBlitz3.ab3@21250>   MOVE.w (A7),D2
000311AE <AmiBlitz3.ab3@21251>   CMP.w #$2,D2
000311B2 <AmiBlitz3.ab3@21252>    BNE.w JL_0_C8FE
000311B6 <AmiBlitz3.ab3@21253>   CMP.w #$3,D1
000311BA <AmiBlitz3.ab3@21254>    BNE.w baddaterr
000311C0 <AmiBlitz3.ab3@21255>   CMP.l #$10000,D3
000311C4 <AmiBlitz3.ab3@21256>    BCC.w baddaterr
000311C8 <AmiBlitz3.ab3@21257> BRA.w JL_0_C920
000311CC <AmiBlitz3.ab3@21260>   CMP.w #$1,D2
000311D0 <AmiBlitz3.ab3@21261>    BNE.w JL_0_C91C
000311D4 <AmiBlitz3.ab3@21262>   CMP.w #$2,D1
000311D8 <AmiBlitz3.ab3@21263>    BNE.w baddaterr
000311DE <AmiBlitz3.ab3@21264>   CMP.l #$100,D3
000311E2 <AmiBlitz3.ab3@21265>    BCC.w baddaterr
000311E6 <AmiBlitz3.ab3@21266> BRA.w JL_0_C920
000311EA <AmiBlitz3.ab3@21269> BRA.w baddaterr
000311EE <AmiBlitz3.ab3@21272>   CMP.w #$3,D2
000311F2 <AmiBlitz3.ab3@21273>   BCC.w JL_0_C930
000311F6 <AmiBlitz3.ab3@21274>   BSR.w JL_0_C1E6
000311FA <AmiBlitz3.ab3@21275> BRA.w JL_0_C934
00031200 <AmiBlitz3.ab3@21278>   TST.b iee
00031204 <AmiBlitz3.ab3@21279>   BEQ 'old
00031208 <AmiBlitz3.ab3@21280>   CMP.b #5,d2
0003120C <AmiBlitz3.ab3@21281>   BNE 'old
00031210 <AmiBlitz3.ab3@21282>   Dc.l $f2006400                                           ;  fpu data write fmove.s fp0,d0
00031214 <AmiBlitz3.ab3@21286>   BSR.w JL_0_C1DE                                          ;write data >3
0003121A <AmiBlitz3.ab3@21289>   JSR reget
0003121E <AmiBlitz3.ab3@21290>   CMP.w #$2C,D0
00031222 <AmiBlitz3.ab3@21291>    BEQ.w JL_0_C8CC
00031224 <AmiBlitz3.ab3@21292>   ADDQ.w #2,A7
00031226 <AmiBlitz3.ab3@21293> RTS
0003122A <AmiBlitz3.ab3@21296>    BSR.w pdt
00031230 <AmiBlitz3.ab3@21297>   MOVE.l data2,-(A7)
00031234 <AmiBlitz3.ab3@21298>    BSR.w JL_0_C1DE
00031236 <AmiBlitz3.ab3@21299>   MOVEQ.l #$00,D1
0003123C <AmiBlitz3.ab3@21300>    JSR get1bytemain
00031240 <AmiBlitz3.ab3@21301>    BEQ.w JL_0_C9A6
00031244 <AmiBlitz3.ab3@21302>   CMP.w #$22,D0
00031248 <AmiBlitz3.ab3@21303>    BEQ.w JL_0_C988
0003124C <AmiBlitz3.ab3@21304>   CMP.w #$2C,D0
00031250 <AmiBlitz3.ab3@21305>    BEQ.w JL_0_C9A6
00031254 <AmiBlitz3.ab3@21308>    BSR.w JL_0_C210
00031256 <AmiBlitz3.ab3@21309>   ADDQ.w #1,D1
0003125C <AmiBlitz3.ab3@21310>    JSR getchar
0003125E <AmiBlitz3.ab3@21311>   TST.w D0
00031262 <AmiBlitz3.ab3@21312>    BEQ.w JL_0_C9A6
00031266 <AmiBlitz3.ab3@21313>   CMP.w #$2C,D0
0003126A <AmiBlitz3.ab3@21314>    BEQ.w JL_0_C9A6
0003126E <AmiBlitz3.ab3@21315> BRA.w JL_0_C96C
00031270 <AmiBlitz3.ab3@21319>    MOVEQ #0,d0
00031272 <AmiBlitz3.ab3@21320>    MOVE.b (a5)+,d0
00031276 <AmiBlitz3.ab3@21321>    BEQ.w notqerr2
0003127A <AmiBlitz3.ab3@21322>   CMP.w #$22,D0
0003127E <AmiBlitz3.ab3@21323>    BEQ.w JL_0_C9A2
00031282 <AmiBlitz3.ab3@21324>    BSR.w JL_0_C210
00031284 <AmiBlitz3.ab3@21325>   ADDQ.w #1,D1
00031288 <AmiBlitz3.ab3@21326> BRA.w JL_0_C988
0003128E <AmiBlitz3.ab3@21327> notqerr2 JMP notqerr
00031294 <AmiBlitz3.ab3@21329>   CLR.w instringon
0003129A <AmiBlitz3.ab3@21330>   JSR get1bytemain
0003129C <AmiBlitz3.ab3@21333>   MOVEA.l (A7)+,A0
000312A2 <AmiBlitz3.ab3@21334>   MOVE.w dontwrite,D2
000312A6 <AmiBlitz3.ab3@21335>    BNE.w JL_0_C9B4
000312A8 <AmiBlitz3.ab3@21336>   MOVE.l D1,(A0)
000312AE <AmiBlitz3.ab3@21339>   ADDQ.l #1,data2
000312B6 <AmiBlitz3.ab3@21340>   BCLR #$0,data2+3
000312BA <AmiBlitz3.ab3@21341>   CMP.w #$2C,D0
000312BE <AmiBlitz3.ab3@21342>    BEQ.w JL_0_C944
000312C0 <AmiBlitz3.ab3@21343> RTS
000312C6 <AmiBlitz3.ab3@21347> JMP vardeclareerr
000312CC <AmiBlitz3.ab3@21350>   MOVE.w proceduremode,D1                                  ;doshared
000312D0 <AmiBlitz3.ab3@21352>   BNE.w 'l1
000312D2 <AmiBlitz3.ab3@21353>   MOVE.w D1,-(A7)
000312D8 <AmiBlitz3.ab3@21354>   CLR.w proceduremode
000312DE <AmiBlitz3.ab3@21357>   LEA varbase,a2
000312E2 <AmiBlitz3.ab3@21358>   BSR.w getparameter
000312E4 <AmiBlitz3.ab3@21359>   MOVE.w d2,-(a7)
000312EA <AmiBlitz3.ab3@21360>    JSR findvariable
000312EE <AmiBlitz3.ab3@21361>    BEQ 'checkdim
000312F4 <AmiBlitz3.ab3@21362>    LEA sharebase,a2
000312F6 <AmiBlitz3.ab3@21363>    MOVEQ #$f+4,d7
000312FA <AmiBlitz3.ab3@21364>    BSR.w findlab                                         ;find var
000312FE <AmiBlitz3.ab3@21365>    BEQ.b dupsherr
00031302 <AmiBlitz3.ab3@21366>    BSR addlabel
00031306 <AmiBlitz3.ab3@21367>    CMP.b #".",d0
0003130A <AmiBlitz3.ab3@21368>    BNE JUMP_vardeclareerr
0003130C <AmiBlitz3.ab3@21369>    MOVE.l a2,a3
00031312 <AmiBlitz3.ab3@21370>    JSR JL_0_8EB8b
00031314 <AmiBlitz3.ab3@21401>   MOVE.w (a7)+,d2
00031318 <AmiBlitz3.ab3@21402>    CMP.b #",",d0
0003131C <AmiBlitz3.ab3@21403>    BNE 'ret
00031322 <AmiBlitz3.ab3@21404>    JSR get1bytemain
00031326 <AmiBlitz3.ab3@21405> BRA 'again2
0003132C <AmiBlitz3.ab3@21408>   MOVE.w (A7)+,proceduremode
0003132E <AmiBlitz3.ab3@21409> RTS
00031334 <AmiBlitz3.ab3@21416>    CMP.w #2,6(a2)
00031338 <AmiBlitz3.ab3@21417>    BEQ 'do
0003133E <AmiBlitz3.ab3@21418>    CMP.w #$102,6(a2)
00031342 <AmiBlitz3.ab3@21419>    BEQ 'do
00031348 <AmiBlitz3.ab3@21420> JMP errormsg_declaredtwice                                 ;was BRA 'errormsg_declaredtwice_
0003134E <AmiBlitz3.ab3@21423>   LEA varbase,a0
00031350 <AmiBlitz3.ab3@21426>   MOVE.l (A0),D0                                           ;find label
00031354 <AmiBlitz3.ab3@21427>    BEQ.b 'z1
00031356 <AmiBlitz3.ab3@21428>    CMP.l d0,a2
0003135A <AmiBlitz3.ab3@21429>    BEQ 'z1
0003135C <AmiBlitz3.ab3@21430>    MOVE.l d0,a0
00031360 <AmiBlitz3.ab3@21431> BRA 'm1
00031362 <AmiBlitz3.ab3@21434>   MOVE.l (a2),d1
00031364 <AmiBlitz3.ab3@21435>     MOVE.l d1,(a0)
00031366 <AmiBlitz3.ab3@21436>     CLR.l (a2)
0003136C <AmiBlitz3.ab3@21437>     LEA sharebase,a0
0003136E <AmiBlitz3.ab3@21438>     MOVE.l (a0),(a2)
00031370 <AmiBlitz3.ab3@21439>     MOVE.l a2,(a0)
00031376 <AmiBlitz3.ab3@21440>     JSR get1bytemain
0003137C <AmiBlitz3.ab3@21441>     JSR get1bytemain
00031380 <AmiBlitz3.ab3@21442> BRA 'domore
00031388 <AmiBlitz3.ab3@21445>   MOVE.b #1,nowdeclare
0003138A <AmiBlitz3.ab3@21446>   MOVE.w D1,-(A7)
00031390 <AmiBlitz3.ab3@21447>   CLR.w proceduremode
00031394 <AmiBlitz3.ab3@21450>    BSR.w getparameter
00031396 <AmiBlitz3.ab3@21451>   MOVE.w D2,-(A7)
0003139C <AmiBlitz3.ab3@21452>   LEA firstglob,A2
000313A0 <AmiBlitz3.ab3@21453>    BSR.w findvariable2
000313A4 <AmiBlitz3.ab3@21454>    BNE.b JL_0_CA06
000313AA <AmiBlitz3.ab3@21457>   MOVE.b flagmask+1,D1
000313AE <AmiBlitz3.ab3@21458>   MOVE.b $7(A2),D3
000313B0 <AmiBlitz3.ab3@21459>   EOR.b D3,D1
000313B4 <AmiBlitz3.ab3@21460>    BEQ.w dupsherr
000313B8 <AmiBlitz3.ab3@21461>    BSR.w findlab
000313BC <AmiBlitz3.ab3@21462>    BEQ.b JL_0_C9F0
000313C0 <AmiBlitz3.ab3@21465>    BSR.w addlabel
000313C2 <AmiBlitz3.ab3@21466>   MOVE.w (A7)+,D2
000313C4 <AmiBlitz3.ab3@21467>   MOVE.l A2,-(A7)
000313C8 <AmiBlitz3.ab3@21468>    BSR.w JL_0_8E3C
000313CA <AmiBlitz3.ab3@21469>   MOVEA.l (A7)+,A2
000313CC <AmiBlitz3.ab3@21470>   MOVEQ.l #$04,D1
000313CE <AmiBlitz3.ab3@21471>   ADDQ.w #4,A2
000313D0 <AmiBlitz3.ab3@21472>   ADDQ.w #4,A3
000313D2 <AmiBlitz3.ab3@21475>     MOVE.w (A3)+,(A2)+
000313D6 <AmiBlitz3.ab3@21476>   DBF D1,JL_0_CA1A
000313DE <AmiBlitz3.ab3@21478>   BTST #$1,flagmask+1
000313E2 <AmiBlitz3.ab3@21479>    BEQ.w JL_0_CA3C
000313E8 <AmiBlitz3.ab3@21480>    JSR get1bytemain
000313EC <AmiBlitz3.ab3@21481>   CMP.w #$29,D0
000313F0 <AmiBlitz3.ab3@21482>    BNE.w syntaxerrc
000313F6 <AmiBlitz3.ab3@21483>    JSR get1bytemain
000313FA <AmiBlitz3.ab3@21486>    CMP.w #$2C,D0
000313FE <AmiBlitz3.ab3@21487>    BNE.w JL_0_CA4C
00031404 <AmiBlitz3.ab3@21488>    JSR get1bytemain
00031408 <AmiBlitz3.ab3@21489> BRA.w JL_0_C9DE
0003140E <AmiBlitz3.ab3@21492>   MOVE.w (A7)+,proceduremode
00031410 <AmiBlitz3.ab3@21493> RTS
00031416 <AmiBlitz3.ab3@21495> syntaxerrc JMP syntaxerr
0003141A <AmiBlitz3.ab3@21498>    BSR.w JL_0_C05C
00031420 <AmiBlitz3.ab3@21499>    JSR check_incdir                                        ; ergebnis in d2
00031426 <AmiBlitz3.ab3@21501>    LEA ptr_parameterstore,a1
00031428 <AmiBlitz3.ab3@21502>    MOVE.l d2,-(a7)
0003142E <AmiBlitz3.ab3@21503>    LEA includetemp,a0                                      ; filename in includetemp packen
00031430 <AmiBlitz3.ab3@21506>      MOVE.b (a1)+,(a0)+
00031434 <AmiBlitz3.ab3@21507>    BNE 'l4
0003143A <AmiBlitz3.ab3@21509>    LEA ptr_parameterstore,a1
0003143C <AmiBlitz3.ab3@21510>    MOVE.l a1,a0
0003143E <AmiBlitz3.ab3@21513>     TST.b (a0)+
00031442 <AmiBlitz3.ab3@21514>    BNE 'l1
00031444 <AmiBlitz3.ab3@21517>      MOVE.b -(a0),d0
00031448 <AmiBlitz3.ab3@21518>      CMP.b #":",d0
0003144C <AmiBlitz3.ab3@21519>       BEQ 'out
00031450 <AmiBlitz3.ab3@21520>      CMP.b #"/",d0
00031454 <AmiBlitz3.ab3@21521>       BEQ 'out
00031456 <AmiBlitz3.ab3@21522>      CMP.l a1,a0
0003145A <AmiBlitz3.ab3@21523>       BEQ 'out2
0003145E <AmiBlitz3.ab3@21524> BRA 'l2
00031460 <AmiBlitz3.ab3@21527>    ADDQ.l #1,a0                                            ; dateinamen vom pfad extrahiert
00031462 <AmiBlitz3.ab3@21530>    MOVEQ.l #-$01,D2
00031464 <AmiBlitz3.ab3@21533>      ADDQ.w #1,D2
00031466 <AmiBlitz3.ab3@21534>      MOVE.b (a0)+,(a1)+
0003146A <AmiBlitz3.ab3@21535>    BNE 'l3
0003146C <AmiBlitz3.ab3@21536>    CLR.b (a1)+
00031472 <AmiBlitz3.ab3@21538>    LEA ptr_parameterstore,a1
00031476 <AmiBlitz3.ab3@21539>    BSR.w findxinc                                         ;find include
0003147A <AmiBlitz3.ab3@21540>     BEQ.w 'outb
0003147C <AmiBlitz3.ab3@21542>    MOVE.w D2,-(A7)
00031480 <AmiBlitz3.ab3@21543>    BSR.w addlabel
00031482 <AmiBlitz3.ab3@21544>    MOVE.w (A7)+,D2
00031488 <AmiBlitz3.ab3@21546>    LEA ptr_parameterstore,a1
0003148E <AmiBlitz3.ab3@21547>    LEA includetemp,a0                                      ; namen in includetemp schreiben
00031490 <AmiBlitz3.ab3@21550>     MOVE.b (a0)+,(a1)+
00031494 <AmiBlitz3.ab3@21551>    BNE 'l4b
00031496 <AmiBlitz3.ab3@21553>    MOVE.l (a7)+,d2
0003149C <AmiBlitz3.ab3@21554>    LEA ptr_parameterstore,a1
000314A0 <AmiBlitz3.ab3@21555> BRA.w JL_0_CB18
000314A6 <AmiBlitz3.ab3@21558>    LEA ptr_parameterstore,a1
000314AC <AmiBlitz3.ab3@21559>    LEA includetemp,a0
000314AE <AmiBlitz3.ab3@21562>     MOVE.b (a0)+,(a1)+
000314B2 <AmiBlitz3.ab3@21563>    BNE 'l4b2
000314B4 <AmiBlitz3.ab3@21565>    MOVE.l (a7)+,d2
000314BA <AmiBlitz3.ab3@21566>    LEA ptr_parameterstore,a1
000314BC <AmiBlitz3.ab3@21569> RTS
000314C0 <AmiBlitz3.ab3@21573>   BSR.w JL_0_C05C                                              ; test and get the parameter (includestring)
000314C6 <AmiBlitz3.ab3@21575>   JSR check_IncBinDir                                          ; to fix the path problem in CLIMode  tomsmart1
000314CC <AmiBlitz3.ab3@21577>   MOVEA.l _dosbase,A6
000314CE <AmiBlitz3.ab3@21578>   MOVE.l D0,D7                                                 ; store Lockpointer
000314D2 <AmiBlitz3.ab3@21579>    BEQ.w error_cant_open_include                               ; no pointer => errormessage
000314D4 <AmiBlitz3.ab3@21580>   MOVE.l D7,D1                                                 ; begin get the size of the file to include
000314DA <AmiBlitz3.ab3@21581>   MOVE.l ptr_macrobuffer_begin,D2
000314DE <AmiBlitz3.ab3@21582>    JSR _Examine(A6)
000314E4 <AmiBlitz3.ab3@21583>   MOVEA.l ptr_macrobuffer_begin,A0
000314E8 <AmiBlitz3.ab3@21584>   MOVE.l $4(A0),D0
000314EC <AmiBlitz3.ab3@21585>    BPL.w error_cant_open_include                               ; something went wrong => errormessage
000314F0 <AmiBlitz3.ab3@21586>   MOVE.l $7C(A0),D3                                            ; store the size of the file to include
000314F2 <AmiBlitz3.ab3@21587>   MOVE.l D7,D1                                                 ; begin unlock the file
000314F6 <AmiBlitz3.ab3@21588>    JSR _UnLock(A6)
000314FC <AmiBlitz3.ab3@21590>   MOVE.l #ptr_parameterstore,D1                                ; begin Open and Load the file
00031502 <AmiBlitz3.ab3@21591>   MOVE.l #HUNK_RELOC_16__MODE_OLDFILE,D2                       
00031506 <AmiBlitz3.ab3@21592>    JSR _Open(A6)
00031508 <AmiBlitz3.ab3@21593>   MOVE.l D0,D7
0003150C <AmiBlitz3.ab3@21594>    BEQ.w error_cant_open_include
00031512 <AmiBlitz3.ab3@21595>   MOVE.l destpointer,D0
00031514 <AmiBlitz3.ab3@21596>   ADD.l D3,D0
0003151A <AmiBlitz3.ab3@21597>   CMP.l destbufferend,D0
0003151E <AmiBlitz3.ab3@21598>    BHI.w JL_0_CAF6
00031524 <AmiBlitz3.ab3@21599>   MOVE.l destpointer,D2
00031526 <AmiBlitz3.ab3@21600>   MOVE.l D7,D1
0003152A <AmiBlitz3.ab3@21601>    JSR _Read(A6)
00031530 <AmiBlitz3.ab3@21602>   CMP.l #$FFFFFFFF,D0
00031534 <AmiBlitz3.ab3@21603>    BEQ.w error_reading_file
0003153A <AmiBlitz3.ab3@21604>   ADD.l D0,destpointer
0003153E <AmiBlitz3.ab3@21605> BRA.w JL_0_CB04
00031546 <AmiBlitz3.ab3@21608>   MOVE.w #$FFFF,dontwrite
0003154C <AmiBlitz3.ab3@21609>   MOVE.l D0,destpointer
0003154E <AmiBlitz3.ab3@21612>   MOVE.l D7,D1
00031552 <AmiBlitz3.ab3@21613> JMP _Close(A6)
00031558 <AmiBlitz3.ab3@21617> JMP illdirerr
0003155E <AmiBlitz3.ab3@21620>   TST.w dirmode                                            ;include  open
00031562 <AmiBlitz3.ab3@21621>    BNE.w JUMP_illdirerr
00031566 <AmiBlitz3.ab3@21622>   BSR.w JL_0_C05C
0003156C <AmiBlitz3.ab3@21623>   JSR check_incdir
00031570 <AmiBlitz3.ab3@21626>   BSR.w findconstant
00031574 <AmiBlitz3.ab3@21627>    BEQ.w alincerr
0003157A <AmiBlitz3.ab3@21629>   LEA constantbase,A2
0003157E <AmiBlitz3.ab3@21630>   BSR.w addhere2
00031582 <AmiBlitz3.ab3@21631>   CLR.w $C(A2)
00031586 <AmiBlitz3.ab3@21632>   CLR.l $4(A2)
0003158C <AmiBlitz3.ab3@21634>   MOVE.l #ptr_parameterstore,D1
0003158E <AmiBlitz3.ab3@21635>   MOVE.l d1,a0
00031594 <AmiBlitz3.ab3@21636>   LEA includetemp2,a1
00031596 <AmiBlitz3.ab3@21639>     MOVE.b (a0)+,(a1)+
0003159A <AmiBlitz3.ab3@21640>   BNE 'l1
000315A0 <AmiBlitz3.ab3@21641>   JSR save_includename
000315AA <AmiBlitz3.ab3@21642>   MOVE.l #0,include_process
000315B2 <AmiBlitz3.ab3@21644>   CMP.l #$62623200,-4(a0)                                  ;.bb2
000315B6 <AmiBlitz3.ab3@21645>   BEQ 'ok
000315BE <AmiBlitz3.ab3@21646>   CMP.l #$61623300,-4(a0)                                  ;.ab3
000315C2 <AmiBlitz3.ab3@21647>   BEQ 'ok_tokenize
000315CA <AmiBlitz3.ab3@21648>   CMP.l #$61623200,-4(a0)                                  ;.ab2
000315CE <AmiBlitz3.ab3@21649>   BEQ 'ok_tokenize
000315D6 <AmiBlitz3.ab3@21650>   CMP.l #$2e626200,-4(a0)                                  ;.bb files
000315DA <AmiBlitz3.ab3@21651>   BEQ 'ok
000315E0 <AmiBlitz3.ab3@21652> JMP errortoken                                             ;can only include
000315EA <AmiBlitz3.ab3@21655>    MOVE.l #-1,include_process                              ; must tokenize the include
000315F0 <AmiBlitz3.ab3@21658>   MOVE.l #HUNK_RELOC_16__MODE_OLDFILE,D2
000315F6 <AmiBlitz3.ab3@21659>   MOVEA.l _dosbase,A6
000315FA <AmiBlitz3.ab3@21660>   JSR _Open(A6)
000315FE <AmiBlitz3.ab3@21661>   MOVE.l D0,$8(A2)
00031602 <AmiBlitz3.ab3@21662>   BEQ.w error_cant_open_include
00031608 <AmiBlitz3.ab3@21663>   CLR.l includeline
0003160C <AmiBlitz3.ab3@21664>   MOVE.l 8(a2),d1
0003160E <AmiBlitz3.ab3@21665>   MOVE.l d3,-(a7)
00031610 <AmiBlitz3.ab3@21666>   MOVEQ #0,d2
00031612 <AmiBlitz3.ab3@21667>   MOVEQ #1,d3
00031616 <AmiBlitz3.ab3@21668>   JSR _Seek(a6)                                            ; -66
0003161A <AmiBlitz3.ab3@21669>   MOVE.l 8(a2),d1
0003161C <AmiBlitz3.ab3@21670>   MOVEQ #0,d2
0003161E <AmiBlitz3.ab3@21671>   MOVEQ #-1,d3
00031622 <AmiBlitz3.ab3@21672>   JSR _Seek(a6)                                            ; -66
00031624 <AmiBlitz3.ab3@21673>   MOVE.l (a7)+,d3
00031626 <AmiBlitz3.ab3@21674>   ADDQ.l #4,d0
0003162C <AmiBlitz3.ab3@21676>   MOVE.l #$10000,D1
00031632 <AmiBlitz3.ab3@21677>   MOVEA.l _execbase,A6
00031636 <AmiBlitz3.ab3@21680>   JSR _AllocVec(a6)
0003163A <AmiBlitz3.ab3@21682>   MOVE.l D0,$4(A2)
0003163E <AmiBlitz3.ab3@21683>   MOVE.l D0,$E(A2)
00031640 <AmiBlitz3.ab3@21684>   MOVEA.l D0,A5
00031646 <AmiBlitz3.ab3@21691>   ADDQ.w #1,ininclude                                      ;enter include
0003164C <AmiBlitz3.ab3@21694>   LEA _include,a0
00031650 <AmiBlitz3.ab3@21695>   MOVEM.l a0-a6/d0-d7,-(a7)
00031656 <AmiBlitz3.ab3@21696>   LEA ptr_parameterstore,a1
00031658 <AmiBlitz3.ab3@21699>     MOVE.b (a0)+,(a1)+
0003165C <AmiBlitz3.ab3@21700>   BNE 'l1b
0003165E <AmiBlitz3.ab3@21702>   MOVEQ #9,d2
00031664 <AmiBlitz3.ab3@21703>   JSR findlabel2
00031668 <AmiBlitz3.ab3@21704>   BNE 'd
00031670 <AmiBlitz3.ab3@21705>   MOVE.l #1,8(a2)
00031674 <AmiBlitz3.ab3@21706>   MOVEM.l (a7)+,a0-a6/d0-d7
00031678 <AmiBlitz3.ab3@21707> BRA 'd2
0003167E <AmiBlitz3.ab3@21710>   JSR addlabelhash
00031686 <AmiBlitz3.ab3@21711>   MOVE.l #$1,$4(A2)
0003168E <AmiBlitz3.ab3@21712>   MOVE.l #1,8(a2)
00031692 <AmiBlitz3.ab3@21713>   MOVEM.l (a7)+,a0-a6/d0-d7
00031698 <AmiBlitz3.ab3@21716>   LEA inctab,a0
0003169A <AmiBlitz3.ab3@21717>   MOVEQ #0,d1
000316A0 <AmiBlitz3.ab3@21718>   MOVE.w ininclude,d1
000316A4 <AmiBlitz3.ab3@21719>   CLR.l $0(a0,d1*4)
000316AA <AmiBlitz3.ab3@21720>   MOVEA.l passstack,A7
000316B0 <AmiBlitz3.ab3@21721> JMP AJL_0_413A
000316B6 <AmiBlitz3.ab3@21723> JUMP_dupmacerr JMP dupmacerr
000316B8 <AmiBlitz3.ab3@21725> coolnest:   Ds.w 1
000316BC <AmiBlitz3.ab3@21726> macline:    Ds.l 1
000316C6 <AmiBlitz3.ab3@21730>   MOVE.l linenumat,macline
000316CA <AmiBlitz3.ab3@21731>    BSR.w makename2
000316CE <AmiBlitz3.ab3@21732>    BEQ.w JUMP_syntaxerr
000316D4 <AmiBlitz3.ab3@21734>    CLR.b thenmode
000316DE <AmiBlitz3.ab3@21736>    MOVE.w oldqflag,instringon
000316E4 <AmiBlitz3.ab3@21737>   MOVEA.l lastsourcepos,A5
000316E8 <AmiBlitz3.ab3@21738>    BSR.w findmac
000316EC <AmiBlitz3.ab3@21739>    BEQ.w JUMP_dupmacerr
000316F0 <AmiBlitz3.ab3@21740>    BSR.w addlabel
000316F4 <AmiBlitz3.ab3@21741>   CLR.w $A(A2)
000316FA <AmiBlitz3.ab3@21742>   MOVEA.l ptr_macrobuffer_begin,A0
000316FC <AmiBlitz3.ab3@21743>   MOVEQ.l #$00,D2
00031702 <AmiBlitz3.ab3@21744>   CLR.w coolnest
00031704 <AmiBlitz3.ab3@21747>   MOVE.b (a5),d0
00031708 <AmiBlitz3.ab3@21748>      BEQ 'l3
0003170C <AmiBlitz3.ab3@21749>      CMP.b #" ",d0
00031710 <AmiBlitz3.ab3@21750>       BNE 'l2                                              ;space macro
00031712 <AmiBlitz3.ab3@21751>       ADDQ.l #1,a5
00031716 <AmiBlitz3.ab3@21752> BRA 'l1
0003171A <AmiBlitz3.ab3@21755>    CMP.b #";",d0
0003171E <AmiBlitz3.ab3@21756>       BNE 'l3
00031720 <AmiBlitz3.ab3@21759>    MOVE.b (a5),d0
00031724 <AmiBlitz3.ab3@21760>       BEQ 'l5
00031728 <AmiBlitz3.ab3@21761>       BSR.w JL_0_CC98                                      ;add comment
0003172A <AmiBlitz3.ab3@21762>       ADDQ.l #1,a5
0003172E <AmiBlitz3.ab3@21763> BRA 'l4
00031732 <AmiBlitz3.ab3@21766>    MOVE.b #":",d0
00031736 <AmiBlitz3.ab3@21767>       BSR.w JL_0_CC98
0003173A <AmiBlitz3.ab3@21768>       MOVE.b #"@",d0
0003173E <AmiBlitz3.ab3@21769>       BSR.w JL_0_CC98
00031746 <AmiBlitz3.ab3@21772>    MOVE.b #0,temp
0003174E <AmiBlitz3.ab3@21773>       MOVE.b #0,thenmode
00031754 <AmiBlitz3.ab3@21776>   JSR getcharb
00031756 <AmiBlitz3.ab3@21777>   TST.w D0
0003175A <AmiBlitz3.ab3@21778>    BNE.w JL_0_CBDE
0003175E <AmiBlitz3.ab3@21779>   MOVEM.l D2/A0/A2,-(A7)
00031764 <AmiBlitz3.ab3@21780>   CMP.w #"@@",-3(a5)
00031768 <AmiBlitz3.ab3@21781>   BNE 'l2a
0003176E <AmiBlitz3.ab3@21782>   JSR nextline
00031772 <AmiBlitz3.ab3@21783>   BEQ.w JUMP_macenderr
00031776 <AmiBlitz3.ab3@21784>   MOVEM.l (A7)+,D2/A0/A2
0003177A <AmiBlitz3.ab3@21785> BRA.w JL_0_CBB6
00031780 <AmiBlitz3.ab3@21788>    JSR nextline
00031784 <AmiBlitz3.ab3@21789>    BEQ.w JUMP_macenderr
00031788 <AmiBlitz3.ab3@21790>   MOVEM.l (A7)+,D2/A0/A2
0003178A <AmiBlitz3.ab3@21791>   TST.w D2
0003178E <AmiBlitz3.ab3@21792>    BEQ.w JL_0_CBB6
00031790 <AmiBlitz3.ab3@21795>   MOVE.b (a5),d0
00031794 <AmiBlitz3.ab3@21796>       CMP.b #" ",d0
00031798 <AmiBlitz3.ab3@21797>       BNE 'l1
0003179A <AmiBlitz3.ab3@21798>       ADDQ.w #1,a5
0003179E <AmiBlitz3.ab3@21799> BRA 'l2
000317A4 <AmiBlitz3.ab3@21802>   TST.b thenmode
000317A8 <AmiBlitz3.ab3@21803>      BEQ 'l3
000317AA <AmiBlitz3.ab3@21804>      MOVEQ #":",d0
000317AE <AmiBlitz3.ab3@21805>      BSR.w JL_0_CC98
000317B2 <AmiBlitz3.ab3@21806>      MOVE.w #-$7FFE,D0                                     ;write end if
000317B6 <AmiBlitz3.ab3@21807>      BSR macputw
000317BA <AmiBlitz3.ab3@21808>      MOVE.w #$800b,d0
000317BE <AmiBlitz3.ab3@21809>      BSR.w macputw
000317C4 <AmiBlitz3.ab3@21810>      CLR.b thenmode
000317C6 <AmiBlitz3.ab3@21813>    MOVEQ.l #$3A,D0
000317CE <AmiBlitz3.ab3@21814>      MOVE.b #1,temp
000317D2 <AmiBlitz3.ab3@21816> BRA.w JL_0_CC2A
000317D6 <AmiBlitz3.ab3@21820>   BPL.w JL_0_CC2A
000317DA <AmiBlitz3.ab3@21821>   CMP.w #-$7FF3,D0                                         ;macro ?
000317DE <AmiBlitz3.ab3@21822>    BNE.w JL_0_CBF4
000317E4 <AmiBlitz3.ab3@21823>   ADDQ.w #1,coolnest
000317E8 <AmiBlitz3.ab3@21824> BRA.w JL_0_CC22
000317EE <AmiBlitz3.ab3@21826> JUMP_macnesterr JMP macnesterr
000317F2 <AmiBlitz3.ab3@21829>   CMP.w #$80d7,d0                                          ;object ?
000317F6 <AmiBlitz3.ab3@21830>     BNE 'l1x
000317FC <AmiBlitz3.ab3@21831>     TST.b objectcount
00031800 <AmiBlitz3.ab3@21832>     BNE JUMP_macnesterr
00031804 <AmiBlitz3.ab3@21835>   CMP.w #$8021,d0
00031808 <AmiBlitz3.ab3@21836>     BNE 'nothen
00031810 <AmiBlitz3.ab3@21837>     MOVE.b #1,thenmode
00031816 <AmiBlitz3.ab3@21840>   TST.b thenmode
0003181A <AmiBlitz3.ab3@21841>         BEQ 'l1
0003181E <AmiBlitz3.ab3@21842>    CMP.w #$8002,d0                                         ;end if
00031822 <AmiBlitz3.ab3@21843>    BNE 'l1
00031826 <AmiBlitz3.ab3@21844>    MOVEM.l d0/a5,-(a7)
0003182C <AmiBlitz3.ab3@21845>    JSR get1bytemain
0003182E <AmiBlitz3.ab3@21846>    MOVE.w d0,d1
00031832 <AmiBlitz3.ab3@21847>    MOVEM.l (a7)+,a5/d0
00031836 <AmiBlitz3.ab3@21848>    CMP.w #$800b,d1
0003183A <AmiBlitz3.ab3@21849>    BNE 'l1
00031840 <AmiBlitz3.ab3@21850>    CLR.b thenmode
00031844 <AmiBlitz3.ab3@21853>    CMP.w #-$7FFE,D0                                        ;end ?
00031848 <AmiBlitz3.ab3@21854>    BNE.w JL_0_CC22
0003184A <AmiBlitz3.ab3@21855>    MOVE.l a5,-(a7)
00031850 <AmiBlitz3.ab3@21856>    JSR get1bytemain
00031852 <AmiBlitz3.ab3@21857>    MOVE.l (a7)+,a5
00031854 <AmiBlitz3.ab3@21858>    TST.w d0
00031858 <AmiBlitz3.ab3@21859>    BEQ 'doend
0003185C <AmiBlitz3.ab3@21860>    CMP.w #":",d0
00031860 <AmiBlitz3.ab3@21861>    BEQ 'doend
00031864 <AmiBlitz3.ab3@21862>    CMP.w #";",d0
00031868 <AmiBlitz3.ab3@21863>    BEQ 'doend
0003186A <AmiBlitz3.ab3@21864>    MOVE.l a5,-(a7)
00031870 <AmiBlitz3.ab3@21865>    JSR get1bytemain
00031874 <AmiBlitz3.ab3@21866>    MOVE.l -1(a5),d0
00031876 <AmiBlitz3.ab3@21867>    MOVE.l (a7)+,a5
0003187C <AmiBlitz3.ab3@21868>    CMP.l #"noa7",d0
00031880 <AmiBlitz3.ab3@21869>    BEQ 'doend
00031884 <AmiBlitz3.ab3@21870> BRA 'morechar
00031888 <AmiBlitz3.ab3@21873>   MOVE.w #$8002,D0
0003188C <AmiBlitz3.ab3@21874>    BSR.w macputw
00031890 <AmiBlitz3.ab3@21875> BRA JL_0_CBB6
00031896 <AmiBlitz3.ab3@21878>   JSR get1bytemain
0003189A <AmiBlitz3.ab3@21879>    CMP.w #-$7FF3,D0                                        ;end macro
0003189E <AmiBlitz3.ab3@21880>    BEQ.w 'lo1
000318A2 <AmiBlitz3.ab3@21881>   CMP.w #$80d7,d0                                          ;end object
000318A6 <AmiBlitz3.ab3@21882>   BNE JL_0_CC12
000318AC <AmiBlitz3.ab3@21883>   SUBQ.b #1,objectcount
000318B2 <AmiBlitz3.ab3@21884>   TST.b developobject
000318B6 <AmiBlitz3.ab3@21885>   BEQ 'lo1
000318BA <AmiBlitz3.ab3@21886>   BSR skiprest
000318BC <AmiBlitz3.ab3@21887> RTS
000318C2 <AmiBlitz3.ab3@21890>   SUBQ.w #1,coolnest
000318C6 <AmiBlitz3.ab3@21891>    BMI.w JL_0_CC32
000318C8 <AmiBlitz3.ab3@21894>   MOVE.w D0,-(A7)
000318CC <AmiBlitz3.ab3@21895>   MOVE.w #$8002,D0
000318D0 <AmiBlitz3.ab3@21896>    BSR.w macputw
000318D2 <AmiBlitz3.ab3@21897>   MOVE.w (A7)+,D0
000318D6 <AmiBlitz3.ab3@21898> BRA.w JL_0_CC22
000318DA <AmiBlitz3.ab3@21901>   BSR.w macputw
000318DE <AmiBlitz3.ab3@21902> BRA.w JL_0_CBB6
000318E4 <AmiBlitz3.ab3@21904> JUMP_macenderr JMP macenderr
000318EA <AmiBlitz3.ab3@21907>     CMP.w #"@@",-1(a5)                                     ;merge lines
000318EE <AmiBlitz3.ab3@21908>     BNE 'no
000318F2 <AmiBlitz3.ab3@21909>      MOVEM.l D2/A0/A2,-(A7)
000318F8 <AmiBlitz3.ab3@21910>    JSR nextline
000318FC <AmiBlitz3.ab3@21911>    BEQ.w JUMP_macenderr
00031900 <AmiBlitz3.ab3@21912>   MOVEM.l (A7)+,D2/A0/A2
00031902 <AmiBlitz3.ab3@21913>     TST.w D2
00031906 <AmiBlitz3.ab3@21914>    BEQ.w JL_0_CBB6
0003190A <AmiBlitz3.ab3@21915> BRA JL_0_CBB6
0003190E <AmiBlitz3.ab3@21919>   BSR.w JL_0_CC98
00031912 <AmiBlitz3.ab3@21920> BRA.w JL_0_CBB6
00031914 <AmiBlitz3.ab3@21923>   ADDQ.w #4,A7
00031916 <AmiBlitz3.ab3@21924>   MOVE.l A0,D0
0003191C <AmiBlitz3.ab3@21925>   SUB.l ptr_macrobuffer_begin,D0
00031920 <AmiBlitz3.ab3@21928>    BEQ.w JL_0_CC5E
00031924 <AmiBlitz3.ab3@21929>   CMPI.b #":",-(A0)
00031928 <AmiBlitz3.ab3@21930>    BNE.w JL_0_CC5E
0003192C <AmiBlitz3.ab3@21931>   CMP.w #$1,D0
00031930 <AmiBlitz3.ab3@21932>    BEQ.w JL_0_CC58
00031934 <AmiBlitz3.ab3@21933>   TST.b -$1(A0)
00031938 <AmiBlitz3.ab3@21934>    BMI.w JL_0_CC5E
0003193A <AmiBlitz3.ab3@21937>   SUBQ.w #1,D0
0003193E <AmiBlitz3.ab3@21938> BRA.w JL_0_CC3C
00031942 <AmiBlitz3.ab3@21941>   MOVE.w D0,$8(A2)
00031946 <AmiBlitz3.ab3@21942>    BEQ.w JL_0_CC8E
00031948 <AmiBlitz3.ab3@21943>   MOVEQ.l #$01,D1
0003194E <AmiBlitz3.ab3@21944>   MOVEA.l _execbase,A6
00031954 <AmiBlitz3.ab3@21945>   MOVE.l mempool,a0
00031958 <AmiBlitz3.ab3@21946>   JSR _AllocPooled(a6)
0003195A <AmiBlitz3.ab3@21948>   MOVEA.l D0,A0
0003195E <AmiBlitz3.ab3@21949>   MOVE.l A0,$4(A2)
00031962 <AmiBlitz3.ab3@21950>   MOVE.w $8(A2),D1
00031966 <AmiBlitz3.ab3@21951>    BEQ.w JL_0_CC8E
00031968 <AmiBlitz3.ab3@21952>   SUBQ.w #1,D1
0003196E <AmiBlitz3.ab3@21953>   MOVEA.l ptr_macrobuffer_begin,A1
00031970 <AmiBlitz3.ab3@21956>     MOVE.b (A1)+,(A0)+
00031974 <AmiBlitz3.ab3@21957>   DBF D1,JL_0_CC88
0003197A <AmiBlitz3.ab3@21960> JMP get1bytemain
0003197C <AmiBlitz3.ab3@21964>   MOVE.w D0,D1
0003197E <AmiBlitz3.ab3@21965>   LSR.w #8,D1
00031980 <AmiBlitz3.ab3@21966>   MOVE.b D1,(A0)+
00031982 <AmiBlitz3.ab3@21969>   MOVEQ.l #-$01,D2
00031984 <AmiBlitz3.ab3@21970>   MOVE.b D0,(A0)+
0003198A <AmiBlitz3.ab3@21971>   CMPA.l ptr_macrobuffer_end,A0
0003198E <AmiBlitz3.ab3@21972>    BCC.w macbigerr2
00031990 <AmiBlitz3.ab3@21973> RTS
00031996 <AmiBlitz3.ab3@21974> macbigerr2 JMP macbigerr
00031998 <AmiBlitz3.ab3@21977>   MOVE.l d0,-(a7)
0003199A <AmiBlitz3.ab3@21978>   MOVEQ #0,d0
000319A0 <AmiBlitz3.ab3@21979>   CLR.b skiptoggle
000319A2 <AmiBlitz3.ab3@21982>     MOVE.b (a5),d0
000319A6 <AmiBlitz3.ab3@21983>     BEQ 'l3
000319AA <AmiBlitz3.ab3@21984>     CMP.b #";",d0
000319AE <AmiBlitz3.ab3@21985>     BNE 'l2
000319B6 <AmiBlitz3.ab3@21986>     MOVE.b #1,skiptoggle
000319BC <AmiBlitz3.ab3@21989>     TST.b skiptoggle
000319C0 <AmiBlitz3.ab3@21990>     BNE 'l4
000319C4 <AmiBlitz3.ab3@21991>     CMP.b #":",d0
000319C8 <AmiBlitz3.ab3@21992>     BEQ 'l3
000319CA <AmiBlitz3.ab3@21995>     ADDQ #1,a5
000319CE <AmiBlitz3.ab3@21996> BRA 'loop
000319D4 <AmiBlitz3.ab3@21999>   MOVE.w d0,lastchar
000319D6 <AmiBlitz3.ab3@22000>   MOVE.l (a7)+,d0
000319D8 <AmiBlitz3.ab3@22001> RTS
000319DC <AmiBlitz3.ab3@22005>   BSR.w ifchar
000319E0 <AmiBlitz3.ab3@22006>    BNE.w JUMP_syntaxerr
000319E2 <AmiBlitz3.ab3@22007>   MOVE.w D0,D1
000319E8 <AmiBlitz3.ab3@22008>   JSR get1bytemain
000319EC <AmiBlitz3.ab3@22009>   BSR.w ifchar
000319F0 <AmiBlitz3.ab3@22010>    BNE.w JL_0_CCDA
000319F2 <AmiBlitz3.ab3@22011>   ADDQ.w #1,D0
000319F4 <AmiBlitz3.ab3@22012>   MOVE.w D0,D2
000319F6 <AmiBlitz3.ab3@22013>   ADD.w D0,D0
000319F8 <AmiBlitz3.ab3@22014>   ADD.w D2,D0
000319FA <AmiBlitz3.ab3@22015>   ADD.w D0,D1
000319FC <AmiBlitz3.ab3@22016>   MOVE.w D1,D0
00031A00 <AmiBlitz3.ab3@22017>   ANDI.w #$3,D0
00031A04 <AmiBlitz3.ab3@22018>   CMP.w #$3,D0
00031A08 <AmiBlitz3.ab3@22019>    BEQ.w JUMP_syntaxerr
00031A0E <AmiBlitz3.ab3@22021>   JSR get1bytemain
00031A10 <AmiBlitz3.ab3@22024> RTS
00031A12 <AmiBlitz3.ab3@22030> thetst1:  TST.b D0
00031A14 <AmiBlitz3.ab3@22031> thetst2:  TST.w D0
00031A16 <AmiBlitz3.ab3@22032> thetst3:  TST.l D0
00031A18 <AmiBlitz3.ab3@22033> thetst4:  TST.l (A7)+                                      ;Any Length?
00031A1C <AmiBlitz3.ab3@22034> thetst5:  JSR _Reschedule(A6)
00031A20 <AmiBlitz3.ab3@22036> posbr:    BEQ.w posbr
00031A24 <AmiBlitz3.ab3@22037> negbr:    BNE.w negbr
00031A26 <AmiBlitz3.ab3@22041>   MOVEQ.l #-$01,D2
00031A2A <AmiBlitz3.ab3@22042> BRA.w JL_0_D04C
00031A30 <AmiBlitz3.ab3@22046>   CLR.l fp0addr
00031A32 <AmiBlitz3.ab3@22047>   MOVEQ.l #$01,D1                                          ;while flag
00031A34 <AmiBlitz3.ab3@22048>   MOVEQ.l #$00,D2                                          ;negate flag
00031A38 <AmiBlitz3.ab3@22049> BRA.w JL_0_D04E
00031A3E <AmiBlitz3.ab3@22053>   LEA firstrep,A2
00031A40 <AmiBlitz3.ab3@22054>   MOVEQ.l #$08,D2
00031A44 <AmiBlitz3.ab3@22055> BRA.w freeslist
00031A48 <AmiBlitz3.ab3@22059>   LEA firstsel(PC),A2
00031A4A <AmiBlitz3.ab3@22060>   MOVEQ.l #$0E,D2
00031A4C <AmiBlitz3.ab3@22065>   MOVEQ.l #$00,D3
00031A4E <AmiBlitz3.ab3@22073>   MOVE.l (A2),D0
00031A50 <AmiBlitz3.ab3@22074>   CLR.l (A2)
00031A52 <AmiBlitz3.ab3@22075>   MOVEA.l D0,A2
00031A58 <AmiBlitz3.ab3@22076>   MOVEA.l _execbase,A6
00031A5C <AmiBlitz3.ab3@22079>     CMPA.w #$0,A2
00031A60 <AmiBlitz3.ab3@22080>      BEQ.w freelist__done
00031A62 <AmiBlitz3.ab3@22081>     TST.w D3
00031A66 <AmiBlitz3.ab3@22082>      BEQ.w freelist__skip
00031A6A <AmiBlitz3.ab3@22083>     MOVEM.l D2-D3/A2,-(A7)
00031A6C <AmiBlitz3.ab3@22084>     ADDA.w D3,A2
00031A6E <AmiBlitz3.ab3@22085>     MOVE.l D4,D2
00031A72 <AmiBlitz3.ab3@22086>     BSR.w freeslist
00031A76 <AmiBlitz3.ab3@22087>     MOVEM.l (A7)+,D2-D3/A2
00031A78 <AmiBlitz3.ab3@22090>     MOVEA.l A2,A1
00031A7A <AmiBlitz3.ab3@22091>     MOVE.l D2,D0
00031A7C <AmiBlitz3.ab3@22092>     MOVEA.l (A2),A2
00031A82 <AmiBlitz3.ab3@22093>     MOVE.l mempool,a0
00031A86 <AmiBlitz3.ab3@22094>     JSR _FreePooled(A6)
00031A8A <AmiBlitz3.ab3@22095> BRA.w freelist__loop
00031A8C <AmiBlitz3.ab3@22098> RTS
00031A92 <AmiBlitz3.ab3@22101> JMP eselerr
00031A96 <AmiBlitz3.ab3@22104> firstsel:  Ds.l 1
00031A9A <AmiBlitz3.ab3@22107> selpushb:   Dc.b $02,$40,$00,$FF                           ;ANDI.W  #$00FF,D0
00031A9C <AmiBlitz3.ab3@22110> selpushw:   MOVE.w D0,-(A7)
00031A9E <AmiBlitz3.ab3@22112> selpushl:   MOVE.l D0,-(A7)
00031AA2 <AmiBlitz3.ab3@22114> selpushs:   LEA $4(A7),A2                                  ;(a7)=len of string!
00031AA6 <AmiBlitz3.ab3@22117> selcomb:    ANDI.w #$FF,D0
00031AA8 <AmiBlitz3.ab3@22118> selcomw:    CMP.w (A7),D0
00031AAA <AmiBlitz3.ab3@22120> selcoml:    CMP.l (A7),D0
00031AAE <AmiBlitz3.ab3@22122> selbne:     BNE.w selbne
00031AB0 <AmiBlitz3.ab3@22124> endsel:     ADDQ.w #8,A7
00031AB4 <AmiBlitz3.ab3@22130>   MOVE.l firstsel(PC),D0                                  
00031AB8 <AmiBlitz3.ab3@22131>    BEQ.w JUMP_eselerr
00031ABA <AmiBlitz3.ab3@22132>   MOVEA.l D0,A2
00031ABE <AmiBlitz3.ab3@22133>    BSR.w JL_0_CDFC
00031AC4 <AmiBlitz3.ab3@22136>   MOVEA.l _execbase,A6
00031AC8 <AmiBlitz3.ab3@22139>   MOVE.l $4(A2),D0
00031ACC <AmiBlitz3.ab3@22140>    BEQ.w doendsel__done
00031ACE <AmiBlitz3.ab3@22141>   MOVEA.l D0,A3
00031AD2 <AmiBlitz3.ab3@22142>   MOVEA.l $4(A3),A0
00031AD8 <AmiBlitz3.ab3@22143>   MOVE.l destpointer,D1
00031ADA <AmiBlitz3.ab3@22144>   SUB.l A0,D1
00031AE0 <AmiBlitz3.ab3@22146>     TST.b fast
00031AE4 <AmiBlitz3.ab3@22147>     BEQ doendsel__loop_l1
00031AEA <AmiBlitz3.ab3@22148>     MOVE.w dontwrite,D0
00031AEE <AmiBlitz3.ab3@22149>     BNE.w doendsel__skip
00031AF0 <AmiBlitz3.ab3@22150>     ADDQ.l #2,d1
00031AF4 <AmiBlitz3.ab3@22151>     MOVE.l d1,-2(a0)
00031AF8 <AmiBlitz3.ab3@22152>   BRA doendsel__skip
00031AFE <AmiBlitz3.ab3@22156>   TST.w dontwrite
00031B02 <AmiBlitz3.ab3@22157>      BNE.w doendsel__skip
00031B08 <AmiBlitz3.ab3@22158>   CMP.l #MaxWordSgnd,D1
00031B0C <AmiBlitz3.ab3@22159>    BHI.w JUMP_cbraerr
00031B0E <AmiBlitz3.ab3@22160>   MOVE.w D1,(A0)
00031B12 <AmiBlitz3.ab3@22163>   MOVE.l (A3),$4(A2)                                       ;next of me is new first
00031B14 <AmiBlitz3.ab3@22164>   MOVEA.l A3,A1
00031B16 <AmiBlitz3.ab3@22165>   MOVEQ.l #$08,D0
00031B1C <AmiBlitz3.ab3@22166>   MOVE.l mempool,a0
00031B20 <AmiBlitz3.ab3@22167>    JSR _FreePooled(A6)
00031B24 <AmiBlitz3.ab3@22168> BRA.w doendsel__loop
00031B2A <AmiBlitz3.ab3@22171>   JSR popselect                                            ;fix stack on select
00031B2E <AmiBlitz3.ab3@22172>   MOVEA.l firstsel(PC),A1
00031B34 <AmiBlitz3.ab3@22173>   MOVE.l (A1),firstsel
00031B36 <AmiBlitz3.ab3@22174>   MOVEQ.l #$0E,D0
00031B3C <AmiBlitz3.ab3@22175>   MOVEA.l _execbase,A6
00031B42 <AmiBlitz3.ab3@22176>   MOVE.l mempool,a0
00031B46 <AmiBlitz3.ab3@22177>   JSR _FreePooled(A6)
00031B4C <AmiBlitz3.ab3@22178> JMP get1bytemain
00031B4E <AmiBlitz3.ab3@22182>   MOVEA.l (A7)+,A1
00031B50 <AmiBlitz3.ab3@22183>   SUBQ.w #8,A1
00031B52 <AmiBlitz3.ab3@22184>   MOVEQ.l #$09,D0
00031B54 <AmiBlitz3.ab3@22185>   ADD.l (A1),D0
00031B56 <AmiBlitz3.ab3@22188>   ADDQ.w #2,A7                                             ;for runtime errs!
00031B5A <AmiBlitz3.ab3@22193>   MOVE.l firstsel(PC),D0
00031B5E <AmiBlitz3.ab3@22194>    BEQ.w JUMP_defaerr
00031B60 <AmiBlitz3.ab3@22195>   MOVEA.l D0,A2
00031B64 <AmiBlitz3.ab3@22196>   BSR.w JL_0_CE26
00031B68 <AmiBlitz3.ab3@22197>   BSR.w JL_0_CDFC
00031B6C <AmiBlitz3.ab3@22198>   CLR.l $8(A2)
00031B70 <AmiBlitz3.ab3@22199>   MOVE.w $C(A2),D2
00031B74 <AmiBlitz3.ab3@22200> BRA.w JL_0_CE5E
00031B7A <AmiBlitz3.ab3@22203> JMP defaerr
00031B7E <AmiBlitz3.ab3@22206>   MOVE.l $8(A2),D0
00031B82 <AmiBlitz3.ab3@22207>    BEQ.w JL_0_CE24
00031B84 <AmiBlitz3.ab3@22208>   MOVEA.l D0,A0
00031B8A <AmiBlitz3.ab3@22209>   MOVE.l destpointer,D1
00031B8C <AmiBlitz3.ab3@22210>   SUB.l A0,D1
00031B92 <AmiBlitz3.ab3@22212>     TST.b fast
00031B96 <AmiBlitz3.ab3@22213>     BEQ 'l1
00031B9C <AmiBlitz3.ab3@22214>     TST.w dontwrite
00031BA0 <AmiBlitz3.ab3@22215>     BNE.w JL_0_CE24
00031BA2 <AmiBlitz3.ab3@22216>     ADDQ.l #2,d1
00031BA6 <AmiBlitz3.ab3@22217>     MOVE.l D1,-2(A0)
00031BAA <AmiBlitz3.ab3@22218>   BRA JL_0_CE24
00031BB0 <AmiBlitz3.ab3@22222>   TST.w dontwrite
00031BB4 <AmiBlitz3.ab3@22223>      BNE.w JL_0_CE24
00031BBA <AmiBlitz3.ab3@22224>    CMP.l #MaxWordSgnd,D1
00031BBE <AmiBlitz3.ab3@22225>    BHI.w JUMP_cbraerr
00031BC0 <AmiBlitz3.ab3@22226>   MOVE.w D1,(A0)
00031BC2 <AmiBlitz3.ab3@22229> RTS
00031BC8 <AmiBlitz3.ab3@22232> JMP cbraerr
00031BCC <AmiBlitz3.ab3@22236>   MOVE.l $8(A2),D0
00031BD0 <AmiBlitz3.ab3@22237>    BEQ.w JL_0_CE5C
00031BD2 <AmiBlitz3.ab3@22238>   MOVEA.l D0,A3
00031BD6 <AmiBlitz3.ab3@22239>   MOVE.w #$6000,D1
00031BDC <AmiBlitz3.ab3@22241>    TST.b fast
00031BE0 <AmiBlitz3.ab3@22242>    BEQ 'l1
00031BE6 <AmiBlitz3.ab3@22243>    OR.l #$ff,d1
00031BEA <AmiBlitz3.ab3@22244>    BSR writeword
00031BEE <AmiBlitz3.ab3@22248>   BSR.w writeword
00031BF0 <AmiBlitz3.ab3@22249>   MOVEQ.l #$08,D0
00031BF2 <AmiBlitz3.ab3@22250>   MOVEQ.l #$01,D1
00031BF8 <AmiBlitz3.ab3@22251>   MOVEA.l _execbase,A6
00031BFE <AmiBlitz3.ab3@22252>   MOVE.l mempool,a0
00031C02 <AmiBlitz3.ab3@22253>   JSR _AllocPooled(a6)
00031C04 <AmiBlitz3.ab3@22255>   MOVEA.l D0,A0
00031C08 <AmiBlitz3.ab3@22256>   MOVE.l $4(A2),(A0)
00031C0C <AmiBlitz3.ab3@22257>   MOVE.l A0,$4(A2)
00031C14 <AmiBlitz3.ab3@22258>   MOVE.l destpointer,$4(A0)
00031C18 <AmiBlitz3.ab3@22259> BRA.w writeword
00031C1A <AmiBlitz3.ab3@22262> RTS
00031C20 <AmiBlitz3.ab3@22266>   TST.b debugmode
00031C24 <AmiBlitz3.ab3@22267>    BEQ.w JL_0_CE7A
00031C28 <AmiBlitz3.ab3@22268>   MOVE.w #$C313,D1
00031C2C <AmiBlitz3.ab3@22269>   CMP.w #$3,D2
00031C30 <AmiBlitz3.ab3@22270>    BCS.w JL_0_CE76
00031C32 <AmiBlitz3.ab3@22271>   ADDQ.w #1,D1
00031C36 <AmiBlitz3.ab3@22274> BRA.w Atokejsr
00031C38 <AmiBlitz3.ab3@22277> RTS
00031C3E <AmiBlitz3.ab3@22281> JMP caseerr
00031C42 <AmiBlitz3.ab3@22284>   MOVE.l firstsel(PC),D0
00031C46 <AmiBlitz3.ab3@22285>    BEQ.w JUMP_caseerr
00031C48 <AmiBlitz3.ab3@22286>   MOVEA.l D0,A2
00031C4C <AmiBlitz3.ab3@22287>    BSR.w JL_0_CE26
00031C50 <AmiBlitz3.ab3@22288>    BSR.w JL_0_CDFC
00031C54 <AmiBlitz3.ab3@22289>   MOVE.w $C(A2),D2
00031C56 <AmiBlitz3.ab3@22290>   MOVE.w D2,-(A7)
00031C5A <AmiBlitz3.ab3@22291>    BSR.w JL_0_CE5E
00031C5C <AmiBlitz3.ab3@22292>   MOVE.w (A7),D2
00031C60 <AmiBlitz3.ab3@22293>    BSR.w bakeval
00031C62 <AmiBlitz3.ab3@22294>   MOVE.w (A7)+,D2
00031C66 <AmiBlitz3.ab3@22295>   LEA selcomb(PC),A0
00031C6A <AmiBlitz3.ab3@22296>   LEA selcombf(PC),A1
00031C6E <AmiBlitz3.ab3@22297>   CMP.w #$1,D2
00031C72 <AmiBlitz3.ab3@22298>    BEQ.w JL_0_CED8
00031C76 <AmiBlitz3.ab3@22299>   LEA selcomw(PC),A0
00031C7A <AmiBlitz3.ab3@22300>   CMP.w #$2,D2
00031C7E <AmiBlitz3.ab3@22301>    BEQ.w JL_0_CED8
00031C82 <AmiBlitz3.ab3@22302>   LEA selcoml(PC),A0
00031C86 <AmiBlitz3.ab3@22303>   LEA selcomlf(PC),A1
00031C8A <AmiBlitz3.ab3@22304>   CMP.w #$7,D2
00031C8E <AmiBlitz3.ab3@22305>    BCS.w JL_0_CED8
00031C92 <AmiBlitz3.ab3@22307>   MOVE.w #$CE01,D1
00031C96 <AmiBlitz3.ab3@22308>    BSR.w Atokejsr
00031C9A <AmiBlitz3.ab3@22309> BRA.w JL_0_CEDC
00031C9E <AmiBlitz3.ab3@22312>   BSR.w pokecode
00031CA2 <AmiBlitz3.ab3@22315>   MOVE.w selbne(PC),D1
00031CA8 <AmiBlitz3.ab3@22317>     TST.b fast
00031CAC <AmiBlitz3.ab3@22318>     BEQ 'l1
00031CB2 <AmiBlitz3.ab3@22319>     ORI.l #$ff,d1
00031CB6 <AmiBlitz3.ab3@22320>     BSR writeword
00031CBA <AmiBlitz3.ab3@22323>   BSR.w writeword
00031CBE <AmiBlitz3.ab3@22324>   MOVEA.l firstsel(PC),A0
00031CC6 <AmiBlitz3.ab3@22325>   MOVE.l destpointer,$8(A0)
00031CCA <AmiBlitz3.ab3@22326> BRA.w writeword
00031CCE <AmiBlitz3.ab3@22330> pcchk:      Dc.b $3F,$3C,$73,$45                           ;MOVE.W  #$7345,-(A7)   ;#"sE",-(a7) org source
00031CD0 <AmiBlitz3.ab3@22331> clrst:      Dc.b $42,$A7                                   ;CLR.L   -(A7)
00031CD4 <AmiBlitz3.ab3@22334> sellineat:  Ds.l 1
00031CDA <AmiBlitz3.ab3@22340>   TST.b debugmode
00031CDE <AmiBlitz3.ab3@22341>    BEQ.w JL_0_CF0E
00031CE2 <AmiBlitz3.ab3@22342>   MOVE.l pcchk(PC),D1                                      ;move #"sE",-(a7)
00031CE6 <AmiBlitz3.ab3@22343>    BSR.w writelong
00031CF0 <AmiBlitz3.ab3@22346>   MOVE.l linenumat,sellineat
00031CFA <AmiBlitz3.ab3@22348>    MOVE.l destpointer,pushpc
00031D04 <AmiBlitz3.ab3@22349>   MOVE.l hunkoffsetbase,pushoff
00031D06 <AmiBlitz3.ab3@22350>   MOVEQ.l #$00,D2
00031D0A <AmiBlitz3.ab3@22351>    BSR.w bakevalu                                          ;Evaluate
00031D0E <AmiBlitz3.ab3@22352>    BSR.w JL_0_B5D2
00031D12 <AmiBlitz3.ab3@22353>   CMP.w #$7,D2
00031D16 <AmiBlitz3.ab3@22354>    BNE.w JL_0_CF36
00031D1A <AmiBlitz3.ab3@22355>   MOVE.w clrst(PC),D1
00031D1E <AmiBlitz3.ab3@22356>    BSR.w writeword
00031D22 <AmiBlitz3.ab3@22359>    BSR.w JL_0_B63C
00031D26 <AmiBlitz3.ab3@22360>   LEA selpushb(PC),A0
00031D2A <AmiBlitz3.ab3@22361>   LEA selpushbf(PC),A1
00031D2E <AmiBlitz3.ab3@22362>   CMP.w #$1,D2
00031D32 <AmiBlitz3.ab3@22363>    BEQ.w JL_0_CF88
00031D36 <AmiBlitz3.ab3@22364>   LEA selpushw(PC),A0
00031D3A <AmiBlitz3.ab3@22365>   CMP.w #$2,D2
00031D3E <AmiBlitz3.ab3@22366>    BEQ.w JL_0_CF88
00031D42 <AmiBlitz3.ab3@22367>   LEA selpushl(PC),A0
00031D46 <AmiBlitz3.ab3@22368>   LEA selpushlf(PC),A1
00031D4A <AmiBlitz3.ab3@22369>   CMP.w #$7,D2
00031D4E <AmiBlitz3.ab3@22370>    BCS.w JL_0_CF88
00031D54 <AmiBlitz3.ab3@22372>   MOVE.w moved0a3,D1                                       ;d0 to a3!
00031D58 <AmiBlitz3.ab3@22373>    BSR.w writeword
00031D5C <AmiBlitz3.ab3@22374>   LEA selpushs(PC),A0
00031D60 <AmiBlitz3.ab3@22375>   LEA selpushsf(PC),A1
00031D64 <AmiBlitz3.ab3@22376>    BSR.w pokecode
00031D68 <AmiBlitz3.ab3@22377>   MOVE.w #$C701,D1
00031D6C <AmiBlitz3.ab3@22378>    BSR.w Atokejsr
00031D70 <AmiBlitz3.ab3@22379> BRA.w JL_0_CF8C
00031D74 <AmiBlitz3.ab3@22382>   BSR.w pokecode
00031D76 <AmiBlitz3.ab3@22385>   MOVEQ.l #$0E,D0
00031D78 <AmiBlitz3.ab3@22386>   MOVEQ.l #$01,D1
00031D7E <AmiBlitz3.ab3@22387>   MOVEA.l _execbase,A6
00031D84 <AmiBlitz3.ab3@22389>   MOVE.l mempool,a0
00031D88 <AmiBlitz3.ab3@22390>   JSR _AllocPooled(a6)
00031D8A <AmiBlitz3.ab3@22391>   MOVEA.l D0,A0
00031D8E <AmiBlitz3.ab3@22392>   MOVE.l firstsel(PC),(A0)
00031D94 <AmiBlitz3.ab3@22393>   MOVE.l A0,firstsel
00031D98 <AmiBlitz3.ab3@22394>   CLR.l $4(A0)
00031D9C <AmiBlitz3.ab3@22395>   CLR.l $8(A0)
00031DA0 <AmiBlitz3.ab3@22396>   MOVE.w D2,$C(A0)
00031DA2 <AmiBlitz3.ab3@22397> RTS
00031DA8 <AmiBlitz3.ab3@22401>   MOVE.l firstrep,D0
00031DAC <AmiBlitz3.ab3@22402>    BEQ.w JUMP_unterr1
00031DB0 <AmiBlitz3.ab3@22403>   MOVE.w #$6000,D1
00031DB4 <AmiBlitz3.ab3@22404>   BSR.w writeword
00031DB6 <AmiBlitz3.ab3@22405>   MOVEA.l D0,A0
00031DBA <AmiBlitz3.ab3@22406>   MOVE.l $4(A0),D1
00031DC0 <AmiBlitz3.ab3@22407>   SUB.l destpointer,D1
00031DC2 <AmiBlitz3.ab3@22408>   TST.w D1
00031DC6 <AmiBlitz3.ab3@22409>    BPL.w JUMP_unterr2
00031DCA <AmiBlitz3.ab3@22410>   BSR.w writeword
00031DD0 <AmiBlitz3.ab3@22411>   MOVEA.l _execbase,A6
00031DD4 <AmiBlitz3.ab3@22412> BRA.w JL_0_D036
00031DDA <AmiBlitz3.ab3@22415> JMP unterr2
00031DE0 <AmiBlitz3.ab3@22418> JMP unterr1
00031DE6 <AmiBlitz3.ab3@22422>   MOVE.l firstrep,D0
00031DEA <AmiBlitz3.ab3@22423>    BEQ.w JUMP_unterr1
00031DEE <AmiBlitz3.ab3@22424>   BSR.w do_if
00031DF4 <AmiBlitz3.ab3@22425>   JSR reget
00031DF8 <AmiBlitz3.ab3@22426>    BNE.w JUMP_syntaxerr
00031DFE <AmiBlitz3.ab3@22427>   MOVE.w dontwrite,D1
00031E02 <AmiBlitz3.ab3@22428>    BNE.w JL_0_D020
00031E08 <AmiBlitz3.ab3@22429>   MOVEA.l firstrep,A0
00031E0E <AmiBlitz3.ab3@22430>   MOVEA.l destpointer,A1
00031E14 <AmiBlitz3.ab3@22432>     TST.b fast
00031E18 <AmiBlitz3.ab3@22433>     BEQ 'l1
00031E1A <AmiBlitz3.ab3@22434>     SUBQ.w #4,a1
00031E1E <AmiBlitz3.ab3@22435>     MOVE.l $4(A0),D2
00031E20 <AmiBlitz3.ab3@22436>     SUB.l A1,D2
00031E22 <AmiBlitz3.ab3@22437>     MOVE.l d2,(a1)
00031E26 <AmiBlitz3.ab3@22438>   BRA JL_0_D020
00031E28 <AmiBlitz3.ab3@22442>   SUBQ.w #2,A1
00031E2C <AmiBlitz3.ab3@22443>   MOVE.l $4(A0),D2
00031E2E <AmiBlitz3.ab3@22444>   SUB.l A1,D2
00031E30 <AmiBlitz3.ab3@22445>   TST.w D2
00031E34 <AmiBlitz3.ab3@22446>    BPL.w JUMP_unterr2
00031E36 <AmiBlitz3.ab3@22447>   MOVE.w D2,(A1)
00031E3C <AmiBlitz3.ab3@22450>   MOVEA.l firstiff,A1
00031E42 <AmiBlitz3.ab3@22451>   MOVE.l (A1),firstiff
00031E44 <AmiBlitz3.ab3@22452>   MOVEQ.l #$0E,D0
00031E4A <AmiBlitz3.ab3@22453>   MOVEA.l _execbase,A6
00031E50 <AmiBlitz3.ab3@22454>   MOVE.l mempool,a0
00031E54 <AmiBlitz3.ab3@22455>   JSR _FreePooled(A6)
00031E5A <AmiBlitz3.ab3@22458>   MOVEA.l firstrep,A1
00031E60 <AmiBlitz3.ab3@22459>   MOVE.l (A1),firstrep
00031E62 <AmiBlitz3.ab3@22460>   MOVEQ.l #$08,D0
00031E68 <AmiBlitz3.ab3@22461>   MOVE.l mempool,a0
00031E6C <AmiBlitz3.ab3@22462> JMP _FreePooled(A6)
00031E70 <AmiBlitz3.ab3@22465> iflineat:   Ds.l 1
00031E72 <AmiBlitz3.ab3@22469>   MOVEQ.l #$00,D2
00031E78 <AmiBlitz3.ab3@22470>   TST.b fast
00031E7C <AmiBlitz3.ab3@22471>   BEQ 'l1
00031E84 <AmiBlitz3.ab3@22472>   MOVE.b #1,nostringopt
00031E8C <AmiBlitz3.ab3@22473>   MOVE.b #1,iniffcommand
00031E8E <AmiBlitz3.ab3@22477>   MOVEQ.l #$00,D1
00031E90 <AmiBlitz3.ab3@22480>   MOVE.w D1,-(A7)
00031E96 <AmiBlitz3.ab3@22481>   MOVE.l destpointer,-(A7)
00031E98 <AmiBlitz3.ab3@22482>   MOVE.w D2,-(A7)
00031EA2 <AmiBlitz3.ab3@22483>   MOVE.l linenumat,iflineat
00031EA4 <AmiBlitz3.ab3@22484>   MOVEQ.l #$00,D2
00031EAE <AmiBlitz3.ab3@22485>   MOVE.b optistring,optistring2
00031EB6 <AmiBlitz3.ab3@22486>   MOVE.b #1,optistring
00031EBA <AmiBlitz3.ab3@22487>   BSR.w bakevalu
00031EC4 <AmiBlitz3.ab3@22488>   MOVE.b optistring2,optistring
00031EC8 <AmiBlitz3.ab3@22489>   CMP.w #$5,D2
00031ECC <AmiBlitz3.ab3@22490>    BEQ.w JL_0_D09C
00031ED0 <AmiBlitz3.ab3@22491>   MOVE.w thetst1(PC),D1
00031ED4 <AmiBlitz3.ab3@22492>   CMP.w #$1,D2
00031ED8 <AmiBlitz3.ab3@22493>    BEQ.w writebranchcode
00031EDC <AmiBlitz3.ab3@22494>   MOVE.w thetst2(PC),D1
00031EE0 <AmiBlitz3.ab3@22495>   CMP.w #$2,D2
00031EE4 <AmiBlitz3.ab3@22496>    BEQ.w writebranchcode
00031EE8 <AmiBlitz3.ab3@22497>   MOVE.w thetst4(PC),D1
00031EEC <AmiBlitz3.ab3@22498>   CMP.w #$7,D2
00031EF0 <AmiBlitz3.ab3@22499>    BEQ.w writebranchcode
00031EF4 <AmiBlitz3.ab3@22500>   MOVE.w thetst3(PC),D1
00031EF8 <AmiBlitz3.ab3@22501> BRA.w writebranchcode
00031EFE <AmiBlitz3.ab3@22504>   TST.b fpu
00031F02 <AmiBlitz3.ab3@22505>   BEQ 'dofpu
00031F08 <AmiBlitz3.ab3@22506>   MOVE.l #$f200003a,d1
00031F0C <AmiBlitz3.ab3@22507>   BSR writelong
00031F10 <AmiBlitz3.ab3@22508>   MOVE.w #$f2c1,d1
00031F14 <AmiBlitz3.ab3@22509>   BSR writeword
00031F18 <AmiBlitz3.ab3@22510>   BSR writelong
00031F1A <AmiBlitz3.ab3@22511>   ADDQ.l #2,a7
00031F1E <AmiBlitz3.ab3@22512> BRA.w br2
00031F22 <AmiBlitz3.ab3@22515>    MOVE.w #$C900,D1
00031F26 <AmiBlitz3.ab3@22516>    BSR.w Atokejsr
00031F2A <AmiBlitz3.ab3@22517>   MOVE.l thetst5(PC),D1
00031F2E <AmiBlitz3.ab3@22518>    BSR.w writelong
00031F32 <AmiBlitz3.ab3@22519> BRA.w JL_0_D0B4
00031F38 <AmiBlitz3.ab3@22523>          CLR.b iniffcommand
00031F3E <AmiBlitz3.ab3@22524>          TST.b fast                                        ;branchcode
00031F42 <AmiBlitz3.ab3@22525>          BEQ b6
00031F48 <AmiBlitz3.ab3@22526>          TST.b fpu
00031F4C <AmiBlitz3.ab3@22527>          BEQ 'nofpu
00031F52 <AmiBlitz3.ab3@22531>           MOVE.l destpointer,a0
00031F58 <AmiBlitz3.ab3@22532>          SUB.l load_var_addr,a0
00031F5E <AmiBlitz3.ab3@22533>          CMP.l #4,a0
00031F62 <AmiBlitz3.ab3@22534>          BEQ 'nofpu
00031F6A <AmiBlitz3.ab3@22535>          CMP.l #$f2400014,-4(a4)                           ;<
00031F6E <AmiBlitz3.ab3@22536>          BNE 'nolt
00031F74 <AmiBlitz3.ab3@22537>          SUBQ.l #2,destpointer
00031F7A <AmiBlitz3.ab3@22538>          MOVE.w #$f293,-4(a4)                              ;
00031F7E <AmiBlitz3.ab3@22539> BRA 'brf
00031F86 <AmiBlitz3.ab3@22542>   CMP.l #$f2400015,-4(a4)                                  ;<=
00031F8A <AmiBlitz3.ab3@22543>          BNE 'nole
00031F90 <AmiBlitz3.ab3@22544>          SUBQ.l #2,destpointer
00031F96 <AmiBlitz3.ab3@22545>          MOVE.w #$f292,-4(a4)
00031F9A <AmiBlitz3.ab3@22546> BRA 'brf
00031FA2 <AmiBlitz3.ab3@22549>   CMP.l #$f2400013,-4(a4)                                  ;=>
00031FA6 <AmiBlitz3.ab3@22550>          BNE 'noge
00031FAC <AmiBlitz3.ab3@22551>          SUBQ.l #2,destpointer
00031FB2 <AmiBlitz3.ab3@22552>          MOVE.w #$f294,-4(a4)
00031FB6 <AmiBlitz3.ab3@22553> BRA 'brf
00031FBE <AmiBlitz3.ab3@22556>   CMP.l #$f2400012,-4(a4)                                  ;>
00031FC2 <AmiBlitz3.ab3@22557>          BNE 'nogt
00031FC8 <AmiBlitz3.ab3@22558>          SUBQ.l #2,destpointer
00031FCE <AmiBlitz3.ab3@22559>          MOVE.w #$f295,-4(a4)
00031FD2 <AmiBlitz3.ab3@22560> BRA 'brf
00031FDA <AmiBlitz3.ab3@22563>   CMP.l #$f2400001,-4(a4)                                  ;=
00031FDE <AmiBlitz3.ab3@22564>          BNE 'noeq
00031FE4 <AmiBlitz3.ab3@22565>          SUBQ.l #2,destpointer
00031FEA <AmiBlitz3.ab3@22566>          MOVE.w #$f28e,-4(a4)
00031FEE <AmiBlitz3.ab3@22567> BRA 'brf
00031FF6 <AmiBlitz3.ab3@22570>   CMP.l #$f240000e,-4(a4)                                  ;<>
00031FFA <AmiBlitz3.ab3@22571>          BNE 'none
00032000 <AmiBlitz3.ab3@22572>          SUBQ.l #2,destpointer
00032006 <AmiBlitz3.ab3@22573>          MOVE.w #$f281,-4(a4)
00032008 <AmiBlitz3.ab3@22576>   ADDQ.l #2,a7
0003200E <AmiBlitz3.ab3@22578>     TST.b fast
00032012 <AmiBlitz3.ab3@22579>     BEQ 'l1
00032018 <AmiBlitz3.ab3@22580>     OR.b #$40,-3(a4)
0003201C <AmiBlitz3.ab3@22581>     BSR writeword
00032020 <AmiBlitz3.ab3@22585>  BSR writeword
00032024 <AmiBlitz3.ab3@22586> BRA.s br2
0003202A <AmiBlitz3.ab3@22590>   MOVE.l destpointer,a0
00032030 <AmiBlitz3.ab3@22591>          SUB.l load_var_addr,a0
00032036 <AmiBlitz3.ab3@22592>          CMP.l #4,a0
0003203A <AmiBlitz3.ab3@22593>          BEQ JL_0_D0B4
00032040 <AmiBlitz3.ab3@22594>          CMP.w #$4eb9,-6(a4)
00032044 <AmiBlitz3.ab3@22595>          BEQ b6
0003204A <AmiBlitz3.ab3@22596>          CMP.w #$5ec0,-2(a4)                               ;>
0003204E <AmiBlitz3.ab3@22597>      BNE.s 'lb1
00032054 <AmiBlitz3.ab3@22598>          MOVE.w #$6f00,-2(a4)                              ;ble
00032058 <AmiBlitz3.ab3@22599> BRA.s br
0003205E <AmiBlitz3.ab3@22602>  CMP.w #$5dc0,-2(a4)                                       ;<
00032062 <AmiBlitz3.ab3@22603>   BNE.s 'lb2
00032068 <AmiBlitz3.ab3@22604>          MOVE.w #$6c00,-2(a4)                              ;bge
0003206C <AmiBlitz3.ab3@22605> BRA.s br
00032072 <AmiBlitz3.ab3@22608>   CMP.w #$57c0,-2(a4)                                      ;=
00032076 <AmiBlitz3.ab3@22609>   BNE.s 'lb3
0003207C <AmiBlitz3.ab3@22610>          MOVE.w #$6600,-2(a4)                              ;bne
00032080 <AmiBlitz3.ab3@22611> BRA.s br
00032086 <AmiBlitz3.ab3@22614>   CMP.w #$56c0,-2(a4)                                      ;<>
0003208A <AmiBlitz3.ab3@22615>   BNE.s 'lb4
00032090 <AmiBlitz3.ab3@22616>          MOVE.w #$6700,-2(a4)                              ;beq
00032094 <AmiBlitz3.ab3@22617> BRA.s br
0003209A <AmiBlitz3.ab3@22620>   CMP.w #$5cc0,-2(a4)                                      ;>=
0003209E <AmiBlitz3.ab3@22621>   BNE.s 'lb5
000320A4 <AmiBlitz3.ab3@22622>          MOVE.w #$6d00,-2(a4)                              ;blt
000320A8 <AmiBlitz3.ab3@22623> BRA.s br
000320AE <AmiBlitz3.ab3@22626>   CMP.w #$5fc0,-2(a4)                                      ;<=
000320B2 <AmiBlitz3.ab3@22627>         BNE.s b6
000320B8 <AmiBlitz3.ab3@22628>          MOVE.w #$6e00,-2(a4)                              ;bgt
000320BA <AmiBlitz3.ab3@22631>   TST.w (a7)+
000320C0 <AmiBlitz3.ab3@22633>         TST.b fast
000320C4 <AmiBlitz3.ab3@22634>         BEQ 'l1
000320CA <AmiBlitz3.ab3@22635>         OR.b #$ff,-1(a4)                                   ;long branches
000320CE <AmiBlitz3.ab3@22636>         BSR writeword
000320D2 <AmiBlitz3.ab3@22640>         BSR writeword
000320D6 <AmiBlitz3.ab3@22641> BRA.s br2
000320DA <AmiBlitz3.ab3@22644>   BSR.w writeword
000320DE <AmiBlitz3.ab3@22647>   MOVE.l posbr(PC),D1
000320E0 <AmiBlitz3.ab3@22648>   TST.w (A7)+
000320E4 <AmiBlitz3.ab3@22649>    BEQ.w JL_0_D0C2
000320E8 <AmiBlitz3.ab3@22650>   MOVE.l negbr(PC),D1
000320EE <AmiBlitz3.ab3@22653>   TST.b fast
000320F2 <AmiBlitz3.ab3@22654>            BEQ 'l1
000320F8 <AmiBlitz3.ab3@22655>            OR.l #$00ff0000,d1
000320FC <AmiBlitz3.ab3@22656>            BSR writelong
00032100 <AmiBlitz3.ab3@22657>            BSR writeword
00032104 <AmiBlitz3.ab3@22658> BRA br2
00032108 <AmiBlitz3.ab3@22661>   BSR.w writelong
0003210A <AmiBlitz3.ab3@22664>  MOVEQ.l #$0E,D0
0003210C <AmiBlitz3.ab3@22665>   MOVEQ.l #$01,D1
00032112 <AmiBlitz3.ab3@22666>   MOVEA.l _execbase,A6
00032118 <AmiBlitz3.ab3@22668>   MOVE.l mempool,a0
0003211C <AmiBlitz3.ab3@22669>   JSR _AllocPooled(a6)
0003211E <AmiBlitz3.ab3@22670>   MOVEA.l D0,A0
00032124 <AmiBlitz3.ab3@22671>   MOVE.l firstiff,(A0)
0003212A <AmiBlitz3.ab3@22672>   MOVE.l A0,firstiff
0003212E <AmiBlitz3.ab3@22673>   MOVE.l (A7)+,$4(A0)
00032136 <AmiBlitz3.ab3@22674>   MOVE.l destpointer,$8(A0)
0003213A <AmiBlitz3.ab3@22675>   MOVE.w (A7)+,$C(A0)
00032140 <AmiBlitz3.ab3@22676>    JSR reget
00032144 <AmiBlitz3.ab3@22677>    BEQ.w JL_0_D10C
0003214A <AmiBlitz3.ab3@22678>   BSET #$7,$C(A0)
00032154 <AmiBlitz3.ab3@22682>   MOVE.w oldqflag,instringon
0003215A <AmiBlitz3.ab3@22683>   MOVEA.l lastsourcepos,A5
00032162 <AmiBlitz3.ab3@22684>   MOVE.w #$003A,lastchar
00032164 <AmiBlitz3.ab3@22687> RTS
00032168 <AmiBlitz3.ab3@22691>   CMP.w #$1,D0
0003216C <AmiBlitz3.ab3@22692>    BLT.w JL_0_D128
00032170 <AmiBlitz3.ab3@22693>   CMP.w #$0,D0
00032174 <AmiBlitz3.ab3@22694>    BGT.w JL_0_D128
00032176 <AmiBlitz3.ab3@22695>   ADD.w D0,D0
00032178 <AmiBlitz3.ab3@22696>   ADD.w D0,D0
0003217C <AmiBlitz3.ab3@22697>   MOVEA.l JL_0_D128(PC,D0.W),A0
0003217E <AmiBlitz3.ab3@22700> JMP (A0)
00032182 <AmiBlitz3.ab3@22703> BRA.w JL_0_D128
00032186 <AmiBlitz3.ab3@22707>   CMP.w #$1,D0
0003218A <AmiBlitz3.ab3@22708>    BLT.w JL_0_D146
0003218E <AmiBlitz3.ab3@22709>   CMP.w #$0,D0
00032192 <AmiBlitz3.ab3@22710>    BGT.w JL_0_D146
00032194 <AmiBlitz3.ab3@22711>   ADD.w D0,D0
00032196 <AmiBlitz3.ab3@22712>   ADD.w D0,D0
0003219A <AmiBlitz3.ab3@22713>   MOVEA.l JL_0_D146(PC,D0.W),A0
0003219C <AmiBlitz3.ab3@22716>   JSR (A0)
000321A0 <AmiBlitz3.ab3@22719> BRA.w JL_0_D146
000321A4 <AmiBlitz3.ab3@22723>   CMP.w #$1,D0
000321A8 <AmiBlitz3.ab3@22724>    BLT.w JL_0_D168
000321AC <AmiBlitz3.ab3@22725>   CMP.w #$0,D0
000321B0 <AmiBlitz3.ab3@22726>    BGT.w JL_0_D168
000321B2 <AmiBlitz3.ab3@22727>   ADD.w D0,D0
000321B4 <AmiBlitz3.ab3@22728>   ADD.w D0,D0
000321B8 <AmiBlitz3.ab3@22729>   MOVEA.l JL_0_D168(PC,D0.W),A0
000321BC <AmiBlitz3.ab3@22732>   MOVE.w #$6753,-(A7)                                      ;#'gS' ;for runtime error checking!
000321BE <AmiBlitz3.ab3@22735>    JSR (A0)
000321C2 <AmiBlitz3.ab3@22738> BRA.w JL_0_D168
000321C4 <AmiBlitz3.ab3@22741> labcnt:   Ds.w 1
000321C6 <AmiBlitz3.ab3@22748>   MOVEQ.l #$02,D2
000321CA <AmiBlitz3.ab3@22749>    BSR.w bakeval
000321CE <AmiBlitz3.ab3@22750>   LEA JL_0_D10E(PC),A0
000321D2 <AmiBlitz3.ab3@22751>   LEA JL_0_D12C(PC),A1
000321D6 <AmiBlitz3.ab3@22752>   MOVE.w #$001A,D1
000321DA <AmiBlitz3.ab3@22753>   CMP.w #-$7FFB,D0
000321DE <AmiBlitz3.ab3@22754>    BEQ.w JL_0_D1B6
000321E2 <AmiBlitz3.ab3@22755>   CMP.w #-$7FFA,D0
000321E6 <AmiBlitz3.ab3@22756>    BNE.w JUMP_syntaxerr
000321EA <AmiBlitz3.ab3@22757>   LEA JL_0_D12C(PC),A0
000321EE <AmiBlitz3.ab3@22758>   LEA JL_0_D14A(PC),A1
000321F2 <AmiBlitz3.ab3@22759>   MOVE.w #$001A,D1
000321F8 <AmiBlitz3.ab3@22760>   TST.b debugmode
000321FC <AmiBlitz3.ab3@22761>    BEQ.b JL_0_D1B6
00032202 <AmiBlitz3.ab3@22762>    JSR chkstak
00032206 <AmiBlitz3.ab3@22763>   LEA JL_0_D14A(PC),A0
0003220A <AmiBlitz3.ab3@22764>   LEA labcnt(PC),A1
0003220E <AmiBlitz3.ab3@22765>   MOVE.w #$001E,D1
00032210 <AmiBlitz3.ab3@22768>   MOVE.w D1,-(A7)
00032216 <AmiBlitz3.ab3@22769>   MOVE.l destpointer,-(A7)                                 ;for when we know number of labels!
0003221A <AmiBlitz3.ab3@22770>    BSR.w pokecode
00032220 <AmiBlitz3.ab3@22771>   CLR.w labcnt
00032226 <AmiBlitz3.ab3@22776>    JSR get1bytemain
0003222C <AmiBlitz3.ab3@22777>   SUBQ.l #2,destpointer                                    ;for makealab!
00032230 <AmiBlitz3.ab3@22778>    BSR.w JL_0_AE22
00032236 <AmiBlitz3.ab3@22779>   ADDQ.l #2,destpointer
0003223C <AmiBlitz3.ab3@22780>    JSR addoff
00032240 <AmiBlitz3.ab3@22781>   MOVE.l $8(A2),D1
00032244 <AmiBlitz3.ab3@22782>    BSR.w writelong
0003224A <AmiBlitz3.ab3@22783>   ADDQ.w #1,labcnt
00032250 <AmiBlitz3.ab3@22784>    JSR reget
00032254 <AmiBlitz3.ab3@22785>   CMP.w #$2C,D0
00032258 <AmiBlitz3.ab3@22786>    BEQ.w JL_0_D1C8
0003225A <AmiBlitz3.ab3@22787>   MOVEA.l (A7)+,A0
0003225C <AmiBlitz3.ab3@22788>   MOVE.w (A7)+,D2
00032262 <AmiBlitz3.ab3@22789>   MOVE.w dontwrite,D1
00032266 <AmiBlitz3.ab3@22790>    BNE.w JL_0_D21A
0003226A <AmiBlitz3.ab3@22791>   MOVE.w labcnt(PC),D1
0003226E <AmiBlitz3.ab3@22792>   MOVE.w D1,$A(A0)
00032270 <AmiBlitz3.ab3@22793>   ADD.w D1,D1
00032272 <AmiBlitz3.ab3@22794>   ADD.w D1,D1
00032274 <AmiBlitz3.ab3@22795>   ADDQ.w #2,D1
00032278 <AmiBlitz3.ab3@22796>   MOVE.w D1,$2(A0,D2.W)
0003227A <AmiBlitz3.ab3@22799> RTS
00032280 <AmiBlitz3.ab3@22803>   TST.b debugmode
00032284 <AmiBlitz3.ab3@22804>    BEQ.w JL_0_D236
0003228A <AmiBlitz3.ab3@22805>    JSR chkstak
00032290 <AmiBlitz3.ab3@22806>   MOVE.l AL_0_D162,D1
00032294 <AmiBlitz3.ab3@22807>    BSR.w writelong
0003229A <AmiBlitz3.ab3@22809>   MOVE.w gosubcode,D1
0003229E <AmiBlitz3.ab3@22810> BRA.w JL_0_D246
000322A4 <AmiBlitz3.ab3@22814>   MOVE.w gotocode,D1
000322A6 <AmiBlitz3.ab3@22817>   MOVE.w D1,-(A7)
000322AA <AmiBlitz3.ab3@22818>    BSR.w JL_0_AE22
000322AC <AmiBlitz3.ab3@22819>   MOVE.w (A7)+,D1
000322B0 <AmiBlitz3.ab3@22820>    BSR.w writeword
000322B6 <AmiBlitz3.ab3@22821>    JSR addoff
000322BA <AmiBlitz3.ab3@22822>   MOVE.l $8(A2),D1
000322BE <AmiBlitz3.ab3@22823> BRA.w writelong
000322C4 <AmiBlitz3.ab3@22827>   MOVE.w proceduremode,D1
000322C8 <AmiBlitz3.ab3@22828>    BEQ.w JUMP_badpenderr
000322CC <AmiBlitz3.ab3@22829>   MOVE.w #$4EF9,D1
000322D0 <AmiBlitz3.ab3@22830>    BSR.w writeword
000322D6 <AmiBlitz3.ab3@22831>    JSR addoff
000322DC <AmiBlitz3.ab3@22832>   MOVEA.l _execbase,A6
000322DE <AmiBlitz3.ab3@22833>   MOVEQ.l #$08,D0
000322E0 <AmiBlitz3.ab3@22834>   MOVEQ.l #$01,D1
000322E6 <AmiBlitz3.ab3@22836>   MOVE.l mempool,a0
000322EA <AmiBlitz3.ab3@22837>   JSR _AllocPooled(a6)
000322EC <AmiBlitz3.ab3@22838>   MOVEA.l D0,A0
000322F2 <AmiBlitz3.ab3@22839>   MOVE.l firstpend,(A0)
000322F8 <AmiBlitz3.ab3@22840>   MOVE.l A0,firstpend
00032300 <AmiBlitz3.ab3@22841>   MOVE.l destpointer,$4(A0)
00032304 <AmiBlitz3.ab3@22842> BRA.w writelong
00032308 <AmiBlitz3.ab3@22846>   BSR.w do_AsmExit
0003230E <AmiBlitz3.ab3@22847> JMP get1bytemain
00032316 <AmiBlitz3.ab3@22851>   MOVE.b #1,nostringopt
0003231A <AmiBlitz3.ab3@22852>   MOVEM.l a0/a1/d1,-(a7)
00032320 <AmiBlitz3.ab3@22853>   MOVEA.l currentfunction,A0
00032326 <AmiBlitz3.ab3@22854>     CMP.l #0,a0
0003232A <AmiBlitz3.ab3@22855>     BNE 'l1
00032330 <AmiBlitz3.ab3@22856>     JMP errorasmexit
00032332 <AmiBlitz3.ab3@22857> 'l1 MOVEQ.l #$00,D2
00032336 <AmiBlitz3.ab3@22858>   MOVE.b $5(A0),D2
0003233A <AmiBlitz3.ab3@22859>   BSR.w eval
00032340 <AmiBlitz3.ab3@22861>   MOVEA.l currentfunction,A0
00032344 <AmiBlitz3.ab3@22862>   MOVE.l funcstruct_returntype(a0),a0
0003234A <AmiBlitz3.ab3@22863>   CMP.l #0,a0
0003234E <AmiBlitz3.ab3@22864>   BEQ 'isstatement
00032356 <AmiBlitz3.ab3@22865>   CMP.l #$100,4(a0)
0003235A <AmiBlitz3.ab3@22866>   BLT.w 'isvar
0003235C <AmiBlitz3.ab3@22867>   MOVE.l a2,a1
00032362 <AmiBlitz3.ab3@22868>   TST.l typetocast
00032366 <AmiBlitz3.ab3@22869>   BEQ 'nocast
0003236C <AmiBlitz3.ab3@22870>   MOVE.l typetocast,a1
0003236E <AmiBlitz3.ab3@22871> 'nocast  CMP.l a0,a1
00032372 <AmiBlitz3.ab3@22872>   BEQ 'ok
00032378 <AmiBlitz3.ab3@22873>   CLR.l typetocast
0003237E <AmiBlitz3.ab3@22874>   MOVE.l lasttoken,d1
00032382 <AmiBlitz3.ab3@22875>   CMP.w #$b581,d1                   ; ok, when token for null
00032386 <AmiBlitz3.ab3@22876>   BEQ 'isnull
0003238C <AmiBlitz3.ab3@22877> 'error  JMP errorconvertreturntype
00032390 <AmiBlitz3.ab3@22884>   MOVEM.l (a7)+,a0/a1/d1
00032394 <AmiBlitz3.ab3@22885> BRA.w do_AsmExit
0003239A <AmiBlitz3.ab3@22887> error_convert_types2 JMP error_convert_types
000323A0 <AmiBlitz3.ab3@22900>   TST.b debugmode
000323A4 <AmiBlitz3.ab3@22901>    BEQ.w JL_0_D2CA
000323A8 <AmiBlitz3.ab3@22902>   MOVE.w #$C305,D1
000323AC <AmiBlitz3.ab3@22903> BRA.w Atokejsr
000323B0 <AmiBlitz3.ab3@22906>   MOVE.w #$4E75,D1
000323B4 <AmiBlitz3.ab3@22907> BRA.w writeword
000323B8 <AmiBlitz3.ab3@22910> localslist:  Ds.l 1                                        ;all locals for procs.;??Looks like obsovled data??
000323BC <AmiBlitz3.ab3@22911> proclocals:  Ds.l 1                                        ;for debugga!
000323BE <AmiBlitz3.ab3@22912> procnum:     Ds.w 1
000323C0 <AmiBlitz3.ab3@22913> procnum2:    Ds.w 1
000323C4 <AmiBlitz3.ab3@22914> prolineat:   Ds.l 1
000323CA <AmiBlitz3.ab3@22918>    TST.w proceduremode
000323CE <AmiBlitz3.ab3@22919>    BGT JUMP_sreterr
000323D2 <AmiBlitz3.ab3@22920>    CMP.w #-$7FF9,D0
000323D6 <AmiBlitz3.ab3@22921>    BEQ.w JL_0_D29C
000323D8 <AmiBlitz3.ab3@22922>    MOVEQ.l #-$01,D1
000323DC <AmiBlitz3.ab3@22923> BRA.w do_function2
000323E2 <AmiBlitz3.ab3@22926> JMP sreterr
000323E8 <AmiBlitz3.ab3@22930>   CLR.b skipfunc
000323EE <AmiBlitz3.ab3@22931>   TST.l unusedfunc
000323F2 <AmiBlitz3.ab3@22932>   BEQ 'ex
000323F6 <AmiBlitz3.ab3@22933>   MOVEM.l d0-d7/a0-a6,-(a7)
000323FC <AmiBlitz3.ab3@22934>   MOVE.l unusedfunc,d1
00032402 <AmiBlitz3.ab3@22935>   LEA ptr_parameterstore,a5
00032404 <AmiBlitz3.ab3@22938>   MOVE.l d1,a0
00032408 <AmiBlitz3.ab3@22939>   LEA 12(a0),a2
0003240A <AmiBlitz3.ab3@22940>   MOVE.l a5,a1
0003240C <AmiBlitz3.ab3@22942>   CMPM.b (a1)+,(a2)+
00032410 <AmiBlitz3.ab3@22943>   BNE 'neq
00032412 <AmiBlitz3.ab3@22944>   TST.b (a2)
00032416 <AmiBlitz3.ab3@22945>   BNE 'ch
00032418 <AmiBlitz3.ab3@22946>   TST.b (a1)
0003241C <AmiBlitz3.ab3@22947>   BNE 'neq
00032424 <AmiBlitz3.ab3@22948>   MOVE.b #1,skipfunc
00032428 <AmiBlitz3.ab3@22949> BRA 'out
0003242A <AmiBlitz3.ab3@22952>   MOVE.l (a0),d1
0003242E <AmiBlitz3.ab3@22953>   BNE 'ag
00032432 <AmiBlitz3.ab3@22956>   MOVEM.l (a7)+,d0-d7/a0-a6
00032434 <AmiBlitz3.ab3@22959> RTS
0003243A <AmiBlitz3.ab3@22963> JMP dupprocerr
00032440 <AmiBlitz3.ab3@22966> JMP illprocperr
00032448 <AmiBlitz3.ab3@22973>   CMP.w #-1,proceduremode                                  ;was JUMP_sreterr_2
0003244C <AmiBlitz3.ab3@22974>    BEQ JUMP_sreterr
00032450 <AmiBlitz3.ab3@22975>   CMP.w #-$7FF9,D0
00032454 <AmiBlitz3.ab3@22976>    BEQ.w do_function_return
0003245E <AmiBlitz3.ab3@22979>   MOVE.w oldqflag,instringon
00032464 <AmiBlitz3.ab3@22980>   MOVEA.l lastsourcepos,A5
0003246A <AmiBlitz3.ab3@22981>   JSR getfunctionreturntype
00032470 <AmiBlitz3.ab3@22982>   JSR get1bytemain
00032476 <AmiBlitz3.ab3@22985>   TST.b declare
0003247A <AmiBlitz3.ab3@22986>   BEQ 'l1
00032482 <AmiBlitz3.ab3@22987>   MOVE.b #1,nowdeclare
00032488 <AmiBlitz3.ab3@22990>   JSR errchx                                           ;writejumpoverfunction
0003248E <AmiBlitz3.ab3@22993>   CLR.b fastfunc
00032498 <AmiBlitz3.ab3@22994>   MOVE.l firstiff,firstiffstore
000324A0 <AmiBlitz3.ab3@22995>   CMP.l #"FAST",-1(a5)
000324A4 <AmiBlitz3.ab3@22996>   BNE 'nofast
000324AA <AmiBlitz3.ab3@22997>   CMP.b #" ",3(a5)
000324AE <AmiBlitz3.ab3@22998>   BNE 'nofast
000324B0 <AmiBlitz3.ab3@22999>   ADDQ.l #3,a5
000324B4 <AmiBlitz3.ab3@23002>     CMP.b #" ",(a5)
000324B8 <AmiBlitz3.ab3@23003>      BNE 'x1
000324BA <AmiBlitz3.ab3@23004>     ADDQ #1,a5
000324BE <AmiBlitz3.ab3@23005> BRA 'x2
000324C4 <AmiBlitz3.ab3@23008>   MOVE.l a5,lastsourcepos
000324CC <AmiBlitz3.ab3@23009>   MOVE.b #1,fastfunc
000324D4 <AmiBlitz3.ab3@23012>   CMP.l #"NOOP",-1(a5)                                     ;compile 3* so its deactivate
000324D8 <AmiBlitz3.ab3@23013> BRA 'noopt
000324DE <AmiBlitz3.ab3@23015>   CMP.w #"T ",3(a5)                                        ;??Looks like dead code??
000324E2 <AmiBlitz3.ab3@23016>   BNE 'noopt
000324E4 <AmiBlitz3.ab3@23017>   ADDQ.l #4,a5
000324E8 <AmiBlitz3.ab3@23020>     CMP.b #" ",(a5)
000324EC <AmiBlitz3.ab3@23021>      BNE 'x1b
000324EE <AmiBlitz3.ab3@23022>     ADDQ #1,a5
000324F2 <AmiBlitz3.ab3@23023> BRA 'x2b
000324F8 <AmiBlitz3.ab3@23026>   MOVE.l a5,lastsourcepos
000324FE <AmiBlitz3.ab3@23028>   JSR makename2
00032502 <AmiBlitz3.ab3@23029> BRA 'l1
00032508 <AmiBlitz3.ab3@23033>   JSR makename2
0003250E <AmiBlitz3.ab3@23034>   JSR checkused
00032514 <AmiBlitz3.ab3@23035>   TST.b skipfunc
00032518 <AmiBlitz3.ab3@23036>    BEQ 'l1
0003251E <AmiBlitz3.ab3@23037>   JSR skipme
00032524 <AmiBlitz3.ab3@23038>   CLR.b fastfunc
00032526 <AmiBlitz3.ab3@23039> RTS
00032530 <AmiBlitz3.ab3@23042>   MOVE.l linenumat,prolineat
00032536 <AmiBlitz3.ab3@23043>   ADDQ.w #1,procnum2
0003253E <AmiBlitz3.ab3@23044>   MOVE.w procnum2(PC),procnum
00032544 <AmiBlitz3.ab3@23045>   MOVE.w D1,proceduremode
0003254A <AmiBlitz3.ab3@23046>   CLR.w locvaroff
0003254E <AmiBlitz3.ab3@23047>   CMP.w #$7B,D0
00032552 <AmiBlitz3.ab3@23048>    BNE.w JUMP_syntaxerr
0003255A <AmiBlitz3.ab3@23049>    MOVE.b #1,infunctioncode
00032560 <AmiBlitz3.ab3@23050>   MOVEA.l tempvm,A0
00032568 <AmiBlitz3.ab3@23051>   MOVE.w $C(A0),memlibstat
0003256E <AmiBlitz3.ab3@23052>   BCLR #$7,$C(A0)                                          ;Bit out of range
00032572 <AmiBlitz3.ab3@23053>   MOVE.w #$4EF9,D1
00032576 <AmiBlitz3.ab3@23054>    BSR.w writeword
0003257C <AmiBlitz3.ab3@23055>    JSR addoff
00032580 <AmiBlitz3.ab3@23056>    BSR.w writelong
00032586 <AmiBlitz3.ab3@23057>    JSR findproc                                          ;findproc function
0003258A <AmiBlitz3.ab3@23058>    BEQ.w JUMP_dupprocerr
00032590 <AmiBlitz3.ab3@23059>    JSR addlabel
00032596 <AmiBlitz3.ab3@23060>    MOVE.b #31,$20(a2)                                      ;increase if more pars
0003259C <AmiBlitz3.ab3@23061>    MOVE.b #0,isfunc(a2)
000325A4 <AmiBlitz3.ab3@23062>    MOVE.l functionreturntype,funcstruct_returntype(a2)
000325AC <AmiBlitz3.ab3@23063>   MOVE.l destpointer,$E(A2)
000325B2 <AmiBlitz3.ab3@23064>   MOVE.l A2,currentfunction
000325B8 <AmiBlitz3.ab3@23065>   LEA nops8,A0
000325BE <AmiBlitz3.ab3@23066>   LEA dataget,A1
000325C2 <AmiBlitz3.ab3@23067>    BSR.w pokecode2
000325C8 <AmiBlitz3.ab3@23068>   TST.b debugmode
000325CC <AmiBlitz3.ab3@23069>    BEQ.b JL_0_D3AA
000325CE <AmiBlitz3.ab3@23070>   MOVEQ.l #$04,D1
000325D4 <AmiBlitz3.ab3@23071>    JSR writetrap
000325DE <AmiBlitz3.ab3@23072>   MOVE.l destpointer,proclocals
000325E2 <AmiBlitz3.ab3@23073>    BSR.w writelong
000325E6 <AmiBlitz3.ab3@23074>    BSR.w writelong
000325EA <AmiBlitz3.ab3@23077>    LEA $16(A2),A4
000325F2 <AmiBlitz3.ab3@23078>   MOVE.b proceduremode+1,$5(A2)
000325F4 <AmiBlitz3.ab3@23079>   MOVEQ.l #$00,D6
000325F6 <AmiBlitz3.ab3@23080>   MOVEQ.l #$00,D5
000325FC <AmiBlitz3.ab3@23081>    JSR get1bytemain
00032600 <AmiBlitz3.ab3@23082>   CMP.w #$7D,D0
00032604 <AmiBlitz3.ab3@23083>    BEQ.w JL_0_D466
00032608 <AmiBlitz3.ab3@23086>    CMP.b #"@",d0
0003260C <AmiBlitz3.ab3@23087>    BNE 'l2
0003260E <AmiBlitz3.ab3@23088>    MOVE.l a0,-(a7)
00032614 <AmiBlitz3.ab3@23089>    MOVE.l currentfunction,a0
0003261A <AmiBlitz3.ab3@23090>    CMP.b #31,$20(a0)                                       ;increase if morepars
0003261E <AmiBlitz3.ab3@23091>    BNE 'l1
00032622 <AmiBlitz3.ab3@23092>    MOVE.b d6,$20(a0)                                       ;increase if morepar
00032628 <AmiBlitz3.ab3@23095>    JSR get1bytemain
0003262A <AmiBlitz3.ab3@23096>    MOVE.l (a7)+,a0
0003262E <AmiBlitz3.ab3@23099>    BSR.w getparameter
00032632 <AmiBlitz3.ab3@23100>    BSR.w JL_0_8E3C
0003263A <AmiBlitz3.ab3@23101>   CMPI.l #$7,$4(A2)
0003263E <AmiBlitz3.ab3@23102>    BNE.w JL_0_D3F6
00032644 <AmiBlitz3.ab3@23103>   LEA stbuff,A0
00032646 <AmiBlitz3.ab3@23104>   MOVE.w D5,D1
00032648 <AmiBlitz3.ab3@23105>   LSL.w #2,D1
0003264C <AmiBlitz3.ab3@23106>   MOVE.w D6,$0(A0,D1.W)
00032652 <AmiBlitz3.ab3@23107>   MOVE.w $4(A3),$2(A0,D1.W)
00032654 <AmiBlitz3.ab3@23108>   ADDQ.w #1,D5
00032656 <AmiBlitz3.ab3@23109>   MOVEQ.l #$07,D2
0003265A <AmiBlitz3.ab3@23110> BRA.w JL_0_D442
00032660 <AmiBlitz3.ab3@23113> JMP toovarerr
00032664 <AmiBlitz3.ab3@23116>   MOVE.w #$2940,D1
00032666 <AmiBlitz3.ab3@23117>   MOVEQ.l #$03,D2
0003266E <AmiBlitz3.ab3@23118>   BTST #$0,flagmask+1
00032672 <AmiBlitz3.ab3@23119>    BNE.w JL_0_D430
0003267A <AmiBlitz3.ab3@23120>   CMPI.l #$100,$4(A2)
0003267E <AmiBlitz3.ab3@23121>    BCC.w JUMP_illprocperr
00032682 <AmiBlitz3.ab3@23122>   MOVE.w $6(A2),D2
00032686 <AmiBlitz3.ab3@23123>   CMP.w #$2,D2
0003268A <AmiBlitz3.ab3@23124>    BHI.w JL_0_D430
0003268E <AmiBlitz3.ab3@23125>    BEQ.w JL_0_D42C
00032692 <AmiBlitz3.ab3@23126>   EORI.w #$3000,D1
00032696 <AmiBlitz3.ab3@23127> BRA.w JL_0_D430
0003269C <AmiBlitz3.ab3@23130> JMP more6pard
000326A0 <AmiBlitz3.ab3@23133>   ORI.w #$1000,D1
000326A2 <AmiBlitz3.ab3@23136>   OR.w D6,D1
000326A8 <AmiBlitz3.ab3@23137>   TST.b fpu
000326AC <AmiBlitz3.ab3@23138>   BEQ 'nofpu
000326B0 <AmiBlitz3.ab3@23139>   CMP.b #5,d2
000326B4 <AmiBlitz3.ab3@23140>   BNE 'nofpu
000326B8 <AmiBlitz3.ab3@23141>   CMP.w #6,d6
000326BC <AmiBlitz3.ab3@23142>   BLT 'l10a
000326C2 <AmiBlitz3.ab3@23143>   CMP.l #newtype_double,a2
000326C6 <AmiBlitz3.ab3@23144>   BEQ JUMP_more6pard
000326CA <AmiBlitz3.ab3@23145> BRA 'nofpu
000326D0 <AmiBlitz3.ab3@23148>   MOVE.l #$f22c6400,d1
000326D4 <AmiBlitz3.ab3@23149>   MOVEM.l d0/a4,-(a7)
000326D6 <AmiBlitz3.ab3@23150>   MOVE.l d6,d0
000326D8 <AmiBlitz3.ab3@23151>   ASL.l #7,d0
000326DA <AmiBlitz3.ab3@23152>   OR.w d0,d1
000326E0 <AmiBlitz3.ab3@23153>   CMP.l #newtype_double,a2
000326E4 <AmiBlitz3.ab3@23154>   BNE 'l1
000326EA <AmiBlitz3.ab3@23155>   OR.l #$1000,d1
000326EE <AmiBlitz3.ab3@23158>   BSR writelong
000326F2 <AmiBlitz3.ab3@23159>   MOVE.w 4(a3),d1
000326F6 <AmiBlitz3.ab3@23160>   BSR writeword
000326FA <AmiBlitz3.ab3@23161>   MOVEM.l (a7)+,a4/d0
000326FE <AmiBlitz3.ab3@23162> BRA JL_0_D442
00032700 <AmiBlitz3.ab3@23165>   MOVE.l A4,-(A7)
00032704 <AmiBlitz3.ab3@23166>    CMP.w #6,d6
00032708 <AmiBlitz3.ab3@23167>    BLT 'l10
0003270C <AmiBlitz3.ab3@23168>    MOVE.w #$c500-4,d1                                      ;savetemp+regnum
0003270E <AmiBlitz3.ab3@23169>    ADD.w d6,d1
00032714 <AmiBlitz3.ab3@23170>    JSR Atokejsr
0003271A <AmiBlitz3.ab3@23171>    TST.w dontwrite
0003271E <AmiBlitz3.ab3@23172>    BNE 'l10
00032724 <AmiBlitz3.ab3@23173>    MOVE.l data1start,d1
0003272A <AmiBlitz3.ab3@23174>    MOVE.l destpointer,a4
0003272E <AmiBlitz3.ab3@23175>    ADD.l d1,-6(a4)
00032734 <AmiBlitz3.ab3@23176>    MOVE.l destpointer,d1
00032736 <AmiBlitz3.ab3@23177>    SUBQ.l #6,d1
0003273C <AmiBlitz3.ab3@23178>    SUB.l destbufferstart,d1
0003273E <AmiBlitz3.ab3@23180>    MOVE.l d2,-(a7)
00032740 <AmiBlitz3.ab3@23181>    MOVE.l d1,d2
00032746 <AmiBlitz3.ab3@23182>    JSR addhunkoffset                                       ;move.l $0,-x(a4)
00032748 <AmiBlitz3.ab3@23183>    MOVE.l (a7)+,d2
0003274E <AmiBlitz3.ab3@23184>    MOVE.l destpointer,a4
00032752 <AmiBlitz3.ab3@23185>    CMP.w #2,d2
00032756 <AmiBlitz3.ab3@23186>    BNE 'nw1
0003275C <AmiBlitz3.ab3@23188>    MOVE.w #$3979,-8(a4)                                    ;move.w $0,-x(a4)
00032764 <AmiBlitz3.ab3@23189>    ADD.l #2,-6(a4)
00032768 <AmiBlitz3.ab3@23192>    CMP.w #1,d2
0003276C <AmiBlitz3.ab3@23193>    BNE 'nb
00032772 <AmiBlitz3.ab3@23194>    MOVE.w #$1979,-8(a4)                                    ;move.b $0,-x(a4)
0003277A <AmiBlitz3.ab3@23195>    ADD.l #3,-6(a4)
00032780 <AmiBlitz3.ab3@23198>    MOVE.w $4(a3),-2(a4)
00032784 <AmiBlitz3.ab3@23199> BRA 'ne1
00032788 <AmiBlitz3.ab3@23202>   BSR.w writeword                                          ;write storeparameter
0003278C <AmiBlitz3.ab3@23205>   MOVE.w $4(A3),D1
00032790 <AmiBlitz3.ab3@23206>    BSR.w writeword
00032792 <AmiBlitz3.ab3@23209>   MOVEA.l (A7)+,A4
00032798 <AmiBlitz3.ab3@23212>   CLR.l functionreturntype
0003279A <AmiBlitz3.ab3@23213>   ADDQ.w #1,D6
0003279E <AmiBlitz3.ab3@23214>   CMP.w #11,D6                                             ;max function parameters
000327A2 <AmiBlitz3.ab3@23215>    BCC.w JUMP_toovarerr
000327A8 <AmiBlitz3.ab3@23216>   MOVE.l currentfunction,a0
000327AC <AmiBlitz3.ab3@23217>   MOVE.l a2,funcstruct_parametertype-4(a0,d6*4)                                    ;-4 because d6 is increment before
000327AE <AmiBlitz3.ab3@23218>   MOVE.b D2,(A4)+
000327B2 <AmiBlitz3.ab3@23219>   CMP.w #$2C,D0
000327B6 <AmiBlitz3.ab3@23220>    BNE.w JL_0_D45E
000327BC <AmiBlitz3.ab3@23221>    JSR get1bytemain
000327C0 <AmiBlitz3.ab3@23233> BRA.w JL_0_D3C6
000327C4 <AmiBlitz3.ab3@23236>   CMP.w #$7D,D0
000327C8 <AmiBlitz3.ab3@23237>    BNE.w JUMP_syntaxerr
000327CE <AmiBlitz3.ab3@23240>   MOVEA.l currentfunction,A2
000327D0 <AmiBlitz3.ab3@23241>   LSL.w #4,D5
000327D2 <AmiBlitz3.ab3@23242>   OR.w D5,D6
000327D6 <AmiBlitz3.ab3@23243>   MOVE.b D6,$4(A2)
000327D8 <AmiBlitz3.ab3@23244>   LSR.w #4,D6
000327DC <AmiBlitz3.ab3@23245>    BEQ.w JL_0_D4C4
000327E2 <AmiBlitz3.ab3@23246>   LEA stbuff,A0
000327E4 <AmiBlitz3.ab3@23247>   SUBQ.w #1,D6
000327E6 <AmiBlitz3.ab3@23250>     MOVE.w D6,D1                                           ;function stringpars
000327E8 <AmiBlitz3.ab3@23251>     LSL.w #2,D1                                            ;stringsize was 2
000327EA <AmiBlitz3.ab3@23253>       LSL.w #1,d1
000327EC <AmiBlitz3.ab3@23254>       ADDQ.w #4,d1
000327EE <AmiBlitz3.ab3@23256>     ADDQ.w #8,D1
000327F4 <AmiBlitz3.ab3@23257>     MOVE.w D1,funcst+2
000327FA <AmiBlitz3.ab3@23258>     MOVE.l funcst,D1
000327FE <AmiBlitz3.ab3@23259>     BSR.w writelong
00032800 <AmiBlitz3.ab3@23260>     MOVE.w (A0)+,D1
00032804 <AmiBlitz3.ab3@23261>     CMP.b #5,d1
00032808 <AmiBlitz3.ab3@23262>     BLE 's1
0003280C <AmiBlitz3.ab3@23263>     MOVE.w #$266c,d1                                       ;native move.l 4(a4),a3
00032810 <AmiBlitz3.ab3@23264>     BSR writeinstruction
00032812 <AmiBlitz3.ab3@23265>     MOVE.w D6,D1                                           ;function stringpars
00032814 <AmiBlitz3.ab3@23266>     LSL.w #2,D1                                            ;stringsize was 2
00032816 <AmiBlitz3.ab3@23268>       LSL.w #1,d1
00032818 <AmiBlitz3.ab3@23270>     ADDQ.w #8,D1
0003281C <AmiBlitz3.ab3@23271>     BSR writeword
00032820 <AmiBlitz3.ab3@23272>   BRA 's2
00032826 <AmiBlitz3.ab3@23275>     OR.w movedna3,D1
0003282A <AmiBlitz3.ab3@23276>      BSR.w writeword
00032830 <AmiBlitz3.ab3@23279>     MOVE.w (A0)+,least+2
00032836 <AmiBlitz3.ab3@23280>     MOVE.l least,D1
0003283A <AmiBlitz3.ab3@23281>      BSR.w writelong
0003283C <AmiBlitz3.ab3@23282>     MOVE.l A0,-(A7)
00032840 <AmiBlitz3.ab3@23283>     MOVE.w #$C700,D1
00032844 <AmiBlitz3.ab3@23284>      BSR.w Atokejsr
00032846 <AmiBlitz3.ab3@23285>     MOVEA.l (A7)+,A0
0003284A <AmiBlitz3.ab3@23286>   DBF D6,JL_0_D482
00032850 <AmiBlitz3.ab3@23289> JMP get1bytemain
00032856 <AmiBlitz3.ab3@23293>   MOVE.w dontwrite,D1
0003285A <AmiBlitz3.ab3@23294>    BNE.w JL_0_D4F6
00032860 <AmiBlitz3.ab3@23295>   MOVE.l destpointer,-(A7)
00032866 <AmiBlitz3.ab3@23296>   MOVE.l A0,destpointer
0003286C <AmiBlitz3.ab3@23297>   MOVE.l linksize,D1
00032870 <AmiBlitz3.ab3@23298>    BSR.w writelong                                         ;writefunctions jumppos
00032876 <AmiBlitz3.ab3@23299>    TST.b fastfunc
0003287A <AmiBlitz3.ab3@23300>    BNE 'skip
0003287E <AmiBlitz3.ab3@23301>   MOVE.w #$CC00,D1
00032882 <AmiBlitz3.ab3@23302>    BSR.w tokejsr2                                          ;write clearvars
00032888 <AmiBlitz3.ab3@23305>   MOVE.l (A7)+,destpointer
0003288A <AmiBlitz3.ab3@23308> RTS
00032890 <AmiBlitz3.ab3@23312>   MOVEA.l currentfunction,A2
00032894 <AmiBlitz3.ab3@23313>   MOVEA.l $E(A2),A0
00032898 <AmiBlitz3.ab3@23314>   MOVE.w $6(A2),D1
0003289C <AmiBlitz3.ab3@23315>    BEQ.w JL_0_D538
000328A2 <AmiBlitz3.ab3@23316>   MOVE.w D1,linksize+2
000328A6 <AmiBlitz3.ab3@23317>   MOVE.w $8(A2),D1                                         ;check if function memalloc need
000328AA <AmiBlitz3.ab3@23318>    BNE.w JL_0_D522
000328AC <AmiBlitz3.ab3@23319>   ADDQ.w #6,A0
000328B0 <AmiBlitz3.ab3@23320>   MOVE.l A0,$E(A2)
000328B4 <AmiBlitz3.ab3@23321> BRA.w JL_0_D4C8
000328B6 <AmiBlitz3.ab3@23324>   MOVE.l A0,-(A7)
000328BA <AmiBlitz3.ab3@23325>    BSR.w JL_0_D4C8
000328BC <AmiBlitz3.ab3@23326>   MOVEA.l (A7)+,A0
000328C0 <AmiBlitz3.ab3@23327>   LEA $A(A0),A0
000328C6 <AmiBlitz3.ab3@23328>   MOVEA.l currentfunction,A2
000328CA <AmiBlitz3.ab3@23329> BRA.w JL_0_D54A
000328CE <AmiBlitz3.ab3@23332>   MOVE.w $8(A2),D1
000328D2 <AmiBlitz3.ab3@23333>    BNE.w JL_0_D54A
000328D6 <AmiBlitz3.ab3@23334>   LEA $10(A0),A0
000328DA <AmiBlitz3.ab3@23335>   MOVE.l A0,$E(A2)
000328DC <AmiBlitz3.ab3@23336> RTS
000328E2 <AmiBlitz3.ab3@23340> JMP errormsg_nofast
000328E8 <AmiBlitz3.ab3@23343>    MOVE.w dontwrite,D1                                     ;writeallocmem for functions (after releasemem called)
000328EC <AmiBlitz3.ab3@23344>    BNE.w JL_0_D580
000328F2 <AmiBlitz3.ab3@23345>    TST.b fastfunc
000328F6 <AmiBlitz3.ab3@23346>    BNE JUMP_errormsg_nofast
000328FC <AmiBlitz3.ab3@23347>   MOVE.l destpointer,-(A7)
00032902 <AmiBlitz3.ab3@23348>   MOVE.l A0,destpointer
00032906 <AmiBlitz3.ab3@23349>   MOVE.w #$4EB9,D1
0003290A <AmiBlitz3.ab3@23350>    BSR.w writeword
00032910 <AmiBlitz3.ab3@23351>    JSR addoff
00032914 <AmiBlitz3.ab3@23352>    BSR.w writelong
00032916 <AmiBlitz3.ab3@23353>   MOVEA.l (A7)+,A0
0003291C <AmiBlitz3.ab3@23354>   MOVEA.l destpointer,A1
0003291E <AmiBlitz3.ab3@23355>   MOVE.l A0,-(A1)
00032924 <AmiBlitz3.ab3@23356>   MOVE.l A0,destpointer
00032928 <AmiBlitz3.ab3@23359>   MOVE.w $8(A2),D4
0003292C <AmiBlitz3.ab3@23360>    BPL.w JL_0_D59E
00032930 <AmiBlitz3.ab3@23361>   MOVE.w #$C004,D1
00032934 <AmiBlitz3.ab3@23362>    BSR.w tokejsr2
0003293A <AmiBlitz3.ab3@23363>   MOVEA.l currentfunction,A2
0003293E <AmiBlitz3.ab3@23364>   MOVE.w $8(A2),D4
00032942 <AmiBlitz3.ab3@23365>   ANDI.w #$7FFF,D4
00032946 <AmiBlitz3.ab3@23368>    BEQ.w JL_0_D5E0
0003294A <AmiBlitz3.ab3@23369>   MOVE.b $4(A2),D1
0003294E <AmiBlitz3.ab3@23370>   ANDI.w #$F,D1
00032950 <AmiBlitz3.ab3@23371>   MOVE.w D1,-(A7)
00032954 <AmiBlitz3.ab3@23372>   CMP.w #$5,D1
00032958 <AmiBlitz3.ab3@23373>    BCS.w JL_0_D5BC
0003295C <AmiBlitz3.ab3@23374>   MOVE.w #$2F04,D1
00032960 <AmiBlitz3.ab3@23375>    BSR.w writeword
00032966 <AmiBlitz3.ab3@23378>   MOVE.l locdatast,D3
0003296C <AmiBlitz3.ab3@23379>    JSR datastart
00032970 <AmiBlitz3.ab3@23380>   MOVE.w #$C501,D1
00032974 <AmiBlitz3.ab3@23381>    BSR.w tokejsr2
00032976 <AmiBlitz3.ab3@23382>   MOVE.w (A7)+,D1
0003297A <AmiBlitz3.ab3@23383>   CMP.w #$5,D1
0003297E <AmiBlitz3.ab3@23384>    BCS.w JL_0_D5E0
00032982 <AmiBlitz3.ab3@23385>   MOVE.w #$281F,D1
00032986 <AmiBlitz3.ab3@23386>    BSR.w writeword
0003298A <AmiBlitz3.ab3@23388>   MOVE.w #$4E75,D1
0003298E <AmiBlitz3.ab3@23389> BRA.w writeword
00032994 <AmiBlitz3.ab3@23393>   LEA mwait,A0
0003299A <AmiBlitz3.ab3@23394>   LEA mwaitf,A1
0003299E <AmiBlitz3.ab3@23395> BRA.w pokecode
000329A4 <AmiBlitz3.ab3@23399> JMP laberr
000329A8 <AmiBlitz3.ab3@23402>   CMP.w #$2E,D0
000329AC <AmiBlitz3.ab3@23403>   BNE.w JUMP_syntaxerr
000329B2 <AmiBlitz3.ab3@23404>   JSR getparameter2
000329B6 <AmiBlitz3.ab3@23405>   BEQ.w JUMP_laberr
000329BC <AmiBlitz3.ab3@23406>   LEA newtypebase,A2
000329C2 <AmiBlitz3.ab3@23407>   JSR findtype
000329C6 <AmiBlitz3.ab3@23408>   BNE.w JL_0_D626
000329CE <AmiBlitz3.ab3@23409>   CMPI.l #MaxByte,$4(A2)
000329D2 <AmiBlitz3.ab3@23410>   BNE.w JUMP_typeerr
000329D6 <AmiBlitz3.ab3@23411> BRA.w JL_0_D62A
000329DC <AmiBlitz3.ab3@23414> JMP typeerr
000329E2 <AmiBlitz3.ab3@23417>   JSR addlabel
000329E6 <AmiBlitz3.ab3@23420>   CLR.l $4(A2)
000329EC <AmiBlitz3.ab3@23421>   MOVE.l A2,thistype
000329F2 <AmiBlitz3.ab3@23422>   CLR.l prevtype
000329F8 <AmiBlitz3.ab3@23423>   CLR.w typelen
000329FE <AmiBlitz3.ab3@23424>   CLR.w linemode
00032A04 <AmiBlitz3.ab3@23425>   JSR reget
00032A08 <AmiBlitz3.ab3@23426>   BNE.w typemode
00032A0A <AmiBlitz3.ab3@23427> RTS
00032A0E <AmiBlitz3.ab3@23430>   CMP.w #-$7FFE,D0
00032A12 <AmiBlitz3.ab3@23431>   BEQ.w JL_0_D82E
00032A1C <AmiBlitz3.ab3@23433>   MOVE.w oldqflag,instringon
00032A22 <AmiBlitz3.ab3@23434>   MOVEA.l lastsourcepos,A5
00032A24 <AmiBlitz3.ab3@23435>   MOVEQ.l #$00,D6
00032A28 <AmiBlitz3.ab3@23436>   CMP.w #$2A,D0
00032A2C <AmiBlitz3.ab3@23437>   BNE.w JL_0_D670
00032A2E <AmiBlitz3.ab3@23438>   MOVEQ.l #$01,D6
00032A34 <AmiBlitz3.ab3@23439>   JSR get1bytemain
00032A38 <AmiBlitz3.ab3@23440> BRA.w JL_0_D67E
00032A3C <AmiBlitz3.ab3@23443>   CMP.w #$40,D0
00032A40 <AmiBlitz3.ab3@23444>   BNE.w JL_0_D67E
00032A42 <AmiBlitz3.ab3@23445>   MOVEQ.l #$05,D6
00032A48 <AmiBlitz3.ab3@23446>   JSR get1bytemain
00032A4E <AmiBlitz3.ab3@23449>   MOVE.w D6,flagmask
00032A54 <AmiBlitz3.ab3@23450>   JSR getparameter2
00032A58 <AmiBlitz3.ab3@23451>   BEQ.w JUMP_syntaxerr
00032A5E <AmiBlitz3.ab3@23452>   MOVEA.l thistype,A2
00032A60 <AmiBlitz3.ab3@23453>   ADDQ.w #4,A2
00032A66 <AmiBlitz3.ab3@23454>   JSR findvariable2
00032A6A <AmiBlitz3.ab3@23455>   BEQ.w JUMP_dupofferr
00032A70 <AmiBlitz3.ab3@23456>   JSR addlabel
00032A72 <AmiBlitz3.ab3@23457>   MOVE.l A2,-(A7)
00032A76 <AmiBlitz3.ab3@23458>   CMP.w #$2E,D0
00032A7A <AmiBlitz3.ab3@23459>    BEQ.w JL_0_D6CE
00032A7E <AmiBlitz3.ab3@23460>   CMP.w #$24,D0
00032A82 <AmiBlitz3.ab3@23461>    BNE.w JL_0_D6C0
00032A88 <AmiBlitz3.ab3@23462>   MOVE.l #newtype_string,D2
00032A8E <AmiBlitz3.ab3@23463>    JSR get1bytemain
00032A92 <AmiBlitz3.ab3@23464> BRA.w JL_0_D710
00032A98 <AmiBlitz3.ab3@23467> JMP dupofferr
00032A9E <AmiBlitz3.ab3@23470>   MOVE.l prevtype,D2
00032AA2 <AmiBlitz3.ab3@23471>   BEQ.w JUMP_notypeerr
00032AA6 <AmiBlitz3.ab3@23472> BRA.w JL_0_D706
00032AAC <AmiBlitz3.ab3@23475> JMP notypeerr
00032AB2 <AmiBlitz3.ab3@23478>   JSR getparameter2
00032AB6 <AmiBlitz3.ab3@23479>    BEQ.w JUMP_syntaxerr
00032ABC <AmiBlitz3.ab3@23480>   LEA newtypebase,A2
00032AC2 <AmiBlitz3.ab3@23481>    JSR findtype
00032AC6 <AmiBlitz3.ab3@23482>    BEQ.w JL_0_D704
00032ACE <AmiBlitz3.ab3@23483>   BTST #$0,flagmask+1
00032AD2 <AmiBlitz3.ab3@23484>    BEQ.w JUMP_notypeerr
00032AD8 <AmiBlitz3.ab3@23485>   JSR addlabel
00032AE0 <AmiBlitz3.ab3@23488>   MOVE.w linenumat+2,$8(A2)
00032AE8 <AmiBlitz3.ab3@23489>   MOVE.l #MaxByte,$4(A2)
00032AEA <AmiBlitz3.ab3@23492>   MOVE.l A2,D2
00032AF0 <AmiBlitz3.ab3@23495>   CMP.l #newtype_byte,D2
00032AF4 <AmiBlitz3.ab3@23496>    BEQ.w JL_0_D71E
00032AFA <AmiBlitz3.ab3@23499>   ADDQ.w #1,typelen
00032B02 <AmiBlitz3.ab3@23500>   BCLR #$0,typelen+1
00032B04 <AmiBlitz3.ab3@23503>   MOVEQ.l #$00,D3
00032B06 <AmiBlitz3.ab3@23504>   MOVEA.l D2,A2
00032B0C <AmiBlitz3.ab3@23505>   MOVE.l A2,prevtype
00032B10 <AmiBlitz3.ab3@23506>   MOVE.w $8(A2),D3
00032B12 <AmiBlitz3.ab3@23507>   MOVEA.l (A7)+,A2
00032B16 <AmiBlitz3.ab3@23508>   MOVE.l D2,$A(A2)
00032B18 <AmiBlitz3.ab3@23509>   MOVEQ.l #$00,D4
00032B1E <AmiBlitz3.ab3@23510>   MOVE.w typelen,D4
00032B22 <AmiBlitz3.ab3@23511>   MOVE.w D4,$4(A2)
00032B2A <AmiBlitz3.ab3@23512>   BTST #$0,flagmask+1
00032B2E <AmiBlitz3.ab3@23513>    BEQ.w JL_0_D74C
00032B30 <AmiBlitz3.ab3@23514>   MOVEQ.l #$04,D3
00032B34 <AmiBlitz3.ab3@23517>   CMP.w #$5B,D0
00032B38 <AmiBlitz3.ab3@23518>    BNE.w JL_0_D782
00032B3C <AmiBlitz3.ab3@23519>   MOVEM.l D3-D4/A2,-(A7)
00032B40 <AmiBlitz3.ab3@23520>    BSR.w AJL_0_BF6E
00032B44 <AmiBlitz3.ab3@23521>   CMP.w #$5D,D0
00032B48 <AmiBlitz3.ab3@23522>    BNE.w JUMP_syntaxerr
00032B4A <AmiBlitz3.ab3@23523>   TST.w D6
00032B4E <AmiBlitz3.ab3@23524>    BNE.w JUMP_fpconerr
00032B50 <AmiBlitz3.ab3@23525>   MOVE.l D3,D1
00032B54 <AmiBlitz3.ab3@23526>   MOVEM.l (A7)+,D3-D4/A2
00032B5A <AmiBlitz3.ab3@23527>    JSR get1bytemain
00032B5E <AmiBlitz3.ab3@23528>   MOVE.w D1,$8(A2)
00032B62 <AmiBlitz3.ab3@23529>   MULU.l d1,d3                                             ;>32k fix was mulu.w
00032B6A <AmiBlitz3.ab3@23530>   ORI.w #$2,flagmask
00032B6C <AmiBlitz3.ab3@23533>   ADD.l D3,D4
00032B72 <AmiBlitz3.ab3@23536>     CMP.l #65532,d4
00032B76 <AmiBlitz3.ab3@23541>   BCC JUMP_toolongerr
00032B7E <AmiBlitz3.ab3@23542>   MOVE.w flagmask,$6(A2)
00032B84 <AmiBlitz3.ab3@23543>   MOVE.w D4,typelen
00032B86 <AmiBlitz3.ab3@23544> RTS
00032B8C <AmiBlitz3.ab3@23547> JMP badenderr
00032B92 <AmiBlitz3.ab3@23550> JMP noiferr
00032B98 <AmiBlitz3.ab3@23553> JMP toolongerr
00032B9E <AmiBlitz3.ab3@23556> JMP fpconerr
00032BA4 <AmiBlitz3.ab3@23559>   MOVE.l firstiff,D0
00032BA8 <AmiBlitz3.ab3@23560>    BEQ.w JUMP_noiferr
00032BAA <AmiBlitz3.ab3@23561>   MOVEA.l D0,A0
00032BAE <AmiBlitz3.ab3@23562>   MOVE.w $C(A0),D0
00032BB2 <AmiBlitz3.ab3@23563>   ANDI.w #$FF,D0
00032BB4 <AmiBlitz3.ab3@23564>   CMP.w D0,D1
00032BB8 <AmiBlitz3.ab3@23565>    BNE.w JUMP_badenderr
00032BBC <AmiBlitz3.ab3@23568>   CMP.w #$1,D1
00032BC0 <AmiBlitz3.ab3@23569>   BNE.w JL_0_D7D8
00032BC4 <AmiBlitz3.ab3@23570>   MOVE.w #$6000,D1
00032BCA <AmiBlitz3.ab3@23573>     TST.b fast
00032BCE <AmiBlitz3.ab3@23574>     BEQ 'l1
00032BD4 <AmiBlitz3.ab3@23575>     OR.l #$ff,d1
00032BD8 <AmiBlitz3.ab3@23579>   BSR.w writeword
00032BDE <AmiBlitz3.ab3@23580>   MOVEA.l destpointer,A1
00032BE2 <AmiBlitz3.ab3@23581>   MOVE.l $4(A0),D1
00032BE4 <AmiBlitz3.ab3@23582>   SUB.l A1,D1
00032BEA <AmiBlitz3.ab3@23585>     TST.b fast
00032BEE <AmiBlitz3.ab3@23586>     BEQ 'l2
00032BF2 <AmiBlitz3.ab3@23587>     BSR writelong
00032BF6 <AmiBlitz3.ab3@23588>   BRA JL_0_D7D8
00032BFA <AmiBlitz3.ab3@23592>   BSR.w writeword
00032BFE <AmiBlitz3.ab3@23595>   MOVEA.l $8(A0),A1                                        ;write if branch destination
00032C04 <AmiBlitz3.ab3@23596>   MOVE.l destpointer,D1
00032C06 <AmiBlitz3.ab3@23597>   SUB.l A1,D1
00032C0C <AmiBlitz3.ab3@23600>     TST.b fast
00032C10 <AmiBlitz3.ab3@23601>     BEQ 'l1
00032C12 <AmiBlitz3.ab3@23602>     ADDQ.l #4,D1
00032C18 <AmiBlitz3.ab3@23603>     MOVE.w dontwrite,D0
00032C1C <AmiBlitz3.ab3@23604>     BNE.w JL_0_D7FE
00032C20 <AmiBlitz3.ab3@23605>     MOVE.l d1,-$4(a1)
00032C24 <AmiBlitz3.ab3@23606>   BRA JL_0_D7FE
00032C26 <AmiBlitz3.ab3@23610>   ADDQ.l #2,d1
00032C2C <AmiBlitz3.ab3@23611>   TST.w dontwrite
00032C30 <AmiBlitz3.ab3@23612>   BNE JL_0_D7FE
00032C36 <AmiBlitz3.ab3@23613>   CMP.l #MinWordSgnd,D1
00032C3A <AmiBlitz3.ab3@23614>   BCC.w JUMP_bigiferr
00032C3E <AmiBlitz3.ab3@23615>   MOVE.w D1,-$2(A1)
00032C40 <AmiBlitz3.ab3@23618> RTS
00032C46 <AmiBlitz3.ab3@23621> JMP bigiferr
00032C50 <AmiBlitz3.ab3@23626>   MOVE.w oldqflag,instringon
00032C56 <AmiBlitz3.ab3@23627>   MOVEA.l lastsourcepos,A5
00032C58 <AmiBlitz3.ab3@23630>   MOVEQ.l #$01,D1
00032C5C <AmiBlitz3.ab3@23631> BRA.w JL_0_D810
00032C66 <AmiBlitz3.ab3@23635>   MOVE.w oldqflag,instringon
00032C6C <AmiBlitz3.ab3@23636>   MOVEA.l lastsourcepos,A5
00032C6E <AmiBlitz3.ab3@23639>   MOVEQ.l #$00,D1
00032C72 <AmiBlitz3.ab3@23642>   BSR.w JL_0_D79E
00032C76 <AmiBlitz3.ab3@23643>   BSR.w AJL_0_D81C
00032C7C <AmiBlitz3.ab3@23644> JMP get1bytemain
00032C82 <AmiBlitz3.ab3@23647>   MOVE.l (A0),firstiff
00032C84 <AmiBlitz3.ab3@23648>   MOVEA.l A0,A1
00032C86 <AmiBlitz3.ab3@23649>   MOVEQ.l #$0E,D0
00032C8C <AmiBlitz3.ab3@23650>   MOVEA.l _execbase,A6
00032C92 <AmiBlitz3.ab3@23651>   MOVE.l mempool,a0
00032C96 <AmiBlitz3.ab3@23652> JMP _FreePooled(A6)
00032C9C <AmiBlitz3.ab3@23656>   JSR get1bytemain
00032CA0 <AmiBlitz3.ab3@23659>   BEQ.w JL_0_D980
00032CA8 <AmiBlitz3.ab3@23660>   CMP.l #"noa7",-1(a5)
00032CAC <AmiBlitz3.ab3@23661>   BNE 'l1
00032CB2 <AmiBlitz3.ab3@23662>   JSR get1bytemain
00032CB8 <AmiBlitz3.ab3@23663>   JSR get1bytemain
00032CBE <AmiBlitz3.ab3@23664>   JSR get1bytemain
00032CC6 <AmiBlitz3.ab3@23665>   MOVE.w #$3a,lastchar
00032CCA <AmiBlitz3.ab3@23666> BRA JL_0_D980
00032CD0 <AmiBlitz3.ab3@23669>   CMP.w #"d0",-1(a5)
00032CD4 <AmiBlitz3.ab3@23670>   BNE 'l2
00032CDC <AmiBlitz3.ab3@23671>   MOVE.b #1,returncode
00032CE2 <AmiBlitz3.ab3@23672>   CLR.w lastchar
00032CE6 <AmiBlitz3.ab3@23673> BRA JL_0_D980
00032CEA <AmiBlitz3.ab3@23676>   CMP.w #$80d7,d0
00032CEE <AmiBlitz3.ab3@23677>   BNE JL_0_D836
00032CF4 <AmiBlitz3.ab3@23678>   JSR skiprest
00032CF6 <AmiBlitz3.ab3@23679> RTS
00032CFA <AmiBlitz3.ab3@23682>   BSR.w JL_0_D844
00032D00 <AmiBlitz3.ab3@23683>   JSR reget
00032D04 <AmiBlitz3.ab3@23684>   BNE.w JL_0_D836
00032D06 <AmiBlitz3.ab3@23685> RTS
00032D0A <AmiBlitz3.ab3@23688>   CMP.w #-$7FFF,D0
00032D0E <AmiBlitz3.ab3@23689>    BNE.w JL_0_D87E
00032D14 <AmiBlitz3.ab3@23690>   MOVE.w linemode,D1
00032D18 <AmiBlitz3.ab3@23691>    BNE.w JUMP_modeerr
00032D1E <AmiBlitz3.ab3@23692>   ADDQ.w #1,typelen
00032D26 <AmiBlitz3.ab3@23693>   BCLR #$0,typelen+1
00032D2C <AmiBlitz3.ab3@23694>   MOVEA.l thistype,A0
00032D34 <AmiBlitz3.ab3@23695>   MOVE.w typelen,$8(A0)
00032D3C <AmiBlitz3.ab3@23696>   MOVE.w #$FFFF,linemode
00032D42 <AmiBlitz3.ab3@23697> JMP get1bytemain
00032D48 <AmiBlitz3.ab3@23700> JMP modeerr
00032D4C <AmiBlitz3.ab3@23703>   CMP.w #-$7FF5,D0
00032D50 <AmiBlitz3.ab3@23704>    BEQ.w JL_0_D80E
00032D54 <AmiBlitz3.ab3@23705>   CMP.w #-$7FF4,D0
00032D58 <AmiBlitz3.ab3@23706>    BEQ.w JL_0_D804
00032D5C <AmiBlitz3.ab3@23707>   CMP.w #-$7FF8,D0
00032D60 <AmiBlitz3.ab3@23708>    BNE.w JL_0_D89A
00032D64 <AmiBlitz3.ab3@23711> BRA.w JL_0_D9E8
00032D6A <AmiBlitz3.ab3@23714> JMP interr3
00032D6E <AmiBlitz3.ab3@23717>   CMP.w #-$7FF7,D0
00032D72 <AmiBlitz3.ab3@23718>    BNE.w JL_0_D8C8
00032D78 <AmiBlitz3.ab3@23719>    TST.b fpu
00032D7C <AmiBlitz3.ab3@23720>    BEQ 'nof
00032D82 <AmiBlitz3.ab3@23721>    MOVEA.l currentfunction,A0
00032D88 <AmiBlitz3.ab3@23722>    CMP.l #0,a0
00032D8C <AmiBlitz3.ab3@23723>    BEQ 'nof
00032D92 <AmiBlitz3.ab3@23724>    CMP.b #5,$5(a0)
00032D96 <AmiBlitz3.ab3@23725>     BNE 'nof
00032D9C <AmiBlitz3.ab3@23726>    MOVE.l #$f23c5000,d1
00032DA0 <AmiBlitz3.ab3@23727>    BSR writelong
00032DA4 <AmiBlitz3.ab3@23728>    MOVE.w #0,d1
00032DA8 <AmiBlitz3.ab3@23729>    BSR writeword
00032DAC <AmiBlitz3.ab3@23732>   MOVE.w #$7000,D1                                         ;end function moveq #0,d0
00032DB0 <AmiBlitz3.ab3@23733>    BSR.w writeword
00032DB6 <AmiBlitz3.ab3@23734>   MOVEA.l currentfunction,A0
00032DBC <AmiBlitz3.ab3@23735>   CMP.l #0,a0
00032DC0 <AmiBlitz3.ab3@23736>   BEQ JL_0_D896
00032DC6 <AmiBlitz3.ab3@23737>   MOVE.l destpointer,d1
00032DCA <AmiBlitz3.ab3@23738>   SUB.l $e(a0),d1
00032DCE <AmiBlitz3.ab3@23739>   MOVE.l d1,isfunc+1(a0)
00032DD4 <AmiBlitz3.ab3@23740>   CMPI.b #$7,$5(A0)
00032DD8 <AmiBlitz3.ab3@23741>    BNE.w JL_0_D896
00032DDE <AmiBlitz3.ab3@23742>   MOVE.w putstlen,D1
00032DE2 <AmiBlitz3.ab3@23743>    BSR.w writeword
00032DE6 <AmiBlitz3.ab3@23744> BRA.w JL_0_D896
00032DEC <AmiBlitz3.ab3@23747> JMP interr
00032DF0 <AmiBlitz3.ab3@23750>  CMP.w #-$7FD0,D0
00032DF4 <AmiBlitz3.ab3@23751>    BNE.w JL_0_D966
00032DFA <AmiBlitz3.ab3@23752>   MOVE.w proceduremode,D1
00032DFE <AmiBlitz3.ab3@23753>    BNE.w JUMP_interr3
00032E04 <AmiBlitz3.ab3@23754>   TST.b debugmode
00032E08 <AmiBlitz3.ab3@23755>    BEQ.w JL_0_D90A
00032E0A <AmiBlitz3.ab3@23756>   MOVEQ.l #$03,D1
00032E10 <AmiBlitz3.ab3@23757>    JSR writetrap
00032E16 <AmiBlitz3.ab3@23758>   MOVE.w dontwrite,D1
00032E1A <AmiBlitz3.ab3@23759>    BNE.w JL_0_D90A
00032E20 <AmiBlitz3.ab3@23760>   MOVEA.l intcleanat,A0
00032E26 <AmiBlitz3.ab3@23761>   MOVE.l destpointer,(A0)
00032E2A <AmiBlitz3.ab3@23762>   MOVE.w #$C30C,D1
00032E2E <AmiBlitz3.ab3@23763>    BSR.w Atokejsr
00032E34 <AmiBlitz3.ab3@23766>   MOVE.w intstring,D1
00032E38 <AmiBlitz3.ab3@23767>    BEQ.w JUMP_interr
00032E3C <AmiBlitz3.ab3@23768>    BPL.w JL_0_D934
00032E42 <AmiBlitz3.ab3@23769>   MOVE.w intlevel,D1
00032E46 <AmiBlitz3.ab3@23770>   ORI.w #$7200,D1
00032E4A <AmiBlitz3.ab3@23771>    BSR.w writeword
00032E4E <AmiBlitz3.ab3@23772>   MOVE.w #$C103,D1
00032E52 <AmiBlitz3.ab3@23773>    BSR.w Atokejsr
00032E58 <AmiBlitz3.ab3@23774>   CLR.w intlevel
00032E5E <AmiBlitz3.ab3@23777>  CLR.w intstring
00032E64 <AmiBlitz3.ab3@23778>   MOVE.l intfin,D1
00032E68 <AmiBlitz3.ab3@23779>    BSR.w writelong
00032E6E <AmiBlitz3.ab3@23780>   MOVE.l #$70004E75,D1
00032E72 <AmiBlitz3.ab3@23781>    BSR.w writelong
00032E78 <AmiBlitz3.ab3@23782>   MOVE.w dontwrite,D1
00032E7C <AmiBlitz3.ab3@23783>    BNE.w JL_0_D962
00032E82 <AmiBlitz3.ab3@23784>   MOVEA.l intjmpat,A0
00032E86 <AmiBlitz3.ab3@23785>   MOVE.l destpointer(PC),(A0)
00032E8C <AmiBlitz3.ab3@23788> JMP get1bytemain
00032E90 <AmiBlitz3.ab3@23792>   CMP.w #-$7FF2,D0
00032E94 <AmiBlitz3.ab3@23793>    BEQ.w doendsel
00032E98 <AmiBlitz3.ab3@23794>   CMP.w #-$7F4C,D0
00032E9C <AmiBlitz3.ab3@23795>    BNE.w JL_0_D97C
00032EA2 <AmiBlitz3.ab3@23796> JMP doendseterr
00032EA8 <AmiBlitz3.ab3@23800> JMP syntaxerr
00032EAE <AmiBlitz3.ab3@23804>   TST.w dirmode
00032EB2 <AmiBlitz3.ab3@23805>   BNE.w JUMP_baddirerr
00032EB6 <AmiBlitz3.ab3@23806>   MOVE.w #$C800,D1
00032EBC <AmiBlitz3.ab3@23807>   JSR Atokejsr                                            ;end
00032EC4 <AmiBlitz3.ab3@23808>   CMP.l #"noa7",-4(a5)
00032EC8 <AmiBlitz3.ab3@23809>   BNE 'l10
00032ECE <AmiBlitz3.ab3@23810>   TST.w dontwrite
00032ED2 <AmiBlitz3.ab3@23811>   BNE 'l10
00032ED8 <AmiBlitz3.ab3@23812>   MOVE.l destpointer,d1
00032EDA <AmiBlitz3.ab3@23813>   SUBQ.l #4,d1
00032EDC <AmiBlitz3.ab3@23814>   MOVE.l a0,-(a7)
00032EDE <AmiBlitz3.ab3@23815>   MOVE.l d1,a0
00032EE0 <AmiBlitz3.ab3@23816>   MOVE.l (a0),a0
00032EE6 <AmiBlitz3.ab3@23817>   MOVE.l #$60000002,(a0)+
00032EEA <AmiBlitz3.ab3@23818>   MOVE.w #$588f,(a0)
00032EEC <AmiBlitz3.ab3@23819>   MOVE.l (a7)+,a0
00032EEE <AmiBlitz3.ab3@23822> RTS
00032EF4 <AmiBlitz3.ab3@23826>   TST.w dirmode                                            ;stop
00032EF8 <AmiBlitz3.ab3@23827>   BNE.w JUMP_baddirerr
00032EFA <AmiBlitz3.ab3@23828>   MOVE.w d0,d1
00032EFE <AmiBlitz3.ab3@23829>   BEQ 'l10
00032F02 <AmiBlitz3.ab3@23830>   CMP.b #$3a,d0
00032F06 <AmiBlitz3.ab3@23831>   BEQ 'l10
00032F0C <AmiBlitz3.ab3@23832>   JSR get1bytemain
00032F12 <AmiBlitz3.ab3@23835>   TST.b debugmode
00032F16 <AmiBlitz3.ab3@23836>   BEQ.w newstop
00032F1A <AmiBlitz3.ab3@23837>   MOVE.w #$D501,D1
00032F1E <AmiBlitz3.ab3@23838> BRA.w Atokejsr
00032F20 <AmiBlitz3.ab3@23842>     RTS
00032F22 <AmiBlitz3.ab3@23844>   MOVE.w d1,d0
00032F26 <AmiBlitz3.ab3@23845>   BEQ 'l10
00032F2A <AmiBlitz3.ab3@23846>   CMP.b #$3a,d0
00032F2E <AmiBlitz3.ab3@23847>   BEQ 'l10
00032F32 <AmiBlitz3.ab3@23848>   SUB.b #$30,d0
00032F36 <AmiBlitz3.ab3@23849>   MOVE.w #$4e40,d1
00032F3A <AmiBlitz3.ab3@23850> BRA 'l11
00032F3E <AmiBlitz3.ab3@23853>   MOVE.w #$4e4a,d1
00032F42 <AmiBlitz3.ab3@23854> BRA writeword
00032F44 <AmiBlitz3.ab3@23857>   ADD.b d0,d1
00032F48 <AmiBlitz3.ab3@23858> BRA writeword
00032F4E <AmiBlitz3.ab3@23862> JMP badconterr
00032F52 <AmiBlitz3.ab3@23865>   MOVE.w #$4E71,D1
00032F56 <AmiBlitz3.ab3@23866> BRA.w writeword
00032F5C <AmiBlitz3.ab3@23869>   MOVEA.l firstfor,A2
00032F62 <AmiBlitz3.ab3@23870>   CLR.l firstfor
00032F68 <AmiBlitz3.ab3@23871>   MOVEA.l _execbase,A6
00032F6C <AmiBlitz3.ab3@23874>   CMPA.w #$0,A2
00032F70 <AmiBlitz3.ab3@23875>   BEQ.w JL_0_D9E6
00032F72 <AmiBlitz3.ab3@23876>   MOVEA.l A2,A1
00032F74 <AmiBlitz3.ab3@23877>   MOVEA.l (A1),A2
00032F76 <AmiBlitz3.ab3@23878>   MOVEQ.l #$00,D0
00032F7C <AmiBlitz3.ab3@23879>   MOVE.l mempool2,a0
00032F80 <AmiBlitz3.ab3@23880>   MOVE.b $10(A1),D0
00032F84 <AmiBlitz3.ab3@23881>   JSR _FreePooled(A6)                                      ;freememfor_error
00032F88 <AmiBlitz3.ab3@23882> BRA.w JL_0_D9CC
00032F8A <AmiBlitz3.ab3@23885> RTS
00032F90 <AmiBlitz3.ab3@23889> JMP badpenderr
00032F96 <AmiBlitz3.ab3@23895>   MOVE.w proceduremode,D1
00032F9A <AmiBlitz3.ab3@23896>    BEQ.w JUMP_badpenderr
00032FA0 <AmiBlitz3.ab3@23898>   MOVE.w dontwrite,D1
00032FA4 <AmiBlitz3.ab3@23899>    BNE.w JL_0_DA1A
00032FAA <AmiBlitz3.ab3@23900>   MOVEA.l firstpend,A2
00032FAE <AmiBlitz3.ab3@23903>   CMPA.w #$0,A2
00032FB2 <AmiBlitz3.ab3@23904>    BEQ.w JL_0_DA1A
00032FB6 <AmiBlitz3.ab3@23905>   MOVEA.l $4(A2),A0
00032FBC <AmiBlitz3.ab3@23906>   MOVE.l destpointer,(A0)
00032FBE <AmiBlitz3.ab3@23907>   MOVEA.l (A2),A2
00032FC2 <AmiBlitz3.ab3@23908> BRA.w JL_0_DA02
00032FC8 <AmiBlitz3.ab3@23911>   TST.b debugmode
00032FCC <AmiBlitz3.ab3@23912>    BEQ.b JL_0_DA2A
00032FCE <AmiBlitz3.ab3@23913>   MOVEQ.l #$05,D1
00032FD4 <AmiBlitz3.ab3@23914>   JSR writetrap
00032FDA <AmiBlitz3.ab3@23917>   MOVEA.l firstlocal,A2                                    ;firstlocal
00032FE0 <AmiBlitz3.ab3@23918>   JSR calcstatic2b                                           ;calcstatic
00032FE6 <AmiBlitz3.ab3@23919>   MOVEA.l currentfunction,A0
00032FEC <AmiBlitz3.ab3@23920>   MOVE.l destpointer,d1
00032FF0 <AmiBlitz3.ab3@23921>   SUB.l $e(a0),d1
00032FF4 <AmiBlitz3.ab3@23922>   MOVE.l d1,isfunc+1(a0)                                   ;store function size
00032FF8 <AmiBlitz3.ab3@23923>   MOVE.w D4,$8(A0)                                         ;set if memalloc need
00032FFE <AmiBlitz3.ab3@23924>   MOVE.l D3,locdatast
00033004 <AmiBlitz3.ab3@23925>   MOVEA.l tempvm,A1
0003300A <AmiBlitz3.ab3@23926>  CLR.b infunctioncode
00033010 <AmiBlitz3.ab3@23927>   MOVE.l firstiffstore,d1
00033016 <AmiBlitz3.ab3@23928>   CMP.l firstiff,d1
0003301A <AmiBlitz3.ab3@23929>   BNE JUMP_noenderr
0003301E <AmiBlitz3.ab3@23930>   TST.w $C(A1)                                             ;dim
00033022 <AmiBlitz3.ab3@23931>    BPL.w JL_0_DA64
00033028 <AmiBlitz3.ab3@23932>  BSET #$7,$8(A0)
0003302C <AmiBlitz3.ab3@23933>   MOVE.w #$C005,D1
00033030 <AmiBlitz3.ab3@23934>    BSR.w tokejsr2                                          ;writefreememstatement
00033034 <AmiBlitz3.ab3@23935> BRA.w JL_0_DA6C
0003303A <AmiBlitz3.ab3@23938> JMP noenderr
00033042 <AmiBlitz3.ab3@23941>   MOVE.w memlibstat,$C(A1)
00033048 <AmiBlitz3.ab3@23944>   MOVEA.l currentfunction,A0
0003304C <AmiBlitz3.ab3@23945>   MOVE.l $E(A0),-(A7)
00033054 <AmiBlitz3.ab3@23946>   MOVE.w locvaroff,$6(A0)
0003305A <AmiBlitz3.ab3@23947>   BCLR #$1,$7(A0)
00033060 <AmiBlitz3.ab3@23948>   BCLR #$0,$7(A0)
00033066 <AmiBlitz3.ab3@23949>   CMPI.b #$7,$5(A0)
0003306A <AmiBlitz3.ab3@23950>    BNE.w JL_0_DA9E
00033070 <AmiBlitz3.ab3@23951>   MOVE.w getstlen,D1
00033074 <AmiBlitz3.ab3@23952>    BSR.w writeword
00033078 <AmiBlitz3.ab3@23955>   TST.w $6(A0)
0003307C <AmiBlitz3.ab3@23956>    BEQ.w JL_0_DAB8
00033080 <AmiBlitz3.ab3@23957>   MOVE.w #$FC7B,D1
00033086 <AmiBlitz3.ab3@23958>    JSR uselib
0003308C <AmiBlitz3.ab3@23959>   MOVE.w unlinka4,D1
00033090 <AmiBlitz3.ab3@23960>    BSR.w writeword
00033096 <AmiBlitz3.ab3@23963>   MOVEA.l currentfunction,A0
00033098 <AmiBlitz3.ab3@23964>   MOVEQ.l #$00,D1
0003309C <AmiBlitz3.ab3@23965>   MOVE.b $4(A0),D1
0003309E <AmiBlitz3.ab3@23966>   LSR.w #4,D1
000330A2 <AmiBlitz3.ab3@23967>    BEQ.w JL_0_DB24
000330A4 <AmiBlitz3.ab3@23969>      LSL.w #1,d1
000330A8 <AmiBlitz3.ab3@23971>   CMP.w #$1,D1
000330AC <AmiBlitz3.ab3@23972>    BNE.w JL_0_DAE0
000330B2 <AmiBlitz3.ab3@23973>   MOVE.w fix1,D1
000330B6 <AmiBlitz3.ab3@23974>    BSR.w writeword
000330BA <AmiBlitz3.ab3@23975> BRA.w JL_0_DB24
000330BC <AmiBlitz3.ab3@23978>   LSL.w #2,D1
000330BE <AmiBlitz3.ab3@23979>   MOVE.w D1,-(A7)
000330C4 <AmiBlitz3.ab3@23980>   MOVE.w D1,moverts+2
000330CA <AmiBlitz3.ab3@23981>   MOVE.l moverts,D1
000330D0 <AmiBlitz3.ab3@23982>    JSR writelong
000330D2 <AmiBlitz3.ab3@23983>   MOVE.w (A7)+,D1
000330D6 <AmiBlitz3.ab3@23984>   CMP.w #$8,D1
000330DA <AmiBlitz3.ab3@23985>    BHI.w JL_0_DB14
000330DE <AmiBlitz3.ab3@23986>   ANDI.w #$7,D1
000330E0 <AmiBlitz3.ab3@23987>   LSL.w #8,D1
000330E2 <AmiBlitz3.ab3@23988>   LSL.w #1,D1
000330E8 <AmiBlitz3.ab3@23989>   OR.w fixq,D1
000330EE <AmiBlitz3.ab3@23990>    JSR writeword
000330F2 <AmiBlitz3.ab3@23991> BRA.w JL_0_DB24
000330F8 <AmiBlitz3.ab3@23995>    MOVE.w D1,fixstack+2
000330FE <AmiBlitz3.ab3@23996>   MOVE.l fixstack,D1
00033104 <AmiBlitz3.ab3@23997>    JSR writelong
00033108 <AmiBlitz3.ab3@24000>    BSR.w JL_0_D2CA
0003310C <AmiBlitz3.ab3@24001>    BSR.w JL_0_D4F8
0003310E <AmiBlitz3.ab3@24002>   MOVEA.l (A7)+,A0
00033114 <AmiBlitz3.ab3@24003>   MOVE.w dontwrite,D1
00033118 <AmiBlitz3.ab3@24004>    BNE.w JL_0_DB3E
0003311E <AmiBlitz3.ab3@24005>   MOVE.l destpointer,-(A0)
00033124 <AmiBlitz3.ab3@24008>   CLR.w proceduremode
0003312A <AmiBlitz3.ab3@24009>   CLR.l currentfunction
00033130 <AmiBlitz3.ab3@24010>   CLR.w procnum
00033134 <AmiBlitz3.ab3@24011>    BSR.w JL_0_DB5C
0003313A <AmiBlitz3.ab3@24012>    JSR freepends
00033140 <AmiBlitz3.ab3@24013> JMP get1bytemain
00033142 <AmiBlitz3.ab3@24016>   MOVEQ.l #$0C,D0
00033144 <AmiBlitz3.ab3@24017>   MOVEQ.l #$01,D1
0003314A <AmiBlitz3.ab3@24018>   MOVEA.l _execbase,A6
00033150 <AmiBlitz3.ab3@24020>   MOVE.l mempool,a0
00033154 <AmiBlitz3.ab3@24021>   JSR _AllocPooled(a6)
00033156 <AmiBlitz3.ab3@24022>   MOVEA.l D0,A0
0003315C <AmiBlitz3.ab3@24023>   MOVE.l alllocals,(A0)
00033162 <AmiBlitz3.ab3@24024>   MOVE.l A0,alllocals
00033168 <AmiBlitz3.ab3@24025>   MOVE.l firstlocal,D0
0003316E <AmiBlitz3.ab3@24026>   CLR.l firstlocal
00033172 <AmiBlitz3.ab3@24027>   MOVE.l D0,$4(A0)
00033178 <AmiBlitz3.ab3@24028>   MOVE.l firstglob,D1
0003317E <AmiBlitz3.ab3@24029>   CLR.l firstglob
00033182 <AmiBlitz3.ab3@24030>   MOVE.l D1,$8(A0)
00033188 <AmiBlitz3.ab3@24031>   TST.b debugmode
0003318C <AmiBlitz3.ab3@24032>    BEQ.b JL_0_DBB0
00033192 <AmiBlitz3.ab3@24033>   TST.w dontwrite
00033196 <AmiBlitz3.ab3@24034>    BNE.b JL_0_DBB0
0003319A <AmiBlitz3.ab3@24035>   MOVEA.l proclocals(PC),A0
0003319C <AmiBlitz3.ab3@24036>   MOVE.l D0,(A0)+
0003319E <AmiBlitz3.ab3@24037>   MOVE.l D1,(A0)
000331A0 <AmiBlitz3.ab3@24040> RTS
000331A6 <AmiBlitz3.ab3@24043> JMP baddirerr
000331AC <AmiBlitz3.ab3@24047>   TST.w dirmode
000331B0 <AmiBlitz3.ab3@24048>    BNE.w JUMP_baddirerr
000331B6 <AmiBlitz3.ab3@24049>   MOVE.l firstfor,D1
000331BA <AmiBlitz3.ab3@24050>    BEQ.w JUMP_noforerr
000331C0 <AmiBlitz3.ab3@24051>   JSR reget
000331C4 <AmiBlitz3.ab3@24052>    BEQ.w JL_0_DC18
000331C8 <AmiBlitz3.ab3@24055>   BSR.w getparameter
000331CC <AmiBlitz3.ab3@24056>   MOVEA.l firstfor(PC),A2
000331CE <AmiBlitz3.ab3@24057>   MOVEQ.l #$00,D1
000331D2 <AmiBlitz3.ab3@24058>   MOVE.b $10(A2),D1
000331D6 <AmiBlitz3.ab3@24059>   SUBI.w #$12,D1
000331D8 <AmiBlitz3.ab3@24060>   CMP.w D1,D2
000331DC <AmiBlitz3.ab3@24061>    BNE.w JUMP_noforerr
000331E0 <AmiBlitz3.ab3@24062>   LEA ptr_parameterstore(PC),A0
000331E4 <AmiBlitz3.ab3@24063>   LEA $11(A2),A1
000331E6 <AmiBlitz3.ab3@24064>   SUBQ.w #1,D2
000331E8 <AmiBlitz3.ab3@24067>     CMPM.b (A0)+,(A1)+
000331EC <AmiBlitz3.ab3@24068>     BNE.w JUMP_noforerr
000331F0 <AmiBlitz3.ab3@24069>   DBF D2,JL_0_DBF0
000331F4 <AmiBlitz3.ab3@24071>    BSR.w JL_0_DC1A
000331FA <AmiBlitz3.ab3@24072>    JSR reget
000331FE <AmiBlitz3.ab3@24073>    BEQ.w JL_0_DC16
00033202 <AmiBlitz3.ab3@24074>   CMP.w #$2C,D0
00033206 <AmiBlitz3.ab3@24075>    BNE.w JUMP_syntaxerr
0003320C <AmiBlitz3.ab3@24076>    JSR get1bytemain
00033210 <AmiBlitz3.ab3@24077> BRA.w JL_0_DBCE
00033216 <AmiBlitz3.ab3@24080> JMP noforerr
00033218 <AmiBlitz3.ab3@24083> RTS
0003321C <AmiBlitz3.ab3@24087>   MOVE.l 8(a7),a2
00033220 <AmiBlitz3.ab3@24088>   Dc.l  $f2124400                                          ;fmove.s (a2),fp0
00033224 <AmiBlitz3.ab3@24089>   Dc.l  $F2174422                                          ;fadd.s (a7),fp0
00033228 <AmiBlitz3.ab3@24090>   Dc.l  $F2126400                                          ;fmove.s fp0,(a2)
0003322A <AmiBlitz3.ab3@24094>   MOVEA.l D1,A2
00033230 <AmiBlitz3.ab3@24097>   JSR popnext                                           ;error checking for next.
00033234 <AmiBlitz3.ab3@24098>   MOVE.w $C(A2),D0
0003323A <AmiBlitz3.ab3@24099>   LEA nextb,A0
00033240 <AmiBlitz3.ab3@24100>   LEA nextbf,A1
00033244 <AmiBlitz3.ab3@24101>   CMP.w #$1,D0
00033248 <AmiBlitz3.ab3@24102>    BEQ.w JL_0_DC74
0003324E <AmiBlitz3.ab3@24103>   LEA nextw,A0
00033254 <AmiBlitz3.ab3@24104>   LEA nextwf,A1
00033258 <AmiBlitz3.ab3@24105>   CMP.w #$2,D0
0003325C <AmiBlitz3.ab3@24106>    BEQ.w JL_0_DC74
00033262 <AmiBlitz3.ab3@24107>   LEA nextl,A0
00033268 <AmiBlitz3.ab3@24108>   LEA nextlf,A1
0003326C <AmiBlitz3.ab3@24109>   CMP.w #$5,D0
00033270 <AmiBlitz3.ab3@24110>    BNE.w JL_0_DC74
00033276 <AmiBlitz3.ab3@24111>    TST.b fpu
0003327A <AmiBlitz3.ab3@24112>    BEQ 'old
00033280 <AmiBlitz3.ab3@24113>    LEA fpu2dats,a0                                         ;fpu next code
00033286 <AmiBlitz3.ab3@24114>    LEA fpu2date,a1
0003328A <AmiBlitz3.ab3@24115> BRA JL_0_DC74
0003328E <AmiBlitz3.ab3@24118>   MOVE.w #$C900,D1
00033292 <AmiBlitz3.ab3@24119>    BSR.w Atokejsr
00033298 <AmiBlitz3.ab3@24120>   LEA nextf,A0
0003329E <AmiBlitz3.ab3@24121>   LEA nextff,A1
000332A4 <AmiBlitz3.ab3@24124>   JSR pokecode
000332AA <AmiBlitz3.ab3@24125>     TST.b fast                                             ;fast for next deactivate
000332AE <AmiBlitz3.ab3@24126> BRA 'l1
000332B4 <AmiBlitz3.ab3@24128>     TST.b onestep
000332B8 <AmiBlitz3.ab3@24129>     BEQ 'l1
000332BE <AmiBlitz3.ab3@24130>     CLR.b onestep
000332C4 <AmiBlitz3.ab3@24131>     SUBQ.l #4,destpointer
000332C8 <AmiBlitz3.ab3@24132>     MOVE.w #$5292,d1
000332CE <AmiBlitz3.ab3@24133>     JSR writeword
000332D2 <AmiBlitz3.ab3@24136>   MOVE.l JL_0_DCF4(PC),D1
000332D8 <AmiBlitz3.ab3@24137>    JSR writelong
000332DE <AmiBlitz3.ab3@24138>   MOVEA.l firstfor,A2
000332E4 <AmiBlitz3.ab3@24139>   MOVE.l (A2),firstfor
000332E8 <AmiBlitz3.ab3@24140>   MOVEA.l $8(A2),A0
000332EE <AmiBlitz3.ab3@24141>   MOVEA.l destpointer,A1
000332F0 <AmiBlitz3.ab3@24142>   MOVE.l A1,D1
000332F2 <AmiBlitz3.ab3@24143>   SUB.l A0,D1
000332F4 <AmiBlitz3.ab3@24144>   ADDQ.l #2,D1
000332FA <AmiBlitz3.ab3@24145>   CMP.l #MinWordSgnd,D1
000332FE <AmiBlitz3.ab3@24146>    BCC.w JUMP_bigforerr
00033304 <AmiBlitz3.ab3@24147>   TST.w dontwrite
00033308 <AmiBlitz3.ab3@24148>    BNE.w JL_0_DCB4
0003330C <AmiBlitz3.ab3@24149>   MOVE.w D1,-$2(A0)
0003330E <AmiBlitz3.ab3@24152>   MOVE.l A1,D1
00033312 <AmiBlitz3.ab3@24153>   SUB.l $4(A2),D1
00033314 <AmiBlitz3.ab3@24154>   SUBQ.l #6,D1
0003331A <AmiBlitz3.ab3@24155>   CMP.l #MinWordSgnd,D1
0003331E <AmiBlitz3.ab3@24156>    BCC.w JUMP_bigforerr
00033324 <AmiBlitz3.ab3@24157>   TST.w dontwrite
00033328 <AmiBlitz3.ab3@24158>    BNE.w JL_0_DCD6
0003332A <AmiBlitz3.ab3@24159>   NEG.w D1
0003332E <AmiBlitz3.ab3@24160>   MOVE.w D1,-$2(A1)
00033334 <AmiBlitz3.ab3@24163>   JSR popnext3
0003333A <AmiBlitz3.ab3@24164>   MOVEA.l _execbase,A6
0003333C <AmiBlitz3.ab3@24165>   MOVEA.l A2,A1
0003333E <AmiBlitz3.ab3@24166>   MOVEQ.l #$00,D0
00033342 <AmiBlitz3.ab3@24167>   MOVE.b $10(A1),D0
00033348 <AmiBlitz3.ab3@24168>   MOVE.l mempool2,a0
0003334C <AmiBlitz3.ab3@24169>   JSR _FreePooled(A6)
00033352 <AmiBlitz3.ab3@24170> JMP reget
00033358 <AmiBlitz3.ab3@24173> JMP notallowd
0003335E <AmiBlitz3.ab3@24176> JMP bigforerr
00033362 <AmiBlitz3.ab3@24183>   MOVE.w #$664F,-(A7)
00033366 <AmiBlitz3.ab3@24186> BRA.w JL_0_DCF4
0003336C <AmiBlitz3.ab3@24189> JMP error_dublicate_for
00033370 <AmiBlitz3.ab3@24192> forlineat:   Ds.l 1
00033372 <AmiBlitz3.ab3@24193> fortemp:     Ds.w 1
00033378 <AmiBlitz3.ab3@24200>   CLR.l fp0addr
0003337E <AmiBlitz3.ab3@24201>   TST.w dirmode
00033382 <AmiBlitz3.ab3@24202>    BNE.w JUMP_baddirerr
0003338C <AmiBlitz3.ab3@24203>   MOVE.l linenumat,forlineat
00033392 <AmiBlitz3.ab3@24207>   MOVE.l A5,letstart
00033396 <AmiBlitz3.ab3@24208>   BSR.w getparameter
0003339C <AmiBlitz3.ab3@24209>   MOVE.w D2,fortemp
000333A2 <AmiBlitz3.ab3@24210>   JSR findfor
000333A6 <AmiBlitz3.ab3@24211>    BEQ.w JUMP_error_dublicate_for
000333AC <AmiBlitz3.ab3@24212>   LEA firstfor,A2
000333B2 <AmiBlitz3.ab3@24213>   JSR addhere2
000333B4 <AmiBlitz3.ab3@24214>   MOVE.l A2,-(A7)
000333BA <AmiBlitz3.ab3@24215>   TST.b debugmode
000333BE <AmiBlitz3.ab3@24216>    BEQ.b JL_0_DD4C
000333C4 <AmiBlitz3.ab3@24217>   JSR chkstak
000333CA <AmiBlitz3.ab3@24218>   MOVE.l AJL_0_DCF0,D1
000333D0 <AmiBlitz3.ab3@24219>   JSR  writelong
000333D4 <AmiBlitz3.ab3@24222>   MOVE.w fortemp(PC),D2
000333DC <AmiBlitz3.ab3@24223>   MOVE.b #1,formode
000333E0 <AmiBlitz3.ab3@24224>   BSR.w AJL_0_DEA6                                         ;for get 1. value
000333E6 <AmiBlitz3.ab3@24225>   CLR.b formode
000333EA <AmiBlitz3.ab3@24226>   CMP.w #-$7FE8,D0
000333EE <AmiBlitz3.ab3@24227>    BNE.w JUMP_syntaxerr
000333F4 <AmiBlitz3.ab3@24228>   MOVE.w commode,D1
000333F8 <AmiBlitz3.ab3@24229>    BNE.w JUMP_syntaxerr
000333FC <AmiBlitz3.ab3@24230>   CMP.b #$6,D2
00033400 <AmiBlitz3.ab3@24231>    BCC.w JUMP_badforerr
00033404 <AmiBlitz3.ab3@24232>   BTST #$F,D2
00033408 <AmiBlitz3.ab3@24233>    BNE.w JL_0_DD86
0003340E <AmiBlitz3.ab3@24234>   MOVE.w leaamp,D1
00033414 <AmiBlitz3.ab3@24235>   JSR pokewda5s
00033416 <AmiBlitz3.ab3@24236>   MOVE.w D3,D1
0003341C <AmiBlitz3.ab3@24237>   JSR  writeword
00033422 <AmiBlitz3.ab3@24240>   MOVE.w pushindex,D1
00033428 <AmiBlitz3.ab3@24241>   JSR  writeword
0003342C <AmiBlitz3.ab3@24242>   ANDI.w #$FF,D2
0003342E <AmiBlitz3.ab3@24244>   MOVEA.l (A7),A1
00033432 <AmiBlitz3.ab3@24245>   MOVE.w D2,$C(A1)
00033434 <AmiBlitz3.ab3@24246>   MOVE.w D2,-(A7)
00033438 <AmiBlitz3.ab3@24247>    BSR.w eval
0003343E <AmiBlitz3.ab3@24248>    CLR.b onestep
00033442 <AmiBlitz3.ab3@24249>    CMP.w #$8019,d0
00033446 <AmiBlitz3.ab3@24250>    BEQ 'l1
0003344E <AmiBlitz3.ab3@24251>    MOVE.b #1,onestep
00033450 <AmiBlitz3.ab3@24254>   MOVE.w (A7),D2
00033456 <AmiBlitz3.ab3@24255>   MOVE.w pushd0l,D1
0003345A <AmiBlitz3.ab3@24256>   CMP.w #$3,D2
0003345E <AmiBlitz3.ab3@24257>    BCC.w JL_0_DDB6
00033464 <AmiBlitz3.ab3@24258>   MOVE.w pushd0wd,D1
00033466 <AmiBlitz3.ab3@24261>    MOVE.w D1,-(A7)
0003346C <AmiBlitz3.ab3@24262>    TST.b fpu
00033470 <AmiBlitz3.ab3@24263>    BEQ 'old
00033474 <AmiBlitz3.ab3@24264>    CMP.b #5,d2
00033478 <AmiBlitz3.ab3@24265>    BNE 'old
0003347E <AmiBlitz3.ab3@24266>    MOVE.l #$f2276400,d1
00033484 <AmiBlitz3.ab3@24268>    JSR writelong
00033488 <AmiBlitz3.ab3@24269> BRA 'weit
0003348E <AmiBlitz3.ab3@24272>    JSR  writeword                                          ;fpu for end value
00033492 <AmiBlitz3.ab3@24275>   CMP.w #-$7FE7,D0
00033496 <AmiBlitz3.ab3@24276>    BNE.w JL_0_DDCC
0003349A <AmiBlitz3.ab3@24277>    BSR.w eval
000334A0 <AmiBlitz3.ab3@24278>    TST.b fpu
000334A4 <AmiBlitz3.ab3@24279>    BEQ JL_0_DE0C
000334A8 <AmiBlitz3.ab3@24280>    CMP.b #5,d2
000334AC <AmiBlitz3.ab3@24281>    BNE JL_0_DE0C
000334B2 <AmiBlitz3.ab3@24282>    MOVE.l #$f2276400,d1                                    ;write step <> 1
000334B8 <AmiBlitz3.ab3@24284>   JSR writelong
000334BA <AmiBlitz3.ab3@24287>    MOVE.w (a7)+,d1
000334BE <AmiBlitz3.ab3@24288> BRA fpur
000334C2 <AmiBlitz3.ab3@24291>   CMP.w #$4,D2
000334C6 <AmiBlitz3.ab3@24292>    BCC.w JL_0_DDE0
000334CA <AmiBlitz3.ab3@24293>   MOVE.w #$7001,D1
000334D0 <AmiBlitz3.ab3@24294>   JSR writeword
000334D4 <AmiBlitz3.ab3@24295> BRA.w JL_0_DE0C
000334DA <AmiBlitz3.ab3@24298> JMP badforerr
000334DE <AmiBlitz3.ab3@24301>   BNE.w JL_0_DDFA
000334E2 <AmiBlitz3.ab3@24302>   MOVE.w #$7001,D1
000334E8 <AmiBlitz3.ab3@24303>   JSR writeword
000334EE <AmiBlitz3.ab3@24304>   MOVE.w swapd0,D1
000334F4 <AmiBlitz3.ab3@24305>   JSR writeword
000334F8 <AmiBlitz3.ab3@24306> BRA.w JL_0_DE0C
000334FE <AmiBlitz3.ab3@24309>   TST.b fpu
00033502 <AmiBlitz3.ab3@24310>    BEQ 'old
00033506 <AmiBlitz3.ab3@24311>   CMP.b #5,d2
0003350A <AmiBlitz3.ab3@24312>    BNE 'old
00033510 <AmiBlitz3.ab3@24313>   MOVE.l #$f23c5000,d1
00033516 <AmiBlitz3.ab3@24314>   JSR writelong
0003351A <AmiBlitz3.ab3@24315>   MOVE.w #$1,d1
00033520 <AmiBlitz3.ab3@24316>   JSR writeword
00033526 <AmiBlitz3.ab3@24317>   MOVE.l #$f2276400,d1
0003352C <AmiBlitz3.ab3@24318>   JSR writelong
0003352E <AmiBlitz3.ab3@24319>   MOVE.w (a7)+,d1
00033532 <AmiBlitz3.ab3@24320> BRA fpur
00033536 <AmiBlitz3.ab3@24323>   MOVE.w #$203C,D1                                         ;write step 1
0003353C <AmiBlitz3.ab3@24324>   JSR writeword
00033542 <AmiBlitz3.ab3@24325>   MOVE.l #$80000041,D1                                     ;ffp '1'
00033548 <AmiBlitz3.ab3@24326>   JSR writelong
0003354A <AmiBlitz3.ab3@24329>   MOVE.w (A7)+,D1
00033550 <AmiBlitz3.ab3@24330>   JSR writeword                                            ;push step on stack
00033552 <AmiBlitz3.ab3@24333>   MOVE.w (A7)+,D2
00033554 <AmiBlitz3.ab3@24334>   MOVEA.l (A7),A1
0003355C <AmiBlitz3.ab3@24335>   MOVE.l destpointer,$4(A1)
00033562 <AmiBlitz3.ab3@24336>   LEA forcompb,A0
00033568 <AmiBlitz3.ab3@24337>   LEA forcompbf,A1
0003356C <AmiBlitz3.ab3@24338>   CMP.w #$1,D2
00033570 <AmiBlitz3.ab3@24339>    BEQ.w JL_0_DE7E
00033576 <AmiBlitz3.ab3@24340>   LEA forcompw,A0
0003357C <AmiBlitz3.ab3@24341>   LEA forcompwf,A1
00033580 <AmiBlitz3.ab3@24342>   CMP.w #$2,D2
00033584 <AmiBlitz3.ab3@24343>    BEQ.w JL_0_DE7E
0003358A <AmiBlitz3.ab3@24344>   LEA forcompl,A0
00033590 <AmiBlitz3.ab3@24345>   LEA forcomplf,A1
00033594 <AmiBlitz3.ab3@24346>   CMP.w #$5,D2
00033598 <AmiBlitz3.ab3@24347>    BNE.w JL_0_DE7E
0003359E <AmiBlitz3.ab3@24348>   TST.b fpu
000335A2 <AmiBlitz3.ab3@24349>    BEQ 'old
000335A8 <AmiBlitz3.ab3@24350>   LEA fpu_start,a0
000335AE <AmiBlitz3.ab3@24351>   LEA fpu_end,a1
000335B4 <AmiBlitz3.ab3@24352>   JSR pokecode
000335B8 <AmiBlitz3.ab3@24353> BRA fpu3
000335BE <AmiBlitz3.ab3@24356>   LEA forcompf,A0                                         ;
000335C4 <AmiBlitz3.ab3@24357>   LEA forcompff,A1
000335CA <AmiBlitz3.ab3@24358>   JSR pokecode
000335CE <AmiBlitz3.ab3@24359>   MOVE.w #$C900,D1
000335D2 <AmiBlitz3.ab3@24360>   BSR.w Atokejsr
000335D8 <AmiBlitz3.ab3@24361>   LEA forcompf2,A0
000335DE <AmiBlitz3.ab3@24362>   LEA forcompf2f,A1
000335E4 <AmiBlitz3.ab3@24365>   JSR pokecode
000335EA <AmiBlitz3.ab3@24366>   TST.b fast                                               ;fast for next
000335EE <AmiBlitz3.ab3@24367>    BEQ 's1
000335F2 <AmiBlitz3.ab3@24368>   CMP.w #3,d2
000335F6 <AmiBlitz3.ab3@24369>    BNE 's1
000335FC <AmiBlitz3.ab3@24370>   TST.b onestep
00033600 <AmiBlitz3.ab3@24371>    BEQ 's1
0003360A <AmiBlitz3.ab3@24372>   SUB.l #10,destpointer
0003360E <AmiBlitz3.ab3@24373>   MOVE.w #$b081,d1
00033614 <AmiBlitz3.ab3@24374>   JSR writeword
00033618 <AmiBlitz3.ab3@24378>   MOVE.l thebgt(PC),D1
0003361E <AmiBlitz3.ab3@24379>   JSR writelong
00033620 <AmiBlitz3.ab3@24382>   MOVEA.l (A7)+,A1
00033628 <AmiBlitz3.ab3@24383>   MOVE.l destpointer,$8(A1)
0003362E <AmiBlitz3.ab3@24384> JMP reget
00033632 <AmiBlitz3.ab3@24387>   MOVEA.l 8(a7),a2
00033636 <AmiBlitz3.ab3@24388>   Dc.l $f2124400                                           ;fmove.s (a2),fp0
0003363C <AmiBlitz3.ab3@24389>   fmove.s 4(a7),fp1
00033640 <AmiBlitz3.ab3@24390>   BTST.b #7,(a7)
00033644 <AmiBlitz3.ab3@24391>   BNE 'negi
00033648 <AmiBlitz3.ab3@24392>   fcmp.x fp1,fp0
0003364C <AmiBlitz3.ab3@24393> BRA 'negi2
00033650 <AmiBlitz3.ab3@24396>   fcmp.x fp0,fp1
00033654 <AmiBlitz3.ab3@24399>   Dc.l $f2920000                                           ;fbgt.w
00033658 <AmiBlitz3.ab3@24403>   BGT.w thebgt
0003365E <AmiBlitz3.ab3@24406>   MOVE.l A5,letstart
00033662 <AmiBlitz3.ab3@24407>   BSR.w getparameter
0003366C <AmiBlitz3.ab3@24413>   MOVE.l destpointer,pushpc
00033676 <AmiBlitz3.ab3@24414>   MOVE.l hunkoffsetbase,pushoff
0003367C <AmiBlitz3.ab3@24415>   CLR.l rightsidetype
00033684 <AmiBlitz3.ab3@24416>   MOVE.w #$0001,regnum
0003368A <AmiBlitz3.ab3@24417>   JSR JL_0_8E3C
00033690 <AmiBlitz3.ab3@24418>   JSR calcvar
00033696 <AmiBlitz3.ab3@24419>   TST.b formode
0003369A <AmiBlitz3.ab3@24420>   BEQ 'lf1
000336A0 <AmiBlitz3.ab3@24421>   CMP.l #newtype_double,A2
000336A4 <AmiBlitz3.ab3@24422>   BEQ JUMP_notallowd
000336AA <AmiBlitz3.ab3@24423>   MOVE.l a2,currtype
000336B0 <AmiBlitz3.ab3@24426>   CLR.w startoffsetmore
000336B4 <AmiBlitz3.ab3@24427>   CMP.w #$3d,d0
000336B8 <AmiBlitz3.ab3@24428>   BNE 'l1a
000336BC <AmiBlitz3.ab3@24429>   BTST #15,d2
000336C0 <AmiBlitz3.ab3@24430>   BEQ 'l1a
000336C4 <AmiBlitz3.ab3@24431>   CMP.b #1,d2
000336C8 <AmiBlitz3.ab3@24432>   BNE 'l1a
000336D2 <AmiBlitz3.ab3@24433>   MOVE.w leaa0a0+2,startoffsetmore
000336D8 <AmiBlitz3.ab3@24436>   CLR.w regnum
000336DC <AmiBlitz3.ab3@24437>   BSR.w JL_0_B5D2
000336E2 <AmiBlitz3.ab3@24438>   CLR.w commode
000336E8 <AmiBlitz3.ab3@24439>   CLR.w stackcorrect
000336EE <AmiBlitz3.ab3@24440>   CLR.w pcodd
000336F4 <AmiBlitz3.ab3@24441>   MOVE.w startoffsetmore,d1
000336F8 <AmiBlitz3.ab3@24442>   BTST #0,d1
000336FC <AmiBlitz3.ab3@24443>   BEQ 'l2a
00033704 <AmiBlitz3.ab3@24444>   MOVE.w #1,pcodd
00033708 <AmiBlitz3.ab3@24447>   CMP.w #$3D,D0                                            ;=
0003370C <AmiBlitz3.ab3@24448>   BEQ.w JL_0_DEE0
0003370E <AmiBlitz3.ab3@24451>   MOVE.b (a5)+,d1
00033712 <AmiBlitz3.ab3@24452>   BEQ 'l10
00033716 <AmiBlitz3.ab3@24453>   CMP.b #":",d1
0003371A <AmiBlitz3.ab3@24454>   BEQ 'l10
0003371E <AmiBlitz3.ab3@24455>   CMP.b #";",d1
00033722 <AmiBlitz3.ab3@24456>   BEQ 'l10
00033726 <AmiBlitz3.ab3@24457>   CMP.b #"0",d1
0003372A <AmiBlitz3.ab3@24458>   BLT 'l11
0003372E <AmiBlitz3.ab3@24459>   CMP.b #"9",d1
00033732 <AmiBlitz3.ab3@24460>   BGT 'l11
00033736 <AmiBlitz3.ab3@24461> BRA.s 'l1
0003373E <AmiBlitz3.ab3@24464>   MOVE.b #1,quickadd
00033744 <AmiBlitz3.ab3@24467>   MOVEA.l letstart,A5
00033746 <AmiBlitz3.ab3@24468>   SUBQ.w #1,A5
0003374A <AmiBlitz3.ab3@24471>   CMP.b #$7,D2
0003374E <AmiBlitz3.ab3@24472>    BNE.w JL_0_DF8A
00033752 <AmiBlitz3.ab3@24478>   MOVEM.w D2-D3,-(A7)
00033758 <AmiBlitz3.ab3@24479>   MOVE.l lastoffset_org,-(A7)
0003375E <AmiBlitz3.ab3@24480>   MOVE.w varmode,-(A7)
00033768 <AmiBlitz3.ab3@24482>    MOVE.l #forthstack,forthsp
00033772 <AmiBlitz3.ab3@24483>    MOVE.l #precstack,precsp
00033778 <AmiBlitz3.ab3@24484>    CLR.w regnum
0003377E <AmiBlitz3.ab3@24485>    CLR.w nonew
00033784 <AmiBlitz3.ab3@24486>    CLR.w sbasegot
0003378E <AmiBlitz3.ab3@24487>    MOVE.w varcodelen,oldvcodelen
00033794 <AmiBlitz3.ab3@24488>    CLR.w varcodelen
0003379C <AmiBlitz3.ab3@24489>    MOVE.w #$FFFF,lasta6
0003379E <AmiBlitz3.ab3@24492>   MOVEQ.l #$07,D2
000337A2 <AmiBlitz3.ab3@24493>    BSR.w eval
000337A8 <AmiBlitz3.ab3@24494>   MOVE.w (A7)+,varmode
000337AE <AmiBlitz3.ab3@24495>   MOVE.l (A7)+,lastoffset_org
000337B4 <AmiBlitz3.ab3@24496>   MOVE.w moved0a3,D1
000337BA <AmiBlitz3.ab3@24497>    JSR writeword
000337C0 <AmiBlitz3.ab3@24498>   MOVE.w commode,D1
000337C4 <AmiBlitz3.ab3@24499>    BEQ.w JL_0_DF38
000337CA <AmiBlitz3.ab3@24500>   LEA pulla2st,A0
000337D0 <AmiBlitz3.ab3@24501>   LEA pulla2stf,A1
000337D6 <AmiBlitz3.ab3@24502>    JSR pokecode
000337DA <AmiBlitz3.ab3@24503> BRA.w JL_0_DF3C
000337DE <AmiBlitz3.ab3@24506>   BSR.w JL_0_B63C
000337E2 <AmiBlitz3.ab3@24509>   MOVEM.w (A7)+,D2-D3
000337E6 <AmiBlitz3.ab3@24510>   BTST #$F,D2
000337EA <AmiBlitz3.ab3@24511>   BNE.w JL_0_DF58
000337F0 <AmiBlitz3.ab3@24512>     MOVE.w D3,leaa5d3a2+2
000337F6 <AmiBlitz3.ab3@24513>     MOVE.l leaa5d3a2,D1
000337FC <AmiBlitz3.ab3@24514>     JSR pokela5s
00033800 <AmiBlitz3.ab3@24517>   MOVE.w #$FE6F,D1
00033806 <AmiBlitz3.ab3@24518>   JSR uselib
0003380C <AmiBlitz3.ab3@24519>   MOVE.l #$C700,D1
00033812 <AmiBlitz3.ab3@24520>   MOVE.l d1,lastinstruction
00033818 <AmiBlitz3.ab3@24521>   MOVE.w varmode,D2
0003381C <AmiBlitz3.ab3@24522>   BNE.w JL_0_DF70
0003381E <AmiBlitz3.ab3@24523>     ADDQ.w #1,D1
00033822 <AmiBlitz3.ab3@24526>   BSR.w Atokejsr
00033826 <AmiBlitz3.ab3@24527>   CMP.w #$2C,D0
0003382A <AmiBlitz3.ab3@24528>   BNE.w JL_0_E0C6
00033830 <AmiBlitz3.ab3@24530>   MOVE.w addq4a2,D1
00033836 <AmiBlitz3.ab3@24531>   JSR writeword
0003383A <AmiBlitz3.ab3@24532> BRA.w JL_0_E018
00033840 <AmiBlitz3.ab3@24535> JMP error4char
00033846 <AmiBlitz3.ab3@24538> JMP error_convert_types
0003384A <AmiBlitz3.ab3@24542>    BTST #$E,D2
0003384E <AmiBlitz3.ab3@24543>    BNE.w JL_0_DF9C
00033850 <AmiBlitz3.ab3@24544>   TST.b D2
00033854 <AmiBlitz3.ab3@24545>    BEQ.w JUMP_noleterr
0003385A <AmiBlitz3.ab3@24546>    TST.b newsyntax
0003385E <AmiBlitz3.ab3@24547>    BEQ JL_0_DFA0
00033862 <AmiBlitz3.ab3@24550>    CMP.w #$4022,(a5)
00033866 <AmiBlitz3.ab3@24551>    BNE JL_0_DFA0
0003386C <AmiBlitz3.ab3@24552>    CMP.l #3,d2
00033870 <AmiBlitz3.ab3@24553>    BNE  JUMP_error_convert_types
00033872 <AmiBlitz3.ab3@24554>    ADDQ #2,a5
00033874 <AmiBlitz3.ab3@24555>    MOVEQ #0,d0
00033876 <AmiBlitz3.ab3@24556>    MOVE.b (a5)+,d0
0003387A <AmiBlitz3.ab3@24557>    BEQ JL_0_DFA0
0003387E <AmiBlitz3.ab3@24558>    CMP.b #$22,d0
00033882 <AmiBlitz3.ab3@24559>    BNE 'l1
00033886 <AmiBlitz3.ab3@24560>    MOVE.b #0,d0
0003388A <AmiBlitz3.ab3@24561> BRA 'do
0003388C <AmiBlitz3.ab3@24564>   ASL.l #8,d0
0003388E <AmiBlitz3.ab3@24565>    MOVE.b (a5)+,d0
00033892 <AmiBlitz3.ab3@24566>    BEQ JL_0_DFA0
00033896 <AmiBlitz3.ab3@24567>    CMP.b #$22,d0
0003389A <AmiBlitz3.ab3@24568>    BNE 'l2
0003389E <AmiBlitz3.ab3@24569>    MOVE.b #0,d0
000338A0 <AmiBlitz3.ab3@24570>    ASR.l #8,d0
000338A4 <AmiBlitz3.ab3@24571> BRA 'do
000338A6 <AmiBlitz3.ab3@24574>   ASL.l #8,d0
000338A8 <AmiBlitz3.ab3@24575>     MOVE.b (a5)+,d0
000338AC <AmiBlitz3.ab3@24576>    BEQ JL_0_DFA0
000338B0 <AmiBlitz3.ab3@24577>    CMP.b #$22,d0
000338B4 <AmiBlitz3.ab3@24578>    BNE 'l3
000338B8 <AmiBlitz3.ab3@24579>    MOVE.b #0,d0
000338BA <AmiBlitz3.ab3@24580>    ASR.l #8,d0
000338BE <AmiBlitz3.ab3@24581> BRA 'do
000338C0 <AmiBlitz3.ab3@24584>   ASL.l #8,d0
000338C2 <AmiBlitz3.ab3@24585>     MOVE.b (a5)+,d0
000338C6 <AmiBlitz3.ab3@24586>    BEQ JL_0_DFA0
000338CA <AmiBlitz3.ab3@24587>    CMP.b #$22,d0
000338CE <AmiBlitz3.ab3@24588>    BNE 'l4
000338D2 <AmiBlitz3.ab3@24589>    MOVE.b #0,d0
000338D4 <AmiBlitz3.ab3@24590>    ASR.l #8,d0
000338D8 <AmiBlitz3.ab3@24591> BRA 'do
000338DC <AmiBlitz3.ab3@24594>    CMP.b #$22,(a5)+
000338E0 <AmiBlitz3.ab3@24595>    BNE JUMP_error4char
000338E4 <AmiBlitz3.ab3@24598>   MOVE.w #$2b7c,d1
000338EA <AmiBlitz3.ab3@24599>    TST.w varmode
000338EE <AmiBlitz3.ab3@24600>    BEQ 'g3
000338F2 <AmiBlitz3.ab3@24601>    BCLR #9,d1
000338F8 <AmiBlitz3.ab3@24604>     JSR writeword
000338FA <AmiBlitz3.ab3@24605>     MOVE.l d0,d1
00033900 <AmiBlitz3.ab3@24606>     JSR writelong
00033902 <AmiBlitz3.ab3@24607>     MOVE.w d3,d1
00033908 <AmiBlitz3.ab3@24608>     JSR writeword
0003390E <AmiBlitz3.ab3@24609>     JSR get1bytemain
00033910 <AmiBlitz3.ab3@24610> RTS
00033916 <AmiBlitz3.ab3@24616> JMP noleterr
0003391C <AmiBlitz3.ab3@24620>   MOVE.w d2,vartype
00033920 <AmiBlitz3.ab3@24621>   MOVE.b #$3,D2
00033924 <AmiBlitz3.ab3@24624>   CMP.b #5,d2
00033928 <AmiBlitz3.ab3@24625>   BNE 'l1
0003392E <AmiBlitz3.ab3@24626>   MOVE.l a2,currtype
00033932 <AmiBlitz3.ab3@24630>   MOVEM.w D2-D3,-(A7)
00033938 <AmiBlitz3.ab3@24631>   MOVE.w varmode,-(A7)
0003393E <AmiBlitz3.ab3@24632>   MOVE.l a2,leftsidetype
00033942 <AmiBlitz3.ab3@24633>   BTST #$f,d2
00033946 <AmiBlitz3.ab3@24634>   BEQ 'nomultiassign
0003394C <AmiBlitz3.ab3@24635>   CLR.l leftsidetype                        ;its multiassign to type entries so no typecheck need
00033950 <AmiBlitz3.ab3@24636> 'nomultiassign  ANDI.w #$FF,D2
00033956 <AmiBlitz3.ab3@24637>   MOVE.l lastoffset_org,-(A7)
0003395A <AmiBlitz3.ab3@24638>   BSR.w eval                                ; calc right side of var assign
0003395E <AmiBlitz3.ab3@24640>   MOVEM.l a0/a1,-(a7)
00033964 <AmiBlitz3.ab3@24641>   MOVE.l leftsidetype,a0
0003396A <AmiBlitz3.ab3@24642>   CMP.l #0,a0
0003396E <AmiBlitz3.ab3@24643>   BEQ 'nocheck
00033976 <AmiBlitz3.ab3@24644>   CMP.l #$100,4(a0)
0003397A <AmiBlitz3.ab3@24645>   BLE 'nocheck
00033980 <AmiBlitz3.ab3@24646>   TST.l typetocast
00033984 <AmiBlitz3.ab3@24647>   BEQ 'nocast
0003398A <AmiBlitz3.ab3@24648>   MOVE.l typetocast,a1
0003398E <AmiBlitz3.ab3@24649>   BRA 'typecheck
00033994 <AmiBlitz3.ab3@24650> 'nocast  TST.l rightsidetype
00033998 <AmiBlitz3.ab3@24651>   BEQ 'nocheck
0003399E <AmiBlitz3.ab3@24652>   MOVE.l rightsidetype,a1
000339A6 <AmiBlitz3.ab3@24653>   CMP.l #$100,4(a1)
000339AA <AmiBlitz3.ab3@24654>   BGE 'typecheck
000339B2 <AmiBlitz3.ab3@24655>   CMP.l #$3,4(a1)
000339B6 <AmiBlitz3.ab3@24656>   BEQ 'ok                              ;long assign is allow with this codelines
000339BA <AmiBlitz3.ab3@24657>   BRA 'error
000339C0 <AmiBlitz3.ab3@24659>   TST.b typecheck
000339C4 <AmiBlitz3.ab3@24660>   BEQ 'nocheck
000339CA <AmiBlitz3.ab3@24661>   TST.b notypecheck
000339CE <AmiBlitz3.ab3@24662>   BNE 'ok
000339D0 <AmiBlitz3.ab3@24663>   CMP.l a0,a1
000339D4 <AmiBlitz3.ab3@24664>   BEQ 'ok
000339D8 <AmiBlitz3.ab3@24666>   MOVE.l 4(a1),a1                   ; load the address of 1. type.
000339DC <AmiBlitz3.ab3@24667>   CMP.l $a(a1),a0                   ; check if the bigger type contain in first place same type as the function need
000339E0 <AmiBlitz3.ab3@24668>   BEQ 'ok
000339E6 <AmiBlitz3.ab3@24670>  JMP   error_convert_types     ;for syntax 4  = typecheck
000339EC <AmiBlitz3.ab3@24673>    CLR.l typetocast
000339F0 <AmiBlitz3.ab3@24674>    MOVEM.l (a7)+, a0/a1
000339F6 <AmiBlitz3.ab3@24675>   MOVE.l (A7)+,lastoffset_org
000339FC <AmiBlitz3.ab3@24676>   MOVE.w commode,D1
00033A00 <AmiBlitz3.ab3@24677>    BNE.w JL_0_DFCC
00033A04 <AmiBlitz3.ab3@24678>    BSR.w JL_0_B63C
00033A0A <AmiBlitz3.ab3@24681>   MOVE.w (A7)+,varmode
00033A0E <AmiBlitz3.ab3@24682>   MOVEM.w (A7)+,D2-D3
00033A12 <AmiBlitz3.ab3@24684>   MOVE.w #$2B40,D1
00033A18 <AmiBlitz3.ab3@24685>   MOVE.w varmode,D4
00033A1C <AmiBlitz3.ab3@24686>    BEQ.w JL_0_DFE8
00033A20 <AmiBlitz3.ab3@24687>   BCLR #$9,D1
00033A24 <AmiBlitz3.ab3@24690>   BTST #$F,D2
00033A28 <AmiBlitz3.ab3@24691>    BEQ.w JL_0_E090
00033A2E <AmiBlitz3.ab3@24692>    TST.b stackcorrect
00033A32 <AmiBlitz3.ab3@24693>    BNE 'st1
00033A38 <AmiBlitz3.ab3@24694>   MOVE.w commode,D1
00033A3C <AmiBlitz3.ab3@24695>    BEQ.w JL_0_E004
00033A42 <AmiBlitz3.ab3@24698>   MOVE.w pulla2,D1
00033A48 <AmiBlitz3.ab3@24699>    JSR writeword
00033A4C <AmiBlitz3.ab3@24702>   MOVE.w #$2480,D1
00033A50 <AmiBlitz3.ab3@24703>    MOVEM.l a0/d0,-(a7)
00033A56 <AmiBlitz3.ab3@24704>    MOVEA.l lastoffset_org,A0
00033A58 <AmiBlitz3.ab3@24705>    MOVE.l A0,D0
00033A5C <AmiBlitz3.ab3@24706>    BEQ.w 'skip
00033A5E <AmiBlitz3.ab3@24707>    MOVEA.l D0,A0
00033A66 <AmiBlitz3.ab3@24708>    MOVE.l $A(A0),currtype
00033A6A <AmiBlitz3.ab3@24711>   MOVEM.l (a7)+,a0/d0
00033A6E <AmiBlitz3.ab3@24712>   CMP.w #$2C,D0
00033A72 <AmiBlitz3.ab3@24713>    BNE.w JL_0_E090
00033A76 <AmiBlitz3.ab3@24714>     MOVE.w #$24C0,D1
00033A7A <AmiBlitz3.ab3@24715>    BSR.w JL_0_E090                                         ;write store
00033A80 <AmiBlitz3.ab3@24718>    MOVE.l lastoffset_org,D0
00033A88 <AmiBlitz3.ab3@24722>   MOVE.w #$FFFF,commode
00033A8E <AmiBlitz3.ab3@24723>   CLR.w varcodelen
00033A96 <AmiBlitz3.ab3@24724>   MOVE.b #1,optiarray
00033A9C <AmiBlitz3.ab3@24725>   MOVE.w pusha2,D1
00033AA2 <AmiBlitz3.ab3@24726>    JSR writeword
00033AA8 <AmiBlitz3.ab3@24727>   TST.l lastoffset_org
00033AAC <AmiBlitz3.ab3@24728>   BEQ dimmore
00033AB2 <AmiBlitz3.ab3@24729>   MOVEA.l lastoffset_org,A0
00033AB4 <AmiBlitz3.ab3@24730>   MOVE.l (A0),D0
00033AB8 <AmiBlitz3.ab3@24731>    BEQ.w JUMP_comerr
00033ABA <AmiBlitz3.ab3@24732>   MOVEA.l D0,A0
00033AC0 <AmiBlitz3.ab3@24733>   MOVE.l A0,lastoffset_org
00033AC6 <AmiBlitz3.ab3@24734>   BTST #$1,$7(A0)
00033ACA <AmiBlitz3.ab3@24735>    BNE.w JUMP_nocomerr
00033ACE <AmiBlitz3.ab3@24736>   MOVEA.l $A(A0),A1
00033AD2 <AmiBlitz3.ab3@24737>   MOVE.l $4(A1),D2
00033AD8 <AmiBlitz3.ab3@24740>   BTST #$0,$7(A0)
00033ADC <AmiBlitz3.ab3@24741>    BNE.w JL_0_E078
00033AE2 <AmiBlitz3.ab3@24742>   CMP.l #$100,D2
00033AE6 <AmiBlitz3.ab3@24743>    BCC.l JUMP_nocomerr
00033AEA <AmiBlitz3.ab3@24744> BRA.w JL_0_E088                                     ; do do type\x= 10,20,30....
00033AF0 <AmiBlitz3.ab3@24747>         CLR.b optiarray
00033AF4 <AmiBlitz3.ab3@24748>         CMP.w #"@@",(a5)
00033AF8 <AmiBlitz3.ab3@24749>         BEQ 'n1
00033AFC <AmiBlitz3.ab3@24750> BRA 'd1
00033B02 <AmiBlitz3.ab3@24753>   JSR nextline
00033B04 <AmiBlitz3.ab3@24754>         MOVE.l a5,-(a7)
00033B06 <AmiBlitz3.ab3@24757>   MOVE.b (a5)+,d0
00033B0A <AmiBlitz3.ab3@24758>         CMP.b #$20,d0
00033B0E <AmiBlitz3.ab3@24759>         BEQ 'l2
00033B10 <AmiBlitz3.ab3@24760>         MOVE.l (a7)+,a5
00033B14 <AmiBlitz3.ab3@24761>         CMP.b #";",d0
00033B18 <AmiBlitz3.ab3@24762>         BEQ 'n1
00033B1E <AmiBlitz3.ab3@24765>         TST.w debugmode
00033B22 <AmiBlitz3.ab3@24766>         BEQ JL_0_DEE0
00033B24 <AmiBlitz3.ab3@24767>         MOVE.l a0,-(a7)
00033B2A <AmiBlitz3.ab3@24768>         MOVE.l pushat,a0
00033B30 <AmiBlitz3.ab3@24769>         CMP.l #0,a0
00033B34 <AmiBlitz3.ab3@24770>         BNE 'o1
00033B38 <AmiBlitz3.ab3@24771> BRA 'skip
00033B40 <AmiBlitz3.ab3@24774>         ADD.l #1,2(a0)
00033B46 <AmiBlitz3.ab3@24777>   CLR.w commode
00033B4E <AmiBlitz3.ab3@24778>         MOVE.b #1,stackcorrect
00033B50 <AmiBlitz3.ab3@24779>         MOVE.l (a7)+,a0
00033B56 <AmiBlitz3.ab3@24780> JMP JL_0_DEE0
00033B5C <AmiBlitz3.ab3@24783> JMP nocomerr
00033B62 <AmiBlitz3.ab3@24786>   CMP.l #$100,D2
00033B66 <AmiBlitz3.ab3@24787>    BCS.w JL_0_E084
00033B68 <AmiBlitz3.ab3@24788>   MOVEQ.l #$00,D2
00033B6C <AmiBlitz3.ab3@24791>   BSET #$E,D2
00033B70 <AmiBlitz3.ab3@24794>   BSET #$F,D2
00033B74 <AmiBlitz3.ab3@24795> BRA.w JL_0_DEE0
00033B7A <AmiBlitz3.ab3@24798>    MOVE.l destpointer,a4
00033B82 <AmiBlitz3.ab3@24799>    MOVE.l #$f22a6400,-4(a4)
00033B88 <AmiBlitz3.ab3@24800>    MOVE.w arrayoffset,d1
00033B8E <AmiBlitz3.ab3@24801> JMP writeword
00033B94 <AmiBlitz3.ab3@24804> JMP comerr
00033B9A <AmiBlitz3.ab3@24807>    TST.b fpu
00033B9E <AmiBlitz3.ab3@24808>    BEQ 'nofloat
00033BA2 <AmiBlitz3.ab3@24809>    CMP.b #5,d2
00033BA6 <AmiBlitz3.ab3@24810>    BNE 'nofloat
00033BAC <AmiBlitz3.ab3@24811>    CLR.w fp0var
00033BB2 <AmiBlitz3.ab3@24812>    LEA regtable,a4
00033BB4 <AmiBlitz3.ab3@24813>    TST.l (a4)
00033BB8 <AmiBlitz3.ab3@24814>    BEQ 'noreg
00033BBC <AmiBlitz3.ab3@24815>    BTST #15,d2                                             ;regvars
00033BC0 <AmiBlitz3.ab3@24816>    BNE 'noreg
00033BC4 <AmiBlitz3.ab3@24817>    CMP.w 0+4(a4),d3
00033BC8 <AmiBlitz3.ab3@24818>    BNE 'doreg1
00033BCE <AmiBlitz3.ab3@24819>    MOVE.l #$f2000380,d1
00033BD4 <AmiBlitz3.ab3@24820>    MOVE.w regnum,d0
00033BD8 <AmiBlitz3.ab3@24821>    BNE 'noopt
00033BDE <AmiBlitz3.ab3@24827>    MOVE.l destpointer,a4
00033BE6 <AmiBlitz3.ab3@24828>    CMP.l #$f2001c80,-8(a4)
00033BEA <AmiBlitz3.ab3@24829>    BNE 'noopt
00033BF2 <AmiBlitz3.ab3@24830>    CMP.l #$f2000422,-4(a4)
00033BF6 <AmiBlitz3.ab3@24831>    BNE 'noopt
00033BFC <AmiBlitz3.ab3@24832>    MOVE.l #$f20003a2,d1
00033C06 <AmiBlitz3.ab3@24833>    SUB.l #8,destpointer
00033C08 <AmiBlitz3.ab3@24836>    ASL.w #7,d0
00033C0A <AmiBlitz3.ab3@24837>    OR.w d0,d1
00033C10 <AmiBlitz3.ab3@24838>    JSR writelong
00033C12 <AmiBlitz3.ab3@24839> RTS
00033C16 <AmiBlitz3.ab3@24842>   CMP.w 8+4(a4),d3
00033C1A <AmiBlitz3.ab3@24843>    BNE 'doreg2
00033C20 <AmiBlitz3.ab3@24844>    MOVE.l #$f2000300,d1
00033C26 <AmiBlitz3.ab3@24845>    MOVE.w regnum,d0
00033C28 <AmiBlitz3.ab3@24846>    ASL.w #7,d0
00033C2A <AmiBlitz3.ab3@24847>    OR.w d0,d1
00033C30 <AmiBlitz3.ab3@24848>    JSR writelong
00033C32 <AmiBlitz3.ab3@24849> RTS
00033C36 <AmiBlitz3.ab3@24852>   CMP.w 16+4(a4),d3
00033C3A <AmiBlitz3.ab3@24853>    BNE 'doreg3
00033C40 <AmiBlitz3.ab3@24854>    MOVE.l #$f2000280,d1
00033C46 <AmiBlitz3.ab3@24855>    MOVE.w regnum,d0
00033C48 <AmiBlitz3.ab3@24856>    ASL.w #7,d0
00033C4A <AmiBlitz3.ab3@24857>    OR.w d0,d1
00033C50 <AmiBlitz3.ab3@24858>    JSR  writelong
00033C52 <AmiBlitz3.ab3@24859>  RTS
00033C56 <AmiBlitz3.ab3@24862>   CMP.w 24+4(a4),d3
00033C5A <AmiBlitz3.ab3@24863>    BNE 'doreg4
00033C60 <AmiBlitz3.ab3@24864>    MOVE.l #$f2000200,d1
00033C66 <AmiBlitz3.ab3@24865>    MOVE.w regnum,d0
00033C68 <AmiBlitz3.ab3@24866>    ASL.w #7,d0
00033C6A <AmiBlitz3.ab3@24867>    OR.w d0,d1
00033C70 <AmiBlitz3.ab3@24868>    JSR writelong
00033C72 <AmiBlitz3.ab3@24869> RTS
00033C76 <AmiBlitz3.ab3@24872>   CMP.w 32+4(a4),d3
00033C7A <AmiBlitz3.ab3@24873>    BNE 'noreg
00033C80 <AmiBlitz3.ab3@24874>    MOVE.l #$f2000180,d1
00033C86 <AmiBlitz3.ab3@24875>    MOVE.w regnum,d0
00033C88 <AmiBlitz3.ab3@24876>    ASL.w #7,d0
00033C8A <AmiBlitz3.ab3@24877>    OR.w d0,d1
00033C90 <AmiBlitz3.ab3@24878>    JSR writelong
00033C92 <AmiBlitz3.ab3@24879> RTS
00033C98 <AmiBlitz3.ab3@24882>    TST.w regnum
00033C9C <AmiBlitz3.ab3@24883>    BNE 'nofp0
00033CA2 <AmiBlitz3.ab3@24884>    MOVE.l destpointer ,a4
00033CAA <AmiBlitz3.ab3@24885>    CMP.l #$f2304400,-6(a4)
00033CAE <AmiBlitz3.ab3@24886>    BNE 'do
00033CB4 <AmiBlitz3.ab3@24887>    CMP.w #$1990,-2(a4)
00033CB8 <AmiBlitz3.ab3@24888>    BNE 'do
00033CBC <AmiBlitz3.ab3@24889>    BTST #15,d2                                             ;types ?
00033CC0 <AmiBlitz3.ab3@24890>    BNE 'do
00033CC6 <AmiBlitz3.ab3@24891>   MOVE.l #$2b701990,d1                                     ;var
00033CCC <AmiBlitz3.ab3@24892>   TST.w varmode
00033CD0 <AmiBlitz3.ab3@24893>   BEQ 'glob1
00033CD4 <AmiBlitz3.ab3@24894>   BCLR #25,d1
00033CD8 <AmiBlitz3.ab3@24897>   MOVE.l d1,-6(a4)
00033CDC <AmiBlitz3.ab3@24898>   MOVE.w d3,-2(a4)
00033CE2 <AmiBlitz3.ab3@24899>   CLR.w fp0var
00033CEA <AmiBlitz3.ab3@24900>   MOVE.w #$ffff,fp0mode
00033CEC <AmiBlitz3.ab3@24901> RTS
00033CF4 <AmiBlitz3.ab3@24904>    CMP.l #$f22d4400,-6(a4)                                 ;fmove.s (a5),fp0
00033CF8 <AmiBlitz3.ab3@24905>    BNE 'do3
00033D02 <AmiBlitz3.ab3@24906>    CMP.l #newtype_double,currtype
00033D06 <AmiBlitz3.ab3@24907>    BEQ 'do4
00033D0A <AmiBlitz3.ab3@24910>   MOVE.w #$2b6d,d1
00033D10 <AmiBlitz3.ab3@24911>    TST.w varmode
00033D14 <AmiBlitz3.ab3@24912>    BEQ 'g2
00033D18 <AmiBlitz3.ab3@24913>     BCLR #9,d1
00033D1C <AmiBlitz3.ab3@24916>     CMP.w #$2b6d,d1
00033D20 <AmiBlitz3.ab3@24917>     BNE 'd1
00033D24 <AmiBlitz3.ab3@24918>     CMP.w -2(a4),d3
00033D28 <AmiBlitz3.ab3@24919>     BNE 'd1
00033D2E <AmiBlitz3.ab3@24920>     SUBQ.l #6,destpointer
00033D32 <AmiBlitz3.ab3@24921> BRA 'd12
00033D36 <AmiBlitz3.ab3@24924>     MOVE.w d1,-6(a4)                                       ;fmove.s to move.l mem,mem
00033D3C <AmiBlitz3.ab3@24925>     MOVE.w -2(a4),-4(a4)
00033D40 <AmiBlitz3.ab3@24926>     MOVE.w d3,-2(a4)
00033D46 <AmiBlitz3.ab3@24929>   CLR.w fp0var
00033D4E <AmiBlitz3.ab3@24930>     MOVE.w #$ffff,fp0mode
00033D50 <AmiBlitz3.ab3@24931> RTS
00033D58 <AmiBlitz3.ab3@24934>   CMP.l #$f22c4400,-6(a4)                                  ;fmove.s (a4)
00033D5C <AmiBlitz3.ab3@24935>    BNE 'do4
00033D60 <AmiBlitz3.ab3@24936>    MOVE.w #$2b6c,d1
00033D66 <AmiBlitz3.ab3@24937>       TST.w varmode
00033D6A <AmiBlitz3.ab3@24938>    BEQ 'g3
00033D6E <AmiBlitz3.ab3@24939>    BCLR #9,d1
00033D72 <AmiBlitz3.ab3@24942>   MOVE.w d1,-6(a4)
00033D78 <AmiBlitz3.ab3@24943>     MOVE.w -2(a4),-4(a4)
00033D7C <AmiBlitz3.ab3@24944>     MOVE.w d3,-2(a4)
00033D82 <AmiBlitz3.ab3@24945>     CLR.w fp0var
00033D8A <AmiBlitz3.ab3@24946>     MOVE.w #$ffff,fp0mode
00033D8C <AmiBlitz3.ab3@24947> RTS
00033D92 <AmiBlitz3.ab3@24950>   MOVE.w d3,fp0var
00033D9C <AmiBlitz3.ab3@24951>    MOVE.w varmode,fp0mode
00033D9E <AmiBlitz3.ab3@24952>    ADDQ.l #6,a4
00033DA4 <AmiBlitz3.ab3@24953>    MOVE.l a4,fp0addr
00033DAE <AmiBlitz3.ab3@24954>    MOVE.l firstiff,fp0iff
00033DB2 <AmiBlitz3.ab3@24957>   MOVEM.l d0/d4,-(a7)
00033DB4 <AmiBlitz3.ab3@24958>    MOVEQ #0,d0
00033DBA <AmiBlitz3.ab3@24959>     MOVE.w regnum,d0
00033DBC <AmiBlitz3.ab3@24960>    ASL.w #7,d0                                             ;fpu store var
00033DC0 <AmiBlitz3.ab3@24961>   BTST #15,d2
00033DC4 <AmiBlitz3.ab3@24962>    BEQ 'var
00033DC6 <AmiBlitz3.ab3@24963>    MOVE.w d1,d4
00033DCA <AmiBlitz3.ab3@24964>    CMP.w #$24c0,d4
00033DCE <AmiBlitz3.ab3@24965>    BNE 'nopl
00033DD4 <AmiBlitz3.ab3@24966>    MOVE.l #$f21a6400,d1
00033DD6 <AmiBlitz3.ab3@24967>    MOVEQ #0,d3
00033DDA <AmiBlitz3.ab3@24968> BRA 'glob
00033DE0 <AmiBlitz3.ab3@24972>   MOVE.l #$f2126400,d1
00033DE2 <AmiBlitz3.ab3@24973>    TST.w d3                                                ;offset =0
00033DE6 <AmiBlitz3.ab3@24974>    BNE 'offset
00033DEC <AmiBlitz3.ab3@24975>    MOVE.l #$f2126400,d1
00033DEE <AmiBlitz3.ab3@24983>    MOVEQ #0,d3
00033DF2 <AmiBlitz3.ab3@24984> BRA 'glob
00033DF8 <AmiBlitz3.ab3@24987>   MOVE.l #$f22d6400,d1                                     ;var
00033DFE <AmiBlitz3.ab3@24988>   TST.w varmode
00033E02 <AmiBlitz3.ab3@24989>   BEQ 'glob
00033E06 <AmiBlitz3.ab3@24990>   BCLR #16,d1
00033E08 <AmiBlitz3.ab3@24991>  'glob OR.l d0,d1
00033E12 <AmiBlitz3.ab3@24994>   CMP.l #newtype_double,currtype
00033E16 <AmiBlitz3.ab3@24995>   BNE 'dbl1
00033E1C <AmiBlitz3.ab3@24996>   OR.l #$00001000,d1
00033E22 <AmiBlitz3.ab3@24999>   JSR writelong
00033E28 <AmiBlitz3.ab3@25000>   CLR.l currtype
00033E2C <AmiBlitz3.ab3@25001>   MOVEM.l (a7)+,d0/d4
00033E2E <AmiBlitz3.ab3@25002>   MOVE.l d3,d1
00033E32 <AmiBlitz3.ab3@25003>   BEQ 'nooffs
00033E38 <AmiBlitz3.ab3@25004> JMP writeword
00033E3A <AmiBlitz3.ab3@25007> RTS
00033E40 <AmiBlitz3.ab3@25021>     TST.b fast                                             ;write lea->xx(a2)
00033E44 <AmiBlitz3.ab3@25022>    BEQ 'la10
00033E4A <AmiBlitz3.ab3@25026>    TST.b quickadd
00033E50 <AmiBlitz3.ab3@25028>      CLR.b quickadd
00033E54 <AmiBlitz3.ab3@25029>    CMP.w #$2480,d1
00033E58 <AmiBlitz3.ab3@25030>    BNE 'la10
00033E5E <AmiBlitz3.ab3@25031>    TST.b optiarray
00033E62 <AmiBlitz3.ab3@25032>    BNE 'la10
00033E68 <AmiBlitz3.ab3@25033>    MOVE.l destpointer,a4
00033E6E <AmiBlitz3.ab3@25034>    CMP.w #$45ea,-4(a4)
00033E72 <AmiBlitz3.ab3@25035>    BNE 'la10
00033E7A <AmiBlitz3.ab3@25036>    CMP.w #8,pushclen
00033E7E <AmiBlitz3.ab3@25037>    BEQ 'la100
00033E86 <AmiBlitz3.ab3@25038>    CMP.w #6,pushclen
00033E8A <AmiBlitz3.ab3@25039>    BNE 'la10
00033E8E <AmiBlitz3.ab3@25040>    CMP.b #3,d2
00033E92 <AmiBlitz3.ab3@25041>    BCS 'la110
00033E98 <AmiBlitz3.ab3@25043>    MOVE.w #$2540,-2(a4)
00033E9E <AmiBlitz3.ab3@25044>    MOVE.w arrayoffset,d1
00033EA4 <AmiBlitz3.ab3@25045> JMP writeword
00033EAA <AmiBlitz3.ab3@25048>    CLR.b quickadd
00033EAC <AmiBlitz3.ab3@25049> RTS
00033EB0 <AmiBlitz3.ab3@25052>    CMP.b #2,d2
00033EB4 <AmiBlitz3.ab3@25053>    BNE 'la120
00033EBA <AmiBlitz3.ab3@25054>     MOVE.w #$3540,-2(a4)
00033EC0 <AmiBlitz3.ab3@25055>    MOVE.w arrayoffset,d1
00033EC6 <AmiBlitz3.ab3@25056> JMP writeword
00033ECA <AmiBlitz3.ab3@25059>   CMP.b #1,d2
00033ECE <AmiBlitz3.ab3@25060>    BNE.s 'la10
00033ED4 <AmiBlitz3.ab3@25061>     MOVE.w #$1540,-2(a4)
00033EDA <AmiBlitz3.ab3@25062>    MOVE.w arrayoffset,d1
00033EE0 <AmiBlitz3.ab3@25063> JMP writeword
00033EE4 <AmiBlitz3.ab3@25066>    CMP.b #3,d2
00033EE8 <AmiBlitz3.ab3@25067>    BCS 'la11
00033EEE <AmiBlitz3.ab3@25068>    MOVE.w #$2540,-4(a4)
00033EF0 <AmiBlitz3.ab3@25069> RTS
00033EF4 <AmiBlitz3.ab3@25072>    CMP.b #2,d2
00033EF8 <AmiBlitz3.ab3@25073>    BNE 'la12
00033EFE <AmiBlitz3.ab3@25074>     MOVE.w #$3540,-4(a4)
00033F00 <AmiBlitz3.ab3@25075> RTS
00033F04 <AmiBlitz3.ab3@25077>  'la12 CMP.b #1,d2
00033F08 <AmiBlitz3.ab3@25078>    BNE.s 'la10
00033F0E <AmiBlitz3.ab3@25079>     MOVE.w #$1540,-4(a4)
00033F10 <AmiBlitz3.ab3@25080> RTS
00033F16 <AmiBlitz3.ab3@25083>   CLR.b optiarray
00033F1A <AmiBlitz3.ab3@25084>    CMP.b #$1,D2
00033F1E <AmiBlitz3.ab3@25085>    BEQ.w JL_0_E0AC
00033F22 <AmiBlitz3.ab3@25086>    BSR.w varalign
00033F26 <AmiBlitz3.ab3@25087>    CMP.b #$3,D2
00033F2A <AmiBlitz3.ab3@25088>    BCC.w writevarlong
00033F30 <AmiBlitz3.ab3@25089>    TST.b fast                                              ;optiimmi
00033F34 <AmiBlitz3.ab3@25090>    BEQ 'l10b
00033F3A <AmiBlitz3.ab3@25095>    MOVE.l destpointer,a0
00033F40 <AmiBlitz3.ab3@25096>    SUB.l imm_addr,a0
00033F46 <AmiBlitz3.ab3@25097>    CMP.l #4,a0
00033F4A <AmiBlitz3.ab3@25098>    BNE 'l10
00033F50 <AmiBlitz3.ab3@25099>    CLR.l imm_addr
00033F56 <AmiBlitz3.ab3@25100>    MOVE.l destpointer,a4
00033F5A <AmiBlitz3.ab3@25101>    OR.w #$107c,d1
00033F5E <AmiBlitz3.ab3@25102>    MOVE.w d1,-4(a4)
00033F60 <AmiBlitz3.ab3@25103>     MOVE.w D3,D1
00033F66 <AmiBlitz3.ab3@25104> JMP writeword
00033F6C <AmiBlitz3.ab3@25107>   MOVE.l destpointer,a0
00033F72 <AmiBlitz3.ab3@25108>   SUB.l load_var_addr,a0
00033F78 <AmiBlitz3.ab3@25109>   CMP.l #4,a0
00033F7C <AmiBlitz3.ab3@25110>   BNE 'l10b
00033F82 <AmiBlitz3.ab3@25111>   CMP.w #$302d,-4(a4)                                      ;check 68k opcode
00033F86 <AmiBlitz3.ab3@25112>   BNE 'l10b
00033F8C <AmiBlitz3.ab3@25114>   CLR.l load_var_addr
00033F92 <AmiBlitz3.ab3@25115>   MOVE.l destpointer,a4
00033F96 <AmiBlitz3.ab3@25116>   OR.w #$102d,d1
00033F9A <AmiBlitz3.ab3@25117>   MOVE.w d1,-4(a4)
00033F9C <AmiBlitz3.ab3@25118>   MOVE.w d3,d1
00033FA2 <AmiBlitz3.ab3@25119> JMP writeword
00033FA6 <AmiBlitz3.ab3@25122>   ORI.w #$1000,D1                                          ;word
00033FAA <AmiBlitz3.ab3@25123> BRA.w writestorevar
00033FB0 <AmiBlitz3.ab3@25127>    TST.b fast                                              ;optiimmi
00033FB4 <AmiBlitz3.ab3@25128>    BEQ 'l10b
00033FBA <AmiBlitz3.ab3@25133>    MOVE.l destpointer,a0
00033FC0 <AmiBlitz3.ab3@25134>    SUB.l imm_addr,a0
00033FC6 <AmiBlitz3.ab3@25135>    CMP.l #4,a0
00033FCA <AmiBlitz3.ab3@25136>    BNE 'l10
00033FD0 <AmiBlitz3.ab3@25137>    CLR.l imm_addr
00033FD6 <AmiBlitz3.ab3@25138>    MOVE.l destpointer,a4
00033FDA <AmiBlitz3.ab3@25139>    OR.w #$7c,d1
00033FDE <AmiBlitz3.ab3@25140>    EORI #$3000,d1
00033FE2 <AmiBlitz3.ab3@25141>    MOVE.w d1,-4(a4)
00033FE4 <AmiBlitz3.ab3@25142>       MOVE.w D3,D1
00033FEA <AmiBlitz3.ab3@25143> JMP writeword
00033FF0 <AmiBlitz3.ab3@25146>   MOVE.l destpointer,a0
00033FF6 <AmiBlitz3.ab3@25147>   SUB.l load_var_addr,a0
00033FFC <AmiBlitz3.ab3@25148>   CMP.l #4,a0
00034000 <AmiBlitz3.ab3@25149>   BNE 'l10b
00034006 <AmiBlitz3.ab3@25150>   CLR.l load_var_addr
0003400C <AmiBlitz3.ab3@25151>   MOVE.l destpointer,a4
00034012 <AmiBlitz3.ab3@25152>    CMP.w #$1b6d,-4(a4)
00034016 <AmiBlitz3.ab3@25153>    BNE 'l10b
0003401A <AmiBlitz3.ab3@25154>    OR.w #$2d,d1
0003401E <AmiBlitz3.ab3@25155>    EORI #$3000,d1
00034022 <AmiBlitz3.ab3@25156>    MOVE.w d1,-4(a4)
00034024 <AmiBlitz3.ab3@25157>   MOVE.w d3,d1
0003402A <AmiBlitz3.ab3@25158> JMP writeword
00034030 <AmiBlitz3.ab3@25161>   ADDQ.w #1,pcodd                                          ;byte
00034034 <AmiBlitz3.ab3@25162>   EORI.w #$3000,D1
0003403A <AmiBlitz3.ab3@25165>   JSR writeword
0003403E <AmiBlitz3.ab3@25166>   BTST #$7,D1
00034042 <AmiBlitz3.ab3@25167>    BNE JL_0_E0C6
00034044 <AmiBlitz3.ab3@25168>   MOVE.w D3,D1
0003404A <AmiBlitz3.ab3@25169> JMP writeword
00034050 <AmiBlitz3.ab3@25172>    TST.b fast                                              ;optiimmi
00034054 <AmiBlitz3.ab3@25173>    BEQ 'l10b
0003405A <AmiBlitz3.ab3@25177>    MOVE.l destpointer,a0
00034060 <AmiBlitz3.ab3@25178>    SUB.l imm_addr,a0
00034066 <AmiBlitz3.ab3@25179>    CMP.l #6,a0
0003406A <AmiBlitz3.ab3@25180>    BNE 'l10
00034070 <AmiBlitz3.ab3@25181>    CLR.l imm_addr
00034076 <AmiBlitz3.ab3@25182>    MOVE.l destpointer,a4
0003407A <AmiBlitz3.ab3@25183>    OR.w #$7c,d1
0003407E <AmiBlitz3.ab3@25184>    MOVE.w d1,-6(a4)
00034080 <AmiBlitz3.ab3@25185>     MOVE.w D3,D1
00034086 <AmiBlitz3.ab3@25186> JMP writeword
0003408C <AmiBlitz3.ab3@25189>   MOVE.l destpointer,a0
00034092 <AmiBlitz3.ab3@25190>   SUB.l load_var_addr,a0
00034098 <AmiBlitz3.ab3@25191>   CMP.l #4,a0
0003409C <AmiBlitz3.ab3@25192>   BNE 'l10b
000340A2 <AmiBlitz3.ab3@25193>   CLR.l load_var_addr
000340A8 <AmiBlitz3.ab3@25194>   MOVE.l destpointer,a4
000340AE <AmiBlitz3.ab3@25195>   CMP.w #$245f,-2(a4)
000340B2 <AmiBlitz3.ab3@25196>   BEQ 'l10b
000340B6 <AmiBlitz3.ab3@25197>   OR.w #$28,d1
000340BA <AmiBlitz3.ab3@25198>   OR.w d1,-4(a4)
000340C0 <AmiBlitz3.ab3@25199>   CMP.w #$2b6d,-4(a4)
000340C4 <AmiBlitz3.ab3@25200>   BNE 'd1
000340C8 <AmiBlitz3.ab3@25201>   CMP.w -2(a4),d3
000340CC <AmiBlitz3.ab3@25202>   BNE 'd1
000340D2 <AmiBlitz3.ab3@25203>   SUBQ.l #4,destpointer
000340D4 <AmiBlitz3.ab3@25204> RTS
000340D6 <AmiBlitz3.ab3@25207>   MOVE.w d3,d1
000340DC <AmiBlitz3.ab3@25208> JMP writeword
000340E2 <AmiBlitz3.ab3@25211>   JSR writeword
000340E6 <AmiBlitz3.ab3@25212>   BTST #$7,D1
000340EA <AmiBlitz3.ab3@25213>    BNE.b JL_0_E0C6
000340EC <AmiBlitz3.ab3@25214>   MOVE.w D3,D1
000340F2 <AmiBlitz3.ab3@25215> JMP writeword
000340F4 <AmiBlitz3.ab3@25218> RTS
000340F6 <AmiBlitz3.ab3@25222>   MOVE.w D1,-(A7)
000340FA <AmiBlitz3.ab3@25223>   MOVE.w pcodd(PC),D1
000340FC <AmiBlitz3.ab3@25224>   LSR.w #1,D1
00034100 <AmiBlitz3.ab3@25225>    BCC.b JL_0_E0E2
00034106 <AmiBlitz3.ab3@25226>   CLR.w pcodd
0003410C <AmiBlitz3.ab3@25227>   MOVE.w add1a2,D1
00034112 <AmiBlitz3.ab3@25228>    JSR writeword
00034114 <AmiBlitz3.ab3@25231>   MOVE.w (A7)+,D1
00034116 <AmiBlitz3.ab3@25232> RTS
00034118 <AmiBlitz3.ab3@25236> add1a2:     Dc.b $52,$4A                                   ;ADDQ.W  #1,A2
0003411A <AmiBlitz3.ab3@25239> pcodd:     Ds.w 1                                          ;add 1 to this for bytes
0003411C <AmiBlitz3.ab3@25240> listadd:   Ds.w 1                                          ;set to 8 if it's a list
0003411E <AmiBlitz3.ab3@25241> listsize:  Ds.w 1
00034124 <AmiBlitz3.ab3@25245>   ADDQ.w #1,regnum
0003412C <AmiBlitz3.ab3@25246>   MOVE.b #1,nowdeclare
00034132 <AmiBlitz3.ab3@25247>   CLR.b dimkeep
0003413A <AmiBlitz3.ab3@25248>    CMP.l #"KEEP",-1(a5)
0003413E <AmiBlitz3.ab3@25249>   BNE 'nokeep
00034144 <AmiBlitz3.ab3@25250>   CMP.b #" ",3(a5)
00034148 <AmiBlitz3.ab3@25251>   BNE 'nokeep
0003414A <AmiBlitz3.ab3@25252>   ADDQ.l #3,a5
0003414E <AmiBlitz3.ab3@25255>     CMP.b #" ",(a5)
00034152 <AmiBlitz3.ab3@25256>     BNE '1
00034154 <AmiBlitz3.ab3@25257>    ADDQ #1,a5
00034158 <AmiBlitz3.ab3@25258> BRA '2
0003415E <AmiBlitz3.ab3@25261>   MOVE.l a5,lastsourcepos
00034166 <AmiBlitz3.ab3@25262>   MOVE.b #1,dimkeep
0003416A <AmiBlitz3.ab3@25270>   MOVE.w #$FF9A,D1
00034170 <AmiBlitz3.ab3@25271>   JSR uselib
00034176 <AmiBlitz3.ab3@25274>   CLR.w listadd
0003417A <AmiBlitz3.ab3@25275>   CMP.w #-$7F4D,D0
0003417E <AmiBlitz3.ab3@25276>    BNE.w JL_0_E11E
00034186 <AmiBlitz3.ab3@25277>   MOVE.w #$0008,listadd
0003418A <AmiBlitz3.ab3@25278>   MOVE.w #$FFFA,D1
00034190 <AmiBlitz3.ab3@25279>    JSR uselib
00034196 <AmiBlitz3.ab3@25280>    JSR get1bytemain
0003419C <AmiBlitz3.ab3@25283>   CLR.w nonew
000341A2 <AmiBlitz3.ab3@25284>    JSR getparameter
000341AA <AmiBlitz3.ab3@25285>   BTST #$1,flagmask+1
000341AE <AmiBlitz3.ab3@25286>    BEQ.w JUMP_syntaxerr
000341B4 <AmiBlitz3.ab3@25287>    JSR JL_0_8E3C
000341BA <AmiBlitz3.ab3@25288>   MOVE.w notshared,D1
000341BE <AmiBlitz3.ab3@25289>    BNE.w JL_0_E198
000341C6 <AmiBlitz3.ab3@25290>   MOVE.w $8(A3),temp1
000341CC <AmiBlitz3.ab3@25291>   MOVE.w proceduremode,D2
000341D0 <AmiBlitz3.ab3@25292>    BNE.w JL_0_E176
000341D6 <AmiBlitz3.ab3@25293>   MOVE.w globalvarpointer,-(A7)
000341DE <AmiBlitz3.ab3@25294>   MOVE.w $4(A3),globalvarpointer
000341E4 <AmiBlitz3.ab3@25295>   ADDQ.w #4,globalvarpointer
000341E8 <AmiBlitz3.ab3@25296>    BSR.w write_dim_code
000341EE <AmiBlitz3.ab3@25297>   MOVE.w (A7)+,globalvarpointer
000341F2 <AmiBlitz3.ab3@25298> BRA.w JL_0_E1BA
000341F8 <AmiBlitz3.ab3@25309>   MOVE.w globalvarpointer,-(A7)
000341FE <AmiBlitz3.ab3@25310>             MOVE.w proceduremode,-(a7)
00034204 <AmiBlitz3.ab3@25311>             CLR.w proceduremode
0003420C <AmiBlitz3.ab3@25312>   MOVE.w $4(A3),globalvarpointer
00034212 <AmiBlitz3.ab3@25313>   ADDQ.w #4,globalvarpointer
00034216 <AmiBlitz3.ab3@25314>    BSR.w write_dim_code
0003421C <AmiBlitz3.ab3@25315>    MOVE.w (a7)+,proceduremode
00034222 <AmiBlitz3.ab3@25316>   MOVE.w (A7)+,globalvarpointer
00034226 <AmiBlitz3.ab3@25317> BRA.w JL_0_E1BA
0003422E <AmiBlitz3.ab3@25320>   MOVE.w #$FFFF,temp1
00034232 <AmiBlitz3.ab3@25321>   MOVE.w listadd(PC),D1
00034236 <AmiBlitz3.ab3@25322>    BEQ.w JL_0_E1B6
0003423E <AmiBlitz3.ab3@25323>   MOVE.w #$4000,temp1
00034244 <AmiBlitz3.ab3@25324>   BSET #$0,$6(A3)
0003424A <AmiBlitz3.ab3@25327>         TST.w proceduremode
0003424E <AmiBlitz3.ab3@25328>        BNE 'l1
00034254 <AmiBlitz3.ab3@25329>        MOVE.w locvaroff,-(a7)
00034258 <AmiBlitz3.ab3@25332>   BSR.w write_dim_code
0003425E <AmiBlitz3.ab3@25333>         TST.w proceduremode
00034262 <AmiBlitz3.ab3@25334>         BNE JL_0_E1BA
00034268 <AmiBlitz3.ab3@25335>        MOVE.w (A7)+,locvaroff
0003426E <AmiBlitz3.ab3@25338>   JSR get1bytemain
00034272 <AmiBlitz3.ab3@25339>   CMP.w #$2C,D0
00034276 <AmiBlitz3.ab3@25340>    BNE.w JL_0_E1CE
0003427C <AmiBlitz3.ab3@25341>    JSR get1bytemain
00034280 <AmiBlitz3.ab3@25342> BRA.w JL_0_E0FC
00034282 <AmiBlitz3.ab3@25345> RTS
0003428A <AmiBlitz3.ab3@25348>   MOVE.w #$FFFF,nonew                                      ;#-1,nonew org source
00034290 <AmiBlitz3.ab3@25349>   MOVE.w beginarr,D1
00034296 <AmiBlitz3.ab3@25350>    JSR writeword
00034298 <AmiBlitz3.ab3@25351>   MOVEQ.l #$00,D1
0003429E <AmiBlitz3.ab3@25352>    JSR writeword
000342A0 <AmiBlitz3.ab3@25353>   MOVEQ.l #$04,D1
000342A8 <AmiBlitz3.ab3@25354>   BTST #$0,flagmask+1
000342AC <AmiBlitz3.ab3@25355>    BNE.w write_dim_code__pointer
000342B0 <AmiBlitz3.ab3@25356>   MOVE.w $8(A2),D1
000342B4 <AmiBlitz3.ab3@25359>   ADD.w listadd(PC),D1                                     ;size of one element.
000342BA <AmiBlitz3.ab3@25360>   MOVE.w D1,listsize
000342C0 <AmiBlitz3.ab3@25361>    JSR writeword
000342C6 <AmiBlitz3.ab3@25362>   CLR.w temp2                                              ;# dim's got
000342C8 <AmiBlitz3.ab3@25363>   MOVE.l A3,-(A7)
000342CE <AmiBlitz3.ab3@25366>   ADDQ.w #1,temp2
000342D0 <AmiBlitz3.ab3@25367>   MOVEQ.l #$03,D2                                          ;get word
000342D6 <AmiBlitz3.ab3@25368>   MOVE.w notshared,-(a7)
000342DC <AmiBlitz3.ab3@25369>    JSR eval
000342E2 <AmiBlitz3.ab3@25370>   MOVE.w (a7)+,notshared
000342E8 <AmiBlitz3.ab3@25371>   TST.b debugmode
000342EC <AmiBlitz3.ab3@25372>    BEQ.w write_dim_code__norerr0
000342F0 <AmiBlitz3.ab3@25373>   MOVE.w #$C30F,D1
000342F4 <AmiBlitz3.ab3@25379>       MOVE.w #$5281,d1
000342FA <AmiBlitz3.ab3@25380>       JSR writeword
00034300 <AmiBlitz3.ab3@25381>       MOVE.l #$4c010800,d1                                 ;dim >65536 fix
00034306 <AmiBlitz3.ab3@25382>       JSR writelong
0003430C <AmiBlitz3.ab3@25383>   MOVE.w proceduremode,D2
00034310 <AmiBlitz3.ab3@25384>    BEQ.w write_dim_code__global
00034316 <AmiBlitz3.ab3@25385>   SUBQ.w #4,locvaroff
00034320 <AmiBlitz3.ab3@25386>   MOVE.w locvaroff,putarr+2
00034324 <AmiBlitz3.ab3@25387> BRA.w write_dim_code__doit
0003432A <AmiBlitz3.ab3@25390> JMP syntaxerr
00034334 <AmiBlitz3.ab3@25393>   MOVE.w globalvarpointer,putarr+2
0003433A <AmiBlitz3.ab3@25394>   ADDQ.w #4,globalvarpointer
00034340 <AmiBlitz3.ab3@25397>   TST.b dimkeep
00034344 <AmiBlitz3.ab3@25398>            BEQ write_dim_code__doit_l1
00034346 <AmiBlitz3.ab3@25399>       MOVEQ #0,d1
0003434C <AmiBlitz3.ab3@25400>       MOVE.w putarr+2,d1
00034352 <AmiBlitz3.ab3@25401>       OR.l  #$222d0000,d1
00034358 <AmiBlitz3.ab3@25402>       MOVE.w proceduremode,D2
0003435C <AmiBlitz3.ab3@25403>       BEQ write_dim_code__doit_l2
00034362 <AmiBlitz3.ab3@25404>       TST.w notshared
00034366 <AmiBlitz3.ab3@25405>       BEQ write_dim_code__doit_l2
0003436C <AmiBlitz3.ab3@25406>       SUB.l #$00010000,d1
00034372 <AmiBlitz3.ab3@25409>   JSR writelong
00034378 <AmiBlitz3.ab3@25412>   MOVE.l putarr,D1
0003437E <AmiBlitz3.ab3@25413>       TST.w notshared
00034382 <AmiBlitz3.ab3@25414>       BNE write_dim_code__doit_l1a
00034388 <AmiBlitz3.ab3@25415>       JSR writelong
0003438C <AmiBlitz3.ab3@25416> BRA write_dim_code__doit_l4
00034392 <AmiBlitz3.ab3@25419>   JSR pokela5d
00034396 <AmiBlitz3.ab3@25422>   CMP.w #$2C,D0
0003439A <AmiBlitz3.ab3@25423>    BEQ.w write_dim_code__loop
0003439E <AmiBlitz3.ab3@25424>   CMP.w #$29,D0
000343A2 <AmiBlitz3.ab3@25425>    BNE.w JUMP_syntaxerr
000343A4 <AmiBlitz3.ab3@25426>   MOVEA.l (A7)+,A3
000343AA <AmiBlitz3.ab3@25427>   MOVE.w temp1,D1
000343AE <AmiBlitz3.ab3@25428>    BMI.w write_dim_code__nocare
000343B2 <AmiBlitz3.ab3@25432>   BTST #$E,D1
000343B6 <AmiBlitz3.ab3@25433>    BEQ.w write_dim_code__notl
000343BE <AmiBlitz3.ab3@25434>   CMPI.w #$1,temp2
000343C2 <AmiBlitz3.ab3@25435>    BNE.w JUMP_redimerr
000343C6 <AmiBlitz3.ab3@25436> BRA.w write_dim_code__nocare
000343CC <AmiBlitz3.ab3@25439> JMP redimerr
000343D2 <AmiBlitz3.ab3@25442>   CMP.w temp2,D1
000343D6 <AmiBlitz3.ab3@25443>    BNE.w JUMP_redimerr                                      ;range too long
000343DC <AmiBlitz3.ab3@25446>   LEA globalvarpointer,A0
000343E2 <AmiBlitz3.ab3@25447>   MOVE.w proceduremode,D1
000343E6 <AmiBlitz3.ab3@25448>   BEQ.w write_dim_code__gskip
000343EC <AmiBlitz3.ab3@25449>   LEA locvaroff,A0
000343F2 <AmiBlitz3.ab3@25452>   MOVE.W  extraword,(A0)
000343F6 <AmiBlitz3.ab3@25453>   BRA.W   write_dim_code__care
000343FE <AmiBlitz3.ab3@25456>   MOVE.w temp2,$8(A3)                                      ;set # dim's
00034404 <AmiBlitz3.ab3@25459>   LEA doarr,A0
0003440A <AmiBlitz3.ab3@25460>   MOVE.w $4(A3),$2(A0)
00034412 <AmiBlitz3.ab3@25461>   MOVE.w putarr+2,$6(A0)
00034414 <AmiBlitz3.ab3@25462>   MOVE.l (A0)+,D1
0003441A <AmiBlitz3.ab3@25463>    JSR writelong
0003441C <AmiBlitz3.ab3@25464>   MOVE.l (A0),D1
00034422 <AmiBlitz3.ab3@25465>    JSR writelong
00034428 <AmiBlitz3.ab3@25466>    TST.b dimkeep
0003442C <AmiBlitz3.ab3@25467>   BNE write_dim_code__care_l3
00034430 <AmiBlitz3.ab3@25470>   MOVE.w #$C400,D1
00034434 <AmiBlitz3.ab3@25471> BRA write_dim_code__care_l2
00034438 <AmiBlitz3.ab3@25474>   MOVE.w #$C405,d1
0003443E <AmiBlitz3.ab3@25477>   MOVE.w proceduremode,D2
00034442 <AmiBlitz3.ab3@25478>    BEQ.w write_dim_code__isg
00034448 <AmiBlitz3.ab3@25479>    TST.w notshared
0003444C <AmiBlitz3.ab3@25480>    BEQ write_dim_code__isg
0003444E <AmiBlitz3.ab3@25481>   ADDQ.w #1,D1
00034452 <AmiBlitz3.ab3@25484>   MOVE.w listadd(PC),D2
00034456 <AmiBlitz3.ab3@25485>    BEQ.w write_dim_code__isrg
00034458 <AmiBlitz3.ab3@25486>   MOVE.w D1,-(A7)
0003445C <AmiBlitz3.ab3@25487>   MOVE.w setles(PC),D1
00034462 <AmiBlitz3.ab3@25488>    JSR writeword
00034466 <AmiBlitz3.ab3@25489>   MOVE.w listsize(PC),D1
0003446C <AmiBlitz3.ab3@25490>    JSR writeword
0003446E <AmiBlitz3.ab3@25491>   MOVE.w (A7)+,D1
00034470 <AmiBlitz3.ab3@25492>   ADDQ.w #3,D1
00034474 <AmiBlitz3.ab3@25495> BRA.w Atokejsr
0003447A <AmiBlitz3.ab3@25502>     MOVE.l #$f23c4400,d1
00034480 <AmiBlitz3.ab3@25504>   MOVE.w regnum,d0
00034482 <AmiBlitz3.ab3@25505>   ASL.w #7,d0
00034484 <AmiBlitz3.ab3@25506>   OR.w d0,d1
0003448A <AmiBlitz3.ab3@25507>   JSR writelong
00034490 <AmiBlitz3.ab3@25513>     MOVE.l #$40490fd9,d1
00034496 <AmiBlitz3.ab3@25515>   JSR writelong
0003449C <AmiBlitz3.ab3@25516> JMP get1bytemain
000344A0 <AmiBlitz3.ab3@25520> setles:   Dc.b $38,$3C,$00,$00                             ;MOVE.W  #$0000,D4
000344A4 <AmiBlitz3.ab3@25527> vbr:                Ds.l 1
000344A6 <AmiBlitz3.ab3@25528> cfetchmode:         Ds.w 1                               ;1=fetching a constant
000344AC <AmiBlitz3.ab3@25530> constlibs           Dc.w $FDA7,$FCDF,$FD43               ;64935,64735,64835  org source
000344B0 <AmiBlitz3.ab3@25534> constpcat:          Ds.l 1
000344B4 <AmiBlitz3.ab3@25535> constlibat:         Ds.l 1
000344B8 <AmiBlitz3.ab3@25536> constmaxpc:         Dc.l $400
000344BC <AmiBlitz3.ab3@25538> stacksize:          Dc.l #DEFAULT_STACKSIZE              ;stackfuck org source
000344C0 <AmiBlitz3.ab3@25539> currentlabeladdr:   Dc.l labelbase                       ;lastrescon org source
000344C4 <AmiBlitz3.ab3@25540> currentmacroaddr:   Dc.l macrobase                       ;lastresmac org source
000344C8 <AmiBlitz3.ab3@25541> lastrestype:        Dc.l newtype_string
000344CA <AmiBlitz3.ab3@25542> rescnt:             Ds.w 1                               ;# resident
000344CC <AmiBlitz3.ab3@25543> state_of_residents: Ds.w 1                               ;reschg org source ;flag for if res's have changed
000344D0 <AmiBlitz3.ab3@25544> resat:              Dc.l residents_table                 ;??looks like not used anymore??
000344D2 <AmiBlitz3.ab3@25545> linedone:           Ds.w 1
000344E8 <AmiBlitz3.ab3@25546> directbuffer:       Ds.w 11                              ;dirpcat  dc.w 0 org source
000344EC <AmiBlitz3.ab3@25555>   Dc.l 0                                        ; bytetobyte
000344F0 <AmiBlitz3.ab3@25556>   Dc.l convert_byte_to_word                     ; bytetoword
000344F4 <AmiBlitz3.ab3@25557>   Dc.l convert_byte_to_long                     ; bytetolong
000344F8 <AmiBlitz3.ab3@25558>   Dc.l convert_byte_to_quick                    ; bytetoquick
000344FC <AmiBlitz3.ab3@25559>   Dc.l convert_byte_to_float                    ; bytetofloat
00034500 <AmiBlitz3.ab3@25560>   Dc.l convert_byte_to_long                     ; bytetolong
00034504 <AmiBlitz3.ab3@25561>   Dc.l error_convert_types                      ; noconerr
00034508 <AmiBlitz3.ab3@25564>   Dc.l convert_word_to_byte                     ; wordtobyte
0003450C <AmiBlitz3.ab3@25565>   Dc.l 0                                        ; wordtoword
00034510 <AmiBlitz3.ab3@25566>   Dc.l convert_word_to_long                     ; wordtolong
00034514 <AmiBlitz3.ab3@25567>   Dc.l convert_word_to_quick                    ; wordtoquick
00034518 <AmiBlitz3.ab3@25568>   Dc.l convert_word_to_float                    ; wordtofloat
0003451C <AmiBlitz3.ab3@25569>   Dc.l convert_word_to_long                     ; wordtolong
00034520 <AmiBlitz3.ab3@25570>   Dc.l error_convert_types                      ; noconerr
00034524 <AmiBlitz3.ab3@25573>   Dc.l convert_long_to_byte                     ; longtobyte
00034528 <AmiBlitz3.ab3@25574>   Dc.l convert_long_to_word                     ; longtoword
0003452C <AmiBlitz3.ab3@25575>   Dc.l 0                                        ; longtolong
00034530 <AmiBlitz3.ab3@25576>   Dc.l convert_long_to_quick                    ; longtoquick
00034534 <AmiBlitz3.ab3@25577>   Dc.l convert_long_to_float                    ; longtofloat
00034538 <AmiBlitz3.ab3@25578>   Dc.l 0                                        ; longtolong
0003453C <AmiBlitz3.ab3@25579>   Dc.l error_convert_types                      ; noconerr
00034540 <AmiBlitz3.ab3@25582>   Dc.l convert_quick_to_byte                    ; quicktobyte
00034544 <AmiBlitz3.ab3@25583>   Dc.l convert_quick_to_word                    ; quicktoword
00034548 <AmiBlitz3.ab3@25584>   Dc.l convert_quick_to_long                    ; quicktolong
0003454C <AmiBlitz3.ab3@25585>   Dc.l 0                                        ; quicktoquick
00034550 <AmiBlitz3.ab3@25586>   Dc.l convert_quick_to_float                   ; quicktofloat
00034554 <AmiBlitz3.ab3@25587>   Dc.l convert_quick_to_long                    ; quicktolong
00034558 <AmiBlitz3.ab3@25588>   Dc.l error_convert_types                      ; noconerr
0003455C <AmiBlitz3.ab3@25591>   Dc.l convert_float_to_byte                    ; floattobyte
00034560 <AmiBlitz3.ab3@25592>   Dc.l convert_float_to_word                    ; floattoword
00034564 <AmiBlitz3.ab3@25593>   Dc.l convert_float_to_long                    ; floattolong
00034568 <AmiBlitz3.ab3@25594>   Dc.l convert_float_to_quick                   ; floattoquick
0003456C <AmiBlitz3.ab3@25595>   Dc.l 0                                        ; floattofloat
00034570 <AmiBlitz3.ab3@25596>   Dc.l convert_float_to_long                    ; floattolong
00034574 <AmiBlitz3.ab3@25597>   Dc.l error_convert_types                      ; noconerr
00034578 <AmiBlitz3.ab3@25600>   Dc.l convert_long_to_byte                     ; longtobyte
0003457C <AmiBlitz3.ab3@25601>   Dc.l convert_long_to_word                     ; longtoword
00034580 <AmiBlitz3.ab3@25602>   Dc.l 0                                        ; longtolong
00034584 <AmiBlitz3.ab3@25603>   Dc.l convert_long_to_quick                    ; longtoquick
00034588 <AmiBlitz3.ab3@25604>   Dc.l convert_long_to_float                    ; longtofloat
0003458C <AmiBlitz3.ab3@25605>   Dc.l 0                                        ; longtolong
00034590 <AmiBlitz3.ab3@25606>   Dc.l error_convert_types                      ; noconerr
00034594 <AmiBlitz3.ab3@25609>   Dc.l error_convert_types                      ; noconerr
00034598 <AmiBlitz3.ab3@25610>   Dc.l error_convert_types                      ; noconerr
0003459C <AmiBlitz3.ab3@25611>   Dc.l string_to_long                           ; stringtolong
000345A0 <AmiBlitz3.ab3@25612>   Dc.l error_convert_types                      ; noconerr
000345A4 <AmiBlitz3.ab3@25613>   Dc.l error_convert_types                      ; noconerr
000345A8 <AmiBlitz3.ab3@25614>   Dc.l string_to_long                           ; stringtolong
000345AC <AmiBlitz3.ab3@25615>   Ds.l 1
000345AE <AmiBlitz3.ab3@25621>   Dc.b $00,$2B                                  ;+ ; add
000345B2 <AmiBlitz3.ab3@25622>   Dc.l do_plus_byte                             ;doplusb
000345B6 <AmiBlitz3.ab3@25623>   Dc.l do_plus_word                             ;doplusw
000345BA <AmiBlitz3.ab3@25624>   Dc.l do_plus_long                             ;doplusl
000345BE <AmiBlitz3.ab3@25625>   Dc.l do_plus_long                             ;doplusl
000345C2 <AmiBlitz3.ab3@25626>   Dc.l do_plus_float                            ;doplusf
000345C6 <AmiBlitz3.ab3@25627>   Ds.l 1
000345CA <AmiBlitz3.ab3@25628>   Dc.l add_strings                              ;addstrings
000345CC <AmiBlitz3.ab3@25629>   Dc.b $0B,$B8
000345CE <AmiBlitz3.ab3@25631>   Dc.b $00,$2D                                  ;- ; sub
000345D2 <AmiBlitz3.ab3@25632>   Dc.l do_minus_byte                            ;dominusb
000345D6 <AmiBlitz3.ab3@25633>   Dc.l do_minus_word                            ;dominusw
000345DA <AmiBlitz3.ab3@25634>   Dc.l do_minus_long                            ;dominusl
000345DE <AmiBlitz3.ab3@25635>   Dc.l do_minus_long                            ;dominusl
000345E2 <AmiBlitz3.ab3@25636>   Dc.l do_minus_float                           ;dominusf
000345EA <AmiBlitz3.ab3@25637>   Ds.l 2
000345EC <AmiBlitz3.ab3@25638>   Dc.b $0B,$B8
000345EE <AmiBlitz3.ab3@25640>   Dc.b $00,$2A                                  ;* ; mul
000345F2 <AmiBlitz3.ab3@25641>   Dc.l do_times_byte                            ;dotimesb
000345F6 <AmiBlitz3.ab3@25642>   Dc.l do_times_word                            ;dotimesw
000345FA <AmiBlitz3.ab3@25643>   Dc.l do_times_long                            ;dotimesl
000345FE <AmiBlitz3.ab3@25644>   Dc.l do_times_quick                           ;dotimesq
00034602 <AmiBlitz3.ab3@25645>   Dc.l do_times_float                           ;dotimesf
0003460A <AmiBlitz3.ab3@25646>   Ds.l 2
0003460C <AmiBlitz3.ab3@25647>   Dc.b $0F,$A0
0003460E <AmiBlitz3.ab3@25649>   Dc.b $00,$2F                                  ;/ ; div
00034612 <AmiBlitz3.ab3@25650>   Dc.l do_Div_byte                              ;dodivb
00034616 <AmiBlitz3.ab3@25651>   Dc.l do_Div_word                              ;dodivb
0003461A <AmiBlitz3.ab3@25652>   Dc.l do_Div_long                              ;dodivl
0003461E <AmiBlitz3.ab3@25653>   Dc.l do_Div_quick                             ;dodivq
00034622 <AmiBlitz3.ab3@25654>   Dc.l do_Div_float                             ;dodivf
0003462A <AmiBlitz3.ab3@25655>   Ds.l 2
0003462C <AmiBlitz3.ab3@25656>   Dc.b $0F,$A0
0003462E <AmiBlitz3.ab3@25658>   Dc.b $00,$26                                  ;& ; & int
00034632 <AmiBlitz3.ab3@25659>   Dc.l do_AND_byte                              ;doandb
00034636 <AmiBlitz3.ab3@25660>   Dc.l do_AND_word                              ;doandw
0003463A <AmiBlitz3.ab3@25661>   Dc.l do_AND_long                              ;doandl
0003463E <AmiBlitz3.ab3@25662>   Dc.l do_AND_long                              ;doandl
0003464A <AmiBlitz3.ab3@25663>   Ds.l 3
0003464C <AmiBlitz3.ab3@25664>   Dc.b $13,$88
0003464E <AmiBlitz3.ab3@25666>   Dc.b $00,$7C                                  ;| ;or int ;
00034652 <AmiBlitz3.ab3@25667>   Dc.l do_OR_byte                               ;doorb
00034656 <AmiBlitz3.ab3@25668>   Dc.l do_OR_word                               ;doorw
0003465A <AmiBlitz3.ab3@25669>   Dc.l do_OR_long                               ;doorl
0003465E <AmiBlitz3.ab3@25670>   Dc.l do_OR_long                               ;doorl
0003466A <AmiBlitz3.ab3@25671>   Ds.l 3
0003466C <AmiBlitz3.ab3@25672>   Dc.b $13,$88
0003466E <AmiBlitz3.ab3@25674>   Dc.b $80,$42                                  ; AND int  ;(opand-opabcd)/$1c+$8000+fnum
00034672 <AmiBlitz3.ab3@25675>   Dc.l do_AND_byte                              ;doandb
00034676 <AmiBlitz3.ab3@25676>   Dc.l do_AND_word                              ;doandw
0003467A <AmiBlitz3.ab3@25677>   Dc.l do_AND_long                              ;doandl
0003467E <AmiBlitz3.ab3@25678>   Dc.l do_AND_long                              ;doandl
0003468A <AmiBlitz3.ab3@25679>   Ds.l 3
0003468C <AmiBlitz3.ab3@25680>   Dc.b $03,$E8
0003468E <AmiBlitz3.ab3@25682>   Dc.b $80,$8A                                  ; OR int   ;(opor-opabcd)/$1c+$8000+fnum
00034692 <AmiBlitz3.ab3@25683>   Dc.l do_OR_byte                               ;doorb
00034696 <AmiBlitz3.ab3@25684>   Dc.l do_OR_word                               ;doorw
0003469A <AmiBlitz3.ab3@25685>   Dc.l do_OR_long                               ;doorl
0003469E <AmiBlitz3.ab3@25686>   Dc.l do_OR_long                               ;doorl
000346AA <AmiBlitz3.ab3@25687>   Ds.l 3
000346AC <AmiBlitz3.ab3@25688>   Dc.b $03,$E8
000346AE <AmiBlitz3.ab3@25690>   Dc.b $80,$73                                  ; EOR int  ;(opeor-opabcd)/$1c+$8000+fnum
000346B2 <AmiBlitz3.ab3@25691>   Dc.l do_EOR_byte                              ;doeorb
000346B6 <AmiBlitz3.ab3@25692>   Dc.l do_EOR_word                              ;doeorw
000346BA <AmiBlitz3.ab3@25693>   Dc.l do_EOR_long                              ;doeorl
000346BE <AmiBlitz3.ab3@25694>   Dc.l do_EOR_long                              ;doeorl
000346CA <AmiBlitz3.ab3@25695>   Ds.l 3
000346CC <AmiBlitz3.ab3@25696>   Dc.b $03,$E8
000346CE <AmiBlitz3.ab3@25698>   Dc.b $80,$7C                                  ; LSL int  ;(oplsl-opabcd)/$1c+$8000+fnum
000346D2 <AmiBlitz3.ab3@25699>   Dc.l do_LSL                                   ;dolslb
000346D6 <AmiBlitz3.ab3@25700>   Dc.l do_LSL                                   ;dolslw
000346DA <AmiBlitz3.ab3@25701>   Dc.l do_LSL                                   ;dolsll
000346DE <AmiBlitz3.ab3@25702>   Dc.l do_LSL                                   ;dolsll
000346EA <AmiBlitz3.ab3@25703>   Ds.l 3
000346EC <AmiBlitz3.ab3@25704>   Dc.b $17,$70
000346EE <AmiBlitz3.ab3@25706>   Dc.b $80,$44                                  ; ASL int  ;(opasl-opabcd)/$1c+$8000+fnum
000346F2 <AmiBlitz3.ab3@25707>   Dc.l do_LSL                                   ;dolslb
000346F6 <AmiBlitz3.ab3@25708>   Dc.l do_LSL                                   ;dolslw
000346FA <AmiBlitz3.ab3@25709>   Dc.l do_LSL                                   ;dolsll
000346FE <AmiBlitz3.ab3@25710>   Dc.l do_LSL                                   ;dolsll
0003470A <AmiBlitz3.ab3@25711>   Ds.l 3
0003470C <AmiBlitz3.ab3@25712>   Dc.b $17,$70
0003470E <AmiBlitz3.ab3@25714>   Dc.b $80,$7D                                  ; LSR int  ;(oplsr-opabcd)/$1c+$8000+fnum
00034712 <AmiBlitz3.ab3@25715>   Dc.l do_LSR                                   ;dolsrb
00034716 <AmiBlitz3.ab3@25716>   Dc.l do_LSR                                   ;dolsrw
0003471A <AmiBlitz3.ab3@25717>   Dc.l do_LSR                                   ;dolsrl
0003471E <AmiBlitz3.ab3@25718>   Dc.l do_LSR                                   ;dolsrl
0003472A <AmiBlitz3.ab3@25719>   Ds.l 3
0003472C <AmiBlitz3.ab3@25720>   Dc.b $17,$70
0003472E <AmiBlitz3.ab3@25722>   Dc.b $80,$45                                  ; ASR int  ;(opasr-opabcd)/$1c+$8000+fnum
00034732 <AmiBlitz3.ab3@25723>   Dc.l do_ASR                                   ;doasrb
00034736 <AmiBlitz3.ab3@25724>   Dc.l do_ASR                                   ;doasrw
0003473A <AmiBlitz3.ab3@25725>   Dc.l do_ASR                                   ;doasrl
0003473E <AmiBlitz3.ab3@25726>   Dc.l do_ASR                                   ;doasrl
0003474A <AmiBlitz3.ab3@25727>   Ds.l 3
0003474C <AmiBlitz3.ab3@25728>   Dc.b $17,$70
0003474E <AmiBlitz3.ab3@25730>   Dc.b $80,$B9                                  ;mod       ;$8006+tnum
00034752 <AmiBlitz3.ab3@25731>   Dc.l do_mod_byte                              ;domodb
00034756 <AmiBlitz3.ab3@25732>   Dc.l do_mod_word                              ;domodw
0003475A <AmiBlitz3.ab3@25733>   Dc.l do_mod_long                              ;domodl
0003475E <AmiBlitz3.ab3@25734>   Dc.l do_mod_quick                             ;domodq
00034762 <AmiBlitz3.ab3@25735>   Dc.l do_mod_float                             ;domodf
0003476A <AmiBlitz3.ab3@25736>   Ds.l 2
0003476C <AmiBlitz3.ab3@25737>   Dc.b $13,$88
0003476E <AmiBlitz3.ab3@25740>   Dc.b $00,$5E                                  ;^
00034772 <AmiBlitz3.ab3@25741>   Dc.l do_pow                                   ;dopow
00034776 <AmiBlitz3.ab3@25742>   Dc.l do_pow                                   ;dopow
0003477A <AmiBlitz3.ab3@25743>   Dc.l do_pow                                   ;dopow
0003477E <AmiBlitz3.ab3@25744>   Dc.l do_pow                                   ;dopow
00034782 <AmiBlitz3.ab3@25745>   Dc.l do_pow                                   ;dopow
0003478A <AmiBlitz3.ab3@25746>   Ds.l 2
0003478C <AmiBlitz3.ab3@25747>   Dc.b $1B,$58                                  ;7000
0003478E <AmiBlitz3.ab3@25750>   Dc.b $00,$3D                                  ;=
00034792 <AmiBlitz3.ab3@25751>   Dc.l do_equal_byte                            ;doeqb
00034796 <AmiBlitz3.ab3@25752>   Dc.l do_equal_word                            ;doeqw
0003479A <AmiBlitz3.ab3@25753>   Dc.l do_equal_long                            ;doeql
0003479E <AmiBlitz3.ab3@25754>   Dc.l do_equal_long                            ;doeql
000347A2 <AmiBlitz3.ab3@25755>   Dc.l do_equal_float                           ;doeqf
000347A6 <AmiBlitz3.ab3@25756>   Dc.l do_equal_long                            ;doeql
000347AA <AmiBlitz3.ab3@25757>   Dc.l do_equal_string                          ;doeqs
000347AC <AmiBlitz3.ab3@25758>   Dc.b $07,$D0                                  ;2000
000347AE <AmiBlitz3.ab3@25761>   Dc.b $3C,$3E                                  ;<>
000347B2 <AmiBlitz3.ab3@25762>   Dc.l do_not_equal_byte                        ;doneb
000347B6 <AmiBlitz3.ab3@25763>   Dc.l do_not_equal_word                        ;donew
000347BA <AmiBlitz3.ab3@25764>   Dc.l do_not_equal_long                        ;donel
000347BE <AmiBlitz3.ab3@25765>   Dc.l do_not_equal_long                        ;donel
000347C2 <AmiBlitz3.ab3@25766>   Dc.l do_not_equal_float                       ;donef
000347C6 <AmiBlitz3.ab3@25767>   Dc.l do_not_equal_long                        ;donel
000347CA <AmiBlitz3.ab3@25768>   Dc.l do_not_equal_string                      ;dones
000347CC <AmiBlitz3.ab3@25769>   Dc.b $07,$D0                                  ;2000
000347CE <AmiBlitz3.ab3@25772>   Dc.b $00,$3C                                  ;<
000347D2 <AmiBlitz3.ab3@25773>   Dc.l do_littler_byte                          ;doltb
000347D6 <AmiBlitz3.ab3@25774>   Dc.l do_littler_word                          ;doltw
000347DA <AmiBlitz3.ab3@25775>   Dc.l do_littler_long                          ;doltl
000347DE <AmiBlitz3.ab3@25776>   Dc.l do_littler_long                          ;doltl
000347E2 <AmiBlitz3.ab3@25777>   Dc.l do_littler_float                         ;doltf
000347E6 <AmiBlitz3.ab3@25778>   Dc.l do_littler_long                          ;doltl
000347EA <AmiBlitz3.ab3@25779>   Dc.l do_littler_string                        ;dolts
000347EC <AmiBlitz3.ab3@25780>   Dc.b $07,$D0                                  ;2000
000347EE <AmiBlitz3.ab3@25783>   Dc.b $3C,$3D                                  ;<=
000347F2 <AmiBlitz3.ab3@25784>   Dc.l do_littler_equal_byte                    ;doleb
000347F6 <AmiBlitz3.ab3@25785>   Dc.l do_littler_equal_word                    ;doleb
000347FA <AmiBlitz3.ab3@25786>   Dc.l do_littler_equal_long                    ;dolel
000347FE <AmiBlitz3.ab3@25787>   Dc.l do_littler_equal_long                    ;dolel
00034802 <AmiBlitz3.ab3@25788>   Dc.l do_littler_equal_float                   ;dolef
00034806 <AmiBlitz3.ab3@25789>   Dc.l do_littler_equal_long                    ;dolel
0003480A <AmiBlitz3.ab3@25790>   Dc.l do_littler_equal_string                  ;doles
0003480C <AmiBlitz3.ab3@25791>   Dc.b $07,$D0                                  ;2000
0003480E <AmiBlitz3.ab3@25794>   Dc.b $00,$3E                                  ;>
00034812 <AmiBlitz3.ab3@25795>   Dc.l do_greater_byte                          ;dogtb
00034816 <AmiBlitz3.ab3@25796>   Dc.l do_greater_word                          ;dogtw
0003481A <AmiBlitz3.ab3@25797>   Dc.l do_greater_long                          ;dogtl
0003481E <AmiBlitz3.ab3@25798>   Dc.l do_greater_long                          ;dogtl
00034822 <AmiBlitz3.ab3@25799>   Dc.l do_greater_float                         ;dogtf
00034826 <AmiBlitz3.ab3@25800>   Dc.l do_greater_long                          ;dogtl
0003482A <AmiBlitz3.ab3@25801>   Dc.l do_greater_string                        ;dogts
0003482C <AmiBlitz3.ab3@25802>   Dc.b $07,$D0                                  ;2000
0003482E <AmiBlitz3.ab3@25805>   Dc.b $3E,$3D                                  ;>=
00034832 <AmiBlitz3.ab3@25806>   Dc.l do_greater_equal_byte                    ;dogeb
00034836 <AmiBlitz3.ab3@25807>   Dc.l do_greater_equal_word                    ;dogew
0003483A <AmiBlitz3.ab3@25808>   Dc.l do_greater_equal_long                    ;dogel
0003483E <AmiBlitz3.ab3@25809>   Dc.l do_greater_equal_long                    ;dogel
00034842 <AmiBlitz3.ab3@25810>   Dc.l do_greater_equal_float                   ;dogef
00034846 <AmiBlitz3.ab3@25811>   Dc.l do_greater_equal_long                    ;dogel
0003484A <AmiBlitz3.ab3@25812>   Dc.l do_greater_equal_string                  ;doges
0003484C <AmiBlitz3.ab3@25813>   Dc.b $07,$D0                                  ;2000
0003484E <AmiBlitz3.ab3@25815>   Dc.b $80,$CD                                  ;$8000+26+tnum
00034852 <AmiBlitz3.ab3@25816>   Dc.l _BitTst
00034856 <AmiBlitz3.ab3@25817>   Dc.l _BitTst
0003485A <AmiBlitz3.ab3@25818>   Dc.l _BitTst
0003485E <AmiBlitz3.ab3@25819>   Dc.l _BitTst
0003486A <AmiBlitz3.ab3@25820>   Ds.l 3
0003486C <AmiBlitz3.ab3@25821>   Dc.b $1F,$40                                  ;8000
0003486E <AmiBlitz3.ab3@25823>   Dc.b $80,$CE                                  ;$8000+27+tnum
00034872 <AmiBlitz3.ab3@25824>   Dc.l _BitSet
00034876 <AmiBlitz3.ab3@25825>   Dc.l _BitSet
0003487A <AmiBlitz3.ab3@25826>   Dc.l _BitSet
0003487E <AmiBlitz3.ab3@25827>   Dc.l _BitSet
0003488A <AmiBlitz3.ab3@25828>   Ds.l 3
0003488C <AmiBlitz3.ab3@25829>   Dc.b $1F,$40                                  ;8000
0003488E <AmiBlitz3.ab3@25831>   Dc.b $80,$CF                                  ;$8000+28+tnum
00034892 <AmiBlitz3.ab3@25832>   Dc.l _BitClr
00034896 <AmiBlitz3.ab3@25833>   Dc.l _BitClr
0003489A <AmiBlitz3.ab3@25834>   Dc.l _BitClr
0003489E <AmiBlitz3.ab3@25835>   Dc.l _BitClr
000348AA <AmiBlitz3.ab3@25836>   Ds.l 3
000348AC <AmiBlitz3.ab3@25837>   Dc.b $1F,$40                                  ;8000
000348AE <AmiBlitz3.ab3@25839>   Dc.b $80,$D0                                  ;$8000+29+tnum
000348B2 <AmiBlitz3.ab3@25840>   Dc.l _BitChg
000348B6 <AmiBlitz3.ab3@25841>   Dc.l _BitChg
000348BA <AmiBlitz3.ab3@25842>   Dc.l _BitChg
000348BE <AmiBlitz3.ab3@25843>   Dc.l _BitChg
000348CA <AmiBlitz3.ab3@25844>   Ds.l 3
000348CC <AmiBlitz3.ab3@25845>   Dc.b $1F,$40                                  ;8000
000348CE <AmiBlitz3.ab3@25847>   Dc.b $00,$00
000348D2 <AmiBlitz3.ab3@25852> modetable:   Dc.l typemode
000348D6 <AmiBlitz3.ab3@25855> newtypebase: Dc.l newtype_byte
000348DE <AmiBlitz3.ab3@25858>   Dc.l newtype_word,$01                                    
000348E0 <AmiBlitz3.ab3@25859>   Dc.w $0001
000348E4 <AmiBlitz3.ab3@25860>   Dc.b 13,"b",0,0
000348EC <AmiBlitz3.ab3@25863>   Dc.l newtype_long,$02
000348EE <AmiBlitz3.ab3@25864>   Dc.w $0002
000348F2 <AmiBlitz3.ab3@25865>   Dc.b 13,"w",0,0
000348FA <AmiBlitz3.ab3@25868>   Dc.l newtype_quick,$03                                   
000348FC <AmiBlitz3.ab3@25869>   Dc.w $0004
00034900 <AmiBlitz3.ab3@25870>   Dc.b 13,"l",0,0
00034908 <AmiBlitz3.ab3@25873>   Dc.l newtype_float,$04                                   
0003490A <AmiBlitz3.ab3@25874>   Dc.w $0004
0003490E <AmiBlitz3.ab3@25875>   Dc.b 13,"q",0,0
00034916 <AmiBlitz3.ab3@25879>   Dc.l newtype_double,$05                                  ;make problems on old residents
00034918 <AmiBlitz3.ab3@25880>   Dc.w $0004
0003491C <AmiBlitz3.ab3@25881>   Dc.b 13,"f",0,0
00034924 <AmiBlitz3.ab3@25884>   Dc.l newtype_double,$06
00034926 <AmiBlitz3.ab3@25885>   Dc.w $0004
0003492A <AmiBlitz3.ab3@25886>   Dc.b 13,"a",0,0
00034932 <AmiBlitz3.ab3@25889>   Dc.l newtype_string,$05                                  ;?? has to by $06 becous is number 6 not 5
00034934 <AmiBlitz3.ab3@25890>   Dc.w $0008
00034938 <AmiBlitz3.ab3@25891>   Dc.b 13,"d",0,0
00034940 <AmiBlitz3.ab3@25895>   Dc.l $0000000,$07                                        ;stringtype
00034942 <AmiBlitz3.ab3@25896>   Dc.w $0004
00034946 <AmiBlitz3.ab3@25897>   Dc.b 13,"s",0,0
0003494E <AmiBlitz3.ab3@25900>   Dc.l $00,$00
00034950 <AmiBlitz3.ab3@25901>   Dc.w $0000
00034954 <AmiBlitz3.ab3@25902>   Dc.b $01,$00,$00,$00
000349B4 <AmiBlitz3.ab3@25905> incdir:               Ds.l 24                              ;dcb.b   96,0    org source
000349B6 <AmiBlitz3.ab3@25909> dirmode:              Ds.w 1                               ;shows if directmode is on
000349BA <AmiBlitz3.ab3@25911>                       Ds.l 1                               ;int org source ;intuition!
000349BC <AmiBlitz3.ab3@25912> maxobject_pos:        Ds.w 1                               ;maxat org source ;max at
000349C0 <AmiBlitz3.ab3@25913> maxsat:               Ds.l 1                               ;data1 info pos
000349C2 <AmiBlitz3.ab3@25914> number_of_objects:    Ds.w 1                               ;nummaxs org source ;number of maximums
000349C4 <AmiBlitz3.ab3@25916> maxsused:             Ds.w 1                               ;maximums used in prog
000349C6 <AmiBlitz3.ab3@25920> dark:                 Ds.w 1                               ;dark compile?
000349C8 <AmiBlitz3.ab3@25921> qlab:                 Ds.w 1                               ;quick lab allocate
000349CC <AmiBlitz3.ab3@25922> defaulttype:          Dc.l newtype_quick                   ;dc.l quicktype org source
000349CE <AmiBlitz3.ab3@25927> anyerrs:              Dc.w -1                              ;Any Errors in compile ?
000349D0 <AmiBlitz3.ab3@25928> debugversion:         Ds.w 1                               ;makeexec org source ;make an executable file!
000349D4 <AmiBlitz3.ab3@25929> noinits:              Ds.l 1                               ;flag for if we have any init routines!
000349D8 <AmiBlitz3.ab3@25931> letstart:             Ds.l 1
000349DA <AmiBlitz3.ab3@25932> dontwrite:            Ds.w 1                               ;nomemleft org source
00034A5A <AmiBlitz3.ab3@25933> lastgloballabel:      Ds.l 32                              ;lastbiglab ds.b 128 org source
00034A5E <AmiBlitz3.ab3@25935> locdatast:            Ds.l 1
00034A62 <AmiBlitz3.ab3@25936> firstpend:            Ds.l 1
00034A66 <AmiBlitz3.ab3@25940> data2at:              Ds.l 1
00034A6A <AmiBlitz3.ab3@25941> data2:                Ds.l 1
00034A6E <AmiBlitz3.ab3@25942> data1start:           Ds.l 1                               ;data1at org source
00034A72 <AmiBlitz3.ab3@25943> data1:                Ds.l 1                               ;pc for initialized data!
00034A76 <AmiBlitz3.ab3@25944> destbufferstart:      Ds.l 1                               ;pcat org source
00034A7A <AmiBlitz3.ab3@25948> destbufferend:        Ds.l 1                               ;libat org source
00034A7E <AmiBlitz3.ab3@25949> libend:               Ds.l 1                               ;lib org source
00034A82 <AmiBlitz3.ab3@25950> allat:                Ds.l 1                               ;highest allocmemd location for code
00034A8C <AmiBlitz3.ab3@25951> dummyasm:             Dc.w 0,0,0,0,0
00034A90 <AmiBlitz3.ab3@25952>                       Dc.l 0
00034A92 <AmiBlitz3.ab3@25953>                       Dc.w 0
00034A96 <AmiBlitz3.ab3@25957> buff1:                Ds.l 1                               ;buffer for text get
00034A9A <AmiBlitz3.ab3@25958> buff2:                Ds.l 1                               ;ditto for dest
00034A9C <AmiBlitz3.ab3@25959> constmode:            Ds.w 1                               ;0 for norm, <>0 for assembler
00034A9E <AmiBlitz3.ab3@25960> asmtype:              Ds.w 1                               ;0=contains no prog reference
00034AA0 <AmiBlitz3.ab3@25961> extraword:            Ds.w 1                               ;the extension word for assembler
00034AA2 <AmiBlitz3.ab3@25962> extraword2:           Ds.w 1                               ;ditto
00034AA4 <AmiBlitz3.ab3@25963> asmsize:              Ds.w 1
00034AA8 <AmiBlitz3.ab3@25964> asmbuff:              Ds.l 1
00034AAA <AmiBlitz3.ab3@25965> asmlen:               Ds.w 1                               ;first (src) text len
00034AAC <AmiBlitz3.ab3@25966> asmlen2:              Ds.w 1                               ;second (dest)
00034AB0 <AmiBlitz3.ab3@25967> templabel:            Ds.l 1                               ;linked list of expressions to resolve
00034AB2 <AmiBlitz3.ab3@25970> macnum:               Ds.w 1
00034AB6 <AmiBlitz3.ab3@25972>                       Dc.l 0                               ;address of next 0 in include fil
00034ABA <AmiBlitz3.ab3@25973> titleat:              Ds.l 1                               ;5 longs for compile streaks
00034AC4 <AmiBlitz3.ab3@25974> progress_per_line:    Ds.w 5                               ;titleadd ds 5 org source ;5 adds for compile streaks
00034AC6 <AmiBlitz3.ab3@25975> connest:              Ds.w 1                               ;conditional nest level
00034ACA <AmiBlitz3.ab3@25976> firstconst:           Ds.l 1                               ;first constant (#a)
00034ACC <AmiBlitz3.ab3@25977> numarg:               Ds.w 1                               ;number of macro arguements
00034AD0 <AmiBlitz3.ab3@25978> myoline:              Ds.l 1                               ;macro done yet?
00034AD4 <AmiBlitz3.ab3@25979> myline:               Ds.l 1                               ;pointer to some memory to create
00034AD8 <AmiBlitz3.ab3@25982>                       Ds.l 1
00034B18 <AmiBlitz3.ab3@25983> concomstack:          Ds.l 16                              ;32 deep conditional compilation
00034B1C <AmiBlitz3.ab3@25984> concomsp:             Dc.l concomstack                     ;stack pointer
00034B1E <AmiBlitz3.ab3@25985> oldqflag:             Ds.w 1
00034B22 <AmiBlitz3.ab3@25988>                       Ds.l 1
00034B24 <AmiBlitz3.ab3@25990>                       Ds.w 1
00034B28 <AmiBlitz3.ab3@25991> firstfor:             Ds.l 1                               ;first for
00034B2A <AmiBlitz3.ab3@25992> stackpar:             Ds.w 1                               ;pushflag org source ;1 par to stack 0 normal
00034B2C <AmiBlitz3.ab3@25993> sbgot:                Ds.w 1                               ;flag for string got 2
00034B2E <AmiBlitz3.ab3@25994> convsize:             Ds.w 1                               ;usertype org source
00034B30 <AmiBlitz3.ab3@25995> userp:                Ds.w 1
00034B34 <AmiBlitz3.ab3@26000> ptr_userlibs_list:    Ds.l 1                               ;libslist org source
00034B36 <AmiBlitz3.ab3@26001> a2offset:             Ds.w 1                               ;stackuse org source ;stack used when gathering lib parameters
00034B38 <AmiBlitz3.ab3@26002> numreps:              Ds.w 1                               ;number of repeats in a repeatable
00034B3C <AmiBlitz3.ab3@26004> locloc:               Ds.l 1
00034B3E <AmiBlitz3.ab3@26005> locchar:              Ds.w 1
00034BBE <AmiBlitz3.ab3@26006> stbuff:               Ds.l 32                              ;was 8    ;six string varoffs
00034BC0 <AmiBlitz3.ab3@26007> commode:              Ds.w 1                               ;in comma mode...
00034BC4 <AmiBlitz3.ab3@26008> lastoffset_org:       Ds.l 1                               ;lastoffset org source ;last offset in calcvar!
00034BC8 <AmiBlitz3.ab3@26009> linenumat:            Dc.l $FFFFFFFF                       ;linecounter ;dc -1 org source ;line being processed
00034BCC <AmiBlitz3.ab3@26010> compilelinecounter:   Dc.l $FFFFFFFF                       ;menuret dc -1 org source ;menu return code
00034BCE <AmiBlitz3.ab3@26012>                       Ds.w 1                               ;opt reset offset
00034CCE <AmiBlitz3.ab3@26014>                       Ds.l 64                              ;Ds.b vcodelen org source ;code used to generate
00034DCE <AmiBlitz3.ab3@26016>                       Ds.l 64                              ;Ds.b vcodelen org source ;above for let.....
00034DD0 <AmiBlitz3.ab3@26017> varcodelen:           Ds.w 1                               ;and length
00034DD2 <AmiBlitz3.ab3@26019>                       Ds.w 1
00034DD8 <AmiBlitz3.ab3@26020> oldvcodelen:          Ds.w 3                               ;old varcodelen
00034DDC <AmiBlitz3.ab3@26024> tempvm:               Ds.l 1                               ;memlib org source ;address of memory library
00034DDE <AmiBlitz3.ab3@26025> memlibstat:           Ds.w 1                               ;status of memory library during
00034DE0 <AmiBlitz3.ab3@26028>                       Dc.w 0
00034DE2 <AmiBlitz3.ab3@26030>                       Dc.w 0
00034DE4 <AmiBlitz3.ab3@26032> varmode:              Ds.w 1                               ;0 a5 pointer to global
00034DE8 <AmiBlitz3.ab3@26034> currentfunction:      Ds.l 1                               ;thisproc org source
00034DEC <AmiBlitz3.ab3@26035> firstproc:            Ds.l 1                               ;firstproc org source ;this procedure being 'done'
00034DEE <AmiBlitz3.ab3@26036> 
00034DF0 <AmiBlitz3.ab3@26038> skipcode:             Ds.w 1                               ;nocompile ;comflag org source ;0 if no compile
00034DF4 <AmiBlitz3.ab3@26039> passstack:            Ds.l 1
00034DF8 <AmiBlitz3.ab3@26040> zero:                 Ds.l 1                               ;ZERO!
00034DFA <AmiBlitz3.ab3@26041> ininclude:            Ds.w 1                               ;numincs org source ;number of include files
00034DFE <AmiBlitz3.ab3@26043> xinclude_base:        Ds.l 1                               ;firstxinc org source ;first exclusive include.
00034E02 <AmiBlitz3.ab3@26044> constantbase:         Ds.l 1                               ;firstinc org source ;first include
00034E04 <AmiBlitz3.ab3@26045> lasta6:               Dc.w $FFFF                           ;-1 org source
00034E06 <AmiBlitz3.ab3@26046> instringon:           Ds.w 1                               ;quoteflag org source
00034E0A <AmiBlitz3.ab3@26047> ptr_macrobuffer_begin:Ds.l 1                               ;macrobuff org source ;pointer to macro collection buffer ;begin
00034E0E <AmiBlitz3.ab3@26048> ptr_macrobuffer_end:  Ds.l 1                               ;macrobufff org source ;end of above ;end of
00034E12 <AmiBlitz3.ab3@26049> macrobase:            Ds.l 1                               ;firstmacro org source ;linked list of macro's ;macrolist
00034E16 <AmiBlitz3.ab3@26050> endop:                Ds.l 1                               ;end of program pc - before finishups!
00034E1A <AmiBlitz3.ab3@26051> labelbase:            Ds.l 1                               ;firstlabel org source ;first lib struct
00034E1E <AmiBlitz3.ab3@26052> end_of_tokenlist:     Ds.l 1                               ;lasttoken org source
00034E20 <AmiBlitz3.ab3@26053> numstatic:            Ds.w 1                               ;number of static structs
00034E24 <AmiBlitz3.ab3@26054> staticdata:           Ds.l 1                               ;data1 val for statics
00034E28 <AmiBlitz3.ab3@26055> libpointer:           Ds.l 1                               ;firstlib org source ;first lib struct
00034E2A <AmiBlitz3.ab3@26056> sbasegot:             Ds.w 1                               ;string base got?
00034E2E <AmiBlitz3.ab3@26057> litdata1:             Ds.l 1
00034E32 <AmiBlitz3.ab3@26061> objlen:               Ds.l 1
00034E36 <AmiBlitz3.ab3@26062> hunkoffsetcounter:    Ds.l 1                               ;numoffs org source
00034E3A <AmiBlitz3.ab3@26063> hunkoffsetbase:       Ds.l 1                               ;firstoff org source ;pointer to linked list
00034E3C <AmiBlitz3.ab3@26065> flagmask:             Ds.w 1                               ;mask for flag of variable when
00034E3E <AmiBlitz3.ab3@26067> notshared:            Ds.w 1                               ;added org source ;flag for seeing if variable was added!
00034E40 <AmiBlitz3.ab3@26068> nonew:                Ds.w 1                               ;1 to inhibit new variable creation
00034E44 <AmiBlitz3.ab3@26069> temp1:                Ds.l 1
00034E48 <AmiBlitz3.ab3@26070> temp2:                Ds.l 1
00034E4C <AmiBlitz3.ab3@26072> ptr_parameterstore:   Ds.l 1                               ;namebuff ds.b 128 org source
00034E50 <AmiBlitz3.ab3@26073> fib_DirEntryType:     Ds.l 1                               ;namebuff+4 org source
00034EC4 <AmiBlitz3.ab3@26074> fib_FileName:         Ds.l 29                              ;namebuff+8 org source
00034EC8 <AmiBlitz3.ab3@26075> fib_Size:             Ds.l 1                               ;namebuff+124 org source
00034F48 <AmiBlitz3.ab3@26077> namebuff2:            Ds.b 128
00034F50 <AmiBlitz3.ab3@26078>                       Ds.b 8                               ;for fileinfoblock
00034F90 <AmiBlitz3.ab3@26081> optstuff:             Ds.b 64                              ;temp opt make buffer
00034F92 <AmiBlitz3.ab3@26098>   Dc.b $00,$01                                             ; 1 byte schreiben ;one byte stuff...
00034F96 <AmiBlitz3.ab3@26099>   Dc.l xtra_versionnumber                                  ; vers org source
00034F9A <AmiBlitz3.ab3@26100>   Dc.l create_iconfile                                     ; create icon for executable
00034F9E <AmiBlitz3.ab3@26101>   Ds.l 1
00034FA0 <AmiBlitz3.ab3@26103>   Dc.b $00,$02                                             ; 2 bytes schreiben  ;two byte stuff...
00034FA4 <AmiBlitz3.ab3@26106>   Dc.l set_use_debugger
00034FA8 <AmiBlitz3.ab3@26107>   Dc.l AL_0_11010                                          ;+obsolet: debugger
00034FAC <AmiBlitz3.ab3@26108>   Dc.l AL_0_1103C                                          ;+obsolet: long arrays
00034FB0 <AmiBlitz3.ab3@26109>   Dc.l AL_0_11068                                          ;+obsolet: expand macros
00034FB4 <AmiBlitz3.ab3@26110>   Dc.l AL_0_11094                                          ;+obsolet: quoted macros
00034FB8 <AmiBlitz3.ab3@26111>   Dc.l set_make_smallestcode
00034FBC <AmiBlitz3.ab3@26112>   Dc.l set_link_debuginfo
00034FC0 <AmiBlitz3.ab3@26113>   Dc.l set_autorun
00034FC4 <AmiBlitz3.ab3@26114>   Dc.l set_interruptcheck
00034FC8 <AmiBlitz3.ab3@26115>   Dc.l set_assemblercheck
00034FCC <AmiBlitz3.ab3@26117>   Dc.l set_overflowcheck
00034FD0 <AmiBlitz3.ab3@26118>   Dc.l default_obsolete                                    ;+obsolet: ohne inhalt
00034FD4 <AmiBlitz3.ab3@26119>   Dc.l default_interruptcheck                              ;+obsolet: interruptcheck vorgabe
00034FD8 <AmiBlitz3.ab3@26120>   Dc.l default_overflowcheck                               ;+obsolet: overflow vorgabe
00034FDC <AmiBlitz3.ab3@26123>   Ds.l 1
00034FDE <AmiBlitz3.ab3@26125>   Dc.b $00,$04                                             ; 4 bytes schreiben..  ;four byte stuff...
00034FE2 <AmiBlitz3.ab3@26132>   Dc.l objectbuffer
00034FE6 <AmiBlitz3.ab3@26133>   Dc.l libsbuffer
00034FEA <AmiBlitz3.ab3@26134>   Dc.l systembuffer
00034FEE <AmiBlitz3.ab3@26135>   Dc.l databuffer
00034FF2 <AmiBlitz3.ab3@26136>   Dc.l macrobuffer_size
00034FF6 <AmiBlitz3.ab3@26137>   Dc.l stringbuffer
00034FFA <AmiBlitz3.ab3@26140>   Ds.l 1
00034FFC <AmiBlitz3.ab3@26144>   Dc.b $02,$20                                             ;dc 68*8; 544 bytes schreiben.
00035004 <AmiBlitz3.ab3@26145>   Dc.l residents_table,0
00035006 <AmiBlitz3.ab3@26149>   Dc.b $01,$80                                             ;dc 192*2; 384 bytes schreiben
0003500E <AmiBlitz3.ab3@26150>   Dc.l exepath,0                                           ; exepath und exefilename jeweils 192 bytes
00035010 <AmiBlitz3.ab3@26151>   Ds.w 1
0003510C <AmiBlitz3.ab3@26155>   Ds.l 63
00035208 <AmiBlitz3.ab3@26156>   Ds.l 63
00035304 <AmiBlitz3.ab3@26157>   Ds.l 63
000353E6 <AmiBlitz3.ab3@26158>   Ds.w 113
000353E8 <AmiBlitz3.ab3@26161> comsettings_message:  Ds.w 1                               ;allchg org source
000353EA <AmiBlitz3.ab3@26162> xtra_versionnumber:   Ds.w 1                               ;vers org source
000353F0 <AmiBlitz3.ab3@26166>   CLR.b exefilename
000353F2 <AmiBlitz3.ab3@26167>   TST.l d0
000353F6 <AmiBlitz3.ab3@26168>   BNE read_xtrafile__l10
000353F8 <AmiBlitz3.ab3@26169> RTS
000353FE <AmiBlitz3.ab3@26172>   JSR free_residents                                       ;jsr freeres2 org source
00035404 <AmiBlitz3.ab3@26173> 
0003540A <AmiBlitz3.ab3@26174>   LEA ptr_xtradata,A2
0003540C <AmiBlitz3.ab3@26175>   MOVEQ.l #$00,D4
0003540E <AmiBlitz3.ab3@26178>     MOVE.w (A2)+,D4                                        ; anzahl bytes zum lesen
00035412 <AmiBlitz3.ab3@26179>     BEQ.b read_xtrafile__done
00035414 <AmiBlitz3.ab3@26182>     MOVE.l (A2)+,D2
00035418 <AmiBlitz3.ab3@26183>   BEQ.b read_xtrafile__loop
0003541A <AmiBlitz3.ab3@26185>   MOVE.l D4,D3
0003541C <AmiBlitz3.ab3@26186>   MOVE.l D7,D1
00035420 <AmiBlitz3.ab3@26187>   JSR _Read(A6)                                            ; d1: file, d2: buffer, d3:length
00035422 <AmiBlitz3.ab3@26188>   TST.l D0
00035426 <AmiBlitz3.ab3@26189>   BNE.b read_xtrafile__loop2
0003542A <AmiBlitz3.ab3@26190> BRA.w read_xtrafile__done2
00035430 <AmiBlitz3.ab3@26193>   TST.b xtra_versionnumber
00035434 <AmiBlitz3.ab3@26194>    BNE.b read_xtrafile__nover0
0003543C <AmiBlitz3.ab3@26195>   MOVE.w #$0080,set_autorun                                ;auto run on
00035446 <AmiBlitz3.ab3@26196>   MOVE.w default_interruptcheck,set_interruptcheck         ;interupt checking on
0003544C <AmiBlitz3.ab3@26197>   CLR.w set_assemblercheck                                 ;assembler checking off
00035456 <AmiBlitz3.ab3@26198>   MOVE.w default_overflowcheck,set_overflowcheck           ;overflow chex
0003545A <AmiBlitz3.ab3@26199> BRA.b read_xtrafile__ver0
0003545C <AmiBlitz3.ab3@26202>   MOVE.l D7,D1                                             ;load cli arg!
00035462 <AmiBlitz3.ab3@26203>   MOVE.l #str_cliarguments,D2
00035468 <AmiBlitz3.ab3@26204>   MOVE.l #116,D3                                           ; vorher 128 , jetzt 8 weniger fuer die Versionsdaten
0003546C <AmiBlitz3.ab3@26205>   JSR _Read(A6)                                            ; d1: file, d2: buffer, d3:length
00035472 <AmiBlitz3.ab3@26206>   MOVE.l #str_cliarguments,A0
00035478 <AmiBlitz3.ab3@26207>   ADDA.l #115,A0
0003547E <AmiBlitz3.ab3@26208>   MOVE.l #0,(a0) ; terminate it!
00035480 <AmiBlitz3.ab3@26210>   MOVE.l D7,D1                                             ; I know, I know. Honitos started this horrible thing, see below...
00035486 <AmiBlitz3.ab3@26211>   MOVE.l #stacksize,D2
0003548C <AmiBlitz3.ab3@26212>   MOVE.l #4,D3
00035490 <AmiBlitz3.ab3@26213>   JSR _Read(A6)
0003549A <AmiBlitz3.ab3@26214>   CMP.l ##MIN_STACKSIZE,stacksize
0003549E <AmiBlitz3.ab3@26215>   BGE 'stackok
000354A8 <AmiBlitz3.ab3@26216>   MOVE.l ##MIN_STACKSIZE,stacksize
000354AA <AmiBlitz3.ab3@26219>   MOVE.l D7,D1
000354B0 <AmiBlitz3.ab3@26220>   MOVE.l #versioninformation,D2
000354B6 <AmiBlitz3.ab3@26221>   MOVE.l #4,D3
000354BA <AmiBlitz3.ab3@26222>   JSR _Read(A6)
000354BC <AmiBlitz3.ab3@26224>   MOVE.l D7,D1
000354C2 <AmiBlitz3.ab3@26225>   MOVE.l #number_of_builds,D2
000354C8 <AmiBlitz3.ab3@26226>   MOVE.l #4,D3
000354CC <AmiBlitz3.ab3@26227>   JSR _Read(A6)
000354D2 <AmiBlitz3.ab3@26233> 
000354D8 <AmiBlitz3.ab3@26234>   MOVE.l A7,errstack
000354E2 <AmiBlitz3.ab3@26235>   MOVE.l #read_xtrafile__done2,errcont
000354EA <AmiBlitz3.ab3@26236>   MOVE.w #$FFFF,ezerr
000354F0 <AmiBlitz3.ab3@26239>     MOVE.l #temp1,D2                                   ;LOAD maxobjectsvalues
000354F2 <AmiBlitz3.ab3@26240>     MOVEQ.l #$04,D3
000354F4 <AmiBlitz3.ab3@26241>     MOVE.l D7,D1
000354F8 <AmiBlitz3.ab3@26242>     JSR _Read(A6)
000354FA <AmiBlitz3.ab3@26243>     TST.l D0
000354FE <AmiBlitz3.ab3@26244>     BEQ.b read_xtrafile__done2
00035504 <AmiBlitz3.ab3@26245>     MOVE.w temp1,D1
00035506 <AmiBlitz3.ab3@26246>     TST.w d1                                               ;new
0003550A <AmiBlitz3.ab3@26247>     BEQ read_xtrafile__done2                                         ;new
00035510 <AmiBlitz3.ab3@26248>      JSR AJL_0_6F1A
00035516 <AmiBlitz3.ab3@26250>     CMP.l #0,a1
0003551A <AmiBlitz3.ab3@26251>     BEQ read_xtrafile__dloop
0003551E <AmiBlitz3.ab3@26252>     MOVE.l $12(A1),D0
00035526 <AmiBlitz3.ab3@26253>     MOVE.w temp1+2,-$4(A1,D0.L)
0003552A <AmiBlitz3.ab3@26254> BRA.b read_xtrafile__dloop
0003552E <AmiBlitz3.ab3@26260>   LEA residents_table(PC),A0
00035530 <AmiBlitz3.ab3@26261>   MOVEQ.l #$07,D0
00035534 <AmiBlitz3.ab3@26264>     CLR.l $40(A0)
00035538 <AmiBlitz3.ab3@26265>     LEA ResidentEntryStep(A0),A0   ; $44
0003553C <AmiBlitz3.ab3@26266>   DBF D0,read_xtrafile__loop3
00035540 <AmiBlitz3.ab3@26268>   MOVEM.l D7/A6,-(A7)
00035546 <AmiBlitz3.ab3@26269>   JSR init_buffers
0003554C <AmiBlitz3.ab3@26270>   JSR reloadresident
00035550 <AmiBlitz3.ab3@26271>   MOVEM.l (A7)+,D7/A6
00035552 <AmiBlitz3.ab3@26272> RTS
0003555A <AmiBlitz3.ab3@26276>   MOVE.b #$1,xtra_versionnumber                            ;.xtra version number...
00035560 <AmiBlitz3.ab3@26285>   LEA ptr_xtradata,A2
00035562 <AmiBlitz3.ab3@26286>   MOVEQ.l #$00,D4
00035564 <AmiBlitz3.ab3@26290>   MOVE.w (A2)+,D4                                          ; anzahl bytes zu schreiben
00035568 <AmiBlitz3.ab3@26291>   BEQ.b write_xtrafile__done
0003556A <AmiBlitz3.ab3@26294>    MOVE.l (A2)+,D2
0003556E <AmiBlitz3.ab3@26295>    BEQ.b write_xtrafile__loop
00035570 <AmiBlitz3.ab3@26297>    MOVE.l D4,D3
00035572 <AmiBlitz3.ab3@26298>    MOVE.l D7,D1                                            ; schreiben der daten in ptr_xtradata
00035576 <AmiBlitz3.ab3@26299>    JSR _Write(A6)                                          ; d1: file, d2: buffer, d3:length
0003557A <AmiBlitz3.ab3@26300> BRA.b write_xtrafile__loop2
0003557C <AmiBlitz3.ab3@26303>   MOVE.l D7,D1
00035582 <AmiBlitz3.ab3@26304>   MOVE.l #str_cliarguments,D2
00035588 <AmiBlitz3.ab3@26305>   MOVE.l #116,D3
0003558C <AmiBlitz3.ab3@26306>   JSR _Write(A6)                                           ; hier werden 116 bytes an cli_arguments geschrieben !!
0003558E <AmiBlitz3.ab3@26308>   MOVE.l D7,D1
00035594 <AmiBlitz3.ab3@26309>   MOVE.l #stacksize,D2
0003559A <AmiBlitz3.ab3@26310>   MOVE.l #4,D3
0003559E <AmiBlitz3.ab3@26311>   JSR _Write(A6)
000355A0 <AmiBlitz3.ab3@26313>   MOVE.l D7,D1
000355A6 <AmiBlitz3.ab3@26314>   MOVE.l #versioninformation,D2
000355AC <AmiBlitz3.ab3@26315>   MOVE.l #4,D3
000355B0 <AmiBlitz3.ab3@26316>   JSR _Write(A6)
000355B2 <AmiBlitz3.ab3@26318>   MOVE.l D7,D1
000355B8 <AmiBlitz3.ab3@26319>   MOVE.l #number_of_builds,D2
000355BE <AmiBlitz3.ab3@26320>   MOVE.l #4,D3
000355C2 <AmiBlitz3.ab3@26321>   JSR _Write(A6)
000355C8 <AmiBlitz3.ab3@26327>   LEA libpointer,A2
000355CA <AmiBlitz3.ab3@26330>     MOVE.l (A2),D0
000355CE <AmiBlitz3.ab3@26331>     BEQ.w write_xtrafile__done2
000355D0 <AmiBlitz3.ab3@26332>     MOVEA.l D0,A2
000355D4 <AmiBlitz3.ab3@26333>     MOVE.l $12(A2),D4
000355D8 <AmiBlitz3.ab3@26334>     TST.w -$2(A2,D4.L)
000355DC <AmiBlitz3.ab3@26335>     BEQ.w write_xtrafile__loop3
000355E0 <AmiBlitz3.ab3@26337>     LEA $4(A2),A0
000355E2 <AmiBlitz3.ab3@26338>     MOVE.l A0,D2
000355E4 <AmiBlitz3.ab3@26339>     MOVEQ.l #$02,D3
000355E6 <AmiBlitz3.ab3@26340>     MOVE.l D7,D1                                           ; schreiben der Libnum mit 2 bytes
000355EA <AmiBlitz3.ab3@26341>     JSR _Write(A6)                                         ; d1: file, d2: buffer, d3:length
000355EE <AmiBlitz3.ab3@26343>     LEA -$4(A2,D4.L),A0
000355F0 <AmiBlitz3.ab3@26344>     MOVE.l A0,D2
000355F2 <AmiBlitz3.ab3@26345>     MOVEQ.l #$02,D3
000355F4 <AmiBlitz3.ab3@26346>     MOVE.l D7,D1                                           ; schreiben der Max Objects mit 2 bytes
000355F8 <AmiBlitz3.ab3@26347>     JSR _Write(A6)                                         ; d1: file, d2: buffer, d3:length
000355FC <AmiBlitz3.ab3@26348> BRA.w write_xtrafile__loop3
00035602 <AmiBlitz3.ab3@26353>   LEA XTRAEndPadBytes,A2 ; get the start address off the 4 fill/pad/termination bytes
00035604 <AmiBlitz3.ab3@26354>   MOVE.l A2,D2           ; move the address to d2
0003560A <AmiBlitz3.ab3@26355>   MOVE.l #4,D3           ; we only need 4 bytes to save
0003560C <AmiBlitz3.ab3@26356>   MOVE.l D7,D1           ; we set the file handle
00035610 <AmiBlitz3.ab3@26357>   JSR _Write(A6)         ; and we write it.
00035612 <AmiBlitz3.ab3@26359> RTS
00035618 <AmiBlitz3.ab3@26364>   LEA optssave,A0                      ; backup address
0003561E <AmiBlitz3.ab3@26365>   LEA ptr_xtradata,A1                  ; source address
00035620 <AmiBlitz3.ab3@26368>   MOVE.w (A1)+,D0                                          ;length of data move
00035624 <AmiBlitz3.ab3@26369>   BEQ.b 'backupdone
00035626 <AmiBlitz3.ab3@26370>   SUBQ.w #1,D0
00035628 <AmiBlitz3.ab3@26373>     MOVE.l (A1)+,D1
0003562C <AmiBlitz3.ab3@26374>     BEQ.b 'backuploop
0003562E <AmiBlitz3.ab3@26375>     MOVEA.l D1,A2
00035630 <AmiBlitz3.ab3@26376>     MOVE.w D0,D1
00035632 <AmiBlitz3.ab3@26379>       MOVE.b (A2)+,(A0)+
00035636 <AmiBlitz3.ab3@26380>   DBF D1,'backuploop3
0003563A <AmiBlitz3.ab3@26382> BRA.w 'backuploop2
00035640 <AmiBlitz3.ab3@26386>   LEA bufferlist,A1
00035642 <AmiBlitz3.ab3@26389>     MOVE.l (A1)+,D2
00035646 <AmiBlitz3.ab3@26390>     BEQ.b 'loop4done
00035648 <AmiBlitz3.ab3@26392>     MOVEA.l D2,A0
0003564A <AmiBlitz3.ab3@26393>     MOVE.l (A0),D2
0003564C <AmiBlitz3.ab3@26394>     ADDQ.w #8,A0
00035652 <AmiBlitz3.ab3@26395>     JSR makelong
00035656 <AmiBlitz3.ab3@26396> BRA.b 'loop4
0003565C <AmiBlitz3.ab3@26399>   CLR.w state_of_residents                                 ;resident change
00035662 <AmiBlitz3.ab3@26400>   CLR.w comsettings_message                                ;alloc change
00035668 <AmiBlitz3.ab3@26401>   CLR.w maxobject_pos
0003566A <AmiBlitz3.ab3@26402> RTS   ; new tomsmart1
00035670 <AmiBlitz3.ab3@26406>   LEA optssave,A0
00035676 <AmiBlitz3.ab3@26407>   LEA ptr_xtradata,A1
00035678 <AmiBlitz3.ab3@26410>   MOVE.w (A1)+,D0
0003567C <AmiBlitz3.ab3@26411>   BEQ.b 'restoredone
0003567E <AmiBlitz3.ab3@26412>   SUBQ.w #1,D0
00035680 <AmiBlitz3.ab3@26415>     MOVE.l (A1)+,D1
00035684 <AmiBlitz3.ab3@26416>     BEQ.b 'restoreloop1
00035686 <AmiBlitz3.ab3@26417>     MOVEA.l D1,A2
00035688 <AmiBlitz3.ab3@26418>     MOVE.w D0,D1
0003568A <AmiBlitz3.ab3@26421>       MOVE.b (A0)+,(A2)+
0003568E <AmiBlitz3.ab3@26422>   DBF D1,'restoreloop3
00035692 <AmiBlitz3.ab3@26424> BRA.b 'restoreloop2
00035694 <AmiBlitz3.ab3@26427> RTS
0003569A <AmiBlitz3.ab3@26431>   JSR free_residents                    ; first free the allready loaded residents
000356A0 <AmiBlitz3.ab3@26432>   JSR Clear_Residents_table             ; second clear the complete resident table
000356A2 <AmiBlitz3.ab3@26433> RTS
000356AA <AmiBlitz3.ab3@26437>   MOVE.w #$FFFF,state_of_residents
000356B0 <AmiBlitz3.ab3@26438>   MOVE.w state_of_residents,D0
000356B6 <AmiBlitz3.ab3@26439>   JSR reloadresident
000356B8 <AmiBlitz3.ab3@26440> RTS
000356BA <AmiBlitz3.ab3@26445>   MOVE.l d0,a1
000356C0 <AmiBlitz3.ab3@26446>   MOVEA.l libpointer,A2
000356C4 <AmiBlitz3.ab3@26449>     MOVE.l $12(A2),D0
000356C8 <AmiBlitz3.ab3@26450>     TST.w -$2(A2,D0.L)
000356CC <AmiBlitz3.ab3@26451>      BEQ.w JL_0_102AAa
000356CE <AmiBlitz3.ab3@26452>     SUBQ.w #1,D1
000356D2 <AmiBlitz3.ab3@26453>      BPL.w JL_0_102AAa
000356D6 <AmiBlitz3.ab3@26454>     MOVEA.l -$1A(A2,D0.L),A3
000356D8 <AmiBlitz3.ab3@26455>     ADDA.l A2,A3
000356DA <AmiBlitz3.ab3@26458>       MOVE.b (A3)+,(A1)+
000356DE <AmiBlitz3.ab3@26459>     BNE.w JL_0_10294a
000356E0 <AmiBlitz3.ab3@26461>     CLR.b -(A1)
000356E4 <AmiBlitz3.ab3@26462>     MOVE.w -$4(A2,D0.L),D0
000356EA <AmiBlitz3.ab3@26463>     AND.l #$ffff,d0
000356EC <AmiBlitz3.ab3@26464> RTS
000356EE <AmiBlitz3.ab3@26467>     MOVEA.l (A2),A2
000356F2 <AmiBlitz3.ab3@26468> BRA.w JL_0_1027Ca
00035702 <AmiBlitz3.ab3@26473> str_maxobjects_name:   Dc.b "              ",0 : Even
00035712 <AmiBlitz3.ab3@26474> str_maxobjects_name2:  Dc.b "              ",0 : Even
00035716 <AmiBlitz3.ab3@26475> objectbuffer:          Dc.l #DEFAULT_OBJECTBUFFERSIZE  ; replaced with a constant tomsmart1
0003571A <AmiBlitz3.ab3@26476>                        Dc.l $00000000
00035726 <AmiBlitz3.ab3@26477> str_objectbuffer:      Dc.b "16384",0,0,0,0,0,0,0      ; string max 12 columns
0003572A <AmiBlitz3.ab3@26479> libsbuffer:            Dc.l #DEFAULT_LIBSBUFFERSIZE    ; replaced with a constant tomsmart1
0003572E <AmiBlitz3.ab3@26480>                        Dc.l $00000000
0003573A <AmiBlitz3.ab3@26481> str_libsbuffer:        Dc.b "32768",0,0,0,0,0,0,0      ;was "16384"; string max 12 columns
0003573E <AmiBlitz3.ab3@26483> systembuffer:          Dc.l #DEFAULT_SYSTEMBUFFERSIZE  ; system buffer  ; replaced with a constant tomsmart1
00035742 <AmiBlitz3.ab3@26484>                        Dc.l $00000000
0003574E <AmiBlitz3.ab3@26485> str_systembuffer:      Dc.b "4096",0,0,0,0,0,0,0,0     ; string max 12 columns
00035752 <AmiBlitz3.ab3@26487> databuffer:            Dc.l #DEFAULT_DATABUFFERSIZE    ; data buffer   ; replaced with a constant tomsmart1
00035756 <AmiBlitz3.ab3@26488>                        Dc.l $00000000
00035762 <AmiBlitz3.ab3@26489> str_databuffer:        Dc.b "4096",0,0,0,0,0,0,0,0     ; string max 12 columns
00035766 <AmiBlitz3.ab3@26491> macrobuffer_size:      Dc.l #DEFAULT_MACROBUFFERSIZE   ; macro buffer ; was $00002000 ; replaced with a constant tomsmart1
0003576A <AmiBlitz3.ab3@26492>                        Dc.l $00000000
00035776 <AmiBlitz3.ab3@26493> str_macrobuffer:       Dc.b "40000",0,0,0,0,0,0,0      ; string max 12 columns
0003577A <AmiBlitz3.ab3@26495> stringbuffer:          Dc.l #DEFAULT_STRINGBUFFERSIZE  ; string buffer ; replaced with a constant tomsmart1
0003577E <AmiBlitz3.ab3@26496>                        Dc.l $00000000
0003578A <AmiBlitz3.ab3@26497> str_stringbuffer:      Dc.b "10240",0,0,0,0,0,0,0      ; string max 12 columns
0003578C <AmiBlitz3.ab3@26499> maxobjects_value:      Dc.w $0064
00035790 <AmiBlitz3.ab3@26500>                        Dc.l $00000000
0003579C <AmiBlitz3.ab3@26501> str_maxobjects_value:  Dc.b "100",0,0,0,0,0,0,0,0,0    ; string max 12 columns
0003579E <AmiBlitz3.ab3@26503> maxobjects_value2:     Dc.w $0014
000357A0 <AmiBlitz3.ab3@26504>                        Dc.w $0000
000357AC <AmiBlitz3.ab3@26506> str_maxobjects_value2: Dc.b "20",0,0,0,0,0,0,0,0,0,0   ; string max 12 columns
000357AD <AmiBlitz3.ab3@26510> set_create_iconfile:   Dc.b $00
000357B0 <AmiBlitz3.ab3@26511> create_iconfile:       Dc.b $80,$01,$01                    ;create icon
000357B2 <AmiBlitz3.ab3@26512>                        Dc.b $00,$01
000357B3 <AmiBlitz3.ab3@26514> set_use_debugger:      Dc.b $00                            ; Flags.w
000357B6 <AmiBlitz3.ab3@26515> use_debugger:          Dc.b $80,$01,$01                    ; Activation.w
000357B8 <AmiBlitz3.ab3@26516>                        Dc.b $00,$01                        ; GadgetType.w
000357BC <AmiBlitz3.ab3@26517> AL_0_11010:            Dc.b $00,$80,$01,$01                ; flags, activation
000357C0 <AmiBlitz3.ab3@26518> AL_0_1103C:            Dc.b $00,$80,$01,$01                ; flags, activation
000357C4 <AmiBlitz3.ab3@26519> AL_0_11068:            Dc.b $00,$80,$01,$01                ; flags, activation
000357C6 <AmiBlitz3.ab3@26520> AL_0_11094:            Ds.w 1
000357C7 <AmiBlitz3.ab3@26522> set_make_smallestcode: Ds.b 1
000357CA <AmiBlitz3.ab3@26523> make_smallestcode:     Dc.b $00,$01,$01                    ;make smallest
000357CC <AmiBlitz3.ab3@26524>                        Dc.b $00,$01
000357CD <AmiBlitz3.ab3@26525> set_link_debuginfo:    Ds.b 1
000357D0 <AmiBlitz3.ab3@26526> link_debuginfo:        Dc.b $00,$01,$01                    ;create debuginfo
000357D2 <AmiBlitz3.ab3@26527>                        Dc.b $00,$01
000359F2 <AmiBlitz3.ab3@26532>   Ds.l 136         ;resident files STEP $44 piece 8
00035A72 <AmiBlitz3.ab3@26537> str_calcexpression:        Ds.l 32
00035A76 <AmiBlitz3.ab3@26538> destbufferend_backup_calc: Ds.l 1
00035A80 <AmiBlitz3.ab3@26543>   MOVE.l destbufferend,destbufferend_backup_calc
00035A86 <AmiBlitz3.ab3@26544> 
00035A8C <AmiBlitz3.ab3@26545>   MOVE.l A7,errstack
00035A96 <AmiBlitz3.ab3@26546>   MOVE.l #Calc_Error_Exit,errcont
00035AC0 <AmiBlitz3.ab3@26553>   !basic         ; get the flage for the conversion form the editor
00035B04 <AmiBlitz3.ab3@26554>   !ComData_GetW{comWord_CalculatorButtonBinFlag,D0} : MOVE.w d0,CalculatorButtonBinFlag
00035B48 <AmiBlitz3.ab3@26555>   !ComData_GetW{comWord_CalculatorButtonDecFlag,D0} : MOVE.w d0,CalculatorButtonDecFlag
00035B66 <AmiBlitz3.ab3@26556>   !asm
00035B6C <AmiBlitz3.ab3@26558>   LEA str_calcexpression,A0
00035B72 <AmiBlitz3.ab3@26567>   JSR setcvars
00035B78 <AmiBlitz3.ab3@26568>   JSR setsvars
00035B7E <AmiBlitz3.ab3@26569>   CLR.w connest
00035B84 <AmiBlitz3.ab3@26570>   LEA str_calcexpression,A5
00035B8A <AmiBlitz3.ab3@26571>   JSR AJL_0_BF6E
00035B90 <AmiBlitz3.ab3@26572>   LEA str_calcexpression,A0
00035B92 <AmiBlitz3.ab3@26573>   TST.l D3
00035B96 <AmiBlitz3.ab3@26574>    BPL.w JL_0_11AE8
00035B9A <AmiBlitz3.ab3@26575>   MOVE.b #$2D,(A0)+
00035B9C <AmiBlitz3.ab3@26576>   NEG.l D3
00035BA4 <AmiBlitz3.ab3@26579>   CMPI.w #$80,CalculatorButtonDecFlag
00035BA8 <AmiBlitz3.ab3@26580>    BEQ.w JL_0_11B74
00035BAA <AmiBlitz3.ab3@26581>   MOVEQ.l #$00,D1
00035BB2 <AmiBlitz3.ab3@26582>   CMPI.w #$80,CalculatorButtonBinFlag
00035BB6 <AmiBlitz3.ab3@26583>    BNE.w JL_0_11B36
00035BB8 <AmiBlitz3.ab3@26584>   MOVEQ.l #$1F,D0
00035BBC <AmiBlitz3.ab3@26585>   MOVE.b #$25,(A0)+
00035BBE <AmiBlitz3.ab3@26588>       LSL.l #1,D3
00035BC2 <AmiBlitz3.ab3@26589>        BCC.w JL_0_11B18
00035BC6 <AmiBlitz3.ab3@26590>       MOVE.b #"1",(A0)+
00035BC8 <AmiBlitz3.ab3@26591>       MOVEQ.l #-$01,D1
00035BCC <AmiBlitz3.ab3@26592>   BRA.w JL_0_11B22
00035BCE <AmiBlitz3.ab3@26595>       TST.w D1
00035BD2 <AmiBlitz3.ab3@26596>       BEQ.w JL_0_11B22
00035BD6 <AmiBlitz3.ab3@26597>       MOVE.b #"0",(A0)+
00035BDA <AmiBlitz3.ab3@26600>  DBF D0,JL_0_11B08
00035BDC <AmiBlitz3.ab3@26603>   TST.w D1
00035BE0 <AmiBlitz3.ab3@26604>   BNE.w JL_0_11B30
00035BE4 <AmiBlitz3.ab3@26605>   MOVE.b #"0",(A0)+
00035BE6 <AmiBlitz3.ab3@26608>   CLR.b (A0)
00035BEA <AmiBlitz3.ab3@26609> BRA.w JL_0_11B7C
00035BEC <AmiBlitz3.ab3@26612>   MOVEQ.l #$07,D0
00035BF0 <AmiBlitz3.ab3@26613>   MOVE.b #$24,(A0)+
00035BF2 <AmiBlitz3.ab3@26616>     MOVE.l D3,D2
00035BF4 <AmiBlitz3.ab3@26617>     SWAP D2
00035BF6 <AmiBlitz3.ab3@26618>     LSR.w #8,D2
00035BF8 <AmiBlitz3.ab3@26619>     LSR.w #4,D2
00035BFC <AmiBlitz3.ab3@26620>     ADDI.w #$30,D2
00035C00 <AmiBlitz3.ab3@26621>     CMP.w #$3A,D2
00035C04 <AmiBlitz3.ab3@26622>      BCS.w JL_0_11B52
00035C06 <AmiBlitz3.ab3@26623>     ADDQ.w #7,D2
00035C0A <AmiBlitz3.ab3@26626>     CMP.w #$30,D2
00035C0E <AmiBlitz3.ab3@26627>     BEQ.w JL_0_11B62
00035C10 <AmiBlitz3.ab3@26628>     MOVE.b D2,(A0)+
00035C12 <AmiBlitz3.ab3@26629>     MOVEQ.l #-$01,D1
00035C16 <AmiBlitz3.ab3@26630>   BRA.w JL_0_11B6A
00035C18 <AmiBlitz3.ab3@26633>     TST.w D1
00035C1C <AmiBlitz3.ab3@26634>      BEQ.w JL_0_11B6A
00035C1E <AmiBlitz3.ab3@26635>     MOVE.b D2,(A0)+
00035C20 <AmiBlitz3.ab3@26638>     LSL.l #4,D3
00035C24 <AmiBlitz3.ab3@26639>  DBF D0,JL_0_11B3C
00035C28 <AmiBlitz3.ab3@26641> BRA.w JL_0_11B26
00035C2A <AmiBlitz3.ab3@26644>   MOVE.l D3,D2
00035C30 <AmiBlitz3.ab3@26645>   JSR makelong
00035C3A <AmiBlitz3.ab3@26652>   MOVE.l destbufferend_backup_calc,destbufferend
00035C3C <AmiBlitz3.ab3@26654> RTS                         ; added tomsmart 2012 03 07 vor Calculator in PED
00035D3B <AmiBlitz3.ab3@26658> str_cliarguments: Ds.b 255   ; a command line can acutally be 255 characters long
00035D3C <AmiBlitz3.ab3@26660> Even
00035D3E <AmiBlitz3.ab3@26674>     MOVE.b (a5)+,d0
00035D42 <AmiBlitz3.ab3@26675>     BEQ 'l2
00035D46 <AmiBlitz3.ab3@26676>     CMP.b #$80,d0
00035D4A <AmiBlitz3.ab3@26677>     BNE 'l1
00035D4C <AmiBlitz3.ab3@26678>     MOVE.b (a5)+,d0
00035D50 <AmiBlitz3.ab3@26679>     BEQ 'l2
00035D54 <AmiBlitz3.ab3@26680>     CMP.b #$02,d0
00035D58 <AmiBlitz3.ab3@26681>   BNE 'l1
00035D5C <AmiBlitz3.ab3@26684>     CMP.b #$20,(a5)+
00035D60 <AmiBlitz3.ab3@26685>   BEQ 'l3
00035D62 <AmiBlitz3.ab3@26686>   SUBQ.l #1,a5
00035D64 <AmiBlitz3.ab3@26687>   TST.b (a5)
00035D68 <AmiBlitz3.ab3@26688>   BEQ 'l2
00035D6C <AmiBlitz3.ab3@26689>   CMP.w #$8008,(a5)
00035D70 <AmiBlitz3.ab3@26690>   BEQ 'l4
00035D74 <AmiBlitz3.ab3@26691>   CMP.w #$8009,(a5)
00035D78 <AmiBlitz3.ab3@26692>   BEQ 'l4
00035D7C <AmiBlitz3.ab3@26693> BRA 'l1
00035D7E <AmiBlitz3.ab3@26696>   ADDQ.l #2,a5
00035D84 <AmiBlitz3.ab3@26697>   JSR skiprest
00035D86 <AmiBlitz3.ab3@26698> RTS
00035D8C <AmiBlitz3.ab3@26701>   JSR nextline
00035D90 <AmiBlitz3.ab3@26702>   BNE 'l1
00035D92 <AmiBlitz3.ab3@26703> RTS
00035DBC <AmiBlitz3.ab3@26707>   !basic
00035DC6 <AmiBlitz3.ab3@26708>   DateFormat 1
00035DD4 <AmiBlitz3.ab3@26709>   i.l=SystemDate
00035DFA <AmiBlitz3.ab3@26710>   a$=Date$ (i)
00035E78 <AmiBlitz3.ab3@26711>   a$=Replace$(a$,"/",".")
00035E7E <AmiBlitz3.ab3@26712>   GetD0 &a$
00035E80 <AmiBlitz3.ab3@26713>   MOVEQ #8,d2
00035E82 <AmiBlitz3.ab3@26714>   MOVE.l d0,a0
00035E84 <AmiBlitz3.ab3@26717>     MOVE.b (a0)+,d1
00035E8A <AmiBlitz3.ab3@26718>     JSR pokedata1b
00035E8E <AmiBlitz3.ab3@26719>  DBF d2,'l1
00035E90 <AmiBlitz3.ab3@26721>   MOVEQ #0,d0
00035E92 <AmiBlitz3.ab3@26722>   MOVE.b (a0)+,d0
00035EB0 <AmiBlitz3.ab3@26723>   !asm
00035EB6 <AmiBlitz3.ab3@26724>   ADD.l #9,d2
00035EBC <AmiBlitz3.ab3@26725>   ADD.l #9,a5
00035EBE <AmiBlitz3.ab3@26726> RTS
00035EE8 <AmiBlitz3.ab3@26730>   !basic
00035EF2 <AmiBlitz3.ab3@26731>   DateFormat 0
00035F00 <AmiBlitz3.ab3@26732>   i.l=SystemDate
00035F26 <AmiBlitz3.ab3@26733>   a$=Date$ (i)
00035FA4 <AmiBlitz3.ab3@26734>   a$=Replace$(a$,"/",".")
00035FAA <AmiBlitz3.ab3@26735>   GetD0 &a$
00035FAC <AmiBlitz3.ab3@26736>   MOVEQ #8,d2
00035FAE <AmiBlitz3.ab3@26737>   MOVE.l d0,a0
00035FB0 <AmiBlitz3.ab3@26740>     MOVE.b (a0)+,d1
00035FB6 <AmiBlitz3.ab3@26741>     JSR pokedata1b
00035FBA <AmiBlitz3.ab3@26742>  DBF d2,'l1
00035FBC <AmiBlitz3.ab3@26744>   MOVEQ #0,d0
00035FBE <AmiBlitz3.ab3@26745>   MOVE.b (a0)+,d0
00035FDC <AmiBlitz3.ab3@26746>   !asm
00035FE2 <AmiBlitz3.ab3@26747>   ADD.l #9,d2
00035FE8 <AmiBlitz3.ab3@26748>   ADD.l #13,a5
00035FEA <AmiBlitz3.ab3@26749> RTS
00036014 <AmiBlitz3.ab3@26753>   !basic
0003601E <AmiBlitz3.ab3@26754>   DateFormat 1
0003602C <AmiBlitz3.ab3@26755>   i.l = SystemDate
00036052 <AmiBlitz3.ab3@26756>   a$ = Date$ (i)
000360D0 <AmiBlitz3.ab3@26757>   a$ = Replace$(a$,"/",".")
000360D6 <AmiBlitz3.ab3@26758>   GetD0 &a$
000360D8 <AmiBlitz3.ab3@26759>   MOVEQ #8,d2
000360DA <AmiBlitz3.ab3@26760>   MOVE.l d0,a0
000360DC <AmiBlitz3.ab3@26763>     MOVE.b (a0)+,d1
000360E2 <AmiBlitz3.ab3@26764>     JSR writebyte
000360E6 <AmiBlitz3.ab3@26765>  DBF d2,'l1
000360E8 <AmiBlitz3.ab3@26767>   MOVEQ #0,d0
000360EA <AmiBlitz3.ab3@26768>   MOVE.b (a0)+,d0
00036108 <AmiBlitz3.ab3@26769>   !asm
0003610E <AmiBlitz3.ab3@26770>   ADD.l #9,a5
00036110 <AmiBlitz3.ab3@26771> RTS
0003613A <AmiBlitz3.ab3@26775>   !basic
00036144 <AmiBlitz3.ab3@26776>   DateFormat 0
00036152 <AmiBlitz3.ab3@26777>   i.l=SystemDate
00036178 <AmiBlitz3.ab3@26778>   a$=Date$ (i)
000361F6 <AmiBlitz3.ab3@26779>   a$=Replace$(a$,"/",".")
000361FC <AmiBlitz3.ab3@26780>   GetD0 &a$
000361FE <AmiBlitz3.ab3@26781>   MOVEQ #8,d2
00036200 <AmiBlitz3.ab3@26782>   MOVE.l d0,a0
00036202 <AmiBlitz3.ab3@26785>     MOVE.b (a0)+,d1
00036208 <AmiBlitz3.ab3@26786>     JSR writebyte
0003620C <AmiBlitz3.ab3@26787>  DBF d2,'l1
0003620E <AmiBlitz3.ab3@26789>   MOVEQ #0,d0
00036210 <AmiBlitz3.ab3@26790>   MOVE.b (a0)+,d0
0003622E <AmiBlitz3.ab3@26791>   !asm
00036234 <AmiBlitz3.ab3@26792>   ADD.l #13,a5
00036236 <AmiBlitz3.ab3@26793> RTS
00036238 <AmiBlitz3.ab3@26797>   MOVE.l d2,-(a7)                                          ; D2 -> stack
0003623A <AmiBlitz3.ab3@26798>   MOVE.l a5,d0
00036264 <AmiBlitz3.ab3@26799>   !basic
00036268 <AmiBlitz3.ab3@26800>   _myD0.l = PutD0
00036272 <AmiBlitz3.ab3@26801>   If _myD0
000362B8 <AmiBlitz3.ab3@26802>     verstring$ = Left$(Peek.s(_myD0),9+3)
0003630A <AmiBlitz3.ab3@26803>     verstring$ = UnRight$(verstring$,3)                      ; Compilerkonstantenbeginn \__ entfernen
00036310 <AmiBlitz3.ab3@26804>   Else
0003634A <AmiBlitz3.ab3@26805>     error{"INTERNAL: Invalid pointer in version_string!"}
0003635A <AmiBlitz3.ab3@26810>   actual_version.l = Peek.l(?versioninformation)
0003636A <AmiBlitz3.ab3@26811>   actual_build.l   = Peek.l(?number_of_builds)
0003638E <AmiBlitz3.ab3@26813>   Format "00"
000363C4 <AmiBlitz3.ab3@26814>   Select verstring$
000363E8 <AmiBlitz3.ab3@26816>     Case "VER_MAJOR"
00036424 <AmiBlitz3.ab3@26817>      put_versionstr$ = Str$(actual_version LSR 24)
0003644E <AmiBlitz3.ab3@26819>     Case "VER_MINOR"
00036492 <AmiBlitz3.ab3@26820>      put_versionstr$ = Str$((actual_version LSL 8) LSR 24)
000364BC <AmiBlitz3.ab3@26822>     Case "VER_PATCH"
00036500 <AmiBlitz3.ab3@26823>      put_versionstr$ = Str$((actual_version LSL 16) LSR 24 )
0003652A <AmiBlitz3.ab3@26825>     Case "VER_BUILD"
0003654E <AmiBlitz3.ab3@26826>      Format ""
00036582 <AmiBlitz3.ab3@26827>      put_versionstr$ = Str$(actual_build)
00036588 <AmiBlitz3.ab3@26829>     Default
000365B0 <AmiBlitz3.ab3@26830>      put_versionstr$ = "{unknown compilerconstant}"
000365BE <AmiBlitz3.ab3@26833>   End Select
000365E2 <AmiBlitz3.ab3@26834>   Format ""
000365F2 <AmiBlitz3.ab3@26836>   GetD0 FLen(put_versionstr$)                              ; laenge zielstring -> Stack
000365F4 <AmiBlitz3.ab3@26837>   MOVE.l d0,d2
000365F6 <AmiBlitz3.ab3@26838>   MOVE.l d2,-(a7)
000365FA <AmiBlitz3.ab3@26839>   SUB #1,d2
00036600 <AmiBlitz3.ab3@26841>   GetD0 &put_versionstr$                                   ; kopieren des neuen Strings in den Zielstring
00036602 <AmiBlitz3.ab3@26842>   MOVE.l d0,a0
00036604 <AmiBlitz3.ab3@26845>     MOVE.b (a0)+,d1
0003660A <AmiBlitz3.ab3@26846>     JSR pokedata1b
0003660E <AmiBlitz3.ab3@26847>  DBF d2,'l1
00036610 <AmiBlitz3.ab3@26849>   MOVEQ #0,d0
0003662E <AmiBlitz3.ab3@26850>   !asm
00036630 <AmiBlitz3.ab3@26851>   MOVE.l (a7)+,d0                                          ; laenge Zielstring <- Stack
00036632 <AmiBlitz3.ab3@26852>   MOVE.l (a7)+,d2                                          ; d2 <-Stack
00036634 <AmiBlitz3.ab3@26853>   ADD.l d0,d2
0003663A <AmiBlitz3.ab3@26854>   ADD.l #12,a5                                             ; string_ptr um konstante weitersetzen
0003663C <AmiBlitz3.ab3@26855>   MOVEQ #0,d0
0003663E <AmiBlitz3.ab3@26856> RTS
00036640 <AmiBlitz3.ab3@26860>   MOVE.l a5,d0
0003666A <AmiBlitz3.ab3@26861>   !basic
0003666E <AmiBlitz3.ab3@26862>   _myD0.l = PutD0
00036678 <AmiBlitz3.ab3@26863>   If _myD0
000366BE <AmiBlitz3.ab3@26864>     verstring$ = Left$(Peek.s(_myD0),9+3)
00036710 <AmiBlitz3.ab3@26865>     verstring$ = UnRight$(verstring$,3)                      ; Compilerkonstantenbeginn \__ entfernen
00036716 <AmiBlitz3.ab3@26866>   Else
00036750 <AmiBlitz3.ab3@26867>     error{"INTERNAL: Invalid pointer in version_string_dc!"}
00036760 <AmiBlitz3.ab3@26872>   actual_version.l = Peek.l(?versioninformation)
00036770 <AmiBlitz3.ab3@26873>   actual_build.l   = Peek.l(?number_of_builds)
00036794 <AmiBlitz3.ab3@26875>   Format ""
000367CA <AmiBlitz3.ab3@26876>   Select verstring$
000367EE <AmiBlitz3.ab3@26878>     Case "VER_MAJOR"
0003682A <AmiBlitz3.ab3@26879>      put_versionstr$ = Str$(actual_version LSR 24)
00036854 <AmiBlitz3.ab3@26881>     Case "VER_MINOR"
00036898 <AmiBlitz3.ab3@26882>      put_versionstr$ = Str$((actual_version LSL 8) LSR 24)
000368C2 <AmiBlitz3.ab3@26884>     Case "VER_PATCH"
00036906 <AmiBlitz3.ab3@26885>      put_versionstr$ = Str$((actual_version LSL 16) LSR 24 )
00036930 <AmiBlitz3.ab3@26887>     Case "VER_BUILD"
00036954 <AmiBlitz3.ab3@26888>      Format ""
00036988 <AmiBlitz3.ab3@26889>      put_versionstr$ = Str$(actual_build)
0003698E <AmiBlitz3.ab3@26891>     Default
000369B6 <AmiBlitz3.ab3@26892>      put_versionstr$ = "{unknown compilerconstant}"
000369C4 <AmiBlitz3.ab3@26894>   End Select
000369E8 <AmiBlitz3.ab3@26895>   Format ""
000369FE <AmiBlitz3.ab3@26897>   GetD0 FLen(put_versionstr$)-1
00036A00 <AmiBlitz3.ab3@26898>   MOVE.l d0,d2
00036A06 <AmiBlitz3.ab3@26900>   GetD0 &put_versionstr$                                   ; kopieren des neuen Strings in den Zielstring
00036A08 <AmiBlitz3.ab3@26901>   MOVE.l d0,a0
00036A0A <AmiBlitz3.ab3@26904>     MOVE.b (a0)+,d1
00036A10 <AmiBlitz3.ab3@26905>     JSR writebyte
00036A14 <AmiBlitz3.ab3@26906>  DBF d2,'l1
00036A16 <AmiBlitz3.ab3@26908>   MOVEQ #0,d0
00036A18 <AmiBlitz3.ab3@26909>   MOVE.b -(a0),d0                                          ; letztes Zeichen in D0
00036A36 <AmiBlitz3.ab3@26910>   !asm
00036A3C <AmiBlitz3.ab3@26911>   ADD.l #12,a5                                             ; string_ptr um konstante weitersetzen
00036A3E <AmiBlitz3.ab3@26912> RTS
00036A40 <AmiBlitz3.ab3@27014>  MOVE.l a5,-(a7)
00036A6C <AmiBlitz3.ab3@27015>  !fget
00036A70 <AmiBlitz3.ab3@27016>  CMP.w #".",d0
00036A74 <AmiBlitz3.ab3@27017>  BNE 'skip
00036A78 <AmiBlitz3.ab3@27018>  MOVEM.l a2/d2,-(a7)
00036A7E <AmiBlitz3.ab3@27019>  LEA newtypebase,a2
00036A84 <AmiBlitz3.ab3@27020>  JSR getparameter2
00036A88 <AmiBlitz3.ab3@27021>  BEQ.w JUMP_syntaxerr
00036A8E <AmiBlitz3.ab3@27022>  JSR findtype
00036A92 <AmiBlitz3.ab3@27023>  BNE.w JUMP_notypeerr
00036A98 <AmiBlitz3.ab3@27024>  MOVE.l a2,typetocast
00036A9C <AmiBlitz3.ab3@27025>  MOVEM.l (a7)+,a2/d2
00036AA0 <AmiBlitz3.ab3@27026>  CMP.w #")",d0
00036AA4 <AmiBlitz3.ab3@27027>  BNE JUMP_errorbracketmiss
00036AA6 <AmiBlitz3.ab3@27028>  ADDQ.l #4,a7
00036AD2 <AmiBlitz3.ab3@27029>  !fget
00036AD8 <AmiBlitz3.ab3@27030>  JMP nocast
00036ADA <AmiBlitz3.ab3@27032> 'skip MOVE.l (a7)+,a5
00036AE0 <AmiBlitz3.ab3@27033>  JMP JL_0_A410
00036AE6 <AmiBlitz3.ab3@27035> JUMP_errorbracketmiss JMP errorbracketmiss
00036B10 <AmiBlitz3.ab3@27037> Function.l ab3_GetIncludeLock{filename.s}
00036B30 <AmiBlitz3.ab3@27038>   incLock.l  = Lock_ (&filename,#ACCESS_READ)   ; try bla.blub
00036B88 <AmiBlitz3.ab3@27039>   ex.s       = dos_GetExt{filename}
00036B9C <AmiBlitz3.ab3@27041>   If incLock = False
00036C10 <AmiBlitz3.ab3@27042>     filename = dos_SetExt{filename,"ab3"}
00036C30 <AmiBlitz3.ab3@27043>     incLock  = Lock_ (&filename,#ACCESS_READ)   ; try bla.ab3
00036C44 <AmiBlitz3.ab3@27046>   If incLock = False
00036CB8 <AmiBlitz3.ab3@27047>     filename = dos_SetExt{filename,"ab2"}
00036CD8 <AmiBlitz3.ab3@27048>     incLock  = Lock_ (&filename,#ACCESS_READ)   ; try bla.ab2
00036CEC <AmiBlitz3.ab3@27051>   If incLock = False
00036D60 <AmiBlitz3.ab3@27052>     filename = dos_SetExt{filename,"bb2"}
00036D80 <AmiBlitz3.ab3@27053>     incLock  = Lock_ (&filename,#ACCESS_READ)   ; try bla.bb2
00036D94 <AmiBlitz3.ab3@27056>   If incLock = False
00036E26 <AmiBlitz3.ab3@27057>     filename = dos_SetExt{filename,ex+".ab3"}
00036E46 <AmiBlitz3.ab3@27058>     incLock  = Lock_ (&filename,#ACCESS_READ)   ; try bla.blub.ab3
00036E5A <AmiBlitz3.ab3@27061>   If incLock = False
00036ECE <AmiBlitz3.ab3@27062>     filename = dos_SetExt{filename,"ab2"}
00036EEE <AmiBlitz3.ab3@27063>     incLock  = Lock_ (&filename,#ACCESS_READ)   ; try bla.blub.ab2
00036F02 <AmiBlitz3.ab3@27066>   If incLock = False
00036F76 <AmiBlitz3.ab3@27067>     filename = dos_SetExt{filename,"bb2"}
00036F96 <AmiBlitz3.ab3@27068>     incLock  = Lock_ (&filename,#ACCESS_READ)   ; try bla.blub.bb2
00036FA0 <AmiBlitz3.ab3@27071>  Function Return incLock
00036FBA <AmiBlitz3.ab3@27072> End Function
00036FE4 <AmiBlitz3.ab3@27076>   !basic
0003700E <AmiBlitz3.ab3@27077>   incString.s = Peek$(?ptr_parameterstore)
0003703C <AmiBlitz3.ab3@27079>   !ComData_LEA{comStr_CurrentDir,D0}                        ; get pointer to current Sourcefiledir
00037040 <AmiBlitz3.ab3@27080>   incDirP.l   = PutD0                                       ;    "
00037068 <AmiBlitz3.ab3@27081>   incDir_.s   = Peek.s(incDirP)                             ; get current Sourcefiledir
000370E8 <AmiBlitz3.ab3@27082>   incFile.s   = dos_AddPart{incDir_,incString}              ; adding Sourcefiledir and Includestring
0003711A <AmiBlitz3.ab3@27083>   incLock.l   = ab3_GetIncludeLock{incFile}                 ; check if file exist
0003712E <AmiBlitz3.ab3@27085>   If incLock = False ; not found => check default Include Directory
0003713E <AmiBlitz3.ab3@27086>     incDirP.l = Peek.l(?incd)
00037148 <AmiBlitz3.ab3@27087>     If incDirP
00037170 <AmiBlitz3.ab3@27088>       incDir_.s = Peek.s(incDirP)
00037176 <AmiBlitz3.ab3@27089>     Else
000371E0 <AmiBlitz3.ab3@27090>       incDir_.s = dos_AddPart{Peek.s(?str_blitz3assign),"Sourcecodes/Includes"}
00037260 <AmiBlitz3.ab3@27092>     incFile.s = dos_AddPart{incDir_,incString}
00037292 <AmiBlitz3.ab3@27093>     incLock.l = ab3_GetIncludeLock{incFile}
000372A6 <AmiBlitz3.ab3@27096>   If incLock = False ; not found => check relative to current source
000372BE <AmiBlitz3.ab3@27097>     incDepth.l = Peek.w(?ininclude)-1
000372E4 <AmiBlitz3.ab3@27098>     If incDepth >= 0 AND incDepth < #maxincludes
00037344 <AmiBlitz3.ab3@27099>       incDir_.s = dos_PathPart{incdim (incDepth)} ;= Peek.s(?includetemp2)
000373C4 <AmiBlitz3.ab3@27100>       incFile.s = dos_AddPart{incDir_,incString}
000373F6 <AmiBlitz3.ab3@27101>       incLock.l = ab3_GetIncludeLock{incFile}
0003740A <AmiBlitz3.ab3@27105>   If incLock = False ; still not found => check default Include Directory and name only
0003741A <AmiBlitz3.ab3@27106>     incDirP.l = Peek.l(?incd)
00037424 <AmiBlitz3.ab3@27107>     If incDirP
0003744C <AmiBlitz3.ab3@27108>       incDir_.s = Peek.s(incDirP)
00037452 <AmiBlitz3.ab3@27109>     Else
000374BC <AmiBlitz3.ab3@27110>       incDir_.s = dos_AddPart{Peek.s(?str_blitz3assign),"Sourcecodes/Includes"}
0003756A <AmiBlitz3.ab3@27112>     incFile.s = dos_AddPart{incDir_,dos_FilePart{incString}}
0003759C <AmiBlitz3.ab3@27113>     incLock.l = ab3_GetIncludeLock{incFile}
000375A6 <AmiBlitz3.ab3@27116>   If incLock
000375BC <AmiBlitz3.ab3@27117>     MaxLen incFile = 1024
000375E0 <AmiBlitz3.ab3@27118>     NameFromLock_ incLock,&incFile,1024
0003760A <AmiBlitz3.ab3@27119>     incFile = Peek.s(&incFile)
00037642 <AmiBlitz3.ab3@27120>     Poke$ ?ptr_parameterstore,incFile
00037656 <AmiBlitz3.ab3@27121>     i = FLen(incFile)
00037662 <AmiBlitz3.ab3@27122>     GetReg d0,i
00037668 <AmiBlitz3.ab3@27123>     MOVE.l d0,tempstore
00037678 <AmiBlitz3.ab3@27124>     UnLock_ incLock
00037696 <AmiBlitz3.ab3@27127>   !asm
0003769C <AmiBlitz3.ab3@27128>   TST.l tempstore
000376A0 <AmiBlitz3.ab3@27129>    BEQ 'l1
000376A6 <AmiBlitz3.ab3@27130>   MOVE.l tempstore,d2
000376A8 <AmiBlitz3.ab3@27133> RTS
000376D2 <AmiBlitz3.ab3@27137>   !basic
000376FC <AmiBlitz3.ab3@27138>   incString.s = Peek$(?ptr_parameterstore)                  ; get the string
0003772A <AmiBlitz3.ab3@27139>   !ComData_LEA{comStr_CurrentDir,D0}                        ; get pointer to current Sourcefiledir
0003772E <AmiBlitz3.ab3@27140>   incDirP.l   = PutD0                                       ;    "
00037756 <AmiBlitz3.ab3@27141>   incDir_.s   = Peek.s(incDirP)                             ; get current Sourcefiledir
000377D6 <AmiBlitz3.ab3@27142>   incFile.s   = dos_AddPart{incDir_,incString}              ; adding Sourcefiledir and Includestring
000377F6 <AmiBlitz3.ab3@27143>   incLock.l   = Lock_(&incFile,#ACCESS_READ)                ; check if file exist
0003780A <AmiBlitz3.ab3@27145>   If incLock = False                                        ; not found => try orignal string only to find
0003782A <AmiBlitz3.ab3@27146>     incLock.l = Lock_(&incString,#ACCESS_READ)
00037834 <AmiBlitz3.ab3@27149>   If incLock                                                ; found => store full path
0003784A <AmiBlitz3.ab3@27150>     MaxLen incFile = 1024
0003786E <AmiBlitz3.ab3@27151>     NameFromLock_ incLock,&incFile,1024
00037898 <AmiBlitz3.ab3@27152>     incFile = Peek.s(&incFile)
000378D0 <AmiBlitz3.ab3@27153>     Poke$ ?ptr_parameterstore,incFile
000378DC <AmiBlitz3.ab3@27156> 
000378FA <AmiBlitz3.ab3@27157>   !asm
000378FC <AmiBlitz3.ab3@27158> RTS
00037902 <AmiBlitz3.ab3@27169>   JSR Aclearallvars
00037908 <AmiBlitz3.ab3@27170>   JSR free_unusedfunctions
00037912 <AmiBlitz3.ab3@27185>   MOVE.l #"NORE",reqmode
00037918 <AmiBlitz3.ab3@27186> JSR handle_compileerror
0003791A <AmiBlitz3.ab3@27189>   MOVE.l d0,-(a7)
0003791C <AmiBlitz3.ab3@27190>   MOVE.l a5,d0
00037926 <AmiBlitz3.ab3@27191>   !basica7
0003792A <AmiBlitz3.ab3@27192>   i.l = PutD0
00037934 <AmiBlitz3.ab3@27193>   If i
0003795C <AmiBlitz3.ab3@27194>     a$ = Peek$(i)
0003798E <AmiBlitz3.ab3@27195>     b$ = Peeks$(i-7,7)
00037AC6 <AmiBlitz3.ab3@27197> 
00037ACC <AmiBlitz3.ab3@27198>     MOVE.l d0,result
00037AD0 <AmiBlitz3.ab3@27200>   !asma7
00037AD2 <AmiBlitz3.ab3@27201>   MOVE.l (a7)+,d0
00037AD4 <AmiBlitz3.ab3@27202> RTS
00037AFE <AmiBlitz3.ab3@27206>   !basic
00037B2C <AmiBlitz3.ab3@27207>   !ComData_LEA{comStr_CurrentDir,D0}
00037B30 <AmiBlitz3.ab3@27208>   currentDirP.l = PutD0
00037B5E <AmiBlitz3.ab3@27210>   !ComData_LEA{comStr_SourceName,D0}
00037B62 <AmiBlitz3.ab3@27211>   fileNameP.l = PutD0
00037B8A <AmiBlitz3.ab3@27213>   check_dirname$  = Peek$(currentDirP)
00037BB2 <AmiBlitz3.ab3@27214>   check_filename$ = Peek$(fileNameP)
00037C38 <AmiBlitz3.ab3@27215>   If (olddirname$<>check_dirname$) OR (oldfilename$<>check_filename$)
00037C3E <AmiBlitz3.ab3@27216>     JSR free_unusedfunctions
00037C88 <AmiBlitz3.ab3@27218>   olddirname$ = Peek$(check_dirname$)
00037CD2 <AmiBlitz3.ab3@27219>   oldfilename$ = Peek$(check_filename$)
00037CFC <AmiBlitz3.ab3@27220>   For i = 0 To #maxincludes-1
00037D10 <AmiBlitz3.ab3@27221>     incline(i) = 0
00037D20 <AmiBlitz3.ab3@27222>   Next
00037D3E <AmiBlitz3.ab3@27223>   !asm
00037D40 <AmiBlitz3.ab3@27224> RTS
00037D42 <AmiBlitz3.ab3@27228>   MOVEQ #0,d1
00037D44 <AmiBlitz3.ab3@27231>   MOVE.b (a5)+,d0
00037D48 <AmiBlitz3.ab3@27232>   BEQ 'er1
00037D4C <AmiBlitz3.ab3@27233>   CMP.b #$20,d0
00037D50 <AmiBlitz3.ab3@27234>   BEQ 'l1
00037D52 <AmiBlitz3.ab3@27235>   ADDQ #1,d1
00037D56 <AmiBlitz3.ab3@27236>   CMP.b #$22,d0
00037D5A <AmiBlitz3.ab3@27237>   BNE 'l1
00037D5C <AmiBlitz3.ab3@27238> RTS
00037D62 <AmiBlitz3.ab3@27241> JMP syntaxerr
00037D86 <AmiBlitz3.ab3@27252> erro1t   Dc.b "Only one BSS / Chip Segment allowed",0 : Even
00037DA4 <AmiBlitz3.ab3@27253> nodata   Dc.b "BSS Segment contains Data!!!!",0       : Even
00037DAA <AmiBlitz3.ab3@27258>   TST.b exdebug
00037DAE <AmiBlitz3.ab3@27259>   BNE 'l10
00037DB4 <AmiBlitz3.ab3@27260>   MOVE.l #$4e71,d1
00037DBA <AmiBlitz3.ab3@27261>   JSR writeword
00037DC0 <AmiBlitz3.ab3@27262>   MOVE.l destpointer,d0
00037DC2 <AmiBlitz3.ab3@27263>   MOVE.l d0,d1
00037DC4 <AmiBlitz3.ab3@27264>   ADDQ.l #3,d1
00037DCA <AmiBlitz3.ab3@27265>   AND.l #$fffffffc,d1
00037DD0 <AmiBlitz3.ab3@27266>   MOVE.l d1,destpointer
00037DD6 <AmiBlitz3.ab3@27267>   SUB.l destpointer,d0
00037DDA <AmiBlitz3.ab3@27268>   BEQ 'lnf1
00037DE4 <AmiBlitz3.ab3@27269>   CMP.l #-1,bssstart
00037DE8 <AmiBlitz3.ab3@27270>   BNE 'lnf1
00037DF2 <AmiBlitz3.ab3@27271>   CMP.l #-1,chipstart
00037DF6 <AmiBlitz3.ab3@27272>   BNE 'lnf1
00037DFC <AmiBlitz3.ab3@27273>   MOVE.l destpointer,a4
00037E02 <AmiBlitz3.ab3@27274>   TST.w dontwrite
00037E06 <AmiBlitz3.ab3@27275>   BNE 'lnf1
00037E0C <AmiBlitz3.ab3@27276>   MOVE.w #$4e71,-2(a4)
00037E16 <AmiBlitz3.ab3@27279>   CMP.l #-1,bssstart
00037E1A <AmiBlitz3.ab3@27280>   BEQ 'l11
00037E20 <AmiBlitz3.ab3@27281>   MOVE.l #erro1t,-(a7)
00037E26 <AmiBlitz3.ab3@27282> JMP handle_compileerror
00037E30 <AmiBlitz3.ab3@27285>   MOVE.l destpointer,bssstart
00037E38 <AmiBlitz3.ab3@27286>   MOVE.b #1,bssmode
00037E3E <AmiBlitz3.ab3@27289>   TST.b chipmode
00037E42 <AmiBlitz3.ab3@27290>   BEQ 'l10
00037E4C <AmiBlitz3.ab3@27291>   MOVE.l destpointer,chipend
00037E52 <AmiBlitz3.ab3@27292>   CLR.b chipmode
00037E58 <AmiBlitz3.ab3@27295>   JSR get1bytemain
00037E5A <AmiBlitz3.ab3@27296> RTS
00037E60 <AmiBlitz3.ab3@27300>    TST.b exdebug
00037E64 <AmiBlitz3.ab3@27301>   BNE 'x1
00037E6A <AmiBlitz3.ab3@27302>   MOVE.l destpointer,d0
00037E70 <AmiBlitz3.ab3@27303>   MOVE.l d0,realbssend
00037E76 <AmiBlitz3.ab3@27304>   MOVE.l #$4e71,d1
00037E7C <AmiBlitz3.ab3@27305>   JSR writeword
00037E82 <AmiBlitz3.ab3@27306>   MOVE.l destpointer,d0
00037E84 <AmiBlitz3.ab3@27307>   MOVE.l d0,d1
00037E86 <AmiBlitz3.ab3@27308>   ADDQ.l #3,d1
00037E8C <AmiBlitz3.ab3@27309>   AND.l #$fffffffc,d1
00037E92 <AmiBlitz3.ab3@27310>   MOVE.l d1,destpointer
00037E98 <AmiBlitz3.ab3@27311>   SUB.l destpointer,d0
00037E9C <AmiBlitz3.ab3@27312>   BEQ 'lnf1
00037EA2 <AmiBlitz3.ab3@27313>   MOVE.l destpointer,a4
00037EAC <AmiBlitz3.ab3@27314>   CMP.l #-1,bssstart
00037EB0 <AmiBlitz3.ab3@27315>   BNE 'lnf1
00037EBA <AmiBlitz3.ab3@27316>   CMP.l #-1,chipstart
00037EBE <AmiBlitz3.ab3@27317>   BNE 'lnf1
00037EC4 <AmiBlitz3.ab3@27318>   TST.w dontwrite
00037EC8 <AmiBlitz3.ab3@27319>   BNE 'lnf1
00037ECE <AmiBlitz3.ab3@27320>   MOVE.w #$4e71,-2(a4)
00037ED4 <AmiBlitz3.ab3@27323>   TST.b bssmode
00037ED8 <AmiBlitz3.ab3@27324>   BEQ 'l10
00037EE2 <AmiBlitz3.ab3@27325>   MOVE.l destpointer,bssend
00037EE8 <AmiBlitz3.ab3@27326>   CLR.b bssmode
00037EF2 <AmiBlitz3.ab3@27331>   CMP.l #-1,chipstart
00037EF6 <AmiBlitz3.ab3@27332>   BEQ 'l11
00037EFC <AmiBlitz3.ab3@27333>   MOVE.l #erro1t,-(a7)
00037F02 <AmiBlitz3.ab3@27334> JMP handle_compileerror
00037F0C <AmiBlitz3.ab3@27337>   MOVE.l destpointer,chipstart
00037F14 <AmiBlitz3.ab3@27338>   MOVE.b #1,chipmode
00037F1A <AmiBlitz3.ab3@27341>   JSR get1bytemain
00037F1C <AmiBlitz3.ab3@27342> RTS
00037F46 <AmiBlitz3.ab3@27346>   !basic
00037F58 <AmiBlitz3.ab3@27356>   i.l = Peek.w(?ininclude)
00037F7E <AmiBlitz3.ab3@27357>   If i>=0 AND i<#maxincludes
00037FB0 <AmiBlitz3.ab3@27358>     incdim (i) = Peek.s(?includetemp2)
00037FCA <AmiBlitz3.ab3@27359>     incline(i) = Peek.l(?includeline)
00037FD4 <AmiBlitz3.ab3@27361>     If CLIMode
00038082 <AmiBlitz3.ab3@27362>       If cli_verbose>=2 Then NPrint "Include \\22",incdim(i),"\\22..."
000380A0 <AmiBlitz3.ab3@27366>   !asm
000380A2 <AmiBlitz3.ab3@27367> RTS
000380CC <AmiBlitz3.ab3@27371>   !basic
000380DE <AmiBlitz3.ab3@27372>   i.l = Peek.w(?ininclude)
00038104 <AmiBlitz3.ab3@27373>   If i>=0 AND i<#maxincludes
00038134 <AmiBlitz3.ab3@27374>     incdim (i) = ""
00038148 <AmiBlitz3.ab3@27375>     incline(i) = 0
00038180 <AmiBlitz3.ab3@27376>     If i>0 Then Poke.l (?includeline),incline(i-1)+1
0003819E <AmiBlitz3.ab3@27378>   !asm
000381A0 <AmiBlitz3.ab3@27379> RTS
000381A6 <AmiBlitz3.ab3@27383>   LEA replacedat,a0
000381AA <AmiBlitz3.ab3@27384>   Dc.w $3181,$0A00                                         ;MOVE.w d1,0(a0,d0.l*2)
000381AC <AmiBlitz3.ab3@27385> RTS
000381B2 <AmiBlitz3.ab3@27389>   TST.b fpu
000381B6 <AmiBlitz3.ab3@27390>   BEQ 'l1
000381C0 <AmiBlitz3.ab3@27393>   MOVE.l destpointer,newinitaddr
000381C6 <AmiBlitz3.ab3@27394>   JSR writeword
000381CC <AmiBlitz3.ab3@27395>   JSR writelong
000381CE <AmiBlitz3.ab3@27396> RTS
000381D0 <AmiBlitz3.ab3@27401>   TST.b (a5)
000381D4 <AmiBlitz3.ab3@27402>    BEQ.s 'll20
000381D8 <AmiBlitz3.ab3@27403>   CMP.b #$20,(a5)
000381DC <AmiBlitz3.ab3@27404>    BNE.s 'll10
000381DE <AmiBlitz3.ab3@27405>   ADDQ.l #1,a5
000381E2 <AmiBlitz3.ab3@27406> BRA.s 'll21
000381E6 <AmiBlitz3.ab3@27409>   CMP.b #";",(a5)
000381EA <AmiBlitz3.ab3@27410>   BNE.s 'll20
000381EC <AmiBlitz3.ab3@27413>   TST.b (a5)+
000381F0 <AmiBlitz3.ab3@27414>   BEQ.s 'll23
000381F4 <AmiBlitz3.ab3@27415> BRA.s 'll25
000381F6 <AmiBlitz3.ab3@27418>   SUBQ.l #1,a5
000381F8 <AmiBlitz3.ab3@27421> RTS
000381FC <AmiBlitz3.ab3@27425>   MOVEM.l a2/d2,-(a7)
000381FE <AmiBlitz3.ab3@27426>   MOVEQ #0,d2
00038204 <AmiBlitz3.ab3@27427>   LEA ptr_parameterstore,a0
0003820A <AmiBlitz3.ab3@27428>   LEA chartab,a2
0003820C <AmiBlitz3.ab3@27431>   MOVE.b (a5),d0
00038210 <AmiBlitz3.ab3@27432>   TST.b 0(a2,d0)
00038214 <AmiBlitz3.ab3@27433>   BNE 'l10
00038216 <AmiBlitz3.ab3@27434>   ADDQ.l #1,a5
00038218 <AmiBlitz3.ab3@27435>   MOVE.b d0,(a0)+
0003821A <AmiBlitz3.ab3@27436>   ADDQ.l #1,d2
0003821E <AmiBlitz3.ab3@27437> BRA fc2
00038220 <AmiBlitz3.ab3@27440>   CLR.b (a0)+
00038226 <AmiBlitz3.ab3@27441>   JSR findlabel2
00038228 <AmiBlitz3.ab3@27442>   MOVE.l a2,a0
0003822C <AmiBlitz3.ab3@27443>   MOVEM.l (a7)+,a2/d2
0003822E <AmiBlitz3.ab3@27444> RTS
00038230 <AmiBlitz3.ab3@27448>   TST.l d0
00038234 <AmiBlitz3.ab3@27449>   BNE 'l10
0003823A <AmiBlitz3.ab3@27450>     MOVE.l #syntax_,-(a7)
00038240 <AmiBlitz3.ab3@27451> JMP handle_compileerror
00038246 <AmiBlitz3.ab3@27454>   CMP.l #1,d0
0003824A <AmiBlitz3.ab3@27455>   BNE 'l20
00038250 <AmiBlitz3.ab3@27456>     MOVE.l #overflow,-(a7)
00038256 <AmiBlitz3.ab3@27457> JMP handle_compileerror
00038258 <AmiBlitz3.ab3@27460>   ADD.l a2,d0
0003825A <AmiBlitz3.ab3@27461>   MOVE.l d0,-(a7)
00038260 <AmiBlitz3.ab3@27462> JMP handle_compileerror
00038266 <AmiBlitz3.ab3@27466>   JMP _return
0003826C <AmiBlitz3.ab3@27467>   JMP _return
00038272 <AmiBlitz3.ab3@27468>   JMP _return
00038278 <AmiBlitz3.ab3@27469>   JMP _return
0003827E <AmiBlitz3.ab3@27470>   JMP _return
00038284 <AmiBlitz3.ab3@27471>   JMP _return
0003828A <AmiBlitz3.ab3@27472>   JMP _return
00038290 <AmiBlitz3.ab3@27473>   JMP _return
00038296 <AmiBlitz3.ab3@27474>   JMP _return
0003829C <AmiBlitz3.ab3@27475>   JMP _return
000382A2 <AmiBlitz3.ab3@27476>   JMP Atokejsr
000382A8 <AmiBlitz3.ab3@27477>   JMP writeinit
000382AE <AmiBlitz3.ab3@27478>   JMP macroexecute
000382B4 <AmiBlitz3.ab3@27479>   JMP findnext
000382BA <AmiBlitz3.ab3@27480>   JMP replacelib
000382C0 <AmiBlitz3.ab3@27481>   JMP findconstant2
000382C6 <AmiBlitz3.ab3@27482>   JMP findchar                                             ;char in d1
000382CC <AmiBlitz3.ab3@27483>   JMP stripspaces
000382D2 <AmiBlitz3.ab3@27484>   JMP calc                                                 ;d0 varmode
000382D8 <AmiBlitz3.ab3@27485>   JMP error
000382DE <AmiBlitz3.ab3@27486>   JMP writelong                                            ;d1 value
000382E4 <AmiBlitz3.ab3@27487>   JMP writeword                                            ;d1 value
000382EA <AmiBlitz3.ab3@27488>   JMP writebyte                                            ;d1 value
000382F0 <AmiBlitz3.ab3@27489> JMP exit
000382F4 <AmiBlitz3.ab3@27493>   destpointer:    Ds.l 1                                ;pc org source      ;Ds.w 1
000382F6 <AmiBlitz3.ab3@27496>   fast            Dc.w 0
000382F8 <AmiBlitz3.ab3@27497>   fpu             Dc.w 0
000382FA <AmiBlitz3.ab3@27498>   newsyntax       Dc.w 0
000382FB <AmiBlitz3.ab3@27500>   optistring      Dc.b 0
000382FC <AmiBlitz3.ab3@27501>   optistring2     Dc.b 0
000382FD <AmiBlitz3.ab3@27502>   optiarray       Dc.b 0
000382FE <AmiBlitz3.ab3@27503>   quickadd        Dc.b 0
00038300 <AmiBlitz3.ab3@27504>   newmode         Dc.w 0
00038302 <AmiBlitz3.ab3@27505>   mode            Dc.w 0
00038304 <AmiBlitz3.ab3@27506>   string1         Dc.w 0
00038306 <AmiBlitz3.ab3@27507>   load_var_size   Dc.w 0
00038308 <AmiBlitz3.ab3@27508>   load_var_reg    Dc.w 0
0003830C <AmiBlitz3.ab3@27509>   load_var_addr   Dc.l 0
0003830E <AmiBlitz3.ab3@27510>   imm_size        Dc.w 0
00038310 <AmiBlitz3.ab3@27511>   imm_reg         Dc.w 0
00038314 <AmiBlitz3.ab3@27512>   imm_addr        Dc.l 0
00038315 <AmiBlitz3.ab3@27513>   iee             Dc.b 0
00038316 <AmiBlitz3.ab3@27514>   _dcb            Dc.b 0
0003831A <AmiBlitz3.ab3@27515>   nohunkoffset    Dc.l 0
0003831E <AmiBlitz3.ab3@27518> teddata:        Dc.l tokens
00038322 <AmiBlitz3.ab3@27519>                 Dc.l 0 ;compilermenu_entries               ; NOT used anymore
00038326 <AmiBlitz3.ab3@27520>                 Dc.l read_xtrafile
0003832A <AmiBlitz3.ab3@27521>                 Dc.l write_xtrafile
0003832E <AmiBlitz3.ab3@27522>                 Dc.l call_menuentry                        ; compile AND RUN ?
00038332 <AmiBlitz3.ab3@27523>                 Dc.l 0
00038336 <AmiBlitz3.ab3@27524>                 Dc.b ":",34,".;"
0003833A <AmiBlitz3.ab3@27525>                 Dc.l "NEW1"
0003833E <AmiBlitz3.ab3@27526>                 Dc.l newtypebase
00038342 <AmiBlitz3.ab3@27527> realconstbase:  Dc.l labelbase
00038346 <AmiBlitz3.ab3@27528> deflib          Dc.l 0
0003834A <AmiBlitz3.ab3@27529> incd            Dc.l 0
0003834E <AmiBlitz3.ab3@27530>                 Dc.l 0
00038352 <AmiBlitz3.ab3@27531>                 Dc.l 0
00038356 <AmiBlitz3.ab3@27532>                 Dc.l 0
00038358 <AmiBlitz3.ab3@27533> _return         RTS
00038359 <AmiBlitz3.ab3@27534>                 Dc.b 0
00038759 <AmiBlitz3.ab3@27535> chartab2        Ds.l 256
0003875D <AmiBlitz3.ab3@27536> codeend         Dc.l 0
00038761 <AmiBlitz3.ab3@27537> hunkoffsetnum   Dc.l 0
00038765 <AmiBlitz3.ab3@27538> chipsize        Dc.l 0
00038769 <AmiBlitz3.ab3@27539> bsssize         Dc.l 0
0003876D <AmiBlitz3.ab3@27540> bssstart        Dc.l -1
00038771 <AmiBlitz3.ab3@27541> bssend          Dc.l -1
00038775 <AmiBlitz3.ab3@27542> chipstart       Dc.l -1
00038779 <AmiBlitz3.ab3@27543> chipend         Dc.l -1
0003877A <AmiBlitz3.ab3@27544> bssmode         Dc.b 0
0003877B <AmiBlitz3.ab3@27545> chipmode        Dc.b 0
0003877C <AmiBlitz3.ab3@27546> newhunk         Dc.b 0
00038780 <AmiBlitz3.ab3@27547> bssnum          Dc.l 0
00038784 <AmiBlitz3.ab3@27548> chipnum         Dc.l 0
00038788 <AmiBlitz3.ab3@27549> lastinstruction Dc.l 0
0003878C <AmiBlitz3.ab3@27550> lastinstructionaddr Dc.l 0
000387A0 <AmiBlitz3.ab3@27551> hunkbegin       Dc.l $03F3,$00,$02,$00,$01
000387A4 <AmiBlitz3.ab3@27552> tstsize1b:      Ds.l 1
000387A8 <AmiBlitz3.ab3@27553> bsssize2        Dc.l 1
000387AC <AmiBlitz3.ab3@27554>                 Dc.l $03E9
000387B0 <AmiBlitz3.ab3@27555> tstsize2b:      Dc.l $100
000387C4 <AmiBlitz3.ab3@27556> hunkbegin2      Dc.l $03F3,$00,$03,$00,$02
000387C8 <AmiBlitz3.ab3@27557> tstsize1c:      Ds.l 1
000387CC <AmiBlitz3.ab3@27558> bsssize3        Dc.l 1
000387D0 <AmiBlitz3.ab3@27559> chipsize2       Dc.l 1
000387D4 <AmiBlitz3.ab3@27560>                 Dc.l $3e9
000387D8 <AmiBlitz3.ab3@27561> tstsize2c       Dc.l 0
000387E8 <AmiBlitz3.ab3@27562> hunkend         Dc.l $3f2,$3eb,0,$3f2
000387F8 <AmiBlitz3.ab3@27563> hunkend2        Dc.l $3f2,$3ea,0,$3f2
000387FF <AmiBlitz3.ab3@27564> strcpy          Dc.b "strcpy",0
00038806 <AmiBlitz3.ab3@27565> strcmp          Dc.b "strcmp",0
0003880D <AmiBlitz3.ab3@27566> strvar          Dc.b "strvar",0
00038812 <AmiBlitz3.ab3@27567> qmul            Dc.b "qmul",0
00038817 <AmiBlitz3.ab3@27568> qdiv            Dc.b "qdiv",0
0003881E <AmiBlitz3.ab3@27569> _MaxLen         Dc.b "maxlen",0
00038823 <AmiBlitz3.ab3@27570> notf            Dc.b "????",0
00038846 <AmiBlitz3.ab3@27572> errtext         Dc.b "only reg addressing Mode supported",0
00038870 <AmiBlitz3.ab3@27573> fpuerr          Dc.b "Instruction not yet supported by 68K FPU ",0
000388B2 <AmiBlitz3.ab3@27574> cmplxerr        Dc.b "Formula too complex for 68K FPU or too much regload register used",0 : Even
000388B4 <AmiBlitz3.ab3@27575> peeksize        Dc.w 0
000388B8 <AmiBlitz3.ab3@27577> mainstart       Dc.l 0
000388B9 <AmiBlitz3.ab3@27579> infunctioncode  Dc.b 0
000388BB <AmiBlitz3.ab3@27580> regnumstore     Dc.w 0
000388E8 <AmiBlitz3.ab3@27581>                 Dc.b "$VER: AmiBlitz3 \\__VER_MAJOR.\\__VER_MINOR (\\__DATE_GER__) Build \\__VER_PATCH.\\__VER_BUILD",0 : Even
000388F0 <AmiBlitz3.ab3@27582> testcode        Dc.b "print i",0
00038954 <AmiBlitz3.ab3@27583>                 Ds.b 100
00038962 <AmiBlitz3.ab3@27584> devo            Dc.b "developobject",0 : Even
00038974 <AmiBlitz3.ab3@27585> autostorename   Dc.b "__autoconstantnum",0
0003897E <AmiBlitz3.ab3@27586> _include        Dc.b "__include",0
00038986 <AmiBlitz3.ab3@27587> _debug          Dc.b "__debug",0
0003898A <AmiBlitz3.ab3@27588> unusedfunc      Dc.l 0
0003898C <AmiBlitz3.ab3@27592>   MOVE.l a0,d0
000389B6 <AmiBlitz3.ab3@27593>   !basic
000389BA <AmiBlitz3.ab3@27594>   *olderror.l= PutD0
00038A14 <AmiBlitz3.ab3@27595> 
00038A48 <AmiBlitz3.ab3@27596>   error_type$ = error$
00038AE4 <AmiBlitz3.ab3@27597> 
00038AF8 <AmiBlitz3.ab3@27598>   If Peek.l (?beforeparameterfetch)
00038B0E <AmiBlitz3.ab3@27599>     MaxLen detokenline.s = 65536
00038B50 <AmiBlitz3.ab3@27600>    !ComData_GetL{comPtr_PreProcessor,include_preprocessor}
00038B60 <AmiBlitz3.ab3@27601>    *tn.preprocessor = Peek.l(?include_preprocessor)
00038B8A <AmiBlitz3.ab3@27602>     written.l = preproc_DetokenizeLine{*tn,Peek.l (?beforeparameterfetch),&detokenline}
00038BB2 <AmiBlitz3.ab3@27603>     If written>0 Then Poke.b &detokenline+written,0
00038BDC <AmiBlitz3.ab3@27604>     sourceLineText.s = Peek.s(&detokenline)
00038BE2 <AmiBlitz3.ab3@27605>   Else
00038C0A <AmiBlitz3.ab3@27606>     sourceLineText = "NULL"
00038C3E <AmiBlitz3.ab3@27608>   error_source$ = sourceLineText
00038C90 <AmiBlitz3.ab3@27609>   error$=error$+sourceLineText
00038C96 <AmiBlitz3.ab3@27610>   GetD0 &error$
00038CB4 <AmiBlitz3.ab3@27611>   !asm
00038CB6 <AmiBlitz3.ab3@27612>   MOVE.l d0,a0
00038CB8 <AmiBlitz3.ab3@27613> RTS
00038CBA <AmiBlitz3.ab3@27617>   MOVE.l a0,-(a7)
00038CBC <AmiBlitz3.ab3@27618>   MOVE.l a0,d0
00038CBE <AmiBlitz3.ab3@27619>   MOVE.l a5,a0                                             ;macro title
00038CE8 <AmiBlitz3.ab3@27620>   !basic
00038CEC <AmiBlitz3.ab3@27621>   i = PutD0
00038CEE <AmiBlitz3.ab3@27622>   MOVEQ #20,d0
00038CF0 <AmiBlitz3.ab3@27625>     MOVE.b -(a0),d1
00038CF4 <AmiBlitz3.ab3@27626>     BEQ 'l1
00038CF8 <AmiBlitz3.ab3@27627>     CMP.b #":",d1
00038CFC <AmiBlitz3.ab3@27628>     BEQ 'l1
00038CFE <AmiBlitz3.ab3@27629>     SUBQ.l #1,d0
00038D02 <AmiBlitz3.ab3@27630>     BNE 'l2
00038D04 <AmiBlitz3.ab3@27633>   ADDQ #1,a0
00038D06 <AmiBlitz3.ab3@27634>   MOVE.l a0,d0
00038D0A <AmiBlitz3.ab3@27635>   i2.l = PutD0
00038D26 <AmiBlitz3.ab3@27636>   If Peek.w (?ininclude)>0
00038D80 <AmiBlitz3.ab3@27637>     Poke.s (?includetemp2),incdim(Peek.w(?ininclude)-1)
00038D90 <AmiBlitz3.ab3@27638>     errorline.l = Peek.l(?includeline);-1
00038DB8 <AmiBlitz3.ab3@27639>     Poke.l ?compilelinecounter,Peek.l(?includeline) - 1
00038DE2 <AmiBlitz3.ab3@27640>     errorfile.s = Peek.s(?includetemp2)
00038DE8 <AmiBlitz3.ab3@27641>   Else
00038E20 <AmiBlitz3.ab3@27642>     Poke.s (?includetemp2),Peek.s(?ptr_parameterstore)
00038E36 <AmiBlitz3.ab3@27643>     errorline.l = Peek.l(?compilelinecounter) + 1
00038E6A <AmiBlitz3.ab3@27644>     errorfile.s = cli_sourcefile
00038E74 <AmiBlitz3.ab3@27647>   If i
00038F18 <AmiBlitz3.ab3@27648>     errortext.s = !TRANS{Replace$(Peek.s(i),"\\0a","\n")}
00038F96 <AmiBlitz3.ab3@27649>     errortext.s = Replace$(errortext,"\n","\\0a")
00038F9C <AmiBlitz3.ab3@27650>   Else
00038FC4 <AmiBlitz3.ab3@27651>     errortext.s = "???"
0003913C <AmiBlitz3.ab3@27654>   NPrint "\\1b[1m",!TRANS{"Compiler Error"}," #",Peek.l(?errorcounter)," <",errorfile,"@",errorline,">\\1b[0m "
00039204 <AmiBlitz3.ab3@27655>   NPrint "  ",error_type$,"\\n  ",error_source$
00039222 <AmiBlitz3.ab3@27659>   !asm
00039224 <AmiBlitz3.ab3@27660>   MOVE.l (a7)+,a0
00039226 <AmiBlitz3.ab3@27661> RTS
00039228 <AmiBlitz3.ab3@27665>   MOVE.l a0,-(a7)
0003922A <AmiBlitz3.ab3@27666>   MOVE.l a0,d0
0003922C <AmiBlitz3.ab3@27667>   MOVE.l a5,a0                                             ;macro title
00039256 <AmiBlitz3.ab3@27668>   !basic
0003925A <AmiBlitz3.ab3@27669>   i = PutD0
0003925C <AmiBlitz3.ab3@27670>   MOVEQ #20,d0
0003925E <AmiBlitz3.ab3@27673>     MOVE.b -(a0),d1
00039262 <AmiBlitz3.ab3@27674>     BEQ 'l1
00039266 <AmiBlitz3.ab3@27675>     CMP.b #":",d1
0003926A <AmiBlitz3.ab3@27676>     BEQ 'l1
0003926C <AmiBlitz3.ab3@27677>     SUBQ.l #1,d0
00039270 <AmiBlitz3.ab3@27678>     BNE 'l2
00039272 <AmiBlitz3.ab3@27681>   ADDQ #1,a0
00039274 <AmiBlitz3.ab3@27682>   MOVE.l a0,d0
00039278 <AmiBlitz3.ab3@27683>   i2.l = PutD0
000392FC <AmiBlitz3.ab3@27684>   fid.l = file_Open{dos_AddPart{my_systemdir$,"ab_compileerror.txt"},#file_forcewrite}
00039310 <AmiBlitz3.ab3@27685>   If fid <> -1
0003932C <AmiBlitz3.ab3@27686>     If Peek.w (?ininclude)>0
00039386 <AmiBlitz3.ab3@27687>       Poke$(?includetemp2),incdim(Peek.w(?ininclude)-1)
0003938C <AmiBlitz3.ab3@27688>     Else
000393B8 <AmiBlitz3.ab3@27689>       Poke$(?includetemp2),""
000393E2 <AmiBlitz3.ab3@27691>     a$ = Peek$(?includetemp2)
00039454 <AmiBlitz3.ab3@27692>     x$ = Replace$(Peek$(i),"\\0a","\n")
00039486 <AmiBlitz3.ab3@27693>     file_WriteLine{fid,x$}
000394D0 <AmiBlitz3.ab3@27694>     file_WriteLine{fid,Str$(Peek.l(?compilelinecounter) + 1)}
000394FC <AmiBlitz3.ab3@27695>     If a$
0003952E <AmiBlitz3.ab3@27696>       file_WriteLine{fid,a$}
00039578 <AmiBlitz3.ab3@27697>       file_WriteLine{fid,Str$(Peek.l(?includeline)-1)}
000395A0 <AmiBlitz3.ab3@27698>       Poke.l ?compilelinecounter,Peek.l(?includeline) - 1
000395A6 <AmiBlitz3.ab3@27699>     Else
000395CC <AmiBlitz3.ab3@27700>       file_WriteLine{fid,"none"}
000395FC <AmiBlitz3.ab3@27702>     file_WriteLine{fid,Peek$(i2)}
00039652 <AmiBlitz3.ab3@27703>     file_WriteLine{fid,Str$(Peek.l(?globallinecount))+" line(s) compiled"}
0003969C <AmiBlitz3.ab3@27704>     file_WriteLine{fid,Hex$(Peek.w(?globalvarpointer))+" global var base"}
000396A6 <AmiBlitz3.ab3@27705>     file_Close{fid}
000396C4 <AmiBlitz3.ab3@27707>   !asm
000396C6 <AmiBlitz3.ab3@27708>   MOVE.l (a7)+,a0
000396C8 <AmiBlitz3.ab3@27709> RTS
000396F2 <AmiBlitz3.ab3@27713>   !basic
000396F6 <AmiBlitz3.ab3@27714>   progress.l     = PutD0
00039708 <AmiBlitz3.ab3@27715>   total.l        = Peek.w(?progressbar_width)
00039726 <AmiBlitz3.ab3@27716>   calcpro        = (progress * 100) / total +1
00039738 <AmiBlitz3.ab3@27717>   pass.l         = Peek.w(?pass)
0003974A <AmiBlitz3.ab3@27718>   typ.l          = Peek.w(?compiler_job)
00039768 <AmiBlitz3.ab3@27721> If (pass><pass_old OR typ><typ_old)
00039776 <AmiBlitz3.ab3@27723>     If pass_old><pass
00039812 <AmiBlitz3.ab3@27724>       passtatusstr.s = !TRANS{"Pass"}+" "+Str$(pass)+"..."
00039868 <AmiBlitz3.ab3@27725>       If cli_verbose>=2 Then NPrint passtatusstr
0003986E <AmiBlitz3.ab3@27728>     pass_old = pass
00039874 <AmiBlitz3.ab3@27729>     typ_old  = typ
0003987A <AmiBlitz3.ab3@27730>     update_comstatus_gui = True
0003988C <AmiBlitz3.ab3@27731>     If typ=0
0003996C <AmiBlitz3.ab3@27732>       comstatusstr = !TRANS{"Pass"}+" "+Str$(pass)+": "+!TRANS{"Compiling Sources..."}
00039974 <AmiBlitz3.ab3@27733>       calcpro = 0  ; set gauge to 0
00039986 <AmiBlitz3.ab3@27735>     If typ=1
00039A66 <AmiBlitz3.ab3@27736>       comstatusstr = !TRANS{"Pass"}+" "+Str$(pass)+": "+!TRANS{"Building Executable..."}
00039A6E <AmiBlitz3.ab3@27737>       calcpro = 0  ; set gauge to 0
00039AC4 <AmiBlitz3.ab3@27740>     If cli_verbose>=3 Then NPrint comstatusstr
00039AD2 <AmiBlitz3.ab3@27743>   If (calcpro >< calcpro_old)
00039B26 <AmiBlitz3.ab3@27744>     If cli_verbose>=4 Then NPrint calcpro,"% compiled..."
00039B2C <AmiBlitz3.ab3@27745>     calcpro_old = calcpro
00039B32 <AmiBlitz3.ab3@27746>     update_comstatus_gui = True
00039B4C <AmiBlitz3.ab3@27749>   If update_comstatus_gui = True                                     ; check if a update of the gui nessecary
00039B6A <AmiBlitz3.ab3@27750>     !asm
00039B9C <AmiBlitz3.ab3@27751> 
00039BC6 <AmiBlitz3.ab3@27752>     !basic
00039BCC <AmiBlitz3.ab3@27753>     update_comstatus_gui  = False ; because we update the gui
00039BEA <AmiBlitz3.ab3@27755>   !asm
00039BEC <AmiBlitz3.ab3@27756> RTS
00039BF2 <AmiBlitz3.ab3@27761>   MOVE.w maxobject_pos,D5                                  ;max objects 1. visible
00039BF8 <AmiBlitz3.ab3@27762>   LEA maxobjects_value,A3                                  ;current value
00039BFE <AmiBlitz3.ab3@27763>   MOVEA.l libpointer,A2
00039C02 <AmiBlitz3.ab3@27766>   CMPA.w #$0,A2
00039C06 <AmiBlitz3.ab3@27767>   BEQ.w menu4c__igotb
00039C08 <AmiBlitz3.ab3@27768>   MOVEA.l A2,A1
00039C0C <AmiBlitz3.ab3@27769>   ADDA.l $12(A1),A1
00039C10 <AmiBlitz3.ab3@27770>   TST.w -$2(A1)
00039C14 <AmiBlitz3.ab3@27771>   BEQ.w JL_0_FFF6b
00039C16 <AmiBlitz3.ab3@27772>   SUBQ.w #1,D5
00039C1A <AmiBlitz3.ab3@27773>   BMI.w JL_0_FFFCb
00039C1C <AmiBlitz3.ab3@27776>   MOVEA.l (A2),A2
00039C20 <AmiBlitz3.ab3@27777> BRA.w JL_0_FFDAb
00039C24 <AmiBlitz3.ab3@27780>   MOVE.w (A3),-$4(A1)
00039C26 <AmiBlitz3.ab3@27783> RTS
00039C2C <AmiBlitz3.ab3@27787>   MOVE.w debugnest,d0
00039C32 <AmiBlitz3.ab3@27788>   LEA storedebugmode, a0
00039C3A <AmiBlitz3.ab3@27789>   MOVE.b 0(a0,d0.w),debugmode
00039C40 <AmiBlitz3.ab3@27790>   TST.w debugnest
00039C44 <AmiBlitz3.ab3@27791>   BEQ JUMP_unpairrunerrs
00039C4A <AmiBlitz3.ab3@27792>   SUBQ.w #1,debugnest
00039C4C <AmiBlitz3.ab3@27793> RTS
00039C52 <AmiBlitz3.ab3@27796> JMP runerrsoverflow
00039C58 <AmiBlitz3.ab3@27799> JMP unpairrunerrs
00039C60 <AmiBlitz3.ab3@27803>   BCHG #$7,use_debugger
00039C68 <AmiBlitz3.ab3@27805>   BTST #$7,use_debugger
00039C6C <AmiBlitz3.ab3@27806>   BNE 'debugon
00039C72 <AmiBlitz3.ab3@27807>   CLR.w debugmode
00039C76 <AmiBlitz3.ab3@27808> BRA.b 'debugoff
00039C7C <AmiBlitz3.ab3@27811>   SNE debugmode
00039C7E <AmiBlitz3.ab3@27814>   MOVE.l a0,-(a7)
00039CB6 <AmiBlitz3.ab3@27817>   !ComData_SetB{comByte_DebugMode,debugmode}
00039CB8 <AmiBlitz3.ab3@27822>   MOVE.l (a7)+,a0
00039CBA <AmiBlitz3.ab3@27823> RTS
00039CC2 <AmiBlitz3.ab3@27828>   BTST #$7,use_debugger
00039CC6 <AmiBlitz3.ab3@27829>   BNE 'debugon
00039CCC <AmiBlitz3.ab3@27830>   CLR.w debugmode
00039CD0 <AmiBlitz3.ab3@27831> BRA.b 'debugoff
00039CD6 <AmiBlitz3.ab3@27834>   SNE debugmode
00039CD8 <AmiBlitz3.ab3@27837> RTS
00039CDE <AmiBlitz3.ab3@27841>   ADDQ.w #1,debugnest
00039CE4 <AmiBlitz3.ab3@27842>   MOVE.w debugnest,d0
00039CE8 <AmiBlitz3.ab3@27843>   CMP.w #18,d0
00039CEC <AmiBlitz3.ab3@27844>    BGE JUMP_runerrsoverflow
00039CF2 <AmiBlitz3.ab3@27845>   LEA storedebugmode, a0
00039CFA <AmiBlitz3.ab3@27846>   MOVE.b debugmode,0( a0,d0.w)
00039D00 <AmiBlitz3.ab3@27849>   SF debugmode
00039D02 <AmiBlitz3.ab3@27850> RTS
00039D82 <AmiBlitz3.ab3@27853> usedpath:  Ds.l 32
00039D86 <AmiBlitz3.ab3@27857>   BEQ.w JUMP_syntaxerr
00039D8C <AmiBlitz3.ab3@27858>   LEA lastpath,A0
00039D90 <AmiBlitz3.ab3@27859>   MOVEM.l a0-a1/d0,-(a7)
00039D96 <AmiBlitz3.ab3@27860>   LEA lastpath2,a1
00039D98 <AmiBlitz3.ab3@27863>     MOVE.b (a0)+,(a1)+
00039D9C <AmiBlitz3.ab3@27864>   BNE 'l2
00039DA0 <AmiBlitz3.ab3@27865>   MOVEM.l (a7)+,a0-a1/d0
00039DA4 <AmiBlitz3.ab3@27866>   LEA usedpath(PC),A0
00039DA8 <AmiBlitz3.ab3@27867>   MOVEM.l a0-a1/d0,-(a7)
00039DAE <AmiBlitz3.ab3@27868>   LEA lastpath,a1
00039DB0 <AmiBlitz3.ab3@27871>     MOVE.b (a0)+,(a1)+
00039DB4 <AmiBlitz3.ab3@27872>   BNE 'l1
00039DB8 <AmiBlitz3.ab3@27873>   MOVEM.l (a7)+,a0-a1/d0
00039DBA <AmiBlitz3.ab3@27876>   TST.w D0
00039DBE <AmiBlitz3.ab3@27877>    BMI.w JUMP_syntaxerr
00039DC0 <AmiBlitz3.ab3@27878>   MOVE.b D0,(A0)+
00039DC4 <AmiBlitz3.ab3@27879>   BSR.w JUMP_get1bytemain
00039DC8 <AmiBlitz3.ab3@27880>    BNE.w JL_0_4AA8
00039DCC <AmiBlitz3.ab3@27881>   MOVE.b #$2,(A0)
00039DCE <AmiBlitz3.ab3@27882> RTS
00039DD2 <AmiBlitz3.ab3@27886>   BEQ.w JUMP_syntaxerr
00039DD8 <AmiBlitz3.ab3@27887>   LEA path2,A0
00039DDA <AmiBlitz3.ab3@27897>   TST.w D0
00039DDE <AmiBlitz3.ab3@27898>    BMI.w JUMP_syntaxerr
00039DE0 <AmiBlitz3.ab3@27899>   MOVE.b D0,(A0)+
00039DE4 <AmiBlitz3.ab3@27900>   BSR.w JUMP_get1bytemain
00039DE8 <AmiBlitz3.ab3@27901>    BNE.w JL_0_4AA8b
00039DEC <AmiBlitz3.ab3@27902>   MOVE.b #$2,(A0)
00039DEE <AmiBlitz3.ab3@27903> RTS
00039DF4 <AmiBlitz3.ab3@27912> JMP errormsg_reg
00039DFE <AmiBlitz3.ab3@27916>   MOVE.l #$f22d6780,fpucodeglobal
00039E08 <AmiBlitz3.ab3@27917>   MOVE.l #$f22c6780,fpucodelocal
00039E0E <AmiBlitz3.ab3@27918>   LEA regtable,a0
00039E18 <AmiBlitz3.ab3@27919>   MOVE.l #7,maxregs
00039E1A <AmiBlitz3.ab3@27922>   MOVE.l (a0),d0
00039E1E <AmiBlitz3.ab3@27923>   BEQ 'e1
00039E20 <AmiBlitz3.ab3@27924>   CLR.l (a0)
00039E24 <AmiBlitz3.ab3@27925>   MOVE.w 4(a0),d0
00039E2E <AmiBlitz3.ab3@27926>   MOVE.l fpucodeglobal,fpucode
00039E32 <AmiBlitz3.ab3@27927>   TST.w 6(a0)
00039E36 <AmiBlitz3.ab3@27928>   BEQ 'glob
00039E40 <AmiBlitz3.ab3@27929>   MOVE.l fpucodelocal,fpucode
00039E46 <AmiBlitz3.ab3@27932>   MOVE.l fpucode,d1
00039E4C <AmiBlitz3.ab3@27933>   JSR writelong
00039E56 <AmiBlitz3.ab3@27934>   SUB.l #$80,fpucodelocal
00039E60 <AmiBlitz3.ab3@27935>   SUB.l #$80,fpucodeglobal
00039E62 <AmiBlitz3.ab3@27936>   MOVE.w d0,d1
00039E68 <AmiBlitz3.ab3@27937>   JSR writeword
00039E6A <AmiBlitz3.ab3@27938>   ADDQ #8,a0
00039E6E <AmiBlitz3.ab3@27939> BRA 'again
00039E70 <AmiBlitz3.ab3@27942> RTS
00039E76 <AmiBlitz3.ab3@27949> JMP notypeerr
00039E7C <AmiBlitz3.ab3@27952> JMP illtypeerr
00039E86 <AmiBlitz3.ab3@27955>   MOVE.l #$f22d4780,fpucodeglobal
00039E90 <AmiBlitz3.ab3@27956>   MOVE.l #$f22c4780,fpucodelocal
00039E96 <AmiBlitz3.ab3@27957>   LEA regtable,a0
00039E98 <AmiBlitz3.ab3@27958>   TST.l (a0)
00039E9C <AmiBlitz3.ab3@27959>    BNE JUMP_errormsg_reg
00039E9E <AmiBlitz3.ab3@27960>   MOVE.l d7,-(a7)
00039EA0 <AmiBlitz3.ab3@27961>   SUBQ.l #1,a5
00039EA6 <AmiBlitz3.ab3@27964>   JSR getparameter2
00039EAA <AmiBlitz3.ab3@27965>   BEQ.w 'nopar
00039EB0 <AmiBlitz3.ab3@27966>   MOVE.w d0,lastchar
00039EB6 <AmiBlitz3.ab3@27967>   JSR findvariable
00039EBA <AmiBlitz3.ab3@27968>   BNE 'islocal
00039EC4 <AmiBlitz3.ab3@27969>   MOVE.l fpucodeglobal,fpucode
00039ECE <AmiBlitz3.ab3@27970>   MOVE.l #3,maxregs
00039ED0 <AmiBlitz3.ab3@27971>   MOVEQ #0,d7
00039ED8 <AmiBlitz3.ab3@27974>   CMP.l #newtype_float,$a(a2)                              ;is float type
00039EDC <AmiBlitz3.ab3@27975>    BEQ 'doit
00039EE4 <AmiBlitz3.ab3@27976>   CMP.l #newtype_double,$a(a2)
00039EE8 <AmiBlitz3.ab3@27977>    BNE JUMP_illtypeerr
00039EEE <AmiBlitz3.ab3@27980>   LEA regtable,a0
00039EF0 <AmiBlitz3.ab3@27981>   MOVEQ #0,d0
00039EF2 <AmiBlitz3.ab3@27984>   TST.l (a0)
00039EF6 <AmiBlitz3.ab3@27985>    BEQ 'store
00039EF8 <AmiBlitz3.ab3@27986>   ADDQ.l #4,d0
00039EFA <AmiBlitz3.ab3@27987>   ADDQ.l #8,a0
00039F00 <AmiBlitz3.ab3@27988>   CMP.l #16,d0
00039F04 <AmiBlitz3.ab3@27989>    BCS 'loop
00039F0E <AmiBlitz3.ab3@27990>   MOVE.l #2,maxregs
00039F14 <AmiBlitz3.ab3@27991>   CMP.l #20,d0
00039F18 <AmiBlitz3.ab3@27992>    BCS 'loop
00039F22 <AmiBlitz3.ab3@27993>   MOVE.l #1,maxregs
00039F28 <AmiBlitz3.ab3@27994>   CMP.l #24,d0
00039F2C <AmiBlitz3.ab3@27995>    BCS 'loop
00039F32 <AmiBlitz3.ab3@27996> JMP toovarerr
00039F38 <AmiBlitz3.ab3@27999>   TST.b fpu
00039F3C <AmiBlitz3.ab3@28000>    BEQ 'nofpu
00039F3E <AmiBlitz3.ab3@28001>   MOVE.l a2,(a0)
00039F44 <AmiBlitz3.ab3@28002>   MOVE.w 4(a2),4(a0)
00039F48 <AmiBlitz3.ab3@28003>   MOVE.w d7,6(a0)
00039F4E <AmiBlitz3.ab3@28004>   MOVE.l fpucode,d1
00039F58 <AmiBlitz3.ab3@28005>   SUB.l #$80,fpucodeglobal
00039F62 <AmiBlitz3.ab3@28006>   SUB.l #$80,fpucodelocal
00039F68 <AmiBlitz3.ab3@28007>   JSR writelong
00039F6C <AmiBlitz3.ab3@28008>   MOVE.w 4(a2),d1
00039F72 <AmiBlitz3.ab3@28009>   JSR writeword
00039F78 <AmiBlitz3.ab3@28012>   MOVE.w lastchar,d0
00039F7C <AmiBlitz3.ab3@28013>   CMP.w #":",d0
00039F80 <AmiBlitz3.ab3@28014>    BEQ 'nopar
00039F82 <AmiBlitz3.ab3@28015>   TST.w d0
00039F86 <AmiBlitz3.ab3@28016>    BEQ 'nopar
00039F8A <AmiBlitz3.ab3@28017>   CMP.w #",",d0
00039F8E <AmiBlitz3.ab3@28018>   BNE JUMP_syntaxerr
00039F92 <AmiBlitz3.ab3@28019> BRA 'l2
00039F94 <AmiBlitz3.ab3@28022>    MOVE.l (a7)+,d7
00039F96 <AmiBlitz3.ab3@28023> RTS
00039F98 <AmiBlitz3.ab3@28026>   MOVEQ #1,d7
00039FA0 <AmiBlitz3.ab3@28027>   MOVE.b #1,newvariable
00039FA6 <AmiBlitz3.ab3@28028>   LEA firstlocal,a2
00039FAC <AmiBlitz3.ab3@28029>   JSR findvariable
00039FB2 <AmiBlitz3.ab3@28030>   CLR.b newvariable
00039FB8 <AmiBlitz3.ab3@28031>   CMP.l #-1,d0
00039FBC <AmiBlitz3.ab3@28032>   BEQ.w JUMP_notypeerr2
00039FC6 <AmiBlitz3.ab3@28033>   MOVE.l fpucodelocal,fpucode
00039FCA <AmiBlitz3.ab3@28034> BRA 'go
00039FCE <AmiBlitz3.ab3@28037>   CMP.b #".",d0
00039FD2 <AmiBlitz3.ab3@28038>    BNE 'l1
00039FD6 <AmiBlitz3.ab3@28039>   BSR JUMP_get1bytemain
00039FDA <AmiBlitz3.ab3@28040>   BSR JUMP_get1bytemain
00039FDE <AmiBlitz3.ab3@28043>   ORI .b #$20,d0
00039FE2 <AmiBlitz3.ab3@28044>   CMP.b #"d",d0
00039FE6 <AmiBlitz3.ab3@28045>    BNE JUMP_illeaerr
00039FEA <AmiBlitz3.ab3@28046>   BSR JUMP_get1bytemain
00039FEE <AmiBlitz3.ab3@28047>   SUB.b #$30,d0
00039FF2 <AmiBlitz3.ab3@28048>   CMP.b #$7,d0
00039FF6 <AmiBlitz3.ab3@28049>    BGT JUMP_syntaxerr
00039FFA <AmiBlitz3.ab3@28050>   MOVE.w #$49c0,d1
00039FFC <AmiBlitz3.ab3@28051>   ADD.b d0,d1
0003A002 <AmiBlitz3.ab3@28052>   JSR writeword
0003A006 <AmiBlitz3.ab3@28053>   BSR JUMP_get1bytemain
0003A008 <AmiBlitz3.ab3@28054> RTS
0003A00E <AmiBlitz3.ab3@28058>   LEA lastpath,a0
0003A012 <AmiBlitz3.ab3@28059>   LEA usedpath(PC),A1
0003A014 <AmiBlitz3.ab3@28062>     MOVE.b (a0)+,(a1)+
0003A018 <AmiBlitz3.ab3@28063>   BNE 'l1
0003A01E <AmiBlitz3.ab3@28065>   LEA lastpath2,a0
0003A024 <AmiBlitz3.ab3@28066>   LEA lastpath,A1
0003A026 <AmiBlitz3.ab3@28069>     MOVE.b (a0)+,(a1)+
0003A02A <AmiBlitz3.ab3@28070>   BNE 'l2
0003A02C <AmiBlitz3.ab3@28071> RTS
0003A032 <AmiBlitz3.ab3@28075>   TST.b objectcount
0003A036 <AmiBlitz3.ab3@28076>   BEQ 'l2a
0003A03C <AmiBlitz3.ab3@28077> JMP macnesterr
0003A042 <AmiBlitz3.ab3@28080>   LEA devo,a0
0003A048 <AmiBlitz3.ab3@28081>   ADDQ.b #1,objectcount
0003A04C <AmiBlitz3.ab3@28082>   MOVEM.l a1/d2,-(a7)
0003A052 <AmiBlitz3.ab3@28083>   LEA ptr_parameterstore,a1
0003A054 <AmiBlitz3.ab3@28086>     MOVE.b (a0)+,(a1)+
0003A058 <AmiBlitz3.ab3@28087>   BNE 'l1
0003A05A <AmiBlitz3.ab3@28089>   MOVEQ #13,d2
0003A060 <AmiBlitz3.ab3@28090>   JSR findlabel2
0003A064 <AmiBlitz3.ab3@28091>   BNE 'd
0003A068 <AmiBlitz3.ab3@28092>   TST.l 8(a2)
0003A06C <AmiBlitz3.ab3@28093>   BEQ 'd
0003A072 <AmiBlitz3.ab3@28094>   SUBQ.b #1,objectcount
0003A076 <AmiBlitz3.ab3@28095>   MOVEM.l (a7)+,a1/d2
0003A07C <AmiBlitz3.ab3@28096>   JSR skiprest
0003A084 <AmiBlitz3.ab3@28097>   MOVE.b #1,developobject
0003A086 <AmiBlitz3.ab3@28098> RTS
0003A08A <AmiBlitz3.ab3@28101>   MOVEM.l (a7)+,a1/d2
0003A092 <AmiBlitz3.ab3@28102>   MOVE.b #1,resdisable
0003A098 <AmiBlitz3.ab3@28105>   CLR.b developobject
0003A09E <AmiBlitz3.ab3@28106> JMP do_Macro
0003A0A4 <AmiBlitz3.ab3@28110> JMP illeaerr
0003A0AA <AmiBlitz3.ab3@28114>   CLR.b typecheck
0003A0B0 <AmiBlitz3.ab3@28115>   CLR.b declare
0003A0B6 <AmiBlitz3.ab3@28116>   CLR.b declare2
0003A0BA <AmiBlitz3.ab3@28117>   SUB.b #$30,d0
0003A0BE <AmiBlitz3.ab3@28118>   BTST #0,d0
0003A0C2 <AmiBlitz3.ab3@28119>   BEQ 'l1
0003A0CA <AmiBlitz3.ab3@28120>   MOVE.b #1,declare
0003A0CE <AmiBlitz3.ab3@28123>   BTST #1,d0
0003A0D2 <AmiBlitz3.ab3@28124>   BEQ 'l2
0003A0DA <AmiBlitz3.ab3@28125>   MOVE.b #1,declare2
0003A0DE <AmiBlitz3.ab3@28128>   BTST #2,d0
0003A0E2 <AmiBlitz3.ab3@28129>   BEQ 'l3
0003A0EA <AmiBlitz3.ab3@28130>   MOVE.b #1,typecheck
0003A0EE <AmiBlitz3.ab3@28132>   BSR.w JUMP_get1bytemain
0003A0F0 <AmiBlitz3.ab3@28133> RTS
0003A0F6 <AmiBlitz3.ab3@28136> JMP get1bytemain
0003A120 <AmiBlitz3.ab3@28140>   !basic
0003A140 <AmiBlitz3.ab3@28142>   FillMem ?residents_table,?residents_table_end-?residents_table,0
0003A15E <AmiBlitz3.ab3@28143>   !asm
0003A160 <AmiBlitz3.ab3@28144> Return
0003A162 <AmiBlitz3.ab3@28149>   MOVE.l d2,-(a7)                                          ; D2 -> stack
0003A164 <AmiBlitz3.ab3@28150>   ADDQ #1,a5
0003A166 <AmiBlitz3.ab3@28151>   MOVE.l a5,-(a7)
0003A190 <AmiBlitz3.ab3@28152>   !basic
0003A196 <AmiBlitz3.ab3@28153>   MOVE.l (a7)+,d0 : _myD0.l = PutD0
0003A1A0 <AmiBlitz3.ab3@28154>   If _myD0
0003A1E0 <AmiBlitz3.ab3@28155>     newconst$ = UCase$(Peek.s(_myD0))
0003A1E6 <AmiBlitz3.ab3@28156>   Else
0003A220 <AmiBlitz3.ab3@28157>     error{"INTERNAL: invalid pointer in check_newconstants!"}
0003A248 <AmiBlitz3.ab3@28158>     nwconst$="xxx"
0003A270 <AmiBlitz3.ab3@28160>   condata$ =""
0003A280 <AmiBlitz3.ab3@28161>   Poke.b ?skip_bytes,0
0003A2DC <AmiBlitz3.ab3@28162>   If Left$(newconst$,2) = "__"
0003A336 <AmiBlitz3.ab3@28163>     Select Mid$(newconst$,3,4)
0003A35A <AmiBlitz3.ab3@28165>      Case "DATE"
0003A3B4 <AmiBlitz3.ab3@28166>       Select Mid$(newconst$,3,6)
0003A3F2 <AmiBlitz3.ab3@28167>       Case "DATE__" : DateFormat 1 : Poke.b ?skip_bytes,8
0003A436 <AmiBlitz3.ab3@28168>       Case "DATE_G" : DateFormat 0 : Poke.b ?skip_bytes,12
0003A444 <AmiBlitz3.ab3@28169>       End Select
0003A452 <AmiBlitz3.ab3@28170>       i.l=SystemDate
0003A478 <AmiBlitz3.ab3@28171>       condata$ = Date$ (i)
0003A4F6 <AmiBlitz3.ab3@28172>       condata$ = Replace$(condata$,"/",".")
0003A520 <AmiBlitz3.ab3@28174>      Case "VER_"
0003A530 <AmiBlitz3.ab3@28177>       actual_version.l = Peek.l(?versioninformation)
0003A540 <AmiBlitz3.ab3@28178>       actual_build.l   = Peek.l(?number_of_builds)
0003A564 <AmiBlitz3.ab3@28180>       Format ""
0003A5BE <AmiBlitz3.ab3@28181>       Select Mid$(newconst$,3,9)
0003A5E2 <AmiBlitz3.ab3@28183>        Case "VER_MAJOR"
0003A61E <AmiBlitz3.ab3@28184>         condata$ = Str$(actual_version LSR 24)
0003A648 <AmiBlitz3.ab3@28186>        Case "VER_MINOR"
0003A68C <AmiBlitz3.ab3@28187>         condata$ = Str$((actual_version LSL 8) LSR 24)
0003A6B6 <AmiBlitz3.ab3@28189>        Case "VER_PATCH"
0003A6FA <AmiBlitz3.ab3@28190>         condata$ = Str$((actual_version LSL 16) LSR 24 )
0003A724 <AmiBlitz3.ab3@28192>        Case "VER_BUILD"
0003A748 <AmiBlitz3.ab3@28193>         Format ""
0003A77C <AmiBlitz3.ab3@28194>         condata$ = Str$(actual_build)
0003A782 <AmiBlitz3.ab3@28196>        Default
0003A7AA <AmiBlitz3.ab3@28197>         condata$ = "{unknown compiler constant}"
0003A7B8 <AmiBlitz3.ab3@28199>       End Select
0003A7DC <AmiBlitz3.ab3@28200>       Format ""
0003A7EC <AmiBlitz3.ab3@28201>       Poke.b ?skip_bytes,11
0003A816 <AmiBlitz3.ab3@28203>      Case "THIS"
0003A870 <AmiBlitz3.ab3@28204>       Select Mid$(newconst$,3,9)
0003A894 <AmiBlitz3.ab3@28206>        Case "THIS_FUNC"
0003A8A4 <AmiBlitz3.ab3@28207>         Poke.b ?skip_bytes,15
0003A8C4 <AmiBlitz3.ab3@28208>         If Peek.l(?currentfunction)<>0
0003A910 <AmiBlitz3.ab3@28209>           condata$ = Peek.s(Peek.l(?currentfunction) + 32 + #funcentry_extend + 1)
0003A916 <AmiBlitz3.ab3@28210>         Else
0003A93E <AmiBlitz3.ab3@28211>           condata$ = "GLOBAL"
0003A968 <AmiBlitz3.ab3@28214>        Case "THIS_INCL"
0003A978 <AmiBlitz3.ab3@28215>         Poke.b ?skip_bytes,14
0003A998 <AmiBlitz3.ab3@28216>         If Peek.l(?includetemp2)<>0
0003A9E6 <AmiBlitz3.ab3@28217>           condata$ = dos_FilePart{Peek$(?includetemp2)}
0003AA10 <AmiBlitz3.ab3@28220>        Case "THIS_POIN"
0003AA20 <AmiBlitz3.ab3@28221>         Poke.b ?skip_bytes,14
0003AA40 <AmiBlitz3.ab3@28222>         If Peek.l(?currentfunction)<>0
0003AA6E <AmiBlitz3.ab3@28223>           condata$ = Hex$(Peek.l(?currentfunction))
0003AA7C <AmiBlitz3.ab3@28226>       End Select
0003AAA6 <AmiBlitz3.ab3@28228>      Case "CODE"
0003AAB6 <AmiBlitz3.ab3@28229>       Poke.b ?skip_bytes,10
0003AB18 <AmiBlitz3.ab3@28230>       If Mid$(newconst$,3,8) = "CODELINE"
0003AB54 <AmiBlitz3.ab3@28231>         condata$ = Str$(Peek.l(?globallinecount))
0003AB62 <AmiBlitz3.ab3@28234>     End Select
0003AB68 <AmiBlitz3.ab3@28236>   Else
0003ABBC <AmiBlitz3.ab3@28237>     Select Left$(newconst$,1)
0003ABE0 <AmiBlitz3.ab3@28239>      Case "R"
0003ABF0 <AmiBlitz3.ab3@28240>       Poke.b ?skip_bytes,3
0003AC68 <AmiBlitz3.ab3@28241>       For i = 1 To Vallong(Mid$(newconst$,2,2))
0003ACE8 <AmiBlitz3.ab3@28242>         condata$ = condata$ + Mid$(newconst$,4,1)
0003ACF8 <AmiBlitz3.ab3@28243>       Next
0003AD22 <AmiBlitz3.ab3@28245>      Case "N"
0003AD32 <AmiBlitz3.ab3@28246>       Poke.b ?skip_bytes,1
0003AD56 <AmiBlitz3.ab3@28247>       condata$ = Chr$(10)
0003AD5C <AmiBlitz3.ab3@28249>      Default
0003AD6E <AmiBlitz3.ab3@28250>       char1.b = Peek.b(&newconst$)
0003AD86 <AmiBlitz3.ab3@28251>       char2.b = Peek.b(&newconst$+1)
0003AD92 <AmiBlitz3.ab3@28252>       nibble1.l = -1
0003AD9E <AmiBlitz3.ab3@28253>       nibble2.l = -1
0003ADDC <AmiBlitz3.ab3@28255>       If (char1>=@"0" AND char1<=@"9") Then nibble1 = char1-@"0"
0003AE1A <AmiBlitz3.ab3@28256>       If (char2>=@"0" AND char2<=@"9") Then nibble2 = char2-@"0"
0003AE5E <AmiBlitz3.ab3@28258>       If (char1>=@"a" AND char1<=@"f") Then nibble1 = char1-@"a" + 10
0003AEA2 <AmiBlitz3.ab3@28259>       If (char2>=@"a" AND char2<=@"f") Then nibble2 = char2-@"a" + 10
0003AEE6 <AmiBlitz3.ab3@28261>       If (char1>=@"A" AND char1<=@"F") Then nibble1 = char1-@"A" + 10
0003AF2A <AmiBlitz3.ab3@28262>       If (char2>=@"A" AND char2<=@"F") Then nibble2 = char2-@"A" + 10
0003AF50 <AmiBlitz3.ab3@28264>       If nibble1>=0 AND nibble2>=0
0003AF66 <AmiBlitz3.ab3@28265>         newchar.l = (nibble1 LSL 4) + (nibble2)
0003AF8A <AmiBlitz3.ab3@28266>         condata$ = Chr$(newchar)
0003AF9A <AmiBlitz3.ab3@28267>         Poke.b ?skip_bytes,2
0003AFA8 <AmiBlitz3.ab3@28270>     End Select
0003B008 <AmiBlitz3.ab3@28272>   If condata$ = "" AND Peek.b(?skip_bytes)=0
0003B12E <AmiBlitz3.ab3@28273>     !cout{"detected unknown const: " + newconst$}
0003B162 <AmiBlitz3.ab3@28274>     condata$ = newconst$
0003B178 <AmiBlitz3.ab3@28277>   GetD0 FLen(condata$)-1                                    ; laenge zielstring -> Stack
0003B17A <AmiBlitz3.ab3@28278>   MOVE.l d0,d2
0003B17C <AmiBlitz3.ab3@28279>   MOVE.l d2,-(a7)
0003B182 <AmiBlitz3.ab3@28281>   GetD0 &condata$                                          ; kopieren des neuen Strings in den Zielstring
0003B184 <AmiBlitz3.ab3@28282>   MOVE.l d0,a0
0003B186 <AmiBlitz3.ab3@28285>     MOVE.b (a0)+,d1
0003B18C <AmiBlitz3.ab3@28286>     JSR pokedata1b
0003B190 <AmiBlitz3.ab3@28287>  DBF d2,'l1
0003B1AE <AmiBlitz3.ab3@28289>   !asm
0003B1B0 <AmiBlitz3.ab3@28290>   MOVE.l (a7)+,d0                                          ; laenge Zielstring <- Stack
0003B1B2 <AmiBlitz3.ab3@28291>   MOVE.l (a7)+,d2                                          ; d2 <-Stack
0003B1B4 <AmiBlitz3.ab3@28292>   ADD.l d0,d2                                              ; eingefuegte chars zu D2 dazu
0003B1BA <AmiBlitz3.ab3@28293>   ADD.l #1,d2
0003B1C0 <AmiBlitz3.ab3@28295>   MOVE.l #0,d0                                             ; a5 um konstantennamen weiterschieben
0003B1C6 <AmiBlitz3.ab3@28296>   MOVE.b skip_bytes,D0
0003B1C8 <AmiBlitz3.ab3@28297>   ADD.l D0,a5
0003B1CA <AmiBlitz3.ab3@28298> RTS
0003B1CE <AmiBlitz3.ab3@28373> MOVEM.l a3/d1,-(a7)
0003B1D4 <AmiBlitz3.ab3@28375> CLR.b a4a5store
0003B1D6 <AmiBlitz3.ab3@28376> 'continue: MOVE.b (a3)+,d1
0003B1DA <AmiBlitz3.ab3@28377> CMP.b #$15,d1
0003B1DE <AmiBlitz3.ab3@28378> BEQ 'find
0003B1E2 <AmiBlitz3.ab3@28379> CMP.b #$14,d1
0003B1E6 <AmiBlitz3.ab3@28380> BEQ 'find
0003B1EA <AmiBlitz3.ab3@28381> CMP.b #$ff,d1
0003B1EE <AmiBlitz3.ab3@28382> BNE 'continue
0003B1F2 <AmiBlitz3.ab3@28383> BRA 'notfind
0003B1F8 <AmiBlitz3.ab3@28385> MOVE.l #$48e7000c,d1                  ; write 68k movem.l a4/a5,-(a7)
0003B1FE <AmiBlitz3.ab3@28386> JSR writelong
0003B206 <AmiBlitz3.ab3@28387> MOVE.b #1,a4a5store
0003B20A <AmiBlitz3.ab3@28388> 'notfind: MOVEM.l (a7)+,a3/d1
0003B20C <AmiBlitz3.ab3@28389> RTS
0003B212 <AmiBlitz3.ab3@28392> TST.b a4a5store
0003B216 <AmiBlitz3.ab3@28393> BEQ 'no
0003B21C <AmiBlitz3.ab3@28394> MOVE.l #$4cdf3000,d1                  ; write 68k movem.l (a7)+,a4/a5
0003B222 <AmiBlitz3.ab3@28395> JSR writelong
0003B228 <AmiBlitz3.ab3@28396> CLR.b a4a5store
0003B22A <AmiBlitz3.ab3@28397> 'no RTS
0003B22A <internal_commands.ab3@1> INCLUDE "internal_commands.ab3"
0003B22E <internal_commands.ab3@13> INCLUDE "internal_commands.ab3"
0003B230 <internal_commands.ab3@15> INCLUDE "internal_commands.ab3"
0003B238 <internal_commands.ab3@16> INCLUDE "internal_commands.ab3"
0003B244 <internal_commands.ab3@17> INCLUDE "internal_commands.ab3"
0003B248 <internal_commands.ab3@21> INCLUDE "internal_commands.ab3"
0003B24A <internal_commands.ab3@22> INCLUDE "internal_commands.ab3"
0003B24E <internal_commands.ab3@23> INCLUDE "internal_commands.ab3"
0003B297 <internal_commands.ab3@24> INCLUDE "internal_commands.ab3"
0003B298 <internal_commands.ab3@25> INCLUDE "internal_commands.ab3"
0003B29C <internal_commands.ab3@28> INCLUDE "internal_commands.ab3"
0003B29E <internal_commands.ab3@29> INCLUDE "internal_commands.ab3"
0003B2A2 <internal_commands.ab3@30> INCLUDE "internal_commands.ab3"
0003B2BE <internal_commands.ab3@31> INCLUDE "internal_commands.ab3"
0003B2C2 <internal_commands.ab3@35> INCLUDE "internal_commands.ab3"
0003B2C4 <internal_commands.ab3@36> INCLUDE "internal_commands.ab3"
0003B2C8 <internal_commands.ab3@37> INCLUDE "internal_commands.ab3"
0003B325 <internal_commands.ab3@38> INCLUDE "internal_commands.ab3"
0003B326 <internal_commands.ab3@39> INCLUDE "internal_commands.ab3"
0003B32A <internal_commands.ab3@42> INCLUDE "internal_commands.ab3"
0003B32C <internal_commands.ab3@43> INCLUDE "internal_commands.ab3"
0003B331 <internal_commands.ab3@44> INCLUDE "internal_commands.ab3"
0003B341 <internal_commands.ab3@45> INCLUDE "internal_commands.ab3"
0003B342 <internal_commands.ab3@46> INCLUDE "internal_commands.ab3"
0003B346 <internal_commands.ab3@49> INCLUDE "internal_commands.ab3"
0003B348 <internal_commands.ab3@50> INCLUDE "internal_commands.ab3"
0003B34E <internal_commands.ab3@51> INCLUDE "internal_commands.ab3"
0003B35E <internal_commands.ab3@52> INCLUDE "internal_commands.ab3"
0003B362 <internal_commands.ab3@56> INCLUDE "internal_commands.ab3"
0003B364 <internal_commands.ab3@57> INCLUDE "internal_commands.ab3"
0003B36B <internal_commands.ab3@58> INCLUDE "internal_commands.ab3"
0003B36C <internal_commands.ab3@59> INCLUDE "internal_commands.ab3"
0003B370 <internal_commands.ab3@63> INCLUDE "internal_commands.ab3"
0003B372 <internal_commands.ab3@64> INCLUDE "internal_commands.ab3"
0003B37C <internal_commands.ab3@65> INCLUDE "internal_commands.ab3"
0003B3AF <internal_commands.ab3@66> INCLUDE "internal_commands.ab3"
0003B3B0 <internal_commands.ab3@67> INCLUDE "internal_commands.ab3"
0003B3B4 <internal_commands.ab3@70> INCLUDE "internal_commands.ab3"
0003B3B6 <internal_commands.ab3@71> INCLUDE "internal_commands.ab3"
0003B3BF <internal_commands.ab3@72> INCLUDE "internal_commands.ab3"
0003B3FA <internal_commands.ab3@73> INCLUDE "internal_commands.ab3"
0003B3FE <internal_commands.ab3@77> INCLUDE "internal_commands.ab3"
0003B400 <internal_commands.ab3@78> INCLUDE "internal_commands.ab3"
0003B40A <internal_commands.ab3@79> INCLUDE "internal_commands.ab3"
0003B40B <internal_commands.ab3@80> INCLUDE "internal_commands.ab3"
0003B40C <internal_commands.ab3@81> INCLUDE "internal_commands.ab3"
0003B410 <internal_commands.ab3@84> INCLUDE "internal_commands.ab3"
0003B412 <internal_commands.ab3@85> INCLUDE "internal_commands.ab3"
0003B415 <internal_commands.ab3@86> INCLUDE "internal_commands.ab3"
0003B42C <internal_commands.ab3@87> INCLUDE "internal_commands.ab3"
0003B430 <internal_commands.ab3@91> INCLUDE "internal_commands.ab3"
0003B432 <internal_commands.ab3@92> INCLUDE "internal_commands.ab3"
0003B438 <internal_commands.ab3@93> INCLUDE "internal_commands.ab3"
0003B445 <internal_commands.ab3@94> INCLUDE "internal_commands.ab3"
0003B446 <internal_commands.ab3@95> INCLUDE "internal_commands.ab3"
0003B44A <internal_commands.ab3@98> INCLUDE "internal_commands.ab3"
0003B44C <internal_commands.ab3@99> INCLUDE "internal_commands.ab3"
0003B452 <internal_commands.ab3@100> INCLUDE "internal_commands.ab3"
0003B45E <internal_commands.ab3@101> INCLUDE "internal_commands.ab3"
0003B462 <internal_commands.ab3@105> INCLUDE "internal_commands.ab3"
0003B464 <internal_commands.ab3@106> INCLUDE "internal_commands.ab3"
0003B46B <internal_commands.ab3@107> INCLUDE "internal_commands.ab3"
0003B478 <internal_commands.ab3@108> INCLUDE "internal_commands.ab3"
0003B47C <internal_commands.ab3@112> INCLUDE "internal_commands.ab3"
0003B47E <internal_commands.ab3@113> INCLUDE "internal_commands.ab3"
0003B483 <internal_commands.ab3@114> INCLUDE "internal_commands.ab3"
0003B490 <internal_commands.ab3@115> INCLUDE "internal_commands.ab3"
0003B494 <internal_commands.ab3@119> INCLUDE "internal_commands.ab3"
0003B496 <internal_commands.ab3@120> INCLUDE "internal_commands.ab3"
0003B49E <internal_commands.ab3@121> INCLUDE "internal_commands.ab3"
0003B49F <internal_commands.ab3@122> INCLUDE "internal_commands.ab3"
0003B4A0 <internal_commands.ab3@123> INCLUDE "internal_commands.ab3"
0003B4A4 <internal_commands.ab3@126> INCLUDE "internal_commands.ab3"
0003B4A6 <internal_commands.ab3@127> INCLUDE "internal_commands.ab3"
0003B4AE <internal_commands.ab3@128> INCLUDE "internal_commands.ab3"
0003B4AF <internal_commands.ab3@129> INCLUDE "internal_commands.ab3"
0003B4B0 <internal_commands.ab3@130> INCLUDE "internal_commands.ab3"
0003B4B4 <internal_commands.ab3@133> INCLUDE "internal_commands.ab3"
0003B4B6 <internal_commands.ab3@134> INCLUDE "internal_commands.ab3"
0003B4BF <internal_commands.ab3@135> INCLUDE "internal_commands.ab3"
0003B4CA <internal_commands.ab3@136> INCLUDE "internal_commands.ab3"
0003B4CE <internal_commands.ab3@140> INCLUDE "internal_commands.ab3"
0003B4D0 <internal_commands.ab3@141> INCLUDE "internal_commands.ab3"
0003B4D8 <internal_commands.ab3@142> INCLUDE "internal_commands.ab3"
0003B4E3 <internal_commands.ab3@143> INCLUDE "internal_commands.ab3"
0003B4E4 <internal_commands.ab3@144> INCLUDE "internal_commands.ab3"
0003B4E8 <internal_commands.ab3@147> INCLUDE "internal_commands.ab3"
0003B4EA <internal_commands.ab3@148> INCLUDE "internal_commands.ab3"
0003B4F1 <internal_commands.ab3@149> INCLUDE "internal_commands.ab3"
0003B553 <internal_commands.ab3@150> INCLUDE "internal_commands.ab3"
0003B554 <internal_commands.ab3@151> INCLUDE "internal_commands.ab3"
0003B558 <internal_commands.ab3@154> INCLUDE "internal_commands.ab3"
0003B55A <internal_commands.ab3@155> INCLUDE "internal_commands.ab3"
0003B561 <internal_commands.ab3@156> INCLUDE "internal_commands.ab3"
0003B570 <internal_commands.ab3@157> INCLUDE "internal_commands.ab3"
0003B574 <internal_commands.ab3@161> INCLUDE "internal_commands.ab3"
0003B576 <internal_commands.ab3@162> INCLUDE "internal_commands.ab3"
0003B57A <internal_commands.ab3@163> INCLUDE "internal_commands.ab3"
0003B5B0 <internal_commands.ab3@164> INCLUDE "internal_commands.ab3"
0003B5B4 <internal_commands.ab3@168> INCLUDE "internal_commands.ab3"
0003B5B6 <internal_commands.ab3@169> INCLUDE "internal_commands.ab3"
0003B5BB <internal_commands.ab3@170> INCLUDE "internal_commands.ab3"
0003B5CA <internal_commands.ab3@171> INCLUDE "internal_commands.ab3"
0003B5CE <internal_commands.ab3@175> INCLUDE "internal_commands.ab3"
0003B5D0 <internal_commands.ab3@176> INCLUDE "internal_commands.ab3"
0003B5D3 <internal_commands.ab3@177> INCLUDE "internal_commands.ab3"
0003B5F4 <internal_commands.ab3@178> INCLUDE "internal_commands.ab3"
0003B5F8 <internal_commands.ab3@182> INCLUDE "internal_commands.ab3"
0003B5FA <internal_commands.ab3@183> INCLUDE "internal_commands.ab3"
0003B5FF <internal_commands.ab3@184> INCLUDE "internal_commands.ab3"
0003B60B <internal_commands.ab3@185> INCLUDE "internal_commands.ab3"
0003B60C <internal_commands.ab3@186> INCLUDE "internal_commands.ab3"
0003B610 <internal_commands.ab3@189> INCLUDE "internal_commands.ab3"
0003B612 <internal_commands.ab3@190> INCLUDE "internal_commands.ab3"
0003B617 <internal_commands.ab3@191> INCLUDE "internal_commands.ab3"
0003B62E <internal_commands.ab3@192> INCLUDE "internal_commands.ab3"
0003B632 <internal_commands.ab3@196> INCLUDE "internal_commands.ab3"
0003B634 <internal_commands.ab3@197> INCLUDE "internal_commands.ab3"
0003B639 <internal_commands.ab3@198> INCLUDE "internal_commands.ab3"
0003B648 <internal_commands.ab3@199> INCLUDE "internal_commands.ab3"
0003B64C <internal_commands.ab3@203> INCLUDE "internal_commands.ab3"
0003B64E <internal_commands.ab3@204> INCLUDE "internal_commands.ab3"
0003B653 <internal_commands.ab3@205> INCLUDE "internal_commands.ab3"
0003B672 <internal_commands.ab3@206> INCLUDE "internal_commands.ab3"
0003B676 <internal_commands.ab3@210> INCLUDE "internal_commands.ab3"
0003B678 <internal_commands.ab3@211> INCLUDE "internal_commands.ab3"
0003B67D <internal_commands.ab3@212> INCLUDE "internal_commands.ab3"
0003B69C <internal_commands.ab3@213> INCLUDE "internal_commands.ab3"
0003B6A0 <internal_commands.ab3@217> INCLUDE "internal_commands.ab3"
0003B6A2 <internal_commands.ab3@218> INCLUDE "internal_commands.ab3"
0003B6A8 <internal_commands.ab3@219> INCLUDE "internal_commands.ab3"
0003B6A9 <internal_commands.ab3@220> INCLUDE "internal_commands.ab3"
0003B6AA <internal_commands.ab3@221> INCLUDE "internal_commands.ab3"
0003B6AE <internal_commands.ab3@224> INCLUDE "internal_commands.ab3"
0003B6B0 <internal_commands.ab3@225> INCLUDE "internal_commands.ab3"
0003B6B5 <internal_commands.ab3@226> INCLUDE "internal_commands.ab3"
0003B6B6 <internal_commands.ab3@227> INCLUDE "internal_commands.ab3"
0003B6BA <internal_commands.ab3@231> INCLUDE "internal_commands.ab3"
0003B6BC <internal_commands.ab3@232> INCLUDE "internal_commands.ab3"
0003B6C1 <internal_commands.ab3@233> INCLUDE "internal_commands.ab3"
0003B6CE <internal_commands.ab3@234> INCLUDE "internal_commands.ab3"
0003B6D2 <internal_commands.ab3@238> INCLUDE "internal_commands.ab3"
0003B6D4 <internal_commands.ab3@239> INCLUDE "internal_commands.ab3"
0003B6D9 <internal_commands.ab3@240> INCLUDE "internal_commands.ab3"
0003B6E8 <internal_commands.ab3@241> INCLUDE "internal_commands.ab3"
0003B6EC <internal_commands.ab3@245> INCLUDE "internal_commands.ab3"
0003B6EE <internal_commands.ab3@246> INCLUDE "internal_commands.ab3"
0003B6F3 <internal_commands.ab3@247> INCLUDE "internal_commands.ab3"
0003B702 <internal_commands.ab3@248> INCLUDE "internal_commands.ab3"
0003B706 <internal_commands.ab3@252> INCLUDE "internal_commands.ab3"
0003B708 <internal_commands.ab3@253> INCLUDE "internal_commands.ab3"
0003B70E <internal_commands.ab3@254> INCLUDE "internal_commands.ab3"
0003B72B <internal_commands.ab3@255> INCLUDE "internal_commands.ab3"
0003B72C <internal_commands.ab3@256> INCLUDE "internal_commands.ab3"
0003B730 <internal_commands.ab3@259> INCLUDE "internal_commands.ab3"
0003B732 <internal_commands.ab3@260> INCLUDE "internal_commands.ab3"
0003B738 <internal_commands.ab3@261> INCLUDE "internal_commands.ab3"
0003B755 <internal_commands.ab3@262> INCLUDE "internal_commands.ab3"
0003B756 <internal_commands.ab3@263> INCLUDE "internal_commands.ab3"
0003B75A <internal_commands.ab3@266> INCLUDE "internal_commands.ab3"
0003B75C <internal_commands.ab3@267> INCLUDE "internal_commands.ab3"
0003B75F <internal_commands.ab3@268> INCLUDE "internal_commands.ab3"
0003B776 <internal_commands.ab3@269> INCLUDE "internal_commands.ab3"
0003B77A <internal_commands.ab3@273> INCLUDE "internal_commands.ab3"
0003B77C <internal_commands.ab3@274> INCLUDE "internal_commands.ab3"
0003B77F <internal_commands.ab3@275> INCLUDE "internal_commands.ab3"
0003B78E <internal_commands.ab3@276> INCLUDE "internal_commands.ab3"
0003B792 <internal_commands.ab3@280> INCLUDE "internal_commands.ab3"
0003B794 <internal_commands.ab3@281> INCLUDE "internal_commands.ab3"
0003B799 <internal_commands.ab3@282> INCLUDE "internal_commands.ab3"
0003B79A <internal_commands.ab3@283> INCLUDE "internal_commands.ab3"
0003B79E <internal_commands.ab3@287> INCLUDE "internal_commands.ab3"
0003B7A0 <internal_commands.ab3@288> INCLUDE "internal_commands.ab3"
0003B7A4 <internal_commands.ab3@289> INCLUDE "internal_commands.ab3"
0003B7B9 <internal_commands.ab3@290> INCLUDE "internal_commands.ab3"
0003B7BA <internal_commands.ab3@291> INCLUDE "internal_commands.ab3"
0003B7BE <internal_commands.ab3@294> INCLUDE "internal_commands.ab3"
0003B7C0 <internal_commands.ab3@295> INCLUDE "internal_commands.ab3"
0003B7C7 <internal_commands.ab3@296> INCLUDE "internal_commands.ab3"
0003B7E0 <internal_commands.ab3@297> INCLUDE "internal_commands.ab3"
0003B7E4 <internal_commands.ab3@301> INCLUDE "internal_commands.ab3"
0003B7E6 <internal_commands.ab3@302> INCLUDE "internal_commands.ab3"
0003B7ED <internal_commands.ab3@303> INCLUDE "internal_commands.ab3"
0003B7F8 <internal_commands.ab3@304> INCLUDE "internal_commands.ab3"
0003B7FC <internal_commands.ab3@308> INCLUDE "internal_commands.ab3"
0003B7FE <internal_commands.ab3@309> INCLUDE "internal_commands.ab3"
0003B803 <internal_commands.ab3@310> INCLUDE "internal_commands.ab3"
0003B81A <internal_commands.ab3@311> INCLUDE "internal_commands.ab3"
0003B81E <internal_commands.ab3@315> INCLUDE "internal_commands.ab3"
0003B820 <internal_commands.ab3@316> INCLUDE "internal_commands.ab3"
0003B824 <internal_commands.ab3@317> INCLUDE "internal_commands.ab3"
0003B83B <internal_commands.ab3@318> INCLUDE "internal_commands.ab3"
0003B83C <internal_commands.ab3@319> INCLUDE "internal_commands.ab3"
0003B840 <internal_commands.ab3@322> INCLUDE "internal_commands.ab3"
0003B842 <internal_commands.ab3@323> INCLUDE "internal_commands.ab3"
0003B847 <internal_commands.ab3@324> INCLUDE "internal_commands.ab3"
0003B848 <internal_commands.ab3@325> INCLUDE "internal_commands.ab3"
0003B84C <internal_commands.ab3@329> INCLUDE "internal_commands.ab3"
0003B84E <internal_commands.ab3@330> INCLUDE "internal_commands.ab3"
0003B853 <internal_commands.ab3@331> INCLUDE "internal_commands.ab3"
0003B857 <internal_commands.ab3@332> INCLUDE "internal_commands.ab3"
0003B858 <internal_commands.ab3@333> INCLUDE "internal_commands.ab3"
0003B85C <internal_commands.ab3@336> INCLUDE "internal_commands.ab3"
0003B85E <internal_commands.ab3@337> INCLUDE "internal_commands.ab3"
0003B865 <internal_commands.ab3@338> INCLUDE "internal_commands.ab3"
0003B87D <internal_commands.ab3@339> INCLUDE "internal_commands.ab3"
0003B87E <internal_commands.ab3@340> INCLUDE "internal_commands.ab3"
0003B882 <internal_commands.ab3@343> INCLUDE "internal_commands.ab3"
0003B884 <internal_commands.ab3@344> INCLUDE "internal_commands.ab3"
0003B88B <internal_commands.ab3@345> INCLUDE "internal_commands.ab3"
0003B890 <internal_commands.ab3@346> INCLUDE "internal_commands.ab3"
0003B894 <internal_commands.ab3@350> INCLUDE "internal_commands.ab3"
0003B896 <internal_commands.ab3@351> INCLUDE "internal_commands.ab3"
0003B89D <internal_commands.ab3@352> INCLUDE "internal_commands.ab3"
0003B8A2 <internal_commands.ab3@353> INCLUDE "internal_commands.ab3"
0003B8A6 <internal_commands.ab3@357> INCLUDE "internal_commands.ab3"
0003B8A8 <internal_commands.ab3@358> INCLUDE "internal_commands.ab3"
0003B8AF <internal_commands.ab3@359> INCLUDE "internal_commands.ab3"
0003B8CA <internal_commands.ab3@360> INCLUDE "internal_commands.ab3"
0003B8CE <internal_commands.ab3@364> INCLUDE "internal_commands.ab3"
0003B8D0 <internal_commands.ab3@365> INCLUDE "internal_commands.ab3"
0003B8D8 <internal_commands.ab3@366> INCLUDE "internal_commands.ab3"
0003B8F1 <internal_commands.ab3@367> INCLUDE "internal_commands.ab3"
0003B8F2 <internal_commands.ab3@368> INCLUDE "internal_commands.ab3"
0003B8F6 <internal_commands.ab3@371> INCLUDE "internal_commands.ab3"
0003B8F8 <internal_commands.ab3@372> INCLUDE "internal_commands.ab3"
0003B8FE <internal_commands.ab3@373> INCLUDE "internal_commands.ab3"
0003B8FF <internal_commands.ab3@374> INCLUDE "internal_commands.ab3"
0003B900 <internal_commands.ab3@375> INCLUDE "internal_commands.ab3"
0003B904 <internal_commands.ab3@378> INCLUDE "internal_commands.ab3"
0003B906 <internal_commands.ab3@379> INCLUDE "internal_commands.ab3"
0003B90C <internal_commands.ab3@380> INCLUDE "internal_commands.ab3"
0003B90D <internal_commands.ab3@381> INCLUDE "internal_commands.ab3"
0003B90E <internal_commands.ab3@382> INCLUDE "internal_commands.ab3"
0003B912 <internal_commands.ab3@385> INCLUDE "internal_commands.ab3"
0003B914 <internal_commands.ab3@386> INCLUDE "internal_commands.ab3"
0003B91B <internal_commands.ab3@387> INCLUDE "internal_commands.ab3"
0003B91C <internal_commands.ab3@388> INCLUDE "internal_commands.ab3"
0003B920 <internal_commands.ab3@392> INCLUDE "internal_commands.ab3"
0003B922 <internal_commands.ab3@393> INCLUDE "internal_commands.ab3"
0003B928 <internal_commands.ab3@394> INCLUDE "internal_commands.ab3"
0003B931 <internal_commands.ab3@395> INCLUDE "internal_commands.ab3"
0003B932 <internal_commands.ab3@396> INCLUDE "internal_commands.ab3"
0003B936 <internal_commands.ab3@399> INCLUDE "internal_commands.ab3"
0003B938 <internal_commands.ab3@400> INCLUDE "internal_commands.ab3"
0003B940 <internal_commands.ab3@401> INCLUDE "internal_commands.ab3"
0003B94D <internal_commands.ab3@402> INCLUDE "internal_commands.ab3"
0003B94E <internal_commands.ab3@403> INCLUDE "internal_commands.ab3"
0003B952 <internal_commands.ab3@406> INCLUDE "internal_commands.ab3"
0003B954 <internal_commands.ab3@407> INCLUDE "internal_commands.ab3"
0003B95C <internal_commands.ab3@408> INCLUDE "internal_commands.ab3"
0003B969 <internal_commands.ab3@409> INCLUDE "internal_commands.ab3"
0003B96A <internal_commands.ab3@410> INCLUDE "internal_commands.ab3"
0003B96E <internal_commands.ab3@413> INCLUDE "internal_commands.ab3"
0003B970 <internal_commands.ab3@414> INCLUDE "internal_commands.ab3"
0003B978 <internal_commands.ab3@415> INCLUDE "internal_commands.ab3"
0003B985 <internal_commands.ab3@416> INCLUDE "internal_commands.ab3"
0003B986 <internal_commands.ab3@417> INCLUDE "internal_commands.ab3"
0003B98A <internal_commands.ab3@420> INCLUDE "internal_commands.ab3"
0003B98C <internal_commands.ab3@421> INCLUDE "internal_commands.ab3"
0003B991 <internal_commands.ab3@422> INCLUDE "internal_commands.ab3"
0003B992 <internal_commands.ab3@423> INCLUDE "internal_commands.ab3"
0003B996 <internal_commands.ab3@437> INCLUDE "internal_commands.ab3"
0003B998 <internal_commands.ab3@438> INCLUDE "internal_commands.ab3"
0003B99D <internal_commands.ab3@439> INCLUDE "internal_commands.ab3"
0003B99E <internal_commands.ab3@440> INCLUDE "internal_commands.ab3"
0003B9A0 <internal_commands.ab3@443> INCLUDE "internal_commands.ab3"
0003B9A4 <internal_commands.ab3@444> INCLUDE "internal_commands.ab3"
0003B9A6 <internal_commands.ab3@445> INCLUDE "internal_commands.ab3"
0003B9A8 <internal_commands.ab3@446> INCLUDE "internal_commands.ab3"
0003B9AC <internal_commands.ab3@447> INCLUDE "internal_commands.ab3"
0003B9AE <internal_commands.ab3@448> INCLUDE "internal_commands.ab3"
0003B9B2 <internal_commands.ab3@452> INCLUDE "internal_commands.ab3"
0003B9B4 <internal_commands.ab3@453> INCLUDE "internal_commands.ab3"
0003B9B8 <internal_commands.ab3@454> INCLUDE "internal_commands.ab3"
0003B9B9 <internal_commands.ab3@455> INCLUDE "internal_commands.ab3"
0003B9BA <internal_commands.ab3@456> INCLUDE "internal_commands.ab3"
0003B9BC <internal_commands.ab3@458> INCLUDE "internal_commands.ab3"
0003B9C0 <internal_commands.ab3@459> INCLUDE "internal_commands.ab3"
0003B9C2 <internal_commands.ab3@460> INCLUDE "internal_commands.ab3"
0003B9C4 <internal_commands.ab3@461> INCLUDE "internal_commands.ab3"
0003B9C8 <internal_commands.ab3@462> INCLUDE "internal_commands.ab3"
0003B9CA <internal_commands.ab3@463> INCLUDE "internal_commands.ab3"
0003B9CE <internal_commands.ab3@467> INCLUDE "internal_commands.ab3"
0003B9D0 <internal_commands.ab3@468> INCLUDE "internal_commands.ab3"
0003B9D5 <internal_commands.ab3@469> INCLUDE "internal_commands.ab3"
0003B9D6 <internal_commands.ab3@470> INCLUDE "internal_commands.ab3"
0003B9D8 <internal_commands.ab3@473> INCLUDE "internal_commands.ab3"
0003B9DC <internal_commands.ab3@474> INCLUDE "internal_commands.ab3"
0003B9DE <internal_commands.ab3@475> INCLUDE "internal_commands.ab3"
0003B9E0 <internal_commands.ab3@476> INCLUDE "internal_commands.ab3"
0003B9E4 <internal_commands.ab3@477> INCLUDE "internal_commands.ab3"
0003B9E6 <internal_commands.ab3@478> INCLUDE "internal_commands.ab3"
0003B9EA <internal_commands.ab3@482> INCLUDE "internal_commands.ab3"
0003B9EC <internal_commands.ab3@483> INCLUDE "internal_commands.ab3"
0003B9F1 <internal_commands.ab3@484> INCLUDE "internal_commands.ab3"
0003B9F2 <internal_commands.ab3@485> INCLUDE "internal_commands.ab3"
0003B9F4 <internal_commands.ab3@488> INCLUDE "internal_commands.ab3"
0003B9F8 <internal_commands.ab3@489> INCLUDE "internal_commands.ab3"
0003B9FA <internal_commands.ab3@490> INCLUDE "internal_commands.ab3"
0003B9FC <internal_commands.ab3@491> INCLUDE "internal_commands.ab3"
0003BA00 <internal_commands.ab3@492> INCLUDE "internal_commands.ab3"
0003BA02 <internal_commands.ab3@493> INCLUDE "internal_commands.ab3"
0003BA06 <internal_commands.ab3@497> INCLUDE "internal_commands.ab3"
0003BA08 <internal_commands.ab3@498> INCLUDE "internal_commands.ab3"
0003BA0D <internal_commands.ab3@499> INCLUDE "internal_commands.ab3"
0003BA0E <internal_commands.ab3@500> INCLUDE "internal_commands.ab3"
0003BA10 <internal_commands.ab3@503> INCLUDE "internal_commands.ab3"
0003BA14 <internal_commands.ab3@504> INCLUDE "internal_commands.ab3"
0003BA16 <internal_commands.ab3@505> INCLUDE "internal_commands.ab3"
0003BA18 <internal_commands.ab3@506> INCLUDE "internal_commands.ab3"
0003BA1C <internal_commands.ab3@507> INCLUDE "internal_commands.ab3"
0003BA1E <internal_commands.ab3@508> INCLUDE "internal_commands.ab3"
0003BA22 <internal_commands.ab3@512> INCLUDE "internal_commands.ab3"
0003BA24 <internal_commands.ab3@513> INCLUDE "internal_commands.ab3"
0003BA29 <internal_commands.ab3@514> INCLUDE "internal_commands.ab3"
0003BA2A <internal_commands.ab3@515> INCLUDE "internal_commands.ab3"
0003BA2C <internal_commands.ab3@518> INCLUDE "internal_commands.ab3"
0003BA30 <internal_commands.ab3@519> INCLUDE "internal_commands.ab3"
0003BA32 <internal_commands.ab3@520> INCLUDE "internal_commands.ab3"
0003BA34 <internal_commands.ab3@521> INCLUDE "internal_commands.ab3"
0003BA38 <internal_commands.ab3@522> INCLUDE "internal_commands.ab3"
0003BA3A <internal_commands.ab3@523> INCLUDE "internal_commands.ab3"
0003BA3E <internal_commands.ab3@527> INCLUDE "internal_commands.ab3"
0003BA40 <internal_commands.ab3@528> INCLUDE "internal_commands.ab3"
0003BA44 <internal_commands.ab3@529> INCLUDE "internal_commands.ab3"
0003BA45 <internal_commands.ab3@530> INCLUDE "internal_commands.ab3"
0003BA46 <internal_commands.ab3@531> INCLUDE "internal_commands.ab3"
0003BA48 <internal_commands.ab3@533> INCLUDE "internal_commands.ab3"
0003BA4C <internal_commands.ab3@534> INCLUDE "internal_commands.ab3"
0003BA4E <internal_commands.ab3@535> INCLUDE "internal_commands.ab3"
0003BA50 <internal_commands.ab3@536> INCLUDE "internal_commands.ab3"
0003BA54 <internal_commands.ab3@537> INCLUDE "internal_commands.ab3"
0003BA56 <internal_commands.ab3@538> INCLUDE "internal_commands.ab3"
0003BA5A <internal_commands.ab3@542> INCLUDE "internal_commands.ab3"
0003BA5C <internal_commands.ab3@543> INCLUDE "internal_commands.ab3"
0003BA61 <internal_commands.ab3@544> INCLUDE "internal_commands.ab3"
0003BA62 <internal_commands.ab3@545> INCLUDE "internal_commands.ab3"
0003BA64 <internal_commands.ab3@548> INCLUDE "internal_commands.ab3"
0003BA68 <internal_commands.ab3@549> INCLUDE "internal_commands.ab3"
0003BA6A <internal_commands.ab3@550> INCLUDE "internal_commands.ab3"
0003BA6C <internal_commands.ab3@551> INCLUDE "internal_commands.ab3"
0003BA70 <internal_commands.ab3@552> INCLUDE "internal_commands.ab3"
0003BA72 <internal_commands.ab3@553> INCLUDE "internal_commands.ab3"
0003BA76 <internal_commands.ab3@557> INCLUDE "internal_commands.ab3"
0003BA78 <internal_commands.ab3@558> INCLUDE "internal_commands.ab3"
0003BA7C <internal_commands.ab3@559> INCLUDE "internal_commands.ab3"
0003BA7D <internal_commands.ab3@560> INCLUDE "internal_commands.ab3"
0003BA7E <internal_commands.ab3@561> INCLUDE "internal_commands.ab3"
0003BA80 <internal_commands.ab3@563> INCLUDE "internal_commands.ab3"
0003BA84 <internal_commands.ab3@564> INCLUDE "internal_commands.ab3"
0003BA86 <internal_commands.ab3@565> INCLUDE "internal_commands.ab3"
0003BA88 <internal_commands.ab3@566> INCLUDE "internal_commands.ab3"
0003BA8C <internal_commands.ab3@567> INCLUDE "internal_commands.ab3"
0003BA8E <internal_commands.ab3@568> INCLUDE "internal_commands.ab3"
0003BA92 <internal_commands.ab3@572> INCLUDE "internal_commands.ab3"
0003BA94 <internal_commands.ab3@573> INCLUDE "internal_commands.ab3"
0003BA98 <internal_commands.ab3@574> INCLUDE "internal_commands.ab3"
0003BA99 <internal_commands.ab3@575> INCLUDE "internal_commands.ab3"
0003BA9A <internal_commands.ab3@576> INCLUDE "internal_commands.ab3"
0003BA9C <internal_commands.ab3@578> INCLUDE "internal_commands.ab3"
0003BAA0 <internal_commands.ab3@579> INCLUDE "internal_commands.ab3"
0003BAA2 <internal_commands.ab3@580> INCLUDE "internal_commands.ab3"
0003BAA4 <internal_commands.ab3@581> INCLUDE "internal_commands.ab3"
0003BAA8 <internal_commands.ab3@582> INCLUDE "internal_commands.ab3"
0003BAAA <internal_commands.ab3@583> INCLUDE "internal_commands.ab3"
0003BAAE <internal_commands.ab3@587> INCLUDE "internal_commands.ab3"
0003BAB0 <internal_commands.ab3@588> INCLUDE "internal_commands.ab3"
0003BAB4 <internal_commands.ab3@589> INCLUDE "internal_commands.ab3"
0003BAB5 <internal_commands.ab3@590> INCLUDE "internal_commands.ab3"
0003BAB6 <internal_commands.ab3@591> INCLUDE "internal_commands.ab3"
0003BAB8 <internal_commands.ab3@593> INCLUDE "internal_commands.ab3"
0003BABC <internal_commands.ab3@594> INCLUDE "internal_commands.ab3"
0003BABE <internal_commands.ab3@595> INCLUDE "internal_commands.ab3"
0003BAC0 <internal_commands.ab3@596> INCLUDE "internal_commands.ab3"
0003BAC4 <internal_commands.ab3@597> INCLUDE "internal_commands.ab3"
0003BAC6 <internal_commands.ab3@598> INCLUDE "internal_commands.ab3"
0003BACA <internal_commands.ab3@602> INCLUDE "internal_commands.ab3"
0003BACC <internal_commands.ab3@603> INCLUDE "internal_commands.ab3"
0003BAD0 <internal_commands.ab3@604> INCLUDE "internal_commands.ab3"
0003BAD1 <internal_commands.ab3@605> INCLUDE "internal_commands.ab3"
0003BAD2 <internal_commands.ab3@606> INCLUDE "internal_commands.ab3"
0003BAD4 <internal_commands.ab3@608> INCLUDE "internal_commands.ab3"
0003BAD8 <internal_commands.ab3@609> INCLUDE "internal_commands.ab3"
0003BADA <internal_commands.ab3@610> INCLUDE "internal_commands.ab3"
0003BADC <internal_commands.ab3@611> INCLUDE "internal_commands.ab3"
0003BAE0 <internal_commands.ab3@612> INCLUDE "internal_commands.ab3"
0003BAE2 <internal_commands.ab3@613> INCLUDE "internal_commands.ab3"
0003BAE6 <internal_commands.ab3@617> INCLUDE "internal_commands.ab3"
0003BAE8 <internal_commands.ab3@618> INCLUDE "internal_commands.ab3"
0003BAEC <internal_commands.ab3@619> INCLUDE "internal_commands.ab3"
0003BAED <internal_commands.ab3@620> INCLUDE "internal_commands.ab3"
0003BAEE <internal_commands.ab3@621> INCLUDE "internal_commands.ab3"
0003BAF0 <internal_commands.ab3@623> INCLUDE "internal_commands.ab3"
0003BAF4 <internal_commands.ab3@624> INCLUDE "internal_commands.ab3"
0003BAF6 <internal_commands.ab3@625> INCLUDE "internal_commands.ab3"
0003BAF8 <internal_commands.ab3@626> INCLUDE "internal_commands.ab3"
0003BAFC <internal_commands.ab3@627> INCLUDE "internal_commands.ab3"
0003BAFE <internal_commands.ab3@628> INCLUDE "internal_commands.ab3"
0003BB02 <internal_commands.ab3@632> INCLUDE "internal_commands.ab3"
0003BB04 <internal_commands.ab3@633> INCLUDE "internal_commands.ab3"
0003BB08 <internal_commands.ab3@634> INCLUDE "internal_commands.ab3"
0003BB09 <internal_commands.ab3@635> INCLUDE "internal_commands.ab3"
0003BB0A <internal_commands.ab3@636> INCLUDE "internal_commands.ab3"
0003BB0C <internal_commands.ab3@638> INCLUDE "internal_commands.ab3"
0003BB10 <internal_commands.ab3@639> INCLUDE "internal_commands.ab3"
0003BB12 <internal_commands.ab3@640> INCLUDE "internal_commands.ab3"
0003BB14 <internal_commands.ab3@641> INCLUDE "internal_commands.ab3"
0003BB18 <internal_commands.ab3@642> INCLUDE "internal_commands.ab3"
0003BB1A <internal_commands.ab3@643> INCLUDE "internal_commands.ab3"
0003BB1E <internal_commands.ab3@647> INCLUDE "internal_commands.ab3"
0003BB20 <internal_commands.ab3@648> INCLUDE "internal_commands.ab3"
0003BB24 <internal_commands.ab3@649> INCLUDE "internal_commands.ab3"
0003BB25 <internal_commands.ab3@650> INCLUDE "internal_commands.ab3"
0003BB26 <internal_commands.ab3@651> INCLUDE "internal_commands.ab3"
0003BB28 <internal_commands.ab3@653> INCLUDE "internal_commands.ab3"
0003BB2C <internal_commands.ab3@654> INCLUDE "internal_commands.ab3"
0003BB2E <internal_commands.ab3@655> INCLUDE "internal_commands.ab3"
0003BB30 <internal_commands.ab3@656> INCLUDE "internal_commands.ab3"
0003BB34 <internal_commands.ab3@657> INCLUDE "internal_commands.ab3"
0003BB36 <internal_commands.ab3@658> INCLUDE "internal_commands.ab3"
0003BB3A <internal_commands.ab3@662> INCLUDE "internal_commands.ab3"
0003BB3C <internal_commands.ab3@663> INCLUDE "internal_commands.ab3"
0003BB40 <internal_commands.ab3@664> INCLUDE "internal_commands.ab3"
0003BB41 <internal_commands.ab3@665> INCLUDE "internal_commands.ab3"
0003BB42 <internal_commands.ab3@666> INCLUDE "internal_commands.ab3"
0003BB44 <internal_commands.ab3@668> INCLUDE "internal_commands.ab3"
0003BB48 <internal_commands.ab3@669> INCLUDE "internal_commands.ab3"
0003BB4A <internal_commands.ab3@670> INCLUDE "internal_commands.ab3"
0003BB4C <internal_commands.ab3@671> INCLUDE "internal_commands.ab3"
0003BB50 <internal_commands.ab3@672> INCLUDE "internal_commands.ab3"
0003BB52 <internal_commands.ab3@673> INCLUDE "internal_commands.ab3"
0003BB56 <internal_commands.ab3@677> INCLUDE "internal_commands.ab3"
0003BB58 <internal_commands.ab3@678> INCLUDE "internal_commands.ab3"
0003BB5C <internal_commands.ab3@679> INCLUDE "internal_commands.ab3"
0003BB5D <internal_commands.ab3@680> INCLUDE "internal_commands.ab3"
0003BB5E <internal_commands.ab3@681> INCLUDE "internal_commands.ab3"
0003BB60 <internal_commands.ab3@683> INCLUDE "internal_commands.ab3"
0003BB64 <internal_commands.ab3@684> INCLUDE "internal_commands.ab3"
0003BB66 <internal_commands.ab3@685> INCLUDE "internal_commands.ab3"
0003BB68 <internal_commands.ab3@686> INCLUDE "internal_commands.ab3"
0003BB6C <internal_commands.ab3@687> INCLUDE "internal_commands.ab3"
0003BB6E <internal_commands.ab3@688> INCLUDE "internal_commands.ab3"
0003BB72 <internal_commands.ab3@692> INCLUDE "internal_commands.ab3"
0003BB74 <internal_commands.ab3@693> INCLUDE "internal_commands.ab3"
0003BB78 <internal_commands.ab3@694> INCLUDE "internal_commands.ab3"
0003BB79 <internal_commands.ab3@695> INCLUDE "internal_commands.ab3"
0003BB7A <internal_commands.ab3@696> INCLUDE "internal_commands.ab3"
0003BB7C <internal_commands.ab3@698> INCLUDE "internal_commands.ab3"
0003BB80 <internal_commands.ab3@699> INCLUDE "internal_commands.ab3"
0003BB82 <internal_commands.ab3@700> INCLUDE "internal_commands.ab3"
0003BB84 <internal_commands.ab3@701> INCLUDE "internal_commands.ab3"
0003BB88 <internal_commands.ab3@702> INCLUDE "internal_commands.ab3"
0003BB8A <internal_commands.ab3@703> INCLUDE "internal_commands.ab3"
0003BB8E <internal_commands.ab3@707> INCLUDE "internal_commands.ab3"
0003BB90 <internal_commands.ab3@708> INCLUDE "internal_commands.ab3"
0003BB94 <internal_commands.ab3@709> INCLUDE "internal_commands.ab3"
0003BB95 <internal_commands.ab3@710> INCLUDE "internal_commands.ab3"
0003BB96 <internal_commands.ab3@711> INCLUDE "internal_commands.ab3"
0003BB98 <internal_commands.ab3@713> INCLUDE "internal_commands.ab3"
0003BB9C <internal_commands.ab3@714> INCLUDE "internal_commands.ab3"
0003BB9E <internal_commands.ab3@715> INCLUDE "internal_commands.ab3"
0003BBA0 <internal_commands.ab3@716> INCLUDE "internal_commands.ab3"
0003BBA4 <internal_commands.ab3@717> INCLUDE "internal_commands.ab3"
0003BBA6 <internal_commands.ab3@718> INCLUDE "internal_commands.ab3"
0003BBAA <internal_commands.ab3@722> INCLUDE "internal_commands.ab3"
0003BBAC <internal_commands.ab3@723> INCLUDE "internal_commands.ab3"
0003BBB0 <internal_commands.ab3@724> INCLUDE "internal_commands.ab3"
0003BBB1 <internal_commands.ab3@725> INCLUDE "internal_commands.ab3"
0003BBB2 <internal_commands.ab3@726> INCLUDE "internal_commands.ab3"
0003BBB4 <internal_commands.ab3@728> INCLUDE "internal_commands.ab3"
0003BBB8 <internal_commands.ab3@729> INCLUDE "internal_commands.ab3"
0003BBBA <internal_commands.ab3@730> INCLUDE "internal_commands.ab3"
0003BBBC <internal_commands.ab3@731> INCLUDE "internal_commands.ab3"
0003BBC0 <internal_commands.ab3@732> INCLUDE "internal_commands.ab3"
0003BBC2 <internal_commands.ab3@733> INCLUDE "internal_commands.ab3"
0003BBC6 <internal_commands.ab3@737> INCLUDE "internal_commands.ab3"
0003BBC8 <internal_commands.ab3@738> INCLUDE "internal_commands.ab3"
0003BBCC <internal_commands.ab3@739> INCLUDE "internal_commands.ab3"
0003BBCD <internal_commands.ab3@740> INCLUDE "internal_commands.ab3"
0003BBCE <internal_commands.ab3@741> INCLUDE "internal_commands.ab3"
0003BBD0 <internal_commands.ab3@743> INCLUDE "internal_commands.ab3"
0003BBD4 <internal_commands.ab3@744> INCLUDE "internal_commands.ab3"
0003BBD6 <internal_commands.ab3@745> INCLUDE "internal_commands.ab3"
0003BBD8 <internal_commands.ab3@746> INCLUDE "internal_commands.ab3"
0003BBDC <internal_commands.ab3@747> INCLUDE "internal_commands.ab3"
0003BBDE <internal_commands.ab3@748> INCLUDE "internal_commands.ab3"
0003BBE2 <internal_commands.ab3@752> INCLUDE "internal_commands.ab3"
0003BBE4 <internal_commands.ab3@753> INCLUDE "internal_commands.ab3"
0003BBE8 <internal_commands.ab3@754> INCLUDE "internal_commands.ab3"
0003BBE9 <internal_commands.ab3@755> INCLUDE "internal_commands.ab3"
0003BBEA <internal_commands.ab3@756> INCLUDE "internal_commands.ab3"
0003BBEC <internal_commands.ab3@758> INCLUDE "internal_commands.ab3"
0003BBF0 <internal_commands.ab3@759> INCLUDE "internal_commands.ab3"
0003BBF2 <internal_commands.ab3@760> INCLUDE "internal_commands.ab3"
0003BBF4 <internal_commands.ab3@761> INCLUDE "internal_commands.ab3"
0003BBF8 <internal_commands.ab3@762> INCLUDE "internal_commands.ab3"
0003BBFA <internal_commands.ab3@763> INCLUDE "internal_commands.ab3"
0003BBFE <internal_commands.ab3@767> INCLUDE "internal_commands.ab3"
0003BC00 <internal_commands.ab3@768> INCLUDE "internal_commands.ab3"
0003BC04 <internal_commands.ab3@769> INCLUDE "internal_commands.ab3"
0003BC05 <internal_commands.ab3@770> INCLUDE "internal_commands.ab3"
0003BC06 <internal_commands.ab3@771> INCLUDE "internal_commands.ab3"
0003BC08 <internal_commands.ab3@773> INCLUDE "internal_commands.ab3"
0003BC0C <internal_commands.ab3@774> INCLUDE "internal_commands.ab3"
0003BC0E <internal_commands.ab3@775> INCLUDE "internal_commands.ab3"
0003BC10 <internal_commands.ab3@776> INCLUDE "internal_commands.ab3"
0003BC14 <internal_commands.ab3@777> INCLUDE "internal_commands.ab3"
0003BC16 <internal_commands.ab3@778> INCLUDE "internal_commands.ab3"
0003BC1A <internal_commands.ab3@782> INCLUDE "internal_commands.ab3"
0003BC1C <internal_commands.ab3@783> INCLUDE "internal_commands.ab3"
0003BC20 <internal_commands.ab3@784> INCLUDE "internal_commands.ab3"
0003BC21 <internal_commands.ab3@785> INCLUDE "internal_commands.ab3"
0003BC22 <internal_commands.ab3@786> INCLUDE "internal_commands.ab3"
0003BC24 <internal_commands.ab3@788> INCLUDE "internal_commands.ab3"
0003BC28 <internal_commands.ab3@789> INCLUDE "internal_commands.ab3"
0003BC2A <internal_commands.ab3@790> INCLUDE "internal_commands.ab3"
0003BC2C <internal_commands.ab3@791> INCLUDE "internal_commands.ab3"
0003BC30 <internal_commands.ab3@792> INCLUDE "internal_commands.ab3"
0003BC32 <internal_commands.ab3@793> INCLUDE "internal_commands.ab3"
0003BC36 <internal_commands.ab3@797> INCLUDE "internal_commands.ab3"
0003BC38 <internal_commands.ab3@798> INCLUDE "internal_commands.ab3"
0003BC3D <internal_commands.ab3@799> INCLUDE "internal_commands.ab3"
0003BC3E <internal_commands.ab3@800> INCLUDE "internal_commands.ab3"
0003BC40 <internal_commands.ab3@803> INCLUDE "internal_commands.ab3"
0003BC44 <internal_commands.ab3@804> INCLUDE "internal_commands.ab3"
0003BC46 <internal_commands.ab3@805> INCLUDE "internal_commands.ab3"
0003BC48 <internal_commands.ab3@806> INCLUDE "internal_commands.ab3"
0003BC4C <internal_commands.ab3@807> INCLUDE "internal_commands.ab3"
0003BC4E <internal_commands.ab3@808> INCLUDE "internal_commands.ab3"
0003BC52 <internal_commands.ab3@812> INCLUDE "internal_commands.ab3"
0003BC54 <internal_commands.ab3@813> INCLUDE "internal_commands.ab3"
0003BC59 <internal_commands.ab3@814> INCLUDE "internal_commands.ab3"
0003BC5A <internal_commands.ab3@815> INCLUDE "internal_commands.ab3"
0003BC5C <internal_commands.ab3@818> INCLUDE "internal_commands.ab3"
0003BC60 <internal_commands.ab3@819> INCLUDE "internal_commands.ab3"
0003BC62 <internal_commands.ab3@820> INCLUDE "internal_commands.ab3"
0003BC64 <internal_commands.ab3@821> INCLUDE "internal_commands.ab3"
0003BC68 <internal_commands.ab3@822> INCLUDE "internal_commands.ab3"
0003BC6A <internal_commands.ab3@823> INCLUDE "internal_commands.ab3"
0003BC6E <internal_commands.ab3@827> INCLUDE "internal_commands.ab3"
0003BC70 <internal_commands.ab3@828> INCLUDE "internal_commands.ab3"
0003BC75 <internal_commands.ab3@829> INCLUDE "internal_commands.ab3"
0003BC76 <internal_commands.ab3@830> INCLUDE "internal_commands.ab3"
0003BC78 <internal_commands.ab3@833> INCLUDE "internal_commands.ab3"
0003BC7C <internal_commands.ab3@834> INCLUDE "internal_commands.ab3"
0003BC7E <internal_commands.ab3@835> INCLUDE "internal_commands.ab3"
0003BC80 <internal_commands.ab3@836> INCLUDE "internal_commands.ab3"
0003BC84 <internal_commands.ab3@837> INCLUDE "internal_commands.ab3"
0003BC86 <internal_commands.ab3@838> INCLUDE "internal_commands.ab3"
0003BC8A <internal_commands.ab3@842> INCLUDE "internal_commands.ab3"
0003BC8C <internal_commands.ab3@843> INCLUDE "internal_commands.ab3"
0003BC91 <internal_commands.ab3@844> INCLUDE "internal_commands.ab3"
0003BC92 <internal_commands.ab3@845> INCLUDE "internal_commands.ab3"
0003BC94 <internal_commands.ab3@848> INCLUDE "internal_commands.ab3"
0003BC98 <internal_commands.ab3@849> INCLUDE "internal_commands.ab3"
0003BC9A <internal_commands.ab3@850> INCLUDE "internal_commands.ab3"
0003BC9C <internal_commands.ab3@851> INCLUDE "internal_commands.ab3"
0003BCA0 <internal_commands.ab3@852> INCLUDE "internal_commands.ab3"
0003BCA2 <internal_commands.ab3@853> INCLUDE "internal_commands.ab3"
0003BCA6 <internal_commands.ab3@857> INCLUDE "internal_commands.ab3"
0003BCA8 <internal_commands.ab3@858> INCLUDE "internal_commands.ab3"
0003BCAC <internal_commands.ab3@859> INCLUDE "internal_commands.ab3"
0003BCAD <internal_commands.ab3@860> INCLUDE "internal_commands.ab3"
0003BCAE <internal_commands.ab3@861> INCLUDE "internal_commands.ab3"
0003BCB0 <internal_commands.ab3@863> INCLUDE "internal_commands.ab3"
0003BCB4 <internal_commands.ab3@864> INCLUDE "internal_commands.ab3"
0003BCB6 <internal_commands.ab3@865> INCLUDE "internal_commands.ab3"
0003BCB8 <internal_commands.ab3@866> INCLUDE "internal_commands.ab3"
0003BCBC <internal_commands.ab3@867> INCLUDE "internal_commands.ab3"
0003BCBE <internal_commands.ab3@868> INCLUDE "internal_commands.ab3"
0003BCC2 <internal_commands.ab3@872> INCLUDE "internal_commands.ab3"
0003BCC4 <internal_commands.ab3@873> INCLUDE "internal_commands.ab3"
0003BCC8 <internal_commands.ab3@874> INCLUDE "internal_commands.ab3"
0003BCC9 <internal_commands.ab3@875> INCLUDE "internal_commands.ab3"
0003BCCA <internal_commands.ab3@876> INCLUDE "internal_commands.ab3"
0003BCCC <internal_commands.ab3@878> INCLUDE "internal_commands.ab3"
0003BCD0 <internal_commands.ab3@879> INCLUDE "internal_commands.ab3"
0003BCD2 <internal_commands.ab3@880> INCLUDE "internal_commands.ab3"
0003BCD4 <internal_commands.ab3@881> INCLUDE "internal_commands.ab3"
0003BCD8 <internal_commands.ab3@882> INCLUDE "internal_commands.ab3"
0003BCDA <internal_commands.ab3@883> INCLUDE "internal_commands.ab3"
0003BCDE <internal_commands.ab3@887> INCLUDE "internal_commands.ab3"
0003BCE0 <internal_commands.ab3@888> INCLUDE "internal_commands.ab3"
0003BCE4 <internal_commands.ab3@889> INCLUDE "internal_commands.ab3"
0003BCE5 <internal_commands.ab3@890> INCLUDE "internal_commands.ab3"
0003BCE6 <internal_commands.ab3@891> INCLUDE "internal_commands.ab3"
0003BCE8 <internal_commands.ab3@893> INCLUDE "internal_commands.ab3"
0003BCEC <internal_commands.ab3@894> INCLUDE "internal_commands.ab3"
0003BCEE <internal_commands.ab3@895> INCLUDE "internal_commands.ab3"
0003BCF0 <internal_commands.ab3@896> INCLUDE "internal_commands.ab3"
0003BCF4 <internal_commands.ab3@897> INCLUDE "internal_commands.ab3"
0003BCF6 <internal_commands.ab3@898> INCLUDE "internal_commands.ab3"
0003BCFA <internal_commands.ab3@902> INCLUDE "internal_commands.ab3"
0003BCFC <internal_commands.ab3@903> INCLUDE "internal_commands.ab3"
0003BD00 <internal_commands.ab3@904> INCLUDE "internal_commands.ab3"
0003BD01 <internal_commands.ab3@905> INCLUDE "internal_commands.ab3"
0003BD02 <internal_commands.ab3@906> INCLUDE "internal_commands.ab3"
0003BD04 <internal_commands.ab3@908> INCLUDE "internal_commands.ab3"
0003BD08 <internal_commands.ab3@909> INCLUDE "internal_commands.ab3"
0003BD0A <internal_commands.ab3@910> INCLUDE "internal_commands.ab3"
0003BD0C <internal_commands.ab3@911> INCLUDE "internal_commands.ab3"
0003BD10 <internal_commands.ab3@912> INCLUDE "internal_commands.ab3"
0003BD12 <internal_commands.ab3@913> INCLUDE "internal_commands.ab3"
0003BD16 <internal_commands.ab3@917> INCLUDE "internal_commands.ab3"
0003BD18 <internal_commands.ab3@918> INCLUDE "internal_commands.ab3"
0003BD1C <internal_commands.ab3@919> INCLUDE "internal_commands.ab3"
0003BD1D <internal_commands.ab3@920> INCLUDE "internal_commands.ab3"
0003BD1E <internal_commands.ab3@921> INCLUDE "internal_commands.ab3"
0003BD20 <internal_commands.ab3@923> INCLUDE "internal_commands.ab3"
0003BD24 <internal_commands.ab3@924> INCLUDE "internal_commands.ab3"
0003BD26 <internal_commands.ab3@925> INCLUDE "internal_commands.ab3"
0003BD28 <internal_commands.ab3@926> INCLUDE "internal_commands.ab3"
0003BD2C <internal_commands.ab3@927> INCLUDE "internal_commands.ab3"
0003BD2E <internal_commands.ab3@928> INCLUDE "internal_commands.ab3"
0003BD32 <internal_commands.ab3@932> INCLUDE "internal_commands.ab3"
0003BD34 <internal_commands.ab3@933> INCLUDE "internal_commands.ab3"
0003BD39 <internal_commands.ab3@934> INCLUDE "internal_commands.ab3"
0003BD3A <internal_commands.ab3@935> INCLUDE "internal_commands.ab3"
0003BD3C <internal_commands.ab3@938> INCLUDE "internal_commands.ab3"
0003BD40 <internal_commands.ab3@939> INCLUDE "internal_commands.ab3"
0003BD42 <internal_commands.ab3@940> INCLUDE "internal_commands.ab3"
0003BD44 <internal_commands.ab3@941> INCLUDE "internal_commands.ab3"
0003BD48 <internal_commands.ab3@942> INCLUDE "internal_commands.ab3"
0003BD4A <internal_commands.ab3@943> INCLUDE "internal_commands.ab3"
0003BD4E <internal_commands.ab3@947> INCLUDE "internal_commands.ab3"
0003BD50 <internal_commands.ab3@948> INCLUDE "internal_commands.ab3"
0003BD55 <internal_commands.ab3@949> INCLUDE "internal_commands.ab3"
0003BD56 <internal_commands.ab3@950> INCLUDE "internal_commands.ab3"
0003BD58 <internal_commands.ab3@953> INCLUDE "internal_commands.ab3"
0003BD5C <internal_commands.ab3@954> INCLUDE "internal_commands.ab3"
0003BD5E <internal_commands.ab3@955> INCLUDE "internal_commands.ab3"
0003BD60 <internal_commands.ab3@956> INCLUDE "internal_commands.ab3"
0003BD64 <internal_commands.ab3@957> INCLUDE "internal_commands.ab3"
0003BD66 <internal_commands.ab3@958> INCLUDE "internal_commands.ab3"
0003BD6A <internal_commands.ab3@962> INCLUDE "internal_commands.ab3"
0003BD6C <internal_commands.ab3@963> INCLUDE "internal_commands.ab3"
0003BD71 <internal_commands.ab3@964> INCLUDE "internal_commands.ab3"
0003BD72 <internal_commands.ab3@965> INCLUDE "internal_commands.ab3"
0003BD74 <internal_commands.ab3@968> INCLUDE "internal_commands.ab3"
0003BD78 <internal_commands.ab3@969> INCLUDE "internal_commands.ab3"
0003BD7A <internal_commands.ab3@970> INCLUDE "internal_commands.ab3"
0003BD7C <internal_commands.ab3@971> INCLUDE "internal_commands.ab3"
0003BD80 <internal_commands.ab3@972> INCLUDE "internal_commands.ab3"
0003BD82 <internal_commands.ab3@973> INCLUDE "internal_commands.ab3"
0003BD86 <internal_commands.ab3@977> INCLUDE "internal_commands.ab3"
0003BD88 <internal_commands.ab3@978> INCLUDE "internal_commands.ab3"
0003BD8D <internal_commands.ab3@979> INCLUDE "internal_commands.ab3"
0003BD8E <internal_commands.ab3@980> INCLUDE "internal_commands.ab3"
0003BD90 <internal_commands.ab3@983> INCLUDE "internal_commands.ab3"
0003BD94 <internal_commands.ab3@984> INCLUDE "internal_commands.ab3"
0003BD96 <internal_commands.ab3@985> INCLUDE "internal_commands.ab3"
0003BD98 <internal_commands.ab3@986> INCLUDE "internal_commands.ab3"
0003BD9C <internal_commands.ab3@987> INCLUDE "internal_commands.ab3"
0003BD9E <internal_commands.ab3@988> INCLUDE "internal_commands.ab3"
0003BDA2 <internal_commands.ab3@992> INCLUDE "internal_commands.ab3"
0003BDA4 <internal_commands.ab3@993> INCLUDE "internal_commands.ab3"
0003BDA9 <internal_commands.ab3@994> INCLUDE "internal_commands.ab3"
0003BDAA <internal_commands.ab3@995> INCLUDE "internal_commands.ab3"
0003BDAC <internal_commands.ab3@998> INCLUDE "internal_commands.ab3"
0003BDB0 <internal_commands.ab3@999> INCLUDE "internal_commands.ab3"
0003BDB2 <internal_commands.ab3@1000> INCLUDE "internal_commands.ab3"
0003BDB4 <internal_commands.ab3@1001> INCLUDE "internal_commands.ab3"
0003BDB8 <internal_commands.ab3@1002> INCLUDE "internal_commands.ab3"
0003BDBA <internal_commands.ab3@1003> INCLUDE "internal_commands.ab3"
0003BDBE <internal_commands.ab3@1007> INCLUDE "internal_commands.ab3"
0003BDC0 <internal_commands.ab3@1008> INCLUDE "internal_commands.ab3"
0003BDC5 <internal_commands.ab3@1009> INCLUDE "internal_commands.ab3"
0003BDC6 <internal_commands.ab3@1010> INCLUDE "internal_commands.ab3"
0003BDC8 <internal_commands.ab3@1013> INCLUDE "internal_commands.ab3"
0003BDCC <internal_commands.ab3@1014> INCLUDE "internal_commands.ab3"
0003BDCE <internal_commands.ab3@1015> INCLUDE "internal_commands.ab3"
0003BDD0 <internal_commands.ab3@1016> INCLUDE "internal_commands.ab3"
0003BDD4 <internal_commands.ab3@1017> INCLUDE "internal_commands.ab3"
0003BDD6 <internal_commands.ab3@1018> INCLUDE "internal_commands.ab3"
0003BDDA <internal_commands.ab3@1022> INCLUDE "internal_commands.ab3"
0003BDDC <internal_commands.ab3@1023> INCLUDE "internal_commands.ab3"
0003BDE1 <internal_commands.ab3@1024> INCLUDE "internal_commands.ab3"
0003BDE2 <internal_commands.ab3@1025> INCLUDE "internal_commands.ab3"
0003BDE4 <internal_commands.ab3@1028> INCLUDE "internal_commands.ab3"
0003BDE8 <internal_commands.ab3@1029> INCLUDE "internal_commands.ab3"
0003BDEA <internal_commands.ab3@1030> INCLUDE "internal_commands.ab3"
0003BDEC <internal_commands.ab3@1031> INCLUDE "internal_commands.ab3"
0003BDF0 <internal_commands.ab3@1032> INCLUDE "internal_commands.ab3"
0003BDF2 <internal_commands.ab3@1033> INCLUDE "internal_commands.ab3"
0003BDF6 <internal_commands.ab3@1037> INCLUDE "internal_commands.ab3"
0003BDF8 <internal_commands.ab3@1038> INCLUDE "internal_commands.ab3"
0003BDFD <internal_commands.ab3@1039> INCLUDE "internal_commands.ab3"
0003BDFE <internal_commands.ab3@1040> INCLUDE "internal_commands.ab3"
0003BE00 <internal_commands.ab3@1043> INCLUDE "internal_commands.ab3"
0003BE04 <internal_commands.ab3@1044> INCLUDE "internal_commands.ab3"
0003BE06 <internal_commands.ab3@1045> INCLUDE "internal_commands.ab3"
0003BE08 <internal_commands.ab3@1046> INCLUDE "internal_commands.ab3"
0003BE0C <internal_commands.ab3@1047> INCLUDE "internal_commands.ab3"
0003BE0E <internal_commands.ab3@1048> INCLUDE "internal_commands.ab3"
0003BE12 <internal_commands.ab3@1052> INCLUDE "internal_commands.ab3"
0003BE14 <internal_commands.ab3@1053> INCLUDE "internal_commands.ab3"
0003BE19 <internal_commands.ab3@1054> INCLUDE "internal_commands.ab3"
0003BE1A <internal_commands.ab3@1055> INCLUDE "internal_commands.ab3"
0003BE1C <internal_commands.ab3@1058> INCLUDE "internal_commands.ab3"
0003BE20 <internal_commands.ab3@1059> INCLUDE "internal_commands.ab3"
0003BE22 <internal_commands.ab3@1060> INCLUDE "internal_commands.ab3"
0003BE24 <internal_commands.ab3@1061> INCLUDE "internal_commands.ab3"
0003BE28 <internal_commands.ab3@1062> INCLUDE "internal_commands.ab3"
0003BE2A <internal_commands.ab3@1063> INCLUDE "internal_commands.ab3"
0003BE2E <internal_commands.ab3@1067> INCLUDE "internal_commands.ab3"
0003BE30 <internal_commands.ab3@1068> INCLUDE "internal_commands.ab3"
0003BE35 <internal_commands.ab3@1069> INCLUDE "internal_commands.ab3"
0003BE36 <internal_commands.ab3@1070> INCLUDE "internal_commands.ab3"
0003BE38 <internal_commands.ab3@1073> INCLUDE "internal_commands.ab3"
0003BE3C <internal_commands.ab3@1074> INCLUDE "internal_commands.ab3"
0003BE3E <internal_commands.ab3@1075> INCLUDE "internal_commands.ab3"
0003BE40 <internal_commands.ab3@1076> INCLUDE "internal_commands.ab3"
0003BE44 <internal_commands.ab3@1077> INCLUDE "internal_commands.ab3"
0003BE46 <internal_commands.ab3@1078> INCLUDE "internal_commands.ab3"
0003BE4A <internal_commands.ab3@1082> INCLUDE "internal_commands.ab3"
0003BE4C <internal_commands.ab3@1083> INCLUDE "internal_commands.ab3"
0003BE51 <internal_commands.ab3@1084> INCLUDE "internal_commands.ab3"
0003BE52 <internal_commands.ab3@1085> INCLUDE "internal_commands.ab3"
0003BE54 <internal_commands.ab3@1088> INCLUDE "internal_commands.ab3"
0003BE58 <internal_commands.ab3@1089> INCLUDE "internal_commands.ab3"
0003BE5A <internal_commands.ab3@1090> INCLUDE "internal_commands.ab3"
0003BE5C <internal_commands.ab3@1091> INCLUDE "internal_commands.ab3"
0003BE60 <internal_commands.ab3@1092> INCLUDE "internal_commands.ab3"
0003BE62 <internal_commands.ab3@1093> INCLUDE "internal_commands.ab3"
0003BE66 <internal_commands.ab3@1097> INCLUDE "internal_commands.ab3"
0003BE68 <internal_commands.ab3@1098> INCLUDE "internal_commands.ab3"
0003BE6D <internal_commands.ab3@1099> INCLUDE "internal_commands.ab3"
0003BE6E <internal_commands.ab3@1100> INCLUDE "internal_commands.ab3"
0003BE70 <internal_commands.ab3@1103> INCLUDE "internal_commands.ab3"
0003BE74 <internal_commands.ab3@1104> INCLUDE "internal_commands.ab3"
0003BE76 <internal_commands.ab3@1105> INCLUDE "internal_commands.ab3"
0003BE78 <internal_commands.ab3@1106> INCLUDE "internal_commands.ab3"
0003BE7C <internal_commands.ab3@1107> INCLUDE "internal_commands.ab3"
0003BE7E <internal_commands.ab3@1108> INCLUDE "internal_commands.ab3"
0003BE82 <internal_commands.ab3@1112> INCLUDE "internal_commands.ab3"
0003BE84 <internal_commands.ab3@1113> INCLUDE "internal_commands.ab3"
0003BE89 <internal_commands.ab3@1114> INCLUDE "internal_commands.ab3"
0003BE8A <internal_commands.ab3@1115> INCLUDE "internal_commands.ab3"
0003BE8C <internal_commands.ab3@1118> INCLUDE "internal_commands.ab3"
0003BE90 <internal_commands.ab3@1119> INCLUDE "internal_commands.ab3"
0003BE92 <internal_commands.ab3@1120> INCLUDE "internal_commands.ab3"
0003BE94 <internal_commands.ab3@1121> INCLUDE "internal_commands.ab3"
0003BE98 <internal_commands.ab3@1122> INCLUDE "internal_commands.ab3"
0003BE9A <internal_commands.ab3@1123> INCLUDE "internal_commands.ab3"
0003BE9E <internal_commands.ab3@1127> INCLUDE "internal_commands.ab3"
0003BEA0 <internal_commands.ab3@1128> INCLUDE "internal_commands.ab3"
0003BEA5 <internal_commands.ab3@1129> INCLUDE "internal_commands.ab3"
0003BEA6 <internal_commands.ab3@1130> INCLUDE "internal_commands.ab3"
0003BEA8 <internal_commands.ab3@1133> INCLUDE "internal_commands.ab3"
0003BEAC <internal_commands.ab3@1134> INCLUDE "internal_commands.ab3"
0003BEAE <internal_commands.ab3@1135> INCLUDE "internal_commands.ab3"
0003BEB0 <internal_commands.ab3@1136> INCLUDE "internal_commands.ab3"
0003BEB4 <internal_commands.ab3@1137> INCLUDE "internal_commands.ab3"
0003BEB6 <internal_commands.ab3@1138> INCLUDE "internal_commands.ab3"
0003BEBA <internal_commands.ab3@1142> INCLUDE "internal_commands.ab3"
0003BEBC <internal_commands.ab3@1143> INCLUDE "internal_commands.ab3"
0003BEC1 <internal_commands.ab3@1144> INCLUDE "internal_commands.ab3"
0003BEC2 <internal_commands.ab3@1145> INCLUDE "internal_commands.ab3"
0003BEC4 <internal_commands.ab3@1148> INCLUDE "internal_commands.ab3"
0003BEC8 <internal_commands.ab3@1149> INCLUDE "internal_commands.ab3"
0003BECA <internal_commands.ab3@1150> INCLUDE "internal_commands.ab3"
0003BECC <internal_commands.ab3@1151> INCLUDE "internal_commands.ab3"
0003BED0 <internal_commands.ab3@1152> INCLUDE "internal_commands.ab3"
0003BED2 <internal_commands.ab3@1153> INCLUDE "internal_commands.ab3"
0003BED6 <internal_commands.ab3@1157> INCLUDE "internal_commands.ab3"
0003BED8 <internal_commands.ab3@1158> INCLUDE "internal_commands.ab3"
0003BEDD <internal_commands.ab3@1159> INCLUDE "internal_commands.ab3"
0003BEDE <internal_commands.ab3@1160> INCLUDE "internal_commands.ab3"
0003BEE0 <internal_commands.ab3@1163> INCLUDE "internal_commands.ab3"
0003BEE4 <internal_commands.ab3@1164> INCLUDE "internal_commands.ab3"
0003BEE6 <internal_commands.ab3@1165> INCLUDE "internal_commands.ab3"
0003BEE8 <internal_commands.ab3@1166> INCLUDE "internal_commands.ab3"
0003BEEC <internal_commands.ab3@1167> INCLUDE "internal_commands.ab3"
0003BEEE <internal_commands.ab3@1168> INCLUDE "internal_commands.ab3"
0003BEF2 <internal_commands.ab3@1172> INCLUDE "internal_commands.ab3"
0003BEF4 <internal_commands.ab3@1173> INCLUDE "internal_commands.ab3"
0003BEF9 <internal_commands.ab3@1174> INCLUDE "internal_commands.ab3"
0003BEFA <internal_commands.ab3@1175> INCLUDE "internal_commands.ab3"
0003BEFC <internal_commands.ab3@1178> INCLUDE "internal_commands.ab3"
0003BF00 <internal_commands.ab3@1179> INCLUDE "internal_commands.ab3"
0003BF02 <internal_commands.ab3@1180> INCLUDE "internal_commands.ab3"
0003BF04 <internal_commands.ab3@1181> INCLUDE "internal_commands.ab3"
0003BF08 <internal_commands.ab3@1182> INCLUDE "internal_commands.ab3"
0003BF0A <internal_commands.ab3@1183> INCLUDE "internal_commands.ab3"
0003BF0E <internal_commands.ab3@1186> INCLUDE "internal_commands.ab3"
0003BF10 <internal_commands.ab3@1187> INCLUDE "internal_commands.ab3"
0003BF14 <internal_commands.ab3@1188> INCLUDE "internal_commands.ab3"
0003BF15 <internal_commands.ab3@1189> INCLUDE "internal_commands.ab3"
0003BF16 <internal_commands.ab3@1190> INCLUDE "internal_commands.ab3"
0003BF18 <internal_commands.ab3@1192> INCLUDE "internal_commands.ab3"
0003BF1C <internal_commands.ab3@1193> INCLUDE "internal_commands.ab3"
0003BF1E <internal_commands.ab3@1194> INCLUDE "internal_commands.ab3"
0003BF20 <internal_commands.ab3@1195> INCLUDE "internal_commands.ab3"
0003BF24 <internal_commands.ab3@1196> INCLUDE "internal_commands.ab3"
0003BF26 <internal_commands.ab3@1197> INCLUDE "internal_commands.ab3"
0003BF2A <internal_commands.ab3@1201> INCLUDE "internal_commands.ab3"
0003BF2C <internal_commands.ab3@1202> INCLUDE "internal_commands.ab3"
0003BF31 <internal_commands.ab3@1203> INCLUDE "internal_commands.ab3"
0003BF32 <internal_commands.ab3@1204> INCLUDE "internal_commands.ab3"
0003BF34 <internal_commands.ab3@1207> INCLUDE "internal_commands.ab3"
0003BF38 <internal_commands.ab3@1208> INCLUDE "internal_commands.ab3"
0003BF3A <internal_commands.ab3@1209> INCLUDE "internal_commands.ab3"
0003BF3C <internal_commands.ab3@1210> INCLUDE "internal_commands.ab3"
0003BF40 <internal_commands.ab3@1211> INCLUDE "internal_commands.ab3"
0003BF42 <internal_commands.ab3@1212> INCLUDE "internal_commands.ab3"
0003BF46 <internal_commands.ab3@1216> INCLUDE "internal_commands.ab3"
0003BF48 <internal_commands.ab3@1217> INCLUDE "internal_commands.ab3"
0003BF4C <internal_commands.ab3@1218> INCLUDE "internal_commands.ab3"
0003BF4D <internal_commands.ab3@1219> INCLUDE "internal_commands.ab3"
0003BF4E <internal_commands.ab3@1220> INCLUDE "internal_commands.ab3"
0003BF50 <internal_commands.ab3@1222> INCLUDE "internal_commands.ab3"
0003BF54 <internal_commands.ab3@1223> INCLUDE "internal_commands.ab3"
0003BF56 <internal_commands.ab3@1224> INCLUDE "internal_commands.ab3"
0003BF58 <internal_commands.ab3@1225> INCLUDE "internal_commands.ab3"
0003BF5C <internal_commands.ab3@1226> INCLUDE "internal_commands.ab3"
0003BF5E <internal_commands.ab3@1227> INCLUDE "internal_commands.ab3"
0003BF62 <internal_commands.ab3@1231> INCLUDE "internal_commands.ab3"
0003BF64 <internal_commands.ab3@1232> INCLUDE "internal_commands.ab3"
0003BF69 <internal_commands.ab3@1233> INCLUDE "internal_commands.ab3"
0003BF6A <internal_commands.ab3@1234> INCLUDE "internal_commands.ab3"
0003BF6C <internal_commands.ab3@1237> INCLUDE "internal_commands.ab3"
0003BF70 <internal_commands.ab3@1238> INCLUDE "internal_commands.ab3"
0003BF72 <internal_commands.ab3@1239> INCLUDE "internal_commands.ab3"
0003BF74 <internal_commands.ab3@1240> INCLUDE "internal_commands.ab3"
0003BF78 <internal_commands.ab3@1241> INCLUDE "internal_commands.ab3"
0003BF7A <internal_commands.ab3@1242> INCLUDE "internal_commands.ab3"
0003BF7E <internal_commands.ab3@1246> INCLUDE "internal_commands.ab3"
0003BF80 <internal_commands.ab3@1247> INCLUDE "internal_commands.ab3"
0003BF85 <internal_commands.ab3@1248> INCLUDE "internal_commands.ab3"
0003BF86 <internal_commands.ab3@1249> INCLUDE "internal_commands.ab3"
0003BF88 <internal_commands.ab3@1252> INCLUDE "internal_commands.ab3"
0003BF8C <internal_commands.ab3@1253> INCLUDE "internal_commands.ab3"
0003BF8E <internal_commands.ab3@1254> INCLUDE "internal_commands.ab3"
0003BF90 <internal_commands.ab3@1255> INCLUDE "internal_commands.ab3"
0003BF94 <internal_commands.ab3@1256> INCLUDE "internal_commands.ab3"
0003BF96 <internal_commands.ab3@1257> INCLUDE "internal_commands.ab3"
0003BF9A <internal_commands.ab3@1261> INCLUDE "internal_commands.ab3"
0003BF9C <internal_commands.ab3@1262> INCLUDE "internal_commands.ab3"
0003BFA0 <internal_commands.ab3@1263> INCLUDE "internal_commands.ab3"
0003BFA1 <internal_commands.ab3@1264> INCLUDE "internal_commands.ab3"
0003BFA2 <internal_commands.ab3@1265> INCLUDE "internal_commands.ab3"
0003BFA4 <internal_commands.ab3@1267> INCLUDE "internal_commands.ab3"
0003BFA8 <internal_commands.ab3@1268> INCLUDE "internal_commands.ab3"
0003BFAA <internal_commands.ab3@1269> INCLUDE "internal_commands.ab3"
0003BFAC <internal_commands.ab3@1270> INCLUDE "internal_commands.ab3"
0003BFB0 <internal_commands.ab3@1271> INCLUDE "internal_commands.ab3"
0003BFB2 <internal_commands.ab3@1272> INCLUDE "internal_commands.ab3"
0003BFB6 <internal_commands.ab3@1276> INCLUDE "internal_commands.ab3"
0003BFB8 <internal_commands.ab3@1277> INCLUDE "internal_commands.ab3"
0003BFBD <internal_commands.ab3@1278> INCLUDE "internal_commands.ab3"
0003BFBE <internal_commands.ab3@1279> INCLUDE "internal_commands.ab3"
0003BFC0 <internal_commands.ab3@1282> INCLUDE "internal_commands.ab3"
0003BFC4 <internal_commands.ab3@1283> INCLUDE "internal_commands.ab3"
0003BFC6 <internal_commands.ab3@1284> INCLUDE "internal_commands.ab3"
0003BFC8 <internal_commands.ab3@1285> INCLUDE "internal_commands.ab3"
0003BFCC <internal_commands.ab3@1286> INCLUDE "internal_commands.ab3"
0003BFCE <internal_commands.ab3@1287> INCLUDE "internal_commands.ab3"
0003BFD2 <internal_commands.ab3@1291> INCLUDE "internal_commands.ab3"
0003BFD4 <internal_commands.ab3@1292> INCLUDE "internal_commands.ab3"
0003BFD8 <internal_commands.ab3@1293> INCLUDE "internal_commands.ab3"
0003BFD9 <internal_commands.ab3@1294> INCLUDE "internal_commands.ab3"
0003BFDA <internal_commands.ab3@1295> INCLUDE "internal_commands.ab3"
0003BFDC <internal_commands.ab3@1297> INCLUDE "internal_commands.ab3"
0003BFE0 <internal_commands.ab3@1298> INCLUDE "internal_commands.ab3"
0003BFE2 <internal_commands.ab3@1299> INCLUDE "internal_commands.ab3"
0003BFE4 <internal_commands.ab3@1300> INCLUDE "internal_commands.ab3"
0003BFE8 <internal_commands.ab3@1301> INCLUDE "internal_commands.ab3"
0003BFEA <internal_commands.ab3@1302> INCLUDE "internal_commands.ab3"
0003BFEE <internal_commands.ab3@1306> INCLUDE "internal_commands.ab3"
0003BFF0 <internal_commands.ab3@1307> INCLUDE "internal_commands.ab3"
0003BFF4 <internal_commands.ab3@1308> INCLUDE "internal_commands.ab3"
0003BFF5 <internal_commands.ab3@1309> INCLUDE "internal_commands.ab3"
0003BFF6 <internal_commands.ab3@1310> INCLUDE "internal_commands.ab3"
0003BFF8 <internal_commands.ab3@1312> INCLUDE "internal_commands.ab3"
0003BFFC <internal_commands.ab3@1313> INCLUDE "internal_commands.ab3"
0003BFFE <internal_commands.ab3@1314> INCLUDE "internal_commands.ab3"
0003C000 <internal_commands.ab3@1315> INCLUDE "internal_commands.ab3"
0003C004 <internal_commands.ab3@1316> INCLUDE "internal_commands.ab3"
0003C006 <internal_commands.ab3@1317> INCLUDE "internal_commands.ab3"
0003C00A <internal_commands.ab3@1321> INCLUDE "internal_commands.ab3"
0003C00C <internal_commands.ab3@1322> INCLUDE "internal_commands.ab3"
0003C014 <internal_commands.ab3@1323> INCLUDE "internal_commands.ab3"
0003C015 <internal_commands.ab3@1324> INCLUDE "internal_commands.ab3"
0003C016 <internal_commands.ab3@1325> INCLUDE "internal_commands.ab3"
0003C018 <internal_commands.ab3@1327> INCLUDE "internal_commands.ab3"
0003C01C <internal_commands.ab3@1328> INCLUDE "internal_commands.ab3"
0003C01E <internal_commands.ab3@1329> INCLUDE "internal_commands.ab3"
0003C020 <internal_commands.ab3@1330> INCLUDE "internal_commands.ab3"
0003C024 <internal_commands.ab3@1331> INCLUDE "internal_commands.ab3"
0003C026 <internal_commands.ab3@1332> INCLUDE "internal_commands.ab3"
0003C02A <internal_commands.ab3@1336> INCLUDE "internal_commands.ab3"
0003C02C <internal_commands.ab3@1337> INCLUDE "internal_commands.ab3"
0003C030 <internal_commands.ab3@1338> INCLUDE "internal_commands.ab3"
0003C031 <internal_commands.ab3@1339> INCLUDE "internal_commands.ab3"
0003C032 <internal_commands.ab3@1340> INCLUDE "internal_commands.ab3"
0003C034 <internal_commands.ab3@1342> INCLUDE "internal_commands.ab3"
0003C038 <internal_commands.ab3@1343> INCLUDE "internal_commands.ab3"
0003C03A <internal_commands.ab3@1344> INCLUDE "internal_commands.ab3"
0003C03C <internal_commands.ab3@1345> INCLUDE "internal_commands.ab3"
0003C040 <internal_commands.ab3@1346> INCLUDE "internal_commands.ab3"
0003C042 <internal_commands.ab3@1347> INCLUDE "internal_commands.ab3"
0003C046 <internal_commands.ab3@1351> INCLUDE "internal_commands.ab3"
0003C048 <internal_commands.ab3@1352> INCLUDE "internal_commands.ab3"
0003C04C <internal_commands.ab3@1353> INCLUDE "internal_commands.ab3"
0003C04D <internal_commands.ab3@1354> INCLUDE "internal_commands.ab3"
0003C04E <internal_commands.ab3@1355> INCLUDE "internal_commands.ab3"
0003C050 <internal_commands.ab3@1357> INCLUDE "internal_commands.ab3"
0003C054 <internal_commands.ab3@1358> INCLUDE "internal_commands.ab3"
0003C056 <internal_commands.ab3@1359> INCLUDE "internal_commands.ab3"
0003C058 <internal_commands.ab3@1360> INCLUDE "internal_commands.ab3"
0003C05C <internal_commands.ab3@1361> INCLUDE "internal_commands.ab3"
0003C05E <internal_commands.ab3@1362> INCLUDE "internal_commands.ab3"
0003C062 <internal_commands.ab3@1366> INCLUDE "internal_commands.ab3"
0003C064 <internal_commands.ab3@1367> INCLUDE "internal_commands.ab3"
0003C068 <internal_commands.ab3@1368> INCLUDE "internal_commands.ab3"
0003C069 <internal_commands.ab3@1369> INCLUDE "internal_commands.ab3"
0003C06A <internal_commands.ab3@1370> INCLUDE "internal_commands.ab3"
0003C06C <internal_commands.ab3@1372> INCLUDE "internal_commands.ab3"
0003C070 <internal_commands.ab3@1373> INCLUDE "internal_commands.ab3"
0003C072 <internal_commands.ab3@1374> INCLUDE "internal_commands.ab3"
0003C074 <internal_commands.ab3@1375> INCLUDE "internal_commands.ab3"
0003C078 <internal_commands.ab3@1376> INCLUDE "internal_commands.ab3"
0003C07A <internal_commands.ab3@1377> INCLUDE "internal_commands.ab3"
0003C07E <internal_commands.ab3@1381> INCLUDE "internal_commands.ab3"
0003C080 <internal_commands.ab3@1382> INCLUDE "internal_commands.ab3"
0003C085 <internal_commands.ab3@1383> INCLUDE "internal_commands.ab3"
0003C086 <internal_commands.ab3@1384> INCLUDE "internal_commands.ab3"
0003C088 <internal_commands.ab3@1387> INCLUDE "internal_commands.ab3"
0003C08C <internal_commands.ab3@1388> INCLUDE "internal_commands.ab3"
0003C08E <internal_commands.ab3@1389> INCLUDE "internal_commands.ab3"
0003C090 <internal_commands.ab3@1390> INCLUDE "internal_commands.ab3"
0003C094 <internal_commands.ab3@1391> INCLUDE "internal_commands.ab3"
0003C096 <internal_commands.ab3@1392> INCLUDE "internal_commands.ab3"
0003C09A <internal_commands.ab3@1396> INCLUDE "internal_commands.ab3"
0003C09C <internal_commands.ab3@1397> INCLUDE "internal_commands.ab3"
0003C0A0 <internal_commands.ab3@1398> INCLUDE "internal_commands.ab3"
0003C0A1 <internal_commands.ab3@1399> INCLUDE "internal_commands.ab3"
0003C0A2 <internal_commands.ab3@1400> INCLUDE "internal_commands.ab3"
0003C0A4 <internal_commands.ab3@1402> INCLUDE "internal_commands.ab3"
0003C0A8 <internal_commands.ab3@1403> INCLUDE "internal_commands.ab3"
0003C0AA <internal_commands.ab3@1404> INCLUDE "internal_commands.ab3"
0003C0AC <internal_commands.ab3@1405> INCLUDE "internal_commands.ab3"
0003C0B0 <internal_commands.ab3@1406> INCLUDE "internal_commands.ab3"
0003C0B2 <internal_commands.ab3@1407> INCLUDE "internal_commands.ab3"
0003C0B6 <internal_commands.ab3@1411> INCLUDE "internal_commands.ab3"
0003C0B8 <internal_commands.ab3@1412> INCLUDE "internal_commands.ab3"
0003C0BC <internal_commands.ab3@1413> INCLUDE "internal_commands.ab3"
0003C0BD <internal_commands.ab3@1414> INCLUDE "internal_commands.ab3"
0003C0BE <internal_commands.ab3@1415> INCLUDE "internal_commands.ab3"
0003C0C0 <internal_commands.ab3@1417> INCLUDE "internal_commands.ab3"
0003C0C4 <internal_commands.ab3@1418> INCLUDE "internal_commands.ab3"
0003C0C6 <internal_commands.ab3@1419> INCLUDE "internal_commands.ab3"
0003C0C8 <internal_commands.ab3@1420> INCLUDE "internal_commands.ab3"
0003C0CC <internal_commands.ab3@1421> INCLUDE "internal_commands.ab3"
0003C0CE <internal_commands.ab3@1422> INCLUDE "internal_commands.ab3"
0003C0D2 <internal_commands.ab3@1426> INCLUDE "internal_commands.ab3"
0003C0D4 <internal_commands.ab3@1427> INCLUDE "internal_commands.ab3"
0003C0D9 <internal_commands.ab3@1428> INCLUDE "internal_commands.ab3"
0003C0DA <internal_commands.ab3@1429> INCLUDE "internal_commands.ab3"
0003C0DC <internal_commands.ab3@1432> INCLUDE "internal_commands.ab3"
0003C0E0 <internal_commands.ab3@1433> INCLUDE "internal_commands.ab3"
0003C0E2 <internal_commands.ab3@1434> INCLUDE "internal_commands.ab3"
0003C0E4 <internal_commands.ab3@1435> INCLUDE "internal_commands.ab3"
0003C0E8 <internal_commands.ab3@1436> INCLUDE "internal_commands.ab3"
0003C0EA <internal_commands.ab3@1437> INCLUDE "internal_commands.ab3"
0003C0EE <internal_commands.ab3@1441> INCLUDE "internal_commands.ab3"
0003C0F0 <internal_commands.ab3@1442> INCLUDE "internal_commands.ab3"
0003C0F5 <internal_commands.ab3@1443> INCLUDE "internal_commands.ab3"
0003C0F6 <internal_commands.ab3@1444> INCLUDE "internal_commands.ab3"
0003C0F8 <internal_commands.ab3@1447> INCLUDE "internal_commands.ab3"
0003C0FC <internal_commands.ab3@1448> INCLUDE "internal_commands.ab3"
0003C0FE <internal_commands.ab3@1449> INCLUDE "internal_commands.ab3"
0003C100 <internal_commands.ab3@1450> INCLUDE "internal_commands.ab3"
0003C104 <internal_commands.ab3@1451> INCLUDE "internal_commands.ab3"
0003C106 <internal_commands.ab3@1452> INCLUDE "internal_commands.ab3"
0003C10A <internal_commands.ab3@1457> INCLUDE "internal_commands.ab3"
0003C10C <internal_commands.ab3@1458> INCLUDE "internal_commands.ab3"
0003C112 <internal_commands.ab3@1459> INCLUDE "internal_commands.ab3"
0003C113 <internal_commands.ab3@1460> INCLUDE "internal_commands.ab3"
0003C114 <internal_commands.ab3@1461> INCLUDE "internal_commands.ab3"
0003C116 <internal_commands.ab3@1463> INCLUDE "internal_commands.ab3"
0003C11A <internal_commands.ab3@1464> INCLUDE "internal_commands.ab3"
0003C11C <internal_commands.ab3@1465> INCLUDE "internal_commands.ab3"
0003C11E <internal_commands.ab3@1466> INCLUDE "internal_commands.ab3"
0003C122 <internal_commands.ab3@1467> INCLUDE "internal_commands.ab3"
0003C124 <internal_commands.ab3@1468> INCLUDE "internal_commands.ab3"
0003C128 <internal_commands.ab3@1472> INCLUDE "internal_commands.ab3"
0003C12A <internal_commands.ab3@1473> INCLUDE "internal_commands.ab3"
0003C130 <internal_commands.ab3@1474> INCLUDE "internal_commands.ab3"
0003C131 <internal_commands.ab3@1475> INCLUDE "internal_commands.ab3"
0003C132 <internal_commands.ab3@1476> INCLUDE "internal_commands.ab3"
0003C134 <internal_commands.ab3@1478> INCLUDE "internal_commands.ab3"
0003C138 <internal_commands.ab3@1479> INCLUDE "internal_commands.ab3"
0003C13A <internal_commands.ab3@1480> INCLUDE "internal_commands.ab3"
0003C13C <internal_commands.ab3@1481> INCLUDE "internal_commands.ab3"
0003C140 <internal_commands.ab3@1482> INCLUDE "internal_commands.ab3"
0003C142 <internal_commands.ab3@1483> INCLUDE "internal_commands.ab3"
0003C146 <internal_commands.ab3@1487> INCLUDE "internal_commands.ab3"
0003C148 <internal_commands.ab3@1488> INCLUDE "internal_commands.ab3"
0003C14E <internal_commands.ab3@1489> INCLUDE "internal_commands.ab3"
0003C14F <internal_commands.ab3@1490> INCLUDE "internal_commands.ab3"
0003C150 <internal_commands.ab3@1491> INCLUDE "internal_commands.ab3"
0003C152 <internal_commands.ab3@1493> INCLUDE "internal_commands.ab3"
0003C156 <internal_commands.ab3@1494> INCLUDE "internal_commands.ab3"
0003C158 <internal_commands.ab3@1495> INCLUDE "internal_commands.ab3"
0003C15A <internal_commands.ab3@1496> INCLUDE "internal_commands.ab3"
0003C15E <internal_commands.ab3@1497> INCLUDE "internal_commands.ab3"
0003C160 <internal_commands.ab3@1498> INCLUDE "internal_commands.ab3"
0003C164 <internal_commands.ab3@1502> INCLUDE "internal_commands.ab3"
0003C166 <internal_commands.ab3@1503> INCLUDE "internal_commands.ab3"
0003C16B <internal_commands.ab3@1504> INCLUDE "internal_commands.ab3"
0003C16C <internal_commands.ab3@1505> INCLUDE "internal_commands.ab3"
0003C16E <internal_commands.ab3@1508> INCLUDE "internal_commands.ab3"
0003C172 <internal_commands.ab3@1509> INCLUDE "internal_commands.ab3"
0003C174 <internal_commands.ab3@1510> INCLUDE "internal_commands.ab3"
0003C176 <internal_commands.ab3@1511> INCLUDE "internal_commands.ab3"
0003C17A <internal_commands.ab3@1512> INCLUDE "internal_commands.ab3"
0003C17C <internal_commands.ab3@1513> INCLUDE "internal_commands.ab3"
0003C180 <internal_commands.ab3@1517> INCLUDE "internal_commands.ab3"
0003C182 <internal_commands.ab3@1518> INCLUDE "internal_commands.ab3"
0003C187 <internal_commands.ab3@1519> INCLUDE "internal_commands.ab3"
0003C188 <internal_commands.ab3@1520> INCLUDE "internal_commands.ab3"
0003C18A <internal_commands.ab3@1523> INCLUDE "internal_commands.ab3"
0003C18E <internal_commands.ab3@1524> INCLUDE "internal_commands.ab3"
0003C190 <internal_commands.ab3@1525> INCLUDE "internal_commands.ab3"
0003C192 <internal_commands.ab3@1526> INCLUDE "internal_commands.ab3"
0003C196 <internal_commands.ab3@1527> INCLUDE "internal_commands.ab3"
0003C198 <internal_commands.ab3@1528> INCLUDE "internal_commands.ab3"
0003C19C <internal_commands.ab3@1532> INCLUDE "internal_commands.ab3"
0003C19E <internal_commands.ab3@1533> INCLUDE "internal_commands.ab3"
0003C1A3 <internal_commands.ab3@1534> INCLUDE "internal_commands.ab3"
0003C1A4 <internal_commands.ab3@1535> INCLUDE "internal_commands.ab3"
0003C1A6 <internal_commands.ab3@1538> INCLUDE "internal_commands.ab3"
0003C1AA <internal_commands.ab3@1539> INCLUDE "internal_commands.ab3"
0003C1AC <internal_commands.ab3@1540> INCLUDE "internal_commands.ab3"
0003C1AE <internal_commands.ab3@1541> INCLUDE "internal_commands.ab3"
0003C1B2 <internal_commands.ab3@1542> INCLUDE "internal_commands.ab3"
0003C1B4 <internal_commands.ab3@1543> INCLUDE "internal_commands.ab3"
0003C1B8 <internal_commands.ab3@1547> INCLUDE "internal_commands.ab3"
0003C1BA <internal_commands.ab3@1548> INCLUDE "internal_commands.ab3"
0003C1BE <internal_commands.ab3@1549> INCLUDE "internal_commands.ab3"
0003C1BF <internal_commands.ab3@1550> INCLUDE "internal_commands.ab3"
0003C1C0 <internal_commands.ab3@1551> INCLUDE "internal_commands.ab3"
0003C1C2 <internal_commands.ab3@1553> INCLUDE "internal_commands.ab3"
0003C1C6 <internal_commands.ab3@1554> INCLUDE "internal_commands.ab3"
0003C1C8 <internal_commands.ab3@1555> INCLUDE "internal_commands.ab3"
0003C1CA <internal_commands.ab3@1556> INCLUDE "internal_commands.ab3"
0003C1CE <internal_commands.ab3@1557> INCLUDE "internal_commands.ab3"
0003C1D0 <internal_commands.ab3@1558> INCLUDE "internal_commands.ab3"
0003C1D4 <internal_commands.ab3@1562> INCLUDE "internal_commands.ab3"
0003C1D6 <internal_commands.ab3@1563> INCLUDE "internal_commands.ab3"
0003C1DB <internal_commands.ab3@1564> INCLUDE "internal_commands.ab3"
0003C1DC <internal_commands.ab3@1565> INCLUDE "internal_commands.ab3"
0003C1DE <internal_commands.ab3@1568> INCLUDE "internal_commands.ab3"
0003C1E2 <internal_commands.ab3@1569> INCLUDE "internal_commands.ab3"
0003C1E4 <internal_commands.ab3@1570> INCLUDE "internal_commands.ab3"
0003C1E6 <internal_commands.ab3@1571> INCLUDE "internal_commands.ab3"
0003C1EA <internal_commands.ab3@1572> INCLUDE "internal_commands.ab3"
0003C1EC <internal_commands.ab3@1573> INCLUDE "internal_commands.ab3"
0003C1F0 <internal_commands.ab3@1577> INCLUDE "internal_commands.ab3"
0003C1F2 <internal_commands.ab3@1578> INCLUDE "internal_commands.ab3"
0003C1F6 <internal_commands.ab3@1579> INCLUDE "internal_commands.ab3"
0003C1F7 <internal_commands.ab3@1580> INCLUDE "internal_commands.ab3"
0003C1F8 <internal_commands.ab3@1581> INCLUDE "internal_commands.ab3"
0003C1FA <internal_commands.ab3@1583> INCLUDE "internal_commands.ab3"
0003C1FE <internal_commands.ab3@1584> INCLUDE "internal_commands.ab3"
0003C200 <internal_commands.ab3@1585> INCLUDE "internal_commands.ab3"
0003C202 <internal_commands.ab3@1586> INCLUDE "internal_commands.ab3"
0003C206 <internal_commands.ab3@1587> INCLUDE "internal_commands.ab3"
0003C208 <internal_commands.ab3@1588> INCLUDE "internal_commands.ab3"
0003C20C <internal_commands.ab3@1592> INCLUDE "internal_commands.ab3"
0003C20E <internal_commands.ab3@1593> INCLUDE "internal_commands.ab3"
0003C212 <internal_commands.ab3@1594> INCLUDE "internal_commands.ab3"
0003C213 <internal_commands.ab3@1595> INCLUDE "internal_commands.ab3"
0003C214 <internal_commands.ab3@1596> INCLUDE "internal_commands.ab3"
0003C216 <internal_commands.ab3@1598> INCLUDE "internal_commands.ab3"
0003C21A <internal_commands.ab3@1599> INCLUDE "internal_commands.ab3"
0003C21C <internal_commands.ab3@1600> INCLUDE "internal_commands.ab3"
0003C21E <internal_commands.ab3@1601> INCLUDE "internal_commands.ab3"
0003C222 <internal_commands.ab3@1602> INCLUDE "internal_commands.ab3"
0003C224 <internal_commands.ab3@1603> INCLUDE "internal_commands.ab3"
0003C228 <internal_commands.ab3@1607> INCLUDE "internal_commands.ab3"
0003C22A <internal_commands.ab3@1608> INCLUDE "internal_commands.ab3"
0003C22D <internal_commands.ab3@1609> INCLUDE "internal_commands.ab3"
0003C22E <internal_commands.ab3@1610> INCLUDE "internal_commands.ab3"
0003C230 <internal_commands.ab3@1613> INCLUDE "internal_commands.ab3"
0003C234 <internal_commands.ab3@1614> INCLUDE "internal_commands.ab3"
0003C236 <internal_commands.ab3@1615> INCLUDE "internal_commands.ab3"
0003C238 <internal_commands.ab3@1616> INCLUDE "internal_commands.ab3"
0003C23C <internal_commands.ab3@1617> INCLUDE "internal_commands.ab3"
0003C23E <internal_commands.ab3@1618> INCLUDE "internal_commands.ab3"
0003C242 <internal_commands.ab3@1622> INCLUDE "internal_commands.ab3"
0003C244 <internal_commands.ab3@1623> INCLUDE "internal_commands.ab3"
0003C248 <internal_commands.ab3@1624> INCLUDE "internal_commands.ab3"
0003C249 <internal_commands.ab3@1625> INCLUDE "internal_commands.ab3"
0003C24A <internal_commands.ab3@1626> INCLUDE "internal_commands.ab3"
0003C24C <internal_commands.ab3@1628> INCLUDE "internal_commands.ab3"
0003C250 <internal_commands.ab3@1629> INCLUDE "internal_commands.ab3"
0003C252 <internal_commands.ab3@1630> INCLUDE "internal_commands.ab3"
0003C254 <internal_commands.ab3@1631> INCLUDE "internal_commands.ab3"
0003C258 <internal_commands.ab3@1632> INCLUDE "internal_commands.ab3"
0003C25A <internal_commands.ab3@1633> INCLUDE "internal_commands.ab3"
0003C25E <internal_commands.ab3@1637> INCLUDE "internal_commands.ab3"
0003C260 <internal_commands.ab3@1638> INCLUDE "internal_commands.ab3"
0003C264 <internal_commands.ab3@1639> INCLUDE "internal_commands.ab3"
0003C265 <internal_commands.ab3@1640> INCLUDE "internal_commands.ab3"
0003C266 <internal_commands.ab3@1641> INCLUDE "internal_commands.ab3"
0003C268 <internal_commands.ab3@1643> INCLUDE "internal_commands.ab3"
0003C26C <internal_commands.ab3@1644> INCLUDE "internal_commands.ab3"
0003C26E <internal_commands.ab3@1645> INCLUDE "internal_commands.ab3"
0003C270 <internal_commands.ab3@1646> INCLUDE "internal_commands.ab3"
0003C274 <internal_commands.ab3@1647> INCLUDE "internal_commands.ab3"
0003C276 <internal_commands.ab3@1648> INCLUDE "internal_commands.ab3"
0003C27A <internal_commands.ab3@1652> INCLUDE "internal_commands.ab3"
0003C27C <internal_commands.ab3@1653> INCLUDE "internal_commands.ab3"
0003C282 <internal_commands.ab3@1654> INCLUDE "internal_commands.ab3"
0003C283 <internal_commands.ab3@1655> INCLUDE "internal_commands.ab3"
0003C284 <internal_commands.ab3@1656> INCLUDE "internal_commands.ab3"
0003C286 <internal_commands.ab3@1658> INCLUDE "internal_commands.ab3"
0003C28A <internal_commands.ab3@1659> INCLUDE "internal_commands.ab3"
0003C28C <internal_commands.ab3@1660> INCLUDE "internal_commands.ab3"
0003C28E <internal_commands.ab3@1661> INCLUDE "internal_commands.ab3"
0003C292 <internal_commands.ab3@1662> INCLUDE "internal_commands.ab3"
0003C294 <internal_commands.ab3@1663> INCLUDE "internal_commands.ab3"
0003C298 <internal_commands.ab3@1667> INCLUDE "internal_commands.ab3"
0003C29A <internal_commands.ab3@1668> INCLUDE "internal_commands.ab3"
0003C29E <internal_commands.ab3@1669> INCLUDE "internal_commands.ab3"
0003C29F <internal_commands.ab3@1670> INCLUDE "internal_commands.ab3"
0003C2A0 <internal_commands.ab3@1671> INCLUDE "internal_commands.ab3"
0003C2A2 <internal_commands.ab3@1673> INCLUDE "internal_commands.ab3"
0003C2A6 <internal_commands.ab3@1674> INCLUDE "internal_commands.ab3"
0003C2A8 <internal_commands.ab3@1675> INCLUDE "internal_commands.ab3"
0003C2AA <internal_commands.ab3@1676> INCLUDE "internal_commands.ab3"
0003C2AE <internal_commands.ab3@1677> INCLUDE "internal_commands.ab3"
0003C2B0 <internal_commands.ab3@1678> INCLUDE "internal_commands.ab3"
0003C2B4 <internal_commands.ab3@1682> INCLUDE "internal_commands.ab3"
0003C2B6 <internal_commands.ab3@1683> INCLUDE "internal_commands.ab3"
0003C2BA <internal_commands.ab3@1684> INCLUDE "internal_commands.ab3"
0003C2BB <internal_commands.ab3@1685> INCLUDE "internal_commands.ab3"
0003C2BC <internal_commands.ab3@1686> INCLUDE "internal_commands.ab3"
0003C2BE <internal_commands.ab3@1688> INCLUDE "internal_commands.ab3"
0003C2C2 <internal_commands.ab3@1689> INCLUDE "internal_commands.ab3"
0003C2C4 <internal_commands.ab3@1690> INCLUDE "internal_commands.ab3"
0003C2C6 <internal_commands.ab3@1691> INCLUDE "internal_commands.ab3"
0003C2CA <internal_commands.ab3@1692> INCLUDE "internal_commands.ab3"
0003C2CC <internal_commands.ab3@1693> INCLUDE "internal_commands.ab3"
0003C2D0 <internal_commands.ab3@1697> INCLUDE "internal_commands.ab3"
0003C2D2 <internal_commands.ab3@1698> INCLUDE "internal_commands.ab3"
0003C2D7 <internal_commands.ab3@1699> INCLUDE "internal_commands.ab3"
0003C2D8 <internal_commands.ab3@1700> INCLUDE "internal_commands.ab3"
0003C2DA <internal_commands.ab3@1703> INCLUDE "internal_commands.ab3"
0003C2DE <internal_commands.ab3@1704> INCLUDE "internal_commands.ab3"
0003C2E0 <internal_commands.ab3@1705> INCLUDE "internal_commands.ab3"
0003C2E2 <internal_commands.ab3@1706> INCLUDE "internal_commands.ab3"
0003C2E6 <internal_commands.ab3@1707> INCLUDE "internal_commands.ab3"
0003C2E8 <internal_commands.ab3@1708> INCLUDE "internal_commands.ab3"
0003C2EC <internal_commands.ab3@1712> INCLUDE "internal_commands.ab3"
0003C2EE <internal_commands.ab3@1713> INCLUDE "internal_commands.ab3"
0003C2F3 <internal_commands.ab3@1714> INCLUDE "internal_commands.ab3"
0003C2F4 <internal_commands.ab3@1715> INCLUDE "internal_commands.ab3"
0003C2F6 <internal_commands.ab3@1718> INCLUDE "internal_commands.ab3"
0003C2FA <internal_commands.ab3@1719> INCLUDE "internal_commands.ab3"
0003C2FC <internal_commands.ab3@1720> INCLUDE "internal_commands.ab3"
0003C2FE <internal_commands.ab3@1721> INCLUDE "internal_commands.ab3"
0003C302 <internal_commands.ab3@1722> INCLUDE "internal_commands.ab3"
0003C304 <internal_commands.ab3@1723> INCLUDE "internal_commands.ab3"
0003C308 <internal_commands.ab3@1727> INCLUDE "internal_commands.ab3"
0003C30A <internal_commands.ab3@1728> INCLUDE "internal_commands.ab3"
0003C30E <internal_commands.ab3@1729> INCLUDE "internal_commands.ab3"
0003C30F <internal_commands.ab3@1730> INCLUDE "internal_commands.ab3"
0003C310 <internal_commands.ab3@1731> INCLUDE "internal_commands.ab3"
0003C312 <internal_commands.ab3@1733> INCLUDE "internal_commands.ab3"
0003C316 <internal_commands.ab3@1734> INCLUDE "internal_commands.ab3"
0003C318 <internal_commands.ab3@1735> INCLUDE "internal_commands.ab3"
0003C31A <internal_commands.ab3@1736> INCLUDE "internal_commands.ab3"
0003C31E <internal_commands.ab3@1737> INCLUDE "internal_commands.ab3"
0003C320 <internal_commands.ab3@1738> INCLUDE "internal_commands.ab3"
0003C324 <internal_commands.ab3@1742> INCLUDE "internal_commands.ab3"
0003C326 <internal_commands.ab3@1743> INCLUDE "internal_commands.ab3"
0003C32A <internal_commands.ab3@1744> INCLUDE "internal_commands.ab3"
0003C32B <internal_commands.ab3@1745> INCLUDE "internal_commands.ab3"
0003C32C <internal_commands.ab3@1746> INCLUDE "internal_commands.ab3"
0003C32E <internal_commands.ab3@1748> INCLUDE "internal_commands.ab3"
0003C332 <internal_commands.ab3@1749> INCLUDE "internal_commands.ab3"
0003C334 <internal_commands.ab3@1750> INCLUDE "internal_commands.ab3"
0003C336 <internal_commands.ab3@1751> INCLUDE "internal_commands.ab3"
0003C33A <internal_commands.ab3@1752> INCLUDE "internal_commands.ab3"
0003C33C <internal_commands.ab3@1753> INCLUDE "internal_commands.ab3"
0003C340 <internal_commands.ab3@1757> INCLUDE "internal_commands.ab3"
0003C342 <internal_commands.ab3@1758> INCLUDE "internal_commands.ab3"
0003C346 <internal_commands.ab3@1759> INCLUDE "internal_commands.ab3"
0003C347 <internal_commands.ab3@1760> INCLUDE "internal_commands.ab3"
0003C348 <internal_commands.ab3@1761> INCLUDE "internal_commands.ab3"
0003C34A <internal_commands.ab3@1763> INCLUDE "internal_commands.ab3"
0003C34E <internal_commands.ab3@1764> INCLUDE "internal_commands.ab3"
0003C350 <internal_commands.ab3@1765> INCLUDE "internal_commands.ab3"
0003C352 <internal_commands.ab3@1766> INCLUDE "internal_commands.ab3"
0003C356 <internal_commands.ab3@1767> INCLUDE "internal_commands.ab3"
0003C358 <internal_commands.ab3@1768> INCLUDE "internal_commands.ab3"
0003C35C <internal_commands.ab3@1772> INCLUDE "internal_commands.ab3"
0003C35E <internal_commands.ab3@1773> INCLUDE "internal_commands.ab3"
0003C363 <internal_commands.ab3@1774> INCLUDE "internal_commands.ab3"
0003C364 <internal_commands.ab3@1775> INCLUDE "internal_commands.ab3"
0003C366 <internal_commands.ab3@1778> INCLUDE "internal_commands.ab3"
0003C36A <internal_commands.ab3@1779> INCLUDE "internal_commands.ab3"
0003C36C <internal_commands.ab3@1780> INCLUDE "internal_commands.ab3"
0003C36E <internal_commands.ab3@1781> INCLUDE "internal_commands.ab3"
0003C372 <internal_commands.ab3@1782> INCLUDE "internal_commands.ab3"
0003C374 <internal_commands.ab3@1783> INCLUDE "internal_commands.ab3"
0003C378 <internal_commands.ab3@1787> INCLUDE "internal_commands.ab3"
0003C37A <internal_commands.ab3@1788> INCLUDE "internal_commands.ab3"
0003C37E <internal_commands.ab3@1789> INCLUDE "internal_commands.ab3"
0003C37F <internal_commands.ab3@1790> INCLUDE "internal_commands.ab3"
0003C380 <internal_commands.ab3@1791> INCLUDE "internal_commands.ab3"
0003C382 <internal_commands.ab3@1793> INCLUDE "internal_commands.ab3"
0003C386 <internal_commands.ab3@1794> INCLUDE "internal_commands.ab3"
0003C388 <internal_commands.ab3@1795> INCLUDE "internal_commands.ab3"
0003C38A <internal_commands.ab3@1796> INCLUDE "internal_commands.ab3"
0003C38E <internal_commands.ab3@1797> INCLUDE "internal_commands.ab3"
0003C390 <internal_commands.ab3@1798> INCLUDE "internal_commands.ab3"
0003C394 <internal_commands.ab3@1802> INCLUDE "internal_commands.ab3"
0003C396 <internal_commands.ab3@1803> INCLUDE "internal_commands.ab3"
0003C39A <internal_commands.ab3@1804> INCLUDE "internal_commands.ab3"
0003C39B <internal_commands.ab3@1805> INCLUDE "internal_commands.ab3"
0003C39C <internal_commands.ab3@1806> INCLUDE "internal_commands.ab3"
0003C39E <internal_commands.ab3@1808> INCLUDE "internal_commands.ab3"
0003C3A2 <internal_commands.ab3@1809> INCLUDE "internal_commands.ab3"
0003C3A4 <internal_commands.ab3@1810> INCLUDE "internal_commands.ab3"
0003C3A6 <internal_commands.ab3@1811> INCLUDE "internal_commands.ab3"
0003C3AA <internal_commands.ab3@1812> INCLUDE "internal_commands.ab3"
0003C3AC <internal_commands.ab3@1813> INCLUDE "internal_commands.ab3"
0003C3B0 <internal_commands.ab3@1817> INCLUDE "internal_commands.ab3"
0003C3B2 <internal_commands.ab3@1818> INCLUDE "internal_commands.ab3"
0003C3B6 <internal_commands.ab3@1819> INCLUDE "internal_commands.ab3"
0003C3B7 <internal_commands.ab3@1820> INCLUDE "internal_commands.ab3"
0003C3B8 <internal_commands.ab3@1821> INCLUDE "internal_commands.ab3"
0003C3BA <internal_commands.ab3@1823> INCLUDE "internal_commands.ab3"
0003C3BE <internal_commands.ab3@1824> INCLUDE "internal_commands.ab3"
0003C3C0 <internal_commands.ab3@1825> INCLUDE "internal_commands.ab3"
0003C3C2 <internal_commands.ab3@1826> INCLUDE "internal_commands.ab3"
0003C3C6 <internal_commands.ab3@1827> INCLUDE "internal_commands.ab3"
0003C3C8 <internal_commands.ab3@1828> INCLUDE "internal_commands.ab3"
0003C3CC <internal_commands.ab3@1832> INCLUDE "internal_commands.ab3"
0003C3CE <internal_commands.ab3@1833> INCLUDE "internal_commands.ab3"
0003C3D2 <internal_commands.ab3@1834> INCLUDE "internal_commands.ab3"
0003C3D3 <internal_commands.ab3@1835> INCLUDE "internal_commands.ab3"
0003C3D4 <internal_commands.ab3@1836> INCLUDE "internal_commands.ab3"
0003C3D6 <internal_commands.ab3@1838> INCLUDE "internal_commands.ab3"
0003C3DA <internal_commands.ab3@1839> INCLUDE "internal_commands.ab3"
0003C3DC <internal_commands.ab3@1840> INCLUDE "internal_commands.ab3"
0003C3DE <internal_commands.ab3@1841> INCLUDE "internal_commands.ab3"
0003C3E2 <internal_commands.ab3@1842> INCLUDE "internal_commands.ab3"
0003C3E4 <internal_commands.ab3@1843> INCLUDE "internal_commands.ab3"
0003C3E8 <internal_commands.ab3@1847> INCLUDE "internal_commands.ab3"
0003C3EA <internal_commands.ab3@1848> INCLUDE "internal_commands.ab3"
0003C3EE <internal_commands.ab3@1849> INCLUDE "internal_commands.ab3"
0003C3EF <internal_commands.ab3@1850> INCLUDE "internal_commands.ab3"
0003C3F0 <internal_commands.ab3@1851> INCLUDE "internal_commands.ab3"
0003C3F2 <internal_commands.ab3@1853> INCLUDE "internal_commands.ab3"
0003C3F6 <internal_commands.ab3@1854> INCLUDE "internal_commands.ab3"
0003C3F8 <internal_commands.ab3@1855> INCLUDE "internal_commands.ab3"
0003C3FA <internal_commands.ab3@1856> INCLUDE "internal_commands.ab3"
0003C3FE <internal_commands.ab3@1857> INCLUDE "internal_commands.ab3"
0003C400 <internal_commands.ab3@1858> INCLUDE "internal_commands.ab3"
0003C404 <internal_commands.ab3@1862> INCLUDE "internal_commands.ab3"
0003C406 <internal_commands.ab3@1863> INCLUDE "internal_commands.ab3"
0003C40A <internal_commands.ab3@1864> INCLUDE "internal_commands.ab3"
0003C40B <internal_commands.ab3@1865> INCLUDE "internal_commands.ab3"
0003C40C <internal_commands.ab3@1866> INCLUDE "internal_commands.ab3"
0003C40E <internal_commands.ab3@1868> INCLUDE "internal_commands.ab3"
0003C412 <internal_commands.ab3@1869> INCLUDE "internal_commands.ab3"
0003C414 <internal_commands.ab3@1870> INCLUDE "internal_commands.ab3"
0003C416 <internal_commands.ab3@1871> INCLUDE "internal_commands.ab3"
0003C41A <internal_commands.ab3@1872> INCLUDE "internal_commands.ab3"
0003C41C <internal_commands.ab3@1873> INCLUDE "internal_commands.ab3"
0003C420 <internal_commands.ab3@1877> INCLUDE "internal_commands.ab3"
0003C422 <internal_commands.ab3@1878> INCLUDE "internal_commands.ab3"
0003C426 <internal_commands.ab3@1879> INCLUDE "internal_commands.ab3"
0003C427 <internal_commands.ab3@1880> INCLUDE "internal_commands.ab3"
0003C428 <internal_commands.ab3@1881> INCLUDE "internal_commands.ab3"
0003C42A <internal_commands.ab3@1883> INCLUDE "internal_commands.ab3"
0003C42E <internal_commands.ab3@1884> INCLUDE "internal_commands.ab3"
0003C430 <internal_commands.ab3@1885> INCLUDE "internal_commands.ab3"
0003C432 <internal_commands.ab3@1886> INCLUDE "internal_commands.ab3"
0003C436 <internal_commands.ab3@1887> INCLUDE "internal_commands.ab3"
0003C438 <internal_commands.ab3@1888> INCLUDE "internal_commands.ab3"
0003C43C <internal_commands.ab3@1892> INCLUDE "internal_commands.ab3"
0003C43E <internal_commands.ab3@1893> INCLUDE "internal_commands.ab3"
0003C442 <internal_commands.ab3@1894> INCLUDE "internal_commands.ab3"
0003C443 <internal_commands.ab3@1895> INCLUDE "internal_commands.ab3"
0003C444 <internal_commands.ab3@1896> INCLUDE "internal_commands.ab3"
0003C446 <internal_commands.ab3@1898> INCLUDE "internal_commands.ab3"
0003C44A <internal_commands.ab3@1899> INCLUDE "internal_commands.ab3"
0003C44C <internal_commands.ab3@1900> INCLUDE "internal_commands.ab3"
0003C44E <internal_commands.ab3@1901> INCLUDE "internal_commands.ab3"
0003C452 <internal_commands.ab3@1902> INCLUDE "internal_commands.ab3"
0003C454 <internal_commands.ab3@1903> INCLUDE "internal_commands.ab3"
0003C458 <internal_commands.ab3@1907> INCLUDE "internal_commands.ab3"
0003C45A <internal_commands.ab3@1908> INCLUDE "internal_commands.ab3"
0003C45E <internal_commands.ab3@1909> INCLUDE "internal_commands.ab3"
0003C45F <internal_commands.ab3@1910> INCLUDE "internal_commands.ab3"
0003C460 <internal_commands.ab3@1911> INCLUDE "internal_commands.ab3"
0003C462 <internal_commands.ab3@1913> INCLUDE "internal_commands.ab3"
0003C466 <internal_commands.ab3@1914> INCLUDE "internal_commands.ab3"
0003C468 <internal_commands.ab3@1915> INCLUDE "internal_commands.ab3"
0003C46A <internal_commands.ab3@1916> INCLUDE "internal_commands.ab3"
0003C46E <internal_commands.ab3@1917> INCLUDE "internal_commands.ab3"
0003C470 <internal_commands.ab3@1918> INCLUDE "internal_commands.ab3"
0003C474 <internal_commands.ab3@1922> INCLUDE "internal_commands.ab3"
0003C476 <internal_commands.ab3@1923> INCLUDE "internal_commands.ab3"
0003C47A <internal_commands.ab3@1924> INCLUDE "internal_commands.ab3"
0003C47B <internal_commands.ab3@1925> INCLUDE "internal_commands.ab3"
0003C47C <internal_commands.ab3@1926> INCLUDE "internal_commands.ab3"
0003C47E <internal_commands.ab3@1928> INCLUDE "internal_commands.ab3"
0003C482 <internal_commands.ab3@1929> INCLUDE "internal_commands.ab3"
0003C484 <internal_commands.ab3@1930> INCLUDE "internal_commands.ab3"
0003C486 <internal_commands.ab3@1931> INCLUDE "internal_commands.ab3"
0003C48A <internal_commands.ab3@1932> INCLUDE "internal_commands.ab3"
0003C48C <internal_commands.ab3@1933> INCLUDE "internal_commands.ab3"
0003C490 <internal_commands.ab3@1937> INCLUDE "internal_commands.ab3"
0003C492 <internal_commands.ab3@1938> INCLUDE "internal_commands.ab3"
0003C496 <internal_commands.ab3@1939> INCLUDE "internal_commands.ab3"
0003C497 <internal_commands.ab3@1940> INCLUDE "internal_commands.ab3"
0003C498 <internal_commands.ab3@1941> INCLUDE "internal_commands.ab3"
0003C49A <internal_commands.ab3@1943> INCLUDE "internal_commands.ab3"
0003C49E <internal_commands.ab3@1944> INCLUDE "internal_commands.ab3"
0003C4A0 <internal_commands.ab3@1945> INCLUDE "internal_commands.ab3"
0003C4A2 <internal_commands.ab3@1946> INCLUDE "internal_commands.ab3"
0003C4A6 <internal_commands.ab3@1947> INCLUDE "internal_commands.ab3"
0003C4A8 <internal_commands.ab3@1948> INCLUDE "internal_commands.ab3"
0003C4AC <internal_commands.ab3@1952> INCLUDE "internal_commands.ab3"
0003C4AE <internal_commands.ab3@1953> INCLUDE "internal_commands.ab3"
0003C4B2 <internal_commands.ab3@1954> INCLUDE "internal_commands.ab3"
0003C4B3 <internal_commands.ab3@1955> INCLUDE "internal_commands.ab3"
0003C4B4 <internal_commands.ab3@1956> INCLUDE "internal_commands.ab3"
0003C4B6 <internal_commands.ab3@1958> INCLUDE "internal_commands.ab3"
0003C4BA <internal_commands.ab3@1959> INCLUDE "internal_commands.ab3"
0003C4BC <internal_commands.ab3@1960> INCLUDE "internal_commands.ab3"
0003C4BE <internal_commands.ab3@1961> INCLUDE "internal_commands.ab3"
0003C4C2 <internal_commands.ab3@1962> INCLUDE "internal_commands.ab3"
0003C4C4 <internal_commands.ab3@1963> INCLUDE "internal_commands.ab3"
0003C4C8 <internal_commands.ab3@1967> INCLUDE "internal_commands.ab3"
0003C4CA <internal_commands.ab3@1968> INCLUDE "internal_commands.ab3"
0003C4CE <internal_commands.ab3@1969> INCLUDE "internal_commands.ab3"
0003C4CF <internal_commands.ab3@1970> INCLUDE "internal_commands.ab3"
0003C4D0 <internal_commands.ab3@1971> INCLUDE "internal_commands.ab3"
0003C4D2 <internal_commands.ab3@1973> INCLUDE "internal_commands.ab3"
0003C4D6 <internal_commands.ab3@1974> INCLUDE "internal_commands.ab3"
0003C4D8 <internal_commands.ab3@1975> INCLUDE "internal_commands.ab3"
0003C4DA <internal_commands.ab3@1976> INCLUDE "internal_commands.ab3"
0003C4DE <internal_commands.ab3@1977> INCLUDE "internal_commands.ab3"
0003C4E0 <internal_commands.ab3@1978> INCLUDE "internal_commands.ab3"
0003C4E4 <internal_commands.ab3@1982> INCLUDE "internal_commands.ab3"
0003C4E6 <internal_commands.ab3@1983> INCLUDE "internal_commands.ab3"
0003C4EA <internal_commands.ab3@1984> INCLUDE "internal_commands.ab3"
0003C4EB <internal_commands.ab3@1985> INCLUDE "internal_commands.ab3"
0003C4EC <internal_commands.ab3@1986> INCLUDE "internal_commands.ab3"
0003C4EE <internal_commands.ab3@1988> INCLUDE "internal_commands.ab3"
0003C4F2 <internal_commands.ab3@1989> INCLUDE "internal_commands.ab3"
0003C4F4 <internal_commands.ab3@1990> INCLUDE "internal_commands.ab3"
0003C4F6 <internal_commands.ab3@1991> INCLUDE "internal_commands.ab3"
0003C4FA <internal_commands.ab3@1992> INCLUDE "internal_commands.ab3"
0003C4FC <internal_commands.ab3@1993> INCLUDE "internal_commands.ab3"
0003C500 <internal_commands.ab3@1997> INCLUDE "internal_commands.ab3"
0003C502 <internal_commands.ab3@1998> INCLUDE "internal_commands.ab3"
0003C505 <internal_commands.ab3@1999> INCLUDE "internal_commands.ab3"
0003C506 <internal_commands.ab3@2000> INCLUDE "internal_commands.ab3"
0003C508 <internal_commands.ab3@2003> INCLUDE "internal_commands.ab3"
0003C50C <internal_commands.ab3@2004> INCLUDE "internal_commands.ab3"
0003C50E <internal_commands.ab3@2005> INCLUDE "internal_commands.ab3"
0003C510 <internal_commands.ab3@2006> INCLUDE "internal_commands.ab3"
0003C514 <internal_commands.ab3@2007> INCLUDE "internal_commands.ab3"
0003C516 <internal_commands.ab3@2008> INCLUDE "internal_commands.ab3"
0003C51A <internal_commands.ab3@2012> INCLUDE "internal_commands.ab3"
0003C51C <internal_commands.ab3@2013> INCLUDE "internal_commands.ab3"
0003C51F <internal_commands.ab3@2014> INCLUDE "internal_commands.ab3"
0003C520 <internal_commands.ab3@2015> INCLUDE "internal_commands.ab3"
0003C522 <internal_commands.ab3@2018> INCLUDE "internal_commands.ab3"
0003C526 <internal_commands.ab3@2019> INCLUDE "internal_commands.ab3"
0003C528 <internal_commands.ab3@2020> INCLUDE "internal_commands.ab3"
0003C52A <internal_commands.ab3@2021> INCLUDE "internal_commands.ab3"
0003C52E <internal_commands.ab3@2022> INCLUDE "internal_commands.ab3"
0003C530 <internal_commands.ab3@2023> INCLUDE "internal_commands.ab3"
0003C534 <internal_commands.ab3@2027> INCLUDE "internal_commands.ab3"
0003C536 <internal_commands.ab3@2028> INCLUDE "internal_commands.ab3"
0003C53B <internal_commands.ab3@2029> INCLUDE "internal_commands.ab3"
0003C53C <internal_commands.ab3@2030> INCLUDE "internal_commands.ab3"
0003C53E <internal_commands.ab3@2033> INCLUDE "internal_commands.ab3"
0003C542 <internal_commands.ab3@2034> INCLUDE "internal_commands.ab3"
0003C544 <internal_commands.ab3@2035> INCLUDE "internal_commands.ab3"
0003C546 <internal_commands.ab3@2036> INCLUDE "internal_commands.ab3"
0003C54A <internal_commands.ab3@2037> INCLUDE "internal_commands.ab3"
0003C54C <internal_commands.ab3@2038> INCLUDE "internal_commands.ab3"
0003C550 <internal_commands.ab3@2042> INCLUDE "internal_commands.ab3"
0003C552 <internal_commands.ab3@2043> INCLUDE "internal_commands.ab3"
0003C556 <internal_commands.ab3@2044> INCLUDE "internal_commands.ab3"
0003C557 <internal_commands.ab3@2045> INCLUDE "internal_commands.ab3"
0003C558 <internal_commands.ab3@2046> INCLUDE "internal_commands.ab3"
0003C55A <internal_commands.ab3@2048> INCLUDE "internal_commands.ab3"
0003C55E <internal_commands.ab3@2049> INCLUDE "internal_commands.ab3"
0003C560 <internal_commands.ab3@2050> INCLUDE "internal_commands.ab3"
0003C562 <internal_commands.ab3@2051> INCLUDE "internal_commands.ab3"
0003C566 <internal_commands.ab3@2052> INCLUDE "internal_commands.ab3"
0003C568 <internal_commands.ab3@2053> INCLUDE "internal_commands.ab3"
0003C56C <internal_commands.ab3@2057> INCLUDE "internal_commands.ab3"
0003C56E <internal_commands.ab3@2058> INCLUDE "internal_commands.ab3"
0003C573 <internal_commands.ab3@2059> INCLUDE "internal_commands.ab3"
0003C574 <internal_commands.ab3@2060> INCLUDE "internal_commands.ab3"
0003C576 <internal_commands.ab3@2063> INCLUDE "internal_commands.ab3"
0003C57A <internal_commands.ab3@2064> INCLUDE "internal_commands.ab3"
0003C57C <internal_commands.ab3@2065> INCLUDE "internal_commands.ab3"
0003C57E <internal_commands.ab3@2066> INCLUDE "internal_commands.ab3"
0003C582 <internal_commands.ab3@2067> INCLUDE "internal_commands.ab3"
0003C584 <internal_commands.ab3@2068> INCLUDE "internal_commands.ab3"
0003C588 <internal_commands.ab3@2072> INCLUDE "internal_commands.ab3"
0003C58A <internal_commands.ab3@2073> INCLUDE "internal_commands.ab3"
0003C58F <internal_commands.ab3@2074> INCLUDE "internal_commands.ab3"
0003C590 <internal_commands.ab3@2075> INCLUDE "internal_commands.ab3"
0003C592 <internal_commands.ab3@2078> INCLUDE "internal_commands.ab3"
0003C596 <internal_commands.ab3@2079> INCLUDE "internal_commands.ab3"
0003C598 <internal_commands.ab3@2080> INCLUDE "internal_commands.ab3"
0003C59A <internal_commands.ab3@2081> INCLUDE "internal_commands.ab3"
0003C59E <internal_commands.ab3@2082> INCLUDE "internal_commands.ab3"
0003C5A0 <internal_commands.ab3@2083> INCLUDE "internal_commands.ab3"
0003C5A4 <internal_commands.ab3@2087> INCLUDE "internal_commands.ab3"
0003C5A6 <internal_commands.ab3@2088> INCLUDE "internal_commands.ab3"
0003C5AB <internal_commands.ab3@2089> INCLUDE "internal_commands.ab3"
0003C5AC <internal_commands.ab3@2090> INCLUDE "internal_commands.ab3"
0003C5AE <internal_commands.ab3@2093> INCLUDE "internal_commands.ab3"
0003C5B2 <internal_commands.ab3@2094> INCLUDE "internal_commands.ab3"
0003C5B4 <internal_commands.ab3@2095> INCLUDE "internal_commands.ab3"
0003C5B6 <internal_commands.ab3@2096> INCLUDE "internal_commands.ab3"
0003C5BA <internal_commands.ab3@2097> INCLUDE "internal_commands.ab3"
0003C5BC <internal_commands.ab3@2098> INCLUDE "internal_commands.ab3"
0003C5C0 <internal_commands.ab3@2102> INCLUDE "internal_commands.ab3"
0003C5C2 <internal_commands.ab3@2103> INCLUDE "internal_commands.ab3"
0003C5C7 <internal_commands.ab3@2104> INCLUDE "internal_commands.ab3"
0003C5C8 <internal_commands.ab3@2105> INCLUDE "internal_commands.ab3"
0003C5CA <internal_commands.ab3@2108> INCLUDE "internal_commands.ab3"
0003C5CE <internal_commands.ab3@2109> INCLUDE "internal_commands.ab3"
0003C5D0 <internal_commands.ab3@2110> INCLUDE "internal_commands.ab3"
0003C5D2 <internal_commands.ab3@2111> INCLUDE "internal_commands.ab3"
0003C5D6 <internal_commands.ab3@2112> INCLUDE "internal_commands.ab3"
0003C5D8 <internal_commands.ab3@2113> INCLUDE "internal_commands.ab3"
0003C5DC <internal_commands.ab3@2117> INCLUDE "internal_commands.ab3"
0003C5DE <internal_commands.ab3@2118> INCLUDE "internal_commands.ab3"
0003C5E3 <internal_commands.ab3@2119> INCLUDE "internal_commands.ab3"
0003C5E4 <internal_commands.ab3@2120> INCLUDE "internal_commands.ab3"
0003C5E6 <internal_commands.ab3@2123> INCLUDE "internal_commands.ab3"
0003C5EA <internal_commands.ab3@2124> INCLUDE "internal_commands.ab3"
0003C5EC <internal_commands.ab3@2125> INCLUDE "internal_commands.ab3"
0003C5EE <internal_commands.ab3@2126> INCLUDE "internal_commands.ab3"
0003C5F2 <internal_commands.ab3@2127> INCLUDE "internal_commands.ab3"
0003C5F4 <internal_commands.ab3@2128> INCLUDE "internal_commands.ab3"
0003C5F8 <internal_commands.ab3@2132> INCLUDE "internal_commands.ab3"
0003C5FA <internal_commands.ab3@2133> INCLUDE "internal_commands.ab3"
0003C5FE <internal_commands.ab3@2134> INCLUDE "internal_commands.ab3"
0003C5FF <internal_commands.ab3@2135> INCLUDE "internal_commands.ab3"
0003C600 <internal_commands.ab3@2136> INCLUDE "internal_commands.ab3"
0003C602 <internal_commands.ab3@2138> INCLUDE "internal_commands.ab3"
0003C606 <internal_commands.ab3@2139> INCLUDE "internal_commands.ab3"
0003C608 <internal_commands.ab3@2140> INCLUDE "internal_commands.ab3"
0003C60A <internal_commands.ab3@2141> INCLUDE "internal_commands.ab3"
0003C60E <internal_commands.ab3@2142> INCLUDE "internal_commands.ab3"
0003C610 <internal_commands.ab3@2143> INCLUDE "internal_commands.ab3"
0003C614 <internal_commands.ab3@2147> INCLUDE "internal_commands.ab3"
0003C616 <internal_commands.ab3@2148> INCLUDE "internal_commands.ab3"
0003C61B <internal_commands.ab3@2149> INCLUDE "internal_commands.ab3"
0003C61C <internal_commands.ab3@2150> INCLUDE "internal_commands.ab3"
0003C61E <internal_commands.ab3@2153> INCLUDE "internal_commands.ab3"
0003C622 <internal_commands.ab3@2154> INCLUDE "internal_commands.ab3"
0003C624 <internal_commands.ab3@2155> INCLUDE "internal_commands.ab3"
0003C626 <internal_commands.ab3@2156> INCLUDE "internal_commands.ab3"
0003C62A <internal_commands.ab3@2157> INCLUDE "internal_commands.ab3"
0003C62C <internal_commands.ab3@2158> INCLUDE "internal_commands.ab3"
0003C630 <internal_commands.ab3@2162> INCLUDE "internal_commands.ab3"
0003C632 <internal_commands.ab3@2163> INCLUDE "internal_commands.ab3"
0003C638 <internal_commands.ab3@2164> INCLUDE "internal_commands.ab3"
0003C639 <internal_commands.ab3@2165> INCLUDE "internal_commands.ab3"
0003C63A <internal_commands.ab3@2166> INCLUDE "internal_commands.ab3"
0003C63C <internal_commands.ab3@2168> INCLUDE "internal_commands.ab3"
0003C640 <internal_commands.ab3@2169> INCLUDE "internal_commands.ab3"
0003C642 <internal_commands.ab3@2170> INCLUDE "internal_commands.ab3"
0003C644 <internal_commands.ab3@2171> INCLUDE "internal_commands.ab3"
0003C648 <internal_commands.ab3@2172> INCLUDE "internal_commands.ab3"
0003C64A <internal_commands.ab3@2173> INCLUDE "internal_commands.ab3"
0003C64E <internal_commands.ab3@2177> INCLUDE "internal_commands.ab3"
0003C650 <internal_commands.ab3@2178> INCLUDE "internal_commands.ab3"
0003C654 <internal_commands.ab3@2179> INCLUDE "internal_commands.ab3"
0003C655 <internal_commands.ab3@2180> INCLUDE "internal_commands.ab3"
0003C656 <internal_commands.ab3@2181> INCLUDE "internal_commands.ab3"
0003C658 <internal_commands.ab3@2183> INCLUDE "internal_commands.ab3"
0003C65C <internal_commands.ab3@2184> INCLUDE "internal_commands.ab3"
0003C65E <internal_commands.ab3@2185> INCLUDE "internal_commands.ab3"
0003C660 <internal_commands.ab3@2186> INCLUDE "internal_commands.ab3"
0003C664 <internal_commands.ab3@2187> INCLUDE "internal_commands.ab3"
0003C666 <internal_commands.ab3@2188> INCLUDE "internal_commands.ab3"
0003C66A <internal_commands.ab3@2192> INCLUDE "internal_commands.ab3"
0003C66C <internal_commands.ab3@2193> INCLUDE "internal_commands.ab3"
0003C671 <internal_commands.ab3@2194> INCLUDE "internal_commands.ab3"
0003C672 <internal_commands.ab3@2195> INCLUDE "internal_commands.ab3"
0003C674 <internal_commands.ab3@2198> INCLUDE "internal_commands.ab3"
0003C678 <internal_commands.ab3@2199> INCLUDE "internal_commands.ab3"
0003C67A <internal_commands.ab3@2200> INCLUDE "internal_commands.ab3"
0003C67C <internal_commands.ab3@2201> INCLUDE "internal_commands.ab3"
0003C680 <internal_commands.ab3@2202> INCLUDE "internal_commands.ab3"
0003C682 <internal_commands.ab3@2203> INCLUDE "internal_commands.ab3"
0003C686 <internal_commands.ab3@2208> INCLUDE "internal_commands.ab3"
0003C688 <internal_commands.ab3@2209> INCLUDE "internal_commands.ab3"
0003C68F <internal_commands.ab3@2210> INCLUDE "internal_commands.ab3"
0003C690 <internal_commands.ab3@2211> INCLUDE "internal_commands.ab3"
0003C692 <internal_commands.ab3@2230> INCLUDE "internal_commands.ab3"
0003C694 <internal_commands.ab3@2231> INCLUDE "internal_commands.ab3"
0003C696 <internal_commands.ab3@2235> INCLUDE "internal_commands.ab3"
0003C698 <internal_commands.ab3@2236> INCLUDE "internal_commands.ab3"
0003C69A <internal_commands.ab3@2240> INCLUDE "internal_commands.ab3"
0003C69C <internal_commands.ab3@2241> INCLUDE "internal_commands.ab3"
0003C69E <internal_commands.ab3@2245> INCLUDE "internal_commands.ab3"
0003C6A0 <internal_commands.ab3@2246> INCLUDE "internal_commands.ab3"
0003C6A2 <internal_commands.ab3@2251> INCLUDE "internal_commands.ab3"
0003C6A6 <internal_commands.ab3@2252> INCLUDE "internal_commands.ab3"
0003C6A8 <internal_commands.ab3@2253> INCLUDE "internal_commands.ab3"
0003C6AA <internal_commands.ab3@2254> INCLUDE "internal_commands.ab3"
0003C6AC <internal_commands.ab3@2255> INCLUDE "internal_commands.ab3"
0003C6AE <internal_commands.ab3@2256> INCLUDE "internal_commands.ab3"
0003C6B2 <internal_commands.ab3@2257> INCLUDE "internal_commands.ab3"
0003C6B8 <internal_commands.ab3@2260> INCLUDE "internal_commands.ab3"
0003C6BC <internal_commands.ab3@2261> INCLUDE "internal_commands.ab3"
0003C6BE <internal_commands.ab3@2262> INCLUDE "internal_commands.ab3"
0003C6C0 <internal_commands.ab3@2263> INCLUDE "internal_commands.ab3"
0003C6C2 <internal_commands.ab3@2264> INCLUDE "internal_commands.ab3"
0003C6C4 <internal_commands.ab3@2265> INCLUDE "internal_commands.ab3"
0003C6C6 <internal_commands.ab3@2266> INCLUDE "internal_commands.ab3"
0003C6C8 <internal_commands.ab3@2273> INCLUDE "internal_commands.ab3"
0003C6CC <internal_commands.ab3@2274> INCLUDE "internal_commands.ab3"
0003C6D0 <internal_commands.ab3@2275> INCLUDE "internal_commands.ab3"
0003C6D4 <internal_commands.ab3@2276> INCLUDE "internal_commands.ab3"
0003C6D8 <internal_commands.ab3@2277> INCLUDE "internal_commands.ab3"
0003C6DC <internal_commands.ab3@2278> INCLUDE "internal_commands.ab3"
0003C6DE <internal_commands.ab3@2281> INCLUDE "internal_commands.ab3"
0003C6E0 <internal_commands.ab3@2282> INCLUDE "internal_commands.ab3"
0003C6E4 <internal_commands.ab3@2283> INCLUDE "internal_commands.ab3"
0003C6E8 <internal_commands.ab3@2284> INCLUDE "internal_commands.ab3"
0003C6EC <internal_commands.ab3@2285> INCLUDE "internal_commands.ab3"
0003C6F0 <internal_commands.ab3@2286> INCLUDE "internal_commands.ab3"
0003C6F2 <internal_commands.ab3@2289> INCLUDE "internal_commands.ab3"
0003C6F4 <internal_commands.ab3@2290> INCLUDE "internal_commands.ab3"
0003C6F8 <internal_commands.ab3@2291> INCLUDE "internal_commands.ab3"
0003C6FC <internal_commands.ab3@2292> INCLUDE "internal_commands.ab3"
0003C700 <internal_commands.ab3@2293> INCLUDE "internal_commands.ab3"
0003C704 <internal_commands.ab3@2294> INCLUDE "internal_commands.ab3"
0003C706 <internal_commands.ab3@2295> INCLUDE "internal_commands.ab3"
0003C708 <internal_commands.ab3@2298> INCLUDE "internal_commands.ab3"
0003C70A <internal_commands.ab3@2299> INCLUDE "internal_commands.ab3"
0003C70E <internal_commands.ab3@2300> INCLUDE "internal_commands.ab3"
0003C710 <internal_commands.ab3@2302> INCLUDE "internal_commands.ab3"
0003C714 <internal_commands.ab3@2303> INCLUDE "internal_commands.ab3"
0003C716 <internal_commands.ab3@2307> INCLUDE "internal_commands.ab3"
0003C71A <internal_commands.ab3@2308> INCLUDE "internal_commands.ab3"
0003C71C <internal_commands.ab3@2309> INCLUDE "internal_commands.ab3"
0003C720 <internal_commands.ab3@2310> INCLUDE "internal_commands.ab3"
0003C724 <internal_commands.ab3@2311> INCLUDE "internal_commands.ab3"
0003C728 <internal_commands.ab3@2312> INCLUDE "internal_commands.ab3"
0003C72C <internal_commands.ab3@2316> INCLUDE "internal_commands.ab3"
0003C730 <internal_commands.ab3@2317> INCLUDE "internal_commands.ab3"
0003C734 <internal_commands.ab3@2319> INCLUDE "internal_commands.ab3"
0003C738 <internal_commands.ab3@2320> INCLUDE "internal_commands.ab3"
0003C73C <internal_commands.ab3@2321> INCLUDE "internal_commands.ab3"
0003C740 <internal_commands.ab3@2322> INCLUDE "internal_commands.ab3"
0003C744 <internal_commands.ab3@2323> INCLUDE "internal_commands.ab3"
0003C748 <internal_commands.ab3@2324> INCLUDE "internal_commands.ab3"
0003C74C <internal_commands.ab3@2325> INCLUDE "internal_commands.ab3"
0003C750 <internal_commands.ab3@2326> INCLUDE "internal_commands.ab3"
0003C754 <internal_commands.ab3@2328> INCLUDE "internal_commands.ab3"
0003C758 <internal_commands.ab3@2331> INCLUDE "internal_commands.ab3"
0003C75C <internal_commands.ab3@2332> INCLUDE "internal_commands.ab3"
0003C760 <internal_commands.ab3@2334> INCLUDE "internal_commands.ab3"
0003C764 <internal_commands.ab3@2335> INCLUDE "internal_commands.ab3"
0003C768 <internal_commands.ab3@2336> INCLUDE "internal_commands.ab3"
0003C76C <internal_commands.ab3@2337> INCLUDE "internal_commands.ab3"
0003C770 <internal_commands.ab3@2338> INCLUDE "internal_commands.ab3"
0003C774 <internal_commands.ab3@2339> INCLUDE "internal_commands.ab3"
0003C778 <internal_commands.ab3@2340> INCLUDE "internal_commands.ab3"
0003C77C <internal_commands.ab3@2341> INCLUDE "internal_commands.ab3"
0003C780 <internal_commands.ab3@2343> INCLUDE "internal_commands.ab3"
0003C784 <internal_commands.ab3@2346> INCLUDE "internal_commands.ab3"
0003C786 <internal_commands.ab3@2347> INCLUDE "internal_commands.ab3"
0003C78A <internal_commands.ab3@2348> INCLUDE "internal_commands.ab3"
0003C78E <internal_commands.ab3@2349> INCLUDE "internal_commands.ab3"
0003C792 <internal_commands.ab3@2350> INCLUDE "internal_commands.ab3"
0003C796 <internal_commands.ab3@2351> INCLUDE "internal_commands.ab3"
0003C79A <internal_commands.ab3@2352> INCLUDE "internal_commands.ab3"
0003C79E <internal_commands.ab3@2353> INCLUDE "internal_commands.ab3"
0003C7A2 <internal_commands.ab3@2356> INCLUDE "internal_commands.ab3"
0003C7A6 <internal_commands.ab3@2357> INCLUDE "internal_commands.ab3"
0003C7AA <internal_commands.ab3@2358> INCLUDE "internal_commands.ab3"
0003C7AC <internal_commands.ab3@2359> INCLUDE "internal_commands.ab3"
0003C7AE <internal_commands.ab3@2362> INCLUDE "internal_commands.ab3"
0003C7B0 <internal_commands.ab3@2363> INCLUDE "internal_commands.ab3"
0003C7B2 <internal_commands.ab3@2364> INCLUDE "internal_commands.ab3"
0003C7B4 <internal_commands.ab3@2365> INCLUDE "internal_commands.ab3"
0003C7B8 <internal_commands.ab3@2366> INCLUDE "internal_commands.ab3"
0003C7BC <internal_commands.ab3@2369> INCLUDE "internal_commands.ab3"
0003C7C0 <internal_commands.ab3@2370> INCLUDE "internal_commands.ab3"
0003C7C4 <internal_commands.ab3@2371> INCLUDE "internal_commands.ab3"
0003C7C6 <internal_commands.ab3@2372> INCLUDE "internal_commands.ab3"
0003C7CA <internal_commands.ab3@2373> INCLUDE "internal_commands.ab3"
0003C7CE <internal_commands.ab3@2376> INCLUDE "internal_commands.ab3"
0003C7D2 <internal_commands.ab3@2379> INCLUDE "internal_commands.ab3"
0003C7D6 <internal_commands.ab3@2380> INCLUDE "internal_commands.ab3"
0003C7D8 <internal_commands.ab3@2381> INCLUDE "internal_commands.ab3"
0003C7DA <internal_commands.ab3@2382> INCLUDE "internal_commands.ab3"
0003C7DE <internal_commands.ab3@2383> INCLUDE "internal_commands.ab3"
0003C7E2 <internal_commands.ab3@2386> INCLUDE "internal_commands.ab3"
0003C7E6 <internal_commands.ab3@2387> INCLUDE "internal_commands.ab3"
0003C7EA <internal_commands.ab3@2390> INCLUDE "internal_commands.ab3"
0003C7EE <internal_commands.ab3@2393> INCLUDE "internal_commands.ab3"
0003C7F2 <internal_commands.ab3@2394> INCLUDE "internal_commands.ab3"
0003C7F4 <internal_commands.ab3@2395> INCLUDE "internal_commands.ab3"
0003C7F6 <internal_commands.ab3@2396> INCLUDE "internal_commands.ab3"
0003C7FA <internal_commands.ab3@2397> INCLUDE "internal_commands.ab3"
0003C7FE <internal_commands.ab3@2400> INCLUDE "internal_commands.ab3"
0003C802 <internal_commands.ab3@2401> INCLUDE "internal_commands.ab3"
0003C804 <internal_commands.ab3@2405> INCLUDE "internal_commands.ab3"
0003C808 <internal_commands.ab3@2406> INCLUDE "internal_commands.ab3"
0003C80C <internal_commands.ab3@2407> INCLUDE "internal_commands.ab3"
0003C80E <internal_commands.ab3@2408> INCLUDE "internal_commands.ab3"
0003C812 <internal_commands.ab3@2409> INCLUDE "internal_commands.ab3"
0003C816 <internal_commands.ab3@2410> INCLUDE "internal_commands.ab3"
0003C818 <internal_commands.ab3@2413> INCLUDE "internal_commands.ab3"
0003C81C <internal_commands.ab3@2414> INCLUDE "internal_commands.ab3"
0003C820 <internal_commands.ab3@2415> INCLUDE "internal_commands.ab3"
0003C824 <internal_commands.ab3@2416> INCLUDE "internal_commands.ab3"
0003C828 <internal_commands.ab3@2419> INCLUDE "internal_commands.ab3"
0003C82C <internal_commands.ab3@2420> INCLUDE "internal_commands.ab3"
0003C82E <internal_commands.ab3@2424> INCLUDE "internal_commands.ab3"
0003C832 <internal_commands.ab3@2425> INCLUDE "internal_commands.ab3"
0003C834 <internal_commands.ab3@2426> INCLUDE "internal_commands.ab3"
0003C836 <internal_commands.ab3@2427> INCLUDE "internal_commands.ab3"
0003C838 <internal_commands.ab3@2428> INCLUDE "internal_commands.ab3"
0003C83C <internal_commands.ab3@2429> INCLUDE "internal_commands.ab3"
0003C840 <internal_commands.ab3@2432> INCLUDE "internal_commands.ab3"
0003C844 <internal_commands.ab3@2433> INCLUDE "internal_commands.ab3"
0003C848 <internal_commands.ab3@2434> INCLUDE "internal_commands.ab3"
0003C84C <internal_commands.ab3@2435> INCLUDE "internal_commands.ab3"
0003C850 <internal_commands.ab3@2439> INCLUDE "internal_commands.ab3"
0003C854 <internal_commands.ab3@2440> INCLUDE "internal_commands.ab3"
0003C858 <internal_commands.ab3@2444> INCLUDE "internal_commands.ab3"
0003C85C <internal_commands.ab3@2445> INCLUDE "internal_commands.ab3"
0003C860 <internal_commands.ab3@2449> INCLUDE "internal_commands.ab3"
0003C864 <internal_commands.ab3@2450> INCLUDE "internal_commands.ab3"
0003C868 <internal_commands.ab3@2454> INCLUDE "internal_commands.ab3"
0003C86A <internal_commands.ab3@2456> INCLUDE "internal_commands.ab3"
0003C86E <internal_commands.ab3@2457> INCLUDE "internal_commands.ab3"
0003C872 <internal_commands.ab3@2458> INCLUDE "internal_commands.ab3"
0003C874 <internal_commands.ab3@2459> INCLUDE "internal_commands.ab3"
0003C876 <internal_commands.ab3@2460> INCLUDE "internal_commands.ab3"
0003C878 <internal_commands.ab3@2461> INCLUDE "internal_commands.ab3"
0003C87C <internal_commands.ab3@2462> INCLUDE "internal_commands.ab3"
0003C880 <internal_commands.ab3@2463> INCLUDE "internal_commands.ab3"
0003C882 <internal_commands.ab3@2464> INCLUDE "internal_commands.ab3"
0003C886 <internal_commands.ab3@2465> INCLUDE "internal_commands.ab3"
0003C888 <internal_commands.ab3@2466> INCLUDE "internal_commands.ab3"
0003C88A <internal_commands.ab3@2467> INCLUDE "internal_commands.ab3"
0003C88C <internal_commands.ab3@2468> INCLUDE "internal_commands.ab3"
0003C890 <internal_commands.ab3@2469> INCLUDE "internal_commands.ab3"
0003C894 <internal_commands.ab3@2470> INCLUDE "internal_commands.ab3"
0003C896 <internal_commands.ab3@2473> INCLUDE "internal_commands.ab3"
0003C898 <internal_commands.ab3@2474> INCLUDE "internal_commands.ab3"
0003C89C <internal_commands.ab3@2475> INCLUDE "internal_commands.ab3"
0003C8A0 <internal_commands.ab3@2476> INCLUDE "internal_commands.ab3"
0003C8A4 <internal_commands.ab3@2477> INCLUDE "internal_commands.ab3"
0003C8A8 <internal_commands.ab3@2478> INCLUDE "internal_commands.ab3"
0003C8AA <internal_commands.ab3@2479> INCLUDE "internal_commands.ab3"
0003C8AE <internal_commands.ab3@2480> INCLUDE "internal_commands.ab3"
0003C8B2 <internal_commands.ab3@2481> INCLUDE "internal_commands.ab3"
0003C8B6 <internal_commands.ab3@2482> INCLUDE "internal_commands.ab3"
0003C8B8 <internal_commands.ab3@2483> INCLUDE "internal_commands.ab3"
0003C8BA <internal_commands.ab3@2484> INCLUDE "internal_commands.ab3"
0003C8BC <internal_commands.ab3@2485> INCLUDE "internal_commands.ab3"
0003C8BE <internal_commands.ab3@2488> INCLUDE "internal_commands.ab3"
0003C8C0 <internal_commands.ab3@2489> INCLUDE "internal_commands.ab3"
0003C8C2 <internal_commands.ab3@2490> INCLUDE "internal_commands.ab3"
0003C8C6 <internal_commands.ab3@2491> INCLUDE "internal_commands.ab3"
0003C8CA <internal_commands.ab3@2492> INCLUDE "internal_commands.ab3"
0003C8CC <internal_commands.ab3@2496> INCLUDE "internal_commands.ab3"
0003C8D0 <internal_commands.ab3@2497> INCLUDE "internal_commands.ab3"
0003C8D2 <internal_commands.ab3@2498> INCLUDE "internal_commands.ab3"
0003C8D6 <internal_commands.ab3@2499> INCLUDE "internal_commands.ab3"
0003C8DA <internal_commands.ab3@2500> INCLUDE "internal_commands.ab3"
0003C8DC <internal_commands.ab3@2501> INCLUDE "internal_commands.ab3"
0003C8DE <internal_commands.ab3@2504> INCLUDE "internal_commands.ab3"
0003C8E0 <internal_commands.ab3@2508> INCLUDE "internal_commands.ab3"
0003C8E4 <internal_commands.ab3@2509> INCLUDE "internal_commands.ab3"
0003C8E6 <internal_commands.ab3@2510> INCLUDE "internal_commands.ab3"
0003C8EA <internal_commands.ab3@2511> INCLUDE "internal_commands.ab3"
0003C8EE <internal_commands.ab3@2512> INCLUDE "internal_commands.ab3"
0003C8F2 <internal_commands.ab3@2513> INCLUDE "internal_commands.ab3"
0003C8F4 <internal_commands.ab3@2516> INCLUDE "internal_commands.ab3"
0003C8F8 <internal_commands.ab3@2520> INCLUDE "internal_commands.ab3"
0003C8FC <internal_commands.ab3@2521> INCLUDE "internal_commands.ab3"
0003C8FE <internal_commands.ab3@2522> INCLUDE "internal_commands.ab3"
0003C902 <internal_commands.ab3@2523> INCLUDE "internal_commands.ab3"
0003C906 <internal_commands.ab3@2524> INCLUDE "internal_commands.ab3"
0003C90A <internal_commands.ab3@2527> INCLUDE "internal_commands.ab3"
0003C90E <internal_commands.ab3@2528> INCLUDE "internal_commands.ab3"
0003C912 <internal_commands.ab3@2529> INCLUDE "internal_commands.ab3"
0003C916 <internal_commands.ab3@2530> INCLUDE "internal_commands.ab3"
0003C91A <internal_commands.ab3@2531> INCLUDE "internal_commands.ab3"
0003C91E <internal_commands.ab3@2538> INCLUDE "internal_commands.ab3"
0003C920 <internal_commands.ab3@2539> INCLUDE "internal_commands.ab3"
0003C925 <internal_commands.ab3@2540> INCLUDE "internal_commands.ab3"
0003C926 <internal_commands.ab3@2541> INCLUDE "internal_commands.ab3"
0003C92A <internal_commands.ab3@2545> INCLUDE "internal_commands.ab3"
0003C92C <internal_commands.ab3@2546> INCLUDE "internal_commands.ab3"
0003C933 <internal_commands.ab3@2547> INCLUDE "internal_commands.ab3"
0003C934 <internal_commands.ab3@2548> INCLUDE "internal_commands.ab3"
0003C938 <internal_commands.ab3@2552> INCLUDE "internal_commands.ab3"
0003C93A <internal_commands.ab3@2553> INCLUDE "internal_commands.ab3"
0003C941 <internal_commands.ab3@2554> INCLUDE "internal_commands.ab3"
0003C942 <internal_commands.ab3@2555> INCLUDE "internal_commands.ab3"
0003C946 <internal_commands.ab3@2559> INCLUDE "internal_commands.ab3"
0003C948 <internal_commands.ab3@2560> INCLUDE "internal_commands.ab3"
0003C950 <internal_commands.ab3@2561> INCLUDE "internal_commands.ab3"
0003C951 <internal_commands.ab3@2562> INCLUDE "internal_commands.ab3"
0003C952 <internal_commands.ab3@2563> INCLUDE "internal_commands.ab3"
0003C956 <internal_commands.ab3@2566> INCLUDE "internal_commands.ab3"
0003C958 <internal_commands.ab3@2567> INCLUDE "internal_commands.ab3"
0003C95D <internal_commands.ab3@2568> INCLUDE "internal_commands.ab3"
0003C971 <internal_commands.ab3@2569> INCLUDE "internal_commands.ab3"
0003C972 <internal_commands.ab3@2570> INCLUDE "internal_commands.ab3"
0003C976 <internal_commands.ab3@2573> INCLUDE "internal_commands.ab3"
0003C978 <internal_commands.ab3@2574> INCLUDE "internal_commands.ab3"
0003C97C <internal_commands.ab3@2575> INCLUDE "internal_commands.ab3"
0003C97D <internal_commands.ab3@2576> INCLUDE "internal_commands.ab3"
0003C97E <internal_commands.ab3@2577> INCLUDE "internal_commands.ab3"
0003C982 <internal_commands.ab3@2580> INCLUDE "internal_commands.ab3"
0003C984 <internal_commands.ab3@2581> INCLUDE "internal_commands.ab3"
0003C987 <internal_commands.ab3@2582> INCLUDE "internal_commands.ab3"
0003C988 <internal_commands.ab3@2583> INCLUDE "internal_commands.ab3"
0003C98C <internal_commands.ab3@2587> INCLUDE "internal_commands.ab3"
0003C98E <internal_commands.ab3@2588> INCLUDE "internal_commands.ab3"
0003C995 <internal_commands.ab3@2589> INCLUDE "internal_commands.ab3"
0003C996 <internal_commands.ab3@2590> INCLUDE "internal_commands.ab3"
0003C99A <internal_commands.ab3@2594> INCLUDE "internal_commands.ab3"
0003C99C <internal_commands.ab3@2595> INCLUDE "internal_commands.ab3"
0003C9A2 <internal_commands.ab3@2596> INCLUDE "internal_commands.ab3"
0003C9AF <internal_commands.ab3@2597> INCLUDE "internal_commands.ab3"
0003C9B0 <internal_commands.ab3@2598> INCLUDE "internal_commands.ab3"
0003C9B4 <internal_commands.ab3@2601> INCLUDE "internal_commands.ab3"
0003C9B6 <internal_commands.ab3@2602> INCLUDE "internal_commands.ab3"
0003C9BD <internal_commands.ab3@2603> INCLUDE "internal_commands.ab3"
0003C9D5 <internal_commands.ab3@2604> INCLUDE "internal_commands.ab3"
0003C9D6 <internal_commands.ab3@2605> INCLUDE "internal_commands.ab3"
0003C9DA <internal_commands.ab3@2608> INCLUDE "internal_commands.ab3"
0003C9DC <internal_commands.ab3@2609> INCLUDE "internal_commands.ab3"
0003C9E0 <internal_commands.ab3@2610> INCLUDE "internal_commands.ab3"
0003CA03 <internal_commands.ab3@2611> INCLUDE "internal_commands.ab3"
0003CA04 <internal_commands.ab3@2612> INCLUDE "internal_commands.ab3"
0003CA08 <internal_commands.ab3@2615> INCLUDE "internal_commands.ab3"
0003CA0A <internal_commands.ab3@2616> INCLUDE "internal_commands.ab3"
0003CA11 <internal_commands.ab3@2617> INCLUDE "internal_commands.ab3"
0003CA1C <internal_commands.ab3@2618> INCLUDE "internal_commands.ab3"
0003CA20 <internal_commands.ab3@2622> INCLUDE "internal_commands.ab3"
0003CA22 <internal_commands.ab3@2623> INCLUDE "internal_commands.ab3"
0003CA28 <internal_commands.ab3@2624> INCLUDE "internal_commands.ab3"
0003CA29 <internal_commands.ab3@2625> INCLUDE "internal_commands.ab3"
0003CA2A <internal_commands.ab3@2626> INCLUDE "internal_commands.ab3"
0003CA2E <internal_commands.ab3@2629> INCLUDE "internal_commands.ab3"
0003CA30 <internal_commands.ab3@2630> INCLUDE "internal_commands.ab3"
0003CA35 <internal_commands.ab3@2631> INCLUDE "internal_commands.ab3"
0003CA36 <internal_commands.ab3@2632> INCLUDE "internal_commands.ab3"
0003CA3A <internal_commands.ab3@2636> INCLUDE "internal_commands.ab3"
0003CA3C <internal_commands.ab3@2637> INCLUDE "internal_commands.ab3"
0003CA43 <internal_commands.ab3@2638> INCLUDE "internal_commands.ab3"
0003CA55 <internal_commands.ab3@2639> INCLUDE "internal_commands.ab3"
0003CA56 <internal_commands.ab3@2640> INCLUDE "internal_commands.ab3"
0003CA5A <internal_commands.ab3@2643> INCLUDE "internal_commands.ab3"
0003CA5C <internal_commands.ab3@2644> INCLUDE "internal_commands.ab3"
0003CA66 <internal_commands.ab3@2645> INCLUDE "internal_commands.ab3"
0003CA67 <internal_commands.ab3@2646> INCLUDE "internal_commands.ab3"
0003CA68 <internal_commands.ab3@2647> INCLUDE "internal_commands.ab3"
0003CA6C <internal_commands.ab3@2650> INCLUDE "internal_commands.ab3"
0003CA6E <internal_commands.ab3@2651> INCLUDE "internal_commands.ab3"
0003CA76 <internal_commands.ab3@2652> INCLUDE "internal_commands.ab3"
0003CA83 <internal_commands.ab3@2653> INCLUDE "internal_commands.ab3"
0003CA84 <internal_commands.ab3@2654> INCLUDE "internal_commands.ab3"
0003CA88 <internal_commands.ab3@2657> INCLUDE "internal_commands.ab3"
0003CA8A <internal_commands.ab3@2658> INCLUDE "internal_commands.ab3"
0003CA8D <internal_commands.ab3@2659> INCLUDE "internal_commands.ab3"
0003CAC8 <internal_commands.ab3@2660> INCLUDE "internal_commands.ab3"
0003CACC <internal_commands.ab3@2664> INCLUDE "internal_commands.ab3"
0003CACE <internal_commands.ab3@2665> INCLUDE "internal_commands.ab3"
0003CAD2 <internal_commands.ab3@2666> INCLUDE "internal_commands.ab3"
0003CAD3 <internal_commands.ab3@2667> INCLUDE "internal_commands.ab3"
0003CAD4 <internal_commands.ab3@2668> INCLUDE "internal_commands.ab3"
0003CAD8 <internal_commands.ab3@2671> INCLUDE "internal_commands.ab3"
0003CADA <internal_commands.ab3@2672> INCLUDE "internal_commands.ab3"
0003CAE2 <internal_commands.ab3@2673> INCLUDE "internal_commands.ab3"
0003CAE3 <internal_commands.ab3@2674> INCLUDE "internal_commands.ab3"
0003CAE4 <internal_commands.ab3@2675> INCLUDE "internal_commands.ab3"
0003CAE8 <internal_commands.ab3@2678> INCLUDE "internal_commands.ab3"
0003CAEA <internal_commands.ab3@2679> INCLUDE "internal_commands.ab3"
0003CAF2 <internal_commands.ab3@2680> INCLUDE "internal_commands.ab3"
0003CB02 <internal_commands.ab3@2681> INCLUDE "internal_commands.ab3"
0003CB06 <internal_commands.ab3@2685> INCLUDE "internal_commands.ab3"
0003CB08 <internal_commands.ab3@2686> INCLUDE "internal_commands.ab3"
0003CB11 <internal_commands.ab3@2687> INCLUDE "internal_commands.ab3"
0003CB19 <internal_commands.ab3@2688> INCLUDE "internal_commands.ab3"
0003CB1A <internal_commands.ab3@2689> INCLUDE "internal_commands.ab3"
0003CB1E <internal_commands.ab3@2692> INCLUDE "internal_commands.ab3"
0003CB20 <internal_commands.ab3@2693> INCLUDE "internal_commands.ab3"
0003CB28 <internal_commands.ab3@2694> INCLUDE "internal_commands.ab3"
0003CB31 <internal_commands.ab3@2695> INCLUDE "internal_commands.ab3"
0003CB32 <internal_commands.ab3@2696> INCLUDE "internal_commands.ab3"
0003CB36 <internal_commands.ab3@2699> INCLUDE "internal_commands.ab3"
0003CB38 <internal_commands.ab3@2700> INCLUDE "internal_commands.ab3"
0003CB40 <internal_commands.ab3@2701> INCLUDE "internal_commands.ab3"
0003CB41 <internal_commands.ab3@2702> INCLUDE "internal_commands.ab3"
0003CB42 <internal_commands.ab3@2703> INCLUDE "internal_commands.ab3"
0003CB46 <internal_commands.ab3@2706> INCLUDE "internal_commands.ab3"
0003CB48 <internal_commands.ab3@2707> INCLUDE "internal_commands.ab3"
0003CB4E <internal_commands.ab3@2708> INCLUDE "internal_commands.ab3"
0003CB4F <internal_commands.ab3@2709> INCLUDE "internal_commands.ab3"
0003CB50 <internal_commands.ab3@2710> INCLUDE "internal_commands.ab3"
0003CB54 <internal_commands.ab3@2713> INCLUDE "internal_commands.ab3"
0003CB56 <internal_commands.ab3@2714> INCLUDE "internal_commands.ab3"
0003CB5D <internal_commands.ab3@2715> INCLUDE "internal_commands.ab3"
0003CB5E <internal_commands.ab3@2716> INCLUDE "internal_commands.ab3"
0003CB62 <internal_commands.ab3@2720> INCLUDE "internal_commands.ab3"
0003CB64 <internal_commands.ab3@2721> INCLUDE "internal_commands.ab3"
0003CB6B <internal_commands.ab3@2722> INCLUDE "internal_commands.ab3"
0003CB6C <internal_commands.ab3@2723> INCLUDE "internal_commands.ab3"
0003CB70 <internal_commands.ab3@2727> INCLUDE "internal_commands.ab3"
0003CB72 <internal_commands.ab3@2728> INCLUDE "internal_commands.ab3"
0003CB79 <internal_commands.ab3@2729> INCLUDE "internal_commands.ab3"
0003CB7A <internal_commands.ab3@2730> INCLUDE "internal_commands.ab3"
0003CB7E <internal_commands.ab3@2734> INCLUDE "internal_commands.ab3"
0003CB80 <internal_commands.ab3@2735> INCLUDE "internal_commands.ab3"
0003CB87 <internal_commands.ab3@2736> INCLUDE "internal_commands.ab3"
0003CB88 <internal_commands.ab3@2737> INCLUDE "internal_commands.ab3"
0003CB8C <internal_commands.ab3@2741> INCLUDE "internal_commands.ab3"
0003CB8E <internal_commands.ab3@2742> INCLUDE "internal_commands.ab3"
0003CB93 <internal_commands.ab3@2743> INCLUDE "internal_commands.ab3"
0003CBA9 <internal_commands.ab3@2744> INCLUDE "internal_commands.ab3"
0003CBAA <internal_commands.ab3@2745> INCLUDE "internal_commands.ab3"
0003CBAE <internal_commands.ab3@2748> INCLUDE "internal_commands.ab3"
0003CBB0 <internal_commands.ab3@2749> INCLUDE "internal_commands.ab3"
0003CBBA <internal_commands.ab3@2750> INCLUDE "internal_commands.ab3"
0003CBBB <internal_commands.ab3@2751> INCLUDE "internal_commands.ab3"
0003CBBC <internal_commands.ab3@2752> INCLUDE "internal_commands.ab3"
0003CBC0 <internal_commands.ab3@2755> INCLUDE "internal_commands.ab3"
0003CBC2 <internal_commands.ab3@2756> INCLUDE "internal_commands.ab3"
0003CBCD <internal_commands.ab3@2757> INCLUDE "internal_commands.ab3"
0003CBCE <internal_commands.ab3@2758> INCLUDE "internal_commands.ab3"
0003CBD2 <internal_commands.ab3@2762> INCLUDE "internal_commands.ab3"
0003CBD4 <internal_commands.ab3@2763> INCLUDE "internal_commands.ab3"
0003CBE0 <internal_commands.ab3@2764> INCLUDE "internal_commands.ab3"
0003CC0D <internal_commands.ab3@2765> INCLUDE "internal_commands.ab3"
0003CC0E <internal_commands.ab3@2766> INCLUDE "internal_commands.ab3"
0003CC12 <internal_commands.ab3@2769> INCLUDE "internal_commands.ab3"
0003CC14 <internal_commands.ab3@2770> INCLUDE "internal_commands.ab3"
0003CC1C <internal_commands.ab3@2771> INCLUDE "internal_commands.ab3"
0003CC53 <internal_commands.ab3@2772> INCLUDE "internal_commands.ab3"
0003CC54 <internal_commands.ab3@2773> INCLUDE "internal_commands.ab3"
0003CC58 <internal_commands.ab3@2776> INCLUDE "internal_commands.ab3"
0003CC5A <internal_commands.ab3@2777> INCLUDE "internal_commands.ab3"
0003CC62 <internal_commands.ab3@2778> INCLUDE "internal_commands.ab3"
0003CC81 <internal_commands.ab3@2779> INCLUDE "internal_commands.ab3"
0003CC82 <internal_commands.ab3@2780> INCLUDE "internal_commands.ab3"
0003CC86 <internal_commands.ab3@2783> INCLUDE "internal_commands.ab3"
0003CC88 <internal_commands.ab3@2784> INCLUDE "internal_commands.ab3"
0003CC8F <internal_commands.ab3@2785> INCLUDE "internal_commands.ab3"
0003CCC5 <internal_commands.ab3@2786> INCLUDE "internal_commands.ab3"
0003CCC6 <internal_commands.ab3@2787> INCLUDE "internal_commands.ab3"
0003CCCA <internal_commands.ab3@2790> INCLUDE "internal_commands.ab3"
0003CCCC <internal_commands.ab3@2791> INCLUDE "internal_commands.ab3"
0003CCD5 <internal_commands.ab3@2792> INCLUDE "internal_commands.ab3"
0003CD0A <internal_commands.ab3@2793> INCLUDE "internal_commands.ab3"
0003CD0E <internal_commands.ab3@2797> INCLUDE "internal_commands.ab3"
0003CD10 <internal_commands.ab3@2798> INCLUDE "internal_commands.ab3"
0003CD20 <internal_commands.ab3@2799> INCLUDE "internal_commands.ab3"
0003CD57 <internal_commands.ab3@2800> INCLUDE "internal_commands.ab3"
0003CD58 <internal_commands.ab3@2801> INCLUDE "internal_commands.ab3"
0003CD58 <AmiBlitz3.ab3@28401> INCLUDE "internal_commands.ab3"
0003CD5C <AmiBlitz3.ab3@28406>            Dc.l cif_lt                                     ;ciflt
0003CD60 <AmiBlitz3.ab3@28407>            Dc.l cif_eq                                     ;cifeq
0003CD64 <AmiBlitz3.ab3@28408>            Dc.l cif_gt                                     ;cifgt
0003CD68 <AmiBlitz3.ab3@28409>            Ds.l 1                                          ;0
0003CD6C <AmiBlitz3.ab3@28410>            Dc.l cif_le                                     ;cifle
0003CD70 <AmiBlitz3.ab3@28411>            Dc.l cif_ne                                     ;cifne
0003CD74 <AmiBlitz3.ab3@28412>            Dc.l cif_le                                     ;cifge
0003CD78 <AmiBlitz3.ab3@28413>            Ds.l 1                                          ;0
0003CD7C <AmiBlitz3.ab3@28414>            Dc.l cif_ge                                     ;cifge
0003CD80 <AmiBlitz3.ab3@28415>            Dc.l cif_ne                                     ;cifne
0003CD84 <AmiBlitz3.ab3@28416>            Dc.l cif_ge                                     ;cifge
0003CD88 <AmiBlitz3.ab3@28417>            Ds.l 1                                          ;0
0003CD8C <AmiBlitz3.ab3@28420>            Dc.l do_newtype                                 ;donewtype
0003CD90 <AmiBlitz3.ab3@28421>            Dc.l do_end                                     ;doend
0003CD94 <AmiBlitz3.ab3@28422>            Dc.l do_let                                     ;dolet
0003CD98 <AmiBlitz3.ab3@28423>            Dc.l do_dim                                     ;dodim
0003CD9C <AmiBlitz3.ab3@28424>            Dc.l do_goto                                    ;dogoto
0003CDA0 <AmiBlitz3.ab3@28425>            Dc.l do_gosub                                   ;dogosub
0003CDA4 <AmiBlitz3.ab3@28426>            Dc.l do_return                                  ;doreturn
0003CDA8 <AmiBlitz3.ab3@28427>            Dc.l do_statement                               ;dostatement
0003CDAC <AmiBlitz3.ab3@28428>            Dc.l do_function                                ;dofunc
0003CDB0 <AmiBlitz3.ab3@28429>            Dc.l do_mousewait                               ;domwait
0003CDB4 <AmiBlitz3.ab3@28430>            Dc.l do_if                                      ;doif
0003CDB8 <AmiBlitz3.ab3@28431>            Dc.l do_while                                   ;dowhile
0003CDBC <AmiBlitz3.ab3@28432>            Dc.l do_Macro                                   ;domacro
0003CDC0 <AmiBlitz3.ab3@28433>            Dc.l do_select                                  ;doselect
0003CDC4 <AmiBlitz3.ab3@28434>            Dc.l do_case                                    ;docase
0003CDC8 <AmiBlitz3.ab3@28435>            Dc.l do_default                                 ;dodefault
0003CDCC <AmiBlitz3.ab3@28436>            Dc.l do_AsmExit                                 ;doasmexit
0003CDD0 <AmiBlitz3.ab3@28437>            Dc.l do_xinclude                                ;doxinclude
0003CDD4 <AmiBlitz3.ab3@28438>            Dc.l do_INCLUDE                                 ;doinclude
0003CDD8 <AmiBlitz3.ab3@28439>            Dc.l do_syntax                                  ;syntaxerr
0003CDDC <AmiBlitz3.ab3@28440>            Dc.l do_shared                                  ;doshared
0003CDE0 <AmiBlitz3.ab3@28441>            Dc.l do_for                                     ;dofor
0003CDE4 <AmiBlitz3.ab3@28442>            Dc.l do_next                                    ;donext
0003CDE8 <AmiBlitz3.ab3@28443>            Dc.l syntaxerr                                  ; To
0003CDEC <AmiBlitz3.ab3@28444>            Dc.l syntaxerr                                  ; Step
0003CDF0 <AmiBlitz3.ab3@28445>            Dc.l do_data                                    ;dodata
0003CDF4 <AmiBlitz3.ab3@28446>            Dc.l do_read                                    ;doread
0003CDF8 <AmiBlitz3.ab3@28450>            Dc.l syntaxerr                                  ; CNIF
0003CDFC <AmiBlitz3.ab3@28451>            Dc.l syntaxerr                                  ; CSIF
0003CE00 <AmiBlitz3.ab3@28452>            Dc.l syntaxerr                                  ; CELSE
0003CE04 <AmiBlitz3.ab3@28453>            Dc.l syntaxerr                                  ; CEND
0003CE08 <AmiBlitz3.ab3@28454>            Dc.l do_cerr                                    ;docerr
0003CE0C <AmiBlitz3.ab3@28455>            Dc.l do_then                                    ;dothen
0003CE10 <AmiBlitz3.ab3@28456>            Dc.l do_else                                    ;doelse
0003CE14 <AmiBlitz3.ab3@28457>            Dc.l do_even4                                   ;doeven4
0003CE18 <AmiBlitz3.ab3@28458>            Dc.l do_even8                                   ;doeven8
0003CE1C <AmiBlitz3.ab3@28460>            Dc.l do_dc                                      ;dodc
0003CE20 <AmiBlitz3.ab3@28461>            Dc.l do_ds                                      ;dods
0003CE24 <AmiBlitz3.ab3@28462>            Dc.l do_even                                    ;doeven
0003CE28 <AmiBlitz3.ab3@28463>            Dc.l do_dcb                                     ;dodcb
0003CE2C <AmiBlitz3.ab3@28464>            Dc.l do_setreg                                  ;dosetreg
0003CE30 <AmiBlitz3.ab3@28465>            Dc.l do_IncBin                                  ;doincbin
0003CE34 <AmiBlitz3.ab3@28466>            Dc.l do_free                                    ;dofree
0003CE38 <AmiBlitz3.ab3@28467>            Dc.l do_use                                     ;douse
0003CE3C <AmiBlitz3.ab3@28468>            Dc.l do_Stop                                    ;dostop
0003CE40 <AmiBlitz3.ab3@28469>            Dc.l do_Cont                                    ;docont
0003CE44 <AmiBlitz3.ab3@28470>            Dc.l syntaxerr                                  ;syntaxeer
0003CE48 <AmiBlitz3.ab3@28471>            Dc.l do_SetInt                                  ;dosetint
0003CE4C <AmiBlitz3.ab3@28472>            Dc.l do_ClrInt                                  ;doclrint
0003CE50 <AmiBlitz3.ab3@28473>            Dc.l do_MaxLen                                  ;domaxlen
0003CE54 <AmiBlitz3.ab3@28474>            Dc.l do_DEFTYPE                                 ;dodeftype
0003CE58 <AmiBlitz3.ab3@28475>            Dc.l do_BLITZ                                   ;doblitz
0003CE5C <AmiBlitz3.ab3@28476>            Dc.l do_AMIGA                                   ;doamiga
0003CE60 <AmiBlitz3.ab3@28477>            Dc.l do_QAMIGA                                  ;doqamiga
0003CE64 <AmiBlitz3.ab3@28478>            Dc.l do_VWait                                   ;dovwait
0003CE68 <AmiBlitz3.ab3@28479>            Dc.l do_LibJsr                                  ;dolibjsr
0003CE6C <AmiBlitz3.ab3@28480>            Dc.l do_TokeJsr                                 ;dotokejsr
0003CE70 <AmiBlitz3.ab3@28481>            Dc.l do_BLibJsr                                 ;doblibjsr
0003CE74 <AmiBlitz3.ab3@28482>            Dc.l _extb                                      ;syntaxerr
0003CE78 <AmiBlitz3.ab3@28486>            Dc.l syntaxerr                                  ;syntaxerr      ;flash2 ; for list
0003CE7C <AmiBlitz3.ab3@28487>            Dc.l do_SetErr                                  ;doseterr
0003CE80 <AmiBlitz3.ab3@28488>            Dc.l do_ClrErr                                  ;doclrerr
0003CE84 <AmiBlitz3.ab3@28489>            Dc.l syntaxerr                                  ;syntaxerr
0003CE88 <AmiBlitz3.ab3@28490>            Dc.l do_ErrFail                                 ;doerrfail
0003CE8C <AmiBlitz3.ab3@28491>            Dc.l syntaxerr
0003CE90 <AmiBlitz3.ab3@28492>            Dc.l syntaxerr                                  ;mod
0003CE94 <AmiBlitz3.ab3@28493>            Dc.l syntaxerr                                  ;Pi
0003CE98 <AmiBlitz3.ab3@28494>            Dc.l do_Repeat                                  ;dorepeat
0003CE9C <AmiBlitz3.ab3@28495>            Dc.l do_Until                                   ;dountil
0003CEA0 <AmiBlitz3.ab3@28496>            Dc.l do_PutReg                                  ;doputreg
0003CEA4 <AmiBlitz3.ab3@28497>            Dc.l do_Pop                                     ;dopop
0003CEA8 <AmiBlitz3.ab3@28498>            Dc.l do_INCDIR                                  ;doincdir
0003CEAC <AmiBlitz3.ab3@28499>            Dc.l mydo_Endif2                                ;mydoendif2
0003CEB0 <AmiBlitz3.ab3@28500>            Dc.l do_Wend                                    ;dowend
0003CEB4 <AmiBlitz3.ab3@28501>            Dc.l do_SysJsr                                  ;dosysjsr
0003CEB8 <AmiBlitz3.ab3@28502>            Dc.l do_WBStartup                               ;dowbstartup
0003CEBC <AmiBlitz3.ab3@28503>            Dc.l syntaxerr
0003CEC0 <AmiBlitz3.ab3@28504>            Dc.l do_Ongo                                    ;doongo
0003CEC4 <AmiBlitz3.ab3@28505>            Dc.l syntaxerr
0003CEC8 <AmiBlitz3.ab3@28506>            Dc.l do_Forever                                 ;doforever
0003CECC <AmiBlitz3.ab3@28507>            Dc.l do_Restore                                 ;dorestore
0003CED0 <AmiBlitz3.ab3@28508>            Dc.l do_Exchange                                ;doexchange
0003CED4 <AmiBlitz3.ab3@28509>            Dc.l do_USEPATH                                 ;dousepath
0003CED8 <AmiBlitz3.ab3@28510>            Dc.l do_CloseEd                                 ;doclosed
0003CEDC <AmiBlitz3.ab3@28511>            Dc.l do_NoCli                                   ;donocli
0003CEE0 <AmiBlitz3.ab3@28512>            Dc.l syntaxerr                                  ;syntaxerr
0003CEE4 <AmiBlitz3.ab3@28513>            Dc.l syntaxerr                                  ;syntaxerr
0003CEE8 <AmiBlitz3.ab3@28514>            Dc.l syntaxerr                                  ;syntaxerr
0003CEEC <AmiBlitz3.ab3@28515>            Dc.l syntaxerr                                  ;syntaxerr
0003CEF0 <AmiBlitz3.ab3@28516>            Dc.l syntaxerr                                  ;syntaxerr
0003CEF4 <AmiBlitz3.ab3@28517>            Dc.l do_runerrson                               ;dorunerrson
0003CEF8 <AmiBlitz3.ab3@28518>            Dc.l do_runerrsoff                              ;dorunerrsoff
0003CEFC <AmiBlitz3.ab3@28519>            Dc.l do_uselastpath
0003CF00 <AmiBlitz3.ab3@28520>            Dc.l do_regload
0003CF04 <AmiBlitz3.ab3@28521>            Dc.l do_regsave
0003CF08 <AmiBlitz3.ab3@28522>            Dc.l do_Object
0003CF0C <AmiBlitz3.ab3@28523>            Dc.l do_usepath2
0003CF10 <AmiBlitz3.ab3@28524>            Dc.l do_LastRunErrsMode
0003CF14 <AmiBlitz3.ab3@28547> menu_items:Dc.l menu_compile_run                                ;menuadds oreg source
0003CF18 <AmiBlitz3.ab3@28548>            Dc.l menu_run
0003CF1C <AmiBlitz3.ab3@28549>            Dc.l menu_createexecutable
0003CF20 <AmiBlitz3.ab3@28550>            Dc.l menu_dummyfunc                                  ;was menu_compileroptions
0003CF24 <AmiBlitz3.ab3@28551>            Dc.l menu_createresidentfile
0003CF28 <AmiBlitz3.ab3@28552> 
0003CF2C <AmiBlitz3.ab3@28553> 
0003CF30 <AmiBlitz3.ab3@28554>            Dc.l menu_dummyfunc                                  ;was menu_calculator
0003CF34 <AmiBlitz3.ab3@28555>            Dc.l menu_reloadlibs
0003CF38 <AmiBlitz3.ab3@28556>            Dc.l menu_loaddebugmodule
0003CF3C <AmiBlitz3.ab3@28557>            Dc.l menu_dummyfunc
0003CF40 <AmiBlitz3.ab3@28558>            Dc.l menu_newcreate
0003CF44 <AmiBlitz3.ab3@28559>            Dc.l menu_dummyfunc
0003CF48 <AmiBlitz3.ab3@28560>            Dc.l menu_toggledebug
0003CF4C <AmiBlitz3.ab3@28561>            Dc.l menu_dummyfunc
0003CF50 <AmiBlitz3.ab3@28562>            Dc.l menu_dummyfunc
0003CF7A <AmiBlitz3.ab3@28567>   !basic
0003CFDC <AmiBlitz3.ab3@28568>   error{!TRANS{"Invalid AmiBlitz3 menu item called!"} }
0003CFFA <AmiBlitz3.ab3@28569>   !asm
0003CFFC <AmiBlitz3.ab3@28570> RTS
0003CFFD <AmiBlitz3.ab3@28576> set_autorun:               Dc.b $00
0003D002 <AmiBlitz3.ab3@28577> autorun:                   Dc.b $80,$01,$01,$00,$01
0003D003 <AmiBlitz3.ab3@28579> set_interruptcheck:        Dc.b $00
0003D008 <AmiBlitz3.ab3@28580> interruptcheck             Dc.b $80,$01,$01,$00,$01
0003D009 <AmiBlitz3.ab3@28582> set_assemblercheck:        Ds.b 1
0003D00E <AmiBlitz3.ab3@28583> assemblercheck:            Dc.b $00,$01,$01,$00,$01
0003D00F <AmiBlitz3.ab3@28585> set_overflowcheck:         Ds.b 1
0003D014 <AmiBlitz3.ab3@28586> overflowcheck:             Dc.b $00,$01,$01,$00,$01
0003D01A <AmiBlitz3.ab3@28588> default_obsolete:          Dc.b $00,$80,$01,$01,$00,$01
0003D020 <AmiBlitz3.ab3@28589> default_interruptcheck:    Dc.b $00,$80,$01,$01,$00,$01
0003D026 <AmiBlitz3.ab3@28590> default_overflowcheck:     Dc.b $00,$80,$01,$01,$00,$01
0003D028 <AmiBlitz3.ab3@28591> Even4
0003D034 <AmiBlitz3.ab3@28594> tsthead:                   Dc.l $000003F3,$00000000,$00000001
0003D03C <AmiBlitz3.ab3@28595>                            Dc.l $00000000,$00000000
0003D044 <AmiBlitz3.ab3@28596> tstsize1:                  Dc.l $00000100,$000003E9
0003D048 <AmiBlitz3.ab3@28597> tstsize2:                  Dc.l $00000100
0003D04C <AmiBlitz3.ab3@28598> tstend:                    Dc.l $000003EC
0003D054 <AmiBlitz3.ab3@28599> tstsize3:                  Ds.l 2
0003D058 <AmiBlitz3.ab3@28600> tstdone:                   Dc.l $000003F2
0003D05C <AmiBlitz3.ab3@28603> edstruct:                  Dc.l tokens                     ;data for ted
0003D060 <AmiBlitz3.ab3@28607>                            Dc.l 0
0003D064 <AmiBlitz3.ab3@28609>                            Dc.l read_xtrafile              ;load .xtra routine
0003D068 <AmiBlitz3.ab3@28610>                            Dc.l write_xtrafile             ;save .xtra routine
0003D06C <AmiBlitz3.ab3@28611>                            Dc.l call_menuentry             ;Menu Routine
0003D070 <AmiBlitz3.ab3@28612>                            Ds.l 1                          ;cleanup (?)
0003D074 <AmiBlitz3.ab3@28613>                            Dc.b ":",34,".;"
0003D170 <AmiBlitz3.ab3@28616> 
0003D250 <AmiBlitz3.ab3@28617>                            Ds.l 56
0003D252 <AmiBlitz3.ab3@28622> lslimm:                    Dc.b $E1,$48                                             ;LSL.W   #8,D0
0003D256 <AmiBlitz3.ab3@28625> use:                       Dc.b $26,$6D,$00,$00                                     ;MOVEA.L $0000(A5),A3
0003D258 <AmiBlitz3.ab3@28626>                            Dc.b $D6,$C0                                             ;ADDA.W  D0,A3
0003D25C <AmiBlitz3.ab3@28627>                            Dc.b $2B,$4B,$00,$00                                     ;MOVE.L  A3,$0000(A5)
0003D262 <AmiBlitz3.ab3@28631> beginarr:                  Dc.b $20,$3C,$00,$00,$00,$00                             ;MOVE.L  #$00000000,D0
0003D264 <AmiBlitz3.ab3@28635>                            Dc.b $C0,$C1                                             ;MULU.W  D1,D0
0003D268 <AmiBlitz3.ab3@28638> putarr:                    Dc.b $2B,$40 :                            Dc.b $00,$00   ;MOVE.L  D0,$0000(A5)
0003D26C <AmiBlitz3.ab3@28641> doarr:                     Dc.b $34,$3C,$00,$00                                     ;MOVE.W  #$0000,D2
0003D270 <AmiBlitz3.ab3@28642>                            Dc.b $36,$3C,$00,$00                                     ;MOVE.W  #$0000,D3
0003D272 <AmiBlitz3.ab3@28648>                            Dc.b $4A,$40                                             ;TST.W   D0
0003D274 <AmiBlitz3.ab3@28652>                            Dc.b $4A,$80                                             ;TST.L   D0
0003D276 <AmiBlitz3.ab3@28655> nops8:                     Dc.b $4E,$71                                             ;NOP
0003D278 <AmiBlitz3.ab3@28656>                            Dc.b $4E,$71                                             ;NOP
0003D27A <AmiBlitz3.ab3@28657>                            Dc.b $4E,$71                                             ;NOP
0003D27C <AmiBlitz3.ab3@28658>                            Dc.b $4E,$71                                             ;NOP
0003D27E <AmiBlitz3.ab3@28659> nops4:                     Dc.b $4E,$71                                             ;NOP
0003D280 <AmiBlitz3.ab3@28661>                            Dc.b $4E,$71                                             ;NOP
0003D282 <AmiBlitz3.ab3@28662>                            Dc.b $4E,$71                                             ;NOP
0003D284 <AmiBlitz3.ab3@28663>                            Dc.b $4E,$71                                             ;NOP
0003D288 <AmiBlitz3.ab3@28667> dataget:                   Dc.b $26,$6D :                            Dc.b $00,$00   ;MOVEA.L $0000(A5),A3
0003D28C <AmiBlitz3.ab3@28670> dataput:                   Dc.b $2B,$4B :                            Dc.b $00,$00   ;MOVE.L  A3,$0000(A5)
0003D28E <AmiBlitz3.ab3@28673> stlenget:                  Dc.b $2F,$1B                                             ;MOVE.L  (A3)+,-(A7)
0003D290 <AmiBlitz3.ab3@28676> stalign:                   Dc.b $52,$4B                                             ;ADDQ.W  #1,A3
0003D292 <AmiBlitz3.ab3@28677>                            Dc.b $C1,$8B                                             ;EXG D0,A3
0003D296 <AmiBlitz3.ab3@28678>                            Dc.b $08,$80,$00,$00                                     ;BCLR    #0,D0
0003D298 <AmiBlitz3.ab3@28679>                            Dc.b $C1,$8B                                             ;EXG D0,A3
0003D29A <AmiBlitz3.ab3@28685> dataletb:                  Dc.b $52,$4B                                             ;ADDQ.W  #1,A3
0003D29E <AmiBlitz3.ab3@28686>                            Dc.b $1B,$5B,$00,$00                                     ;MOVE.B  (A3)+,$0000(A5)
0003D2A0 <AmiBlitz3.ab3@28691> dataletbl:                 Dc.b $52,$4B                                             ;ADDQ.W  #1,A3
0003D2A4 <AmiBlitz3.ab3@28692>                            Dc.b $19,$5B,$00,$00                                     ;MOVE.B  (A3)+,$0000(A4)
0003D2A6 <AmiBlitz3.ab3@28696> dataletb2:                 Dc.b $52,$4B                                             ;ADDQ.W  #1,A3
0003D2A8 <AmiBlitz3.ab3@28697>                            Dc.b $14,$9B                                             ;MOVE.B  (A3)+,(A2)
0003D2AC <AmiBlitz3.ab3@28703> dataletw:                  Dc.b $3B,$5B,$00,$00                                     ;MOVE.W  (A3)+,$0000(A5)
0003D2AE <AmiBlitz3.ab3@28704>                            Dc.b $34,$9B                                             ;MOVE.W  (A3)+,(A2)
0003D2B2 <AmiBlitz3.ab3@28705>                            Dc.b $39,$5B,$00,$00                                     ;MOVE.W  (A3)+,$0000(A4)
0003D2B6 <AmiBlitz3.ab3@28709> dataletl:                  Dc.b $2B,$5B,$00,$00                                     ;MOVE.L  (A3)+,$0000(A5)
0003D2B8 <AmiBlitz3.ab3@28710>                            Dc.b $24,$9B                                             ;MOVE.L  (A3)+,(A2)
0003D2BC <AmiBlitz3.ab3@28711>                            Dc.b $29,$5B,$00,$00                                     ;MOVE.L  (A3)+,$0000(A4)
0003D2BE <AmiBlitz3.ab3@28714> nextfixw:                  Dc.b $50,$4F                                             ;ADDQ.W  #8,A7
0003D2C2 <AmiBlitz3.ab3@28717> nextfixw2:                 Dc.b $4F,$EF,$00,$0A                                     ;LEA $000A(A7),A7
0003D2C6 <AmiBlitz3.ab3@28720> nextfixl:                  Dc.b $4F,$EF,$00,$0C                                     ;LEA $000C(A7),A7
0003D2CA <AmiBlitz3.ab3@28723> nextfixl2:                 Dc.b $4F,$EF,$00,$0E                                     ;LEA $000E(A7),A7
0003D2CE <AmiBlitz3.ab3@28727>                            Dc.b $24,$6F,$00,$04                                     ;MOVEA.L $0004(A7),A2
0003D2D0 <AmiBlitz3.ab3@28728>                            Dc.b $30,$17                                             ;MOVE.W  (A7),D0
0003D2D2 <AmiBlitz3.ab3@28729>                            Dc.b $D1,$12                                             ;ADD.B   D0,(A2)
0003D2D6 <AmiBlitz3.ab3@28734>                            Dc.b $24,$6F,$00,$04                                     ;MOVEA.L $0004(A7),A2
0003D2D8 <AmiBlitz3.ab3@28735>                            Dc.b $30,$17                                             ;MOVE.W  (A7),D0
0003D2DA <AmiBlitz3.ab3@28736>                            Dc.b $D1,$52                                             ;ADD.W   D0,(A2)
0003D2DE <AmiBlitz3.ab3@28741>                            Dc.b $24,$6F,$00,$08                                     ;MOVEA.L $0008(A7),A2
0003D2E0 <AmiBlitz3.ab3@28742>                            Dc.b $20,$17                                             ;MOVE.L  (A7),D0
0003D2E2 <AmiBlitz3.ab3@28743>                            Dc.b $D1,$92                                             ;ADD.L   D0,(A2)
0003D2E6 <AmiBlitz3.ab3@28748>                            Dc.b $24,$6F,$00,$08                                     ;MOVEA.L $0008(A7),A2
0003D2E8 <AmiBlitz3.ab3@28749>                            Dc.b $20,$12                                             ;MOVE.L  (A2),D0
0003D2EA <AmiBlitz3.ab3@28750>                            Dc.b $22,$17                                             ;MOVE.L  (A7),D1
0003D2EE <AmiBlitz3.ab3@28751>                            Dc.b $4E,$AE,$FF,$BE                                     ;JSR -$0042(A6)
0003D2F0 <AmiBlitz3.ab3@28752>                            Dc.b $24,$80                                             ;MOVE.L  D0,(A2)
0003D2F4 <AmiBlitz3.ab3@28757>                            Dc.b $24,$6F,$00,$04                                     ;MOVEA.L $0004(A7),A2
0003D2F6 <AmiBlitz3.ab3@28758>                            Dc.b $10,$12                                             ;MOVE.B  (A2),D0
0003D2FA <AmiBlitz3.ab3@28759>                            Dc.b $32,$2F,$00,$02                                     ;MOVE.W  $0002(A7),D1
0003D2FC <AmiBlitz3.ab3@28760>                            Dc.b $4A,$57                                             ;TST.W   (A7)
0003D300 <AmiBlitz3.ab3@28761>                            Dc.b $6A,$00,$00,$04                                     ;BPL.W   L000001         ;.skip org source
0003D302 <AmiBlitz3.ab3@28762>                            Dc.b $C1,$41                                             ;EXG D0,D1
0003D304 <AmiBlitz3.ab3@28765>                            Dc.b $B0,$01                                             ;CMP.B   D1,D0
0003D308 <AmiBlitz3.ab3@28770>                            Dc.b $24,$6F,$00,$04                                     ;MOVEA.L $0004(A7),A2
0003D30A <AmiBlitz3.ab3@28771>                            Dc.b $30,$12                                             ;MOVE.W  (A2),D0
0003D30E <AmiBlitz3.ab3@28772>                            Dc.b $32,$2F,$00,$02                                     ;MOVE.W  $0002(A7),D1
0003D310 <AmiBlitz3.ab3@28773>                            Dc.b $4A,$57                                             ;TST.W   (A7)
0003D314 <AmiBlitz3.ab3@28774>                            Dc.b $6A,$00,$00,$04                                     ;BPL.W   L000002         ;.skip org source
0003D316 <AmiBlitz3.ab3@28775>                            Dc.b $C1,$41                                             ;EXG D0,D1
0003D318 <AmiBlitz3.ab3@28778>                            Dc.b $B0,$41                                             ;CMP.W   D1,D0
0003D31C <AmiBlitz3.ab3@28783>                            Dc.b $24,$6F,$00,$08                                     ;MOVEA.L $0008(A7),A2
0003D31E <AmiBlitz3.ab3@28784>                            Dc.b $20,$12                                             ;MOVE.L  (A2),D0
0003D322 <AmiBlitz3.ab3@28785>                            Dc.b $22,$2F,$00,$04                                     ;MOVE.L  $0004(A7),D1
0003D324 <AmiBlitz3.ab3@28786>                            Dc.b $4A,$57                                             ;TST.W   (A7)
0003D328 <AmiBlitz3.ab3@28787>                            Dc.b $6A,$00,$00,$04                                     ;BPL.W   L000003         ;.skip org source
0003D32A <AmiBlitz3.ab3@28788>                            Dc.b $C1,$41                                             ;EXG D0,D1
0003D32C <AmiBlitz3.ab3@28791>                            Dc.b $B0,$81                                             ;CMP.L   D1,D0
0003D330 <AmiBlitz3.ab3@28796>                            Dc.b $24,$6F,$00,$08                                     ;MOVEA.L $0008(A7),A2
0003D332 <AmiBlitz3.ab3@28797>                            Dc.b $20,$12                                             ;MOVE.L  (A2),D0
0003D336 <AmiBlitz3.ab3@28798>                            Dc.b $22,$2F,$00,$04                                     ;MOVE.L  $0004(A7),D1
0003D33C <AmiBlitz3.ab3@28799>                            Dc.b $08,$2F,$00,$07,$00,$03                             ;BTST    #7,$0003(A7)
0003D340 <AmiBlitz3.ab3@28800>                            Dc.b $67,$00,$00,$04                                     ;BEQ.W   L000004
0003D342 <AmiBlitz3.ab3@28801>                            Dc.b $C1,$41                                             ;EXG D0,D1
0003D346 <AmiBlitz3.ab3@28808>                            Dc.b $4E,$AE,$FF,$D6                                     ;JSR -$002A(A6)
0003D348 <AmiBlitz3.ab3@28812> swapd0:                    Dc.b $48,$40                                             ;SWAP    D0
0003D34A <AmiBlitz3.ab3@28815> pushindex:                 Dc.b $2F,$0A                                             ;MOVE.L  A2,-(A7)
0003D34E <AmiBlitz3.ab3@28818> leaamp:                    Dc.b $45,$ED :                            Dc.b $00,$00   ;LEA $0000(A5),A2
0003D350 <AmiBlitz3.ab3@28819> leaamp2:                   Dc.b $20,$0A                                             ;MOVE.L  A2,D0
0003D354 <AmiBlitz3.ab3@28822> leaampl:                   Dc.b $45,$EC :                            Dc.b $00,$00   ;LEA $0000(A4),A2
0003D356 <AmiBlitz3.ab3@28825> stamp:                     Dc.b $20,$12                                             ;MOVE.L  (A2),D0
0003D35A <AmiBlitz3.ab3@28828> stamp2:                    Dc.b $24,$6D :                            Dc.b $00,$00   ;MOVEA.L $0000(A5),A2
0003D35C <AmiBlitz3.ab3@28832>                            Dc.b $58,$4F                                             ;ADDQ.W  #4,A7
0003D35E <AmiBlitz3.ab3@28835> pushd0wd:                  Dc.b $3F,$00                                             ;MOVE.W  D0,-(A7)
0003D360 <AmiBlitz3.ab3@28838> pushd0l:                   Dc.b $2F,$00                                             ;MOVE.L  D0,-(A7)
0003D364 <AmiBlitz3.ab3@28841> movenumrep:                Dc.b $3E,$3C :                            Dc.b $00,$00   ;MOVE.W  #$0000,D7
0003D368 <AmiBlitz3.ab3@28844> preplibst:                 Dc.b $45,$EF :                            Dc.b $00,$00   ;LEA $0000(A7),A2
0003D36C <AmiBlitz3.ab3@28847> fixlibst:                  Dc.b $4F,$EF :                            Dc.b $00,$00   ;LEA $0000(A7),A7
0003D36E <AmiBlitz3.ab3@28850> pushdn:                    Dc.b $2F,$00                                             ;MOVE.L  D0,-(A7)
0003D370 <AmiBlitz3.ab3@28853> movea3a7:                  Dc.b $2F,$0B                                             ;MOVE.L  A3,-(A7)
0003D374 <AmiBlitz3.ab3@28856> movestst2:                 Dc.b $20,$2F :                            Dc.b $00,$06   ;MOVE.L  $0006(A7),D0
0003D37A <AmiBlitz3.ab3@28857>                            Dc.b $3F,$6F,$00,$04,$00,$08                             ;MOVE.W  $0004(A7),$0008(A7)
0003D37C <AmiBlitz3.ab3@28858>                            Dc.b $2E,$9F                                             ;MOVE.L  (A7)+,(A7)
0003D380 <AmiBlitz3.ab3@28862> movea7dn:                  Dc.b $20,$2F :                            Dc.b $00,$04   ;MOVE.L  $0004(A7),D0
0003D382 <AmiBlitz3.ab3@28863>                            Dc.b $2E,$9F                                             ;MOVE.L  (A7)+,(A7)
0003D384 <AmiBlitz3.ab3@28867> moved0a3:                  Dc.b $26,$40                                             ;MOVEA.L D0,A3
0003D388 <AmiBlitz3.ab3@28870> movestdn:                  Dc.b $20,$2D :                            Dc.b $00,$00   ;MOVE.L  $0000(A5),D0
0003D38A <AmiBlitz3.ab3@28874>                            Dc.b $20,$0B                                             ;MOVE.L  A3,D0
0003D38C <AmiBlitz3.ab3@28878>                            Dc.b $2F,$00                                             ;MOVE.L  D0,-(A7)
0003D38E <AmiBlitz3.ab3@28882>                            Dc.b $20,$1F                                             ;MOVE.L  (A7)+,D0
0003D392 <AmiBlitz3.ab3@28885> moverts:                   Dc.b $2F,$57 :                            Dc.b $00,$00   ;MOVE.L  (A7),$0000(A7)
0003D396 <AmiBlitz3.ab3@28888> fixstack:                  Dc.b $4F,$EF :                            Dc.b $00,$00   ;LEA $0000(A7),A7
0003D398 <AmiBlitz3.ab3@28891> fixq:                      Dc.b $50,$4F                                             ;ADDQ.W  #8,A7
0003D39A <AmiBlitz3.ab3@28894> fix1:                      Dc.b $2E,$9F                                             ;MOVE.L  (A7)+,(A7)
0003D39C <AmiBlitz3.ab3@28897> movedna3:                  Dc.b $26,$40                                             ;MOVEA.L D0,A3
0003D3A0 <AmiBlitz3.ab3@28900> least:                     Dc.b $45,$EC :                            Dc.b $00,$00   ;LEA $0000(A4),A2
0003D3A4 <AmiBlitz3.ab3@28903> funcst:                    Dc.b $2F,$2C :                            Dc.b $00,$00   ;MOVE.L  $0000(A4),-(A7)
0003D3A6 <AmiBlitz3.ab3@28906> addq4a2:                   Dc.b $58,$4A                                             ;ADDQ.W  #4,A2
0003D3A8 <AmiBlitz3.ab3@28910>                            Dc.b $2F,$0B                                             ;MOVE.L  A3,-(A7)
0003D3AC <AmiBlitz3.ab3@28913>                            Dc.b $2B,$4B,$00,$00                                     ;MOVE.L  A3,$0000(A5)
0003D3AE <AmiBlitz3.ab3@28919>                            Dc.b $26,$5F                                             ;MOVEA.L (A7)+,A3
0003D3B2 <AmiBlitz3.ab3@28922>                            Dc.b $2B,$4B,$00,$00                                     ;MOVE.L  A3,$0000(A5)
0003D3B4 <AmiBlitz3.ab3@28928>                            Dc.b $CB,$4C                                             ;EXG A5,A4
0003D3B8 <AmiBlitz3.ab3@28932> linksize:                  Dc.b $4E,$54 :                            Dc.b $00,$00   ;LINK    A4,#-$0000
0003D3BA <AmiBlitz3.ab3@28935> unlinka4:                  Dc.b $4E,$5C                                             ;UNLK    A4
0003D3BC <AmiBlitz3.ab3@28939>                            Dc.b $2F,$0A                                             ;MOVE.L  A2,-(A7)
0003D3BE <AmiBlitz3.ab3@28943>                            Dc.b $24,$5F                                             ;MOVEA.L (A7)+,A2
0003D3C4 <AmiBlitz3.ab3@28946> gotocode:                  Dc.b $4E,$F9,$00,$00,$00,$00                             ;JMP $00000000
0003D3CA <AmiBlitz3.ab3@28949> gosubcode:                 Dc.b $4E,$B9,$00,$00,$00,$00                             ;JSR $00000000
0003D3D2 <AmiBlitz3.ab3@28953> mwait:                     Dc.b $08,$39,$00,$06,$00,$BF,$E0,$01                     ;BTST    #6,$00BFE001
0003D3D6 <AmiBlitz3.ab3@28954>                            Dc.b $66,$00,$FF,$F6                                     ;BNE.W   L000005       ;mwait: org source
0003D3D8 <AmiBlitz3.ab3@28958> libreg:                    Dc.b $20,$00                                             ;MOVE.L  D0,D0
0003D3DC <AmiBlitz3.ab3@28961> libbase:                   Dc.b $2C,$6D :                            Dc.b $00,$00   ;MOVEA.L $0000(A5),A6
0003D3E0 <AmiBlitz3.ab3@28964> libjsr:                    Dc.b $4E,$AE :                            Dc.b $00,$00   ;JSR $0000(A6)
0003D3E4 <AmiBlitz3.ab3@28967> regtransd:                 Dc.b $20,$2D,$00,$00                                     ;MOVE.L  $0000(A5),D0
0003D3E8 <AmiBlitz3.ab3@28968> regtransa:                 Dc.b $20,$6D,$00,$00                                     ;MOVEA.L $0000(A5),A0
0003D3EC <AmiBlitz3.ab3@28972>                            Dc.b $26,$7C,$00,$00                                     ;MOVEA.L #$00000000,A3
0003D3F0 <AmiBlitz3.ab3@28974>                            Dc.l $3F1B                                               ;MOVE.W  (A3)+,-(A7)
0003D3F2 <AmiBlitz3.ab3@28977> movea2dn:                  Dc.b $20,$12                                             ;MOVE.L  (A2),D0
0003D3F6 <AmiBlitz3.ab3@28980> moved3a5dn:                Dc.b $20,$2D,$00,$00                                     ;MOVE.L  $0000(A5),D0
0003D3F8 <AmiBlitz3.ab3@28983> stvarget2:                 Dc.b $70,$00                                             ;MOVEQ   #$00,D0
0003D3FA <AmiBlitz3.ab3@28984>                            Dc.b $2F,$00                                             ;MOVE.L  D0,-(A7)
0003D3FC <AmiBlitz3.ab3@28985>                            Dc.b $4A,$92                                             ;TST.L   (A2)
0003D400 <AmiBlitz3.ab3@28986> 
0003D402 <AmiBlitz3.ab3@28987>                            Dc.b $20,$52                                             ;MOVEA.L (A2),A0
0003D404 <AmiBlitz3.ab3@28988>                            Dc.b $59,$48                                             ;SUBQ.W  #4,A0
0003D406 <AmiBlitz3.ab3@28989>                            Dc.b $2E,$98                                             ;MOVE.L  (A0)+,(A7)
0003D40C <AmiBlitz3.ab3@28991>                            Dc.b $4E,$B9,$00,$00,$00,$00                             ;JSR $00000000
0003D40E <AmiBlitz3.ab3@28996> addcode:                   Dc.b $20,$1F                                             ;MOVE.L  (A7)+,D0
0003D410 <AmiBlitz3.ab3@28997>                            Dc.b $D1,$97                                             ;ADD.L   D0,(A7)
0003D412 <AmiBlitz3.ab3@29001> pushlen:                   Dc.b $2F,$18                                             ;MOVE.L  (A0)+,-(A7)
0003D416 <AmiBlitz3.ab3@29004> leaa5d3a2:                 Dc.b $45,$ED :                            Dc.b $00,$00   ;LEA $0000(A5),A2
0003D418 <AmiBlitz3.ab3@29007> pusha2:                    Dc.b $2F,$0A                                             ;MOVE.L  A2,-(A7)
0003D41A <AmiBlitz3.ab3@29011>                            Dc.b $24,$57                                             ;MOVEA.L (A7),A2
0003D41C <AmiBlitz3.ab3@29014> pulla2:                    Dc.b $24,$5F                                             ;MOVEA.L (A7)+,A2
0003D420 <AmiBlitz3.ab3@29017> pulla2st:                  Dc.b $24,$6F,$00,$04                                     ;MOVEA.L $0004(A7),A2
0003D422 <AmiBlitz3.ab3@29018>                            Dc.b $2E,$9F                                             ;MOVE.L  (A7)+,(A7)
0003D426 <AmiBlitz3.ab3@29022> pusha3:                    Dc.b $2F,$2D :                            Dc.b $00,$00   ;MOVE.L  $0000(A5),-(A7)
0003D42A <AmiBlitz3.ab3@29023> pusha32:                   Dc.b $2B,$4B :                            Dc.b $00,$00   ;MOVE.L  A3,$0000(A5)
0003D42E <AmiBlitz3.ab3@29027> pulla3:                    Dc.b $2B,$5F :                            Dc.b $00,$00   ;MOVE.L  (A7)+,$0000(A5)
0003D432 <AmiBlitz3.ab3@29031> geta3:                     Dc.b $26,$6D :                            Dc.b $00,$00   ;MOVEA.L $0000(A5),A3
0003D438 <AmiBlitz3.ab3@29035> numtoa0:                   Dc.b $20,$7C,$00,$00,$00,$00                             ;MOVEA.L #$00000000,A0
0003D43E <AmiBlitz3.ab3@29038> numtoa2:                   Dc.b $24,$7C,$00,$00,$00,$00                             ;MOVEA.L #$00000000,A2
0003D442 <AmiBlitz3.ab3@29042> endarray:                  Dc.b $38,$3C :                            Dc.b $00,$00   ;MOVE.W  #$0000,D4
0003D446 <AmiBlitz3.ab3@29046>                            Dc.b $34,$3C,$00,$00                                     ;MOVE.W  #$0000,D2
0003D44A <AmiBlitz3.ab3@29047>                            Dc.b $36,$3C,$00,$00                                     ;MOVE.W  #$0000,D3
0003D450 <AmiBlitz3.ab3@29052>                            Dc.b $20,$3C,$00,$00,$00,$04                             ;MOVE.L  #$00000004,D0
0003D454 <AmiBlitz3.ab3@29057>                            Dc.b $2B,$40,$00,$00                                     ;MOVE.L  D0,$0000(A5)
0003D456 <AmiBlitz3.ab3@29062>                            Dc.b $C0,$C1                                             ;MULU.W  D1,D0
0003D45A <AmiBlitz3.ab3@29066>                            Dc.b $2B,$40,$00,$00                                     ;MOVE.L  D0,$0000(A5)
0003D45C <AmiBlitz3.ab3@29070> movea0:                    Dc.b $24,$52                                             ;MOVEA.L (A2),A2
0003D45E <AmiBlitz3.ab3@29073> adda0a0:                   Dc.b $D5,$CA                                             ;ADDA.L  A2,A2
0003D460 <AmiBlitz3.ab3@29074>                            Dc.b $D5,$CA                                             ;ADDA.L  A2,A2
0003D464 <AmiBlitz3.ab3@29078>                            Dc.b $2C,$78,$00,$04                                     ;MOVEA.L $0004,A6
0003D468 <AmiBlitz3.ab3@29082> movea5a0:                  Dc.b $24,$6D :                            Dc.b $00,$00   ;MOVEA.L $0000(A5),A2
0003D46C <AmiBlitz3.ab3@29085> movea0a0:                  Dc.b $24,$6A :                            Dc.b $00,$00   ;MOVEA.L $0000(A2),A2
0003D46E <AmiBlitz3.ab3@29088> addqa0:                    Dc.b $52,$4A                                             ;ADDQ.W  #1,A2
0003D472 <AmiBlitz3.ab3@29091> leaa0a0:                   Dc.b $45,$EA :                            Dc.b $00,$00   ;LEA $0000(A2),A2
0003D474 <AmiBlitz3.ab3@29094> addrega2:                  Dc.b $D4,$C0                                             ;ADDA.W  D0,A2
0003D47D <AmiBlitz3.ab3@29098>                            Dc.b "ram:test",0
0003D47E <AmiBlitz3.ab3@29099> Even
0003D482 <AmiBlitz3.ab3@29103>                            Dc.l  0                          ;was  Ds.w 3 org source
0003D484 <AmiBlitz3.ab3@29105>                            Dc.w  0
0003D488 <AmiBlitz3.ab3@29108> _mathffpbase:              Ds.l 1                           ;maths org source
0003D48A <AmiBlitz3.ab3@29109> regnum:                    Ds.w 1                           ;regat org source       ;register being used!
0003D48C <AmiBlitz3.ab3@29110> typelen:                   Ds.w 1
0003D490 <AmiBlitz3.ab3@29111> prevtype:                  Ds.l 1
0003D494 <AmiBlitz3.ab3@29112> lastsourcepos:             Ds.l 1                           ;prevloc org source
0003D496 <AmiBlitz3.ab3@29113> lastchar:                  Ds.w 1
0003D49A <AmiBlitz3.ab3@29114> thistype:                  Ds.l 1
0003D49E <AmiBlitz3.ab3@29115> errstack:                  Ds.l 1
0003D4A2 <AmiBlitz3.ab3@29116> errcont:                   Ds.l 1
0003D4A4 <AmiBlitz3.ab3@29117> linemode:                  Ds.w 1                          ;0 if norm, 1 if newtype
0003D4A6 <AmiBlitz3.ab3@29118> linesleft:                 Ds.w 1
0003D4AA <AmiBlitz3.ab3@29119> sourceline:                Ds.l 1                          ;thisitem org source
0003D4AE <AmiBlitz3.ab3@29120> varbase:                   Ds.l 1                          ;firstvar org source
0003D4B2 <AmiBlitz3.ab3@29121> alllocals:                 Ds.l 1
0003D4B6 <AmiBlitz3.ab3@29122> firstlocal:                Ds.l 1
0003D4BA <AmiBlitz3.ab3@29123> firstglob:                 Ds.l 1
0003D4BC <AmiBlitz3.ab3@29124> globalvarpointer:          Ds.w 1                          ;varoff org source
0003D4BE <AmiBlitz3.ab3@29125> locvaroff:                 Ds.w 1
0003D4C2 <AmiBlitz3.ab3@29126> firstitem_:                 Ds.l 1
0003D4C4 <AmiBlitz3.ab3@29127> numlines_org:              Ds.w 1                          ;numlines org source
0003D4C6 <AmiBlitz3.ab3@29128> returncode_org:            Ds.w 1                          ;returncode org source
0003D4CA <AmiBlitz3.ab3@29129> firstiff:                  Ds.l 1                          ;firstif org source
0003D4CE <AmiBlitz3.ab3@29130> ptr_seg_ped:               Ds.l 1                          ;segadd org source
0003D6CE <AmiBlitz3.ab3@29131> str_pedfile:               Ds.b #MAX_STRINGSIZE            ;segname org source
0003D6DE <AmiBlitz3.ab3@29132> str_mathffpname:           Dc.b "mathffp.library",0 : Even ;mathsname org source
0003D8DE <AmiBlitz3.ab3@29133> str_libfilename:           Ds.b #MAX_STRINGSIZE
0003DADE <AmiBlitz3.ab3@29134> str_path_userlibs:         Ds.b #MAX_STRINGSIZE
0003DCDE <AmiBlitz3.ab3@29135> str_defaultdbug:           Ds.b #MAX_STRINGSIZE            ;debugname org source
0003DCE2 <AmiBlitz3.ab3@29137> ptr_seg_debugger:          Ds.l 1                          ;dseg org source
0003DEE2 <AmiBlitz3.ab3@29138> str_blitz3assign:          Ds.b #MAX_STRINGSIZE            ;dpath org source
0003E0E2 <AmiBlitz3.ab3@29140> str_path_acidlibs:         Ds.b #MAX_STRINGSIZE            ;acidname org source
0003E0E6 <AmiBlitz3.ab3@29141> size_acidlibs:             Ds.l 1                          ;acidlibs org source
0003E2E6 <AmiBlitz3.ab3@29142> str_path_deflibs:          Ds.b #MAX_STRINGSIZE            ;defname org source
0003E2EA <AmiBlitz3.ab3@29143> size_deflibs:              Ds.l 1                          ;deflibs org source
0003E4EA <AmiBlitz3.ab3@29144> str_tempfilename:          Ds.b #MAX_STRINGSIZE
0003E6EA <AmiBlitz3.ab3@29146> str_temp_debugmodulename:  Ds.b #MAX_STRINGSIZE            ;dname org source
0003E6EE <AmiBlitz3.ab3@29147> ptr_temp_debugmodule:      Ds.l 1                          ;dname2 org source
0003E8EE <AmiBlitz3.ab3@29149> str_path_includes:         Ds.b #MAX_STRINGSIZE            ;acidname org source
0003E8F2 <AmiBlitz3.ab3@29155>   Dc.b $E3,$10,$00,$01                                     ;icondata  
0003E8F6 <AmiBlitz3.ab3@29156>   Dc.b $00,$00,$00,$00
0003E8FA <AmiBlitz3.ab3@29157>   Dc.b $00,$19,$00,$11
0003E8FE <AmiBlitz3.ab3@29158>   Dc.b $00,$2E,$00,$18
0003E902 <AmiBlitz3.ab3@29159>   Dc.b $00,$04,$00,$03
0003E906 <AmiBlitz3.ab3@29160>   Dc.b $00,$01,$00,$22
0003E90A <AmiBlitz3.ab3@29161>   Dc.b $73,$68,$00,$00
0003E90E <AmiBlitz3.ab3@29162>   Dc.b $00,$00,$00,$00
0003E912 <AmiBlitz3.ab3@29163>   Dc.b $00,$00,$00,$00
0003E916 <AmiBlitz3.ab3@29164>   Dc.b $00,$00,$00,$00
0003E91A <AmiBlitz3.ab3@29165>   Dc.b $00,$00,$00,$00
0003E91E <AmiBlitz3.ab3@29166>   Dc.b $00,$00,$00,$00
0003E922 <AmiBlitz3.ab3@29167>   Dc.b $03,$22,$00,$21
0003E926 <AmiBlitz3.ab3@29168>   Dc.b $3C,$28,$00,$22
0003E92A <AmiBlitz3.ab3@29169>   Dc.b $6E,$C0,$00,$00
0003E92E <AmiBlitz3.ab3@29170>   Dc.b $00,$12,$00,$00
0003E932 <AmiBlitz3.ab3@29171>   Dc.b $00,$0E,$00,$00
0003E936 <AmiBlitz3.ab3@29172>   Dc.b $00,$00,$00,$00
0003E93A <AmiBlitz3.ab3@29173>   Dc.b $00,$00,$00,$00
0003E93E <AmiBlitz3.ab3@29174>   Dc.b $00,$00,$00,$00
0003E942 <AmiBlitz3.ab3@29175>   Dc.b $00,$00,$00,$2E
0003E946 <AmiBlitz3.ab3@29176>   Dc.b $00,$17,$00,$02
0003E94A <AmiBlitz3.ab3@29177>   Dc.b $00,$01,$8E,$80
0003E94E <AmiBlitz3.ab3@29178>   Dc.b $03,$00,$00,$00
0003E952 <AmiBlitz3.ab3@29179>   Dc.b $00,$00,$FF,$FF
0003E956 <AmiBlitz3.ab3@29180>   Dc.b $FF,$FF,$FF,$FC
0003E95A <AmiBlitz3.ab3@29181>   Dc.b $80,$00,$00,$00
0003E95E <AmiBlitz3.ab3@29182>   Dc.b $00,$00,$80,$00
0003E962 <AmiBlitz3.ab3@29183>   Dc.b $00,$3F,$BB,$40
0003E966 <AmiBlitz3.ab3@29184>   Dc.b $80,$1F,$C0,$00
0003E96A <AmiBlitz3.ab3@29185>   Dc.b $00,$00,$80,$3F
0003E96E <AmiBlitz3.ab3@29186>   Dc.b $C0,$0F,$BB,$40
0003E972 <AmiBlitz3.ab3@29187>   Dc.b $80,$1F,$C0,$00
0003E976 <AmiBlitz3.ab3@29188>   Dc.b $00,$00,$8E,$00
0003E97A <AmiBlitz3.ab3@29189>   Dc.b $F8,$00,$00,$00
0003E97E <AmiBlitz3.ab3@29190>   Dc.b $8F,$01,$FF,$00
0003E982 <AmiBlitz3.ab3@29191>   Dc.b $3B,$40,$81,$E3
0003E986 <AmiBlitz3.ab3@29192>   Dc.b $F7,$C0,$00,$00
0003E98A <AmiBlitz3.ab3@29193>   Dc.b $80,$7F,$F8,$70
0003E98E <AmiBlitz3.ab3@29194>   Dc.b $3B,$40,$80,$0F
0003E992 <AmiBlitz3.ab3@29195>   Dc.b $7C,$E0,$00,$00
0003E996 <AmiBlitz3.ab3@29196>   Dc.b $80,$00,$FD,$80
0003E99A <AmiBlitz3.ab3@29197>   Dc.b $00,$00,$80,$01
0003E99E <AmiBlitz3.ab3@29198>   Dc.b $F6,$00,$FB,$40
0003E9A2 <AmiBlitz3.ab3@29199>   Dc.b $80,$03,$EF,$00
0003E9A6 <AmiBlitz3.ab3@29200>   Dc.b $00,$00,$80,$07
0003E9AA <AmiBlitz3.ab3@29201>   Dc.b $87,$80,$3B,$40
0003E9AE <AmiBlitz3.ab3@29202>   Dc.b $80,$0F,$01,$C0
0003E9B2 <AmiBlitz3.ab3@29203>   Dc.b $00,$00,$80,$03
0003E9B6 <AmiBlitz3.ab3@29204>   Dc.b $F0,$70,$1D,$40
0003E9BA <AmiBlitz3.ab3@29205>   Dc.b $80,$00,$18,$1C
0003E9BE <AmiBlitz3.ab3@29206>   Dc.b $00,$00,$80,$00
0003E9C2 <AmiBlitz3.ab3@29207>   Dc.b $10,$06,$03,$40
0003E9C6 <AmiBlitz3.ab3@29208>   Dc.b $80,$00,$20,$1F
0003E9CA <AmiBlitz3.ab3@29209>   Dc.b $00,$00,$80,$00
0003E9CE <AmiBlitz3.ab3@29210>   Dc.b $00,$00,$01,$40
0003E9D2 <AmiBlitz3.ab3@29211>   Dc.b $80,$00,$00,$00
0003E9D6 <AmiBlitz3.ab3@29212>   Dc.b $00,$00,$80,$00
0003E9DA <AmiBlitz3.ab3@29213>   Dc.b $00,$00,$00,$00
0003E9DE <AmiBlitz3.ab3@29214>   Dc.b $00,$00,$00,$00
0003E9E2 <AmiBlitz3.ab3@29215>   Dc.b $00,$00,$00,$00
0003E9E6 <AmiBlitz3.ab3@29216>   Dc.b $00,$00,$00,$04
0003E9EA <AmiBlitz3.ab3@29217>   Dc.b $00,$3F,$FC,$01
0003E9EE <AmiBlitz3.ab3@29218>   Dc.b $BB,$44,$00,$60
0003E9F2 <AmiBlitz3.ab3@29219>   Dc.b $FE,$00,$00,$04
0003E9F6 <AmiBlitz3.ab3@29220>   Dc.b $00,$CF,$FF,$01
0003E9FA <AmiBlitz3.ab3@29221>   Dc.b $BB,$44,$1F,$EF
0003E9FE <AmiBlitz3.ab3@29222>   Dc.b $FF,$00,$00,$04
0003EA02 <AmiBlitz3.ab3@29223>   Dc.b $33,$FF,$FF,$E0
0003EA06 <AmiBlitz3.ab3@29224>   Dc.b $00,$04,$37,$FE
0003EA0A <AmiBlitz3.ab3@29225>   Dc.b $7F,$FC,$1B,$44
0003EA0E <AmiBlitz3.ab3@29226>   Dc.b $0F,$9C,$FF,$FF
0003EA12 <AmiBlitz3.ab3@29227>   Dc.b $00,$04,$03,$E3
0003EA16 <AmiBlitz3.ab3@29228>   Dc.b $FF,$FF,$DB,$44
0003EA1A <AmiBlitz3.ab3@29229>   Dc.b $00,$7F,$BF,$FF
0003EA1E <AmiBlitz3.ab3@29230>   Dc.b $80,$04,$00,$0F
0003EA22 <AmiBlitz3.ab3@29231>   Dc.b $3F,$FE,$00,$04
0003EA26 <AmiBlitz3.ab3@29232>   Dc.b $00,$06,$7F,$F8
0003EA2A <AmiBlitz3.ab3@29233>   Dc.b $1B,$44,$00,$0C
0003EA2E <AmiBlitz3.ab3@29234>   Dc.b $F7,$FC,$00,$04
0003EA32 <AmiBlitz3.ab3@29235>   Dc.b $00,$19,$F9,$FE
0003EA36 <AmiBlitz3.ab3@29236>   Dc.b $1B,$44,$00,$33
0003EA3A <AmiBlitz3.ab3@29237>   Dc.b $FE,$7F,$00,$04
0003EA3E <AmiBlitz3.ab3@29238>   Dc.b $00,$0F,$FF,$BF
0003EA42 <AmiBlitz3.ab3@29239>   Dc.b $CD,$44,$00,$03
0003EA46 <AmiBlitz3.ab3@29240>   Dc.b $EF,$EF,$F0,$04
0003EA4A <AmiBlitz3.ab3@29241>   Dc.b $00,$00,$7F,$DF
0003EA4E <AmiBlitz3.ab3@29242>   Dc.b $FB,$44,$00,$00
0003EA52 <AmiBlitz3.ab3@29243>   Dc.b $FF,$A7,$FC,$04
0003EA56 <AmiBlitz3.ab3@29244>   Dc.b $00,$00,$7E,$3F
0003EA5A <AmiBlitz3.ab3@29245>   Dc.b $FD,$44,$00,$00
0003EA5E <AmiBlitz3.ab3@29246>   Dc.b $00,$00,$00,$04
0003EA62 <AmiBlitz3.ab3@29247>   Dc.b $7F,$FF,$FF,$FF
0003EA66 <AmiBlitz3.ab3@29248>   Dc.b $FF,$FC,$00,$00
0003EA6A <AmiBlitz3.ab3@29249>   Dc.b $00,$01,$00,$00
0003EA6D <AmiBlitz3.ab3@29250>   Dc.b $00,$00,$04
0003EA73 <AmiBlitz3.ab3@29253> str_infoextention2:  Dc.b ".info",0                           ;infoname org source
0003EACB <AmiBlitz3.ab3@29254> errorlimit_text:     Dc.b "There are too much errors, compiling is stop now. Please fix errors first and try again",0
0003EACC <AmiBlitz3.ab3@29255> Even
0003EAD0 <AmiBlitz3.ab3@29257> sysdebug:            Dc.l $3F0
0003EAD4 <AmiBlitz3.ab3@29261> exelock              Ds.l 1
0003EAD8 <AmiBlitz3.ab3@29265> includesourceline    Dc.l 0
0003EADC <AmiBlitz3.ab3@29266> linenum              Ds.l 1
0003EAE0 <AmiBlitz3.ab3@29267> globallinecount      Ds.l 1
0003EAFE <AmiBlitz3.ab3@29268> myversion            Dc.b "\\__VER_MAJOR.\\__VER_MINOR (\\__DATE_GER__) Build \\__VER_PATCH.\\__VER_BUILD",0 : Even
0003EB02 <AmiBlitz3.ab3@29269> calc_option          Dc.l 1
0003EB06 <AmiBlitz3.ab3@29270> versioninformation   Dc.l $00
0003EB0A <AmiBlitz3.ab3@29271> number_of_builds     Dc.l $00
0003EB0C <AmiBlitz3.ab3@29274> BSS
0003EB0E <AmiBlitz3.ab3@29275> debugnest            Ds.w 1
0003EB12 <AmiBlitz3.ab3@29276> instringf            Ds.l 1
0003EB16 <AmiBlitz3.ab3@29277> funcscanon           Ds.l 1
0003EB2A <AmiBlitz3.ab3@29278> storedebugmode       Ds.b 20
0003EB2E <AmiBlitz3.ab3@29279> firsttimepref        Ds.l 1
0003EB2F <AmiBlitz3.ab3@29280> funcparloop          Ds.b 1                   ; is 1 when function calling parameter are compile
0003EB30 <AmiBlitz3.ab3@29281> blitzparloop         Ds.b 1                   ; is 1 when blitzlib calling parameters are compile
0003EB32 <AmiBlitz3.ab3@29282> nostringopt          Ds.w 1
0003EBB2 <AmiBlitz3.ab3@29283> path2:               Ds.l 32
0003EBB6 <AmiBlitz3.ab3@29284> typebase             Dc.l 0
0003EBB8 <AmiBlitz3.ab3@29285> doublepeek           Dc.w 0
0003EBBC <AmiBlitz3.ab3@29286> lastoffset           Dc.l 0
0003EBBE <AmiBlitz3.ab3@29287> firsttime            Dc.w 0
0003EBC2 <AmiBlitz3.ab3@29288> lastdestpointer      Dc.l 0
0003EBC6 <AmiBlitz3.ab3@29289> prevwritedat         Dc.l 0
0003EBCA <AmiBlitz3.ab3@29290> lastsourceline       Dc.l 0
0003EBCE <AmiBlitz3.ab3@29291> lastwritedat         Dc.l 0
0003EBD0 <AmiBlitz3.ab3@29292> makeexec             Dc.w 0
0003EBD2 <AmiBlitz3.ab3@29293> makeexec_remember    Dc.w 0
0003EBD6 <AmiBlitz3.ab3@29294> sharebase            Ds.l 1
0003EBDA <AmiBlitz3.ab3@29295> tempa7               Ds.l 1
0003EBDC <AmiBlitz3.ab3@29296> incnif               Ds.w 1
0003EBE0 <AmiBlitz3.ab3@29297> tempstore            Ds.l 1
0003EBE4 <AmiBlitz3.ab3@29298> result               Ds.l 1
0003EBE6 <AmiBlitz3.ab3@29299> automode             Ds.w 1
0003EBE8 <AmiBlitz3.ab3@29300> stackcorrect         Ds.w 1
0003EBEA <AmiBlitz3.ab3@29301> formode              Ds.w 1
0003EBEE <AmiBlitz3.ab3@29302> limitregs            Ds.l 1
0003EBF0 <AmiBlitz3.ab3@29303> onestep              Ds.w 1
0003EBF4 <AmiBlitz3.ab3@29304> reqmode              Ds.l 1
0003EC94 <AmiBlitz3.ab3@29305> inctab               Ds.l 40
0003EC96 <AmiBlitz3.ab3@29306> funcoptimize_deprecated  Ds.w 1 ; deprecated, see comByte_FuncOptimize ; Wanderer
0003EC9A <AmiBlitz3.ab3@29307> includeline          Ds.l 1
0003EC9E <AmiBlitz3.ab3@29308> morememadd           Ds.l 1
0003ECA0 <AmiBlitz3.ab3@29309> objectcount          Ds.w 1
0003ECA4 <AmiBlitz3.ab3@29310> savefuncspace        Ds.l 1
0003ECA8 <AmiBlitz3.ab3@29311> lasttrap1            Ds.l 1
0003ECAC <AmiBlitz3.ab3@29312> currentfunccall      Ds.l 1
0003ECAD <AmiBlitz3.ab3@29313> skipfunc             Ds.b 1
0003ECAE <AmiBlitz3.ab3@29314> resdisable           Ds.b 1
0003ECAF <AmiBlitz3.ab3@29315> skiptoggle           Ds.b 1
0003ECB0 <AmiBlitz3.ab3@29316> developobject        Ds.b 1
0003ECB2 <AmiBlitz3.ab3@29317> iniffcommand         Ds.w 1
0003ECB4 <AmiBlitz3.ab3@29318> startoffsetmore      Ds.w 1
0003ECB6 <AmiBlitz3.ab3@29319> olddebugmode         Ds.w 1
0003ECBA <AmiBlitz3.ab3@29320> fpucodeglobal        Ds.l 1
0003ECBE <AmiBlitz3.ab3@29321> fpucodelocal         Ds.l 1
0003ECC2 <AmiBlitz3.ab3@29322> maxregs              Ds.l 1
0003ECC6 <AmiBlitz3.ab3@29323> fpucode              Ds.l 1
0003ECC8 <AmiBlitz3.ab3@29324> firstmline           Ds.w 1
0003ED08 <AmiBlitz3.ab3@29325> regtable             Ds.l 16
0003ED0A <AmiBlitz3.ab3@29326> exdebug              Ds.w 1
0003ED0C <AmiBlitz3.ab3@29327> a2offset2            Ds.w 1
0003ED10 <AmiBlitz3.ab3@29328> parnumtemp           Ds.l 1
0003ED11 <AmiBlitz3.ab3@29329> doimmediate          Ds.b 1
0003ED12 <AmiBlitz3.ab3@29330> notypecheck          Ds.b 1
0003ED14 <AmiBlitz3.ab3@29331> vartype              Ds.w 1
0003ED15 <AmiBlitz3.ab3@29332> peekaddrsize         Ds.b 1
0003ED16 <AmiBlitz3.ab3@29333> declare2             Ds.b 1
0003ED18 <AmiBlitz3.ab3@29334> parameternum         Ds.w 1
0003ED1C <AmiBlitz3.ab3@29335> lasttoken            Ds.l 1
0003ED1E <AmiBlitz3.ab3@29336> newvariable          Ds.w 1
0003ED1F <AmiBlitz3.ab3@29337> declare              Ds.b 1
0003ED20 <AmiBlitz3.ab3@29338> typecheck            Ds.b 1
0003ED21 <AmiBlitz3.ab3@29339> nowdeclare           Ds.b 1
0003ED22 <AmiBlitz3.ab3@29340> dimkeep              Ds.b 1
0003ED23 <AmiBlitz3.ab3@29341> a4a5store            Ds.b 1
0003ED24 <AmiBlitz3.ab3@29342> ___freetouse         Ds.b 1
0003ED28 <AmiBlitz3.ab3@29343> firstiffstore        Ds.l 1
0003ED2C <AmiBlitz3.ab3@29344> destpointer2         Ds.l 1
0003ED30 <AmiBlitz3.ab3@29345> stackaddr            Ds.l 1
0003EE34 <AmiBlitz3.ab3@29346> allowtab             Ds.b 260
0003EF34 <AmiBlitz3.ab3@29347> templine             Ds.b 256
0003EF36 <AmiBlitz3.ab3@29348> thenmode             Ds.w 1
0003EF38 <AmiBlitz3.ab3@29349> temp                 Ds.w 1
0003EF3A <AmiBlitz3.ab3@29350> tempregnum           Ds.w 1
0003EF3E <AmiBlitz3.ab3@29352> numlines2            Ds.l 1
0003EF42 <AmiBlitz3.ab3@29353> numlines             Ds.l 1
0003EF44 <AmiBlitz3.ab3@29354> exmac                Ds.w 1
0003EF46 <AmiBlitz3.ab3@29355> returncode           Ds.w 1
0003EF4A <AmiBlitz3.ab3@29356> fp0iff               Ds.l 1
0003EF4E <AmiBlitz3.ab3@29357> fp0addr              Ds.l 1
0003EF50 <AmiBlitz3.ab3@29358> fp0mode              Ds.w 1
0003EF52 <AmiBlitz3.ab3@29359> fp0var               Ds.w 1
0003EF54 <AmiBlitz3.ab3@29360> fastfunc             Ds.w 1
0003EF56 <AmiBlitz3.ab3@29361> retmode              Ds.w 1
0003EF58 <AmiBlitz3.ab3@29362> parnum               Ds.w 1
0003EF5A <AmiBlitz3.ab3@29363> regmask              Ds.w 1
0003EF5C <AmiBlitz3.ab3@29364> regnumfunc           Ds.w 1
0003EF5E <AmiBlitz3.ab3@29365> libmode              Ds.w 1
0003EF62 <AmiBlitz3.ab3@29366> oldline              Ds.l 1
0003EF66 <AmiBlitz3.ab3@29367> sourceline3          Ds.l 1
0003F02E <AmiBlitz3.ab3@29368> debugstore           Ds.b 200
0003F032 <AmiBlitz3.ab3@29369> deststore            Ds.l 1
0003F036 <AmiBlitz3.ab3@29371> loada                Ds.l 1
0003F03A <AmiBlitz3.ab3@29373> currtype             Ds.l 1
0003F03E <AmiBlitz3.ab3@29374> arrayoffset          Ds.l 1
0003F042 <AmiBlitz3.ab3@29375> lastlabel            Ds.l 1
0003F046 <AmiBlitz3.ab3@29376> curtemplabel         Ds.l 1
0003F04A <AmiBlitz3.ab3@29377> sourceline2          Ds.l 1
0003F14A <AmiBlitz3.ab3@29378> chartab              Ds.b 256
0003F1C2 <AmiBlitz3.ab3@29379> tempspace            Ds.b 120
000BF1D2 <AmiBlitz3.ab3@29380> instrtab             Ds.l 65538*2
000C71D2 <AmiBlitz3.ab3@29382> labelhash            Ds.l 8192                             ;-bssstore clear every compile pass
000E71D6 <AmiBlitz3.ab3@29383> replacedat           Ds.w 65538
000EF1D6 <AmiBlitz3.ab3@29384> variablehash         Ds.l 8192
000EF1DA <AmiBlitz3.ab3@29385> newinitaddr          Ds.l 1
000EF1DE <AmiBlitz3.ab3@29386> realbssend           Ds.l 1
000EF1E0 <AmiBlitz3.ab3@29387> saved0               Ds.w 1
000EF260 <AmiBlitz3.ab3@29388> lastpath             Ds.b 128
000EF2E0 <AmiBlitz3.ab3@29389> lastpath2            Ds.b 128
000EF3A8 <AmiBlitz3.ab3@29390> fpustackbase         Ds.w 100
000EF3AC <AmiBlitz3.ab3@29391> 
000EF3AE <AmiBlitz3.ab3@29392> isconstantvalue      Dc.w 0  ; contain a type (1-7) if a constant expression is used as a Parameter or on right side of =
000EF3B2 <AmiBlitz3.ab3@29393> lastfunction         Dc.l 0  ; the address of the function in the Parameter or rght side of =
000EF3B6 <AmiBlitz3.ab3@29394> leftsidetype         Dc.l 0  ;this contain the address of the type from the left side of the variable assign
000EF3BA <AmiBlitz3.ab3@29395> rightsidetype        Dc.l 0  ; same as above but right side
000EF3BE <AmiBlitz3.ab3@29398> trap15temp           Ds.l 1
000EF3C2 <AmiBlitz3.ab3@29399> trap15temp2          Ds.l 1
000EF3C6 <AmiBlitz3.ab3@29400> templibend           Ds.l 1
000EF3CA <AmiBlitz3.ab3@29401> tempdata1start       Ds.l 1
000EF3CE <AmiBlitz3.ab3@29402> stacktrack           Ds.l 1
000EF3D2 <AmiBlitz3.ab3@29403> pad                  Ds.l 1
000EF4D2 <AmiBlitz3.ab3@29404> includetemp          Ds.b 256
000EFED2 <AmiBlitz3.ab3@29405> includetemp2         Ds.b 256*10
000EFED4 <AmiBlitz3.ab3@29406> funccall             Ds.w 1
000EFED8 <AmiBlitz3.ab3@29409> ptr_resfile          Ds.l 1
000EFEDA <AmiBlitz3.ab3@29410> CalculatorButtonBinFlag:    Ds.w 1
000EFEDC <AmiBlitz3.ab3@29411> CalculatorButtonDecFlag:    Ds.w 1
000EFEE0 <AmiBlitz3.ab3@29412> ped_startup_addr:    Ds.l 1
000EFEE1 <AmiBlitz3.ab3@29413> start_without_libs:  Ds.b 1
000EFEE2 <AmiBlitz3.ab3@29414> skip_bytes:          Ds.b 1
000EFEE6 <AmiBlitz3.ab3@29415> functionreturntype   Ds.l 1  ; a temp store of it.do not read this value
000EFEEA <AmiBlitz3.ab3@29416> beforeparameterfetch Ds.l 1
000EFEEE <AmiBlitz3.ab3@29417> typetocast           Ds.l 1
000EFEF2 <AmiBlitz3.ab3@29418> errorcounter         Ds.l 1
000EFEF3 <AmiBlitz3.ab3@29419> iserror              Ds.b 1
000EFEF4 <AmiBlitz3.ab3@29420> Even
000EFEF8 <AmiBlitz3.ab3@29422> CLIMode:             Dc.l 0
000EFEFC <AmiBlitz3.ab3@29423> XTRAEndPadBytes:     Dc.l 0                             ; 4 fill/pad/termination bytes for the xtra write function  tomsmart1
000EFF00 <AmiBlitz3.ab3@29424> maxerrorcount:       Ds.l 1                             ; added to make it changeable in CLI Mode tomsmart1
