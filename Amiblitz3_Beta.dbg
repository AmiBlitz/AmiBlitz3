00000008 <AmiBlitz3.ab3@0> 
00000014 <AmiBlitz3.ab3@43> optimize 5                               ; don't use FPU (opt. 4)
00000076 <AmiBlitz3.ab3@64> !initasm                                 ; some initial mumbo jumbo
000000A0 <AmiBlitz3.ab3@65> !basic
000000AC <AmiBlitz3.ab3@70> cli_verbose = -1
000000B2 <AmiBlitz3.ab3@71> CLIMode     = False
000000C8 <AmiBlitz3.ab3@72> MaxLen cli_tempstr.s = 1024
000000E4 <AmiBlitz3.ab3@73> GetCurrentDirName_ &cli_tempstr,1024  ; get the current dir to restore it on exit
0000010E <AmiBlitz3.ab3@74> cli_path.s = Peek.s(&cli_tempstr)
0000010E <library_offsets.ab3@1> XINCLUDE "/Shared/library_offsets.ab3"   ; needed includes
0000010E <AmiBlitz3.ab3@78> XINCLUDE "/Shared/library_offsets.ab3"   ; needed includes
0000010E <dos.include.ab3@1> XINCLUDE "dos.include.ab3"
0000010E <error.include.ab3@1> XINCLUDE "dos.include.ab3"
00000146 <error.include.ab3@62> XINCLUDE "dos.include.ab3"
0000016E <error.include.ab3@63> XINCLUDE "dos.include.ab3"
00000196 <error.include.ab3@64> XINCLUDE "dos.include.ab3"
000001BE <error.include.ab3@65> XINCLUDE "dos.include.ab3"
000001C4 <error.include.ab3@66> XINCLUDE "dos.include.ab3"
000001F8 <error.include.ab3@67> XINCLUDE "dos.include.ab3"
0000022C <error.include.ab3@68> XINCLUDE "dos.include.ab3"
00000260 <error.include.ab3@69> XINCLUDE "dos.include.ab3"
0000027C <error.include.ab3@73> XINCLUDE "dos.include.ab3"
00000296 <error.include.ab3@99> XINCLUDE "dos.include.ab3"
000002A2 <error.include.ab3@101> XINCLUDE "dos.include.ab3"
000002A6 <error.include.ab3@102> XINCLUDE "dos.include.ab3"
000002B4 <error.include.ab3@104> XINCLUDE "dos.include.ab3"
000002F6 <error.include.ab3@124> XINCLUDE "dos.include.ab3"
0000037A <error.include.ab3@126> XINCLUDE "dos.include.ab3"
000003E6 <error.include.ab3@127> XINCLUDE "dos.include.ab3"
00000400 <error.include.ab3@129> XINCLUDE "dos.include.ab3"
00000438 <error.include.ab3@130> XINCLUDE "dos.include.ab3"
00000498 <error.include.ab3@131> XINCLUDE "dos.include.ab3"
000004A6 <error.include.ab3@133> XINCLUDE "dos.include.ab3"
000004B4 <error.include.ab3@134> XINCLUDE "dos.include.ab3"
000004C2 <error.include.ab3@135> XINCLUDE "dos.include.ab3"
000004D0 <error.include.ab3@136> XINCLUDE "dos.include.ab3"
000004F8 <error.include.ab3@137> XINCLUDE "dos.include.ab3"
00000506 <error.include.ab3@138> XINCLUDE "dos.include.ab3"
0000050E <error.include.ab3@139> XINCLUDE "dos.include.ab3"
00000540 <error.include.ab3@141> XINCLUDE "dos.include.ab3"
0000055A <error.include.ab3@146> XINCLUDE "dos.include.ab3"
00000592 <error.include.ab3@147> XINCLUDE "dos.include.ab3"
00000598 <error.include.ab3@148> XINCLUDE "dos.include.ab3"
000005DC <error.include.ab3@149> XINCLUDE "dos.include.ab3"
00000624 <error.include.ab3@150> XINCLUDE "dos.include.ab3"
0000062E <error.include.ab3@154> XINCLUDE "dos.include.ab3"
00000648 <error.include.ab3@156> XINCLUDE "dos.include.ab3"
00000692 <error.include.ab3@195> XINCLUDE "dos.include.ab3"
0000069A <error.include.ab3@197> XINCLUDE "dos.include.ab3"
00000706 <error.include.ab3@198> XINCLUDE "dos.include.ab3"
00000728 <error.include.ab3@199> XINCLUDE "dos.include.ab3"
00000788 <error.include.ab3@200> XINCLUDE "dos.include.ab3"
00000796 <error.include.ab3@202> XINCLUDE "dos.include.ab3"
000007A4 <error.include.ab3@203> XINCLUDE "dos.include.ab3"
000007B2 <error.include.ab3@204> XINCLUDE "dos.include.ab3"
000007C0 <error.include.ab3@205> XINCLUDE "dos.include.ab3"
00000820 <error.include.ab3@206> XINCLUDE "dos.include.ab3"
0000082E <error.include.ab3@207> XINCLUDE "dos.include.ab3"
00000864 <error.include.ab3@210> XINCLUDE "dos.include.ab3"
0000086E <error.include.ab3@214> XINCLUDE "dos.include.ab3"
0000088A <error.include.ab3@215> XINCLUDE "dos.include.ab3"
0000088A <multilist.include.ab3@1> XINCLUDE "dos.include.ab3"
0000088A <strptr.include.ab3@1> XINCLUDE "dos.include.ab3"
0000088A <useful.include.ab3@1> XINCLUDE "dos.include.ab3"
000008B8 <useful.include.ab3@286> XINCLUDE "dos.include.ab3"
000008C2 <useful.include.ab3@287> XINCLUDE "dos.include.ab3"
000008D6 <useful.include.ab3@288> XINCLUDE "dos.include.ab3"
000008DE <useful.include.ab3@289> XINCLUDE "dos.include.ab3"
00000906 <useful.include.ab3@290> XINCLUDE "dos.include.ab3"
0000092C <useful.include.ab3@291> XINCLUDE "dos.include.ab3"
0000094C <useful.include.ab3@294> XINCLUDE "dos.include.ab3"
0000095A <useful.include.ab3@295> XINCLUDE "dos.include.ab3"
00000980 <useful.include.ab3@296> XINCLUDE "dos.include.ab3"
00000988 <useful.include.ab3@298> XINCLUDE "dos.include.ab3"
00000990 <useful.include.ab3@299> XINCLUDE "dos.include.ab3"
00000996 <useful.include.ab3@300> XINCLUDE "dos.include.ab3"
000009B2 <useful.include.ab3@301> XINCLUDE "dos.include.ab3"
000009D6 <useful.include.ab3@302> XINCLUDE "dos.include.ab3"
000009EA <useful.include.ab3@303> XINCLUDE "dos.include.ab3"
000009F0 <useful.include.ab3@304> XINCLUDE "dos.include.ab3"
00000A3A <useful.include.ab3@305> XINCLUDE "dos.include.ab3"
00000A3C <useful.include.ab3@306> XINCLUDE "dos.include.ab3"
00000A4A <useful.include.ab3@308> XINCLUDE "dos.include.ab3"
00000A6A <useful.include.ab3@310> XINCLUDE "dos.include.ab3"
00000AC8 <useful.include.ab3@311> XINCLUDE "dos.include.ab3"
00000ACE <useful.include.ab3@312> XINCLUDE "dos.include.ab3"
00000ADC <useful.include.ab3@313> XINCLUDE "dos.include.ab3"
00000AF0 <useful.include.ab3@314> XINCLUDE "dos.include.ab3"
00000B02 <useful.include.ab3@315> XINCLUDE "dos.include.ab3"
00000B10 <useful.include.ab3@316> XINCLUDE "dos.include.ab3"
00000B16 <useful.include.ab3@317> XINCLUDE "dos.include.ab3"
00000B22 <useful.include.ab3@318> XINCLUDE "dos.include.ab3"
00000B36 <useful.include.ab3@321> XINCLUDE "dos.include.ab3"
00000B4A <useful.include.ab3@322> XINCLUDE "dos.include.ab3"
00000B5C <useful.include.ab3@323> XINCLUDE "dos.include.ab3"
00000B6A <useful.include.ab3@324> XINCLUDE "dos.include.ab3"
00000B88 <useful.include.ab3@325> XINCLUDE "dos.include.ab3"
00000B8E <useful.include.ab3@326> XINCLUDE "dos.include.ab3"
00000BA2 <useful.include.ab3@330> XINCLUDE "dos.include.ab3"
00000BAC <useful.include.ab3@331> XINCLUDE "dos.include.ab3"
00000BB4 <useful.include.ab3@332> XINCLUDE "dos.include.ab3"
00000BD2 <useful.include.ab3@333> XINCLUDE "dos.include.ab3"
00000BD8 <useful.include.ab3@334> XINCLUDE "dos.include.ab3"
00000C04 <useful.include.ab3@335> XINCLUDE "dos.include.ab3"
00000C0A <useful.include.ab3@337> XINCLUDE "dos.include.ab3"
00000C1C <useful.include.ab3@338> XINCLUDE "dos.include.ab3"
00000C34 <useful.include.ab3@339> XINCLUDE "dos.include.ab3"
00000C4C <useful.include.ab3@340> XINCLUDE "dos.include.ab3"
00000C6A <useful.include.ab3@341> XINCLUDE "dos.include.ab3"
00000C6C <useful.include.ab3@343> XINCLUDE "dos.include.ab3"
00000C7A <useful.include.ab3@344> XINCLUDE "dos.include.ab3"
00000CA0 <useful.include.ab3@345> XINCLUDE "dos.include.ab3"
00000D34 <useful.include.ab3@346> XINCLUDE "dos.include.ab3"
00000D42 <useful.include.ab3@348> XINCLUDE "dos.include.ab3"
00000D48 <useful.include.ab3@349> XINCLUDE "dos.include.ab3"
00000D72 <useful.include.ab3@350> XINCLUDE "dos.include.ab3"
00000D90 <useful.include.ab3@351> XINCLUDE "dos.include.ab3"
00000D90 <strptr.include.ab3@37> XINCLUDE "dos.include.ab3"
00000DAA <strptr.include.ab3@96> XINCLUDE "dos.include.ab3"
00000DB4 <strptr.include.ab3@97> XINCLUDE "dos.include.ab3"
00000DFC <strptr.include.ab3@98> XINCLUDE "dos.include.ab3"
00000E00 <strptr.include.ab3@100> XINCLUDE "dos.include.ab3"
00000E2E <strptr.include.ab3@197> XINCLUDE "dos.include.ab3"
00000E38 <strptr.include.ab3@198> XINCLUDE "dos.include.ab3"
00000E80 <strptr.include.ab3@199> XINCLUDE "dos.include.ab3"
00000E94 <strptr.include.ab3@200> XINCLUDE "dos.include.ab3"
00000EA6 <strptr.include.ab3@201> XINCLUDE "dos.include.ab3"
00000ECA <strptr.include.ab3@205> XINCLUDE "dos.include.ab3"
00000ED4 <strptr.include.ab3@208> XINCLUDE "dos.include.ab3"
00000EE2 <strptr.include.ab3@209> XINCLUDE "dos.include.ab3"
00000EEC <strptr.include.ab3@210> XINCLUDE "dos.include.ab3"
00000F14 <strptr.include.ab3@211> XINCLUDE "dos.include.ab3"
00000F2E <strptr.include.ab3@212> XINCLUDE "dos.include.ab3"
00000F46 <strptr.include.ab3@216> XINCLUDE "dos.include.ab3"
00000F60 <strptr.include.ab3@282> XINCLUDE "dos.include.ab3"
00000F6A <strptr.include.ab3@283> XINCLUDE "dos.include.ab3"
00000F78 <strptr.include.ab3@284> XINCLUDE "dos.include.ab3"
00000FAA <strptr.include.ab3@285> XINCLUDE "dos.include.ab3"
00000FC8 <strptr.include.ab3@287> XINCLUDE "dos.include.ab3"
00000FD2 <strptr.include.ab3@288> XINCLUDE "dos.include.ab3"
00000FD2 <multilist.include.ab3@44> XINCLUDE "dos.include.ab3"
00000FE8 <multilist.include.ab3@61> XINCLUDE "dos.include.ab3"
00001002 <multilist.include.ab3@406> XINCLUDE "dos.include.ab3"
0000100C <multilist.include.ab3@407> XINCLUDE "dos.include.ab3"
0000102E <multilist.include.ab3@408> XINCLUDE "dos.include.ab3"
00001052 <multilist.include.ab3@409> XINCLUDE "dos.include.ab3"
00001064 <multilist.include.ab3@410> XINCLUDE "dos.include.ab3"
0000107C <multilist.include.ab3@411> XINCLUDE "dos.include.ab3"
00001090 <multilist.include.ab3@412> XINCLUDE "dos.include.ab3"
000010A2 <multilist.include.ab3@415> XINCLUDE "dos.include.ab3"
000010B2 <multilist.include.ab3@416> XINCLUDE "dos.include.ab3"
000010B8 <multilist.include.ab3@417> XINCLUDE "dos.include.ab3"
000010C8 <multilist.include.ab3@418> XINCLUDE "dos.include.ab3"
000010D8 <multilist.include.ab3@419> XINCLUDE "dos.include.ab3"
000010F2 <multilist.include.ab3@420> XINCLUDE "dos.include.ab3"
000010F6 <multilist.include.ab3@422> XINCLUDE "dos.include.ab3"
00001110 <multilist.include.ab3@585> XINCLUDE "dos.include.ab3"
00001140 <multilist.include.ab3@586> XINCLUDE "dos.include.ab3"
0000114A <multilist.include.ab3@588> XINCLUDE "dos.include.ab3"
00001154 <multilist.include.ab3@589> XINCLUDE "dos.include.ab3"
00001176 <multilist.include.ab3@590> XINCLUDE "dos.include.ab3"
0000119A <multilist.include.ab3@591> XINCLUDE "dos.include.ab3"
000011AC <multilist.include.ab3@592> XINCLUDE "dos.include.ab3"
000011C4 <multilist.include.ab3@593> XINCLUDE "dos.include.ab3"
000011D8 <multilist.include.ab3@594> XINCLUDE "dos.include.ab3"
000011EA <multilist.include.ab3@597> XINCLUDE "dos.include.ab3"
000011FA <multilist.include.ab3@598> XINCLUDE "dos.include.ab3"
00001200 <multilist.include.ab3@599> XINCLUDE "dos.include.ab3"
00001210 <multilist.include.ab3@600> XINCLUDE "dos.include.ab3"
00001220 <multilist.include.ab3@601> XINCLUDE "dos.include.ab3"
0000123A <multilist.include.ab3@602> XINCLUDE "dos.include.ab3"
00001240 <multilist.include.ab3@603> XINCLUDE "dos.include.ab3"
00001246 <multilist.include.ab3@604> XINCLUDE "dos.include.ab3"
0000124A <multilist.include.ab3@605> XINCLUDE "dos.include.ab3"
00001264 <multilist.include.ab3@713> XINCLUDE "dos.include.ab3"
0000126C <multilist.include.ab3@714> XINCLUDE "dos.include.ab3"
00001276 <multilist.include.ab3@715> XINCLUDE "dos.include.ab3"
0000128C <multilist.include.ab3@716> XINCLUDE "dos.include.ab3"
000012A0 <multilist.include.ab3@717> XINCLUDE "dos.include.ab3"
000012C4 <multilist.include.ab3@718> XINCLUDE "dos.include.ab3"
000012D2 <multilist.include.ab3@721> XINCLUDE "dos.include.ab3"
000012DC <multilist.include.ab3@722> XINCLUDE "dos.include.ab3"
000012E2 <multilist.include.ab3@723> XINCLUDE "dos.include.ab3"
000012EC <multilist.include.ab3@724> XINCLUDE "dos.include.ab3"
000012F2 <multilist.include.ab3@725> XINCLUDE "dos.include.ab3"
00001310 <multilist.include.ab3@742> XINCLUDE "dos.include.ab3"
00001318 <multilist.include.ab3@743> XINCLUDE "dos.include.ab3"
00001322 <multilist.include.ab3@744> XINCLUDE "dos.include.ab3"
00001340 <multilist.include.ab3@745> XINCLUDE "dos.include.ab3"
00001356 <multilist.include.ab3@746> XINCLUDE "dos.include.ab3"
0000136A <multilist.include.ab3@747> XINCLUDE "dos.include.ab3"
0000139E <multilist.include.ab3@748> XINCLUDE "dos.include.ab3"
000013AC <multilist.include.ab3@751> XINCLUDE "dos.include.ab3"
000013B6 <multilist.include.ab3@752> XINCLUDE "dos.include.ab3"
000013BC <multilist.include.ab3@753> XINCLUDE "dos.include.ab3"
000013C6 <multilist.include.ab3@754> XINCLUDE "dos.include.ab3"
000013CA <multilist.include.ab3@756> XINCLUDE "dos.include.ab3"
000013D0 <multilist.include.ab3@757> XINCLUDE "dos.include.ab3"
000013EA <multilist.include.ab3@795> XINCLUDE "dos.include.ab3"
000013F4 <multilist.include.ab3@796> XINCLUDE "dos.include.ab3"
000013FE <multilist.include.ab3@797> XINCLUDE "dos.include.ab3"
00001414 <multilist.include.ab3@798> XINCLUDE "dos.include.ab3"
00001424 <multilist.include.ab3@799> XINCLUDE "dos.include.ab3"
0000142E <multilist.include.ab3@801> XINCLUDE "dos.include.ab3"
00001434 <multilist.include.ab3@802> XINCLUDE "dos.include.ab3"
00001438 <multilist.include.ab3@803> XINCLUDE "dos.include.ab3"
0000145A <multilist.include.ab3@821> XINCLUDE "dos.include.ab3"
00001462 <multilist.include.ab3@822> XINCLUDE "dos.include.ab3"
0000147C <multilist.include.ab3@823> XINCLUDE "dos.include.ab3"
00001486 <multilist.include.ab3@824> XINCLUDE "dos.include.ab3"
0000149C <multilist.include.ab3@825> XINCLUDE "dos.include.ab3"
000014B0 <multilist.include.ab3@826> XINCLUDE "dos.include.ab3"
00001506 <multilist.include.ab3@827> XINCLUDE "dos.include.ab3"
00001540 <multilist.include.ab3@828> XINCLUDE "dos.include.ab3"
00001552 <multilist.include.ab3@829> XINCLUDE "dos.include.ab3"
00001574 <multilist.include.ab3@830> XINCLUDE "dos.include.ab3"
0000157A <multilist.include.ab3@831> XINCLUDE "dos.include.ab3"
000015D0 <multilist.include.ab3@832> XINCLUDE "dos.include.ab3"
0000160A <multilist.include.ab3@833> XINCLUDE "dos.include.ab3"
00001610 <multilist.include.ab3@835> XINCLUDE "dos.include.ab3"
0000164A <multilist.include.ab3@836> XINCLUDE "dos.include.ab3"
00001684 <multilist.include.ab3@837> XINCLUDE "dos.include.ab3"
00001696 <multilist.include.ab3@839> XINCLUDE "dos.include.ab3"
000016A0 <multilist.include.ab3@840> XINCLUDE "dos.include.ab3"
000016A6 <multilist.include.ab3@841> XINCLUDE "dos.include.ab3"
000016B0 <multilist.include.ab3@842> XINCLUDE "dos.include.ab3"
000016C4 <multilist.include.ab3@843> XINCLUDE "dos.include.ab3"
0000170A <multilist.include.ab3@870> XINCLUDE "dos.include.ab3"
00001712 <multilist.include.ab3@871> XINCLUDE "dos.include.ab3"
00001730 <multilist.include.ab3@872> XINCLUDE "dos.include.ab3"
0000175C <multilist.include.ab3@873> XINCLUDE "dos.include.ab3"
0000177A <multilist.include.ab3@874> XINCLUDE "dos.include.ab3"
00001794 <multilist.include.ab3@875> XINCLUDE "dos.include.ab3"
000017AE <multilist.include.ab3@876> XINCLUDE "dos.include.ab3"
00001830 <multilist.include.ab3@877> XINCLUDE "dos.include.ab3"
00001844 <multilist.include.ab3@879> XINCLUDE "dos.include.ab3"
0000185C <multilist.include.ab3@880> XINCLUDE "dos.include.ab3"
00001862 <multilist.include.ab3@881> XINCLUDE "dos.include.ab3"
0000187A <multilist.include.ab3@882> XINCLUDE "dos.include.ab3"
00001890 <multilist.include.ab3@884> XINCLUDE "dos.include.ab3"
000018AA <multilist.include.ab3@886> XINCLUDE "dos.include.ab3"
000018BE <multilist.include.ab3@887> XINCLUDE "dos.include.ab3"
000018CC <multilist.include.ab3@888> XINCLUDE "dos.include.ab3"
00001922 <multilist.include.ab3@889> XINCLUDE "dos.include.ab3"
00001958 <multilist.include.ab3@890> XINCLUDE "dos.include.ab3"
00001988 <multilist.include.ab3@891> XINCLUDE "dos.include.ab3"
00001A10 <multilist.include.ab3@893> XINCLUDE "dos.include.ab3"
00001A16 <multilist.include.ab3@894> XINCLUDE "dos.include.ab3"
00001A24 <multilist.include.ab3@895> XINCLUDE "dos.include.ab3"
00001A7A <multilist.include.ab3@896> XINCLUDE "dos.include.ab3"
00001AB0 <multilist.include.ab3@897> XINCLUDE "dos.include.ab3"
00001AE0 <multilist.include.ab3@898> XINCLUDE "dos.include.ab3"
00001AE6 <multilist.include.ab3@901> XINCLUDE "dos.include.ab3"
00001B00 <multilist.include.ab3@902> XINCLUDE "dos.include.ab3"
00001B0E <multilist.include.ab3@903> XINCLUDE "dos.include.ab3"
00001B48 <multilist.include.ab3@904> XINCLUDE "dos.include.ab3"
00001B7E <multilist.include.ab3@905> XINCLUDE "dos.include.ab3"
00001BAE <multilist.include.ab3@906> XINCLUDE "dos.include.ab3"
00001BBC <multilist.include.ab3@909> XINCLUDE "dos.include.ab3"
00001BC6 <multilist.include.ab3@910> XINCLUDE "dos.include.ab3"
00001BCC <multilist.include.ab3@911> XINCLUDE "dos.include.ab3"
00001BD6 <multilist.include.ab3@912> XINCLUDE "dos.include.ab3"
00001BEA <multilist.include.ab3@913> XINCLUDE "dos.include.ab3"
00001BEA <dos.include.ab3@57> XINCLUDE "dos.include.ab3"
00001BEA <wbstart.include.ab3@1> XINCLUDE "dos.include.ab3"
00001C00 <wbstart.include.ab3@58> XINCLUDE "dos.include.ab3"
00001C0A <wbstart.include.ab3@59> XINCLUDE "dos.include.ab3"
00001C22 <wbstart.include.ab3@61> XINCLUDE "dos.include.ab3"
00001C24 <wbstart.include.ab3@63> XINCLUDE "dos.include.ab3"
00001C52 <wbstart.include.ab3@64> XINCLUDE "dos.include.ab3"
00001C52 <dos.include.ab3@59> XINCLUDE "dos.include.ab3"
00001C68 <dos.include.ab3@61> XINCLUDE "dos.include.ab3"
00001C70 <dos.include.ab3@79> XINCLUDE "dos.include.ab3"
00001C78 <dos.include.ab3@80> XINCLUDE "dos.include.ab3"
00001CA0 <dos.include.ab3@81> XINCLUDE "dos.include.ab3"
00001CA8 <dos.include.ab3@82> XINCLUDE "dos.include.ab3"
00001CD0 <dos.include.ab3@83> XINCLUDE "dos.include.ab3"
00001CF8 <dos.include.ab3@84> XINCLUDE "dos.include.ab3"
00001D20 <dos.include.ab3@85> XINCLUDE "dos.include.ab3"
00001D28 <dos.include.ab3@86> XINCLUDE "dos.include.ab3"
00001D30 <dos.include.ab3@87> XINCLUDE "dos.include.ab3"
00001D38 <dos.include.ab3@88> XINCLUDE "dos.include.ab3"
00001D40 <dos.include.ab3@89> XINCLUDE "dos.include.ab3"
00001D48 <dos.include.ab3@90> XINCLUDE "dos.include.ab3"
00001D50 <dos.include.ab3@91> XINCLUDE "dos.include.ab3"
00001D58 <dos.include.ab3@92> XINCLUDE "dos.include.ab3"
00001D60 <dos.include.ab3@93> XINCLUDE "dos.include.ab3"
00001D68 <dos.include.ab3@94> XINCLUDE "dos.include.ab3"
00001D88 <dos.include.ab3@95> XINCLUDE "dos.include.ab3"
00001D90 <dos.include.ab3@96> XINCLUDE "dos.include.ab3"
00001D98 <dos.include.ab3@97> XINCLUDE "dos.include.ab3"
00001DC0 <dos.include.ab3@99> XINCLUDE "dos.include.ab3"
00001DD6 <dos.include.ab3@130> XINCLUDE "dos.include.ab3"
00001DE2 <dos.include.ab3@131> XINCLUDE "dos.include.ab3"
00001DE6 <dos.include.ab3@132> XINCLUDE "dos.include.ab3"
00001DFC <dos.include.ab3@145> XINCLUDE "dos.include.ab3"
00001E16 <dos.include.ab3@146> XINCLUDE "dos.include.ab3"
00001E2C <dos.include.ab3@147> XINCLUDE "dos.include.ab3"
00001E56 <dos.include.ab3@148> XINCLUDE "dos.include.ab3"
00001E60 <dos.include.ab3@149> XINCLUDE "dos.include.ab3"
00001E66 <dos.include.ab3@150> XINCLUDE "dos.include.ab3"
00001E7C <dos.include.ab3@163> XINCLUDE "dos.include.ab3"
00001E96 <dos.include.ab3@164> XINCLUDE "dos.include.ab3"
00001EAC <dos.include.ab3@165> XINCLUDE "dos.include.ab3"
00001ED6 <dos.include.ab3@166> XINCLUDE "dos.include.ab3"
00001EE0 <dos.include.ab3@167> XINCLUDE "dos.include.ab3"
00001EE6 <dos.include.ab3@168> XINCLUDE "dos.include.ab3"
00001F10 <dos.include.ab3@184> XINCLUDE "dos.include.ab3"
00001F1C <dos.include.ab3@185> XINCLUDE "dos.include.ab3"
00001F3C <dos.include.ab3@186> XINCLUDE "dos.include.ab3"
00001F46 <dos.include.ab3@187> XINCLUDE "dos.include.ab3"
00001F56 <dos.include.ab3@188> XINCLUDE "dos.include.ab3"
00001F66 <dos.include.ab3@189> XINCLUDE "dos.include.ab3"
00001F70 <dos.include.ab3@191> XINCLUDE "dos.include.ab3"
00001F8A <dos.include.ab3@192> XINCLUDE "dos.include.ab3"
00001FA0 <dos.include.ab3@430> XINCLUDE "dos.include.ab3"
00001FB2 <dos.include.ab3@432> XINCLUDE "dos.include.ab3"
0000202C <dos.include.ab3@433> XINCLUDE "dos.include.ab3"
00002056 <dos.include.ab3@434> XINCLUDE "dos.include.ab3"
0000206E <dos.include.ab3@435> XINCLUDE "dos.include.ab3"
00002084 <dos.include.ab3@461> XINCLUDE "dos.include.ab3"
00002096 <dos.include.ab3@462> XINCLUDE "dos.include.ab3"
0000209A <dos.include.ab3@463> XINCLUDE "dos.include.ab3"
000020B0 <dos.include.ab3@479> XINCLUDE "dos.include.ab3"
000020B2 <dos.include.ab3@480> XINCLUDE "dos.include.ab3"
000020EC <dos.include.ab3@541> XINCLUDE "dos.include.ab3"
00002120 <dos.include.ab3@543> XINCLUDE "dos.include.ab3"
00002146 <dos.include.ab3@544> XINCLUDE "dos.include.ab3"
00002166 <dos.include.ab3@545> XINCLUDE "dos.include.ab3"
00002186 <dos.include.ab3@546> XINCLUDE "dos.include.ab3"
000021B0 <dos.include.ab3@549> XINCLUDE "dos.include.ab3"
000021FC <dos.include.ab3@551> XINCLUDE "dos.include.ab3"
0000220E <dos.include.ab3@552> XINCLUDE "dos.include.ab3"
0000225E <dos.include.ab3@553> XINCLUDE "dos.include.ab3"
00002288 <dos.include.ab3@556> XINCLUDE "dos.include.ab3"
000022A6 <dos.include.ab3@558> XINCLUDE "dos.include.ab3"
000022D0 <dos.include.ab3@674> XINCLUDE "dos.include.ab3"
000022E6 <dos.include.ab3@675> XINCLUDE "dos.include.ab3"
000022F0 <dos.include.ab3@676> XINCLUDE "dos.include.ab3"
00002318 <dos.include.ab3@677> XINCLUDE "dos.include.ab3"
0000231E <dos.include.ab3@678> XINCLUDE "dos.include.ab3"
00002346 <dos.include.ab3@679> XINCLUDE "dos.include.ab3"
00002370 <dos.include.ab3@681> XINCLUDE "dos.include.ab3"
0000238E <dos.include.ab3@682> XINCLUDE "dos.include.ab3"
000023B8 <dos.include.ab3@705> XINCLUDE "dos.include.ab3"
00002428 <dos.include.ab3@706> XINCLUDE "dos.include.ab3"
00002452 <dos.include.ab3@707> XINCLUDE "dos.include.ab3"
00002470 <dos.include.ab3@708> XINCLUDE "dos.include.ab3"
0000249A <dos.include.ab3@743> XINCLUDE "dos.include.ab3"
000024BA <dos.include.ab3@744> XINCLUDE "dos.include.ab3"
000024E6 <dos.include.ab3@745> XINCLUDE "dos.include.ab3"
000024F0 <dos.include.ab3@746> XINCLUDE "dos.include.ab3"
0000250A <dos.include.ab3@747> XINCLUDE "dos.include.ab3"
00002534 <dos.include.ab3@894> XINCLUDE "dos.include.ab3"
000025E2 <dos.include.ab3@895> XINCLUDE "dos.include.ab3"
000025F8 <dos.include.ab3@896> XINCLUDE "dos.include.ab3"
00002602 <dos.include.ab3@897> XINCLUDE "dos.include.ab3"
0000262A <dos.include.ab3@898> XINCLUDE "dos.include.ab3"
00002634 <dos.include.ab3@899> XINCLUDE "dos.include.ab3"
0000263A <dos.include.ab3@900> XINCLUDE "dos.include.ab3"
00002640 <dos.include.ab3@901> XINCLUDE "dos.include.ab3"
00002646 <dos.include.ab3@902> XINCLUDE "dos.include.ab3"
00002658 <dos.include.ab3@904> XINCLUDE "dos.include.ab3"
00002662 <dos.include.ab3@906> XINCLUDE "dos.include.ab3"
0000267C <dos.include.ab3@907> XINCLUDE "dos.include.ab3"
000026BA <dos.include.ab3@928> XINCLUDE "dos.include.ab3"
000026C2 <dos.include.ab3@929> XINCLUDE "dos.include.ab3"
00002770 <dos.include.ab3@930> XINCLUDE "dos.include.ab3"
00002784 <dos.include.ab3@931> XINCLUDE "dos.include.ab3"
000027C6 <dos.include.ab3@932> XINCLUDE "dos.include.ab3"
000027E6 <dos.include.ab3@934> XINCLUDE "dos.include.ab3"
000027F0 <dos.include.ab3@935> XINCLUDE "dos.include.ab3"
0000280C <dos.include.ab3@936> XINCLUDE "dos.include.ab3"
00002846 <dos.include.ab3@988> XINCLUDE "dos.include.ab3"
0000284E <dos.include.ab3@989> XINCLUDE "dos.include.ab3"
000028FC <dos.include.ab3@990> XINCLUDE "dos.include.ab3"
00002932 <dos.include.ab3@991> XINCLUDE "dos.include.ab3"
00002952 <dos.include.ab3@992> XINCLUDE "dos.include.ab3"
00002970 <dos.include.ab3@993> XINCLUDE "dos.include.ab3"
00002994 <dos.include.ab3@994> XINCLUDE "dos.include.ab3"
0000299E <dos.include.ab3@996> XINCLUDE "dos.include.ab3"
000029BA <dos.include.ab3@997> XINCLUDE "dos.include.ab3"
000029F4 <dos.include.ab3@1014> XINCLUDE "dos.include.ab3"
00002AA2 <dos.include.ab3@1015> XINCLUDE "dos.include.ab3"
00002ADA <dos.include.ab3@1016> XINCLUDE "dos.include.ab3"
00002AFA <dos.include.ab3@1017> XINCLUDE "dos.include.ab3"
00002B00 <dos.include.ab3@1018> XINCLUDE "dos.include.ab3"
00002B20 <dos.include.ab3@1019> XINCLUDE "dos.include.ab3"
00002B2A <dos.include.ab3@1020> XINCLUDE "dos.include.ab3"
00002B44 <dos.include.ab3@1021> XINCLUDE "dos.include.ab3"
00002B5C <dos.include.ab3@1022> XINCLUDE "dos.include.ab3"
00002B66 <dos.include.ab3@1025> XINCLUDE "dos.include.ab3"
00002B82 <dos.include.ab3@1026> XINCLUDE "dos.include.ab3"
00002BAC <dos.include.ab3@1161> XINCLUDE "dos.include.ab3"
00002BBA <dos.include.ab3@1163> XINCLUDE "dos.include.ab3"
00002C80 <dos.include.ab3@1164> XINCLUDE "dos.include.ab3"
00002CAA <dos.include.ab3@1165> XINCLUDE "dos.include.ab3"
00002CD2 <dos.include.ab3@1167> XINCLUDE "dos.include.ab3"
00002CFC <dos.include.ab3@1168> XINCLUDE "dos.include.ab3"
00002D26 <dos.include.ab3@1170> XINCLUDE "dos.include.ab3"
00002D44 <dos.include.ab3@1171> XINCLUDE "dos.include.ab3"
00002D6E <dos.include.ab3@1189> XINCLUDE "dos.include.ab3"
00002DDA <dos.include.ab3@1191> XINCLUDE "dos.include.ab3"
00002E02 <dos.include.ab3@1192> XINCLUDE "dos.include.ab3"
00002E10 <dos.include.ab3@1193> XINCLUDE "dos.include.ab3"
00002E44 <dos.include.ab3@1194> XINCLUDE "dos.include.ab3"
00002E52 <dos.include.ab3@1197> XINCLUDE "dos.include.ab3"
00002E74 <dos.include.ab3@1203> XINCLUDE "dos.include.ab3"
00002E82 <dos.include.ab3@1207> XINCLUDE "dos.include.ab3"
00002EA6 <dos.include.ab3@1208> XINCLUDE "dos.include.ab3"
00002ED0 <dos.include.ab3@1209> XINCLUDE "dos.include.ab3"
00002EFA <dos.include.ab3@1212> XINCLUDE "dos.include.ab3"
00002F18 <dos.include.ab3@1213> XINCLUDE "dos.include.ab3"
00002F42 <dos.include.ab3@1274> XINCLUDE "dos.include.ab3"
00002F9A <dos.include.ab3@1275> XINCLUDE "dos.include.ab3"
00002FC4 <dos.include.ab3@1276> XINCLUDE "dos.include.ab3"
00002FE2 <dos.include.ab3@1277> XINCLUDE "dos.include.ab3"
00002FF8 <dos.include.ab3@1351> XINCLUDE "dos.include.ab3"
00002FFE <dos.include.ab3@1353> XINCLUDE "dos.include.ab3"
00003008 <dos.include.ab3@1354> XINCLUDE "dos.include.ab3"
00003012 <dos.include.ab3@1355> XINCLUDE "dos.include.ab3"
00003030 <dos.include.ab3@1358> XINCLUDE "dos.include.ab3"
00003036 <dos.include.ab3@1359> XINCLUDE "dos.include.ab3"
0000303C <dos.include.ab3@1360> XINCLUDE "dos.include.ab3"
0000304C <dos.include.ab3@1362> XINCLUDE "dos.include.ab3"
00003052 <dos.include.ab3@1363> XINCLUDE "dos.include.ab3"
0000305A <dos.include.ab3@1364> XINCLUDE "dos.include.ab3"
00003082 <dos.include.ab3@1365> XINCLUDE "dos.include.ab3"
0000308C <dos.include.ab3@1366> XINCLUDE "dos.include.ab3"
00003096 <dos.include.ab3@1368> XINCLUDE "dos.include.ab3"
000030AA <dos.include.ab3@1369> XINCLUDE "dos.include.ab3"
000030C0 <dos.include.ab3@1474> XINCLUDE "dos.include.ab3"
000030C6 <dos.include.ab3@1480> XINCLUDE "dos.include.ab3"
000030EA <dos.include.ab3@1481> XINCLUDE "dos.include.ab3"
0000310E <dos.include.ab3@1482> XINCLUDE "dos.include.ab3"
00003132 <dos.include.ab3@1483> XINCLUDE "dos.include.ab3"
00003138 <dos.include.ab3@1484> XINCLUDE "dos.include.ab3"
00003164 <dos.include.ab3@1485> XINCLUDE "dos.include.ab3"
00003166 <dos.include.ab3@1486> XINCLUDE "dos.include.ab3"
00003194 <dos.include.ab3@1487> XINCLUDE "dos.include.ab3"
000031BE <dos.include.ab3@1503> XINCLUDE "dos.include.ab3"
00003242 <dos.include.ab3@1506> XINCLUDE "dos.include.ab3"
0000330A <dos.include.ab3@1507> XINCLUDE "dos.include.ab3"
00003314 <dos.include.ab3@1509> XINCLUDE "dos.include.ab3"
0000335E <dos.include.ab3@1510> XINCLUDE "dos.include.ab3"
000033AA <dos.include.ab3@1512> XINCLUDE "dos.include.ab3"
000033E2 <dos.include.ab3@1513> XINCLUDE "dos.include.ab3"
000033F4 <dos.include.ab3@1514> XINCLUDE "dos.include.ab3"
0000340A <dos.include.ab3@1515> XINCLUDE "dos.include.ab3"
00003410 <dos.include.ab3@1516> XINCLUDE "dos.include.ab3"
00003426 <dos.include.ab3@1517> XINCLUDE "dos.include.ab3"
0000345A <dos.include.ab3@1519> XINCLUDE "dos.include.ab3"
00003460 <dos.include.ab3@1520> XINCLUDE "dos.include.ab3"
0000346A <dos.include.ab3@1522> XINCLUDE "dos.include.ab3"
00003484 <dos.include.ab3@1523> XINCLUDE "dos.include.ab3"
000034CE <dos.include.ab3@1553> XINCLUDE "dos.include.ab3"
00003504 <dos.include.ab3@1555> XINCLUDE "dos.include.ab3"
00003528 <dos.include.ab3@1556> XINCLUDE "dos.include.ab3"
00003532 <dos.include.ab3@1557> XINCLUDE "dos.include.ab3"
0000355A <dos.include.ab3@1558> XINCLUDE "dos.include.ab3"
000035A2 <dos.include.ab3@1561> XINCLUDE "dos.include.ab3"
00003678 <dos.include.ab3@1563> XINCLUDE "dos.include.ab3"
000036A2 <dos.include.ab3@1564> XINCLUDE "dos.include.ab3"
000036C2 <dos.include.ab3@1565> XINCLUDE "dos.include.ab3"
000036FC <dos.include.ab3@1584> XINCLUDE "dos.include.ab3"
00003702 <dos.include.ab3@1586> XINCLUDE "dos.include.ab3"
00003708 <dos.include.ab3@1587> XINCLUDE "dos.include.ab3"
00003710 <dos.include.ab3@1588> XINCLUDE "dos.include.ab3"
00003746 <dos.include.ab3@1589> XINCLUDE "dos.include.ab3"
00003754 <dos.include.ab3@1590> XINCLUDE "dos.include.ab3"
0000375E <dos.include.ab3@1591> XINCLUDE "dos.include.ab3"
0000378A <dos.include.ab3@1592> XINCLUDE "dos.include.ab3"
00003798 <dos.include.ab3@1593> XINCLUDE "dos.include.ab3"
000037A2 <dos.include.ab3@1594> XINCLUDE "dos.include.ab3"
000037D0 <dos.include.ab3@1596> XINCLUDE "dos.include.ab3"
0000384E <dos.include.ab3@1599> XINCLUDE "dos.include.ab3"
000038A0 <dos.include.ab3@1602> XINCLUDE "dos.include.ab3"
000038B2 <dos.include.ab3@1603> XINCLUDE "dos.include.ab3"
00003920 <dos.include.ab3@1604> XINCLUDE "dos.include.ab3"
00003926 <dos.include.ab3@1605> XINCLUDE "dos.include.ab3"
00003972 <dos.include.ab3@1606> XINCLUDE "dos.include.ab3"
00003A40 <dos.include.ab3@1610> XINCLUDE "dos.include.ab3"
00003B20 <dos.include.ab3@1611> XINCLUDE "dos.include.ab3"
00003B8C <dos.include.ab3@1613> XINCLUDE "dos.include.ab3"
00003B92 <dos.include.ab3@1614> XINCLUDE "dos.include.ab3"
00003BAE <dos.include.ab3@1615> XINCLUDE "dos.include.ab3"
00003BBC <dos.include.ab3@1618> XINCLUDE "dos.include.ab3"
00003BC2 <dos.include.ab3@1619> XINCLUDE "dos.include.ab3"
00003BD4 <dos.include.ab3@1622> XINCLUDE "dos.include.ab3"
00003BEA <dos.include.ab3@1623> XINCLUDE "dos.include.ab3"
00003BF4 <dos.include.ab3@1624> XINCLUDE "dos.include.ab3"
00003C10 <dos.include.ab3@1625> XINCLUDE "dos.include.ab3"
00003C3A <dos.include.ab3@2220> XINCLUDE "dos.include.ab3"
00003C4E <dos.include.ab3@2221> XINCLUDE "dos.include.ab3"
00003C8C <dos.include.ab3@2222> XINCLUDE "dos.include.ab3"
00003D72 <dos.include.ab3@2223> XINCLUDE "dos.include.ab3"
00003D78 <dos.include.ab3@2224> XINCLUDE "dos.include.ab3"
00003DC8 <dos.include.ab3@2225> XINCLUDE "dos.include.ab3"
00003DF2 <dos.include.ab3@2226> XINCLUDE "dos.include.ab3"
00003E10 <dos.include.ab3@2227> XINCLUDE "dos.include.ab3"
00003E3A <dos.include.ab3@2251> XINCLUDE "dos.include.ab3"
00003E4E <dos.include.ab3@2252> XINCLUDE "dos.include.ab3"
00003E8C <dos.include.ab3@2253> XINCLUDE "dos.include.ab3"
00003F72 <dos.include.ab3@2254> XINCLUDE "dos.include.ab3"
00003F78 <dos.include.ab3@2255> XINCLUDE "dos.include.ab3"
00003FEA <dos.include.ab3@2256> XINCLUDE "dos.include.ab3"
00004014 <dos.include.ab3@2257> XINCLUDE "dos.include.ab3"
00004032 <dos.include.ab3@2258> XINCLUDE "dos.include.ab3"
0000406C <dos.include.ab3@2284> XINCLUDE "dos.include.ab3"
000040A4 <dos.include.ab3@2285> XINCLUDE "dos.include.ab3"
000040FC <dos.include.ab3@2286> XINCLUDE "dos.include.ab3"
00004160 <dos.include.ab3@2287> XINCLUDE "dos.include.ab3"
0000418A <dos.include.ab3@2289> XINCLUDE "dos.include.ab3"
000041AA <dos.include.ab3@2290> XINCLUDE "dos.include.ab3"
000041D4 <dos.include.ab3@2307> XINCLUDE "dos.include.ab3"
000041DA <dos.include.ab3@2308> XINCLUDE "dos.include.ab3"
000041F0 <dos.include.ab3@2309> XINCLUDE "dos.include.ab3"
000041FA <dos.include.ab3@2310> XINCLUDE "dos.include.ab3"
00004200 <dos.include.ab3@2311> XINCLUDE "dos.include.ab3"
00004210 <dos.include.ab3@2312> XINCLUDE "dos.include.ab3"
0000421A <dos.include.ab3@2314> XINCLUDE "dos.include.ab3"
00004234 <dos.include.ab3@2315> XINCLUDE "dos.include.ab3"
00004262 <dos.include.ab3@2557> XINCLUDE "dos.include.ab3"
00004284 <dos.include.ab3@2558> XINCLUDE "dos.include.ab3"
0000428C <dos.include.ab3@2559> XINCLUDE "dos.include.ab3"
0000429A <dos.include.ab3@2560> XINCLUDE "dos.include.ab3"
000042B4 <dos.include.ab3@2562> XINCLUDE "dos.include.ab3"
000042E2 <dos.include.ab3@2581> XINCLUDE "dos.include.ab3"
000042F6 <dos.include.ab3@2582> XINCLUDE "dos.include.ab3"
0000432A <dos.include.ab3@2583> XINCLUDE "dos.include.ab3"
00004344 <dos.include.ab3@2585> XINCLUDE "dos.include.ab3"
0000434C <dos.include.ab3@2586> XINCLUDE "dos.include.ab3"
0000435A <dos.include.ab3@2587> XINCLUDE "dos.include.ab3"
00004374 <dos.include.ab3@2589> XINCLUDE "dos.include.ab3"
0000439E <dos.include.ab3@2725> XINCLUDE "dos.include.ab3"
000043AA <dos.include.ab3@2727> XINCLUDE "dos.include.ab3"
000043CA <dos.include.ab3@2728> XINCLUDE "dos.include.ab3"
000043F0 <dos.include.ab3@2729> XINCLUDE "dos.include.ab3"
0000441C <dos.include.ab3@2730> XINCLUDE "dos.include.ab3"
00004434 <dos.include.ab3@2731> XINCLUDE "dos.include.ab3"
00004442 <dos.include.ab3@2733> XINCLUDE "dos.include.ab3"
00004448 <dos.include.ab3@2734> XINCLUDE "dos.include.ab3"
00004454 <dos.include.ab3@2735> XINCLUDE "dos.include.ab3"
0000445A <dos.include.ab3@2737> XINCLUDE "dos.include.ab3"
00004466 <dos.include.ab3@2738> XINCLUDE "dos.include.ab3"
00004476 <dos.include.ab3@2740> XINCLUDE "dos.include.ab3"
0000447C <dos.include.ab3@2741> XINCLUDE "dos.include.ab3"
00004488 <dos.include.ab3@2742> XINCLUDE "dos.include.ab3"
00004492 <dos.include.ab3@2744> XINCLUDE "dos.include.ab3"
000044AC <dos.include.ab3@2745> XINCLUDE "dos.include.ab3"
000044AC <AmiBlitz3.ab3@79> XINCLUDE "dos.include.ab3"
000044BA <AmiBlitz3.ab3@81> If dos_FromCLI{}
000044C0 <AmiBlitz3.ab3@82>   CLIMode.l=True
000044CC <AmiBlitz3.ab3@83>   error_SetFlags{#error_stdout}
000044CC <common.ab3@1> XINCLUDE "/Shared/common.ab3"
000044F4 <common.ab3@49> XINCLUDE "/Shared/common.ab3"
000044FA <common.ab3@262> XINCLUDE "/Shared/common.ab3"
000044FC <common.ab3@263> XINCLUDE "/Shared/common.ab3"
0000468C <common.ab3@264> XINCLUDE "/Shared/common.ab3"
00004690 <common.ab3@265> XINCLUDE "/Shared/common.ab3"
00004694 <common.ab3@267> XINCLUDE "/Shared/common.ab3"
00004698 <common.ab3@268> XINCLUDE "/Shared/common.ab3"
0000469C <common.ab3@270> XINCLUDE "/Shared/common.ab3"
000046A0 <common.ab3@271> XINCLUDE "/Shared/common.ab3"
000046A4 <common.ab3@272> XINCLUDE "/Shared/common.ab3"
000046A8 <common.ab3@273> XINCLUDE "/Shared/common.ab3"
000046AC <common.ab3@274> XINCLUDE "/Shared/common.ab3"
000046B0 <common.ab3@275> XINCLUDE "/Shared/common.ab3"
000046B4 <common.ab3@276> XINCLUDE "/Shared/common.ab3"
000046B8 <common.ab3@277> XINCLUDE "/Shared/common.ab3"
000046BC <common.ab3@278> XINCLUDE "/Shared/common.ab3"
000046C0 <common.ab3@280> XINCLUDE "/Shared/common.ab3"
000046C4 <common.ab3@282> XINCLUDE "/Shared/common.ab3"
000046C8 <common.ab3@283> XINCLUDE "/Shared/common.ab3"
000046CC <common.ab3@284> XINCLUDE "/Shared/common.ab3"
000046D0 <common.ab3@285> XINCLUDE "/Shared/common.ab3"
000046D4 <common.ab3@286> XINCLUDE "/Shared/common.ab3"
000046D8 <common.ab3@287> XINCLUDE "/Shared/common.ab3"
000046DC <common.ab3@288> XINCLUDE "/Shared/common.ab3"
000046E0 <common.ab3@289> XINCLUDE "/Shared/common.ab3"
000046E4 <common.ab3@290> XINCLUDE "/Shared/common.ab3"
000046E8 <common.ab3@291> XINCLUDE "/Shared/common.ab3"
000046F0 <common.ab3@294> XINCLUDE "/Shared/common.ab3"
000046F4 <common.ab3@295> XINCLUDE "/Shared/common.ab3"
000046F6 <common.ab3@296> XINCLUDE "/Shared/common.ab3"
000046FA <common.ab3@297> XINCLUDE "/Shared/common.ab3"
000046FC <common.ab3@298> XINCLUDE "/Shared/common.ab3"
00004700 <common.ab3@299> XINCLUDE "/Shared/common.ab3"
00004704 <common.ab3@300> XINCLUDE "/Shared/common.ab3"
00004708 <common.ab3@301> XINCLUDE "/Shared/common.ab3"
0000470C <common.ab3@302> XINCLUDE "/Shared/common.ab3"
00004710 <common.ab3@303> XINCLUDE "/Shared/common.ab3"
00004718 <common.ab3@304> XINCLUDE "/Shared/common.ab3"
00004720 <common.ab3@305> XINCLUDE "/Shared/common.ab3"
00004724 <common.ab3@306> XINCLUDE "/Shared/common.ab3"
00004728 <common.ab3@307> XINCLUDE "/Shared/common.ab3"
0000472C <common.ab3@308> XINCLUDE "/Shared/common.ab3"
0000472E <common.ab3@310> XINCLUDE "/Shared/common.ab3"
000047EE <common.ab3@311> XINCLUDE "/Shared/common.ab3"
00004836 <common.ab3@312> XINCLUDE "/Shared/common.ab3"
0000483A <common.ab3@314> XINCLUDE "/Shared/common.ab3"
0000483C <common.ab3@315> XINCLUDE "/Shared/common.ab3"
00004840 <common.ab3@316> XINCLUDE "/Shared/common.ab3"
00004842 <common.ab3@317> XINCLUDE "/Shared/common.ab3"
00004844 <common.ab3@318> XINCLUDE "/Shared/common.ab3"
00004846 <common.ab3@319> XINCLUDE "/Shared/common.ab3"
00004848 <common.ab3@320> XINCLUDE "/Shared/common.ab3"
0000484A <common.ab3@322> XINCLUDE "/Shared/common.ab3"
0000484C <common.ab3@323> XINCLUDE "/Shared/common.ab3"
0000484D <common.ab3@327> XINCLUDE "/Shared/common.ab3"
0000484E <common.ab3@329> XINCLUDE "/Shared/common.ab3"
00004850 <common.ab3@330> XINCLUDE "/Shared/common.ab3"
00004852 <common.ab3@331> XINCLUDE "/Shared/common.ab3"
00004854 <common.ab3@333> XINCLUDE "/Shared/common.ab3"
00004856 <common.ab3@336> XINCLUDE "/Shared/common.ab3"
00004858 <common.ab3@338> XINCLUDE "/Shared/common.ab3"
0000485A <common.ab3@340> XINCLUDE "/Shared/common.ab3"
0000485E <common.ab3@342> XINCLUDE "/Shared/common.ab3"
00004860 <common.ab3@344> XINCLUDE "/Shared/common.ab3"
00004862 <common.ab3@345> XINCLUDE "/Shared/common.ab3"
00004864 <common.ab3@347> XINCLUDE "/Shared/common.ab3"
00004868 <common.ab3@349> XINCLUDE "/Shared/common.ab3"
0000486A <common.ab3@350> XINCLUDE "/Shared/common.ab3"
0000486C <common.ab3@351> XINCLUDE "/Shared/common.ab3"
00004870 <common.ab3@354> XINCLUDE "/Shared/common.ab3"
00004872 <common.ab3@355> XINCLUDE "/Shared/common.ab3"
00004874 <common.ab3@356> XINCLUDE "/Shared/common.ab3"
00004876 <common.ab3@357> XINCLUDE "/Shared/common.ab3"
00004878 <common.ab3@359> XINCLUDE "/Shared/common.ab3"
0000487A <common.ab3@360> XINCLUDE "/Shared/common.ab3"
0000487E <common.ab3@362> XINCLUDE "/Shared/common.ab3"
00004880 <common.ab3@363> XINCLUDE "/Shared/common.ab3"
00004882 <common.ab3@364> XINCLUDE "/Shared/common.ab3"
00004884 <common.ab3@368> XINCLUDE "/Shared/common.ab3"
00004886 <common.ab3@369> XINCLUDE "/Shared/common.ab3"
0000488A <common.ab3@370> XINCLUDE "/Shared/common.ab3"
0000488C <common.ab3@376> XINCLUDE "/Shared/common.ab3"
0000488E <common.ab3@378> XINCLUDE "/Shared/common.ab3"
00004890 <common.ab3@380> XINCLUDE "/Shared/common.ab3"
00004892 <common.ab3@381> XINCLUDE "/Shared/common.ab3"
00004894 <common.ab3@382> XINCLUDE "/Shared/common.ab3"
00004898 <common.ab3@383> XINCLUDE "/Shared/common.ab3"
0000489A <common.ab3@384> XINCLUDE "/Shared/common.ab3"
0000489C <common.ab3@385> XINCLUDE "/Shared/common.ab3"
0000489E <common.ab3@386> XINCLUDE "/Shared/common.ab3"
000048A0 <common.ab3@387> XINCLUDE "/Shared/common.ab3"
000048A2 <common.ab3@389> XINCLUDE "/Shared/common.ab3"
000048A4 <common.ab3@391> XINCLUDE "/Shared/common.ab3"
000048A6 <common.ab3@393> XINCLUDE "/Shared/common.ab3"
000048AA <common.ab3@394> XINCLUDE "/Shared/common.ab3"
000048AC <common.ab3@395> XINCLUDE "/Shared/common.ab3"
000048DA <common.ab3@396> XINCLUDE "/Shared/common.ab3"
000048E4 <common.ab3@397> XINCLUDE "/Shared/common.ab3"
000048E8 <common.ab3@398> XINCLUDE "/Shared/common.ab3"
000048EA <common.ab3@400> XINCLUDE "/Shared/common.ab3"
000048EC <common.ab3@401> XINCLUDE "/Shared/common.ab3"
000048F0 <common.ab3@402> XINCLUDE "/Shared/common.ab3"
000048F4 <common.ab3@403> XINCLUDE "/Shared/common.ab3"
000048FD <common.ab3@404> XINCLUDE "/Shared/common.ab3"
00004900 <common.ab3@405> XINCLUDE "/Shared/common.ab3"
0000492D <common.ab3@406> XINCLUDE "/Shared/common.ab3"
0000496D <common.ab3@407> XINCLUDE "/Shared/common.ab3"
00004979 <common.ab3@408> XINCLUDE "/Shared/common.ab3"
000049C9 <common.ab3@409> XINCLUDE "/Shared/common.ab3"
000049D5 <common.ab3@410> XINCLUDE "/Shared/common.ab3"
00004A25 <common.ab3@411> XINCLUDE "/Shared/common.ab3"
00004B21 <common.ab3@412> XINCLUDE "/Shared/common.ab3"
00004B23 <common.ab3@413> XINCLUDE "/Shared/common.ab3"
00004BE3 <common.ab3@414> XINCLUDE "/Shared/common.ab3"
00004C23 <common.ab3@415> XINCLUDE "/Shared/common.ab3"
00004C25 <common.ab3@416> XINCLUDE "/Shared/common.ab3"
00004C26 <common.ab3@417> XINCLUDE "/Shared/common.ab3"
00004C2A <common.ab3@420> XINCLUDE "/Shared/common.ab3"
00004C2E <common.ab3@422> XINCLUDE "/Shared/common.ab3"
00004C32 <common.ab3@423> XINCLUDE "/Shared/common.ab3"
00004C36 <common.ab3@424> XINCLUDE "/Shared/common.ab3"
00004C3A <common.ab3@426> XINCLUDE "/Shared/common.ab3"
00004C3E <common.ab3@428> XINCLUDE "/Shared/common.ab3"
00004C42 <common.ab3@429> XINCLUDE "/Shared/common.ab3"
00004C46 <common.ab3@430> XINCLUDE "/Shared/common.ab3"
00004C4A <common.ab3@431> XINCLUDE "/Shared/common.ab3"
00004C4E <common.ab3@432> XINCLUDE "/Shared/common.ab3"
00004C52 <common.ab3@433> XINCLUDE "/Shared/common.ab3"
00004C56 <common.ab3@434> XINCLUDE "/Shared/common.ab3"
00004C5A <common.ab3@435> XINCLUDE "/Shared/common.ab3"
00004C5E <common.ab3@437> XINCLUDE "/Shared/common.ab3"
00004C62 <common.ab3@439> XINCLUDE "/Shared/common.ab3"
00004C66 <common.ab3@441> XINCLUDE "/Shared/common.ab3"
00004C6A <common.ab3@443> XINCLUDE "/Shared/common.ab3"
00004C6E <common.ab3@444> XINCLUDE "/Shared/common.ab3"
00004C78 <common.ab3@445> XINCLUDE "/Shared/common.ab3"
00004C7C <common.ab3@446> XINCLUDE "/Shared/common.ab3"
00004C80 <common.ab3@449> XINCLUDE "/Shared/common.ab3"
00004C82 <common.ab3@450> XINCLUDE "/Shared/common.ab3"
00004C84 <common.ab3@451> XINCLUDE "/Shared/common.ab3"
00004CA2 <common.ab3@452> XINCLUDE "/Shared/common.ab3"
00004CA6 <common.ab3@453> XINCLUDE "/Shared/common.ab3"
00004CA8 <common.ab3@455> XINCLUDE "/Shared/common.ab3"
00004CAC <common.ab3@456> XINCLUDE "/Shared/common.ab3"
00004CE0 <common.ab3@457> XINCLUDE "/Shared/common.ab3"
00004CE4 <common.ab3@458> XINCLUDE "/Shared/common.ab3"
00004CF2 <common.ab3@460> XINCLUDE "/Shared/common.ab3"
00004D04 <common.ab3@461> XINCLUDE "/Shared/common.ab3"
00004D06 <common.ab3@462> XINCLUDE "/Shared/common.ab3"
00004D1A <common.ab3@463> XINCLUDE "/Shared/common.ab3"
00004D30 <common.ab3@464> XINCLUDE "/Shared/common.ab3"
00004D46 <common.ab3@465> XINCLUDE "/Shared/common.ab3"
00004D5C <common.ab3@466> XINCLUDE "/Shared/common.ab3"
00004D72 <common.ab3@467> XINCLUDE "/Shared/common.ab3"
00004D74 <common.ab3@468> XINCLUDE "/Shared/common.ab3"
00004D76 <common.ab3@469> XINCLUDE "/Shared/common.ab3"
00004D7A <common.ab3@471> XINCLUDE "/Shared/common.ab3"
00004D7E <common.ab3@473> XINCLUDE "/Shared/common.ab3"
00004D82 <common.ab3@475> XINCLUDE "/Shared/common.ab3"
00004D86 <common.ab3@476> XINCLUDE "/Shared/common.ab3"
00004D8A <common.ab3@477> XINCLUDE "/Shared/common.ab3"
00004D8E <common.ab3@478> XINCLUDE "/Shared/common.ab3"
00004D92 <common.ab3@479> XINCLUDE "/Shared/common.ab3"
00004D96 <common.ab3@480> XINCLUDE "/Shared/common.ab3"
00004D9A <common.ab3@481> XINCLUDE "/Shared/common.ab3"
00004D9E <common.ab3@482> XINCLUDE "/Shared/common.ab3"
00004DA4 <common.ab3@483> XINCLUDE "/Shared/common.ab3"
00004DB6 <common.ab3@484> XINCLUDE "/Shared/common.ab3"
00004DB8 <common.ab3@488> XINCLUDE "/Shared/common.ab3"
00004DBC <common.ab3@489> XINCLUDE "/Shared/common.ab3"
00004DBE <common.ab3@490> XINCLUDE "/Shared/common.ab3"
00004DC2 <common.ab3@491> XINCLUDE "/Shared/common.ab3"
00004DC4 <common.ab3@492> XINCLUDE "/Shared/common.ab3"
00004DC8 <common.ab3@493> XINCLUDE "/Shared/common.ab3"
00004DCA <common.ab3@494> XINCLUDE "/Shared/common.ab3"
00004DCE <common.ab3@495> XINCLUDE "/Shared/common.ab3"
00004DD0 <common.ab3@496> XINCLUDE "/Shared/common.ab3"
00004DD4 <common.ab3@497> XINCLUDE "/Shared/common.ab3"
00004DD6 <common.ab3@498> XINCLUDE "/Shared/common.ab3"
00004DDA <common.ab3@499> XINCLUDE "/Shared/common.ab3"
00004DDC <common.ab3@500> XINCLUDE "/Shared/common.ab3"
00004DE0 <common.ab3@501> XINCLUDE "/Shared/common.ab3"
00004DE2 <common.ab3@502> XINCLUDE "/Shared/common.ab3"
00004DE6 <common.ab3@503> XINCLUDE "/Shared/common.ab3"
00004DE8 <common.ab3@504> XINCLUDE "/Shared/common.ab3"
00004DEC <common.ab3@505> XINCLUDE "/Shared/common.ab3"
00004DEE <common.ab3@506> XINCLUDE "/Shared/common.ab3"
00004DF2 <common.ab3@507> XINCLUDE "/Shared/common.ab3"
00004DF4 <common.ab3@508> XINCLUDE "/Shared/common.ab3"
00004DF8 <common.ab3@509> XINCLUDE "/Shared/common.ab3"
00004DFA <common.ab3@510> XINCLUDE "/Shared/common.ab3"
00004DFE <common.ab3@511> XINCLUDE "/Shared/common.ab3"
00004E00 <common.ab3@512> XINCLUDE "/Shared/common.ab3"
00004E04 <common.ab3@513> XINCLUDE "/Shared/common.ab3"
00004E06 <common.ab3@514> XINCLUDE "/Shared/common.ab3"
00004E0A <common.ab3@515> XINCLUDE "/Shared/common.ab3"
00004E0C <common.ab3@516> XINCLUDE "/Shared/common.ab3"
00004E20 <common.ab3@520> XINCLUDE "/Shared/common.ab3"
00004E34 <common.ab3@521> XINCLUDE "/Shared/common.ab3"
00004E48 <common.ab3@522> XINCLUDE "/Shared/common.ab3"
00004E4A <common.ab3@523> XINCLUDE "/Shared/common.ab3"
00004E4E <common.ab3@524> XINCLUDE "/Shared/common.ab3"
00004E52 <common.ab3@525> XINCLUDE "/Shared/common.ab3"
00004E56 <common.ab3@526> XINCLUDE "/Shared/common.ab3"
00004E5A <common.ab3@527> XINCLUDE "/Shared/common.ab3"
00004E5E <common.ab3@528> XINCLUDE "/Shared/common.ab3"
00004E62 <common.ab3@529> XINCLUDE "/Shared/common.ab3"
00004E66 <common.ab3@530> XINCLUDE "/Shared/common.ab3"
00004E67 <common.ab3@531> XINCLUDE "/Shared/common.ab3"
00004E68 <common.ab3@532> XINCLUDE "/Shared/common.ab3"
00004E69 <common.ab3@533> XINCLUDE "/Shared/common.ab3"
00004E6C <common.ab3@534> XINCLUDE "/Shared/common.ab3"
00004E70 <common.ab3@535> XINCLUDE "/Shared/common.ab3"
00004E74 <common.ab3@536> XINCLUDE "/Shared/common.ab3"
00004E78 <common.ab3@537> XINCLUDE "/Shared/common.ab3"
00004E7C <common.ab3@538> XINCLUDE "/Shared/common.ab3"
00004E80 <common.ab3@539> XINCLUDE "/Shared/common.ab3"
00004E84 <common.ab3@540> XINCLUDE "/Shared/common.ab3"
00004E85 <common.ab3@541> XINCLUDE "/Shared/common.ab3"
00004E86 <common.ab3@542> XINCLUDE "/Shared/common.ab3"
00004E88 <common.ab3@543> XINCLUDE "/Shared/common.ab3"
00004E8C <common.ab3@544> XINCLUDE "/Shared/common.ab3"
00004E90 <common.ab3@545> XINCLUDE "/Shared/common.ab3"
00004E94 <common.ab3@546> XINCLUDE "/Shared/common.ab3"
00004E98 <common.ab3@548> XINCLUDE "/Shared/common.ab3"
00004E9C <common.ab3@549> XINCLUDE "/Shared/common.ab3"
00004EA0 <common.ab3@550> XINCLUDE "/Shared/common.ab3"
00004EA4 <common.ab3@551> XINCLUDE "/Shared/common.ab3"
00004EA8 <common.ab3@552> XINCLUDE "/Shared/common.ab3"
00004EAC <common.ab3@553> XINCLUDE "/Shared/common.ab3"
00004EB0 <common.ab3@554> XINCLUDE "/Shared/common.ab3"
00004EB4 <common.ab3@555> XINCLUDE "/Shared/common.ab3"
00004EB8 <common.ab3@559> XINCLUDE "/Shared/common.ab3"
00004EBC <common.ab3@560> XINCLUDE "/Shared/common.ab3"
00004EC0 <common.ab3@561> XINCLUDE "/Shared/common.ab3"
00004EC2 <common.ab3@562> XINCLUDE "/Shared/common.ab3"
00004EC3 <common.ab3@563> XINCLUDE "/Shared/common.ab3"
00004EC7 <common.ab3@564> XINCLUDE "/Shared/common.ab3"
00004ECB <common.ab3@565> XINCLUDE "/Shared/common.ab3"
00004ECF <common.ab3@566> XINCLUDE "/Shared/common.ab3"
00004ED3 <common.ab3@567> XINCLUDE "/Shared/common.ab3"
00004ED4 <common.ab3@569> XINCLUDE "/Shared/common.ab3"
00004ED8 <common.ab3@572> XINCLUDE "/Shared/common.ab3"
00004EDC <common.ab3@573> XINCLUDE "/Shared/common.ab3"
00004EE0 <common.ab3@574> XINCLUDE "/Shared/common.ab3"
00004EE1 <common.ab3@575> XINCLUDE "/Shared/common.ab3"
00004EE2 <common.ab3@577> XINCLUDE "/Shared/common.ab3"
00004EE6 <common.ab3@579> XINCLUDE "/Shared/common.ab3"
00004EEA <common.ab3@580> XINCLUDE "/Shared/common.ab3"
00004EEC <common.ab3@581> XINCLUDE "/Shared/common.ab3"
00004EEE <common.ab3@582> XINCLUDE "/Shared/common.ab3"
00004EF2 <common.ab3@586> XINCLUDE "/Shared/common.ab3"
00004EF6 <common.ab3@587> XINCLUDE "/Shared/common.ab3"
00004EFA <common.ab3@589> XINCLUDE "/Shared/common.ab3"
00004EFE <common.ab3@590> XINCLUDE "/Shared/common.ab3"
00004F02 <common.ab3@592> XINCLUDE "/Shared/common.ab3"
00004F06 <common.ab3@593> XINCLUDE "/Shared/common.ab3"
00004F0A <common.ab3@595> XINCLUDE "/Shared/common.ab3"
00004F0E <common.ab3@596> XINCLUDE "/Shared/common.ab3"
00004F12 <common.ab3@597> XINCLUDE "/Shared/common.ab3"
00004F16 <common.ab3@598> XINCLUDE "/Shared/common.ab3"
00004F1A <common.ab3@599> XINCLUDE "/Shared/common.ab3"
00004F1E <common.ab3@600> XINCLUDE "/Shared/common.ab3"
00004F22 <common.ab3@601> XINCLUDE "/Shared/common.ab3"
00004F26 <common.ab3@602> XINCLUDE "/Shared/common.ab3"
00004F2A <common.ab3@603> XINCLUDE "/Shared/common.ab3"
00004F2E <common.ab3@604> XINCLUDE "/Shared/common.ab3"
00004F32 <common.ab3@605> XINCLUDE "/Shared/common.ab3"
00004F36 <common.ab3@606> XINCLUDE "/Shared/common.ab3"
00004F3A <common.ab3@607> XINCLUDE "/Shared/common.ab3"
00004F3E <common.ab3@608> XINCLUDE "/Shared/common.ab3"
00004F3E <AmiBlitz3.ab3@86> XINCLUDE "/Shared/common.ab3"
00004F3E <preprocessor.include.ab3@1> XINCLUDE "/Shared/preprocessor.include.ab3"
00004F3E <hashmap.include.ab3@1> XINCLUDE "/Shared/preprocessor.include.ab3"
00004F5C <hashmap.include.ab3@39> XINCLUDE "/Shared/preprocessor.include.ab3"
00004F64 <hashmap.include.ab3@41> XINCLUDE "/Shared/preprocessor.include.ab3"
00004F92 <hashmap.include.ab3@42> XINCLUDE "/Shared/preprocessor.include.ab3"
00004FC2 <hashmap.include.ab3@43> XINCLUDE "/Shared/preprocessor.include.ab3"
00004FD2 <hashmap.include.ab3@44> XINCLUDE "/Shared/preprocessor.include.ab3"
00004FDC <hashmap.include.ab3@46> XINCLUDE "/Shared/preprocessor.include.ab3"
00004FE2 <hashmap.include.ab3@48> XINCLUDE "/Shared/preprocessor.include.ab3"
00005004 <hashmap.include.ab3@52> XINCLUDE "/Shared/preprocessor.include.ab3"
00005024 <hashmap.include.ab3@54> XINCLUDE "/Shared/preprocessor.include.ab3"
00005036 <hashmap.include.ab3@55> XINCLUDE "/Shared/preprocessor.include.ab3"
0000505E <hashmap.include.ab3@56> XINCLUDE "/Shared/preprocessor.include.ab3"
00005064 <hashmap.include.ab3@58> XINCLUDE "/Shared/preprocessor.include.ab3"
0000507E <hashmap.include.ab3@62> XINCLUDE "/Shared/preprocessor.include.ab3"
00005098 <hashmap.include.ab3@64> XINCLUDE "/Shared/preprocessor.include.ab3"
000050AA <hashmap.include.ab3@65> XINCLUDE "/Shared/preprocessor.include.ab3"
000050B8 <hashmap.include.ab3@66> XINCLUDE "/Shared/preprocessor.include.ab3"
000050EC <hashmap.include.ab3@67> XINCLUDE "/Shared/preprocessor.include.ab3"
000050FA <hashmap.include.ab3@68> XINCLUDE "/Shared/preprocessor.include.ab3"
00005104 <hashmap.include.ab3@69> XINCLUDE "/Shared/preprocessor.include.ab3"
00005116 <hashmap.include.ab3@70> XINCLUDE "/Shared/preprocessor.include.ab3"
00005150 <hashmap.include.ab3@71> XINCLUDE "/Shared/preprocessor.include.ab3"
00005160 <hashmap.include.ab3@72> XINCLUDE "/Shared/preprocessor.include.ab3"
00005166 <hashmap.include.ab3@74> XINCLUDE "/Shared/preprocessor.include.ab3"
00005176 <hashmap.include.ab3@75> XINCLUDE "/Shared/preprocessor.include.ab3"
00005182 <hashmap.include.ab3@77> XINCLUDE "/Shared/preprocessor.include.ab3"
00005190 <hashmap.include.ab3@79> XINCLUDE "/Shared/preprocessor.include.ab3"
000051A0 <hashmap.include.ab3@80> XINCLUDE "/Shared/preprocessor.include.ab3"
000051C0 <hashmap.include.ab3@81> XINCLUDE "/Shared/preprocessor.include.ab3"
000051CC <hashmap.include.ab3@83> XINCLUDE "/Shared/preprocessor.include.ab3"
000051DA <hashmap.include.ab3@84> XINCLUDE "/Shared/preprocessor.include.ab3"
000051E8 <hashmap.include.ab3@85> XINCLUDE "/Shared/preprocessor.include.ab3"
000051F6 <hashmap.include.ab3@86> XINCLUDE "/Shared/preprocessor.include.ab3"
00005204 <hashmap.include.ab3@87> XINCLUDE "/Shared/preprocessor.include.ab3"
00005236 <hashmap.include.ab3@88> XINCLUDE "/Shared/preprocessor.include.ab3"
00005244 <hashmap.include.ab3@89> XINCLUDE "/Shared/preprocessor.include.ab3"
00005254 <hashmap.include.ab3@90> XINCLUDE "/Shared/preprocessor.include.ab3"
0000525A <hashmap.include.ab3@91> XINCLUDE "/Shared/preprocessor.include.ab3"
0000525E <hashmap.include.ab3@93> XINCLUDE "/Shared/preprocessor.include.ab3"
00005278 <hashmap.include.ab3@97> XINCLUDE "/Shared/preprocessor.include.ab3"
00005292 <hashmap.include.ab3@99> XINCLUDE "/Shared/preprocessor.include.ab3"
000052AC <hashmap.include.ab3@100> XINCLUDE "/Shared/preprocessor.include.ab3"
000052CC <hashmap.include.ab3@102> XINCLUDE "/Shared/preprocessor.include.ab3"
000052D6 <hashmap.include.ab3@103> XINCLUDE "/Shared/preprocessor.include.ab3"
000052E2 <hashmap.include.ab3@104> XINCLUDE "/Shared/preprocessor.include.ab3"
000052F6 <hashmap.include.ab3@105> XINCLUDE "/Shared/preprocessor.include.ab3"
00005328 <hashmap.include.ab3@106> XINCLUDE "/Shared/preprocessor.include.ab3"
00005340 <hashmap.include.ab3@107> XINCLUDE "/Shared/preprocessor.include.ab3"
0000534C <hashmap.include.ab3@108> XINCLUDE "/Shared/preprocessor.include.ab3"
0000535A <hashmap.include.ab3@109> XINCLUDE "/Shared/preprocessor.include.ab3"
00005368 <hashmap.include.ab3@110> XINCLUDE "/Shared/preprocessor.include.ab3"
00005372 <hashmap.include.ab3@111> XINCLUDE "/Shared/preprocessor.include.ab3"
00005380 <hashmap.include.ab3@112> XINCLUDE "/Shared/preprocessor.include.ab3"
000053AA <hashmap.include.ab3@113> XINCLUDE "/Shared/preprocessor.include.ab3"
000053B4 <hashmap.include.ab3@116> XINCLUDE "/Shared/preprocessor.include.ab3"
000053BA <hashmap.include.ab3@118> XINCLUDE "/Shared/preprocessor.include.ab3"
000053E8 <hashmap.include.ab3@122> XINCLUDE "/Shared/preprocessor.include.ab3"
00005402 <hashmap.include.ab3@124> XINCLUDE "/Shared/preprocessor.include.ab3"
00005422 <hashmap.include.ab3@125> XINCLUDE "/Shared/preprocessor.include.ab3"
00005436 <hashmap.include.ab3@126> XINCLUDE "/Shared/preprocessor.include.ab3"
0000544E <hashmap.include.ab3@127> XINCLUDE "/Shared/preprocessor.include.ab3"
00005476 <hashmap.include.ab3@128> XINCLUDE "/Shared/preprocessor.include.ab3"
00005490 <hashmap.include.ab3@129> XINCLUDE "/Shared/preprocessor.include.ab3"
0000549E <hashmap.include.ab3@130> XINCLUDE "/Shared/preprocessor.include.ab3"
000054AC <hashmap.include.ab3@131> XINCLUDE "/Shared/preprocessor.include.ab3"
000054BA <hashmap.include.ab3@132> XINCLUDE "/Shared/preprocessor.include.ab3"
000054CE <hashmap.include.ab3@133> XINCLUDE "/Shared/preprocessor.include.ab3"
00005522 <hashmap.include.ab3@134> XINCLUDE "/Shared/preprocessor.include.ab3"
0000554C <hashmap.include.ab3@135> XINCLUDE "/Shared/preprocessor.include.ab3"
00005590 <hashmap.include.ab3@137> XINCLUDE "/Shared/preprocessor.include.ab3"
000055B0 <hashmap.include.ab3@138> XINCLUDE "/Shared/preprocessor.include.ab3"
000055C2 <hashmap.include.ab3@139> XINCLUDE "/Shared/preprocessor.include.ab3"
000055E6 <hashmap.include.ab3@140> XINCLUDE "/Shared/preprocessor.include.ab3"
000055F4 <hashmap.include.ab3@141> XINCLUDE "/Shared/preprocessor.include.ab3"
0000564C <hashmap.include.ab3@142> XINCLUDE "/Shared/preprocessor.include.ab3"
00005692 <hashmap.include.ab3@143> XINCLUDE "/Shared/preprocessor.include.ab3"
00005698 <hashmap.include.ab3@144> XINCLUDE "/Shared/preprocessor.include.ab3"
0000569E <hashmap.include.ab3@145> XINCLUDE "/Shared/preprocessor.include.ab3"
000056C6 <hashmap.include.ab3@147> XINCLUDE "/Shared/preprocessor.include.ab3"
000056D8 <hashmap.include.ab3@148> XINCLUDE "/Shared/preprocessor.include.ab3"
000056EA <hashmap.include.ab3@149> XINCLUDE "/Shared/preprocessor.include.ab3"
00005724 <hashmap.include.ab3@150> XINCLUDE "/Shared/preprocessor.include.ab3"
00005734 <hashmap.include.ab3@151> XINCLUDE "/Shared/preprocessor.include.ab3"
0000573A <hashmap.include.ab3@153> XINCLUDE "/Shared/preprocessor.include.ab3"
0000574A <hashmap.include.ab3@154> XINCLUDE "/Shared/preprocessor.include.ab3"
00005750 <hashmap.include.ab3@156> XINCLUDE "/Shared/preprocessor.include.ab3"
00005756 <hashmap.include.ab3@158> XINCLUDE "/Shared/preprocessor.include.ab3"
0000576E <hashmap.include.ab3@160> XINCLUDE "/Shared/preprocessor.include.ab3"
000057AC <hashmap.include.ab3@164> XINCLUDE "/Shared/preprocessor.include.ab3"
000057C8 <hashmap.include.ab3@166> XINCLUDE "/Shared/preprocessor.include.ab3"
000057FA <hashmap.include.ab3@167> XINCLUDE "/Shared/preprocessor.include.ab3"
0000580E <hashmap.include.ab3@168> XINCLUDE "/Shared/preprocessor.include.ab3"
00005822 <hashmap.include.ab3@169> XINCLUDE "/Shared/preprocessor.include.ab3"
0000583A <hashmap.include.ab3@170> XINCLUDE "/Shared/preprocessor.include.ab3"
00005862 <hashmap.include.ab3@172> XINCLUDE "/Shared/preprocessor.include.ab3"
0000586C <hashmap.include.ab3@176> XINCLUDE "/Shared/preprocessor.include.ab3"
0000587A <hashmap.include.ab3@177> XINCLUDE "/Shared/preprocessor.include.ab3"
00005892 <hashmap.include.ab3@178> XINCLUDE "/Shared/preprocessor.include.ab3"
00005898 <hashmap.include.ab3@182> XINCLUDE "/Shared/preprocessor.include.ab3"
000058A0 <hashmap.include.ab3@183> XINCLUDE "/Shared/preprocessor.include.ab3"
000058C0 <hashmap.include.ab3@186> XINCLUDE "/Shared/preprocessor.include.ab3"
000058E6 <hashmap.include.ab3@187> XINCLUDE "/Shared/preprocessor.include.ab3"
000058F0 <hashmap.include.ab3@188> XINCLUDE "/Shared/preprocessor.include.ab3"
000058FE <hashmap.include.ab3@189> XINCLUDE "/Shared/preprocessor.include.ab3"
00005908 <hashmap.include.ab3@191> XINCLUDE "/Shared/preprocessor.include.ab3"
00005934 <hashmap.include.ab3@192> XINCLUDE "/Shared/preprocessor.include.ab3"
00005948 <hashmap.include.ab3@193> XINCLUDE "/Shared/preprocessor.include.ab3"
0000594E <hashmap.include.ab3@194> XINCLUDE "/Shared/preprocessor.include.ab3"
0000595C <hashmap.include.ab3@195> XINCLUDE "/Shared/preprocessor.include.ab3"
00005992 <hashmap.include.ab3@198> XINCLUDE "/Shared/preprocessor.include.ab3"
000059E0 <hashmap.include.ab3@199> XINCLUDE "/Shared/preprocessor.include.ab3"
00005A08 <hashmap.include.ab3@201> XINCLUDE "/Shared/preprocessor.include.ab3"
00005A22 <hashmap.include.ab3@202> XINCLUDE "/Shared/preprocessor.include.ab3"
00005A34 <hashmap.include.ab3@203> XINCLUDE "/Shared/preprocessor.include.ab3"
00005A3E <hashmap.include.ab3@206> XINCLUDE "/Shared/preprocessor.include.ab3"
00005A5A <hashmap.include.ab3@208> XINCLUDE "/Shared/preprocessor.include.ab3"
00005A84 <hashmap.include.ab3@212> XINCLUDE "/Shared/preprocessor.include.ab3"
00005AA0 <hashmap.include.ab3@214> XINCLUDE "/Shared/preprocessor.include.ab3"
00005AC2 <hashmap.include.ab3@215> XINCLUDE "/Shared/preprocessor.include.ab3"
00005AF0 <hashmap.include.ab3@216> XINCLUDE "/Shared/preprocessor.include.ab3"
00005B0A <hashmap.include.ab3@217> XINCLUDE "/Shared/preprocessor.include.ab3"
00005B32 <hashmap.include.ab3@218> XINCLUDE "/Shared/preprocessor.include.ab3"
00005B4E <hashmap.include.ab3@219> XINCLUDE "/Shared/preprocessor.include.ab3"
00005B6A <hashmap.include.ab3@220> XINCLUDE "/Shared/preprocessor.include.ab3"
00005B78 <hashmap.include.ab3@221> XINCLUDE "/Shared/preprocessor.include.ab3"
00005B8C <hashmap.include.ab3@223> XINCLUDE "/Shared/preprocessor.include.ab3"
00005BAE <hashmap.include.ab3@224> XINCLUDE "/Shared/preprocessor.include.ab3"
00005BD0 <hashmap.include.ab3@225> XINCLUDE "/Shared/preprocessor.include.ab3"
00005BDE <hashmap.include.ab3@226> XINCLUDE "/Shared/preprocessor.include.ab3"
00005BFE <hashmap.include.ab3@227> XINCLUDE "/Shared/preprocessor.include.ab3"
00005C2E <hashmap.include.ab3@228> XINCLUDE "/Shared/preprocessor.include.ab3"
00005C34 <hashmap.include.ab3@229> XINCLUDE "/Shared/preprocessor.include.ab3"
00005C68 <hashmap.include.ab3@230> XINCLUDE "/Shared/preprocessor.include.ab3"
00005CAA <hashmap.include.ab3@231> XINCLUDE "/Shared/preprocessor.include.ab3"
00005CBA <hashmap.include.ab3@232> XINCLUDE "/Shared/preprocessor.include.ab3"
00005CC4 <hashmap.include.ab3@233> XINCLUDE "/Shared/preprocessor.include.ab3"
00005CD4 <hashmap.include.ab3@234> XINCLUDE "/Shared/preprocessor.include.ab3"
00005CDA <hashmap.include.ab3@238> XINCLUDE "/Shared/preprocessor.include.ab3"
00005CE2 <hashmap.include.ab3@240> XINCLUDE "/Shared/preprocessor.include.ab3"
00005CE8 <hashmap.include.ab3@242> XINCLUDE "/Shared/preprocessor.include.ab3"
00005D16 <hashmap.include.ab3@246> XINCLUDE "/Shared/preprocessor.include.ab3"
00005D48 <hashmap.include.ab3@248> XINCLUDE "/Shared/preprocessor.include.ab3"
00005D80 <hashmap.include.ab3@249> XINCLUDE "/Shared/preprocessor.include.ab3"
00005D94 <hashmap.include.ab3@250> XINCLUDE "/Shared/preprocessor.include.ab3"
00005DAC <hashmap.include.ab3@251> XINCLUDE "/Shared/preprocessor.include.ab3"
00005DD4 <hashmap.include.ab3@252> XINCLUDE "/Shared/preprocessor.include.ab3"
00005E06 <hashmap.include.ab3@253> XINCLUDE "/Shared/preprocessor.include.ab3"
00005E22 <hashmap.include.ab3@254> XINCLUDE "/Shared/preprocessor.include.ab3"
00005E30 <hashmap.include.ab3@255> XINCLUDE "/Shared/preprocessor.include.ab3"
00005E44 <hashmap.include.ab3@256> XINCLUDE "/Shared/preprocessor.include.ab3"
00005E98 <hashmap.include.ab3@257> XINCLUDE "/Shared/preprocessor.include.ab3"
00005EC2 <hashmap.include.ab3@258> XINCLUDE "/Shared/preprocessor.include.ab3"
00005F06 <hashmap.include.ab3@259> XINCLUDE "/Shared/preprocessor.include.ab3"
00005F2C <hashmap.include.ab3@260> XINCLUDE "/Shared/preprocessor.include.ab3"
00005F32 <hashmap.include.ab3@262> XINCLUDE "/Shared/preprocessor.include.ab3"
00005F50 <hashmap.include.ab3@264> XINCLUDE "/Shared/preprocessor.include.ab3"
00005F6E <hashmap.include.ab3@266> XINCLUDE "/Shared/preprocessor.include.ab3"
00005F8C <hashmap.include.ab3@303> XINCLUDE "/Shared/preprocessor.include.ab3"
00005F92 <hashmap.include.ab3@305> XINCLUDE "/Shared/preprocessor.include.ab3"
00005FB4 <hashmap.include.ab3@306> XINCLUDE "/Shared/preprocessor.include.ab3"
00005FE2 <hashmap.include.ab3@308> XINCLUDE "/Shared/preprocessor.include.ab3"
0000600A <hashmap.include.ab3@309> XINCLUDE "/Shared/preprocessor.include.ab3"
0000602E <hashmap.include.ab3@310> XINCLUDE "/Shared/preprocessor.include.ab3"
00006084 <hashmap.include.ab3@313> XINCLUDE "/Shared/preprocessor.include.ab3"
000060D6 <hashmap.include.ab3@314> XINCLUDE "/Shared/preprocessor.include.ab3"
0000612C <hashmap.include.ab3@315> XINCLUDE "/Shared/preprocessor.include.ab3"
0000613C <hashmap.include.ab3@318> XINCLUDE "/Shared/preprocessor.include.ab3"
0000618E <hashmap.include.ab3@319> XINCLUDE "/Shared/preprocessor.include.ab3"
000061B6 <hashmap.include.ab3@320> XINCLUDE "/Shared/preprocessor.include.ab3"
000061DC <hashmap.include.ab3@321> XINCLUDE "/Shared/preprocessor.include.ab3"
000061F8 <hashmap.include.ab3@322> XINCLUDE "/Shared/preprocessor.include.ab3"
00006200 <hashmap.include.ab3@323> XINCLUDE "/Shared/preprocessor.include.ab3"
00006228 <hashmap.include.ab3@324> XINCLUDE "/Shared/preprocessor.include.ab3"
00006256 <hashmap.include.ab3@327> XINCLUDE "/Shared/preprocessor.include.ab3"
0000627E <hashmap.include.ab3@328> XINCLUDE "/Shared/preprocessor.include.ab3"
00006286 <hashmap.include.ab3@329> XINCLUDE "/Shared/preprocessor.include.ab3"
000062AA <hashmap.include.ab3@330> XINCLUDE "/Shared/preprocessor.include.ab3"
000062DE <hashmap.include.ab3@332> XINCLUDE "/Shared/preprocessor.include.ab3"
000062FA <hashmap.include.ab3@333> XINCLUDE "/Shared/preprocessor.include.ab3"
00006304 <hashmap.include.ab3@334> XINCLUDE "/Shared/preprocessor.include.ab3"
00006318 <hashmap.include.ab3@335> XINCLUDE "/Shared/preprocessor.include.ab3"
00006338 <hashmap.include.ab3@336> XINCLUDE "/Shared/preprocessor.include.ab3"
00006354 <hashmap.include.ab3@337> XINCLUDE "/Shared/preprocessor.include.ab3"
00006362 <hashmap.include.ab3@338> XINCLUDE "/Shared/preprocessor.include.ab3"
00006370 <hashmap.include.ab3@339> XINCLUDE "/Shared/preprocessor.include.ab3"
00006376 <hashmap.include.ab3@340> XINCLUDE "/Shared/preprocessor.include.ab3"
0000638E <hashmap.include.ab3@341> XINCLUDE "/Shared/preprocessor.include.ab3"
0000639E <hashmap.include.ab3@343> XINCLUDE "/Shared/preprocessor.include.ab3"
000063CC <hashmap.include.ab3@344> XINCLUDE "/Shared/preprocessor.include.ab3"
00006428 <hashmap.include.ab3@345> XINCLUDE "/Shared/preprocessor.include.ab3"
0000649E <hashmap.include.ab3@346> XINCLUDE "/Shared/preprocessor.include.ab3"
000064FA <hashmap.include.ab3@347> XINCLUDE "/Shared/preprocessor.include.ab3"
00006500 <hashmap.include.ab3@348> XINCLUDE "/Shared/preprocessor.include.ab3"
0000650A <hashmap.include.ab3@351> XINCLUDE "/Shared/preprocessor.include.ab3"
00006510 <hashmap.include.ab3@353> XINCLUDE "/Shared/preprocessor.include.ab3"
0000653E <hashmap.include.ab3@357> XINCLUDE "/Shared/preprocessor.include.ab3"
00006544 <hashmap.include.ab3@359> XINCLUDE "/Shared/preprocessor.include.ab3"
00006564 <hashmap.include.ab3@360> XINCLUDE "/Shared/preprocessor.include.ab3"
0000656E <hashmap.include.ab3@361> XINCLUDE "/Shared/preprocessor.include.ab3"
00006580 <hashmap.include.ab3@362> XINCLUDE "/Shared/preprocessor.include.ab3"
00006590 <hashmap.include.ab3@363> XINCLUDE "/Shared/preprocessor.include.ab3"
0000659A <hashmap.include.ab3@366> XINCLUDE "/Shared/preprocessor.include.ab3"
000065B4 <hashmap.include.ab3@368> XINCLUDE "/Shared/preprocessor.include.ab3"
000065CE <hashmap.include.ab3@372> XINCLUDE "/Shared/preprocessor.include.ab3"
000065D4 <hashmap.include.ab3@374> XINCLUDE "/Shared/preprocessor.include.ab3"
000065DA <hashmap.include.ab3@375> XINCLUDE "/Shared/preprocessor.include.ab3"
000065E4 <hashmap.include.ab3@376> XINCLUDE "/Shared/preprocessor.include.ab3"
000065EC <hashmap.include.ab3@377> XINCLUDE "/Shared/preprocessor.include.ab3"
00006614 <hashmap.include.ab3@378> XINCLUDE "/Shared/preprocessor.include.ab3"
0000661A <hashmap.include.ab3@379> XINCLUDE "/Shared/preprocessor.include.ab3"
0000662E <hashmap.include.ab3@380> XINCLUDE "/Shared/preprocessor.include.ab3"
0000666A <hashmap.include.ab3@382> XINCLUDE "/Shared/preprocessor.include.ab3"
00006690 <hashmap.include.ab3@383> XINCLUDE "/Shared/preprocessor.include.ab3"
0000669E <hashmap.include.ab3@384> XINCLUDE "/Shared/preprocessor.include.ab3"
000066DA <hashmap.include.ab3@386> XINCLUDE "/Shared/preprocessor.include.ab3"
000066EE <hashmap.include.ab3@387> XINCLUDE "/Shared/preprocessor.include.ab3"
0000672A <hashmap.include.ab3@389> XINCLUDE "/Shared/preprocessor.include.ab3"
00006740 <hashmap.include.ab3@390> XINCLUDE "/Shared/preprocessor.include.ab3"
00006754 <hashmap.include.ab3@392> XINCLUDE "/Shared/preprocessor.include.ab3"
0000675E <hashmap.include.ab3@393> XINCLUDE "/Shared/preprocessor.include.ab3"
00006782 <hashmap.include.ab3@394> XINCLUDE "/Shared/preprocessor.include.ab3"
000067BA <hashmap.include.ab3@395> XINCLUDE "/Shared/preprocessor.include.ab3"
000067C0 <hashmap.include.ab3@396> XINCLUDE "/Shared/preprocessor.include.ab3"
000067C8 <hashmap.include.ab3@397> XINCLUDE "/Shared/preprocessor.include.ab3"
000067DC <hashmap.include.ab3@400> XINCLUDE "/Shared/preprocessor.include.ab3"
000067E6 <hashmap.include.ab3@401> XINCLUDE "/Shared/preprocessor.include.ab3"
0000680E <hashmap.include.ab3@402> XINCLUDE "/Shared/preprocessor.include.ab3"
00006836 <hashmap.include.ab3@403> XINCLUDE "/Shared/preprocessor.include.ab3"
00006848 <hashmap.include.ab3@404> XINCLUDE "/Shared/preprocessor.include.ab3"
00006874 <hashmap.include.ab3@405> XINCLUDE "/Shared/preprocessor.include.ab3"
000068A8 <hashmap.include.ab3@406> XINCLUDE "/Shared/preprocessor.include.ab3"
000068D4 <hashmap.include.ab3@407> XINCLUDE "/Shared/preprocessor.include.ab3"
00006920 <hashmap.include.ab3@408> XINCLUDE "/Shared/preprocessor.include.ab3"
00006930 <hashmap.include.ab3@410> XINCLUDE "/Shared/preprocessor.include.ab3"
00006936 <hashmap.include.ab3@412> XINCLUDE "/Shared/preprocessor.include.ab3"
0000693E <hashmap.include.ab3@413> XINCLUDE "/Shared/preprocessor.include.ab3"
0000696C <hashmap.include.ab3@416> XINCLUDE "/Shared/preprocessor.include.ab3"
0000696E <hashmap.include.ab3@418> XINCLUDE "/Shared/preprocessor.include.ab3"
00006974 <hashmap.include.ab3@419> XINCLUDE "/Shared/preprocessor.include.ab3"
0000697E <hashmap.include.ab3@421> XINCLUDE "/Shared/preprocessor.include.ab3"
000069A8 <hashmap.include.ab3@422> XINCLUDE "/Shared/preprocessor.include.ab3"
000069B2 <hashmap.include.ab3@425> XINCLUDE "/Shared/preprocessor.include.ab3"
000069B8 <hashmap.include.ab3@427> XINCLUDE "/Shared/preprocessor.include.ab3"
000069E2 <hashmap.include.ab3@431> XINCLUDE "/Shared/preprocessor.include.ab3"
000069E8 <hashmap.include.ab3@433> XINCLUDE "/Shared/preprocessor.include.ab3"
00006A08 <hashmap.include.ab3@434> XINCLUDE "/Shared/preprocessor.include.ab3"
00006A12 <hashmap.include.ab3@435> XINCLUDE "/Shared/preprocessor.include.ab3"
00006A20 <hashmap.include.ab3@436> XINCLUDE "/Shared/preprocessor.include.ab3"
00006A30 <hashmap.include.ab3@437> XINCLUDE "/Shared/preprocessor.include.ab3"
00006A3A <hashmap.include.ab3@440> XINCLUDE "/Shared/preprocessor.include.ab3"
00006A54 <hashmap.include.ab3@442> XINCLUDE "/Shared/preprocessor.include.ab3"
00006A54 <preprocessor.include.ab3@11> XINCLUDE "/Shared/preprocessor.include.ab3"
00006A6E <preprocessor.include.ab3@31> XINCLUDE "/Shared/preprocessor.include.ab3"
00006A88 <preprocessor.include.ab3@32> XINCLUDE "/Shared/preprocessor.include.ab3"
00006AAA <preprocessor.include.ab3@33> XINCLUDE "/Shared/preprocessor.include.ab3"
00006ADC <preprocessor.include.ab3@34> XINCLUDE "/Shared/preprocessor.include.ab3"
00006AE0 <preprocessor.include.ab3@35> XINCLUDE "/Shared/preprocessor.include.ab3"
00006AFA <preprocessor.include.ab3@39> XINCLUDE "/Shared/preprocessor.include.ab3"
00006B14 <preprocessor.include.ab3@40> XINCLUDE "/Shared/preprocessor.include.ab3"
00006B1E <preprocessor.include.ab3@41> XINCLUDE "/Shared/preprocessor.include.ab3"
00006B34 <preprocessor.include.ab3@42> XINCLUDE "/Shared/preprocessor.include.ab3"
00006B38 <preprocessor.include.ab3@43> XINCLUDE "/Shared/preprocessor.include.ab3"
00006B52 <preprocessor.include.ab3@47> XINCLUDE "/Shared/preprocessor.include.ab3"
00006B6C <preprocessor.include.ab3@48> XINCLUDE "/Shared/preprocessor.include.ab3"
00006B86 <preprocessor.include.ab3@49> XINCLUDE "/Shared/preprocessor.include.ab3"
00006BAA <preprocessor.include.ab3@50> XINCLUDE "/Shared/preprocessor.include.ab3"
00006BB0 <preprocessor.include.ab3@51> XINCLUDE "/Shared/preprocessor.include.ab3"
00006BDA <preprocessor.include.ab3@52> XINCLUDE "/Shared/preprocessor.include.ab3"
00006BF4 <preprocessor.include.ab3@53> XINCLUDE "/Shared/preprocessor.include.ab3"
00006C04 <preprocessor.include.ab3@54> XINCLUDE "/Shared/preprocessor.include.ab3"
00006C0E <preprocessor.include.ab3@57> XINCLUDE "/Shared/preprocessor.include.ab3"
00006C1C <preprocessor.include.ab3@58> XINCLUDE "/Shared/preprocessor.include.ab3"
00006C3E <preprocessor.include.ab3@59> XINCLUDE "/Shared/preprocessor.include.ab3"
00006C72 <preprocessor.include.ab3@60> XINCLUDE "/Shared/preprocessor.include.ab3"
00006C8E <preprocessor.include.ab3@61> XINCLUDE "/Shared/preprocessor.include.ab3"
00006C98 <preprocessor.include.ab3@62> XINCLUDE "/Shared/preprocessor.include.ab3"
00006CB4 <preprocessor.include.ab3@63> XINCLUDE "/Shared/preprocessor.include.ab3"
00006CC2 <preprocessor.include.ab3@64> XINCLUDE "/Shared/preprocessor.include.ab3"
00006CD6 <preprocessor.include.ab3@65> XINCLUDE "/Shared/preprocessor.include.ab3"
00006CF8 <preprocessor.include.ab3@66> XINCLUDE "/Shared/preprocessor.include.ab3"
00006D1A <preprocessor.include.ab3@67> XINCLUDE "/Shared/preprocessor.include.ab3"
00006D38 <preprocessor.include.ab3@68> XINCLUDE "/Shared/preprocessor.include.ab3"
00006D66 <preprocessor.include.ab3@69> XINCLUDE "/Shared/preprocessor.include.ab3"
00006D6C <preprocessor.include.ab3@70> XINCLUDE "/Shared/preprocessor.include.ab3"
00006D7C <preprocessor.include.ab3@72> XINCLUDE "/Shared/preprocessor.include.ab3"
00006D80 <preprocessor.include.ab3@74> XINCLUDE "/Shared/preprocessor.include.ab3"
00006D96 <preprocessor.include.ab3@78> XINCLUDE "/Shared/preprocessor.include.ab3"
00006DB6 <preprocessor.include.ab3@79> XINCLUDE "/Shared/preprocessor.include.ab3"
00006DC0 <preprocessor.include.ab3@80> XINCLUDE "/Shared/preprocessor.include.ab3"
00006DEA <preprocessor.include.ab3@81> XINCLUDE "/Shared/preprocessor.include.ab3"
00006E00 <preprocessor.include.ab3@82> XINCLUDE "/Shared/preprocessor.include.ab3"
00006E10 <preprocessor.include.ab3@83> XINCLUDE "/Shared/preprocessor.include.ab3"
00006E2C <preprocessor.include.ab3@85> XINCLUDE "/Shared/preprocessor.include.ab3"
00006E48 <preprocessor.include.ab3@86> XINCLUDE "/Shared/preprocessor.include.ab3"
00006E64 <preprocessor.include.ab3@87> XINCLUDE "/Shared/preprocessor.include.ab3"
00006E80 <preprocessor.include.ab3@88> XINCLUDE "/Shared/preprocessor.include.ab3"
00006E9C <preprocessor.include.ab3@89> XINCLUDE "/Shared/preprocessor.include.ab3"
00006EB8 <preprocessor.include.ab3@90> XINCLUDE "/Shared/preprocessor.include.ab3"
00006ED4 <preprocessor.include.ab3@91> XINCLUDE "/Shared/preprocessor.include.ab3"
00006EF0 <preprocessor.include.ab3@92> XINCLUDE "/Shared/preprocessor.include.ab3"
00006F0C <preprocessor.include.ab3@93> XINCLUDE "/Shared/preprocessor.include.ab3"
00006F28 <preprocessor.include.ab3@94> XINCLUDE "/Shared/preprocessor.include.ab3"
00006F44 <preprocessor.include.ab3@95> XINCLUDE "/Shared/preprocessor.include.ab3"
00006F60 <preprocessor.include.ab3@96> XINCLUDE "/Shared/preprocessor.include.ab3"
00006F7C <preprocessor.include.ab3@97> XINCLUDE "/Shared/preprocessor.include.ab3"
00006F98 <preprocessor.include.ab3@98> XINCLUDE "/Shared/preprocessor.include.ab3"
00006FB4 <preprocessor.include.ab3@99> XINCLUDE "/Shared/preprocessor.include.ab3"
00006FD0 <preprocessor.include.ab3@100> XINCLUDE "/Shared/preprocessor.include.ab3"
00006FEC <preprocessor.include.ab3@101> XINCLUDE "/Shared/preprocessor.include.ab3"
00007008 <preprocessor.include.ab3@102> XINCLUDE "/Shared/preprocessor.include.ab3"
00007024 <preprocessor.include.ab3@103> XINCLUDE "/Shared/preprocessor.include.ab3"
00007040 <preprocessor.include.ab3@104> XINCLUDE "/Shared/preprocessor.include.ab3"
0000705C <preprocessor.include.ab3@105> XINCLUDE "/Shared/preprocessor.include.ab3"
00007078 <preprocessor.include.ab3@106> XINCLUDE "/Shared/preprocessor.include.ab3"
00007094 <preprocessor.include.ab3@107> XINCLUDE "/Shared/preprocessor.include.ab3"
000070B0 <preprocessor.include.ab3@108> XINCLUDE "/Shared/preprocessor.include.ab3"
000070CC <preprocessor.include.ab3@109> XINCLUDE "/Shared/preprocessor.include.ab3"
000070E8 <preprocessor.include.ab3@110> XINCLUDE "/Shared/preprocessor.include.ab3"
00007104 <preprocessor.include.ab3@111> XINCLUDE "/Shared/preprocessor.include.ab3"
00007120 <preprocessor.include.ab3@112> XINCLUDE "/Shared/preprocessor.include.ab3"
0000713C <preprocessor.include.ab3@113> XINCLUDE "/Shared/preprocessor.include.ab3"
00007158 <preprocessor.include.ab3@114> XINCLUDE "/Shared/preprocessor.include.ab3"
00007174 <preprocessor.include.ab3@115> XINCLUDE "/Shared/preprocessor.include.ab3"
00007190 <preprocessor.include.ab3@116> XINCLUDE "/Shared/preprocessor.include.ab3"
000071AC <preprocessor.include.ab3@117> XINCLUDE "/Shared/preprocessor.include.ab3"
000071C8 <preprocessor.include.ab3@118> XINCLUDE "/Shared/preprocessor.include.ab3"
000071E4 <preprocessor.include.ab3@119> XINCLUDE "/Shared/preprocessor.include.ab3"
00007200 <preprocessor.include.ab3@120> XINCLUDE "/Shared/preprocessor.include.ab3"
0000721C <preprocessor.include.ab3@121> XINCLUDE "/Shared/preprocessor.include.ab3"
00007238 <preprocessor.include.ab3@122> XINCLUDE "/Shared/preprocessor.include.ab3"
00007254 <preprocessor.include.ab3@123> XINCLUDE "/Shared/preprocessor.include.ab3"
00007270 <preprocessor.include.ab3@124> XINCLUDE "/Shared/preprocessor.include.ab3"
0000728C <preprocessor.include.ab3@125> XINCLUDE "/Shared/preprocessor.include.ab3"
000072A8 <preprocessor.include.ab3@126> XINCLUDE "/Shared/preprocessor.include.ab3"
000072C4 <preprocessor.include.ab3@127> XINCLUDE "/Shared/preprocessor.include.ab3"
000072E0 <preprocessor.include.ab3@128> XINCLUDE "/Shared/preprocessor.include.ab3"
000072FC <preprocessor.include.ab3@129> XINCLUDE "/Shared/preprocessor.include.ab3"
00007318 <preprocessor.include.ab3@130> XINCLUDE "/Shared/preprocessor.include.ab3"
00007334 <preprocessor.include.ab3@131> XINCLUDE "/Shared/preprocessor.include.ab3"
00007350 <preprocessor.include.ab3@132> XINCLUDE "/Shared/preprocessor.include.ab3"
0000736C <preprocessor.include.ab3@133> XINCLUDE "/Shared/preprocessor.include.ab3"
00007388 <preprocessor.include.ab3@134> XINCLUDE "/Shared/preprocessor.include.ab3"
000073A4 <preprocessor.include.ab3@135> XINCLUDE "/Shared/preprocessor.include.ab3"
000073C0 <preprocessor.include.ab3@136> XINCLUDE "/Shared/preprocessor.include.ab3"
000073DC <preprocessor.include.ab3@137> XINCLUDE "/Shared/preprocessor.include.ab3"
000073F8 <preprocessor.include.ab3@138> XINCLUDE "/Shared/preprocessor.include.ab3"
00007414 <preprocessor.include.ab3@139> XINCLUDE "/Shared/preprocessor.include.ab3"
00007430 <preprocessor.include.ab3@140> XINCLUDE "/Shared/preprocessor.include.ab3"
0000744C <preprocessor.include.ab3@141> XINCLUDE "/Shared/preprocessor.include.ab3"
00007468 <preprocessor.include.ab3@142> XINCLUDE "/Shared/preprocessor.include.ab3"
00007484 <preprocessor.include.ab3@143> XINCLUDE "/Shared/preprocessor.include.ab3"
000074A0 <preprocessor.include.ab3@144> XINCLUDE "/Shared/preprocessor.include.ab3"
000074BC <preprocessor.include.ab3@145> XINCLUDE "/Shared/preprocessor.include.ab3"
000074D8 <preprocessor.include.ab3@146> XINCLUDE "/Shared/preprocessor.include.ab3"
000074F4 <preprocessor.include.ab3@147> XINCLUDE "/Shared/preprocessor.include.ab3"
00007510 <preprocessor.include.ab3@148> XINCLUDE "/Shared/preprocessor.include.ab3"
0000752C <preprocessor.include.ab3@149> XINCLUDE "/Shared/preprocessor.include.ab3"
00007548 <preprocessor.include.ab3@150> XINCLUDE "/Shared/preprocessor.include.ab3"
00007564 <preprocessor.include.ab3@151> XINCLUDE "/Shared/preprocessor.include.ab3"
00007580 <preprocessor.include.ab3@152> XINCLUDE "/Shared/preprocessor.include.ab3"
0000759C <preprocessor.include.ab3@153> XINCLUDE "/Shared/preprocessor.include.ab3"
000075B8 <preprocessor.include.ab3@154> XINCLUDE "/Shared/preprocessor.include.ab3"
000075D4 <preprocessor.include.ab3@155> XINCLUDE "/Shared/preprocessor.include.ab3"
000075F0 <preprocessor.include.ab3@156> XINCLUDE "/Shared/preprocessor.include.ab3"
0000760C <preprocessor.include.ab3@157> XINCLUDE "/Shared/preprocessor.include.ab3"
00007628 <preprocessor.include.ab3@158> XINCLUDE "/Shared/preprocessor.include.ab3"
00007644 <preprocessor.include.ab3@159> XINCLUDE "/Shared/preprocessor.include.ab3"
00007660 <preprocessor.include.ab3@160> XINCLUDE "/Shared/preprocessor.include.ab3"
0000767C <preprocessor.include.ab3@161> XINCLUDE "/Shared/preprocessor.include.ab3"
00007698 <preprocessor.include.ab3@162> XINCLUDE "/Shared/preprocessor.include.ab3"
000076B4 <preprocessor.include.ab3@163> XINCLUDE "/Shared/preprocessor.include.ab3"
000076D0 <preprocessor.include.ab3@164> XINCLUDE "/Shared/preprocessor.include.ab3"
000076EC <preprocessor.include.ab3@165> XINCLUDE "/Shared/preprocessor.include.ab3"
00007708 <preprocessor.include.ab3@166> XINCLUDE "/Shared/preprocessor.include.ab3"
00007724 <preprocessor.include.ab3@167> XINCLUDE "/Shared/preprocessor.include.ab3"
00007740 <preprocessor.include.ab3@168> XINCLUDE "/Shared/preprocessor.include.ab3"
0000775C <preprocessor.include.ab3@169> XINCLUDE "/Shared/preprocessor.include.ab3"
00007778 <preprocessor.include.ab3@170> XINCLUDE "/Shared/preprocessor.include.ab3"
00007794 <preprocessor.include.ab3@171> XINCLUDE "/Shared/preprocessor.include.ab3"
000077B0 <preprocessor.include.ab3@172> XINCLUDE "/Shared/preprocessor.include.ab3"
000077CC <preprocessor.include.ab3@173> XINCLUDE "/Shared/preprocessor.include.ab3"
000077E8 <preprocessor.include.ab3@174> XINCLUDE "/Shared/preprocessor.include.ab3"
00007804 <preprocessor.include.ab3@175> XINCLUDE "/Shared/preprocessor.include.ab3"
00007820 <preprocessor.include.ab3@176> XINCLUDE "/Shared/preprocessor.include.ab3"
0000783C <preprocessor.include.ab3@177> XINCLUDE "/Shared/preprocessor.include.ab3"
00007858 <preprocessor.include.ab3@178> XINCLUDE "/Shared/preprocessor.include.ab3"
00007874 <preprocessor.include.ab3@179> XINCLUDE "/Shared/preprocessor.include.ab3"
00007890 <preprocessor.include.ab3@180> XINCLUDE "/Shared/preprocessor.include.ab3"
000078AC <preprocessor.include.ab3@181> XINCLUDE "/Shared/preprocessor.include.ab3"
000078C8 <preprocessor.include.ab3@182> XINCLUDE "/Shared/preprocessor.include.ab3"
000078E4 <preprocessor.include.ab3@183> XINCLUDE "/Shared/preprocessor.include.ab3"
00007900 <preprocessor.include.ab3@184> XINCLUDE "/Shared/preprocessor.include.ab3"
0000791C <preprocessor.include.ab3@185> XINCLUDE "/Shared/preprocessor.include.ab3"
00007938 <preprocessor.include.ab3@186> XINCLUDE "/Shared/preprocessor.include.ab3"
00007954 <preprocessor.include.ab3@187> XINCLUDE "/Shared/preprocessor.include.ab3"
00007970 <preprocessor.include.ab3@188> XINCLUDE "/Shared/preprocessor.include.ab3"
0000798C <preprocessor.include.ab3@189> XINCLUDE "/Shared/preprocessor.include.ab3"
000079A8 <preprocessor.include.ab3@190> XINCLUDE "/Shared/preprocessor.include.ab3"
000079C4 <preprocessor.include.ab3@191> XINCLUDE "/Shared/preprocessor.include.ab3"
000079E0 <preprocessor.include.ab3@192> XINCLUDE "/Shared/preprocessor.include.ab3"
000079FC <preprocessor.include.ab3@193> XINCLUDE "/Shared/preprocessor.include.ab3"
00007A18 <preprocessor.include.ab3@194> XINCLUDE "/Shared/preprocessor.include.ab3"
00007A34 <preprocessor.include.ab3@195> XINCLUDE "/Shared/preprocessor.include.ab3"
00007A50 <preprocessor.include.ab3@196> XINCLUDE "/Shared/preprocessor.include.ab3"
00007A6C <preprocessor.include.ab3@197> XINCLUDE "/Shared/preprocessor.include.ab3"
00007A88 <preprocessor.include.ab3@198> XINCLUDE "/Shared/preprocessor.include.ab3"
00007AA4 <preprocessor.include.ab3@199> XINCLUDE "/Shared/preprocessor.include.ab3"
00007AC0 <preprocessor.include.ab3@200> XINCLUDE "/Shared/preprocessor.include.ab3"
00007ADC <preprocessor.include.ab3@201> XINCLUDE "/Shared/preprocessor.include.ab3"
00007AF8 <preprocessor.include.ab3@202> XINCLUDE "/Shared/preprocessor.include.ab3"
00007B14 <preprocessor.include.ab3@203> XINCLUDE "/Shared/preprocessor.include.ab3"
00007B30 <preprocessor.include.ab3@204> XINCLUDE "/Shared/preprocessor.include.ab3"
00007B4C <preprocessor.include.ab3@205> XINCLUDE "/Shared/preprocessor.include.ab3"
00007B68 <preprocessor.include.ab3@206> XINCLUDE "/Shared/preprocessor.include.ab3"
00007B84 <preprocessor.include.ab3@207> XINCLUDE "/Shared/preprocessor.include.ab3"
00007BA0 <preprocessor.include.ab3@208> XINCLUDE "/Shared/preprocessor.include.ab3"
00007BBC <preprocessor.include.ab3@209> XINCLUDE "/Shared/preprocessor.include.ab3"
00007BD8 <preprocessor.include.ab3@210> XINCLUDE "/Shared/preprocessor.include.ab3"
00007BF4 <preprocessor.include.ab3@211> XINCLUDE "/Shared/preprocessor.include.ab3"
00007C10 <preprocessor.include.ab3@212> XINCLUDE "/Shared/preprocessor.include.ab3"
00007C18 <preprocessor.include.ab3@213> XINCLUDE "/Shared/preprocessor.include.ab3"
00007C22 <preprocessor.include.ab3@214> XINCLUDE "/Shared/preprocessor.include.ab3"
00007C2C <preprocessor.include.ab3@216> XINCLUDE "/Shared/preprocessor.include.ab3"
00007C32 <preprocessor.include.ab3@217> XINCLUDE "/Shared/preprocessor.include.ab3"
00007C60 <preprocessor.include.ab3@254> XINCLUDE "/Shared/preprocessor.include.ab3"
00007C7C <preprocessor.include.ab3@255> XINCLUDE "/Shared/preprocessor.include.ab3"
00007CAE <preprocessor.include.ab3@256> XINCLUDE "/Shared/preprocessor.include.ab3"
00007CB8 <preprocessor.include.ab3@257> XINCLUDE "/Shared/preprocessor.include.ab3"
00007CDA <preprocessor.include.ab3@258> XINCLUDE "/Shared/preprocessor.include.ab3"
00007CE4 <preprocessor.include.ab3@259> XINCLUDE "/Shared/preprocessor.include.ab3"
00007CEE <preprocessor.include.ab3@260> XINCLUDE "/Shared/preprocessor.include.ab3"
00007CF8 <preprocessor.include.ab3@262> XINCLUDE "/Shared/preprocessor.include.ab3"
00007D12 <preprocessor.include.ab3@263> XINCLUDE "/Shared/preprocessor.include.ab3"
00007D40 <preprocessor.include.ab3@267> XINCLUDE "/Shared/preprocessor.include.ab3"
00007D5C <preprocessor.include.ab3@268> XINCLUDE "/Shared/preprocessor.include.ab3"
00007D6A <preprocessor.include.ab3@269> XINCLUDE "/Shared/preprocessor.include.ab3"
00007DA4 <preprocessor.include.ab3@270> XINCLUDE "/Shared/preprocessor.include.ab3"
00007DAC <preprocessor.include.ab3@272> XINCLUDE "/Shared/preprocessor.include.ab3"
00007DC6 <preprocessor.include.ab3@273> XINCLUDE "/Shared/preprocessor.include.ab3"
00007DEC <preprocessor.include.ab3@280> XINCLUDE "/Shared/preprocessor.include.ab3"
00007E0E <preprocessor.include.ab3@281> XINCLUDE "/Shared/preprocessor.include.ab3"
00007E32 <preprocessor.include.ab3@282> XINCLUDE "/Shared/preprocessor.include.ab3"
00007E38 <preprocessor.include.ab3@283> XINCLUDE "/Shared/preprocessor.include.ab3"
00007E46 <preprocessor.include.ab3@284> XINCLUDE "/Shared/preprocessor.include.ab3"
00007E4C <preprocessor.include.ab3@285> XINCLUDE "/Shared/preprocessor.include.ab3"
00007E54 <preprocessor.include.ab3@286> XINCLUDE "/Shared/preprocessor.include.ab3"
00007E5A <preprocessor.include.ab3@287> XINCLUDE "/Shared/preprocessor.include.ab3"
00007E62 <preprocessor.include.ab3@288> XINCLUDE "/Shared/preprocessor.include.ab3"
00007E76 <preprocessor.include.ab3@290> XINCLUDE "/Shared/preprocessor.include.ab3"
00007E9C <preprocessor.include.ab3@291> XINCLUDE "/Shared/preprocessor.include.ab3"
00007EC4 <preprocessor.include.ab3@292> XINCLUDE "/Shared/preprocessor.include.ab3"
00007ECE <preprocessor.include.ab3@294> XINCLUDE "/Shared/preprocessor.include.ab3"
00007EE2 <preprocessor.include.ab3@295> XINCLUDE "/Shared/preprocessor.include.ab3"
00007EF6 <preprocessor.include.ab3@296> XINCLUDE "/Shared/preprocessor.include.ab3"
00007F06 <preprocessor.include.ab3@297> XINCLUDE "/Shared/preprocessor.include.ab3"
00007F20 <preprocessor.include.ab3@298> XINCLUDE "/Shared/preprocessor.include.ab3"
00007F4E <preprocessor.include.ab3@299> XINCLUDE "/Shared/preprocessor.include.ab3"
00007F62 <preprocessor.include.ab3@300> XINCLUDE "/Shared/preprocessor.include.ab3"
00007F8A <preprocessor.include.ab3@301> XINCLUDE "/Shared/preprocessor.include.ab3"
00007F90 <preprocessor.include.ab3@302> XINCLUDE "/Shared/preprocessor.include.ab3"
00007F98 <preprocessor.include.ab3@303> XINCLUDE "/Shared/preprocessor.include.ab3"
00007F9E <preprocessor.include.ab3@305> XINCLUDE "/Shared/preprocessor.include.ab3"
00007FC6 <preprocessor.include.ab3@306> XINCLUDE "/Shared/preprocessor.include.ab3"
00007FD0 <preprocessor.include.ab3@308> XINCLUDE "/Shared/preprocessor.include.ab3"
00007FDE <preprocessor.include.ab3@309> XINCLUDE "/Shared/preprocessor.include.ab3"
00007FFC <preprocessor.include.ab3@310> XINCLUDE "/Shared/preprocessor.include.ab3"
0000800A <preprocessor.include.ab3@311> XINCLUDE "/Shared/preprocessor.include.ab3"
00008012 <preprocessor.include.ab3@312> XINCLUDE "/Shared/preprocessor.include.ab3"
00008018 <preprocessor.include.ab3@313> XINCLUDE "/Shared/preprocessor.include.ab3"
0000802C <preprocessor.include.ab3@317> XINCLUDE "/Shared/preprocessor.include.ab3"
00008036 <preprocessor.include.ab3@318> XINCLUDE "/Shared/preprocessor.include.ab3"
00008044 <preprocessor.include.ab3@319> XINCLUDE "/Shared/preprocessor.include.ab3"
0000805E <preprocessor.include.ab3@320> XINCLUDE "/Shared/preprocessor.include.ab3"
00008064 <preprocessor.include.ab3@322> XINCLUDE "/Shared/preprocessor.include.ab3"
0000806C <preprocessor.include.ab3@323> XINCLUDE "/Shared/preprocessor.include.ab3"
00008072 <preprocessor.include.ab3@325> XINCLUDE "/Shared/preprocessor.include.ab3"
00008086 <preprocessor.include.ab3@326> XINCLUDE "/Shared/preprocessor.include.ab3"
00008090 <preprocessor.include.ab3@327> XINCLUDE "/Shared/preprocessor.include.ab3"
00008098 <preprocessor.include.ab3@328> XINCLUDE "/Shared/preprocessor.include.ab3"
000080AC <preprocessor.include.ab3@329> XINCLUDE "/Shared/preprocessor.include.ab3"
000080C0 <preprocessor.include.ab3@334> XINCLUDE "/Shared/preprocessor.include.ab3"
000080D4 <preprocessor.include.ab3@335> XINCLUDE "/Shared/preprocessor.include.ab3"
000080F2 <preprocessor.include.ab3@337> XINCLUDE "/Shared/preprocessor.include.ab3"
00008100 <preprocessor.include.ab3@338> XINCLUDE "/Shared/preprocessor.include.ab3"
00008110 <preprocessor.include.ab3@339> XINCLUDE "/Shared/preprocessor.include.ab3"
00008138 <preprocessor.include.ab3@340> XINCLUDE "/Shared/preprocessor.include.ab3"
0000815A <preprocessor.include.ab3@341> XINCLUDE "/Shared/preprocessor.include.ab3"
0000816E <preprocessor.include.ab3@344> XINCLUDE "/Shared/preprocessor.include.ab3"
0000818C <preprocessor.include.ab3@346> XINCLUDE "/Shared/preprocessor.include.ab3"
0000819A <preprocessor.include.ab3@347> XINCLUDE "/Shared/preprocessor.include.ab3"
000081C0 <preprocessor.include.ab3@348> XINCLUDE "/Shared/preprocessor.include.ab3"
000081E8 <preprocessor.include.ab3@349> XINCLUDE "/Shared/preprocessor.include.ab3"
0000820A <preprocessor.include.ab3@350> XINCLUDE "/Shared/preprocessor.include.ab3"
0000823A <preprocessor.include.ab3@353> XINCLUDE "/Shared/preprocessor.include.ab3"
00008268 <preprocessor.include.ab3@357> XINCLUDE "/Shared/preprocessor.include.ab3"
0000829A <preprocessor.include.ab3@358> XINCLUDE "/Shared/preprocessor.include.ab3"
000082A8 <preprocessor.include.ab3@360> XINCLUDE "/Shared/preprocessor.include.ab3"
000082AE <preprocessor.include.ab3@361> XINCLUDE "/Shared/preprocessor.include.ab3"
000082BE <preprocessor.include.ab3@364> XINCLUDE "/Shared/preprocessor.include.ab3"
000082C4 <preprocessor.include.ab3@365> XINCLUDE "/Shared/preprocessor.include.ab3"
000082EA <preprocessor.include.ab3@369> XINCLUDE "/Shared/preprocessor.include.ab3"
0000830C <preprocessor.include.ab3@370> XINCLUDE "/Shared/preprocessor.include.ab3"
00008334 <preprocessor.include.ab3@371> XINCLUDE "/Shared/preprocessor.include.ab3"
00008354 <preprocessor.include.ab3@372> XINCLUDE "/Shared/preprocessor.include.ab3"
00008376 <preprocessor.include.ab3@373> XINCLUDE "/Shared/preprocessor.include.ab3"
0000837C <preprocessor.include.ab3@374> XINCLUDE "/Shared/preprocessor.include.ab3"
0000838A <preprocessor.include.ab3@375> XINCLUDE "/Shared/preprocessor.include.ab3"
00008398 <preprocessor.include.ab3@376> XINCLUDE "/Shared/preprocessor.include.ab3"
0000839E <preprocessor.include.ab3@377> XINCLUDE "/Shared/preprocessor.include.ab3"
000083A6 <preprocessor.include.ab3@378> XINCLUDE "/Shared/preprocessor.include.ab3"
000083C4 <preprocessor.include.ab3@379> XINCLUDE "/Shared/preprocessor.include.ab3"
000083D8 <preprocessor.include.ab3@380> XINCLUDE "/Shared/preprocessor.include.ab3"
000083E8 <preprocessor.include.ab3@381> XINCLUDE "/Shared/preprocessor.include.ab3"
000083FE <preprocessor.include.ab3@383> XINCLUDE "/Shared/preprocessor.include.ab3"
00008416 <preprocessor.include.ab3@385> XINCLUDE "/Shared/preprocessor.include.ab3"
00008432 <preprocessor.include.ab3@386> XINCLUDE "/Shared/preprocessor.include.ab3"
0000843C <preprocessor.include.ab3@387> XINCLUDE "/Shared/preprocessor.include.ab3"
00008458 <preprocessor.include.ab3@388> XINCLUDE "/Shared/preprocessor.include.ab3"
0000846A <preprocessor.include.ab3@389> XINCLUDE "/Shared/preprocessor.include.ab3"
00008498 <preprocessor.include.ab3@390> XINCLUDE "/Shared/preprocessor.include.ab3"
000084D4 <preprocessor.include.ab3@391> XINCLUDE "/Shared/preprocessor.include.ab3"
000084E4 <preprocessor.include.ab3@392> XINCLUDE "/Shared/preprocessor.include.ab3"
000084EA <preprocessor.include.ab3@393> XINCLUDE "/Shared/preprocessor.include.ab3"
000084F0 <preprocessor.include.ab3@396> XINCLUDE "/Shared/preprocessor.include.ab3"
00008508 <preprocessor.include.ab3@397> XINCLUDE "/Shared/preprocessor.include.ab3"
00008518 <preprocessor.include.ab3@398> XINCLUDE "/Shared/preprocessor.include.ab3"
0000859E <preprocessor.include.ab3@399> XINCLUDE "/Shared/preprocessor.include.ab3"
000085D8 <preprocessor.include.ab3@400> XINCLUDE "/Shared/preprocessor.include.ab3"
0000860E <preprocessor.include.ab3@401> XINCLUDE "/Shared/preprocessor.include.ab3"
0000861E <preprocessor.include.ab3@402> XINCLUDE "/Shared/preprocessor.include.ab3"
0000862C <preprocessor.include.ab3@404> XINCLUDE "/Shared/preprocessor.include.ab3"
00008632 <preprocessor.include.ab3@405> XINCLUDE "/Shared/preprocessor.include.ab3"
00008642 <preprocessor.include.ab3@406> XINCLUDE "/Shared/preprocessor.include.ab3"
0000866C <preprocessor.include.ab3@407> XINCLUDE "/Shared/preprocessor.include.ab3"
00008672 <preprocessor.include.ab3@408> XINCLUDE "/Shared/preprocessor.include.ab3"
0000869E <preprocessor.include.ab3@409> XINCLUDE "/Shared/preprocessor.include.ab3"
000086AE <preprocessor.include.ab3@412> XINCLUDE "/Shared/preprocessor.include.ab3"
000086BE <preprocessor.include.ab3@414> XINCLUDE "/Shared/preprocessor.include.ab3"
000086DC <preprocessor.include.ab3@415> XINCLUDE "/Shared/preprocessor.include.ab3"
000086EA <preprocessor.include.ab3@416> XINCLUDE "/Shared/preprocessor.include.ab3"
00008720 <preprocessor.include.ab3@417> XINCLUDE "/Shared/preprocessor.include.ab3"
00008744 <preprocessor.include.ab3@418> XINCLUDE "/Shared/preprocessor.include.ab3"
00008758 <preprocessor.include.ab3@421> XINCLUDE "/Shared/preprocessor.include.ab3"
00008768 <preprocessor.include.ab3@423> XINCLUDE "/Shared/preprocessor.include.ab3"
00008786 <preprocessor.include.ab3@424> XINCLUDE "/Shared/preprocessor.include.ab3"
00008794 <preprocessor.include.ab3@425> XINCLUDE "/Shared/preprocessor.include.ab3"
000087B8 <preprocessor.include.ab3@426> XINCLUDE "/Shared/preprocessor.include.ab3"
000087DC <preprocessor.include.ab3@427> XINCLUDE "/Shared/preprocessor.include.ab3"
000087EA <preprocessor.include.ab3@431> XINCLUDE "/Shared/preprocessor.include.ab3"
000087F8 <preprocessor.include.ab3@432> XINCLUDE "/Shared/preprocessor.include.ab3"
00008818 <preprocessor.include.ab3@433> XINCLUDE "/Shared/preprocessor.include.ab3"
00008826 <preprocessor.include.ab3@434> XINCLUDE "/Shared/preprocessor.include.ab3"
0000882C <preprocessor.include.ab3@435> XINCLUDE "/Shared/preprocessor.include.ab3"
00008832 <preprocessor.include.ab3@438> XINCLUDE "/Shared/preprocessor.include.ab3"
00008840 <preprocessor.include.ab3@440> XINCLUDE "/Shared/preprocessor.include.ab3"
0000884E <preprocessor.include.ab3@441> XINCLUDE "/Shared/preprocessor.include.ab3"
0000886E <preprocessor.include.ab3@442> XINCLUDE "/Shared/preprocessor.include.ab3"
0000887C <preprocessor.include.ab3@443> XINCLUDE "/Shared/preprocessor.include.ab3"
00008882 <preprocessor.include.ab3@444> XINCLUDE "/Shared/preprocessor.include.ab3"
000088AC <preprocessor.include.ab3@447> XINCLUDE "/Shared/preprocessor.include.ab3"
000088BC <preprocessor.include.ab3@450> XINCLUDE "/Shared/preprocessor.include.ab3"
000088C6 <preprocessor.include.ab3@452> XINCLUDE "/Shared/preprocessor.include.ab3"
000088DA <preprocessor.include.ab3@453> XINCLUDE "/Shared/preprocessor.include.ab3"
00008900 <preprocessor.include.ab3@457> XINCLUDE "/Shared/preprocessor.include.ab3"
00008922 <preprocessor.include.ab3@458> XINCLUDE "/Shared/preprocessor.include.ab3"
0000894A <preprocessor.include.ab3@459> XINCLUDE "/Shared/preprocessor.include.ab3"
00008950 <preprocessor.include.ab3@460> XINCLUDE "/Shared/preprocessor.include.ab3"
0000895E <preprocessor.include.ab3@461> XINCLUDE "/Shared/preprocessor.include.ab3"
00008964 <preprocessor.include.ab3@462> XINCLUDE "/Shared/preprocessor.include.ab3"
00008978 <preprocessor.include.ab3@463> XINCLUDE "/Shared/preprocessor.include.ab3"
00008988 <preprocessor.include.ab3@464> XINCLUDE "/Shared/preprocessor.include.ab3"
0000899E <preprocessor.include.ab3@466> XINCLUDE "/Shared/preprocessor.include.ab3"
000089B6 <preprocessor.include.ab3@468> XINCLUDE "/Shared/preprocessor.include.ab3"
000089D2 <preprocessor.include.ab3@469> XINCLUDE "/Shared/preprocessor.include.ab3"
000089DC <preprocessor.include.ab3@470> XINCLUDE "/Shared/preprocessor.include.ab3"
000089F8 <preprocessor.include.ab3@471> XINCLUDE "/Shared/preprocessor.include.ab3"
00008A26 <preprocessor.include.ab3@472> XINCLUDE "/Shared/preprocessor.include.ab3"
00008A62 <preprocessor.include.ab3@473> XINCLUDE "/Shared/preprocessor.include.ab3"
00008A72 <preprocessor.include.ab3@474> XINCLUDE "/Shared/preprocessor.include.ab3"
00008A80 <preprocessor.include.ab3@476> XINCLUDE "/Shared/preprocessor.include.ab3"
00008A86 <preprocessor.include.ab3@477> XINCLUDE "/Shared/preprocessor.include.ab3"
00008A96 <preprocessor.include.ab3@478> XINCLUDE "/Shared/preprocessor.include.ab3"
00008AC0 <preprocessor.include.ab3@479> XINCLUDE "/Shared/preprocessor.include.ab3"
00008AC6 <preprocessor.include.ab3@480> XINCLUDE "/Shared/preprocessor.include.ab3"
00008AF2 <preprocessor.include.ab3@481> XINCLUDE "/Shared/preprocessor.include.ab3"
00008B02 <preprocessor.include.ab3@483> XINCLUDE "/Shared/preprocessor.include.ab3"
00008B12 <preprocessor.include.ab3@485> XINCLUDE "/Shared/preprocessor.include.ab3"
00008B30 <preprocessor.include.ab3@486> XINCLUDE "/Shared/preprocessor.include.ab3"
00008B3E <preprocessor.include.ab3@487> XINCLUDE "/Shared/preprocessor.include.ab3"
00008B74 <preprocessor.include.ab3@488> XINCLUDE "/Shared/preprocessor.include.ab3"
00008B98 <preprocessor.include.ab3@489> XINCLUDE "/Shared/preprocessor.include.ab3"
00008BAC <preprocessor.include.ab3@492> XINCLUDE "/Shared/preprocessor.include.ab3"
00008BBC <preprocessor.include.ab3@494> XINCLUDE "/Shared/preprocessor.include.ab3"
00008BDA <preprocessor.include.ab3@495> XINCLUDE "/Shared/preprocessor.include.ab3"
00008BE8 <preprocessor.include.ab3@496> XINCLUDE "/Shared/preprocessor.include.ab3"
00008C0C <preprocessor.include.ab3@497> XINCLUDE "/Shared/preprocessor.include.ab3"
00008C30 <preprocessor.include.ab3@498> XINCLUDE "/Shared/preprocessor.include.ab3"
00008C36 <preprocessor.include.ab3@502> XINCLUDE "/Shared/preprocessor.include.ab3"
00008C46 <preprocessor.include.ab3@503> XINCLUDE "/Shared/preprocessor.include.ab3"
00008C4C <preprocessor.include.ab3@504> XINCLUDE "/Shared/preprocessor.include.ab3"
00008C6E <preprocessor.include.ab3@508> XINCLUDE "/Shared/preprocessor.include.ab3"
00008C76 <preprocessor.include.ab3@509> XINCLUDE "/Shared/preprocessor.include.ab3"
00008CAC <preprocessor.include.ab3@510> XINCLUDE "/Shared/preprocessor.include.ab3"
00008CC8 <preprocessor.include.ab3@511> XINCLUDE "/Shared/preprocessor.include.ab3"
00008CCE <preprocessor.include.ab3@512> XINCLUDE "/Shared/preprocessor.include.ab3"
00008D04 <preprocessor.include.ab3@516> XINCLUDE "/Shared/preprocessor.include.ab3"
00008D20 <preprocessor.include.ab3@517> XINCLUDE "/Shared/preprocessor.include.ab3"
00008D48 <preprocessor.include.ab3@518> XINCLUDE "/Shared/preprocessor.include.ab3"
00008D66 <preprocessor.include.ab3@519> XINCLUDE "/Shared/preprocessor.include.ab3"
00008D84 <preprocessor.include.ab3@520> XINCLUDE "/Shared/preprocessor.include.ab3"
00008DB2 <preprocessor.include.ab3@521> XINCLUDE "/Shared/preprocessor.include.ab3"
00008E14 <preprocessor.include.ab3@522> XINCLUDE "/Shared/preprocessor.include.ab3"
00008E2E <preprocessor.include.ab3@523> XINCLUDE "/Shared/preprocessor.include.ab3"
00008E48 <preprocessor.include.ab3@527> XINCLUDE "/Shared/preprocessor.include.ab3"
00008E52 <preprocessor.include.ab3@528> XINCLUDE "/Shared/preprocessor.include.ab3"
00008E90 <preprocessor.include.ab3@529> XINCLUDE "/Shared/preprocessor.include.ab3"
00008E94 <preprocessor.include.ab3@530> XINCLUDE "/Shared/preprocessor.include.ab3"
00008E9E <preprocessor.include.ab3@532> XINCLUDE "/Shared/preprocessor.include.ab3"
00008ECC <preprocessor.include.ab3@533> XINCLUDE "/Shared/preprocessor.include.ab3"
00008EEC <preprocessor.include.ab3@534> XINCLUDE "/Shared/preprocessor.include.ab3"
00008F04 <preprocessor.include.ab3@535> XINCLUDE "/Shared/preprocessor.include.ab3"
00008F62 <preprocessor.include.ab3@536> XINCLUDE "/Shared/preprocessor.include.ab3"
00008F8E <preprocessor.include.ab3@537> XINCLUDE "/Shared/preprocessor.include.ab3"
00008FA0 <preprocessor.include.ab3@538> XINCLUDE "/Shared/preprocessor.include.ab3"
00008FB0 <preprocessor.include.ab3@539> XINCLUDE "/Shared/preprocessor.include.ab3"
00008FC8 <preprocessor.include.ab3@540> XINCLUDE "/Shared/preprocessor.include.ab3"
00008FCE <preprocessor.include.ab3@542> XINCLUDE "/Shared/preprocessor.include.ab3"
00009008 <preprocessor.include.ab3@543> XINCLUDE "/Shared/preprocessor.include.ab3"
00009012 <preprocessor.include.ab3@545> XINCLUDE "/Shared/preprocessor.include.ab3"
00009018 <preprocessor.include.ab3@546> XINCLUDE "/Shared/preprocessor.include.ab3"
00009022 <preprocessor.include.ab3@547> XINCLUDE "/Shared/preprocessor.include.ab3"
00009034 <preprocessor.include.ab3@548> XINCLUDE "/Shared/preprocessor.include.ab3"
00009034 <AmiBlitz3.ab3@87> XINCLUDE "/Shared/preprocessor.include.ab3"
00009034 <logging.include.ab3@1> XINCLUDE "PE/logging.include.ab3"
00009034 <PE_Tools.include.ab3@1> XINCLUDE "PE/logging.include.ab3"
00009058 <PE_Tools.include.ab3@75> XINCLUDE "PE/logging.include.ab3"
00009060 <PE_Tools.include.ab3@84> XINCLUDE "PE/logging.include.ab3"
0000908E <PE_Tools.include.ab3@85> XINCLUDE "PE/logging.include.ab3"
000090BC <PE_Tools.include.ab3@86> XINCLUDE "PE/logging.include.ab3"
0000912C <PE_Tools.include.ab3@87> XINCLUDE "PE/logging.include.ab3"
0000913A <PE_Tools.include.ab3@88> XINCLUDE "PE/logging.include.ab3"
0000918A <PE_Tools.include.ab3@89> XINCLUDE "PE/logging.include.ab3"
0000918A <logging.include.ab3@11> XINCLUDE "PE/logging.include.ab3"
0000918A <file.include.ab3@1> XINCLUDE "PE/logging.include.ab3"
0000918A <asl.include.ab3@1> XINCLUDE "PE/logging.include.ab3"
000091AE <asl.include.ab3@94> XINCLUDE "PE/logging.include.ab3"
000091D6 <asl.include.ab3@95> XINCLUDE "PE/logging.include.ab3"
000091FA <asl.include.ab3@96> XINCLUDE "PE/logging.include.ab3"
00009228 <asl.include.ab3@295> XINCLUDE "PE/logging.include.ab3"
00009446 <asl.include.ab3@297> XINCLUDE "PE/logging.include.ab3"
00009474 <asl.include.ab3@299> XINCLUDE "PE/logging.include.ab3"
000094A0 <asl.include.ab3@301> XINCLUDE "PE/logging.include.ab3"
000094DC <asl.include.ab3@302> XINCLUDE "PE/logging.include.ab3"
00009508 <asl.include.ab3@303> XINCLUDE "PE/logging.include.ab3"
00009534 <asl.include.ab3@304> XINCLUDE "PE/logging.include.ab3"
00009560 <asl.include.ab3@305> XINCLUDE "PE/logging.include.ab3"
0000958C <asl.include.ab3@306> XINCLUDE "PE/logging.include.ab3"
000095B8 <asl.include.ab3@307> XINCLUDE "PE/logging.include.ab3"
000095E4 <asl.include.ab3@308> XINCLUDE "PE/logging.include.ab3"
00009610 <asl.include.ab3@309> XINCLUDE "PE/logging.include.ab3"
0000963C <asl.include.ab3@310> XINCLUDE "PE/logging.include.ab3"
000096C6 <asl.include.ab3@312> XINCLUDE "PE/logging.include.ab3"
00009750 <asl.include.ab3@313> XINCLUDE "PE/logging.include.ab3"
000097EE <asl.include.ab3@314> XINCLUDE "PE/logging.include.ab3"
00009838 <asl.include.ab3@315> XINCLUDE "PE/logging.include.ab3"
00009878 <asl.include.ab3@316> XINCLUDE "PE/logging.include.ab3"
0000987E <asl.include.ab3@317> XINCLUDE "PE/logging.include.ab3"
000098C8 <asl.include.ab3@320> XINCLUDE "PE/logging.include.ab3"
00009908 <asl.include.ab3@321> XINCLUDE "PE/logging.include.ab3"
00009932 <asl.include.ab3@322> XINCLUDE "PE/logging.include.ab3"
00009938 <asl.include.ab3@323> XINCLUDE "PE/logging.include.ab3"
00009962 <asl.include.ab3@324> XINCLUDE "PE/logging.include.ab3"
0000998C <asl.include.ab3@326> XINCLUDE "PE/logging.include.ab3"
000099B6 <asl.include.ab3@328> XINCLUDE "PE/logging.include.ab3"
000099C0 <asl.include.ab3@329> XINCLUDE "PE/logging.include.ab3"
000099DE <asl.include.ab3@330> XINCLUDE "PE/logging.include.ab3"
00009A00 <asl.include.ab3@331> XINCLUDE "PE/logging.include.ab3"
00009A2E <asl.include.ab3@332> XINCLUDE "PE/logging.include.ab3"
00009A5C <asl.include.ab3@333> XINCLUDE "PE/logging.include.ab3"
00009A8A <asl.include.ab3@334> XINCLUDE "PE/logging.include.ab3"
00009AD0 <asl.include.ab3@337> XINCLUDE "PE/logging.include.ab3"
00009B16 <asl.include.ab3@338> XINCLUDE "PE/logging.include.ab3"
00009B5C <asl.include.ab3@339> XINCLUDE "PE/logging.include.ab3"
00009B94 <asl.include.ab3@341> XINCLUDE "PE/logging.include.ab3"
00009C92 <asl.include.ab3@342> XINCLUDE "PE/logging.include.ab3"
00009CB0 <asl.include.ab3@344> XINCLUDE "PE/logging.include.ab3"
00009CBA <asl.include.ab3@346> XINCLUDE "PE/logging.include.ab3"
00009CE0 <asl.include.ab3@347> XINCLUDE "PE/logging.include.ab3"
00009CF2 <asl.include.ab3@349> XINCLUDE "PE/logging.include.ab3"
00009D20 <asl.include.ab3@350> XINCLUDE "PE/logging.include.ab3"
00009D48 <asl.include.ab3@351> XINCLUDE "PE/logging.include.ab3"
00009D5A <asl.include.ab3@352> XINCLUDE "PE/logging.include.ab3"
00009DB0 <asl.include.ab3@353> XINCLUDE "PE/logging.include.ab3"
00009DE6 <asl.include.ab3@354> XINCLUDE "PE/logging.include.ab3"
00009DF6 <asl.include.ab3@356> XINCLUDE "PE/logging.include.ab3"
00009DFC <asl.include.ab3@357> XINCLUDE "PE/logging.include.ab3"
00009E0E <asl.include.ab3@358> XINCLUDE "PE/logging.include.ab3"
00009E18 <asl.include.ab3@359> XINCLUDE "PE/logging.include.ab3"
00009E52 <asl.include.ab3@360> XINCLUDE "PE/logging.include.ab3"
00009E58 <asl.include.ab3@361> XINCLUDE "PE/logging.include.ab3"
00009EB0 <asl.include.ab3@362> XINCLUDE "PE/logging.include.ab3"
00009ECE <asl.include.ab3@364> XINCLUDE "PE/logging.include.ab3"
00009ED4 <asl.include.ab3@367> XINCLUDE "PE/logging.include.ab3"
00009EE4 <asl.include.ab3@370> XINCLUDE "PE/logging.include.ab3"
00009EF4 <asl.include.ab3@371> XINCLUDE "PE/logging.include.ab3"
00009F04 <asl.include.ab3@372> XINCLUDE "PE/logging.include.ab3"
00009F14 <asl.include.ab3@373> XINCLUDE "PE/logging.include.ab3"
00009F24 <asl.include.ab3@375> XINCLUDE "PE/logging.include.ab3"
00009F2E <asl.include.ab3@377> XINCLUDE "PE/logging.include.ab3"
00009F42 <asl.include.ab3@378> XINCLUDE "PE/logging.include.ab3"
00009F58 <asl.include.ab3@394> XINCLUDE "PE/logging.include.ab3"
00009F80 <asl.include.ab3@396> XINCLUDE "PE/logging.include.ab3"
00009F8A <asl.include.ab3@397> XINCLUDE "PE/logging.include.ab3"
00009F9C <asl.include.ab3@398> XINCLUDE "PE/logging.include.ab3"
00009FD6 <asl.include.ab3@399> XINCLUDE "PE/logging.include.ab3"
00009FE0 <asl.include.ab3@400> XINCLUDE "PE/logging.include.ab3"
0000A00A <asl.include.ab3@402> XINCLUDE "PE/logging.include.ab3"
0000A022 <asl.include.ab3@403> XINCLUDE "PE/logging.include.ab3"
0000A074 <asl.include.ab3@439> XINCLUDE "PE/logging.include.ab3"
0000A0A2 <asl.include.ab3@441> XINCLUDE "PE/logging.include.ab3"
0000A134 <asl.include.ab3@442> XINCLUDE "PE/logging.include.ab3"
0000A17A <asl.include.ab3@443> XINCLUDE "PE/logging.include.ab3"
0000A20C <asl.include.ab3@444> XINCLUDE "PE/logging.include.ab3"
0000A226 <asl.include.ab3@445> XINCLUDE "PE/logging.include.ab3"
0000A226 <file.include.ab3@57> XINCLUDE "PE/logging.include.ab3"
0000A23C <file.include.ab3@66> XINCLUDE "PE/logging.include.ab3"
0000A252 <file.include.ab3@67> XINCLUDE "PE/logging.include.ab3"
0000A268 <file.include.ab3@68> XINCLUDE "PE/logging.include.ab3"
0000A27E <file.include.ab3@70> XINCLUDE "PE/logging.include.ab3"
0000A28A <file.include.ab3@72> XINCLUDE "PE/logging.include.ab3"
0000A296 <file.include.ab3@73> XINCLUDE "PE/logging.include.ab3"
0000A2A2 <file.include.ab3@74> XINCLUDE "PE/logging.include.ab3"
0000A2AE <file.include.ab3@75> XINCLUDE "PE/logging.include.ab3"
0000A2D6 <file.include.ab3@77> XINCLUDE "PE/logging.include.ab3"
0000A2FE <file.include.ab3@78> XINCLUDE "PE/logging.include.ab3"
0000A326 <file.include.ab3@79> XINCLUDE "PE/logging.include.ab3"
0000A34A <file.include.ab3@109> XINCLUDE "PE/logging.include.ab3"
0000A36E <file.include.ab3@110> XINCLUDE "PE/logging.include.ab3"
0000A388 <file.include.ab3@156> XINCLUDE "PE/logging.include.ab3"
0000A398 <file.include.ab3@157> XINCLUDE "PE/logging.include.ab3"
0000A39A <file.include.ab3@158> XINCLUDE "PE/logging.include.ab3"
0000A39C <file.include.ab3@159> XINCLUDE "PE/logging.include.ab3"
0000A39E <file.include.ab3@160> XINCLUDE "PE/logging.include.ab3"
0000A3A0 <file.include.ab3@161> XINCLUDE "PE/logging.include.ab3"
0000A3A2 <file.include.ab3@162> XINCLUDE "PE/logging.include.ab3"
0000A3A6 <file.include.ab3@163> XINCLUDE "PE/logging.include.ab3"
0000A3AA <file.include.ab3@164> XINCLUDE "PE/logging.include.ab3"
0000A3AE <file.include.ab3@165> XINCLUDE "PE/logging.include.ab3"
0000A3B0 <file.include.ab3@166> XINCLUDE "PE/logging.include.ab3"
0000A3B2 <file.include.ab3@167> XINCLUDE "PE/logging.include.ab3"
0000A3B4 <file.include.ab3@168> XINCLUDE "PE/logging.include.ab3"
0000A3B6 <file.include.ab3@169> XINCLUDE "PE/logging.include.ab3"
0000A3B8 <file.include.ab3@170> XINCLUDE "PE/logging.include.ab3"
0000A3BA <file.include.ab3@171> XINCLUDE "PE/logging.include.ab3"
0000A3BC <file.include.ab3@172> XINCLUDE "PE/logging.include.ab3"
0000A3C6 <file.include.ab3@173> XINCLUDE "PE/logging.include.ab3"
0000A3CC <file.include.ab3@174> XINCLUDE "PE/logging.include.ab3"
0000A3E6 <file.include.ab3@215> XINCLUDE "PE/logging.include.ab3"
0000A404 <file.include.ab3@217> XINCLUDE "PE/logging.include.ab3"
0000A40A <file.include.ab3@218> XINCLUDE "PE/logging.include.ab3"
0000A424 <file.include.ab3@237> XINCLUDE "PE/logging.include.ab3"
0000A440 <file.include.ab3@239> XINCLUDE "PE/logging.include.ab3"
0000A466 <file.include.ab3@240> XINCLUDE "PE/logging.include.ab3"
0000A486 <file.include.ab3@241> XINCLUDE "PE/logging.include.ab3"
0000A490 <file.include.ab3@242> XINCLUDE "PE/logging.include.ab3"
0000A4BC <file.include.ab3@243> XINCLUDE "PE/logging.include.ab3"
0000A4DE <file.include.ab3@244> XINCLUDE "PE/logging.include.ab3"
0000A4F8 <file.include.ab3@245> XINCLUDE "PE/logging.include.ab3"
0000A4FE <file.include.ab3@248> XINCLUDE "PE/logging.include.ab3"
0000A538 <file.include.ab3@249> XINCLUDE "PE/logging.include.ab3"
0000A556 <file.include.ab3@251> XINCLUDE "PE/logging.include.ab3"
0000A55C <file.include.ab3@252> XINCLUDE "PE/logging.include.ab3"
0000A57A <file.include.ab3@271> XINCLUDE "PE/logging.include.ab3"
0000A580 <file.include.ab3@273> XINCLUDE "PE/logging.include.ab3"
0000A5A2 <file.include.ab3@274> XINCLUDE "PE/logging.include.ab3"
0000A5C2 <file.include.ab3@275> XINCLUDE "PE/logging.include.ab3"
0000A5FA <file.include.ab3@276> XINCLUDE "PE/logging.include.ab3"
0000A616 <file.include.ab3@277> XINCLUDE "PE/logging.include.ab3"
0000A61C <file.include.ab3@278> XINCLUDE "PE/logging.include.ab3"
0000A622 <file.include.ab3@279> XINCLUDE "PE/logging.include.ab3"
0000A628 <file.include.ab3@281> XINCLUDE "PE/logging.include.ab3"
0000A62E <file.include.ab3@282> XINCLUDE "PE/logging.include.ab3"
0000A64A <file.include.ab3@283> XINCLUDE "PE/logging.include.ab3"
0000A696 <file.include.ab3@285> XINCLUDE "PE/logging.include.ab3"
0000A69C <file.include.ab3@286> XINCLUDE "PE/logging.include.ab3"
0000A6D6 <file.include.ab3@287> XINCLUDE "PE/logging.include.ab3"
0000A6E2 <file.include.ab3@288> XINCLUDE "PE/logging.include.ab3"
0000A6FE <file.include.ab3@289> XINCLUDE "PE/logging.include.ab3"
0000A704 <file.include.ab3@291> XINCLUDE "PE/logging.include.ab3"
0000A73E <file.include.ab3@292> XINCLUDE "PE/logging.include.ab3"
0000A748 <file.include.ab3@296> XINCLUDE "PE/logging.include.ab3"
0000A74E <file.include.ab3@297> XINCLUDE "PE/logging.include.ab3"
0000A76C <file.include.ab3@316> XINCLUDE "PE/logging.include.ab3"
0000A79A <file.include.ab3@318> XINCLUDE "PE/logging.include.ab3"
0000A7A0 <file.include.ab3@319> XINCLUDE "PE/logging.include.ab3"
0000A7B6 <file.include.ab3@335> XINCLUDE "PE/logging.include.ab3"
0000A7BE <file.include.ab3@337> XINCLUDE "PE/logging.include.ab3"
0000A81A <file.include.ab3@338> XINCLUDE "PE/logging.include.ab3"
0000A828 <file.include.ab3@339> XINCLUDE "PE/logging.include.ab3"
0000A82E <file.include.ab3@340> XINCLUDE "PE/logging.include.ab3"
0000A860 <file.include.ab3@341> XINCLUDE "PE/logging.include.ab3"
0000A86A <file.include.ab3@342> XINCLUDE "PE/logging.include.ab3"
0000A870 <file.include.ab3@343> XINCLUDE "PE/logging.include.ab3"
0000A88A <file.include.ab3@397> XINCLUDE "PE/logging.include.ab3"
0000A89C <file.include.ab3@399> XINCLUDE "PE/logging.include.ab3"
0000A8FA <file.include.ab3@400> XINCLUDE "PE/logging.include.ab3"
0000A934 <file.include.ab3@401> XINCLUDE "PE/logging.include.ab3"
0000A96E <file.include.ab3@402> XINCLUDE "PE/logging.include.ab3"
0000A98C <file.include.ab3@403> XINCLUDE "PE/logging.include.ab3"
0000A9AA <file.include.ab3@404> XINCLUDE "PE/logging.include.ab3"
0000A9C0 <file.include.ab3@405> XINCLUDE "PE/logging.include.ab3"
0000A9DC <file.include.ab3@406> XINCLUDE "PE/logging.include.ab3"
0000A9F6 <file.include.ab3@407> XINCLUDE "PE/logging.include.ab3"
0000AA74 <file.include.ab3@408> XINCLUDE "PE/logging.include.ab3"
0000AA86 <file.include.ab3@410> XINCLUDE "PE/logging.include.ab3"
0000AA9C <file.include.ab3@422> XINCLUDE "PE/logging.include.ab3"
0000AAC6 <file.include.ab3@424> XINCLUDE "PE/logging.include.ab3"
0000AAD0 <file.include.ab3@425> XINCLUDE "PE/logging.include.ab3"
0000AAE0 <file.include.ab3@426> XINCLUDE "PE/logging.include.ab3"
0000AAE4 <file.include.ab3@427> XINCLUDE "PE/logging.include.ab3"
0000AB12 <file.include.ab3@428> XINCLUDE "PE/logging.include.ab3"
0000AB2C <file.include.ab3@447> XINCLUDE "PE/logging.include.ab3"
0000AB3E <file.include.ab3@449> XINCLUDE "PE/logging.include.ab3"
0000AB5E <file.include.ab3@450> XINCLUDE "PE/logging.include.ab3"
0000AB74 <file.include.ab3@451> XINCLUDE "PE/logging.include.ab3"
0000ABAC <file.include.ab3@452> XINCLUDE "PE/logging.include.ab3"
0000ABD6 <file.include.ab3@453> XINCLUDE "PE/logging.include.ab3"
0000AC00 <file.include.ab3@456> XINCLUDE "PE/logging.include.ab3"
0000AC18 <file.include.ab3@457> XINCLUDE "PE/logging.include.ab3"
0000AC2E <file.include.ab3@525> XINCLUDE "PE/logging.include.ab3"
0000AC76 <file.include.ab3@527> XINCLUDE "PE/logging.include.ab3"
0000AC96 <file.include.ab3@528> XINCLUDE "PE/logging.include.ab3"
0000AC9E <file.include.ab3@529> XINCLUDE "PE/logging.include.ab3"
0000ACDC <file.include.ab3@568> XINCLUDE "PE/logging.include.ab3"
0000ACE8 <file.include.ab3@570> XINCLUDE "PE/logging.include.ab3"
0000ACF2 <file.include.ab3@571> XINCLUDE "PE/logging.include.ab3"
0000AD04 <file.include.ab3@572> XINCLUDE "PE/logging.include.ab3"
0000AD0A <file.include.ab3@573> XINCLUDE "PE/logging.include.ab3"
0000AD18 <file.include.ab3@574> XINCLUDE "PE/logging.include.ab3"
0000AD40 <file.include.ab3@575> XINCLUDE "PE/logging.include.ab3"
0000AD54 <file.include.ab3@576> XINCLUDE "PE/logging.include.ab3"
0000AD7C <file.include.ab3@577> XINCLUDE "PE/logging.include.ab3"
0000AD90 <file.include.ab3@578> XINCLUDE "PE/logging.include.ab3"
0000ADB8 <file.include.ab3@579> XINCLUDE "PE/logging.include.ab3"
0000ADCC <file.include.ab3@580> XINCLUDE "PE/logging.include.ab3"
0000ADF4 <file.include.ab3@581> XINCLUDE "PE/logging.include.ab3"
0000ADF6 <file.include.ab3@582> XINCLUDE "PE/logging.include.ab3"
0000AE1A <file.include.ab3@584> XINCLUDE "PE/logging.include.ab3"
0000AE52 <file.include.ab3@586> XINCLUDE "PE/logging.include.ab3"
0000AEDC <file.include.ab3@587> XINCLUDE "PE/logging.include.ab3"
0000AF04 <file.include.ab3@588> XINCLUDE "PE/logging.include.ab3"
0000AF34 <file.include.ab3@589> XINCLUDE "PE/logging.include.ab3"
0000AF6C <file.include.ab3@593> XINCLUDE "PE/logging.include.ab3"
0000AFC4 <file.include.ab3@594> XINCLUDE "PE/logging.include.ab3"
0000B01C <file.include.ab3@595> XINCLUDE "PE/logging.include.ab3"
0000B09C <file.include.ab3@597> XINCLUDE "PE/logging.include.ab3"
0000B0D0 <file.include.ab3@598> XINCLUDE "PE/logging.include.ab3"
0000B104 <file.include.ab3@599> XINCLUDE "PE/logging.include.ab3"
0000B10A <file.include.ab3@600> XINCLUDE "PE/logging.include.ab3"
0000B118 <file.include.ab3@601> XINCLUDE "PE/logging.include.ab3"
0000B14C <file.include.ab3@602> XINCLUDE "PE/logging.include.ab3"
0000B174 <file.include.ab3@603> XINCLUDE "PE/logging.include.ab3"
0000B22C <file.include.ab3@604> XINCLUDE "PE/logging.include.ab3"
0000B2AC <file.include.ab3@605> XINCLUDE "PE/logging.include.ab3"
0000B2E0 <file.include.ab3@606> XINCLUDE "PE/logging.include.ab3"
0000B300 <file.include.ab3@608> XINCLUDE "PE/logging.include.ab3"
0000B306 <file.include.ab3@609> XINCLUDE "PE/logging.include.ab3"
0000B30C <file.include.ab3@610> XINCLUDE "PE/logging.include.ab3"
0000B3DC <file.include.ab3@611> XINCLUDE "PE/logging.include.ab3"
0000B3F0 <file.include.ab3@614> XINCLUDE "PE/logging.include.ab3"
0000B4A8 <file.include.ab3@615> XINCLUDE "PE/logging.include.ab3"
0000B528 <file.include.ab3@616> XINCLUDE "PE/logging.include.ab3"
0000B618 <file.include.ab3@617> XINCLUDE "PE/logging.include.ab3"
0000B622 <file.include.ab3@618> XINCLUDE "PE/logging.include.ab3"
0000B656 <file.include.ab3@619> XINCLUDE "PE/logging.include.ab3"
0000B676 <file.include.ab3@620> XINCLUDE "PE/logging.include.ab3"
0000B67C <file.include.ab3@621> XINCLUDE "PE/logging.include.ab3"
0000B682 <file.include.ab3@622> XINCLUDE "PE/logging.include.ab3"
0000B752 <file.include.ab3@623> XINCLUDE "PE/logging.include.ab3"
0000B766 <file.include.ab3@627> XINCLUDE "PE/logging.include.ab3"
0000B79A <file.include.ab3@628> XINCLUDE "PE/logging.include.ab3"
0000B7C2 <file.include.ab3@629> XINCLUDE "PE/logging.include.ab3"
0000B87A <file.include.ab3@630> XINCLUDE "PE/logging.include.ab3"
0000B8FA <file.include.ab3@631> XINCLUDE "PE/logging.include.ab3"
0000B92E <file.include.ab3@632> XINCLUDE "PE/logging.include.ab3"
0000B94E <file.include.ab3@635> XINCLUDE "PE/logging.include.ab3"
0000B954 <file.include.ab3@636> XINCLUDE "PE/logging.include.ab3"
0000B95A <file.include.ab3@637> XINCLUDE "PE/logging.include.ab3"
0000BA2A <file.include.ab3@638> XINCLUDE "PE/logging.include.ab3"
0000BA3E <file.include.ab3@641> XINCLUDE "PE/logging.include.ab3"
0000BAF6 <file.include.ab3@642> XINCLUDE "PE/logging.include.ab3"
0000BB76 <file.include.ab3@643> XINCLUDE "PE/logging.include.ab3"
0000BBAA <file.include.ab3@644> XINCLUDE "PE/logging.include.ab3"
0000BBCA <file.include.ab3@645> XINCLUDE "PE/logging.include.ab3"
0000BBD0 <file.include.ab3@646> XINCLUDE "PE/logging.include.ab3"
0000BBD6 <file.include.ab3@647> XINCLUDE "PE/logging.include.ab3"
0000BCA6 <file.include.ab3@648> XINCLUDE "PE/logging.include.ab3"
0000BCAC <file.include.ab3@651> XINCLUDE "PE/logging.include.ab3"
0000BCE6 <file.include.ab3@652> XINCLUDE "PE/logging.include.ab3"
0000BCE8 <file.include.ab3@653> XINCLUDE "PE/logging.include.ab3"
0000BCEE <file.include.ab3@655> XINCLUDE "PE/logging.include.ab3"
0000BD86 <file.include.ab3@656> XINCLUDE "PE/logging.include.ab3"
0000BD98 <file.include.ab3@659> XINCLUDE "PE/logging.include.ab3"
0000BDAE <file.include.ab3@660> XINCLUDE "PE/logging.include.ab3"
0000BE18 <file.include.ab3@661> XINCLUDE "PE/logging.include.ab3"
0000BE82 <file.include.ab3@662> XINCLUDE "PE/logging.include.ab3"
0000BE9C <file.include.ab3@663> XINCLUDE "PE/logging.include.ab3"
0000BEB8 <file.include.ab3@664> XINCLUDE "PE/logging.include.ab3"
0000BED6 <file.include.ab3@665> XINCLUDE "PE/logging.include.ab3"
0000BEF0 <file.include.ab3@666> XINCLUDE "PE/logging.include.ab3"
0000BEFA <file.include.ab3@668> XINCLUDE "PE/logging.include.ab3"
0000BF16 <file.include.ab3@669> XINCLUDE "PE/logging.include.ab3"
0000BF38 <file.include.ab3@805> XINCLUDE "PE/logging.include.ab3"
0000BF3E <file.include.ab3@807> XINCLUDE "PE/logging.include.ab3"
0000BF64 <file.include.ab3@808> XINCLUDE "PE/logging.include.ab3"
0000BF80 <file.include.ab3@809> XINCLUDE "PE/logging.include.ab3"
0000BF92 <file.include.ab3@810> XINCLUDE "PE/logging.include.ab3"
0000BFF0 <file.include.ab3@811> XINCLUDE "PE/logging.include.ab3"
0000C028 <file.include.ab3@812> XINCLUDE "PE/logging.include.ab3"
0000C02E <file.include.ab3@813> XINCLUDE "PE/logging.include.ab3"
0000C076 <file.include.ab3@814> XINCLUDE "PE/logging.include.ab3"
0000C090 <file.include.ab3@815> XINCLUDE "PE/logging.include.ab3"
0000C09E <file.include.ab3@818> XINCLUDE "PE/logging.include.ab3"
0000C0A4 <file.include.ab3@819> XINCLUDE "PE/logging.include.ab3"
0000C0AA <file.include.ab3@820> XINCLUDE "PE/logging.include.ab3"
0000C0BC <file.include.ab3@821> XINCLUDE "PE/logging.include.ab3"
0000C1A8 <file.include.ab3@822> XINCLUDE "PE/logging.include.ab3"
0000C1AE <file.include.ab3@823> XINCLUDE "PE/logging.include.ab3"
0000C1F4 <file.include.ab3@824> XINCLUDE "PE/logging.include.ab3"
0000C200 <file.include.ab3@825> XINCLUDE "PE/logging.include.ab3"
0000C266 <file.include.ab3@826> XINCLUDE "PE/logging.include.ab3"
0000C2AC <file.include.ab3@827> XINCLUDE "PE/logging.include.ab3"
0000C2F4 <file.include.ab3@830> XINCLUDE "PE/logging.include.ab3"
0000C35C <file.include.ab3@831> XINCLUDE "PE/logging.include.ab3"
0000C362 <file.include.ab3@832> XINCLUDE "PE/logging.include.ab3"
0000C39C <file.include.ab3@833> XINCLUDE "PE/logging.include.ab3"
0000C3A2 <file.include.ab3@835> XINCLUDE "PE/logging.include.ab3"
0000C404 <file.include.ab3@836> XINCLUDE "PE/logging.include.ab3"
0000C40E <file.include.ab3@838> XINCLUDE "PE/logging.include.ab3"
0000C422 <file.include.ab3@839> XINCLUDE "PE/logging.include.ab3"
0000C43C <file.include.ab3@841> XINCLUDE "PE/logging.include.ab3"
0000C442 <file.include.ab3@843> XINCLUDE "PE/logging.include.ab3"
0000C468 <file.include.ab3@844> XINCLUDE "PE/logging.include.ab3"
0000C484 <file.include.ab3@845> XINCLUDE "PE/logging.include.ab3"
0000C4E2 <file.include.ab3@846> XINCLUDE "PE/logging.include.ab3"
0000C4E6 <file.include.ab3@849> XINCLUDE "PE/logging.include.ab3"
0000C508 <file.include.ab3@867> XINCLUDE "PE/logging.include.ab3"
0000C50E <file.include.ab3@869> XINCLUDE "PE/logging.include.ab3"
0000C52A <file.include.ab3@870> XINCLUDE "PE/logging.include.ab3"
0000C54A <file.include.ab3@871> XINCLUDE "PE/logging.include.ab3"
0000C588 <file.include.ab3@872> XINCLUDE "PE/logging.include.ab3"
0000C5D6 <file.include.ab3@873> XINCLUDE "PE/logging.include.ab3"
0000C60C <file.include.ab3@874> XINCLUDE "PE/logging.include.ab3"
0000C612 <file.include.ab3@875> XINCLUDE "PE/logging.include.ab3"
0000C618 <file.include.ab3@876> XINCLUDE "PE/logging.include.ab3"
0000C648 <file.include.ab3@877> XINCLUDE "PE/logging.include.ab3"
0000C64E <file.include.ab3@878> XINCLUDE "PE/logging.include.ab3"
0000C654 <file.include.ab3@880> XINCLUDE "PE/logging.include.ab3"
0000C666 <file.include.ab3@881> XINCLUDE "PE/logging.include.ab3"
0000C6C4 <file.include.ab3@882> XINCLUDE "PE/logging.include.ab3"
0000C6FC <file.include.ab3@883> XINCLUDE "PE/logging.include.ab3"
0000C702 <file.include.ab3@884> XINCLUDE "PE/logging.include.ab3"
0000C74A <file.include.ab3@885> XINCLUDE "PE/logging.include.ab3"
0000C764 <file.include.ab3@886> XINCLUDE "PE/logging.include.ab3"
0000C772 <file.include.ab3@888> XINCLUDE "PE/logging.include.ab3"
0000C778 <file.include.ab3@889> XINCLUDE "PE/logging.include.ab3"
0000C77E <file.include.ab3@890> XINCLUDE "PE/logging.include.ab3"
0000C790 <file.include.ab3@891> XINCLUDE "PE/logging.include.ab3"
0000C796 <file.include.ab3@892> XINCLUDE "PE/logging.include.ab3"
0000C79C <file.include.ab3@893> XINCLUDE "PE/logging.include.ab3"
0000C7FA <file.include.ab3@894> XINCLUDE "PE/logging.include.ab3"
0000C842 <file.include.ab3@897> XINCLUDE "PE/logging.include.ab3"
0000C84C <file.include.ab3@900> XINCLUDE "PE/logging.include.ab3"
0000C852 <file.include.ab3@901> XINCLUDE "PE/logging.include.ab3"
0000C86C <file.include.ab3@955> XINCLUDE "PE/logging.include.ab3"
0000C872 <file.include.ab3@957> XINCLUDE "PE/logging.include.ab3"
0000C8BA <file.include.ab3@958> XINCLUDE "PE/logging.include.ab3"
0000C8F8 <file.include.ab3@959> XINCLUDE "PE/logging.include.ab3"
0000C902 <file.include.ab3@960> XINCLUDE "PE/logging.include.ab3"
0000C908 <file.include.ab3@961> XINCLUDE "PE/logging.include.ab3"
0000C92E <file.include.ab3@1108> XINCLUDE "PE/logging.include.ab3"
0000C934 <file.include.ab3@1110> XINCLUDE "PE/logging.include.ab3"
0000C95A <file.include.ab3@1111> XINCLUDE "PE/logging.include.ab3"
0000C9BA <file.include.ab3@1112> XINCLUDE "PE/logging.include.ab3"
0000C9D4 <file.include.ab3@1113> XINCLUDE "PE/logging.include.ab3"
0000C9DE <file.include.ab3@1114> XINCLUDE "PE/logging.include.ab3"
0000C9F8 <file.include.ab3@1115> XINCLUDE "PE/logging.include.ab3"
0000CA02 <file.include.ab3@1116> XINCLUDE "PE/logging.include.ab3"
0000CA1A <file.include.ab3@1117> XINCLUDE "PE/logging.include.ab3"
0000CA4A <file.include.ab3@1118> XINCLUDE "PE/logging.include.ab3"
0000CA66 <file.include.ab3@1119> XINCLUDE "PE/logging.include.ab3"
0000CA74 <file.include.ab3@1120> XINCLUDE "PE/logging.include.ab3"
0000CA7A <file.include.ab3@1123> XINCLUDE "PE/logging.include.ab3"
0000CAB4 <file.include.ab3@1124> XINCLUDE "PE/logging.include.ab3"
0000CABE <file.include.ab3@1126> XINCLUDE "PE/logging.include.ab3"
0000CAC4 <file.include.ab3@1127> XINCLUDE "PE/logging.include.ab3"
0000CAE2 <file.include.ab3@1148> XINCLUDE "PE/logging.include.ab3"
0000CAE8 <file.include.ab3@1150> XINCLUDE "PE/logging.include.ab3"
0000CAFA <file.include.ab3@1151> XINCLUDE "PE/logging.include.ab3"
0000CB08 <file.include.ab3@1152> XINCLUDE "PE/logging.include.ab3"
0000CB26 <file.include.ab3@1153> XINCLUDE "PE/logging.include.ab3"
0000CB5C <file.include.ab3@1154> XINCLUDE "PE/logging.include.ab3"
0000CB6E <file.include.ab3@1155> XINCLUDE "PE/logging.include.ab3"
0000CBB8 <file.include.ab3@1156> XINCLUDE "PE/logging.include.ab3"
0000CCA2 <file.include.ab3@1157> XINCLUDE "PE/logging.include.ab3"
0000CCC0 <file.include.ab3@1158> XINCLUDE "PE/logging.include.ab3"
0000CCE6 <file.include.ab3@1160> XINCLUDE "PE/logging.include.ab3"
0000CD02 <file.include.ab3@1161> XINCLUDE "PE/logging.include.ab3"
0000CD2E <file.include.ab3@1162> XINCLUDE "PE/logging.include.ab3"
0000CD38 <file.include.ab3@1163> XINCLUDE "PE/logging.include.ab3"
0000CD66 <file.include.ab3@1164> XINCLUDE "PE/logging.include.ab3"
0000CD80 <file.include.ab3@1165> XINCLUDE "PE/logging.include.ab3"
0000CD9C <file.include.ab3@1166> XINCLUDE "PE/logging.include.ab3"
0000CDA2 <file.include.ab3@1167> XINCLUDE "PE/logging.include.ab3"
0000CDDC <file.include.ab3@1168> XINCLUDE "PE/logging.include.ab3"
0000CDE2 <file.include.ab3@1170> XINCLUDE "PE/logging.include.ab3"
0000CDE8 <file.include.ab3@1171> XINCLUDE "PE/logging.include.ab3"
0000CDEE <file.include.ab3@1173> XINCLUDE "PE/logging.include.ab3"
0000CE8E <file.include.ab3@1174> XINCLUDE "PE/logging.include.ab3"
0000CE94 <file.include.ab3@1176> XINCLUDE "PE/logging.include.ab3"
0000CF36 <file.include.ab3@1177> XINCLUDE "PE/logging.include.ab3"
0000CF3C <file.include.ab3@1179> XINCLUDE "PE/logging.include.ab3"
0000CF76 <file.include.ab3@1180> XINCLUDE "PE/logging.include.ab3"
0000CF80 <file.include.ab3@1182> XINCLUDE "PE/logging.include.ab3"
0000CF86 <file.include.ab3@1183> XINCLUDE "PE/logging.include.ab3"
0000CFA0 <file.include.ab3@1245> XINCLUDE "PE/logging.include.ab3"
0000CFBE <file.include.ab3@1247> XINCLUDE "PE/logging.include.ab3"
0000CFC4 <file.include.ab3@1248> XINCLUDE "PE/logging.include.ab3"
0000CFDE <file.include.ab3@1398> XINCLUDE "PE/logging.include.ab3"
0000CFFE <file.include.ab3@1400> XINCLUDE "PE/logging.include.ab3"
0000D0B2 <file.include.ab3@1401> XINCLUDE "PE/logging.include.ab3"
0000D0B8 <file.include.ab3@1402> XINCLUDE "PE/logging.include.ab3"
0000D0BE <file.include.ab3@1403> XINCLUDE "PE/logging.include.ab3"
0000D0E8 <file.include.ab3@1404> XINCLUDE "PE/logging.include.ab3"
0000D0F4 <file.include.ab3@1406> XINCLUDE "PE/logging.include.ab3"
0000D0FA <file.include.ab3@1407> XINCLUDE "PE/logging.include.ab3"
0000D114 <file.include.ab3@1593> XINCLUDE "PE/logging.include.ab3"
0000D11C <file.include.ab3@1594> XINCLUDE "PE/logging.include.ab3"
0000D124 <file.include.ab3@1595> XINCLUDE "PE/logging.include.ab3"
0000D13A <file.include.ab3@1596> XINCLUDE "PE/logging.include.ab3"
0000D152 <file.include.ab3@1597> XINCLUDE "PE/logging.include.ab3"
0000D164 <file.include.ab3@1598> XINCLUDE "PE/logging.include.ab3"
0000D170 <file.include.ab3@1599> XINCLUDE "PE/logging.include.ab3"
0000D176 <file.include.ab3@1600> XINCLUDE "PE/logging.include.ab3"
0000D17E <file.include.ab3@1601> XINCLUDE "PE/logging.include.ab3"
0000D1B6 <file.include.ab3@1602> XINCLUDE "PE/logging.include.ab3"
0000D1C8 <file.include.ab3@1603> XINCLUDE "PE/logging.include.ab3"
0000D1EC <file.include.ab3@1604> XINCLUDE "PE/logging.include.ab3"
0000D1FE <file.include.ab3@1605> XINCLUDE "PE/logging.include.ab3"
0000D20A <file.include.ab3@1606> XINCLUDE "PE/logging.include.ab3"
0000D210 <file.include.ab3@1607> XINCLUDE "PE/logging.include.ab3"
0000D220 <file.include.ab3@1608> XINCLUDE "PE/logging.include.ab3"
0000D23E <file.include.ab3@1613> XINCLUDE "PE/logging.include.ab3"
0000D250 <file.include.ab3@1616> XINCLUDE "PE/logging.include.ab3"
0000D29C <file.include.ab3@1617> XINCLUDE "PE/logging.include.ab3"
0000D2A2 <file.include.ab3@1619> XINCLUDE "PE/logging.include.ab3"
0000D2CC <file.include.ab3@1621> XINCLUDE "PE/logging.include.ab3"
0000D2E4 <file.include.ab3@1622> XINCLUDE "PE/logging.include.ab3"
0000D312 <file.include.ab3@1706> XINCLUDE "PE/logging.include.ab3"
0000D326 <file.include.ab3@1707> XINCLUDE "PE/logging.include.ab3"
0000D33C <file.include.ab3@1708> XINCLUDE "PE/logging.include.ab3"
0000D35C <file.include.ab3@1709> XINCLUDE "PE/logging.include.ab3"
0000D372 <file.include.ab3@1710> XINCLUDE "PE/logging.include.ab3"
0000D37C <file.include.ab3@1711> XINCLUDE "PE/logging.include.ab3"
0000D396 <file.include.ab3@1712> XINCLUDE "PE/logging.include.ab3"
0000D3B8 <file.include.ab3@1787> XINCLUDE "PE/logging.include.ab3"
0000D3D0 <file.include.ab3@1789> XINCLUDE "PE/logging.include.ab3"
0000D3F2 <file.include.ab3@1790> XINCLUDE "PE/logging.include.ab3"
0000D3F8 <file.include.ab3@1791> XINCLUDE "PE/logging.include.ab3"
0000D42A <file.include.ab3@1811> XINCLUDE "PE/logging.include.ab3"
0000D43E <file.include.ab3@1813> XINCLUDE "PE/logging.include.ab3"
0000D456 <file.include.ab3@1814> XINCLUDE "PE/logging.include.ab3"
0000D46E <file.include.ab3@1815> XINCLUDE "PE/logging.include.ab3"
0000D48E <file.include.ab3@1816> XINCLUDE "PE/logging.include.ab3"
0000D4BE <file.include.ab3@1817> XINCLUDE "PE/logging.include.ab3"
0000D4EE <file.include.ab3@1818> XINCLUDE "PE/logging.include.ab3"
0000D500 <file.include.ab3@1819> XINCLUDE "PE/logging.include.ab3"
0000D508 <file.include.ab3@1820> XINCLUDE "PE/logging.include.ab3"
0000D532 <file.include.ab3@1821> XINCLUDE "PE/logging.include.ab3"
0000D53C <file.include.ab3@1823> XINCLUDE "PE/logging.include.ab3"
0000D556 <file.include.ab3@1824> XINCLUDE "PE/logging.include.ab3"
0000D570 <file.include.ab3@1841> XINCLUDE "PE/logging.include.ab3"
0000D58E <file.include.ab3@1843> XINCLUDE "PE/logging.include.ab3"
0000D5AE <file.include.ab3@1844> XINCLUDE "PE/logging.include.ab3"
0000D5F8 <file.include.ab3@1845> XINCLUDE "PE/logging.include.ab3"
0000D612 <file.include.ab3@1846> XINCLUDE "PE/logging.include.ab3"
0000D624 <file.include.ab3@1847> XINCLUDE "PE/logging.include.ab3"
0000D65A <file.include.ab3@1848> XINCLUDE "PE/logging.include.ab3"
0000D66C <file.include.ab3@1849> XINCLUDE "PE/logging.include.ab3"
0000D674 <file.include.ab3@1850> XINCLUDE "PE/logging.include.ab3"
0000D69C <file.include.ab3@1851> XINCLUDE "PE/logging.include.ab3"
0000D6A2 <file.include.ab3@1853> XINCLUDE "PE/logging.include.ab3"
0000D6CA <file.include.ab3@1854> XINCLUDE "PE/logging.include.ab3"
0000D6DA <file.include.ab3@1856> XINCLUDE "PE/logging.include.ab3"
0000D6EE <file.include.ab3@1857> XINCLUDE "PE/logging.include.ab3"
0000D704 <file.include.ab3@1870> XINCLUDE "PE/logging.include.ab3"
0000D714 <file.include.ab3@1872> XINCLUDE "PE/logging.include.ab3"
0000D718 <file.include.ab3@1873> XINCLUDE "PE/logging.include.ab3"
0000D72E <file.include.ab3@1894> XINCLUDE "PE/logging.include.ab3"
0000D758 <file.include.ab3@1896> XINCLUDE "PE/logging.include.ab3"
0000D760 <file.include.ab3@1897> XINCLUDE "PE/logging.include.ab3"
0000D760 <logging.include.ab3@13> XINCLUDE "PE/logging.include.ab3"
0000D7FE <logging.include.ab3@35> XINCLUDE "PE/logging.include.ab3"
0000D804 <logging.include.ab3@36> XINCLUDE "PE/logging.include.ab3"
0000D80A <logging.include.ab3@37> XINCLUDE "PE/logging.include.ab3"
0000D810 <logging.include.ab3@38> XINCLUDE "PE/logging.include.ab3"
0000D84A <logging.include.ab3@129> XINCLUDE "PE/logging.include.ab3"
0000D87C <logging.include.ab3@131> XINCLUDE "PE/logging.include.ab3"
0000D88A <logging.include.ab3@132> XINCLUDE "PE/logging.include.ab3"
0000D8BA <logging.include.ab3@133> XINCLUDE "PE/logging.include.ab3"
0000DC2A <logging.include.ab3@134> XINCLUDE "PE/logging.include.ab3"
0000DC38 <logging.include.ab3@135> XINCLUDE "PE/logging.include.ab3"
0000DC3E <logging.include.ab3@136> XINCLUDE "PE/logging.include.ab3"
0000DED0 <logging.include.ab3@137> XINCLUDE "PE/logging.include.ab3"
0000DEEA <logging.include.ab3@139> XINCLUDE "PE/logging.include.ab3"
0000DF24 <logging.include.ab3@142> XINCLUDE "PE/logging.include.ab3"
0000DF76 <logging.include.ab3@143> XINCLUDE "PE/logging.include.ab3"
0000DF84 <logging.include.ab3@144> XINCLUDE "PE/logging.include.ab3"
0000DFDA <logging.include.ab3@145> XINCLUDE "PE/logging.include.ab3"
0000DFE0 <logging.include.ab3@146> XINCLUDE "PE/logging.include.ab3"
0000E05A <logging.include.ab3@147> XINCLUDE "PE/logging.include.ab3"
0000E0CE <logging.include.ab3@148> XINCLUDE "PE/logging.include.ab3"
0000E0E8 <logging.include.ab3@150> XINCLUDE "PE/logging.include.ab3"
0000E0E8 <AmiBlitz3.ab3@89> XINCLUDE "PE/logging.include.ab3"
0000E0E8 <translation.include.ab3@1> XINCLUDE "translation.include.ab3"
0000E0E8 <phrasebook.include.ab3@1> XINCLUDE "translation.include.ab3"
0000E0E8 <prefixtree.include.ab3@1> XINCLUDE "translation.include.ab3"
0000E0E8 <dynamicarray.include.ab3@1> XINCLUDE "translation.include.ab3"
0000E110 <dynamicarray.include.ab3@42> XINCLUDE "translation.include.ab3"
0000E12A <dynamicarray.include.ab3@55> XINCLUDE "translation.include.ab3"
0000E134 <dynamicarray.include.ab3@56> XINCLUDE "translation.include.ab3"
0000E146 <dynamicarray.include.ab3@57> XINCLUDE "translation.include.ab3"
0000E16A <dynamicarray.include.ab3@58> XINCLUDE "translation.include.ab3"
0000E178 <dynamicarray.include.ab3@60> XINCLUDE "translation.include.ab3"
0000E184 <dynamicarray.include.ab3@61> XINCLUDE "translation.include.ab3"
0000E188 <dynamicarray.include.ab3@63> XINCLUDE "translation.include.ab3"
0000E1A6 <dynamicarray.include.ab3@99> XINCLUDE "translation.include.ab3"
0000E1C0 <dynamicarray.include.ab3@101> XINCLUDE "translation.include.ab3"
0000E1E0 <dynamicarray.include.ab3@102> XINCLUDE "translation.include.ab3"
0000E1EA <dynamicarray.include.ab3@103> XINCLUDE "translation.include.ab3"
0000E1F8 <dynamicarray.include.ab3@104> XINCLUDE "translation.include.ab3"
0000E204 <dynamicarray.include.ab3@105> XINCLUDE "translation.include.ab3"
0000E212 <dynamicarray.include.ab3@106> XINCLUDE "translation.include.ab3"
0000E21E <dynamicarray.include.ab3@107> XINCLUDE "translation.include.ab3"
0000E22A <dynamicarray.include.ab3@108> XINCLUDE "translation.include.ab3"
0000E23C <dynamicarray.include.ab3@109> XINCLUDE "translation.include.ab3"
0000E24C <dynamicarray.include.ab3@110> XINCLUDE "translation.include.ab3"
0000E256 <dynamicarray.include.ab3@113> XINCLUDE "translation.include.ab3"
0000E25C <dynamicarray.include.ab3@114> XINCLUDE "translation.include.ab3"
0000E276 <dynamicarray.include.ab3@425> XINCLUDE "translation.include.ab3"
0000E280 <dynamicarray.include.ab3@427> XINCLUDE "translation.include.ab3"
0000E28A <dynamicarray.include.ab3@428> XINCLUDE "translation.include.ab3"
0000E29A <dynamicarray.include.ab3@429> XINCLUDE "translation.include.ab3"
0000E2A4 <dynamicarray.include.ab3@430> XINCLUDE "translation.include.ab3"
0000E2B6 <dynamicarray.include.ab3@431> XINCLUDE "translation.include.ab3"
0000E2CC <dynamicarray.include.ab3@432> XINCLUDE "translation.include.ab3"
0000E2D6 <dynamicarray.include.ab3@433> XINCLUDE "translation.include.ab3"
0000E2DC <dynamicarray.include.ab3@435> XINCLUDE "translation.include.ab3"
0000E2E0 <dynamicarray.include.ab3@437> XINCLUDE "translation.include.ab3"
0000E2F6 <dynamicarray.include.ab3@531> XINCLUDE "translation.include.ab3"
0000E2FC <dynamicarray.include.ab3@533> XINCLUDE "translation.include.ab3"
0000E306 <dynamicarray.include.ab3@535> XINCLUDE "translation.include.ab3"
0000E33C <dynamicarray.include.ab3@536> XINCLUDE "translation.include.ab3"
0000E346 <dynamicarray.include.ab3@537> XINCLUDE "translation.include.ab3"
0000E34A <dynamicarray.include.ab3@538> XINCLUDE "translation.include.ab3"
0000E378 <dynamicarray.include.ab3@539> XINCLUDE "translation.include.ab3"
0000E378 <prefixtree.include.ab3@156> XINCLUDE "translation.include.ab3"
0000E392 <prefixtree.include.ab3@221> XINCLUDE "translation.include.ab3"
0000E39C <prefixtree.include.ab3@223> XINCLUDE "translation.include.ab3"
0000E3C4 <prefixtree.include.ab3@224> XINCLUDE "translation.include.ab3"
0000E3E6 <prefixtree.include.ab3@225> XINCLUDE "translation.include.ab3"
0000E3FE <prefixtree.include.ab3@226> XINCLUDE "translation.include.ab3"
0000E414 <prefixtree.include.ab3@227> XINCLUDE "translation.include.ab3"
0000E418 <prefixtree.include.ab3@230> XINCLUDE "translation.include.ab3"
0000E432 <prefixtree.include.ab3@283> XINCLUDE "translation.include.ab3"
0000E452 <prefixtree.include.ab3@284> XINCLUDE "translation.include.ab3"
0000E45C <prefixtree.include.ab3@285> XINCLUDE "translation.include.ab3"
0000E476 <prefixtree.include.ab3@286> XINCLUDE "translation.include.ab3"
0000E484 <prefixtree.include.ab3@287> XINCLUDE "translation.include.ab3"
0000E492 <prefixtree.include.ab3@288> XINCLUDE "translation.include.ab3"
0000E4A0 <prefixtree.include.ab3@289> XINCLUDE "translation.include.ab3"
0000E4AE <prefixtree.include.ab3@290> XINCLUDE "translation.include.ab3"
0000E4BA <prefixtree.include.ab3@291> XINCLUDE "translation.include.ab3"
0000E4C4 <prefixtree.include.ab3@292> XINCLUDE "translation.include.ab3"
0000E4D2 <prefixtree.include.ab3@293> XINCLUDE "translation.include.ab3"
0000E4E0 <prefixtree.include.ab3@294> XINCLUDE "translation.include.ab3"
0000E4EE <prefixtree.include.ab3@295> XINCLUDE "translation.include.ab3"
0000E508 <prefixtree.include.ab3@296> XINCLUDE "translation.include.ab3"
0000E516 <prefixtree.include.ab3@297> XINCLUDE "translation.include.ab3"
0000E526 <prefixtree.include.ab3@298> XINCLUDE "translation.include.ab3"
0000E536 <prefixtree.include.ab3@299> XINCLUDE "translation.include.ab3"
0000E546 <prefixtree.include.ab3@300> XINCLUDE "translation.include.ab3"
0000E554 <prefixtree.include.ab3@301> XINCLUDE "translation.include.ab3"
0000E55E <prefixtree.include.ab3@303> XINCLUDE "translation.include.ab3"
0000E564 <prefixtree.include.ab3@304> XINCLUDE "translation.include.ab3"
0000E582 <prefixtree.include.ab3@322> XINCLUDE "translation.include.ab3"
0000E588 <prefixtree.include.ab3@323> XINCLUDE "translation.include.ab3"
0000E592 <prefixtree.include.ab3@324> XINCLUDE "translation.include.ab3"
0000E5B2 <prefixtree.include.ab3@325> XINCLUDE "translation.include.ab3"
0000E5E0 <prefixtree.include.ab3@326> XINCLUDE "translation.include.ab3"
0000E5FE <prefixtree.include.ab3@327> XINCLUDE "translation.include.ab3"
0000E608 <prefixtree.include.ab3@328> XINCLUDE "translation.include.ab3"
0000E61A <prefixtree.include.ab3@329> XINCLUDE "translation.include.ab3"
0000E646 <prefixtree.include.ab3@330> XINCLUDE "translation.include.ab3"
0000E65C <prefixtree.include.ab3@331> XINCLUDE "translation.include.ab3"
0000E668 <prefixtree.include.ab3@333> XINCLUDE "translation.include.ab3"
0000E674 <prefixtree.include.ab3@334> XINCLUDE "translation.include.ab3"
0000E67A <prefixtree.include.ab3@335> XINCLUDE "translation.include.ab3"
0000E680 <prefixtree.include.ab3@336> XINCLUDE "translation.include.ab3"
0000E686 <prefixtree.include.ab3@337> XINCLUDE "translation.include.ab3"
0000E6BE <prefixtree.include.ab3@338> XINCLUDE "translation.include.ab3"
0000E6C4 <prefixtree.include.ab3@340> XINCLUDE "translation.include.ab3"
0000E6CA <prefixtree.include.ab3@341> XINCLUDE "translation.include.ab3"
0000E6D4 <prefixtree.include.ab3@344> XINCLUDE "translation.include.ab3"
0000E6DA <prefixtree.include.ab3@345> XINCLUDE "translation.include.ab3"
0000E70C <prefixtree.include.ab3@365> XINCLUDE "translation.include.ab3"
0000E728 <prefixtree.include.ab3@366> XINCLUDE "translation.include.ab3"
0000E742 <prefixtree.include.ab3@367> XINCLUDE "translation.include.ab3"
0000E756 <prefixtree.include.ab3@368> XINCLUDE "translation.include.ab3"
0000E7A6 <prefixtree.include.ab3@369> XINCLUDE "translation.include.ab3"
0000E7C8 <prefixtree.include.ab3@371> XINCLUDE "translation.include.ab3"
0000E7DC <prefixtree.include.ab3@372> XINCLUDE "translation.include.ab3"
0000E7EA <prefixtree.include.ab3@373> XINCLUDE "translation.include.ab3"
0000E7F6 <prefixtree.include.ab3@374> XINCLUDE "translation.include.ab3"
0000E7FE <prefixtree.include.ab3@375> XINCLUDE "translation.include.ab3"
0000E806 <prefixtree.include.ab3@376> XINCLUDE "translation.include.ab3"
0000E80E <prefixtree.include.ab3@377> XINCLUDE "translation.include.ab3"
0000E816 <prefixtree.include.ab3@378> XINCLUDE "translation.include.ab3"
0000E81C <prefixtree.include.ab3@379> XINCLUDE "translation.include.ab3"
0000E82A <prefixtree.include.ab3@380> XINCLUDE "translation.include.ab3"
0000E84C <prefixtree.include.ab3@382> XINCLUDE "translation.include.ab3"
0000E878 <prefixtree.include.ab3@383> XINCLUDE "translation.include.ab3"
0000E88A <prefixtree.include.ab3@385> XINCLUDE "translation.include.ab3"
0000E890 <prefixtree.include.ab3@386> XINCLUDE "translation.include.ab3"
0000E8B8 <prefixtree.include.ab3@388> XINCLUDE "translation.include.ab3"
0000E8DC <prefixtree.include.ab3@389> XINCLUDE "translation.include.ab3"
0000E904 <prefixtree.include.ab3@390> XINCLUDE "translation.include.ab3"
0000E938 <prefixtree.include.ab3@391> XINCLUDE "translation.include.ab3"
0000E948 <prefixtree.include.ab3@392> XINCLUDE "translation.include.ab3"
0000E952 <prefixtree.include.ab3@393> XINCLUDE "translation.include.ab3"
0000E960 <prefixtree.include.ab3@394> XINCLUDE "translation.include.ab3"
0000E974 <prefixtree.include.ab3@395> XINCLUDE "translation.include.ab3"
0000E97A <prefixtree.include.ab3@396> XINCLUDE "translation.include.ab3"
0000E99A <prefixtree.include.ab3@397> XINCLUDE "translation.include.ab3"
0000E9A0 <prefixtree.include.ab3@398> XINCLUDE "translation.include.ab3"
0000E9A8 <prefixtree.include.ab3@400> XINCLUDE "translation.include.ab3"
0000E9E2 <prefixtree.include.ab3@402> XINCLUDE "translation.include.ab3"
0000EA08 <prefixtree.include.ab3@403> XINCLUDE "translation.include.ab3"
0000EA20 <prefixtree.include.ab3@404> XINCLUDE "translation.include.ab3"
0000EA54 <prefixtree.include.ab3@405> XINCLUDE "translation.include.ab3"
0000EA5C <prefixtree.include.ab3@406> XINCLUDE "translation.include.ab3"
0000EA6A <prefixtree.include.ab3@408> XINCLUDE "translation.include.ab3"
0000EA70 <prefixtree.include.ab3@410> XINCLUDE "translation.include.ab3"
0000EA88 <prefixtree.include.ab3@411> XINCLUDE "translation.include.ab3"
0000EA8E <prefixtree.include.ab3@412> XINCLUDE "translation.include.ab3"
0000EA94 <prefixtree.include.ab3@413> XINCLUDE "translation.include.ab3"
0000EAAE <prefixtree.include.ab3@414> XINCLUDE "translation.include.ab3"
0000EAB4 <prefixtree.include.ab3@417> XINCLUDE "translation.include.ab3"
0000EABA <prefixtree.include.ab3@419> XINCLUDE "translation.include.ab3"
0000EAC0 <prefixtree.include.ab3@421> XINCLUDE "translation.include.ab3"
0000EACE <prefixtree.include.ab3@422> XINCLUDE "translation.include.ab3"
0000EADC <prefixtree.include.ab3@423> XINCLUDE "translation.include.ab3"
0000EB16 <prefixtree.include.ab3@425> XINCLUDE "translation.include.ab3"
0000EB3C <prefixtree.include.ab3@426> XINCLUDE "translation.include.ab3"
0000EB54 <prefixtree.include.ab3@427> XINCLUDE "translation.include.ab3"
0000EB60 <prefixtree.include.ab3@430> XINCLUDE "translation.include.ab3"
0000EB6C <prefixtree.include.ab3@431> XINCLUDE "translation.include.ab3"
0000EB78 <prefixtree.include.ab3@432> XINCLUDE "translation.include.ab3"
0000EB84 <prefixtree.include.ab3@433> XINCLUDE "translation.include.ab3"
0000EB90 <prefixtree.include.ab3@434> XINCLUDE "translation.include.ab3"
0000EB9A <prefixtree.include.ab3@435> XINCLUDE "translation.include.ab3"
0000EBA2 <prefixtree.include.ab3@437> XINCLUDE "translation.include.ab3"
0000EBBC <prefixtree.include.ab3@438> XINCLUDE "translation.include.ab3"
0000EBFA <prefixtree.include.ab3@485> XINCLUDE "translation.include.ab3"
0000EC00 <prefixtree.include.ab3@486> XINCLUDE "translation.include.ab3"
0000EC66 <prefixtree.include.ab3@487> XINCLUDE "translation.include.ab3"
0000ECA6 <prefixtree.include.ab3@489> XINCLUDE "translation.include.ab3"
0000ECFC <prefixtree.include.ab3@490> XINCLUDE "translation.include.ab3"
0000ED6E <prefixtree.include.ab3@491> XINCLUDE "translation.include.ab3"
0000ED7A <prefixtree.include.ab3@493> XINCLUDE "translation.include.ab3"
0000ED88 <prefixtree.include.ab3@494> XINCLUDE "translation.include.ab3"
0000EDCE <prefixtree.include.ab3@495> XINCLUDE "translation.include.ab3"
0000EE18 <prefixtree.include.ab3@496> XINCLUDE "translation.include.ab3"
0000EE50 <prefixtree.include.ab3@497> XINCLUDE "translation.include.ab3"
0000EEA4 <prefixtree.include.ab3@498> XINCLUDE "translation.include.ab3"
0000EEAA <prefixtree.include.ab3@499> XINCLUDE "translation.include.ab3"
0000EEB0 <prefixtree.include.ab3@500> XINCLUDE "translation.include.ab3"
0000EEBE <prefixtree.include.ab3@502> XINCLUDE "translation.include.ab3"
0000EEC6 <prefixtree.include.ab3@503> XINCLUDE "translation.include.ab3"
0000EF00 <prefixtree.include.ab3@505> XINCLUDE "translation.include.ab3"
0000EF26 <prefixtree.include.ab3@506> XINCLUDE "translation.include.ab3"
0000EF3E <prefixtree.include.ab3@507> XINCLUDE "translation.include.ab3"
0000EF74 <prefixtree.include.ab3@508> XINCLUDE "translation.include.ab3"
0000EF8A <prefixtree.include.ab3@509> XINCLUDE "translation.include.ab3"
0000EF98 <prefixtree.include.ab3@511> XINCLUDE "translation.include.ab3"
0000EFB0 <prefixtree.include.ab3@512> XINCLUDE "translation.include.ab3"
0000EFE8 <prefixtree.include.ab3@513> XINCLUDE "translation.include.ab3"
0000F00E <prefixtree.include.ab3@514> XINCLUDE "translation.include.ab3"
0000F056 <prefixtree.include.ab3@515> XINCLUDE "translation.include.ab3"
0000F05C <prefixtree.include.ab3@516> XINCLUDE "translation.include.ab3"
0000F076 <prefixtree.include.ab3@518> XINCLUDE "translation.include.ab3"
0000F082 <prefixtree.include.ab3@519> XINCLUDE "translation.include.ab3"
0000F088 <prefixtree.include.ab3@520> XINCLUDE "translation.include.ab3"
0000F0B4 <prefixtree.include.ab3@521> XINCLUDE "translation.include.ab3"
0000F0C8 <prefixtree.include.ab3@526> XINCLUDE "translation.include.ab3"
0000F0D6 <prefixtree.include.ab3@528> XINCLUDE "translation.include.ab3"
0000F0DE <prefixtree.include.ab3@529> XINCLUDE "translation.include.ab3"
0000F118 <prefixtree.include.ab3@531> XINCLUDE "translation.include.ab3"
0000F13E <prefixtree.include.ab3@532> XINCLUDE "translation.include.ab3"
0000F156 <prefixtree.include.ab3@533> XINCLUDE "translation.include.ab3"
0000F190 <prefixtree.include.ab3@534> XINCLUDE "translation.include.ab3"
0000F1BA <prefixtree.include.ab3@535> XINCLUDE "translation.include.ab3"
0000F1D2 <prefixtree.include.ab3@536> XINCLUDE "translation.include.ab3"
0000F202 <prefixtree.include.ab3@537> XINCLUDE "translation.include.ab3"
0000F22E <prefixtree.include.ab3@538> XINCLUDE "translation.include.ab3"
0000F24A <prefixtree.include.ab3@539> XINCLUDE "translation.include.ab3"
0000F258 <prefixtree.include.ab3@541> XINCLUDE "translation.include.ab3"
0000F266 <prefixtree.include.ab3@542> XINCLUDE "translation.include.ab3"
0000F2A4 <prefixtree.include.ab3@543> XINCLUDE "translation.include.ab3"
0000F2E0 <prefixtree.include.ab3@544> XINCLUDE "translation.include.ab3"
0000F34C <prefixtree.include.ab3@545> XINCLUDE "translation.include.ab3"
0000F37A <prefixtree.include.ab3@546> XINCLUDE "translation.include.ab3"
0000F3A8 <prefixtree.include.ab3@547> XINCLUDE "translation.include.ab3"
0000F3F0 <prefixtree.include.ab3@548> XINCLUDE "translation.include.ab3"
0000F40A <prefixtree.include.ab3@551> XINCLUDE "translation.include.ab3"
0000F452 <prefixtree.include.ab3@552> XINCLUDE "translation.include.ab3"
0000F470 <prefixtree.include.ab3@553> XINCLUDE "translation.include.ab3"
0000F48E <prefixtree.include.ab3@554> XINCLUDE "translation.include.ab3"
0000F4A8 <prefixtree.include.ab3@557> XINCLUDE "translation.include.ab3"
0000F4B4 <prefixtree.include.ab3@558> XINCLUDE "translation.include.ab3"
0000F4BA <prefixtree.include.ab3@559> XINCLUDE "translation.include.ab3"
0000F4E6 <prefixtree.include.ab3@560> XINCLUDE "translation.include.ab3"
0000F4FE <prefixtree.include.ab3@562> XINCLUDE "translation.include.ab3"
0000F504 <prefixtree.include.ab3@563> XINCLUDE "translation.include.ab3"
0000F518 <prefixtree.include.ab3@566> XINCLUDE "translation.include.ab3"
0000F526 <prefixtree.include.ab3@568> XINCLUDE "translation.include.ab3"
0000F534 <prefixtree.include.ab3@569> XINCLUDE "translation.include.ab3"
0000F542 <prefixtree.include.ab3@570> XINCLUDE "translation.include.ab3"
0000F54A <prefixtree.include.ab3@571> XINCLUDE "translation.include.ab3"
0000F576 <prefixtree.include.ab3@572> XINCLUDE "translation.include.ab3"
0000F59E <prefixtree.include.ab3@573> XINCLUDE "translation.include.ab3"
0000F5C6 <prefixtree.include.ab3@574> XINCLUDE "translation.include.ab3"
0000F632 <prefixtree.include.ab3@575> XINCLUDE "translation.include.ab3"
0000F642 <prefixtree.include.ab3@576> XINCLUDE "translation.include.ab3"
0000F66E <prefixtree.include.ab3@577> XINCLUDE "translation.include.ab3"
0000F6C4 <prefixtree.include.ab3@579> XINCLUDE "translation.include.ab3"
0000F6D2 <prefixtree.include.ab3@580> XINCLUDE "translation.include.ab3"
0000F6E0 <prefixtree.include.ab3@581> XINCLUDE "translation.include.ab3"
0000F6E6 <prefixtree.include.ab3@582> XINCLUDE "translation.include.ab3"
0000F73A <prefixtree.include.ab3@584> XINCLUDE "translation.include.ab3"
0000F85A <prefixtree.include.ab3@585> XINCLUDE "translation.include.ab3"
0000F8AA <prefixtree.include.ab3@587> XINCLUDE "translation.include.ab3"
0000F900 <prefixtree.include.ab3@588> XINCLUDE "translation.include.ab3"
0000F96C <prefixtree.include.ab3@589> XINCLUDE "translation.include.ab3"
0000F974 <prefixtree.include.ab3@593> XINCLUDE "translation.include.ab3"
0000F9AE <prefixtree.include.ab3@595> XINCLUDE "translation.include.ab3"
0000F9D4 <prefixtree.include.ab3@596> XINCLUDE "translation.include.ab3"
0000F9EC <prefixtree.include.ab3@597> XINCLUDE "translation.include.ab3"
0000FA26 <prefixtree.include.ab3@598> XINCLUDE "translation.include.ab3"
0000FA50 <prefixtree.include.ab3@599> XINCLUDE "translation.include.ab3"
0000FA68 <prefixtree.include.ab3@600> XINCLUDE "translation.include.ab3"
0000FA8C <prefixtree.include.ab3@602> XINCLUDE "translation.include.ab3"
0000FAE0 <prefixtree.include.ab3@603> XINCLUDE "translation.include.ab3"
0000FAE8 <prefixtree.include.ab3@604> XINCLUDE "translation.include.ab3"
0000FAEE <prefixtree.include.ab3@605> XINCLUDE "translation.include.ab3"
0000FB50 <prefixtree.include.ab3@606> XINCLUDE "translation.include.ab3"
0000FB7C <prefixtree.include.ab3@607> XINCLUDE "translation.include.ab3"
0000FB98 <prefixtree.include.ab3@610> XINCLUDE "translation.include.ab3"
0000FBA6 <prefixtree.include.ab3@612> XINCLUDE "translation.include.ab3"
0000FBB4 <prefixtree.include.ab3@613> XINCLUDE "translation.include.ab3"
0000FBC2 <prefixtree.include.ab3@615> XINCLUDE "translation.include.ab3"
0000FBD0 <prefixtree.include.ab3@616> XINCLUDE "translation.include.ab3"
0000FC14 <prefixtree.include.ab3@617> XINCLUDE "translation.include.ab3"
0000FC80 <prefixtree.include.ab3@618> XINCLUDE "translation.include.ab3"
0000FCAE <prefixtree.include.ab3@619> XINCLUDE "translation.include.ab3"
0000FCC2 <prefixtree.include.ab3@620> XINCLUDE "translation.include.ab3"
0000FCF4 <prefixtree.include.ab3@621> XINCLUDE "translation.include.ab3"
0000FD3E <prefixtree.include.ab3@622> XINCLUDE "translation.include.ab3"
0000FD4E <prefixtree.include.ab3@623> XINCLUDE "translation.include.ab3"
0000FD82 <prefixtree.include.ab3@624> XINCLUDE "translation.include.ab3"
0000FDA4 <prefixtree.include.ab3@625> XINCLUDE "translation.include.ab3"
0000FDB4 <prefixtree.include.ab3@626> XINCLUDE "translation.include.ab3"
0000FDBC <prefixtree.include.ab3@629> XINCLUDE "translation.include.ab3"
0000FE00 <prefixtree.include.ab3@630> XINCLUDE "translation.include.ab3"
0000FE6C <prefixtree.include.ab3@631> XINCLUDE "translation.include.ab3"
0000FE9A <prefixtree.include.ab3@632> XINCLUDE "translation.include.ab3"
0000FEBE <prefixtree.include.ab3@634> XINCLUDE "translation.include.ab3"
0000FF02 <prefixtree.include.ab3@635> XINCLUDE "translation.include.ab3"
0000FF6E <prefixtree.include.ab3@636> XINCLUDE "translation.include.ab3"
0000FF9C <prefixtree.include.ab3@637> XINCLUDE "translation.include.ab3"
0000FFCA <prefixtree.include.ab3@638> XINCLUDE "translation.include.ab3"
0000FFD2 <prefixtree.include.ab3@639> XINCLUDE "translation.include.ab3"
00010000 <prefixtree.include.ab3@640> XINCLUDE "translation.include.ab3"
00010072 <prefixtree.include.ab3@641> XINCLUDE "translation.include.ab3"
00010078 <prefixtree.include.ab3@642> XINCLUDE "translation.include.ab3"
000100A6 <prefixtree.include.ab3@643> XINCLUDE "translation.include.ab3"
00010118 <prefixtree.include.ab3@644> XINCLUDE "translation.include.ab3"
00010136 <prefixtree.include.ab3@647> XINCLUDE "translation.include.ab3"
0001015A <prefixtree.include.ab3@648> XINCLUDE "translation.include.ab3"
00010172 <prefixtree.include.ab3@649> XINCLUDE "translation.include.ab3"
00010178 <prefixtree.include.ab3@650> XINCLUDE "translation.include.ab3"
0001017E <prefixtree.include.ab3@653> XINCLUDE "translation.include.ab3"
00010180 <prefixtree.include.ab3@655> XINCLUDE "translation.include.ab3"
0001018A <prefixtree.include.ab3@658> XINCLUDE "translation.include.ab3"
000101B6 <prefixtree.include.ab3@659> XINCLUDE "translation.include.ab3"
000101D8 <prefixtree.include.ab3@677> XINCLUDE "translation.include.ab3"
000101E0 <prefixtree.include.ab3@679> XINCLUDE "translation.include.ab3"
000101E6 <prefixtree.include.ab3@680> XINCLUDE "translation.include.ab3"
000101F4 <prefixtree.include.ab3@681> XINCLUDE "translation.include.ab3"
0001022E <prefixtree.include.ab3@683> XINCLUDE "translation.include.ab3"
00010254 <prefixtree.include.ab3@684> XINCLUDE "translation.include.ab3"
0001026C <prefixtree.include.ab3@685> XINCLUDE "translation.include.ab3"
000102A6 <prefixtree.include.ab3@686> XINCLUDE "translation.include.ab3"
000102D0 <prefixtree.include.ab3@687> XINCLUDE "translation.include.ab3"
000102E8 <prefixtree.include.ab3@689> XINCLUDE "translation.include.ab3"
00010300 <prefixtree.include.ab3@690> XINCLUDE "translation.include.ab3"
00010338 <prefixtree.include.ab3@691> XINCLUDE "translation.include.ab3"
00010340 <prefixtree.include.ab3@693> XINCLUDE "translation.include.ab3"
0001037A <prefixtree.include.ab3@695> XINCLUDE "translation.include.ab3"
0001038C <prefixtree.include.ab3@697> XINCLUDE "translation.include.ab3"
000103B2 <prefixtree.include.ab3@698> XINCLUDE "translation.include.ab3"
000103C8 <prefixtree.include.ab3@699> XINCLUDE "translation.include.ab3"
000103EE <prefixtree.include.ab3@700> XINCLUDE "translation.include.ab3"
00010402 <prefixtree.include.ab3@701> XINCLUDE "translation.include.ab3"
0001041A <prefixtree.include.ab3@703> XINCLUDE "translation.include.ab3"
0001042C <prefixtree.include.ab3@705> XINCLUDE "translation.include.ab3"
00010436 <prefixtree.include.ab3@707> XINCLUDE "translation.include.ab3"
0001044A <prefixtree.include.ab3@709> XINCLUDE "translation.include.ab3"
00010464 <prefixtree.include.ab3@726> XINCLUDE "translation.include.ab3"
00010480 <prefixtree.include.ab3@728> XINCLUDE "translation.include.ab3"
00010492 <prefixtree.include.ab3@729> XINCLUDE "translation.include.ab3"
000104AE <prefixtree.include.ab3@730> XINCLUDE "translation.include.ab3"
000104EA <prefixtree.include.ab3@731> XINCLUDE "translation.include.ab3"
00010506 <prefixtree.include.ab3@732> XINCLUDE "translation.include.ab3"
00010526 <prefixtree.include.ab3@733> XINCLUDE "translation.include.ab3"
00010530 <prefixtree.include.ab3@734> XINCLUDE "translation.include.ab3"
00010536 <prefixtree.include.ab3@735> XINCLUDE "translation.include.ab3"
00010540 <prefixtree.include.ab3@736> XINCLUDE "translation.include.ab3"
00010548 <prefixtree.include.ab3@738> XINCLUDE "translation.include.ab3"
0001054E <prefixtree.include.ab3@740> XINCLUDE "translation.include.ab3"
0001057C <prefixtree.include.ab3@759> XINCLUDE "translation.include.ab3"
000105A4 <prefixtree.include.ab3@760> XINCLUDE "translation.include.ab3"
000105E4 <prefixtree.include.ab3@761> XINCLUDE "translation.include.ab3"
000105FC <prefixtree.include.ab3@762> XINCLUDE "translation.include.ab3"
00010642 <prefixtree.include.ab3@763> XINCLUDE "translation.include.ab3"
0001066C <prefixtree.include.ab3@766> XINCLUDE "translation.include.ab3"
0001069A <prefixtree.include.ab3@767> XINCLUDE "translation.include.ab3"
000106B4 <prefixtree.include.ab3@966> XINCLUDE "translation.include.ab3"
000106BA <prefixtree.include.ab3@967> XINCLUDE "translation.include.ab3"
000106D2 <prefixtree.include.ab3@968> XINCLUDE "translation.include.ab3"
000106DC <prefixtree.include.ab3@969> XINCLUDE "translation.include.ab3"
000106EE <prefixtree.include.ab3@970> XINCLUDE "translation.include.ab3"
00010726 <prefixtree.include.ab3@971> XINCLUDE "translation.include.ab3"
00010734 <prefixtree.include.ab3@972> XINCLUDE "translation.include.ab3"
00010740 <prefixtree.include.ab3@973> XINCLUDE "translation.include.ab3"
0001075C <prefixtree.include.ab3@974> XINCLUDE "translation.include.ab3"
0001077E <prefixtree.include.ab3@975> XINCLUDE "translation.include.ab3"
000107A0 <prefixtree.include.ab3@976> XINCLUDE "translation.include.ab3"
000107C2 <prefixtree.include.ab3@977> XINCLUDE "translation.include.ab3"
000107E4 <prefixtree.include.ab3@978> XINCLUDE "translation.include.ab3"
00010800 <prefixtree.include.ab3@979> XINCLUDE "translation.include.ab3"
0001081E <prefixtree.include.ab3@980> XINCLUDE "translation.include.ab3"
00010832 <prefixtree.include.ab3@981> XINCLUDE "translation.include.ab3"
00010838 <prefixtree.include.ab3@983> XINCLUDE "translation.include.ab3"
0001083A <prefixtree.include.ab3@985> XINCLUDE "translation.include.ab3"
00010840 <prefixtree.include.ab3@986> XINCLUDE "translation.include.ab3"
0001084A <prefixtree.include.ab3@988> XINCLUDE "translation.include.ab3"
00010850 <prefixtree.include.ab3@989> XINCLUDE "translation.include.ab3"
0001086E <prefixtree.include.ab3@1007> XINCLUDE "translation.include.ab3"
00010874 <prefixtree.include.ab3@1008> XINCLUDE "translation.include.ab3"
00010898 <prefixtree.include.ab3@1009> XINCLUDE "translation.include.ab3"
000108B6 <prefixtree.include.ab3@1010> XINCLUDE "translation.include.ab3"
000108E4 <prefixtree.include.ab3@1011> XINCLUDE "translation.include.ab3"
00010912 <prefixtree.include.ab3@1012> XINCLUDE "translation.include.ab3"
00010940 <prefixtree.include.ab3@1013> XINCLUDE "translation.include.ab3"
0001096E <prefixtree.include.ab3@1014> XINCLUDE "translation.include.ab3"
000109A2 <prefixtree.include.ab3@1015> XINCLUDE "translation.include.ab3"
000109B2 <prefixtree.include.ab3@1016> XINCLUDE "translation.include.ab3"
000109BC <prefixtree.include.ab3@1018> XINCLUDE "translation.include.ab3"
000109C2 <prefixtree.include.ab3@1019> XINCLUDE "translation.include.ab3"
000109C2 <phrasebook.include.ab3@34> XINCLUDE "translation.include.ab3"
00010A0C <phrasebook.include.ab3@58> XINCLUDE "translation.include.ab3"
00010A2C <phrasebook.include.ab3@59> XINCLUDE "translation.include.ab3"
00010A36 <phrasebook.include.ab3@60> XINCLUDE "translation.include.ab3"
00010A4A <phrasebook.include.ab3@61> XINCLUDE "translation.include.ab3"
00010A90 <phrasebook.include.ab3@62> XINCLUDE "translation.include.ab3"
00010AD6 <phrasebook.include.ab3@63> XINCLUDE "translation.include.ab3"
00010B1C <phrasebook.include.ab3@64> XINCLUDE "translation.include.ab3"
00010B26 <phrasebook.include.ab3@66> XINCLUDE "translation.include.ab3"
00010B42 <phrasebook.include.ab3@67> XINCLUDE "translation.include.ab3"
00010B6C <phrasebook.include.ab3@70> XINCLUDE "translation.include.ab3"
00010BEA <phrasebook.include.ab3@71> XINCLUDE "translation.include.ab3"
00010C68 <phrasebook.include.ab3@72> XINCLUDE "translation.include.ab3"
00010CE6 <phrasebook.include.ab3@73> XINCLUDE "translation.include.ab3"
00010D64 <phrasebook.include.ab3@74> XINCLUDE "translation.include.ab3"
00010DE2 <phrasebook.include.ab3@75> XINCLUDE "translation.include.ab3"
00010E60 <phrasebook.include.ab3@76> XINCLUDE "translation.include.ab3"
00010EDE <phrasebook.include.ab3@77> XINCLUDE "translation.include.ab3"
00010F5C <phrasebook.include.ab3@78> XINCLUDE "translation.include.ab3"
00010FDA <phrasebook.include.ab3@79> XINCLUDE "translation.include.ab3"
00011058 <phrasebook.include.ab3@80> XINCLUDE "translation.include.ab3"
000110DC <phrasebook.include.ab3@81> XINCLUDE "translation.include.ab3"
0001110C <phrasebook.include.ab3@82> XINCLUDE "translation.include.ab3"
00011168 <phrasebook.include.ab3@84> XINCLUDE "translation.include.ab3"
00011194 <phrasebook.include.ab3@85> XINCLUDE "translation.include.ab3"
0001125E <phrasebook.include.ab3@86> XINCLUDE "translation.include.ab3"
0001126C <phrasebook.include.ab3@88> XINCLUDE "translation.include.ab3"
000112AA <phrasebook.include.ab3@89> XINCLUDE "translation.include.ab3"
0001132E <phrasebook.include.ab3@90> XINCLUDE "translation.include.ab3"
00011358 <phrasebook.include.ab3@91> XINCLUDE "translation.include.ab3"
00011376 <phrasebook.include.ab3@92> XINCLUDE "translation.include.ab3"
00011390 <phrasebook.include.ab3@106> XINCLUDE "translation.include.ab3"
0001139A <phrasebook.include.ab3@107> XINCLUDE "translation.include.ab3"
000113A6 <phrasebook.include.ab3@108> XINCLUDE "translation.include.ab3"
000113B6 <phrasebook.include.ab3@109> XINCLUDE "translation.include.ab3"
000113C6 <phrasebook.include.ab3@110> XINCLUDE "translation.include.ab3"
000113D6 <phrasebook.include.ab3@111> XINCLUDE "translation.include.ab3"
000113E6 <phrasebook.include.ab3@112> XINCLUDE "translation.include.ab3"
000113EA <phrasebook.include.ab3@114> XINCLUDE "translation.include.ab3"
00011428 <phrasebook.include.ab3@131> XINCLUDE "translation.include.ab3"
00011480 <phrasebook.include.ab3@132> XINCLUDE "translation.include.ab3"
000114DC <phrasebook.include.ab3@133> XINCLUDE "translation.include.ab3"
00011566 <phrasebook.include.ab3@134> XINCLUDE "translation.include.ab3"
000115E4 <phrasebook.include.ab3@135> XINCLUDE "translation.include.ab3"
000115FE <phrasebook.include.ab3@137> XINCLUDE "translation.include.ab3"
0001162C <phrasebook.include.ab3@155> XINCLUDE "translation.include.ab3"
00011668 <phrasebook.include.ab3@156> XINCLUDE "translation.include.ab3"
00011736 <phrasebook.include.ab3@158> XINCLUDE "translation.include.ab3"
00011804 <phrasebook.include.ab3@159> XINCLUDE "translation.include.ab3"
00011850 <phrasebook.include.ab3@161> XINCLUDE "translation.include.ab3"
000118CE <phrasebook.include.ab3@162> XINCLUDE "translation.include.ab3"
0001194C <phrasebook.include.ab3@163> XINCLUDE "translation.include.ab3"
000119AA <phrasebook.include.ab3@165> XINCLUDE "translation.include.ab3"
00011A40 <phrasebook.include.ab3@166> XINCLUDE "translation.include.ab3"
00011A78 <phrasebook.include.ab3@168> XINCLUDE "translation.include.ab3"
00011AD6 <phrasebook.include.ab3@169> XINCLUDE "translation.include.ab3"
00011B5E <phrasebook.include.ab3@170> XINCLUDE "translation.include.ab3"
00011B66 <phrasebook.include.ab3@172> XINCLUDE "translation.include.ab3"
00011BD0 <phrasebook.include.ab3@174> XINCLUDE "translation.include.ab3"
00011C3C <phrasebook.include.ab3@175> XINCLUDE "translation.include.ab3"
00011C7A <phrasebook.include.ab3@176> XINCLUDE "translation.include.ab3"
00011D02 <phrasebook.include.ab3@177> XINCLUDE "translation.include.ab3"
00011D2E <phrasebook.include.ab3@187> XINCLUDE "translation.include.ab3"
00011D8A <phrasebook.include.ab3@188> XINCLUDE "translation.include.ab3"
00011E52 <phrasebook.include.ab3@189> XINCLUDE "translation.include.ab3"
00011EB6 <phrasebook.include.ab3@190> XINCLUDE "translation.include.ab3"
00011EBC <phrasebook.include.ab3@191> XINCLUDE "translation.include.ab3"
00011EF0 <phrasebook.include.ab3@192> XINCLUDE "translation.include.ab3"
00011FBE <phrasebook.include.ab3@196> XINCLUDE "translation.include.ab3"
0001208C <phrasebook.include.ab3@197> XINCLUDE "translation.include.ab3"
000120B6 <phrasebook.include.ab3@199> XINCLUDE "translation.include.ab3"
000120D4 <phrasebook.include.ab3@200> XINCLUDE "translation.include.ab3"
00012102 <phrasebook.include.ab3@204> XINCLUDE "translation.include.ab3"
0001213E <phrasebook.include.ab3@205> XINCLUDE "translation.include.ab3"
000121AE <phrasebook.include.ab3@206> XINCLUDE "translation.include.ab3"
000121B6 <phrasebook.include.ab3@207> XINCLUDE "translation.include.ab3"
00012208 <phrasebook.include.ab3@208> XINCLUDE "translation.include.ab3"
00012230 <phrasebook.include.ab3@209> XINCLUDE "translation.include.ab3"
00012248 <phrasebook.include.ab3@210> XINCLUDE "translation.include.ab3"
000122FC <phrasebook.include.ab3@211> XINCLUDE "translation.include.ab3"
0001230A <phrasebook.include.ab3@212> XINCLUDE "translation.include.ab3"
00012360 <phrasebook.include.ab3@213> XINCLUDE "translation.include.ab3"
000123BE <phrasebook.include.ab3@214> XINCLUDE "translation.include.ab3"
000123C4 <phrasebook.include.ab3@215> XINCLUDE "translation.include.ab3"
00012448 <phrasebook.include.ab3@216> XINCLUDE "translation.include.ab3"
000124CC <phrasebook.include.ab3@217> XINCLUDE "translation.include.ab3"
00012550 <phrasebook.include.ab3@218> XINCLUDE "translation.include.ab3"
000125CE <phrasebook.include.ab3@219> XINCLUDE "translation.include.ab3"
0001264C <phrasebook.include.ab3@220> XINCLUDE "translation.include.ab3"
000126CA <phrasebook.include.ab3@221> XINCLUDE "translation.include.ab3"
00012748 <phrasebook.include.ab3@222> XINCLUDE "translation.include.ab3"
000127C6 <phrasebook.include.ab3@223> XINCLUDE "translation.include.ab3"
00012844 <phrasebook.include.ab3@224> XINCLUDE "translation.include.ab3"
000128C2 <phrasebook.include.ab3@225> XINCLUDE "translation.include.ab3"
000128EC <phrasebook.include.ab3@226> XINCLUDE "translation.include.ab3"
0001290A <phrasebook.include.ab3@227> XINCLUDE "translation.include.ab3"
00012938 <phrasebook.include.ab3@245> XINCLUDE "translation.include.ab3"
0001297C <phrasebook.include.ab3@246> XINCLUDE "translation.include.ab3"
00012982 <phrasebook.include.ab3@247> XINCLUDE "translation.include.ab3"
0001299C <phrasebook.include.ab3@248> XINCLUDE "translation.include.ab3"
000129B8 <phrasebook.include.ab3@249> XINCLUDE "translation.include.ab3"
000129EC <phrasebook.include.ab3@250> XINCLUDE "translation.include.ab3"
00012A10 <phrasebook.include.ab3@251> XINCLUDE "translation.include.ab3"
00012A38 <phrasebook.include.ab3@252> XINCLUDE "translation.include.ab3"
00012AA4 <phrasebook.include.ab3@253> XINCLUDE "translation.include.ab3"
00012B02 <phrasebook.include.ab3@256> XINCLUDE "translation.include.ab3"
00012B60 <phrasebook.include.ab3@257> XINCLUDE "translation.include.ab3"
00012BAC <phrasebook.include.ab3@258> XINCLUDE "translation.include.ab3"
00012C06 <phrasebook.include.ab3@259> XINCLUDE "translation.include.ab3"
00012C0C <phrasebook.include.ab3@260> XINCLUDE "translation.include.ab3"
00012C12 <phrasebook.include.ab3@262> XINCLUDE "translation.include.ab3"
00012C1C <phrasebook.include.ab3@263> XINCLUDE "translation.include.ab3"
00012C26 <phrasebook.include.ab3@264> XINCLUDE "translation.include.ab3"
00012C40 <phrasebook.include.ab3@265> XINCLUDE "translation.include.ab3"
00012C6E <phrasebook.include.ab3@282> XINCLUDE "translation.include.ab3"
00012C74 <phrasebook.include.ab3@283> XINCLUDE "translation.include.ab3"
00012CB8 <phrasebook.include.ab3@284> XINCLUDE "translation.include.ab3"
00012CD2 <phrasebook.include.ab3@285> XINCLUDE "translation.include.ab3"
00012CE2 <phrasebook.include.ab3@286> XINCLUDE "translation.include.ab3"
00012CEC <phrasebook.include.ab3@287> XINCLUDE "translation.include.ab3"
00012CF8 <phrasebook.include.ab3@288> XINCLUDE "translation.include.ab3"
00012D02 <phrasebook.include.ab3@289> XINCLUDE "translation.include.ab3"
00012D26 <phrasebook.include.ab3@292> XINCLUDE "translation.include.ab3"
00012D6E <phrasebook.include.ab3@293> XINCLUDE "translation.include.ab3"
00012DB6 <phrasebook.include.ab3@294> XINCLUDE "translation.include.ab3"
00012DFE <phrasebook.include.ab3@295> XINCLUDE "translation.include.ab3"
00012E14 <phrasebook.include.ab3@296> XINCLUDE "translation.include.ab3"
00012E28 <phrasebook.include.ab3@297> XINCLUDE "translation.include.ab3"
00012E32 <phrasebook.include.ab3@299> XINCLUDE "translation.include.ab3"
00012E3C <phrasebook.include.ab3@300> XINCLUDE "translation.include.ab3"
00012E56 <phrasebook.include.ab3@301> XINCLUDE "translation.include.ab3"
00012E80 <phrasebook.include.ab3@317> XINCLUDE "translation.include.ab3"
00012EC4 <phrasebook.include.ab3@318> XINCLUDE "translation.include.ab3"
00012EDE <phrasebook.include.ab3@319> XINCLUDE "translation.include.ab3"
00012F3C <phrasebook.include.ab3@320> XINCLUDE "translation.include.ab3"
00012F56 <phrasebook.include.ab3@321> XINCLUDE "translation.include.ab3"
00012F6E <phrasebook.include.ab3@323> XINCLUDE "translation.include.ab3"
00012F78 <phrasebook.include.ab3@324> XINCLUDE "translation.include.ab3"
00012F94 <phrasebook.include.ab3@325> XINCLUDE "translation.include.ab3"
00012FA2 <phrasebook.include.ab3@326> XINCLUDE "translation.include.ab3"
00012FAE <phrasebook.include.ab3@327> XINCLUDE "translation.include.ab3"
00012FFA <phrasebook.include.ab3@328> XINCLUDE "translation.include.ab3"
0001304C <phrasebook.include.ab3@329> XINCLUDE "translation.include.ab3"
0001309E <phrasebook.include.ab3@330> XINCLUDE "translation.include.ab3"
000130B2 <phrasebook.include.ab3@331> XINCLUDE "translation.include.ab3"
000130C2 <phrasebook.include.ab3@332> XINCLUDE "translation.include.ab3"
000130C8 <phrasebook.include.ab3@333> XINCLUDE "translation.include.ab3"
000130CA <phrasebook.include.ab3@335> XINCLUDE "translation.include.ab3"
000130D0 <phrasebook.include.ab3@336> XINCLUDE "translation.include.ab3"
000130DA <phrasebook.include.ab3@338> XINCLUDE "translation.include.ab3"
000130E4 <phrasebook.include.ab3@339> XINCLUDE "translation.include.ab3"
000130FE <phrasebook.include.ab3@340> XINCLUDE "translation.include.ab3"
00013128 <phrasebook.include.ab3@379> XINCLUDE "translation.include.ab3"
0001313E <phrasebook.include.ab3@380> XINCLUDE "translation.include.ab3"
00013148 <phrasebook.include.ab3@381> XINCLUDE "translation.include.ab3"
000131C0 <phrasebook.include.ab3@382> XINCLUDE "translation.include.ab3"
000131FC <phrasebook.include.ab3@383> XINCLUDE "translation.include.ab3"
0001320C <phrasebook.include.ab3@384> XINCLUDE "translation.include.ab3"
0001322C <phrasebook.include.ab3@385> XINCLUDE "translation.include.ab3"
0001324C <phrasebook.include.ab3@386> XINCLUDE "translation.include.ab3"
0001326C <phrasebook.include.ab3@387> XINCLUDE "translation.include.ab3"
000132A2 <phrasebook.include.ab3@388> XINCLUDE "translation.include.ab3"
000132CA <phrasebook.include.ab3@389> XINCLUDE "translation.include.ab3"
00013302 <phrasebook.include.ab3@390> XINCLUDE "translation.include.ab3"
00013366 <phrasebook.include.ab3@391> XINCLUDE "translation.include.ab3"
00013386 <phrasebook.include.ab3@392> XINCLUDE "translation.include.ab3"
00013402 <phrasebook.include.ab3@393> XINCLUDE "translation.include.ab3"
0001343A <phrasebook.include.ab3@396> XINCLUDE "translation.include.ab3"
000134B0 <phrasebook.include.ab3@397> XINCLUDE "translation.include.ab3"
000134D0 <phrasebook.include.ab3@398> XINCLUDE "translation.include.ab3"
0001354C <phrasebook.include.ab3@399> XINCLUDE "translation.include.ab3"
00013584 <phrasebook.include.ab3@402> XINCLUDE "translation.include.ab3"
000135FA <phrasebook.include.ab3@403> XINCLUDE "translation.include.ab3"
0001361A <phrasebook.include.ab3@404> XINCLUDE "translation.include.ab3"
00013696 <phrasebook.include.ab3@405> XINCLUDE "translation.include.ab3"
000136C2 <phrasebook.include.ab3@408> XINCLUDE "translation.include.ab3"
000136CA <phrasebook.include.ab3@409> XINCLUDE "translation.include.ab3"
00013710 <phrasebook.include.ab3@410> XINCLUDE "translation.include.ab3"
00013730 <phrasebook.include.ab3@411> XINCLUDE "translation.include.ab3"
0001373A <phrasebook.include.ab3@412> XINCLUDE "translation.include.ab3"
00013752 <phrasebook.include.ab3@413> XINCLUDE "translation.include.ab3"
00013762 <phrasebook.include.ab3@414> XINCLUDE "translation.include.ab3"
0001379A <phrasebook.include.ab3@415> XINCLUDE "translation.include.ab3"
000137CC <phrasebook.include.ab3@416> XINCLUDE "translation.include.ab3"
000137DE <phrasebook.include.ab3@419> XINCLUDE "translation.include.ab3"
00013860 <phrasebook.include.ab3@420> XINCLUDE "translation.include.ab3"
0001386A <phrasebook.include.ab3@421> XINCLUDE "translation.include.ab3"
0001389C <phrasebook.include.ab3@422> XINCLUDE "translation.include.ab3"
000138CE <phrasebook.include.ab3@423> XINCLUDE "translation.include.ab3"
000138FA <phrasebook.include.ab3@428> XINCLUDE "translation.include.ab3"
00013926 <phrasebook.include.ab3@429> XINCLUDE "translation.include.ab3"
00013948 <phrasebook.include.ab3@430> XINCLUDE "translation.include.ab3"
00013952 <phrasebook.include.ab3@432> XINCLUDE "translation.include.ab3"
0001396C <phrasebook.include.ab3@433> XINCLUDE "translation.include.ab3"
0001396C <translation.include.ab3@31> XINCLUDE "translation.include.ab3"
00013982 <translation.include.ab3@43> XINCLUDE "translation.include.ab3"
0001399E <translation.include.ab3@44> XINCLUDE "translation.include.ab3"
000139A0 <translation.include.ab3@45> XINCLUDE "translation.include.ab3"
000139CE <translation.include.ab3@46> XINCLUDE "translation.include.ab3"
000139CE <AmiBlitz3.ab3@91> XINCLUDE "translation.include.ab3"
000139CE <ted.include.ab3@1> XINCLUDE "/Shared/ted.include.ab3"
000139E8 <ted.include.ab3@161> XINCLUDE "/Shared/ted.include.ab3"
000139F2 <ted.include.ab3@162> XINCLUDE "/Shared/ted.include.ab3"
00013A14 <ted.include.ab3@163> XINCLUDE "/Shared/ted.include.ab3"
00013A2C <ted.include.ab3@164> XINCLUDE "/Shared/ted.include.ab3"
00013A46 <ted.include.ab3@166> XINCLUDE "/Shared/ted.include.ab3"
00013A78 <ted.include.ab3@167> XINCLUDE "/Shared/ted.include.ab3"
00013A82 <ted.include.ab3@168> XINCLUDE "/Shared/ted.include.ab3"
00013A88 <ted.include.ab3@170> XINCLUDE "/Shared/ted.include.ab3"
00013A9A <ted.include.ab3@171> XINCLUDE "/Shared/ted.include.ab3"
00013B0E <ted.include.ab3@172> XINCLUDE "/Shared/ted.include.ab3"
00013B14 <ted.include.ab3@173> XINCLUDE "/Shared/ted.include.ab3"
00013B4E <ted.include.ab3@174> XINCLUDE "/Shared/ted.include.ab3"
00013B58 <ted.include.ab3@177> XINCLUDE "/Shared/ted.include.ab3"
00013B5E <ted.include.ab3@178> XINCLUDE "/Shared/ted.include.ab3"
00013B74 <ted.include.ab3@180> XINCLUDE "/Shared/ted.include.ab3"
00013B7E <ted.include.ab3@181> XINCLUDE "/Shared/ted.include.ab3"
00013B96 <ted.include.ab3@183> XINCLUDE "/Shared/ted.include.ab3"
00013B98 <ted.include.ab3@185> XINCLUDE "/Shared/ted.include.ab3"
00013BC6 <ted.include.ab3@186> XINCLUDE "/Shared/ted.include.ab3"
00013BE0 <ted.include.ab3@190> XINCLUDE "/Shared/ted.include.ab3"
00013BF6 <ted.include.ab3@191> XINCLUDE "/Shared/ted.include.ab3"
00013C2A <ted.include.ab3@192> XINCLUDE "/Shared/ted.include.ab3"
00013C2E <ted.include.ab3@194> XINCLUDE "/Shared/ted.include.ab3"
00013C48 <ted.include.ab3@196> XINCLUDE "/Shared/ted.include.ab3"
00013C5E <ted.include.ab3@197> XINCLUDE "/Shared/ted.include.ab3"
00013C92 <ted.include.ab3@198> XINCLUDE "/Shared/ted.include.ab3"
00013C96 <ted.include.ab3@200> XINCLUDE "/Shared/ted.include.ab3"
00013CB0 <ted.include.ab3@216> XINCLUDE "/Shared/ted.include.ab3"
00013CC6 <ted.include.ab3@217> XINCLUDE "/Shared/ted.include.ab3"
00013CFA <ted.include.ab3@218> XINCLUDE "/Shared/ted.include.ab3"
00013CFE <ted.include.ab3@220> XINCLUDE "/Shared/ted.include.ab3"
00013D18 <ted.include.ab3@236> XINCLUDE "/Shared/ted.include.ab3"
00013D2E <ted.include.ab3@237> XINCLUDE "/Shared/ted.include.ab3"
00013D62 <ted.include.ab3@238> XINCLUDE "/Shared/ted.include.ab3"
00013D66 <ted.include.ab3@240> XINCLUDE "/Shared/ted.include.ab3"
00013D80 <ted.include.ab3@242> XINCLUDE "/Shared/ted.include.ab3"
00013D96 <ted.include.ab3@243> XINCLUDE "/Shared/ted.include.ab3"
00013DCA <ted.include.ab3@244> XINCLUDE "/Shared/ted.include.ab3"
00013DCE <ted.include.ab3@246> XINCLUDE "/Shared/ted.include.ab3"
00013DCE <AmiBlitz3.ab3@92> XINCLUDE "/Shared/ted.include.ab3"
00013DCE <CLIModeSupport.ab3@1> XINCLUDE "CLIModeSupport.ab3"
00013DE4 <CLIModeSupport.ab3@4> XINCLUDE "CLIModeSupport.ab3"
00013DFA <CLIModeSupport.ab3@7> XINCLUDE "CLIModeSupport.ab3"
00013E08 <CLIModeSupport.ab3@8> XINCLUDE "CLIModeSupport.ab3"
00013E16 <CLIModeSupport.ab3@9> XINCLUDE "CLIModeSupport.ab3"
00013E20 <CLIModeSupport.ab3@11> XINCLUDE "CLIModeSupport.ab3"
00013E32 <CLIModeSupport.ab3@12> XINCLUDE "CLIModeSupport.ab3"
00013E44 <CLIModeSupport.ab3@13> XINCLUDE "CLIModeSupport.ab3"
00013E4A <CLIModeSupport.ab3@14> XINCLUDE "CLIModeSupport.ab3"
00013E84 <CLIModeSupport.ab3@15> XINCLUDE "CLIModeSupport.ab3"
00013E88 <CLIModeSupport.ab3@18> XINCLUDE "CLIModeSupport.ab3"
00013E9E <CLIModeSupport.ab3@21> XINCLUDE "CLIModeSupport.ab3"
00013EB4 <CLIModeSupport.ab3@23> XINCLUDE "CLIModeSupport.ab3"
00013EC0 <CLIModeSupport.ab3@24> XINCLUDE "CLIModeSupport.ab3"
00013ECC <CLIModeSupport.ab3@25> XINCLUDE "CLIModeSupport.ab3"
00013ED4 <CLIModeSupport.ab3@26> XINCLUDE "CLIModeSupport.ab3"
00013EDC <CLIModeSupport.ab3@27> XINCLUDE "CLIModeSupport.ab3"
00013EE0 <CLIModeSupport.ab3@28> XINCLUDE "CLIModeSupport.ab3"
00013F0A <CLIModeSupport.ab3@47> XINCLUDE "CLIModeSupport.ab3"
00013F36 <CLIModeSupport.ab3@49> XINCLUDE "CLIModeSupport.ab3"
00013F48 <CLIModeSupport.ab3@50> XINCLUDE "CLIModeSupport.ab3"
00013F60 <CLIModeSupport.ab3@52> XINCLUDE "CLIModeSupport.ab3"
00013F76 <CLIModeSupport.ab3@56> XINCLUDE "CLIModeSupport.ab3"
00013F7C <CLIModeSupport.ab3@58> XINCLUDE "CLIModeSupport.ab3"
00013FB2 <CLIModeSupport.ab3@61> XINCLUDE "CLIModeSupport.ab3"
00013FEA <CLIModeSupport.ab3@62> XINCLUDE "CLIModeSupport.ab3"
00014022 <CLIModeSupport.ab3@63> XINCLUDE "CLIModeSupport.ab3"
0001405A <CLIModeSupport.ab3@64> XINCLUDE "CLIModeSupport.ab3"
00014092 <CLIModeSupport.ab3@65> XINCLUDE "CLIModeSupport.ab3"
000140CA <CLIModeSupport.ab3@66> XINCLUDE "CLIModeSupport.ab3"
00014102 <CLIModeSupport.ab3@67> XINCLUDE "CLIModeSupport.ab3"
0001413A <CLIModeSupport.ab3@68> XINCLUDE "CLIModeSupport.ab3"
00014172 <CLIModeSupport.ab3@69> XINCLUDE "CLIModeSupport.ab3"
000141AA <CLIModeSupport.ab3@70> XINCLUDE "CLIModeSupport.ab3"
000141E2 <CLIModeSupport.ab3@71> XINCLUDE "CLIModeSupport.ab3"
0001421A <CLIModeSupport.ab3@72> XINCLUDE "CLIModeSupport.ab3"
00014252 <CLIModeSupport.ab3@73> XINCLUDE "CLIModeSupport.ab3"
00014286 <CLIModeSupport.ab3@74> XINCLUDE "CLIModeSupport.ab3"
00014290 <CLIModeSupport.ab3@75> XINCLUDE "CLIModeSupport.ab3"
0001429A <CLIModeSupport.ab3@77> XINCLUDE "CLIModeSupport.ab3"
000142A4 <CLIModeSupport.ab3@78> XINCLUDE "CLIModeSupport.ab3"
000142CE <CLIModeSupport.ab3@82> XINCLUDE "CLIModeSupport.ab3"
000142D8 <CLIModeSupport.ab3@83> XINCLUDE "CLIModeSupport.ab3"
000142DC <CLIModeSupport.ab3@84> XINCLUDE "CLIModeSupport.ab3"
00014310 <CLIModeSupport.ab3@85> XINCLUDE "CLIModeSupport.ab3"
0001432E <CLIModeSupport.ab3@88> XINCLUDE "CLIModeSupport.ab3"
00014338 <CLIModeSupport.ab3@89> XINCLUDE "CLIModeSupport.ab3"
00014344 <CLIModeSupport.ab3@90> XINCLUDE "CLIModeSupport.ab3"
0001434A <CLIModeSupport.ab3@91> XINCLUDE "CLIModeSupport.ab3"
00014356 <CLIModeSupport.ab3@92> XINCLUDE "CLIModeSupport.ab3"
0001435C <CLIModeSupport.ab3@93> XINCLUDE "CLIModeSupport.ab3"
00014368 <CLIModeSupport.ab3@94> XINCLUDE "CLIModeSupport.ab3"
0001436E <CLIModeSupport.ab3@95> XINCLUDE "CLIModeSupport.ab3"
00014374 <CLIModeSupport.ab3@98> XINCLUDE "CLIModeSupport.ab3"
000143AE <CLIModeSupport.ab3@99> XINCLUDE "CLIModeSupport.ab3"
000143B4 <CLIModeSupport.ab3@100> XINCLUDE "CLIModeSupport.ab3"
000143CA <CLIModeSupport.ab3@103> XINCLUDE "CLIModeSupport.ab3"
000143D4 <CLIModeSupport.ab3@105> XINCLUDE "CLIModeSupport.ab3"
000143DA <CLIModeSupport.ab3@106> XINCLUDE "CLIModeSupport.ab3"
000143E0 <CLIModeSupport.ab3@108> XINCLUDE "CLIModeSupport.ab3"
000143E1 <CLIModeSupport.ab3@110> XINCLUDE "CLIModeSupport.ab3"
000143E2 <CLIModeSupport.ab3@111> XINCLUDE "CLIModeSupport.ab3"
000143E3 <CLIModeSupport.ab3@112> XINCLUDE "CLIModeSupport.ab3"
000143E4 <CLIModeSupport.ab3@113> XINCLUDE "CLIModeSupport.ab3"
000143E6 <CLIModeSupport.ab3@118> XINCLUDE "CLIModeSupport.ab3"
000143E8 <CLIModeSupport.ab3@119> XINCLUDE "CLIModeSupport.ab3"
000143EA <CLIModeSupport.ab3@122> XINCLUDE "CLIModeSupport.ab3"
000143EC <CLIModeSupport.ab3@123> XINCLUDE "CLIModeSupport.ab3"
000143F0 <CLIModeSupport.ab3@124> XINCLUDE "CLIModeSupport.ab3"
000143F2 <CLIModeSupport.ab3@126> XINCLUDE "CLIModeSupport.ab3"
000143F4 <CLIModeSupport.ab3@127> XINCLUDE "CLIModeSupport.ab3"
000143F8 <CLIModeSupport.ab3@128> XINCLUDE "CLIModeSupport.ab3"
000143FA <CLIModeSupport.ab3@129> XINCLUDE "CLIModeSupport.ab3"
000143FC <CLIModeSupport.ab3@156> XINCLUDE "CLIModeSupport.ab3"
000143FE <CLIModeSupport.ab3@157> XINCLUDE "CLIModeSupport.ab3"
00014400 <CLIModeSupport.ab3@158> XINCLUDE "CLIModeSupport.ab3"
00014402 <CLIModeSupport.ab3@159> XINCLUDE "CLIModeSupport.ab3"
00014404 <CLIModeSupport.ab3@163> XINCLUDE "CLIModeSupport.ab3"
00014408 <CLIModeSupport.ab3@164> XINCLUDE "CLIModeSupport.ab3"
0001440E <CLIModeSupport.ab3@172> XINCLUDE "CLIModeSupport.ab3"
00014412 <CLIModeSupport.ab3@173> XINCLUDE "CLIModeSupport.ab3"
00014414 <CLIModeSupport.ab3@176> XINCLUDE "CLIModeSupport.ab3"
00014418 <CLIModeSupport.ab3@177> XINCLUDE "CLIModeSupport.ab3"
0001441A <CLIModeSupport.ab3@178> XINCLUDE "CLIModeSupport.ab3"
0001441C <CLIModeSupport.ab3@179> XINCLUDE "CLIModeSupport.ab3"
0001441E <CLIModeSupport.ab3@180> XINCLUDE "CLIModeSupport.ab3"
00014420 <CLIModeSupport.ab3@181> XINCLUDE "CLIModeSupport.ab3"
00014422 <CLIModeSupport.ab3@184> XINCLUDE "CLIModeSupport.ab3"
00014424 <CLIModeSupport.ab3@186> XINCLUDE "CLIModeSupport.ab3"
0001442A <CLIModeSupport.ab3@187> XINCLUDE "CLIModeSupport.ab3"
00014430 <CLIModeSupport.ab3@192> XINCLUDE "CLIModeSupport.ab3"
00014432 <CLIModeSupport.ab3@196> XINCLUDE "CLIModeSupport.ab3"
00014436 <CLIModeSupport.ab3@198> XINCLUDE "CLIModeSupport.ab3"
0001443A <CLIModeSupport.ab3@199> XINCLUDE "CLIModeSupport.ab3"
00014440 <CLIModeSupport.ab3@200> XINCLUDE "CLIModeSupport.ab3"
00014446 <CLIModeSupport.ab3@203> XINCLUDE "CLIModeSupport.ab3"
0001444A <CLIModeSupport.ab3@204> XINCLUDE "CLIModeSupport.ab3"
0001444E <CLIModeSupport.ab3@206> XINCLUDE "CLIModeSupport.ab3"
00014454 <CLIModeSupport.ab3@209> XINCLUDE "CLIModeSupport.ab3"
00014458 <CLIModeSupport.ab3@210> XINCLUDE "CLIModeSupport.ab3"
0001445E <CLIModeSupport.ab3@213> XINCLUDE "CLIModeSupport.ab3"
00014464 <CLIModeSupport.ab3@216> XINCLUDE "CLIModeSupport.ab3"
00014468 <CLIModeSupport.ab3@217> XINCLUDE "CLIModeSupport.ab3"
0001446E <CLIModeSupport.ab3@220> XINCLUDE "CLIModeSupport.ab3"
00014472 <CLIModeSupport.ab3@221> XINCLUDE "CLIModeSupport.ab3"
00014478 <CLIModeSupport.ab3@222> XINCLUDE "CLIModeSupport.ab3"
0001447C <CLIModeSupport.ab3@223> XINCLUDE "CLIModeSupport.ab3"
00014480 <CLIModeSupport.ab3@228> XINCLUDE "CLIModeSupport.ab3"
00014484 <CLIModeSupport.ab3@229> XINCLUDE "CLIModeSupport.ab3"
00014488 <CLIModeSupport.ab3@230> XINCLUDE "CLIModeSupport.ab3"
0001448C <CLIModeSupport.ab3@231> XINCLUDE "CLIModeSupport.ab3"
00014490 <CLIModeSupport.ab3@232> XINCLUDE "CLIModeSupport.ab3"
00014494 <CLIModeSupport.ab3@236> XINCLUDE "CLIModeSupport.ab3"
00014498 <CLIModeSupport.ab3@237> XINCLUDE "CLIModeSupport.ab3"
0001449C <CLIModeSupport.ab3@238> XINCLUDE "CLIModeSupport.ab3"
000144A0 <CLIModeSupport.ab3@239> XINCLUDE "CLIModeSupport.ab3"
000144A4 <CLIModeSupport.ab3@240> XINCLUDE "CLIModeSupport.ab3"
000144A8 <CLIModeSupport.ab3@241> XINCLUDE "CLIModeSupport.ab3"
000144AE <CLIModeSupport.ab3@242> XINCLUDE "CLIModeSupport.ab3"
000144B2 <CLIModeSupport.ab3@243> XINCLUDE "CLIModeSupport.ab3"
000144B8 <CLIModeSupport.ab3@246> XINCLUDE "CLIModeSupport.ab3"
000144BA <CLIModeSupport.ab3@247> XINCLUDE "CLIModeSupport.ab3"
000144BE <CLIModeSupport.ab3@248> XINCLUDE "CLIModeSupport.ab3"
000144C2 <CLIModeSupport.ab3@249> XINCLUDE "CLIModeSupport.ab3"
000144C6 <CLIModeSupport.ab3@253> XINCLUDE "CLIModeSupport.ab3"
000144CA <CLIModeSupport.ab3@254> XINCLUDE "CLIModeSupport.ab3"
000144CE <CLIModeSupport.ab3@255> XINCLUDE "CLIModeSupport.ab3"
000144D2 <CLIModeSupport.ab3@256> XINCLUDE "CLIModeSupport.ab3"
000144D6 <CLIModeSupport.ab3@258> XINCLUDE "CLIModeSupport.ab3"
000144DA <CLIModeSupport.ab3@259> XINCLUDE "CLIModeSupport.ab3"
000144E0 <CLIModeSupport.ab3@262> XINCLUDE "CLIModeSupport.ab3"
000144E2 <CLIModeSupport.ab3@263> XINCLUDE "CLIModeSupport.ab3"
000144E6 <CLIModeSupport.ab3@264> XINCLUDE "CLIModeSupport.ab3"
000144EA <CLIModeSupport.ab3@267> XINCLUDE "CLIModeSupport.ab3"
000144EE <CLIModeSupport.ab3@268> XINCLUDE "CLIModeSupport.ab3"
000144F2 <CLIModeSupport.ab3@269> XINCLUDE "CLIModeSupport.ab3"
000144F6 <CLIModeSupport.ab3@272> XINCLUDE "CLIModeSupport.ab3"
000144FA <CLIModeSupport.ab3@273> XINCLUDE "CLIModeSupport.ab3"
000144FE <CLIModeSupport.ab3@275> XINCLUDE "CLIModeSupport.ab3"
00014502 <CLIModeSupport.ab3@276> XINCLUDE "CLIModeSupport.ab3"
00014506 <CLIModeSupport.ab3@277> XINCLUDE "CLIModeSupport.ab3"
0001450A <CLIModeSupport.ab3@278> XINCLUDE "CLIModeSupport.ab3"
0001450E <CLIModeSupport.ab3@279> XINCLUDE "CLIModeSupport.ab3"
00014512 <CLIModeSupport.ab3@280> XINCLUDE "CLIModeSupport.ab3"
00014516 <CLIModeSupport.ab3@281> XINCLUDE "CLIModeSupport.ab3"
0001451A <CLIModeSupport.ab3@282> XINCLUDE "CLIModeSupport.ab3"
0001451E <CLIModeSupport.ab3@283> XINCLUDE "CLIModeSupport.ab3"
00014522 <CLIModeSupport.ab3@284> XINCLUDE "CLIModeSupport.ab3"
00014526 <CLIModeSupport.ab3@285> XINCLUDE "CLIModeSupport.ab3"
0001452A <CLIModeSupport.ab3@286> XINCLUDE "CLIModeSupport.ab3"
00014530 <CLIModeSupport.ab3@289> XINCLUDE "CLIModeSupport.ab3"
00014532 <CLIModeSupport.ab3@290> XINCLUDE "CLIModeSupport.ab3"
00014536 <CLIModeSupport.ab3@292> XINCLUDE "CLIModeSupport.ab3"
0001453A <CLIModeSupport.ab3@293> XINCLUDE "CLIModeSupport.ab3"
00014540 <CLIModeSupport.ab3@294> XINCLUDE "CLIModeSupport.ab3"
00014546 <CLIModeSupport.ab3@297> XINCLUDE "CLIModeSupport.ab3"
0001454A <CLIModeSupport.ab3@298> XINCLUDE "CLIModeSupport.ab3"
0001454E <CLIModeSupport.ab3@300> XINCLUDE "CLIModeSupport.ab3"
00014554 <CLIModeSupport.ab3@303> XINCLUDE "CLIModeSupport.ab3"
00014558 <CLIModeSupport.ab3@304> XINCLUDE "CLIModeSupport.ab3"
0001455E <CLIModeSupport.ab3@305> XINCLUDE "CLIModeSupport.ab3"
00014562 <CLIModeSupport.ab3@306> XINCLUDE "CLIModeSupport.ab3"
00014564 <CLIModeSupport.ab3@310> XINCLUDE "CLIModeSupport.ab3"
0001456A <CLIModeSupport.ab3@311> XINCLUDE "CLIModeSupport.ab3"
0001456C <CLIModeSupport.ab3@314> XINCLUDE "CLIModeSupport.ab3"
0001456E <CLIModeSupport.ab3@315> XINCLUDE "CLIModeSupport.ab3"
00014570 <CLIModeSupport.ab3@316> XINCLUDE "CLIModeSupport.ab3"
00014572 <CLIModeSupport.ab3@319> XINCLUDE "CLIModeSupport.ab3"
00014576 <CLIModeSupport.ab3@320> XINCLUDE "CLIModeSupport.ab3"
00014578 <CLIModeSupport.ab3@321> XINCLUDE "CLIModeSupport.ab3"
0001457C <CLIModeSupport.ab3@322> XINCLUDE "CLIModeSupport.ab3"
00014580 <CLIModeSupport.ab3@323> XINCLUDE "CLIModeSupport.ab3"
00014584 <CLIModeSupport.ab3@324> XINCLUDE "CLIModeSupport.ab3"
00014586 <CLIModeSupport.ab3@325> XINCLUDE "CLIModeSupport.ab3"
0001458A <CLIModeSupport.ab3@326> XINCLUDE "CLIModeSupport.ab3"
0001458C <CLIModeSupport.ab3@330> XINCLUDE "CLIModeSupport.ab3"
0001458E <CLIModeSupport.ab3@331> XINCLUDE "CLIModeSupport.ab3"
00014592 <CLIModeSupport.ab3@332> XINCLUDE "CLIModeSupport.ab3"
00014594 <CLIModeSupport.ab3@333> XINCLUDE "CLIModeSupport.ab3"
00014598 <CLIModeSupport.ab3@334> XINCLUDE "CLIModeSupport.ab3"
0001459A <CLIModeSupport.ab3@338> XINCLUDE "CLIModeSupport.ab3"
0001459E <CLIModeSupport.ab3@339> XINCLUDE "CLIModeSupport.ab3"
000145A4 <CLIModeSupport.ab3@342> XINCLUDE "CLIModeSupport.ab3"
000145A6 <CLIModeSupport.ab3@343> XINCLUDE "CLIModeSupport.ab3"
000145AA <CLIModeSupport.ab3@345> XINCLUDE "CLIModeSupport.ab3"
000145AE <CLIModeSupport.ab3@346> XINCLUDE "CLIModeSupport.ab3"
000145B4 <CLIModeSupport.ab3@347> XINCLUDE "CLIModeSupport.ab3"
000145BA <CLIModeSupport.ab3@350> XINCLUDE "CLIModeSupport.ab3"
000145BE <CLIModeSupport.ab3@351> XINCLUDE "CLIModeSupport.ab3"
000145C2 <CLIModeSupport.ab3@353> XINCLUDE "CLIModeSupport.ab3"
000145C8 <CLIModeSupport.ab3@356> XINCLUDE "CLIModeSupport.ab3"
000145CC <CLIModeSupport.ab3@357> XINCLUDE "CLIModeSupport.ab3"
000145D2 <CLIModeSupport.ab3@358> XINCLUDE "CLIModeSupport.ab3"
000145D6 <CLIModeSupport.ab3@359> XINCLUDE "CLIModeSupport.ab3"
000145DA <CLIModeSupport.ab3@360> XINCLUDE "CLIModeSupport.ab3"
000145DC <CLIModeSupport.ab3@363> XINCLUDE "CLIModeSupport.ab3"
000145E0 <CLIModeSupport.ab3@364> XINCLUDE "CLIModeSupport.ab3"
000145E6 <CLIModeSupport.ab3@365> XINCLUDE "CLIModeSupport.ab3"
000145EA <CLIModeSupport.ab3@366> XINCLUDE "CLIModeSupport.ab3"
000145EE <CLIModeSupport.ab3@368> XINCLUDE "CLIModeSupport.ab3"
000145F2 <CLIModeSupport.ab3@369> XINCLUDE "CLIModeSupport.ab3"
000145F6 <CLIModeSupport.ab3@370> XINCLUDE "CLIModeSupport.ab3"
000145FA <CLIModeSupport.ab3@371> XINCLUDE "CLIModeSupport.ab3"
000145FE <CLIModeSupport.ab3@372> XINCLUDE "CLIModeSupport.ab3"
00014602 <CLIModeSupport.ab3@376> XINCLUDE "CLIModeSupport.ab3"
00014606 <CLIModeSupport.ab3@377> XINCLUDE "CLIModeSupport.ab3"
00014608 <CLIModeSupport.ab3@378> XINCLUDE "CLIModeSupport.ab3"
0001460A <CLIModeSupport.ab3@379> XINCLUDE "CLIModeSupport.ab3"
0001460C <CLIModeSupport.ab3@382> XINCLUDE "CLIModeSupport.ab3"
00014610 <CLIModeSupport.ab3@383> XINCLUDE "CLIModeSupport.ab3"
00014612 <CLIModeSupport.ab3@384> XINCLUDE "CLIModeSupport.ab3"
00014614 <CLIModeSupport.ab3@385> XINCLUDE "CLIModeSupport.ab3"
00014616 <CLIModeSupport.ab3@386> XINCLUDE "CLIModeSupport.ab3"
00014618 <CLIModeSupport.ab3@387> XINCLUDE "CLIModeSupport.ab3"
0001461A <CLIModeSupport.ab3@388> XINCLUDE "CLIModeSupport.ab3"
0001461E <CLIModeSupport.ab3@389> XINCLUDE "CLIModeSupport.ab3"
00014620 <CLIModeSupport.ab3@390> XINCLUDE "CLIModeSupport.ab3"
00014624 <CLIModeSupport.ab3@391> XINCLUDE "CLIModeSupport.ab3"
00014626 <CLIModeSupport.ab3@395> XINCLUDE "CLIModeSupport.ab3"
00014628 <CLIModeSupport.ab3@396> XINCLUDE "CLIModeSupport.ab3"
0001462A <CLIModeSupport.ab3@397> XINCLUDE "CLIModeSupport.ab3"
0001462E <CLIModeSupport.ab3@398> XINCLUDE "CLIModeSupport.ab3"
00014630 <CLIModeSupport.ab3@399> XINCLUDE "CLIModeSupport.ab3"
00014632 <CLIModeSupport.ab3@403> XINCLUDE "CLIModeSupport.ab3"
00014634 <CLIModeSupport.ab3@406> XINCLUDE "CLIModeSupport.ab3"
00014638 <CLIModeSupport.ab3@407> XINCLUDE "CLIModeSupport.ab3"
0001463C <CLIModeSupport.ab3@412> XINCLUDE "CLIModeSupport.ab3"
00014640 <CLIModeSupport.ab3@413> XINCLUDE "CLIModeSupport.ab3"
00014644 <CLIModeSupport.ab3@414> XINCLUDE "CLIModeSupport.ab3"
00014648 <CLIModeSupport.ab3@415> XINCLUDE "CLIModeSupport.ab3"
0001464C <CLIModeSupport.ab3@416> XINCLUDE "CLIModeSupport.ab3"
00014650 <CLIModeSupport.ab3@417> XINCLUDE "CLIModeSupport.ab3"
00014654 <CLIModeSupport.ab3@418> XINCLUDE "CLIModeSupport.ab3"
00014658 <CLIModeSupport.ab3@419> XINCLUDE "CLIModeSupport.ab3"
0001465A <CLIModeSupport.ab3@422> XINCLUDE "CLIModeSupport.ab3"
0001465C <CLIModeSupport.ab3@425> XINCLUDE "CLIModeSupport.ab3"
0001465E <CLIModeSupport.ab3@429> XINCLUDE "CLIModeSupport.ab3"
00014662 <CLIModeSupport.ab3@430> XINCLUDE "CLIModeSupport.ab3"
00014664 <CLIModeSupport.ab3@431> XINCLUDE "CLIModeSupport.ab3"
00014666 <CLIModeSupport.ab3@432> XINCLUDE "CLIModeSupport.ab3"
0001467C <CLIModeSupport.ab3@437> XINCLUDE "CLIModeSupport.ab3"
00014682 <CLIModeSupport.ab3@438> XINCLUDE "CLIModeSupport.ab3"
000146C0 <CLIModeSupport.ab3@440> XINCLUDE "CLIModeSupport.ab3"
000146C4 <CLIModeSupport.ab3@441> XINCLUDE "CLIModeSupport.ab3"
000146CE <CLIModeSupport.ab3@442> XINCLUDE "CLIModeSupport.ab3"
000146D0 <CLIModeSupport.ab3@443> XINCLUDE "CLIModeSupport.ab3"
00014704 <CLIModeSupport.ab3@444> XINCLUDE "CLIModeSupport.ab3"
00014714 <CLIModeSupport.ab3@445> XINCLUDE "CLIModeSupport.ab3"
00014716 <CLIModeSupport.ab3@448> XINCLUDE "CLIModeSupport.ab3"
0001474E <CLIModeSupport.ab3@449> XINCLUDE "CLIModeSupport.ab3"
00014786 <CLIModeSupport.ab3@450> XINCLUDE "CLIModeSupport.ab3"
000147BE <CLIModeSupport.ab3@451> XINCLUDE "CLIModeSupport.ab3"
000147C8 <CLIModeSupport.ab3@453> XINCLUDE "CLIModeSupport.ab3"
000147CE <CLIModeSupport.ab3@454> XINCLUDE "CLIModeSupport.ab3"
000147E4 <CLIModeSupport.ab3@458> XINCLUDE "CLIModeSupport.ab3"
00014822 <CLIModeSupport.ab3@459> XINCLUDE "CLIModeSupport.ab3"
00014826 <CLIModeSupport.ab3@460> XINCLUDE "CLIModeSupport.ab3"
0001482E <CLIModeSupport.ab3@461> XINCLUDE "CLIModeSupport.ab3"
0001486C <CLIModeSupport.ab3@462> XINCLUDE "CLIModeSupport.ab3"
0001486E <CLIModeSupport.ab3@463> XINCLUDE "CLIModeSupport.ab3"
00014872 <CLIModeSupport.ab3@464> XINCLUDE "CLIModeSupport.ab3"
000148B0 <CLIModeSupport.ab3@466> XINCLUDE "CLIModeSupport.ab3"
000148B4 <CLIModeSupport.ab3@467> XINCLUDE "CLIModeSupport.ab3"
000148F2 <CLIModeSupport.ab3@469> XINCLUDE "CLIModeSupport.ab3"
000148F6 <CLIModeSupport.ab3@470> XINCLUDE "CLIModeSupport.ab3"
00014920 <CLIModeSupport.ab3@472> XINCLUDE "CLIModeSupport.ab3"
0001492A <CLIModeSupport.ab3@473> XINCLUDE "CLIModeSupport.ab3"
0001493E <CLIModeSupport.ab3@474> XINCLUDE "CLIModeSupport.ab3"
00014964 <CLIModeSupport.ab3@475> XINCLUDE "CLIModeSupport.ab3"
0001496A <CLIModeSupport.ab3@476> XINCLUDE "CLIModeSupport.ab3"
00014978 <CLIModeSupport.ab3@477> XINCLUDE "CLIModeSupport.ab3"
0001497E <CLIModeSupport.ab3@478> XINCLUDE "CLIModeSupport.ab3"
000149B6 <CLIModeSupport.ab3@480> XINCLUDE "CLIModeSupport.ab3"
000149BA <CLIModeSupport.ab3@483> XINCLUDE "CLIModeSupport.ab3"
000149E4 <CLIModeSupport.ab3@486> XINCLUDE "CLIModeSupport.ab3"
000149EA <CLIModeSupport.ab3@487> XINCLUDE "CLIModeSupport.ab3"
00014A0A <CLIModeSupport.ab3@488> XINCLUDE "CLIModeSupport.ab3"
00014A14 <CLIModeSupport.ab3@489> XINCLUDE "CLIModeSupport.ab3"
00014A18 <CLIModeSupport.ab3@490> XINCLUDE "CLIModeSupport.ab3"
00014A1A <CLIModeSupport.ab3@491> XINCLUDE "CLIModeSupport.ab3"
00014A38 <CLIModeSupport.ab3@492> XINCLUDE "CLIModeSupport.ab3"
00014A3A <CLIModeSupport.ab3@493> XINCLUDE "CLIModeSupport.ab3"
00014A40 <CLIModeSupport.ab3@494> XINCLUDE "CLIModeSupport.ab3"
00014A46 <CLIModeSupport.ab3@495> XINCLUDE "CLIModeSupport.ab3"
00014A70 <CLIModeSupport.ab3@497> XINCLUDE "CLIModeSupport.ab3"
00014A72 <CLIModeSupport.ab3@498> XINCLUDE "CLIModeSupport.ab3"
00014AA0 <CLIModeSupport.ab3@499> XINCLUDE "CLIModeSupport.ab3"
00014AA4 <CLIModeSupport.ab3@500> XINCLUDE "CLIModeSupport.ab3"
00014AD2 <CLIModeSupport.ab3@501> XINCLUDE "CLIModeSupport.ab3"
00014AD6 <CLIModeSupport.ab3@502> XINCLUDE "CLIModeSupport.ab3"
00014AFC <CLIModeSupport.ab3@504> XINCLUDE "CLIModeSupport.ab3"
00014B0C <CLIModeSupport.ab3@505> XINCLUDE "CLIModeSupport.ab3"
00014B12 <CLIModeSupport.ab3@506> XINCLUDE "CLIModeSupport.ab3"
00014B18 <CLIModeSupport.ab3@507> XINCLUDE "CLIModeSupport.ab3"
00014B52 <CLIModeSupport.ab3@508> XINCLUDE "CLIModeSupport.ab3"
00014B5C <CLIModeSupport.ab3@510> XINCLUDE "CLIModeSupport.ab3"
00014B76 <CLIModeSupport.ab3@511> XINCLUDE "CLIModeSupport.ab3"
00014B94 <CLIModeSupport.ab3@523> XINCLUDE "CLIModeSupport.ab3"
00014B9C <CLIModeSupport.ab3@524> XINCLUDE "CLIModeSupport.ab3"
00014BA2 <CLIModeSupport.ab3@525> XINCLUDE "CLIModeSupport.ab3"
00014BA8 <CLIModeSupport.ab3@526> XINCLUDE "CLIModeSupport.ab3"
00014BCA <CLIModeSupport.ab3@527> XINCLUDE "CLIModeSupport.ab3"
00014BE2 <CLIModeSupport.ab3@529> XINCLUDE "CLIModeSupport.ab3"
00014C08 <CLIModeSupport.ab3@530> XINCLUDE "CLIModeSupport.ab3"
00014C32 <CLIModeSupport.ab3@531> XINCLUDE "CLIModeSupport.ab3"
00014C40 <CLIModeSupport.ab3@532> XINCLUDE "CLIModeSupport.ab3"
00014C46 <CLIModeSupport.ab3@533> XINCLUDE "CLIModeSupport.ab3"
00014C5A <CLIModeSupport.ab3@534> XINCLUDE "CLIModeSupport.ab3"
00014C72 <CLIModeSupport.ab3@536> XINCLUDE "CLIModeSupport.ab3"
00014C80 <CLIModeSupport.ab3@537> XINCLUDE "CLIModeSupport.ab3"
00014C94 <CLIModeSupport.ab3@538> XINCLUDE "CLIModeSupport.ab3"
00014CCA <CLIModeSupport.ab3@539> XINCLUDE "CLIModeSupport.ab3"
00014CD8 <CLIModeSupport.ab3@540> XINCLUDE "CLIModeSupport.ab3"
00014D08 <CLIModeSupport.ab3@541> XINCLUDE "CLIModeSupport.ab3"
00014D16 <CLIModeSupport.ab3@542> XINCLUDE "CLIModeSupport.ab3"
00014D1C <CLIModeSupport.ab3@543> XINCLUDE "CLIModeSupport.ab3"
00014D2A <CLIModeSupport.ab3@544> XINCLUDE "CLIModeSupport.ab3"
00014D30 <CLIModeSupport.ab3@545> XINCLUDE "CLIModeSupport.ab3"
00014D36 <CLIModeSupport.ab3@547> XINCLUDE "CLIModeSupport.ab3"
00014D44 <CLIModeSupport.ab3@548> XINCLUDE "CLIModeSupport.ab3"
00014D46 <CLIModeSupport.ab3@549> XINCLUDE "CLIModeSupport.ab3"
00014D4C <CLIModeSupport.ab3@551> XINCLUDE "CLIModeSupport.ab3"
00014D62 <CLIModeSupport.ab3@553> XINCLUDE "CLIModeSupport.ab3"
00014D6C <CLIModeSupport.ab3@554> XINCLUDE "CLIModeSupport.ab3"
00014D72 <CLIModeSupport.ab3@555> XINCLUDE "CLIModeSupport.ab3"
00014D9C <CLIModeSupport.ab3@559> XINCLUDE "CLIModeSupport.ab3"
00014DDA <CLIModeSupport.ab3@562> XINCLUDE "CLIModeSupport.ab3"
00014DDE <CLIModeSupport.ab3@563> XINCLUDE "CLIModeSupport.ab3"
00014E1C <CLIModeSupport.ab3@564> XINCLUDE "CLIModeSupport.ab3"
00014E20 <CLIModeSupport.ab3@565> XINCLUDE "CLIModeSupport.ab3"
00014E5E <CLIModeSupport.ab3@566> XINCLUDE "CLIModeSupport.ab3"
00014E62 <CLIModeSupport.ab3@567> XINCLUDE "CLIModeSupport.ab3"
00014E6A <CLIModeSupport.ab3@569> XINCLUDE "CLIModeSupport.ab3"
00014E72 <CLIModeSupport.ab3@570> XINCLUDE "CLIModeSupport.ab3"
00014EB6 <CLIModeSupport.ab3@572> XINCLUDE "CLIModeSupport.ab3"
00014EC8 <CLIModeSupport.ab3@573> XINCLUDE "CLIModeSupport.ab3"
00014ED6 <CLIModeSupport.ab3@574> XINCLUDE "CLIModeSupport.ab3"
00014F0A <CLIModeSupport.ab3@575> XINCLUDE "CLIModeSupport.ab3"
00014F2E <CLIModeSupport.ab3@577> XINCLUDE "CLIModeSupport.ab3"
00014F38 <CLIModeSupport.ab3@578> XINCLUDE "CLIModeSupport.ab3"
00014F52 <CLIModeSupport.ab3@579> XINCLUDE "CLIModeSupport.ab3"
00014F66 <CLIModeSupport.ab3@580> XINCLUDE "CLIModeSupport.ab3"
00014FBE <CLIModeSupport.ab3@581> XINCLUDE "CLIModeSupport.ab3"
0001505E <CLIModeSupport.ab3@582> XINCLUDE "CLIModeSupport.ab3"
00015066 <CLIModeSupport.ab3@583> XINCLUDE "CLIModeSupport.ab3"
0001509E <CLIModeSupport.ab3@584> XINCLUDE "CLIModeSupport.ab3"
000150A4 <CLIModeSupport.ab3@585> XINCLUDE "CLIModeSupport.ab3"
000150B4 <CLIModeSupport.ab3@586> XINCLUDE "CLIModeSupport.ab3"
000150DC <CLIModeSupport.ab3@589> XINCLUDE "CLIModeSupport.ab3"
00015104 <CLIModeSupport.ab3@590> XINCLUDE "CLIModeSupport.ab3"
0001510C <CLIModeSupport.ab3@591> XINCLUDE "CLIModeSupport.ab3"
00015112 <CLIModeSupport.ab3@592> XINCLUDE "CLIModeSupport.ab3"
0001511A <CLIModeSupport.ab3@593> XINCLUDE "CLIModeSupport.ab3"
00015122 <CLIModeSupport.ab3@594> XINCLUDE "CLIModeSupport.ab3"
0001514A <CLIModeSupport.ab3@595> XINCLUDE "CLIModeSupport.ab3"
00015152 <CLIModeSupport.ab3@596> XINCLUDE "CLIModeSupport.ab3"
0001515A <CLIModeSupport.ab3@597> XINCLUDE "CLIModeSupport.ab3"
00015160 <CLIModeSupport.ab3@598> XINCLUDE "CLIModeSupport.ab3"
00015166 <CLIModeSupport.ab3@599> XINCLUDE "CLIModeSupport.ab3"
0001516C <CLIModeSupport.ab3@600> XINCLUDE "CLIModeSupport.ab3"
00015172 <CLIModeSupport.ab3@601> XINCLUDE "CLIModeSupport.ab3"
00015178 <CLIModeSupport.ab3@602> XINCLUDE "CLIModeSupport.ab3"
0001517E <CLIModeSupport.ab3@603> XINCLUDE "CLIModeSupport.ab3"
00015184 <CLIModeSupport.ab3@604> XINCLUDE "CLIModeSupport.ab3"
0001518A <CLIModeSupport.ab3@605> XINCLUDE "CLIModeSupport.ab3"
00015192 <CLIModeSupport.ab3@606> XINCLUDE "CLIModeSupport.ab3"
0001519A <CLIModeSupport.ab3@607> XINCLUDE "CLIModeSupport.ab3"
000151C2 <CLIModeSupport.ab3@608> XINCLUDE "CLIModeSupport.ab3"
000151C8 <CLIModeSupport.ab3@609> XINCLUDE "CLIModeSupport.ab3"
000151CE <CLIModeSupport.ab3@610> XINCLUDE "CLIModeSupport.ab3"
000151D6 <CLIModeSupport.ab3@611> XINCLUDE "CLIModeSupport.ab3"
000151F6 <CLIModeSupport.ab3@615> XINCLUDE "CLIModeSupport.ab3"
00015206 <CLIModeSupport.ab3@617> XINCLUDE "CLIModeSupport.ab3"
00015216 <CLIModeSupport.ab3@618> XINCLUDE "CLIModeSupport.ab3"
00015226 <CLIModeSupport.ab3@620> XINCLUDE "CLIModeSupport.ab3"
00015236 <CLIModeSupport.ab3@621> XINCLUDE "CLIModeSupport.ab3"
00015246 <CLIModeSupport.ab3@622> XINCLUDE "CLIModeSupport.ab3"
00015256 <CLIModeSupport.ab3@623> XINCLUDE "CLIModeSupport.ab3"
00015266 <CLIModeSupport.ab3@624> XINCLUDE "CLIModeSupport.ab3"
00015276 <CLIModeSupport.ab3@625> XINCLUDE "CLIModeSupport.ab3"
00015286 <CLIModeSupport.ab3@626> XINCLUDE "CLIModeSupport.ab3"
00015296 <CLIModeSupport.ab3@627> XINCLUDE "CLIModeSupport.ab3"
000152A6 <CLIModeSupport.ab3@628> XINCLUDE "CLIModeSupport.ab3"
000152B6 <CLIModeSupport.ab3@629> XINCLUDE "CLIModeSupport.ab3"
000152C6 <CLIModeSupport.ab3@630> XINCLUDE "CLIModeSupport.ab3"
000152D6 <CLIModeSupport.ab3@631> XINCLUDE "CLIModeSupport.ab3"
000152E6 <CLIModeSupport.ab3@632> XINCLUDE "CLIModeSupport.ab3"
000152F6 <CLIModeSupport.ab3@633> XINCLUDE "CLIModeSupport.ab3"
0001530A <CLIModeSupport.ab3@635> XINCLUDE "CLIModeSupport.ab3"
0001531C <CLIModeSupport.ab3@636> XINCLUDE "CLIModeSupport.ab3"
0001532E <CLIModeSupport.ab3@637> XINCLUDE "CLIModeSupport.ab3"
00015340 <CLIModeSupport.ab3@638> XINCLUDE "CLIModeSupport.ab3"
00015352 <CLIModeSupport.ab3@639> XINCLUDE "CLIModeSupport.ab3"
00015358 <CLIModeSupport.ab3@640> XINCLUDE "CLIModeSupport.ab3"
0001536A <CLIModeSupport.ab3@641> XINCLUDE "CLIModeSupport.ab3"
0001537C <CLIModeSupport.ab3@642> XINCLUDE "CLIModeSupport.ab3"
0001538E <CLIModeSupport.ab3@643> XINCLUDE "CLIModeSupport.ab3"
000153A0 <CLIModeSupport.ab3@644> XINCLUDE "CLIModeSupport.ab3"
000153B2 <CLIModeSupport.ab3@646> XINCLUDE "CLIModeSupport.ab3"
000153C4 <CLIModeSupport.ab3@647> XINCLUDE "CLIModeSupport.ab3"
000153E2 <CLIModeSupport.ab3@649> XINCLUDE "CLIModeSupport.ab3"
000153E8 <CLIModeSupport.ab3@650> XINCLUDE "CLIModeSupport.ab3"
000153EE <CLIModeSupport.ab3@652> XINCLUDE "CLIModeSupport.ab3"
00015418 <CLIModeSupport.ab3@653> XINCLUDE "CLIModeSupport.ab3"
0001542A <CLIModeSupport.ab3@654> XINCLUDE "CLIModeSupport.ab3"
0001545E <CLIModeSupport.ab3@657> XINCLUDE "CLIModeSupport.ab3"
00015476 <CLIModeSupport.ab3@658> XINCLUDE "CLIModeSupport.ab3"
000154C2 <CLIModeSupport.ab3@659> XINCLUDE "CLIModeSupport.ab3"
000154D4 <CLIModeSupport.ab3@660> XINCLUDE "CLIModeSupport.ab3"
0001552A <CLIModeSupport.ab3@661> XINCLUDE "CLIModeSupport.ab3"
0001559C <CLIModeSupport.ab3@662> XINCLUDE "CLIModeSupport.ab3"
000155A2 <CLIModeSupport.ab3@663> XINCLUDE "CLIModeSupport.ab3"
000155D6 <CLIModeSupport.ab3@664> XINCLUDE "CLIModeSupport.ab3"
000155FE <CLIModeSupport.ab3@665> XINCLUDE "CLIModeSupport.ab3"
00015626 <CLIModeSupport.ab3@667> XINCLUDE "CLIModeSupport.ab3"
00015660 <CLIModeSupport.ab3@668> XINCLUDE "CLIModeSupport.ab3"
00015678 <CLIModeSupport.ab3@669> XINCLUDE "CLIModeSupport.ab3"
000156FC <CLIModeSupport.ab3@670> XINCLUDE "CLIModeSupport.ab3"
00015716 <CLIModeSupport.ab3@671> XINCLUDE "CLIModeSupport.ab3"
00015764 <CLIModeSupport.ab3@672> XINCLUDE "CLIModeSupport.ab3"
00015774 <CLIModeSupport.ab3@674> XINCLUDE "CLIModeSupport.ab3"
0001577C <CLIModeSupport.ab3@676> XINCLUDE "CLIModeSupport.ab3"
00015790 <CLIModeSupport.ab3@677> XINCLUDE "CLIModeSupport.ab3"
000157D6 <CLIModeSupport.ab3@678> XINCLUDE "CLIModeSupport.ab3"
000157DC <CLIModeSupport.ab3@679> XINCLUDE "CLIModeSupport.ab3"
00015826 <CLIModeSupport.ab3@680> XINCLUDE "CLIModeSupport.ab3"
00015890 <CLIModeSupport.ab3@681> XINCLUDE "CLIModeSupport.ab3"
000158F6 <CLIModeSupport.ab3@682> XINCLUDE "CLIModeSupport.ab3"
0001592A <CLIModeSupport.ab3@683> XINCLUDE "CLIModeSupport.ab3"
00015956 <CLIModeSupport.ab3@685> XINCLUDE "CLIModeSupport.ab3"
000159A4 <CLIModeSupport.ab3@686> XINCLUDE "CLIModeSupport.ab3"
000159C8 <CLIModeSupport.ab3@687> XINCLUDE "CLIModeSupport.ab3"
000159CE <CLIModeSupport.ab3@688> XINCLUDE "CLIModeSupport.ab3"
000159DC <CLIModeSupport.ab3@690> XINCLUDE "CLIModeSupport.ab3"
00015A3A <CLIModeSupport.ab3@692> XINCLUDE "CLIModeSupport.ab3"
00015A98 <CLIModeSupport.ab3@693> XINCLUDE "CLIModeSupport.ab3"
00015AC2 <CLIModeSupport.ab3@694> XINCLUDE "CLIModeSupport.ab3"
00015ACC <CLIModeSupport.ab3@695> XINCLUDE "CLIModeSupport.ab3"
00015AD4 <CLIModeSupport.ab3@696> XINCLUDE "CLIModeSupport.ab3"
00015B12 <CLIModeSupport.ab3@697> XINCLUDE "CLIModeSupport.ab3"
00015B5E <CLIModeSupport.ab3@698> XINCLUDE "CLIModeSupport.ab3"
00015B70 <CLIModeSupport.ab3@699> XINCLUDE "CLIModeSupport.ab3"
00015BC6 <CLIModeSupport.ab3@700> XINCLUDE "CLIModeSupport.ab3"
00015C3E <CLIModeSupport.ab3@701> XINCLUDE "CLIModeSupport.ab3"
00015C44 <CLIModeSupport.ab3@702> XINCLUDE "CLIModeSupport.ab3"
00015C78 <CLIModeSupport.ab3@703> XINCLUDE "CLIModeSupport.ab3"
00015CA0 <CLIModeSupport.ab3@704> XINCLUDE "CLIModeSupport.ab3"
00015CD6 <CLIModeSupport.ab3@707> XINCLUDE "CLIModeSupport.ab3"
00015CE4 <CLIModeSupport.ab3@708> XINCLUDE "CLIModeSupport.ab3"
00015CF2 <CLIModeSupport.ab3@709> XINCLUDE "CLIModeSupport.ab3"
00015D66 <CLIModeSupport.ab3@710> XINCLUDE "CLIModeSupport.ab3"
00015D6C <CLIModeSupport.ab3@711> XINCLUDE "CLIModeSupport.ab3"
00015DB6 <CLIModeSupport.ab3@712> XINCLUDE "CLIModeSupport.ab3"
00015E00 <CLIModeSupport.ab3@713> XINCLUDE "CLIModeSupport.ab3"
00015E30 <CLIModeSupport.ab3@714> XINCLUDE "CLIModeSupport.ab3"
00015E60 <CLIModeSupport.ab3@715> XINCLUDE "CLIModeSupport.ab3"
00015E8A <CLIModeSupport.ab3@716> XINCLUDE "CLIModeSupport.ab3"
00015EDC <CLIModeSupport.ab3@717> XINCLUDE "CLIModeSupport.ab3"
00015F32 <CLIModeSupport.ab3@718> XINCLUDE "CLIModeSupport.ab3"
00015F82 <CLIModeSupport.ab3@719> XINCLUDE "CLIModeSupport.ab3"
00015FE8 <CLIModeSupport.ab3@720> XINCLUDE "CLIModeSupport.ab3"
00016054 <CLIModeSupport.ab3@721> XINCLUDE "CLIModeSupport.ab3"
00016080 <CLIModeSupport.ab3@722> XINCLUDE "CLIModeSupport.ab3"
000160B0 <CLIModeSupport.ab3@723> XINCLUDE "CLIModeSupport.ab3"
0001612C <CLIModeSupport.ab3@724> XINCLUDE "CLIModeSupport.ab3"
0001615C <CLIModeSupport.ab3@725> XINCLUDE "CLIModeSupport.ab3"
0001618C <CLIModeSupport.ab3@726> XINCLUDE "CLIModeSupport.ab3"
000161BC <CLIModeSupport.ab3@727> XINCLUDE "CLIModeSupport.ab3"
000161EC <CLIModeSupport.ab3@728> XINCLUDE "CLIModeSupport.ab3"
0001621C <CLIModeSupport.ab3@729> XINCLUDE "CLIModeSupport.ab3"
0001624C <CLIModeSupport.ab3@730> XINCLUDE "CLIModeSupport.ab3"
0001627C <CLIModeSupport.ab3@731> XINCLUDE "CLIModeSupport.ab3"
000162AC <CLIModeSupport.ab3@732> XINCLUDE "CLIModeSupport.ab3"
000162DC <CLIModeSupport.ab3@733> XINCLUDE "CLIModeSupport.ab3"
0001630C <CLIModeSupport.ab3@734> XINCLUDE "CLIModeSupport.ab3"
00016388 <CLIModeSupport.ab3@735> XINCLUDE "CLIModeSupport.ab3"
000163BA <CLIModeSupport.ab3@736> XINCLUDE "CLIModeSupport.ab3"
000163EC <CLIModeSupport.ab3@737> XINCLUDE "CLIModeSupport.ab3"
0001641C <CLIModeSupport.ab3@738> XINCLUDE "CLIModeSupport.ab3"
00016422 <CLIModeSupport.ab3@739> XINCLUDE "CLIModeSupport.ab3"
00016496 <CLIModeSupport.ab3@740> XINCLUDE "CLIModeSupport.ab3"
00016502 <CLIModeSupport.ab3@741> XINCLUDE "CLIModeSupport.ab3"
00016514 <CLIModeSupport.ab3@742> XINCLUDE "CLIModeSupport.ab3"
00016542 <CLIModeSupport.ab3@743> XINCLUDE "CLIModeSupport.ab3"
0001656A <CLIModeSupport.ab3@744> XINCLUDE "CLIModeSupport.ab3"
0001657E <CLIModeSupport.ab3@745> XINCLUDE "CLIModeSupport.ab3"
000165A8 <CLIModeSupport.ab3@746> XINCLUDE "CLIModeSupport.ab3"
000165EC <CLIModeSupport.ab3@747> XINCLUDE "CLIModeSupport.ab3"
000165FC <CLIModeSupport.ab3@748> XINCLUDE "CLIModeSupport.ab3"
0001660C <CLIModeSupport.ab3@749> XINCLUDE "CLIModeSupport.ab3"
00016612 <CLIModeSupport.ab3@750> XINCLUDE "CLIModeSupport.ab3"
00016622 <CLIModeSupport.ab3@752> XINCLUDE "CLIModeSupport.ab3"
00016630 <CLIModeSupport.ab3@756> XINCLUDE "CLIModeSupport.ab3"
0001663A <CLIModeSupport.ab3@759> XINCLUDE "CLIModeSupport.ab3"
00016672 <CLIModeSupport.ab3@762> XINCLUDE "CLIModeSupport.ab3"
000166AA <CLIModeSupport.ab3@763> XINCLUDE "CLIModeSupport.ab3"
000166E2 <CLIModeSupport.ab3@764> XINCLUDE "CLIModeSupport.ab3"
000166F2 <CLIModeSupport.ab3@765> XINCLUDE "CLIModeSupport.ab3"
0001675A <CLIModeSupport.ab3@766> XINCLUDE "CLIModeSupport.ab3"
00016792 <CLIModeSupport.ab3@767> XINCLUDE "CLIModeSupport.ab3"
000167A2 <CLIModeSupport.ab3@768> XINCLUDE "CLIModeSupport.ab3"
000167B2 <CLIModeSupport.ab3@769> XINCLUDE "CLIModeSupport.ab3"
0001681A <CLIModeSupport.ab3@770> XINCLUDE "CLIModeSupport.ab3"
00016882 <CLIModeSupport.ab3@771> XINCLUDE "CLIModeSupport.ab3"
000168EA <CLIModeSupport.ab3@772> XINCLUDE "CLIModeSupport.ab3"
00016952 <CLIModeSupport.ab3@773> XINCLUDE "CLIModeSupport.ab3"
000169BA <CLIModeSupport.ab3@774> XINCLUDE "CLIModeSupport.ab3"
00016A22 <CLIModeSupport.ab3@775> XINCLUDE "CLIModeSupport.ab3"
00016A8A <CLIModeSupport.ab3@776> XINCLUDE "CLIModeSupport.ab3"
00016AF2 <CLIModeSupport.ab3@777> XINCLUDE "CLIModeSupport.ab3"
00016B02 <CLIModeSupport.ab3@778> XINCLUDE "CLIModeSupport.ab3"
00016B3A <CLIModeSupport.ab3@780> XINCLUDE "CLIModeSupport.ab3"
00016B74 <CLIModeSupport.ab3@781> XINCLUDE "CLIModeSupport.ab3"
00016BAE <CLIModeSupport.ab3@782> XINCLUDE "CLIModeSupport.ab3"
00016BE6 <CLIModeSupport.ab3@783> XINCLUDE "CLIModeSupport.ab3"
00016C02 <CLIModeSupport.ab3@784> XINCLUDE "CLIModeSupport.ab3"
00016C3A <CLIModeSupport.ab3@785> XINCLUDE "CLIModeSupport.ab3"
00016C60 <CLIModeSupport.ab3@787> XINCLUDE "CLIModeSupport.ab3"
00016C68 <CLIModeSupport.ab3@790> XINCLUDE "CLIModeSupport.ab3"
00016C70 <CLIModeSupport.ab3@792> XINCLUDE "CLIModeSupport.ab3"
00016C78 <CLIModeSupport.ab3@793> XINCLUDE "CLIModeSupport.ab3"
00016C80 <CLIModeSupport.ab3@795> XINCLUDE "CLIModeSupport.ab3"
00016C94 <CLIModeSupport.ab3@796> XINCLUDE "CLIModeSupport.ab3"
00016CC2 <CLIModeSupport.ab3@797> XINCLUDE "CLIModeSupport.ab3"
00016CDC <CLIModeSupport.ab3@798> XINCLUDE "CLIModeSupport.ab3"
00016CEA <CLIModeSupport.ab3@799> XINCLUDE "CLIModeSupport.ab3"
00016D56 <CLIModeSupport.ab3@800> XINCLUDE "CLIModeSupport.ab3"
00016D7C <CLIModeSupport.ab3@801> XINCLUDE "CLIModeSupport.ab3"
00016D98 <CLIModeSupport.ab3@802> XINCLUDE "CLIModeSupport.ab3"
00016DA2 <CLIModeSupport.ab3@803> XINCLUDE "CLIModeSupport.ab3"
00016DAC <CLIModeSupport.ab3@804> XINCLUDE "CLIModeSupport.ab3"
00016DB8 <CLIModeSupport.ab3@805> XINCLUDE "CLIModeSupport.ab3"
00016DC6 <CLIModeSupport.ab3@806> XINCLUDE "CLIModeSupport.ab3"
00016DD2 <CLIModeSupport.ab3@807> XINCLUDE "CLIModeSupport.ab3"
00016E0E <CLIModeSupport.ab3@808> XINCLUDE "CLIModeSupport.ab3"
00016E28 <CLIModeSupport.ab3@809> XINCLUDE "CLIModeSupport.ab3"
00016E36 <CLIModeSupport.ab3@810> XINCLUDE "CLIModeSupport.ab3"
00016E56 <CLIModeSupport.ab3@811> XINCLUDE "CLIModeSupport.ab3"
00016E64 <CLIModeSupport.ab3@812> XINCLUDE "CLIModeSupport.ab3"
00016E72 <CLIModeSupport.ab3@813> XINCLUDE "CLIModeSupport.ab3"
00016E78 <CLIModeSupport.ab3@815> XINCLUDE "CLIModeSupport.ab3"
00016E88 <CLIModeSupport.ab3@816> XINCLUDE "CLIModeSupport.ab3"
00016E8C <CLIModeSupport.ab3@818> XINCLUDE "CLIModeSupport.ab3"
00016EC0 <CLIModeSupport.ab3@819> XINCLUDE "CLIModeSupport.ab3"
00016EF4 <CLIModeSupport.ab3@820> XINCLUDE "CLIModeSupport.ab3"
00016EF8 <CLIModeSupport.ab3@821> XINCLUDE "CLIModeSupport.ab3"
00016F2C <CLIModeSupport.ab3@822> XINCLUDE "CLIModeSupport.ab3"
00016F30 <CLIModeSupport.ab3@823> XINCLUDE "CLIModeSupport.ab3"
00016F64 <CLIModeSupport.ab3@824> XINCLUDE "CLIModeSupport.ab3"
00016F6A <CLIModeSupport.ab3@825> XINCLUDE "CLIModeSupport.ab3"
00016FA0 <CLIModeSupport.ab3@827> XINCLUDE "CLIModeSupport.ab3"
00016FD6 <CLIModeSupport.ab3@828> XINCLUDE "CLIModeSupport.ab3"
0001700C <CLIModeSupport.ab3@829> XINCLUDE "CLIModeSupport.ab3"
00017044 <CLIModeSupport.ab3@830> XINCLUDE "CLIModeSupport.ab3"
0001707C <CLIModeSupport.ab3@831> XINCLUDE "CLIModeSupport.ab3"
0001711C <CLIModeSupport.ab3@833> XINCLUDE "CLIModeSupport.ab3"
0001715C <CLIModeSupport.ab3@834> XINCLUDE "CLIModeSupport.ab3"
00017192 <CLIModeSupport.ab3@835> XINCLUDE "CLIModeSupport.ab3"
000171C8 <CLIModeSupport.ab3@836> XINCLUDE "CLIModeSupport.ab3"
00017200 <CLIModeSupport.ab3@839> XINCLUDE "CLIModeSupport.ab3"
0001721E <CLIModeSupport.ab3@840> XINCLUDE "CLIModeSupport.ab3"
00017222 <CLIModeSupport.ab3@841> XINCLUDE "CLIModeSupport.ab3"
00017228 <CLIModeSupport.ab3@842> XINCLUDE "CLIModeSupport.ab3"
0001722E <CLIModeSupport.ab3@843> XINCLUDE "CLIModeSupport.ab3"
00017232 <CLIModeSupport.ab3@844> XINCLUDE "CLIModeSupport.ab3"
0001725C <CLIModeSupport.ab3@845> XINCLUDE "CLIModeSupport.ab3"
00017270 <CLIModeSupport.ab3@849> XINCLUDE "CLIModeSupport.ab3"
000172AE <CLIModeSupport.ab3@850> XINCLUDE "CLIModeSupport.ab3"
000172E2 <CLIModeSupport.ab3@851> XINCLUDE "CLIModeSupport.ab3"
00017318 <CLIModeSupport.ab3@855> XINCLUDE "CLIModeSupport.ab3"
00017370 <CLIModeSupport.ab3@857> XINCLUDE "CLIModeSupport.ab3"
0001739E <CLIModeSupport.ab3@858> XINCLUDE "CLIModeSupport.ab3"
000173A2 <CLIModeSupport.ab3@859> XINCLUDE "CLIModeSupport.ab3"
000173D8 <CLIModeSupport.ab3@860> XINCLUDE "CLIModeSupport.ab3"
00017406 <CLIModeSupport.ab3@861> XINCLUDE "CLIModeSupport.ab3"
00017434 <CLIModeSupport.ab3@863> XINCLUDE "CLIModeSupport.ab3"
00017438 <CLIModeSupport.ab3@864> XINCLUDE "CLIModeSupport.ab3"
0001746E <CLIModeSupport.ab3@865> XINCLUDE "CLIModeSupport.ab3"
0001749C <CLIModeSupport.ab3@867> XINCLUDE "CLIModeSupport.ab3"
000174A0 <CLIModeSupport.ab3@868> XINCLUDE "CLIModeSupport.ab3"
00017504 <CLIModeSupport.ab3@869> XINCLUDE "CLIModeSupport.ab3"
0001750A <CLIModeSupport.ab3@872> XINCLUDE "CLIModeSupport.ab3"
00017544 <CLIModeSupport.ab3@873> XINCLUDE "CLIModeSupport.ab3"
0001754E <CLIModeSupport.ab3@876> XINCLUDE "CLIModeSupport.ab3"
00017558 <CLIModeSupport.ab3@878> XINCLUDE "CLIModeSupport.ab3"
00017572 <CLIModeSupport.ab3@879> XINCLUDE "CLIModeSupport.ab3"
0001759C <CLIModeSupport.ab3@882> XINCLUDE "CLIModeSupport.ab3"
000175A2 <CLIModeSupport.ab3@883> XINCLUDE "CLIModeSupport.ab3"
000175C2 <CLIModeSupport.ab3@884> XINCLUDE "CLIModeSupport.ab3"
000175CC <CLIModeSupport.ab3@885> XINCLUDE "CLIModeSupport.ab3"
000175D0 <CLIModeSupport.ab3@886> XINCLUDE "CLIModeSupport.ab3"
000175D2 <CLIModeSupport.ab3@887> XINCLUDE "CLIModeSupport.ab3"
000175F0 <CLIModeSupport.ab3@888> XINCLUDE "CLIModeSupport.ab3"
000175F2 <CLIModeSupport.ab3@889> XINCLUDE "CLIModeSupport.ab3"
000175F8 <CLIModeSupport.ab3@890> XINCLUDE "CLIModeSupport.ab3"
000175FE <CLIModeSupport.ab3@892> XINCLUDE "CLIModeSupport.ab3"
00017628 <CLIModeSupport.ab3@893> XINCLUDE "CLIModeSupport.ab3"
0001762A <CLIModeSupport.ab3@894> XINCLUDE "CLIModeSupport.ab3"
00017658 <CLIModeSupport.ab3@895> XINCLUDE "CLIModeSupport.ab3"
0001765C <CLIModeSupport.ab3@896> XINCLUDE "CLIModeSupport.ab3"
0001768A <CLIModeSupport.ab3@897> XINCLUDE "CLIModeSupport.ab3"
0001768E <CLIModeSupport.ab3@898> XINCLUDE "CLIModeSupport.ab3"
000176B4 <CLIModeSupport.ab3@899> XINCLUDE "CLIModeSupport.ab3"
000176C4 <CLIModeSupport.ab3@900> XINCLUDE "CLIModeSupport.ab3"
000176CA <CLIModeSupport.ab3@901> XINCLUDE "CLIModeSupport.ab3"
000176D0 <CLIModeSupport.ab3@902> XINCLUDE "CLIModeSupport.ab3"
0001770A <CLIModeSupport.ab3@903> XINCLUDE "CLIModeSupport.ab3"
00017714 <CLIModeSupport.ab3@905> XINCLUDE "CLIModeSupport.ab3"
0001772E <CLIModeSupport.ab3@906> XINCLUDE "CLIModeSupport.ab3"
0001774C <CLIModeSupport.ab3@909> XINCLUDE "CLIModeSupport.ab3"
00017776 <CLIModeSupport.ab3@910> XINCLUDE "CLIModeSupport.ab3"
000177A4 <CLIModeSupport.ab3@911> XINCLUDE "CLIModeSupport.ab3"
00017834 <CLIModeSupport.ab3@912> XINCLUDE "CLIModeSupport.ab3"
0001783E <CLIModeSupport.ab3@914> XINCLUDE "CLIModeSupport.ab3"
00017852 <CLIModeSupport.ab3@915> XINCLUDE "CLIModeSupport.ab3"
0001788E <CLIModeSupport.ab3@916> XINCLUDE "CLIModeSupport.ab3"
000178CA <CLIModeSupport.ab3@917> XINCLUDE "CLIModeSupport.ab3"
00017906 <CLIModeSupport.ab3@918> XINCLUDE "CLIModeSupport.ab3"
00017942 <CLIModeSupport.ab3@919> XINCLUDE "CLIModeSupport.ab3"
0001797E <CLIModeSupport.ab3@920> XINCLUDE "CLIModeSupport.ab3"
00017984 <CLIModeSupport.ab3@921> XINCLUDE "CLIModeSupport.ab3"
000179BE <CLIModeSupport.ab3@922> XINCLUDE "CLIModeSupport.ab3"
000179D0 <CLIModeSupport.ab3@927> XINCLUDE "CLIModeSupport.ab3"
000179E0 <CLIModeSupport.ab3@928> XINCLUDE "CLIModeSupport.ab3"
000179EC <CLIModeSupport.ab3@931> XINCLUDE "CLIModeSupport.ab3"
00017A06 <CLIModeSupport.ab3@932> XINCLUDE "CLIModeSupport.ab3"
00017A08 <CLIModeSupport.ab3@934> XINCLUDE "CLIModeSupport.ab3"
00017A26 <CLIModeSupport.ab3@935> XINCLUDE "CLIModeSupport.ab3"
00017A2C <CLIModeSupport.ab3@936> XINCLUDE "CLIModeSupport.ab3"
00017A56 <CLIModeSupport.ab3@937> XINCLUDE "CLIModeSupport.ab3"
00017A58 <CLIModeSupport.ab3@938> XINCLUDE "CLIModeSupport.ab3"
00017A62 <CLIModeSupport.ab3@940> XINCLUDE "CLIModeSupport.ab3"
00017A68 <CLIModeSupport.ab3@941> XINCLUDE "CLIModeSupport.ab3"
00017A7A <CLIModeSupport.ab3@944> XINCLUDE "CLIModeSupport.ab3"
00017AB4 <CLIModeSupport.ab3@961> XINCLUDE "CLIModeSupport.ab3"
00017ACE <CLIModeSupport.ab3@966> XINCLUDE "CLIModeSupport.ab3"
00017AE2 <CLIModeSupport.ab3@968> XINCLUDE "CLIModeSupport.ab3"
00017B4C <CLIModeSupport.ab3@969> XINCLUDE "CLIModeSupport.ab3"
00017B52 <CLIModeSupport.ab3@970> XINCLUDE "CLIModeSupport.ab3"
00017BBC <CLIModeSupport.ab3@971> XINCLUDE "CLIModeSupport.ab3"
00017BD0 <CLIModeSupport.ab3@974> XINCLUDE "CLIModeSupport.ab3"
00017C3A <CLIModeSupport.ab3@975> XINCLUDE "CLIModeSupport.ab3"
00017C70 <CLIModeSupport.ab3@976> XINCLUDE "CLIModeSupport.ab3"
00017C76 <CLIModeSupport.ab3@977> XINCLUDE "CLIModeSupport.ab3"
00017CE0 <CLIModeSupport.ab3@978> XINCLUDE "CLIModeSupport.ab3"
00017CF4 <CLIModeSupport.ab3@979> XINCLUDE "CLIModeSupport.ab3"
00017D2A <CLIModeSupport.ab3@980> XINCLUDE "CLIModeSupport.ab3"
00017D30 <CLIModeSupport.ab3@981> XINCLUDE "CLIModeSupport.ab3"
00017D66 <CLIModeSupport.ab3@982> XINCLUDE "CLIModeSupport.ab3"
00017D7A <CLIModeSupport.ab3@986> XINCLUDE "CLIModeSupport.ab3"
00017DE4 <CLIModeSupport.ab3@987> XINCLUDE "CLIModeSupport.ab3"
00017DEA <CLIModeSupport.ab3@988> XINCLUDE "CLIModeSupport.ab3"
00017E54 <CLIModeSupport.ab3@989> XINCLUDE "CLIModeSupport.ab3"
00017E68 <CLIModeSupport.ab3@992> XINCLUDE "CLIModeSupport.ab3"
00017E9E <CLIModeSupport.ab3@993> XINCLUDE "CLIModeSupport.ab3"
00017EA4 <CLIModeSupport.ab3@994> XINCLUDE "CLIModeSupport.ab3"
00017EDA <CLIModeSupport.ab3@995> XINCLUDE "CLIModeSupport.ab3"
00017EF4 <CLIModeSupport.ab3@1000> XINCLUDE "CLIModeSupport.ab3"
00017F08 <CLIModeSupport.ab3@1002> XINCLUDE "CLIModeSupport.ab3"
00017F72 <CLIModeSupport.ab3@1003> XINCLUDE "CLIModeSupport.ab3"
00017F78 <CLIModeSupport.ab3@1004> XINCLUDE "CLIModeSupport.ab3"
00017FE2 <CLIModeSupport.ab3@1005> XINCLUDE "CLIModeSupport.ab3"
00017FF6 <CLIModeSupport.ab3@1008> XINCLUDE "CLIModeSupport.ab3"
00018060 <CLIModeSupport.ab3@1009> XINCLUDE "CLIModeSupport.ab3"
00018066 <CLIModeSupport.ab3@1010> XINCLUDE "CLIModeSupport.ab3"
000180D0 <CLIModeSupport.ab3@1011> XINCLUDE "CLIModeSupport.ab3"
000180E4 <CLIModeSupport.ab3@1014> XINCLUDE "CLIModeSupport.ab3"
0001814E <CLIModeSupport.ab3@1015> XINCLUDE "CLIModeSupport.ab3"
00018154 <CLIModeSupport.ab3@1016> XINCLUDE "CLIModeSupport.ab3"
000181BE <CLIModeSupport.ab3@1017> XINCLUDE "CLIModeSupport.ab3"
000181D2 <CLIModeSupport.ab3@1020> XINCLUDE "CLIModeSupport.ab3"
0001823C <CLIModeSupport.ab3@1021> XINCLUDE "CLIModeSupport.ab3"
00018242 <CLIModeSupport.ab3@1022> XINCLUDE "CLIModeSupport.ab3"
000182AC <CLIModeSupport.ab3@1023> XINCLUDE "CLIModeSupport.ab3"
000182BE <CLIModeSupport.ab3@1028> XINCLUDE "CLIModeSupport.ab3"
000182CE <CLIModeSupport.ab3@1029> XINCLUDE "CLIModeSupport.ab3"
000182D8 <CLIModeSupport.ab3@1032> XINCLUDE "CLIModeSupport.ab3"
00018342 <CLIModeSupport.ab3@1033> XINCLUDE "CLIModeSupport.ab3"
00018348 <CLIModeSupport.ab3@1034> XINCLUDE "CLIModeSupport.ab3"
0001834E <CLIModeSupport.ab3@1035> XINCLUDE "CLIModeSupport.ab3"
000183B8 <CLIModeSupport.ab3@1036> XINCLUDE "CLIModeSupport.ab3"
000183C0 <CLIModeSupport.ab3@1037> XINCLUDE "CLIModeSupport.ab3"
000183CA <CLIModeSupport.ab3@1040> XINCLUDE "CLIModeSupport.ab3"
00018434 <CLIModeSupport.ab3@1041> XINCLUDE "CLIModeSupport.ab3"
0001846A <CLIModeSupport.ab3@1042> XINCLUDE "CLIModeSupport.ab3"
000184A8 <CLIModeSupport.ab3@1043> XINCLUDE "CLIModeSupport.ab3"
000184AC <CLIModeSupport.ab3@1044> XINCLUDE "CLIModeSupport.ab3"
000184E2 <CLIModeSupport.ab3@1045> XINCLUDE "CLIModeSupport.ab3"
000184E8 <CLIModeSupport.ab3@1046> XINCLUDE "CLIModeSupport.ab3"
000184EE <CLIModeSupport.ab3@1047> XINCLUDE "CLIModeSupport.ab3"
00018558 <CLIModeSupport.ab3@1049> XINCLUDE "CLIModeSupport.ab3"
0001858E <CLIModeSupport.ab3@1050> XINCLUDE "CLIModeSupport.ab3"
00018594 <CLIModeSupport.ab3@1052> XINCLUDE "CLIModeSupport.ab3"
000185C2 <CLIModeSupport.ab3@1056> XINCLUDE "CLIModeSupport.ab3"
000185C6 <CLIModeSupport.ab3@1057> XINCLUDE "CLIModeSupport.ab3"
000185EE <CLIModeSupport.ab3@1058> XINCLUDE "CLIModeSupport.ab3"
000185F4 <CLIModeSupport.ab3@1061> XINCLUDE "CLIModeSupport.ab3"
000185FA <CLIModeSupport.ab3@1062> XINCLUDE "CLIModeSupport.ab3"
00018600 <CLIModeSupport.ab3@1063> XINCLUDE "CLIModeSupport.ab3"
0001860A <CLIModeSupport.ab3@1064> XINCLUDE "CLIModeSupport.ab3"
00018614 <CLIModeSupport.ab3@1065> XINCLUDE "CLIModeSupport.ab3"
00018642 <CLIModeSupport.ab3@1067> XINCLUDE "CLIModeSupport.ab3"
0001866E <CLIModeSupport.ab3@1069> XINCLUDE "CLIModeSupport.ab3"
00018676 <CLIModeSupport.ab3@1070> XINCLUDE "CLIModeSupport.ab3"
000186DC <CLIModeSupport.ab3@1073> XINCLUDE "CLIModeSupport.ab3"
00018710 <CLIModeSupport.ab3@1074> XINCLUDE "CLIModeSupport.ab3"
00018716 <CLIModeSupport.ab3@1075> XINCLUDE "CLIModeSupport.ab3"
00018796 <CLIModeSupport.ab3@1076> XINCLUDE "CLIModeSupport.ab3"
000187A8 <CLIModeSupport.ab3@1078> XINCLUDE "CLIModeSupport.ab3"
0001880E <CLIModeSupport.ab3@1079> XINCLUDE "CLIModeSupport.ab3"
00018874 <CLIModeSupport.ab3@1080> XINCLUDE "CLIModeSupport.ab3"
0001887A <CLIModeSupport.ab3@1081> XINCLUDE "CLIModeSupport.ab3"
00018882 <CLIModeSupport.ab3@1082> XINCLUDE "CLIModeSupport.ab3"
00018884 <CLIModeSupport.ab3@1086> XINCLUDE "CLIModeSupport.ab3"
000188A2 <CLIModeSupport.ab3@1087> XINCLUDE "CLIModeSupport.ab3"
000188E0 <CLIModeSupport.ab3@1088> XINCLUDE "CLIModeSupport.ab3"
0001891E <CLIModeSupport.ab3@1089> XINCLUDE "CLIModeSupport.ab3"
00018924 <CLIModeSupport.ab3@1091> XINCLUDE "CLIModeSupport.ab3"
0001892A <CLIModeSupport.ab3@1092> XINCLUDE "CLIModeSupport.ab3"
00018930 <CLIModeSupport.ab3@1093> XINCLUDE "CLIModeSupport.ab3"
0001893A <CLIModeSupport.ab3@1096> XINCLUDE "CLIModeSupport.ab3"
00018940 <CLIModeSupport.ab3@1097> XINCLUDE "CLIModeSupport.ab3"
00018946 <CLIModeSupport.ab3@1098> XINCLUDE "CLIModeSupport.ab3"
0001894C <CLIModeSupport.ab3@1099> XINCLUDE "CLIModeSupport.ab3"
00018952 <CLIModeSupport.ab3@1100> XINCLUDE "CLIModeSupport.ab3"
00018956 <CLIModeSupport.ab3@1101> XINCLUDE "CLIModeSupport.ab3"
00018960 <CLIModeSupport.ab3@1102> XINCLUDE "CLIModeSupport.ab3"
00018964 <CLIModeSupport.ab3@1103> XINCLUDE "CLIModeSupport.ab3"
0001898E <CLIModeSupport.ab3@1106> XINCLUDE "CLIModeSupport.ab3"
00018990 <CLIModeSupport.ab3@1107> XINCLUDE "CLIModeSupport.ab3"
00018996 <CLIModeSupport.ab3@1109> XINCLUDE "CLIModeSupport.ab3"
0001899A <CLIModeSupport.ab3@1110> XINCLUDE "CLIModeSupport.ab3"
000189A0 <CLIModeSupport.ab3@1112> XINCLUDE "CLIModeSupport.ab3"
000189A4 <CLIModeSupport.ab3@1113> XINCLUDE "CLIModeSupport.ab3"
000189B4 <CLIModeSupport.ab3@1115> XINCLUDE "CLIModeSupport.ab3"
00018A0E <CLIModeSupport.ab3@1116> XINCLUDE "CLIModeSupport.ab3"
00018A20 <CLIModeSupport.ab3@1118> XINCLUDE "CLIModeSupport.ab3"
00018A8A <CLIModeSupport.ab3@1119> XINCLUDE "CLIModeSupport.ab3"
00018A90 <CLIModeSupport.ab3@1120> XINCLUDE "CLIModeSupport.ab3"
00018ADA <CLIModeSupport.ab3@1121> XINCLUDE "CLIModeSupport.ab3"
00018AE8 <CLIModeSupport.ab3@1124> XINCLUDE "CLIModeSupport.ab3"
00018B14 <CLIModeSupport.ab3@1125> XINCLUDE "CLIModeSupport.ab3"
00018BBA <CLIModeSupport.ab3@1126> XINCLUDE "CLIModeSupport.ab3"
00018BD8 <CLIModeSupport.ab3@1127> XINCLUDE "CLIModeSupport.ab3"
00018BDE <CLIModeSupport.ab3@1128> XINCLUDE "CLIModeSupport.ab3"
00018C08 <CLIModeSupport.ab3@1129> XINCLUDE "CLIModeSupport.ab3"
00018C0E <CLIModeSupport.ab3@1131> XINCLUDE "CLIModeSupport.ab3"
00018C46 <CLIModeSupport.ab3@1132> XINCLUDE "CLIModeSupport.ab3"
00018C52 <CLIModeSupport.ab3@1135> XINCLUDE "CLIModeSupport.ab3"
00018C6C <CLIModeSupport.ab3@1136> XINCLUDE "CLIModeSupport.ab3"
00018C78 <CLIModeSupport.ab3@1138> XINCLUDE "CLIModeSupport.ab3"
00018C92 <CLIModeSupport.ab3@1140> XINCLUDE "CLIModeSupport.ab3"
00018CBC <CLIModeSupport.ab3@1144> XINCLUDE "CLIModeSupport.ab3"
00018CE0 <CLIModeSupport.ab3@1145> XINCLUDE "CLIModeSupport.ab3"
00018D1E <CLIModeSupport.ab3@1146> XINCLUDE "CLIModeSupport.ab3"
00018D22 <CLIModeSupport.ab3@1147> XINCLUDE "CLIModeSupport.ab3"
00018D60 <CLIModeSupport.ab3@1149> XINCLUDE "CLIModeSupport.ab3"
00018D64 <CLIModeSupport.ab3@1150> XINCLUDE "CLIModeSupport.ab3"
00018DA2 <CLIModeSupport.ab3@1153> XINCLUDE "CLIModeSupport.ab3"
00018DE0 <CLIModeSupport.ab3@1154> XINCLUDE "CLIModeSupport.ab3"
00018DE2 <CLIModeSupport.ab3@1155> XINCLUDE "CLIModeSupport.ab3"
00018E16 <CLIModeSupport.ab3@1156> XINCLUDE "CLIModeSupport.ab3"
00018E1C <CLIModeSupport.ab3@1158> XINCLUDE "CLIModeSupport.ab3"
00018E60 <CLIModeSupport.ab3@1159> XINCLUDE "CLIModeSupport.ab3"
00018E72 <CLIModeSupport.ab3@1160> XINCLUDE "CLIModeSupport.ab3"
00018E7A <CLIModeSupport.ab3@1162> XINCLUDE "CLIModeSupport.ab3"
00018E80 <CLIModeSupport.ab3@1163> XINCLUDE "CLIModeSupport.ab3"
00018E8A <CLIModeSupport.ab3@1165> XINCLUDE "CLIModeSupport.ab3"
00018E98 <CLIModeSupport.ab3@1166> XINCLUDE "CLIModeSupport.ab3"
00018E9E <CLIModeSupport.ab3@1167> XINCLUDE "CLIModeSupport.ab3"
00018EC6 <CLIModeSupport.ab3@1168> XINCLUDE "CLIModeSupport.ab3"
00018EE0 <CLIModeSupport.ab3@1169> XINCLUDE "CLIModeSupport.ab3"
00018EEA <CLIModeSupport.ab3@1170> XINCLUDE "CLIModeSupport.ab3"
00018EF0 <CLIModeSupport.ab3@1171> XINCLUDE "CLIModeSupport.ab3"
00018F0E <CLIModeSupport.ab3@1173> XINCLUDE "CLIModeSupport.ab3"
00018F18 <CLIModeSupport.ab3@1174> XINCLUDE "CLIModeSupport.ab3"
00018F1E <CLIModeSupport.ab3@1175> XINCLUDE "CLIModeSupport.ab3"
00018F24 <CLIModeSupport.ab3@1176> XINCLUDE "CLIModeSupport.ab3"
00018F2E <CLIModeSupport.ab3@1177> XINCLUDE "CLIModeSupport.ab3"
00018F3C <CLIModeSupport.ab3@1178> XINCLUDE "CLIModeSupport.ab3"
00018F42 <CLIModeSupport.ab3@1179> XINCLUDE "CLIModeSupport.ab3"
00018F52 <CLIModeSupport.ab3@1181> XINCLUDE "CLIModeSupport.ab3"
00018F7E <CLIModeSupport.ab3@1182> XINCLUDE "CLIModeSupport.ab3"
00018F94 <CLIModeSupport.ab3@1183> XINCLUDE "CLIModeSupport.ab3"
00018F9E <CLIModeSupport.ab3@1184> XINCLUDE "CLIModeSupport.ab3"
00018FA4 <CLIModeSupport.ab3@1185> XINCLUDE "CLIModeSupport.ab3"
00018FFC <CLIModeSupport.ab3@1187> XINCLUDE "CLIModeSupport.ab3"
0001906A <CLIModeSupport.ab3@1189> XINCLUDE "CLIModeSupport.ab3"
00019082 <CLIModeSupport.ab3@1190> XINCLUDE "CLIModeSupport.ab3"
00019088 <CLIModeSupport.ab3@1191> XINCLUDE "CLIModeSupport.ab3"
000190C0 <CLIModeSupport.ab3@1192> XINCLUDE "CLIModeSupport.ab3"
000190EE <CLIModeSupport.ab3@1194> XINCLUDE "CLIModeSupport.ab3"
00019118 <CLIModeSupport.ab3@1195> XINCLUDE "CLIModeSupport.ab3"
00019122 <CLIModeSupport.ab3@1197> XINCLUDE "CLIModeSupport.ab3"
0001914A <CLIModeSupport.ab3@1198> XINCLUDE "CLIModeSupport.ab3"
00019174 <CLIModeSupport.ab3@1199> XINCLUDE "CLIModeSupport.ab3"
00019216 <CLIModeSupport.ab3@1200> XINCLUDE "CLIModeSupport.ab3"
00019224 <CLIModeSupport.ab3@1201> XINCLUDE "CLIModeSupport.ab3"
00019274 <CLIModeSupport.ab3@1202> XINCLUDE "CLIModeSupport.ab3"
00019284 <CLIModeSupport.ab3@1203> XINCLUDE "CLIModeSupport.ab3"
0001934C <CLIModeSupport.ab3@1204> XINCLUDE "CLIModeSupport.ab3"
00019380 <CLIModeSupport.ab3@1206> XINCLUDE "CLIModeSupport.ab3"
000193B4 <CLIModeSupport.ab3@1207> XINCLUDE "CLIModeSupport.ab3"
000193E8 <CLIModeSupport.ab3@1208> XINCLUDE "CLIModeSupport.ab3"
0001941C <CLIModeSupport.ab3@1209> XINCLUDE "CLIModeSupport.ab3"
00019450 <CLIModeSupport.ab3@1210> XINCLUDE "CLIModeSupport.ab3"
00019484 <CLIModeSupport.ab3@1211> XINCLUDE "CLIModeSupport.ab3"
000194B8 <CLIModeSupport.ab3@1212> XINCLUDE "CLIModeSupport.ab3"
000194EC <CLIModeSupport.ab3@1213> XINCLUDE "CLIModeSupport.ab3"
000194EE <CLIModeSupport.ab3@1215> XINCLUDE "CLIModeSupport.ab3"
0001952C <CLIModeSupport.ab3@1216> XINCLUDE "CLIModeSupport.ab3"
00019530 <CLIModeSupport.ab3@1217> XINCLUDE "CLIModeSupport.ab3"
0001956E <CLIModeSupport.ab3@1220> XINCLUDE "CLIModeSupport.ab3"
000195AC <CLIModeSupport.ab3@1221> XINCLUDE "CLIModeSupport.ab3"
000195AE <CLIModeSupport.ab3@1222> XINCLUDE "CLIModeSupport.ab3"
000195B4 <CLIModeSupport.ab3@1223> XINCLUDE "CLIModeSupport.ab3"
000195B8 <CLIModeSupport.ab3@1224> XINCLUDE "CLIModeSupport.ab3"
000195BA <CLIModeSupport.ab3@1226> XINCLUDE "CLIModeSupport.ab3"
000195F8 <CLIModeSupport.ab3@1227> XINCLUDE "CLIModeSupport.ab3"
00019636 <CLIModeSupport.ab3@1228> XINCLUDE "CLIModeSupport.ab3"
00019638 <CLIModeSupport.ab3@1229> XINCLUDE "CLIModeSupport.ab3"
0001963A <CLIModeSupport.ab3@1230> XINCLUDE "CLIModeSupport.ab3"
0001963C <CLIModeSupport.ab3@1231> XINCLUDE "CLIModeSupport.ab3"
00019642 <CLIModeSupport.ab3@1232> XINCLUDE "CLIModeSupport.ab3"
00019646 <CLIModeSupport.ab3@1233> XINCLUDE "CLIModeSupport.ab3"
00019656 <CLIModeSupport.ab3@1235> XINCLUDE "CLIModeSupport.ab3"
0001966E <CLIModeSupport.ab3@1236> XINCLUDE "CLIModeSupport.ab3"
00019686 <CLIModeSupport.ab3@1237> XINCLUDE "CLIModeSupport.ab3"
0001969E <CLIModeSupport.ab3@1238> XINCLUDE "CLIModeSupport.ab3"
000196C8 <CLIModeSupport.ab3@1240> XINCLUDE "CLIModeSupport.ab3"
000196F2 <CLIModeSupport.ab3@1241> XINCLUDE "CLIModeSupport.ab3"
00019720 <CLIModeSupport.ab3@1243> XINCLUDE "CLIModeSupport.ab3"
00019724 <CLIModeSupport.ab3@1244> XINCLUDE "CLIModeSupport.ab3"
0001974C <CLIModeSupport.ab3@1245> XINCLUDE "CLIModeSupport.ab3"
0001974E <CLIModeSupport.ab3@1246> XINCLUDE "CLIModeSupport.ab3"
0001978C <CLIModeSupport.ab3@1247> XINCLUDE "CLIModeSupport.ab3"
00019790 <CLIModeSupport.ab3@1248> XINCLUDE "CLIModeSupport.ab3"
000197CE <CLIModeSupport.ab3@1249> XINCLUDE "CLIModeSupport.ab3"
000197D2 <CLIModeSupport.ab3@1250> XINCLUDE "CLIModeSupport.ab3"
00019810 <CLIModeSupport.ab3@1251> XINCLUDE "CLIModeSupport.ab3"
00019814 <CLIModeSupport.ab3@1252> XINCLUDE "CLIModeSupport.ab3"
00019852 <CLIModeSupport.ab3@1254> XINCLUDE "CLIModeSupport.ab3"
00019856 <CLIModeSupport.ab3@1255> XINCLUDE "CLIModeSupport.ab3"
0001987C <CLIModeSupport.ab3@1257> XINCLUDE "CLIModeSupport.ab3"
000198A2 <CLIModeSupport.ab3@1258> XINCLUDE "CLIModeSupport.ab3"
000198C8 <CLIModeSupport.ab3@1259> XINCLUDE "CLIModeSupport.ab3"
000198EE <CLIModeSupport.ab3@1260> XINCLUDE "CLIModeSupport.ab3"
00019914 <CLIModeSupport.ab3@1261> XINCLUDE "CLIModeSupport.ab3"
0001996A <CLIModeSupport.ab3@1262> XINCLUDE "CLIModeSupport.ab3"
000199C0 <CLIModeSupport.ab3@1263> XINCLUDE "CLIModeSupport.ab3"
00019A0E <CLIModeSupport.ab3@1264> XINCLUDE "CLIModeSupport.ab3"
00019A64 <CLIModeSupport.ab3@1265> XINCLUDE "CLIModeSupport.ab3"
00019A8A <CLIModeSupport.ab3@1266> XINCLUDE "CLIModeSupport.ab3"
00019AB0 <CLIModeSupport.ab3@1267> XINCLUDE "CLIModeSupport.ab3"
00019AD6 <CLIModeSupport.ab3@1268> XINCLUDE "CLIModeSupport.ab3"
00019B2C <CLIModeSupport.ab3@1269> XINCLUDE "CLIModeSupport.ab3"
00019B7A <CLIModeSupport.ab3@1270> XINCLUDE "CLIModeSupport.ab3"
00019BC8 <CLIModeSupport.ab3@1271> XINCLUDE "CLIModeSupport.ab3"
00019C82 <CLIModeSupport.ab3@1272> XINCLUDE "CLIModeSupport.ab3"
00019CD8 <CLIModeSupport.ab3@1273> XINCLUDE "CLIModeSupport.ab3"
00019CFE <CLIModeSupport.ab3@1274> XINCLUDE "CLIModeSupport.ab3"
00019D24 <CLIModeSupport.ab3@1275> XINCLUDE "CLIModeSupport.ab3"
00019D4A <CLIModeSupport.ab3@1276> XINCLUDE "CLIModeSupport.ab3"
00019DA0 <CLIModeSupport.ab3@1277> XINCLUDE "CLIModeSupport.ab3"
00019DF6 <CLIModeSupport.ab3@1278> XINCLUDE "CLIModeSupport.ab3"
00019E44 <CLIModeSupport.ab3@1279> XINCLUDE "CLIModeSupport.ab3"
00019E92 <CLIModeSupport.ab3@1280> XINCLUDE "CLIModeSupport.ab3"
00019EE0 <CLIModeSupport.ab3@1281> XINCLUDE "CLIModeSupport.ab3"
00019F2E <CLIModeSupport.ab3@1282> XINCLUDE "CLIModeSupport.ab3"
00019F7C <CLIModeSupport.ab3@1283> XINCLUDE "CLIModeSupport.ab3"
00019FCA <CLIModeSupport.ab3@1284> XINCLUDE "CLIModeSupport.ab3"
0001A018 <CLIModeSupport.ab3@1285> XINCLUDE "CLIModeSupport.ab3"
0001A03E <CLIModeSupport.ab3@1286> XINCLUDE "CLIModeSupport.ab3"
0001A064 <CLIModeSupport.ab3@1287> XINCLUDE "CLIModeSupport.ab3"
0001A08A <CLIModeSupport.ab3@1288> XINCLUDE "CLIModeSupport.ab3"
0001A0D8 <CLIModeSupport.ab3@1289> XINCLUDE "CLIModeSupport.ab3"
0001A126 <CLIModeSupport.ab3@1290> XINCLUDE "CLIModeSupport.ab3"
0001A17C <CLIModeSupport.ab3@1291> XINCLUDE "CLIModeSupport.ab3"
0001A1CA <CLIModeSupport.ab3@1292> XINCLUDE "CLIModeSupport.ab3"
0001A218 <CLIModeSupport.ab3@1293> XINCLUDE "CLIModeSupport.ab3"
0001A266 <CLIModeSupport.ab3@1294> XINCLUDE "CLIModeSupport.ab3"
0001A28C <CLIModeSupport.ab3@1295> XINCLUDE "CLIModeSupport.ab3"
0001A2B2 <CLIModeSupport.ab3@1296> XINCLUDE "CLIModeSupport.ab3"
0001A2D8 <CLIModeSupport.ab3@1297> XINCLUDE "CLIModeSupport.ab3"
0001A310 <CLIModeSupport.ab3@1298> XINCLUDE "CLIModeSupport.ab3"
0001A338 <CLIModeSupport.ab3@1299> XINCLUDE "CLIModeSupport.ab3"
0001A34C <CLIModeSupport.ab3@1300> XINCLUDE "CLIModeSupport.ab3"
0001A3C0 <CLIModeSupport.ab3@1301> XINCLUDE "CLIModeSupport.ab3"
0001A406 <CLIModeSupport.ab3@1302> XINCLUDE "CLIModeSupport.ab3"
0001A4B4 <CLIModeSupport.ab3@1303> XINCLUDE "CLIModeSupport.ab3"
0001A520 <CLIModeSupport.ab3@1304> XINCLUDE "CLIModeSupport.ab3"
0001A530 <CLIModeSupport.ab3@1305> XINCLUDE "CLIModeSupport.ab3"
0001A556 <CLIModeSupport.ab3@1307> XINCLUDE "CLIModeSupport.ab3"
0001A560 <CLIModeSupport.ab3@1309> XINCLUDE "CLIModeSupport.ab3"
0001A58A <CLIModeSupport.ab3@1310> XINCLUDE "CLIModeSupport.ab3"
0001A590 <CLIModeSupport.ab3@1311> XINCLUDE "CLIModeSupport.ab3"
0001A5A0 <CLIModeSupport.ab3@1313> XINCLUDE "CLIModeSupport.ab3"
0001A640 <CLIModeSupport.ab3@1315> XINCLUDE "CLIModeSupport.ab3"
0001A680 <CLIModeSupport.ab3@1316> XINCLUDE "CLIModeSupport.ab3"
0001A686 <CLIModeSupport.ab3@1318> XINCLUDE "CLIModeSupport.ab3"
0001A6E8 <CLIModeSupport.ab3@1319> XINCLUDE "CLIModeSupport.ab3"
0001A6F2 <CLIModeSupport.ab3@1321> XINCLUDE "CLIModeSupport.ab3"
0001A6FC <CLIModeSupport.ab3@1323> XINCLUDE "CLIModeSupport.ab3"
0001A716 <CLIModeSupport.ab3@1324> XINCLUDE "CLIModeSupport.ab3"
0001A738 <CLIModeSupport.ab3@1400> XINCLUDE "CLIModeSupport.ab3"
0001A75A <CLIModeSupport.ab3@1401> XINCLUDE "CLIModeSupport.ab3"
0001A7B4 <CLIModeSupport.ab3@1402> XINCLUDE "CLIModeSupport.ab3"
0001A7D6 <CLIModeSupport.ab3@1403> XINCLUDE "CLIModeSupport.ab3"
0001A7F8 <CLIModeSupport.ab3@1404> XINCLUDE "CLIModeSupport.ab3"
0001A852 <CLIModeSupport.ab3@1405> XINCLUDE "CLIModeSupport.ab3"
0001A894 <CLIModeSupport.ab3@1406> XINCLUDE "CLIModeSupport.ab3"
0001A89A <CLIModeSupport.ab3@1408> XINCLUDE "CLIModeSupport.ab3"
0001A8A8 <CLIModeSupport.ab3@1409> XINCLUDE "CLIModeSupport.ab3"
0001A8AE <CLIModeSupport.ab3@1411> XINCLUDE "CLIModeSupport.ab3"
0001A8C2 <CLIModeSupport.ab3@1412> XINCLUDE "CLIModeSupport.ab3"
0001A8CC <CLIModeSupport.ab3@1413> XINCLUDE "CLIModeSupport.ab3"
0001A946 <CLIModeSupport.ab3@1414> XINCLUDE "CLIModeSupport.ab3"
0001A950 <CLIModeSupport.ab3@1415> XINCLUDE "CLIModeSupport.ab3"
0001A956 <CLIModeSupport.ab3@1416> XINCLUDE "CLIModeSupport.ab3"
0001A96A <CLIModeSupport.ab3@1419> XINCLUDE "CLIModeSupport.ab3"
0001A974 <CLIModeSupport.ab3@1420> XINCLUDE "CLIModeSupport.ab3"
0001A9F4 <CLIModeSupport.ab3@1421> XINCLUDE "CLIModeSupport.ab3"
0001A9FE <CLIModeSupport.ab3@1422> XINCLUDE "CLIModeSupport.ab3"
0001AA04 <CLIModeSupport.ab3@1423> XINCLUDE "CLIModeSupport.ab3"
0001AA18 <CLIModeSupport.ab3@1426> XINCLUDE "CLIModeSupport.ab3"
0001AA22 <CLIModeSupport.ab3@1427> XINCLUDE "CLIModeSupport.ab3"
0001AA6A <CLIModeSupport.ab3@1428> XINCLUDE "CLIModeSupport.ab3"
0001AA78 <CLIModeSupport.ab3@1429> XINCLUDE "CLIModeSupport.ab3"
0001AA9E <CLIModeSupport.ab3@1430> XINCLUDE "CLIModeSupport.ab3"
0001AAA8 <CLIModeSupport.ab3@1431> XINCLUDE "CLIModeSupport.ab3"
0001AB12 <CLIModeSupport.ab3@1432> XINCLUDE "CLIModeSupport.ab3"
0001ABE4 <CLIModeSupport.ab3@1433> XINCLUDE "CLIModeSupport.ab3"
0001ABEE <CLIModeSupport.ab3@1434> XINCLUDE "CLIModeSupport.ab3"
0001ABF4 <CLIModeSupport.ab3@1435> XINCLUDE "CLIModeSupport.ab3"
0001ABFE <CLIModeSupport.ab3@1437> XINCLUDE "CLIModeSupport.ab3"
0001AC04 <CLIModeSupport.ab3@1438> XINCLUDE "CLIModeSupport.ab3"
0001AC18 <CLIModeSupport.ab3@1441> XINCLUDE "CLIModeSupport.ab3"
0001AC22 <CLIModeSupport.ab3@1442> XINCLUDE "CLIModeSupport.ab3"
0001AC6A <CLIModeSupport.ab3@1443> XINCLUDE "CLIModeSupport.ab3"
0001AC74 <CLIModeSupport.ab3@1444> XINCLUDE "CLIModeSupport.ab3"
0001AC7A <CLIModeSupport.ab3@1445> XINCLUDE "CLIModeSupport.ab3"
0001AC8E <CLIModeSupport.ab3@1448> XINCLUDE "CLIModeSupport.ab3"
0001ACB4 <CLIModeSupport.ab3@1449> XINCLUDE "CLIModeSupport.ab3"
0001ACC8 <CLIModeSupport.ab3@1452> XINCLUDE "CLIModeSupport.ab3"
0001ACEE <CLIModeSupport.ab3@1453> XINCLUDE "CLIModeSupport.ab3"
0001AD02 <CLIModeSupport.ab3@1456> XINCLUDE "CLIModeSupport.ab3"
0001AD28 <CLIModeSupport.ab3@1457> XINCLUDE "CLIModeSupport.ab3"
0001AD3C <CLIModeSupport.ab3@1460> XINCLUDE "CLIModeSupport.ab3"
0001AD46 <CLIModeSupport.ab3@1461> XINCLUDE "CLIModeSupport.ab3"
0001AD74 <CLIModeSupport.ab3@1462> XINCLUDE "CLIModeSupport.ab3"
0001ADC4 <CLIModeSupport.ab3@1463> XINCLUDE "CLIModeSupport.ab3"
0001ADE4 <CLIModeSupport.ab3@1464> XINCLUDE "CLIModeSupport.ab3"
0001ADFC <CLIModeSupport.ab3@1465> XINCLUDE "CLIModeSupport.ab3"
0001AEE0 <CLIModeSupport.ab3@1466> XINCLUDE "CLIModeSupport.ab3"
0001AEEA <CLIModeSupport.ab3@1467> XINCLUDE "CLIModeSupport.ab3"
0001AEF0 <CLIModeSupport.ab3@1468> XINCLUDE "CLIModeSupport.ab3"
0001AEF2 <CLIModeSupport.ab3@1470> XINCLUDE "CLIModeSupport.ab3"
0001AF06 <CLIModeSupport.ab3@1471> XINCLUDE "CLIModeSupport.ab3"
0001AF38 <CLIModeSupport.ab3@1474> XINCLUDE "CLIModeSupport.ab3"
0001AF3E <CLIModeSupport.ab3@1475> XINCLUDE "CLIModeSupport.ab3"
0001AF82 <CLIModeSupport.ab3@1476> XINCLUDE "CLIModeSupport.ab3"
0001AF94 <CLIModeSupport.ab3@1477> XINCLUDE "CLIModeSupport.ab3"
0001AFA6 <CLIModeSupport.ab3@1478> XINCLUDE "CLIModeSupport.ab3"
0001AFB0 <CLIModeSupport.ab3@1479> XINCLUDE "CLIModeSupport.ab3"
0001AFB6 <CLIModeSupport.ab3@1480> XINCLUDE "CLIModeSupport.ab3"
0001AFC0 <CLIModeSupport.ab3@1482> XINCLUDE "CLIModeSupport.ab3"
0001AFDA <CLIModeSupport.ab3@1483> XINCLUDE "CLIModeSupport.ab3"
0001AFDA <AmiBlitz3.ab3@93> XINCLUDE "CLIModeSupport.ab3"
0001B05A <AmiBlitz3.ab3@98> dynassign.s = dos_GetToolString{"ASSIGN",default_assign$}       ; replaced hardcoded path  tomsmart1 2012 03 09
0001B092 <AmiBlitz3.ab3@99> If dynassign <> ""
0001B0A8 <AmiBlitz3.ab3@100>     *AssignSema.SignalSemaphore = FindSemaphore_(&dynassign)    ; does it already exist?
0001B0B2 <AmiBlitz3.ab3@101>     If *AssignSema
0001B0C2 <AmiBlitz3.ab3@102>       ObtainSemaphoreShared_ *AssignSema
0001B0C8 <AmiBlitz3.ab3@103>     Else                                                        ; no, create one...
0001B0E8 <AmiBlitz3.ab3@104>       *AssignSema = AllocVec_ (SizeOf.SignalSemaphore,#MEMF_PUBLIC|#MEMF_CLEAR)
0001B0F2 <AmiBlitz3.ab3@105>       If *AssignSema
0001B102 <AmiBlitz3.ab3@106>         InitSemaphore_ *AssignSema
0001B136 <AmiBlitz3.ab3@108>         *AssignSema\ss_Link\ln_Name = AllocVec_(FLen(dynassign)+1,#MEMF_PUBLIC|#MEMF_CLEAR)
0001B148 <AmiBlitz3.ab3@109>         If *AssignSema\ss_Link\ln_Name
0001B184 <AmiBlitz3.ab3@110>           Poke.s  *AssignSema\ss_Link\ln_Name,dynassign
0001B190 <AmiBlitz3.ab3@112>         *AssignSema\ss_Link\ln_Pri  = 1
0001B19C <AmiBlitz3.ab3@113>         *AssignSema\ss_Link\ln_Type = #NT_SIGNALSEM
0001B1AC <AmiBlitz3.ab3@115>         AddSemaphore_ *AssignSema
0001B1BC <AmiBlitz3.ab3@116>         ObtainSemaphoreShared_ *AssignSema
0001B208 <AmiBlitz3.ab3@122>   mydir.s = dos_GetProgDir{"Sys:"}
0001B268 <AmiBlitz3.ab3@123>   If dos_SetAssign{dynassign,mydir,False}
0001B2FC <AmiBlitz3.ab3@124>     dos_AddAssign{"LIBS:",dos_AddPart{dynassign,"Libs"}}
0001B334 <AmiBlitz3.ab3@127>   Poke$ ?str_blitz3assign,dynassign
0001B3B6 <AmiBlitz3.ab3@128>   Poke$ ?str_defaultdbug,dos_AddPart{dynassign,"Debug/DefaultDBug"}
0001B438 <AmiBlitz3.ab3@131>   Poke$ ?str_path_acidlibs,dos_AddPart{dynassign, "BlitzLibs/AcidLibs"}
0001B4BA <AmiBlitz3.ab3@132>   Poke$ ?str_path_deflibs ,dos_AddPart{dynassign, "BlitzLibs/DefLibs" }
0001B53C <AmiBlitz3.ab3@133>   Poke$ ?str_path_userlibs,dos_AddPart{dynassign, "BlitzLibs/UserLibs"}
0001B5BE <AmiBlitz3.ab3@134>   Poke$ ?str_path_includes,dos_AddPart{dynassign, "Sourcecodes/Includes"}
0001B632 <AmiBlitz3.ab3@135>   my_systemdir$    = dos_AddPart{dynassign, "System"}
0001B6A6 <AmiBlitz3.ab3@136>   my_residentsdir$ = dos_AddPart{dynassign, "BlitzLibs/Residents"}
0001B71A <AmiBlitz3.ab3@137>   my_blitzlibsdir$ = dos_AddPart{dynassign, "BlitzLibs"}
0001B748 <AmiBlitz3.ab3@138>   dos_CreateDir{my_blitzlibsdir$}
0001B76C <AmiBlitz3.ab3@139>   dos_CreateDir{Peek$(?str_path_userlibs)}
0001B79A <AmiBlitz3.ab3@140>   dos_CreateDir{my_residentsdir$}
0001B7C8 <AmiBlitz3.ab3@141>   dos_CreateDir{my_systemdir$}
0001B892 <AmiBlitz3.ab3@147> pedfile$ = dos_GetToolString{"EDITOR",dos_AddPart{my_systemdir$,"PED"}}
0001B8CA <AmiBlitz3.ab3@148> Poke.s ?str_pedfile,pedfile$
0001B908 <AmiBlitz3.ab3@150> If dos_GetToolState{"START_WITHOUT_LIBS"} = -1
0001B918 <AmiBlitz3.ab3@151>   Poke.b ?start_without_libs,1
0001B91E <AmiBlitz3.ab3@152> Else
0001B92E <AmiBlitz3.ab3@153>   Poke.b ?start_without_libs,0
0001B96C <AmiBlitz3.ab3@156> If dos_GetToolState{"ONEPASSCOMPILING"} = -1
0001B972 <AmiBlitz3.ab3@157>   OnePassCompiling.l = True
0001B978 <AmiBlitz3.ab3@158> Else
0001B97E <AmiBlitz3.ab3@159>   OnePassCompiling   = False
0001B9A4 <AmiBlitz3.ab3@162> !TRANS_INIT{"AmiBlitz3"}     ; init localization via translation.include
0001B9D2 <AmiBlitz3.ab3@167> If ( FindResident_("MorphOS") )
0001B9E2 <AmiBlitz3.ab3@168>   Poke.b ?MorphOS,1      ; set it to use CacheClear_E
0001B9E8 <AmiBlitz3.ab3@169> Else
0001B9F8 <AmiBlitz3.ab3@170>   Poke.b ?MorphOS,0      ; set it to use CacheClear_U
0001B9FE <AmiBlitz3.ab3@175>  releaseexe.l               = False
0001BA04 <AmiBlitz3.ab3@176>  releasedbg_save.w          = 0
0001BA0A <AmiBlitz3.ab3@177>  releasemakesmall_save.b    = 0
0001BA10 <AmiBlitz3.ab3@178>  releasefuncoptimize_save.b = 0
0001BA16 <AmiBlitz3.ab3@179>  releasedebugger_save.b     = 0
0001BA2C <AmiBlitz3.ab3@182> 
0001BA7C <AmiBlitz3.ab3@183>  comstatusstr   = !TRANS{"Initializing Compiler..."} ;default settings
0001BA84 <AmiBlitz3.ab3@184>  calcpro.l      = 0
0001BA8C <AmiBlitz3.ab3@185>  calcpro_old.l  = 0
0001BA98 <AmiBlitz3.ab3@186>  typ_old.l      = -1
0001BAA4 <AmiBlitz3.ab3@187>  pass_old.l     = -1
0001BAAA <AmiBlitz3.ab3@188>  update_comstatus_gui.b = False ; for the first
0001BAC0 <AmiBlitz3.ab3@192> MaxLen dbg_detokenlinesBuffer.s = #MAX_dbg_detokenlinesBufferSize
0001BACC <AmiBlitz3.ab3@193> dbg_fid.l = -1 ; no debug file id yet!
0001BADE <AmiBlitz3.ab3@196> Poke.l ?maxerrorcount,#defaultmaxerrorcount                ; set the default value  tomsmart1
0001BAE8 <AmiBlitz3.ab3@198> If CLIMode
0001BAEE <AmiBlitz3.ab3@201>   err.l      = False                                       ; indicate that an error has occured
0001BAF4 <AmiBlitz3.ab3@202>   showhelp.l = False                                       ; show the CLI tool's help
0001BB4C <AmiBlitz3.ab3@205>   cli_progpath.s      = dos_GetProgDir{default_assign$}    ; replaced hardcoded path  tomsmart1 2012 03 09
0001BB74 <AmiBlitz3.ab3@206>   cli_sourcefile.s    = ""
0001BB9C <AmiBlitz3.ab3@207>   cli_exefile.s       = ""
0001BBC4 <AmiBlitz3.ab3@208>   cli_savefile.s      = ""
0001BBEC <AmiBlitz3.ab3@209>   cli_dumpfile.s      = ""
0001BC14 <AmiBlitz3.ab3@210>   cli_includepath.s   = ""
0001BC3C <AmiBlitz3.ab3@211>   cli_blitzlibpath.s  = ""
0001BC42 <AmiBlitz3.ab3@212>   cli_debuginfo.l     = False
0001BC48 <AmiBlitz3.ab3@213>   cli_run.l           = False
0001BC50 <AmiBlitz3.ab3@214>   cli_dumpflags.l     = $FFFFFFFF
0001BC78 <AmiBlitz3.ab3@215>   cli_info.s          = ""
0001BC7E <AmiBlitz3.ab3@216>   cli_release.l       = False
0001BC88 <AmiBlitz3.ab3@217>   cli_numargs.l       = dos_GetNumArgs{}
0001BC8E <AmiBlitz3.ab3@218>   cli_gui.l           = False
0001BC96 <AmiBlitz3.ab3@219>   cli_dumpform.l      = 1 ; 0 = bin, 1 = ASCII
0001BC9E <AmiBlitz3.ab3@220>   cli_verbose.l       = 1
0001BCA6 <AmiBlitz3.ab3@221>   cli_comdbgflags.l   = $00000000             ; added to support compiler and debugger settings via CLI  tomsmart1
0001BCAE <AmiBlitz3.ab3@222>   cli_comstrbufsize.l = 0
0001BCB6 <AmiBlitz3.ab3@223>   cli_exestacksize.l  = 0
0001BCBE <AmiBlitz3.ab3@224>   cli_maxerrors.l     = 0                     ; added to make maxerrorcount changable in CLIMode  tomsmart1
0001BCC4 <AmiBlitz3.ab3@225>   OnePassCompiling    = False
0001BCDC <AmiBlitz3.ab3@226>   If cli_numargs=0 Then showhelp=True
0001BD0C <AmiBlitz3.ab3@230>     arg.s = dos_GetNextArg{}                               ; get the next CLI argument
0001BD58 <AmiBlitz3.ab3@231>     larg.s = LCase$(arg)                                   ; lower case the option string
0001BE20 <AmiBlitz3.ab3@232>     If Left$(larg,1)="-" Then larg = Right$(larg,FLen(larg)-1)
0001BE56 <AmiBlitz3.ab3@233>     Select larg
0001BEA2 <AmiBlitz3.ab3@234>       Case "s" : larg="source"
0001BEF4 <AmiBlitz3.ab3@235>       Case "e" : larg="exe"
0001BF46 <AmiBlitz3.ab3@236>       Case "d" : larg="debug"
0001BF98 <AmiBlitz3.ab3@237>       Case "r" : larg="release"
0001BFEA <AmiBlitz3.ab3@238>       Case "h" : larg="help"
0001C03C <AmiBlitz3.ab3@239>       Case "v" : larg="verbose"
0001C08E <AmiBlitz3.ab3@240>       Case "1" : larg="1pass"
0001C09C <AmiBlitz3.ab3@241>     End Select
0001C0D2 <AmiBlitz3.ab3@243>     Select larg
0001C126 <AmiBlitz3.ab3@244>       Case "exe"      : cli_exefile     = dos_GetNextArg{}
0001C180 <AmiBlitz3.ab3@245>       Case "source"   : cli_sourcefile  = dos_GetNextArg{}
0001C1DA <AmiBlitz3.ab3@246>       Case "save"     : cli_savefile    = dos_GetNextArg{}
0001C20A <AmiBlitz3.ab3@247>       Case "debug"    : cli_debuginfo   = True
0001C23A <AmiBlitz3.ab3@248>       Case "run"      : cli_run         = True
0001C26A <AmiBlitz3.ab3@249>       Case "release"  : cli_release     = True
0001C29A <AmiBlitz3.ab3@250>       Case "ped"      : cli_gui         = True
0001C2F4 <AmiBlitz3.ab3@251>       Case "dform"    : cli_dumpform.l  = Vallong(dos_GetNextArg{})
0001C366 <AmiBlitz3.ab3@252>       Case "dump"     : cli_info        = LCase$(dos_GetNextArg{})
0001C396 <AmiBlitz3.ab3@253>                         cli_dumpfile    = dos_GetNextArg{}
0001C39E <AmiBlitz3.ab3@254>                         cli_dumpflags   = $0
0001C3FE <AmiBlitz3.ab3@255>                         If Instr(cli_info,"all"  ) Then cli_dumpflags | $FFFFFFFF
0001C45E <AmiBlitz3.ab3@256>                         If Instr(cli_info,"token") Then cli_dumpflags | #DUMPFLG_TOKENS
0001C4BE <AmiBlitz3.ab3@257>                         If Instr(cli_info,"label") Then cli_dumpflags | #DUMPFLG_LABELS
0001C51E <AmiBlitz3.ab3@258>                         If Instr(cli_info,"var"  ) Then cli_dumpflags | #DUMPFLG_VARS
0001C57E <AmiBlitz3.ab3@259>                         If Instr(cli_info,"const") Then cli_dumpflags | #DUMPFLG_CONSTANTS
0001C5DE <AmiBlitz3.ab3@260>                         If Instr(cli_info,"func" ) Then cli_dumpflags | #DUMPFLG_FUNCTIONS
0001C63E <AmiBlitz3.ab3@261>                         If Instr(cli_info,"macro") Then cli_dumpflags | #DUMPFLG_MACROS
0001C69E <AmiBlitz3.ab3@262>                         If Instr(cli_info,"type" ) Then cli_dumpflags | #DUMPFLG_NEWTYPES
0001C6FE <AmiBlitz3.ab3@263>                         If Instr(cli_info,"lib"  ) Then cli_dumpflags | #DUMPFLG_LIBS
0001C710 <AmiBlitz3.ab3@264>                         If cli_dumpflags = $0
0001C716 <AmiBlitz3.ab3@265>                          err=True
0001C7AA <AmiBlitz3.ab3@266>                          NPrint "\\1b[1m*** ERROR: Invalid flags for dumpfile \\22",cli_info,"\\22 specified!\\1b[0m"
0001C81C <AmiBlitz3.ab3@269>       Case "setcom"   : cli_setcom.s    = LCase$(dos_GetNextArg{})
0001C824 <AmiBlitz3.ab3@270>                         cli_comflags.l  = $0
0001C884 <AmiBlitz3.ab3@271>                         If Instr(cli_setcom,"icon"  ) Then cli_comflags | #CLI_COMSETICONFLAG     ; create Icon
0001C8E4 <AmiBlitz3.ab3@272>                         If Instr(cli_setcom,"small" ) Then cli_comflags | #CLI_COMSETSMALLFLAG    ; make smallest code
0001C944 <AmiBlitz3.ab3@273>                         If Instr(cli_setcom,"func"  ) Then cli_comflags | #CLI_COMSETFUNCFLAG     ; use Functionoptimizer
0001C9A4 <AmiBlitz3.ab3@274> 
0001CA04 <AmiBlitz3.ab3@275>                         If Instr(cli_setcom,"dbgf"  ) Then cli_comflags | #CLI_COMSETDBGFFLAG     ; create a .dbf file
0001CA1E <AmiBlitz3.ab3@276>                         If (cli_comflags & #CLI_COMSETALLFLAGS) = 0                               ; test if args are correct
0001CA24 <AmiBlitz3.ab3@277>                           err=True                                                                ; no
0001CAB8 <AmiBlitz3.ab3@278>                           NPrint "\\1b[1m*** ERROR: Invalid flags for setcom \\22",cli_setcom,"\\22 specified!\\1b[0m"
0001CABE <AmiBlitz3.ab3@279>                         Else
0001CACC <AmiBlitz3.ab3@280>                           cli_comdbgflags | cli_comflags                                          ; yes then add it
0001CB3E <AmiBlitz3.ab3@283>       Case "setdbg"   : cli_setdbg.s    = LCase$(dos_GetNextArg{})
0001CB46 <AmiBlitz3.ab3@284>                         cli_dbgflags.l  = $0
0001CBA6 <AmiBlitz3.ab3@285>                         If Instr(cli_setdbg,"auto" ) Then cli_dbgflags | #CLI_DEBUGAUTOFLAG       ; autorun
0001CC06 <AmiBlitz3.ab3@286>                         If Instr(cli_setdbg,"irq"  ) Then cli_dbgflags | #CLI_DEBUGIRQFLAG        ; interrupt check
0001CC66 <AmiBlitz3.ab3@287>                         If Instr(cli_setdbg,"asm"  ) Then cli_dbgflags | #CLI_DEBUGASMFLAG        ; assembler check
0001CCC6 <AmiBlitz3.ab3@288>                         If Instr(cli_setdbg,"ofl"  ) Then cli_dbgflags | #CLI_DEBUGOFLFLAG        ; overflow check
0001CCE0 <AmiBlitz3.ab3@289>                         If (cli_dbgflags & #CLI_DEBUGALLFLAGS) = 0                                ; yes then add it
0001CCE6 <AmiBlitz3.ab3@290>                           err=True                                                                ; no
0001CD7A <AmiBlitz3.ab3@291>                           NPrint "\\1b[1m*** ERROR: Invalid flags for setdbg \\22",cli_setdbg,"\\22 specified!\\1b[0m"
0001CD80 <AmiBlitz3.ab3@292>                         Else
0001CD8E <AmiBlitz3.ab3@293>                           cli_comdbgflags | cli_dbgflags                                          ; yes then add it
0001CDE8 <AmiBlitz3.ab3@295>       Case "strbufsize": cli_comstrbufsize = Vallong(dos_GetNextArg{})
0001CE42 <AmiBlitz3.ab3@296>       Case "stacksize" : cli_exestacksize  = Vallong(dos_GetNextArg{})
0001CE9C <AmiBlitz3.ab3@297> 
0001CEC2 <AmiBlitz3.ab3@298>                          If ((cli_maxerrors > 0) AND (cli_maxerrors <4097))                        ; check
0001CED2 <AmiBlitz3.ab3@299>                            Poke.l ?maxerrorcount,cli_maxerrors
0001CF02 <AmiBlitz3.ab3@301>       Case "1pass"     : OnePassCompiling = True   ; added to use big buffers for compile so only 1 pass is needed  tomsmart1
0001CF5C <AmiBlitz3.ab3@302>       Case "verbose"   : cli_verbose      = Vallong(dos_GetNextArg{})
0001CF8C <AmiBlitz3.ab3@303>       Case "help"      : showhelp         = True             ; show the help and quit
0001CF92 <AmiBlitz3.ab3@304>       Default
0001CFCA <AmiBlitz3.ab3@305>         If arg><""
0001D05E <AmiBlitz3.ab3@306>           NPrint "\\1b[1m*** ERROR: Unknown option \\22",arg,"\\22 specified!\\1b[0m"
0001D064 <AmiBlitz3.ab3@307>           err = True
0001D072 <AmiBlitz3.ab3@309>     End Select
0001D0BE <AmiBlitz3.ab3@310>   Until arg = "" OR err=True          ; until we processed all arguments
0001D0E0 <AmiBlitz3.ab3@313>   If err><False OR showhelp = True
0001D0EA <AmiBlitz3.ab3@314>     If showhelp
0001D14C <AmiBlitz3.ab3@315>     NPrint "AmiBlitz ",Peek.s(?myversion)
0001D184 <AmiBlitz3.ab3@316>     NPrint "\\nSyntax: AmiBlitz3 [options]"
0001D1BC <AmiBlitz3.ab3@317>     NPrint "\\nOptions:"
0001D1F4 <AmiBlitz3.ab3@318>     NPrint "  -(s)ource <file>    : input source code filename (bb2, ab2 or ab3)"
0001D22C <AmiBlitz3.ab3@319>     NPrint "  -(e)xe <file>       : output executable filename"
0001D264 <AmiBlitz3.ab3@320>     NPrint "  -(d)ebug            : compile and start runtime debugger"
0001D29C <AmiBlitz3.ab3@321>     NPrint "  -(r)elease          : create release executable (size optimized)"
0001D2D4 <AmiBlitz3.ab3@322>     NPrint "  -run                : run compiled program"
0001D30C <AmiBlitz3.ab3@323>     NPrint "  -dump <info> <file> : dump compiler internals to file"
0001D344 <AmiBlitz3.ab3@324>     NPrint "                        (info=all|token|label|var|func|const|macro|type|lib)"
0001D37C <AmiBlitz3.ab3@325>     NPrint "  -setcom <options>   : set compiler settings (options=icon|small|func|ldbg|dbgf)"       ; added  tomsmart1
0001D3B4 <AmiBlitz3.ab3@326>     NPrint "  -setdbg <check>     : set debugger settings (check=auto|irq|asm|ofl)"                  ; added  tomsmart1
0001D3EC <AmiBlitz3.ab3@327>     NPrint "  -strbufsize <n>     : set the string buffer size of the compiler"                      ; added  tomsmart1
0001D424 <AmiBlitz3.ab3@328>     NPrint "  -stacksize <n>      : set the stacksize for the exe if it run/debug"                   ; added  tomsmart1
0001D45C <AmiBlitz3.ab3@329>     NPrint "  -maxerrors <n>      : set maxerrorcounter of the compiler (1-4096; default=99)"        ; added  tomsmart1
0001D494 <AmiBlitz3.ab3@330>     NPrint "  -(1)pass            : use large buffers for compile"
0001D4CC <AmiBlitz3.ab3@331>     NPrint "  -dform <n>          : format of compiler internals dump (0=bin, 1=ASCII; default=1)"
0001D504 <AmiBlitz3.ab3@332>     NPrint "  -PED                : start AmiBlitz3 IDE (PED)"
0001D53C <AmiBlitz3.ab3@333>     NPrint "  -save <file>        : re-save source code (convert format, if needed)"
0001D574 <AmiBlitz3.ab3@334>     NPrint "  -(v)erbose <n>      : set verbose level (0, 1 or 2; default=1)"
0001D5AC <AmiBlitz3.ab3@335>     NPrint "  -(h)elp             : show this help"
0001D5E4 <AmiBlitz3.ab3@336>     NPrint "\\nExample:"
0001D61C <AmiBlitz3.ab3@337>     NPrint "  AmiBlitz3 -s \\22DH0:Sourcecodes/MyProgram.ab3\\22 -e RAM:MyProgram.exe"
0001D654 <AmiBlitz3.ab3@338>     NPrint "\\nNote: To start the AmiBlitz3 IDE, run from Workbench or with -PED option."
0001D65A <AmiBlitz3.ab3@341>     Goto abnormal_exit
0001D676 <AmiBlitz3.ab3@344>   If cli_gui        Then CLIMode = False : error_SetFlags{#error_requester}
0001D6DA <AmiBlitz3.ab3@345>   If cli_sourcefile Then Poke.s ?str_tempfilename,cli_sourcefile
0001D6EA <AmiBlitz3.ab3@348> Poke.l ?CLIMode,CLIMode
0001D70E <AmiBlitz3.ab3@383>   Dim incdim.s (#maxincludes)
0001D732 <AmiBlitz3.ab3@384>   Dim incline.l(#maxincludes)
0001D74C <AmiBlitz3.ab3@652> Function.s Get_Libinfo{addr_libnum.l}
0001D758 <AmiBlitz3.ab3@654>   lib_ab2.b = False : lib_os.b = False
0001D75E <AmiBlitz3.ab3@655>   addr_counter.l = addr_libnum
0001D766 <AmiBlitz3.ab3@656>   skip.l = 0
0001D778 <AmiBlitz3.ab3@657>   If addr_counter=0
0001D7B2 <AmiBlitz3.ab3@658>     error{"INTERNAL: \\__THIS_FUNCTION: Invalid pointer!"}
0001D7D0 <AmiBlitz3.ab3@659>     Function Return ""
0001D7DE <AmiBlitz3.ab3@664>     mem.l = Peek.l(addr_counter)
0001D7EC <AmiBlitz3.ab3@669>     addr_counter + 2
0001D80C <AmiBlitz3.ab3@670>     If (mem = $0000ffff) Then lib_ab2= True : skip = 8
0001D826 <AmiBlitz3.ab3@671>     If (mem LSR 16) = $ffe2
0001D82C <AmiBlitz3.ab3@673>       lib_os = True
0001D834 <AmiBlitz3.ab3@674>       skip = 10
0001D87A <AmiBlitz3.ab3@675>       If Peek$(addr_counter+skip) = "" Then skip + 4
0001D8BE <AmiBlitz3.ab3@677>   Until (lib_ab2=True OR lib_os = True) OR (addr_counter>addr_libnum + $400)
0001D8D4 <AmiBlitz3.ab3@679>   If (addr_counter>addr_libnum + $400)
0001D8F2 <AmiBlitz3.ab3@681>     Function Return ""
0001D8F8 <AmiBlitz3.ab3@682>   Else
0001D91C <AmiBlitz3.ab3@683>     Function Return Peek$(addr_counter + skip)
0001D926 <AmiBlitz3.ab3@685> End Function
0001D944 <AmiBlitz3.ab3@730>   !asm
0001D94A <AmiBlitz3.ab3@731>   MOVEA.l _execbase,A6
0001D94E <AmiBlitz3.ab3@732>   MOVEM.l d0/a0,-(a7)
0001D950 <AmiBlitz3.ab3@734>   MOVEQ #127,d0
0001D956 <AmiBlitz3.ab3@735>   LEA chartab,a0
0001D95C <AmiBlitz3.ab3@738>     MOVE.b #1,128(a0)
0001D95E <AmiBlitz3.ab3@739>     CLR.b (a0)+
0001D962 <AmiBlitz3.ab3@740>   DBF d0,'l12
0001D968 <AmiBlitz3.ab3@742>   LEA chartab,a0
0001D96C <AmiBlitz3.ab3@743>   MOVE.b #1,(a0)
0001D972 <AmiBlitz3.ab3@744>   MOVE.b #1,","(a0)
0001D978 <AmiBlitz3.ab3@745>   MOVE.b #1,";"(a0)
0001D97E <AmiBlitz3.ab3@746>   MOVE.b #1,":"(a0)
0001D984 <AmiBlitz3.ab3@747>   MOVE.b #1,"("(a0)
0001D98A <AmiBlitz3.ab3@748>   MOVE.b #1,")"(a0)
0001D990 <AmiBlitz3.ab3@749>   MOVE.b #1,"="(a0)
0001D996 <AmiBlitz3.ab3@750>   MOVE.b #1,"+"(a0)
0001D99C <AmiBlitz3.ab3@751>   MOVE.b #1,"-"(a0)
0001D9A2 <AmiBlitz3.ab3@752>   MOVE.b #1,"*"(a0)
0001D9A8 <AmiBlitz3.ab3@753>   MOVE.b #1,"/"(a0)
0001D9AE <AmiBlitz3.ab3@754>   MOVE.b #1,"$"(a0)
0001D9B4 <AmiBlitz3.ab3@755>   MOVE.b #1,"%"(a0)
0001D9BA <AmiBlitz3.ab3@756>   MOVE.b #1,"."(a0)
0001D9C0 <AmiBlitz3.ab3@757>   MOVE.b #1,"["(a0)
0001D9C6 <AmiBlitz3.ab3@758>   MOVE.b #1,"]"(a0)
0001D9CC <AmiBlitz3.ab3@759>   MOVE.b #1,"{"(a0)
0001D9D2 <AmiBlitz3.ab3@760>   MOVE.b #1,"}"(a0)
0001D9D8 <AmiBlitz3.ab3@761>   MOVE.b #1,"\"(a0)
0001D9DE <AmiBlitz3.ab3@762>   MOVE.b #1,">"(a0)
0001D9E4 <AmiBlitz3.ab3@763>   MOVE.b #1,"<"(a0)
0001D9EA <AmiBlitz3.ab3@764>   MOVE.b #1,"&"(a0)
0001D9F0 <AmiBlitz3.ab3@765>   MOVE.b #1,"|"(a0)
0001D9F6 <AmiBlitz3.ab3@766>   MOVE.b #1,"^"(a0)
0001D9FC <AmiBlitz3.ab3@767>   MOVE.b #1,$7e(a0)
0001DA02 <AmiBlitz3.ab3@768>   MOVE.w #$0101,1(a0)
0001DA08 <AmiBlitz3.ab3@770>   LEA instrtab,a0
0001DA0E <AmiBlitz3.ab3@771>   MOVE.l #labelhash-instrtab,d0
0001DA10 <AmiBlitz3.ab3@772>   ASR.l #2,d0
0001DA12 <AmiBlitz3.ab3@773>   SUBQ.l #1,d0
0001DA14 <AmiBlitz3.ab3@776>    CLR.l (a0)+
0001DA16 <AmiBlitz3.ab3@777>    SUBQ.l #1,d0
0001DA1A <AmiBlitz3.ab3@778>   BNE 'l10
0001DA20 <AmiBlitz3.ab3@780>   LEA allowtab,a0
0001DA26 <AmiBlitz3.ab3@781>   MOVE.l #255,d0
0001DA28 <AmiBlitz3.ab3@784>     CLR.b (a0)+
0001DA2C <AmiBlitz3.ab3@785>   DBF d0,'la1
0001DA32 <AmiBlitz3.ab3@787>   LEA allowtab,a0
0001DA38 <AmiBlitz3.ab3@788>   MOVE.b #1,$7d(a0)
0001DA3E <AmiBlitz3.ab3@789>   MOVE.b #1,$7c(a0)
0001DA44 <AmiBlitz3.ab3@790>   MOVE.b #1,$44(a0)
0001DA4A <AmiBlitz3.ab3@791>   MOVE.b #1,$45(a0)
0001DA50 <AmiBlitz3.ab3@792>   MOVE.b #1,$b9(a0)
0001DA56 <AmiBlitz3.ab3@793>   MOVE.b #1,$89(a0)
0001DA5C <AmiBlitz3.ab3@794>   MOVE.b #1,$ce(a0)
0001DA62 <AmiBlitz3.ab3@795>   MOVE.b #1,$cf(a0)
0001DA68 <AmiBlitz3.ab3@796>   MOVE.b #1,$d0(a0)
0001DA6E <AmiBlitz3.ab3@797>   MOVE.b #1,$cd(a0)
0001DA70 <AmiBlitz3.ab3@798>   MOVEQ #0,d0
0001DA76 <AmiBlitz3.ab3@800>   MOVEA.l _execbase,a6
0001DA7C <AmiBlitz3.ab3@805>   MOVE.l #$10000,d0
0001DA82 <AmiBlitz3.ab3@806>   MOVE.l #80000,d1
0001DA84 <AmiBlitz3.ab3@807>   MOVE.l d1,d2
0001DA88 <AmiBlitz3.ab3@808>   JSR _CreatePool(a6)                                      ; alloc memory for own stuff
0001DA8E <AmiBlitz3.ab3@809>   MOVE.l d0,mempool
0001DA92 <AmiBlitz3.ab3@810>   MOVEM.l (a7)+,d0/a0
0001DA98 <AmiBlitz3.ab3@811>   TST.l mempool
0001DA9C <AmiBlitz3.ab3@812>   BEQ shutdown_compiler
0001DAA0 <AmiBlitz3.ab3@814>   MOVEA.l $114(A6),A4                                      ; get adress of this.Task-Structure
0001DAA6 <AmiBlitz3.ab3@815>   MOVE.l A4,ptr_ThisTask
0001DAAA <AmiBlitz3.ab3@817>   BSR.w open_doslibrary
0001DAAE <AmiBlitz3.ab3@818>   BEQ.w shutdown_compiler
0001DAB4 <AmiBlitz3.ab3@820>   MOVE.l D2,stacksize
0001DAB6 <AmiBlitz3.ab3@827>   MOVEQ.l #$00,D0
0001DABC <AmiBlitz3.ab3@828>   LEA tokens,A0
0001DABE <AmiBlitz3.ab3@831>     ADDQ.w #1,D0
0001DAC0 <AmiBlitz3.ab3@832>     MOVE.l (A0),D1
0001DAC4 <AmiBlitz3.ab3@833>     BEQ.w 'gotlast
0001DAC6 <AmiBlitz3.ab3@834>     MOVEA.l D1,A0
0001DACA <AmiBlitz3.ab3@835>  BRA.w 'loop
0001DAD0 <AmiBlitz3.ab3@838>   MOVE.l A0,end_of_tokenlist
0001DAD4 <AmiBlitz3.ab3@840>   BSR.w makeasmtable
0001DADC <AmiBlitz3.ab3@842>   MOVE.w #$FFFF,returncode_org    ; was -1                         ;#-1,returncode
0001DAE0 <AmiBlitz3.ab3@844>   BSR.w open_mathlibrary
0001DAE4 <AmiBlitz3.ab3@845>   BEQ.w freemem_and_quit4
0001DAEA <AmiBlitz3.ab3@847>   MOVE.l constmaxpc,D0
0001DAEC <AmiBlitz3.ab3@848>   MOVEQ.l #$02,D1                                          ;chipmem            ;01 org source
0001DAF2 <AmiBlitz3.ab3@849>   MOVEA.l _execbase,A6
0001DAF6 <AmiBlitz3.ab3@850>   JSR _AllocMem(A6)                                        ;mem for branch routine
0001DAFC <AmiBlitz3.ab3@851>   MOVE.l D0,constpcat
0001DB00 <AmiBlitz3.ab3@852>   BEQ.w freemem_and_quit3
0001DB06 <AmiBlitz3.ab3@853>   ADD.l constmaxpc,D0
0001DB0C <AmiBlitz3.ab3@854>   MOVE.l D0,constlibat
0001DB12 <AmiBlitz3.ab3@856>   MOVE.l macrobuffer_size,D0
0001DB18 <AmiBlitz3.ab3@858>   CMP.l #DEFAULT_MACROBUFFERSIZE,d0                        ; replaced by a constant  tomsmart1
0001DB1C <AmiBlitz3.ab3@859>   BGE 'ok
0001DB22 <AmiBlitz3.ab3@860>     MOVE.l #DEFAULT_MACROBUFFERSIZE,d0
0001DB28 <AmiBlitz3.ab3@861>     MOVE.l d0,macrobuffer_size                             ; replaced with a constant tomsmart1
0001DB2A <AmiBlitz3.ab3@864>   ADDQ.l #4,d0
0001DB2C <AmiBlitz3.ab3@866>   MOVEQ.l #$01,D1
0001DB32 <AmiBlitz3.ab3@867>   MOVEA.l _execbase,A6
0001DB36 <AmiBlitz3.ab3@868>   JSR _AllocMem(A6)                                        ;macro mem
0001DB38 <AmiBlitz3.ab3@870>   MOVE.l d0,a0
0001DB3E <AmiBlitz3.ab3@871>   MOVE.l macrobuffer_size,(a0)+
0001DB40 <AmiBlitz3.ab3@872>   MOVE.l a0,d0
0001DB46 <AmiBlitz3.ab3@874>   MOVE.l D0,ptr_macrobuffer_begin
0001DB4A <AmiBlitz3.ab3@875>   BEQ.w freemem_and_quit2
0001DB50 <AmiBlitz3.ab3@876>   ADD.l macrobuffer_size,D0
0001DB56 <AmiBlitz3.ab3@877>   MOVE.l D0,ptr_macrobuffer_end
0001DB5C <AmiBlitz3.ab3@880>   TST.l CLIMode
0001DB60 <AmiBlitz3.ab3@881>   BEQ load_ped
0001DB8A <AmiBlitz3.ab3@884>   !basic
0001DB94 <AmiBlitz3.ab3@885>   succ.l = InitEmulatedPED{}
0001DB98 <AmiBlitz3.ab3@886>   GetD0 succ
0001DBB6 <AmiBlitz3.ab3@887>   !asm
0001DBB8 <AmiBlitz3.ab3@888>   TST.l d0
0001DBBC <AmiBlitz3.ab3@889>   BEQ freemem_and_quit
0001DBC2 <AmiBlitz3.ab3@890> JMP skip_ped
0001DBC8 <AmiBlitz3.ab3@896>   MOVE.l #str_pedfile,D1                                   ; Load PED
0001DBCE <AmiBlitz3.ab3@897>   MOVEA.l _dosbase,A6
0001DBD2 <AmiBlitz3.ab3@898>   JSR _LoadSeg(A6)
0001DBD8 <AmiBlitz3.ab3@899>   MOVE.l D0,ptr_seg_ped
0001DBDC <AmiBlitz3.ab3@901>   BEQ.w cant_load_PED         ; was freemem_and_quit  added error massage  that we can't load it  tomsmart1  2012 03
0001DBDE <AmiBlitz3.ab3@905>   MOVEA.l D0,A2
0001DBE0 <AmiBlitz3.ab3@906>   ADDA.l A2,A2
0001DBE2 <AmiBlitz3.ab3@907>   ADDA.l A2,A2
0001DBE8 <AmiBlitz3.ab3@909>   LEA teddata,a1                                           ;lea edstruct,A1
0001DBEE <AmiBlitz3.ab3@910>   MOVE.l #"TEDY",d1
0001DBF2 <AmiBlitz3.ab3@911>   JSR 4(A2)                                                ; Run PED
0001DBF8 <AmiBlitz3.ab3@913>   MOVE.l A0,ped_startup_addr                               ; PED returns address of routine "startup_code"
0001DBFE <AmiBlitz3.ab3@914>   MOVE.l A1,comdata                                        ; PED returns address of comdata-area in A1
0001DC3C <AmiBlitz3.ab3@916>   !ComData_GetW{comWord_PEDIsAvailable,D0}                 ; if PED_IsAvailable=0, quit AmiBlitz
0001DC40 <AmiBlitz3.ab3@917>   BEQ.w unload_ped
0001DC44 <AmiBlitz3.ab3@918> 
0001DC48 <AmiBlitz3.ab3@919>   BNE old_version_of_PED                                   ; no, than exit
0001DC86 <AmiBlitz3.ab3@925>   !ComData_GetL{comData_Magic,D0}
0001DC8C <AmiBlitz3.ab3@926>   CMP.l ##MagicIdentifier_Long,D0                          ;"~::~",D0    ; replace with a constants  tomsmart1 2012 03 09
0001DC90 <AmiBlitz3.ab3@927>   BNE unload_ped
0001DCC8 <AmiBlitz3.ab3@930>   !ComData_SetL{comPtr_Trap15            ,#directTrap15 }
0001DD00 <AmiBlitz3.ab3@931>   !ComData_SetL{comPtr_DirectBuffer      ,#directbuffer}
0001DD38 <AmiBlitz3.ab3@932>   !ComData_SetL{comPtr_MacroBase         ,#macrobase}
0001DD70 <AmiBlitz3.ab3@933>   !ComData_SetL{comPtr_VarBase           ,#varbase }
0001DDA8 <AmiBlitz3.ab3@934>   !ComData_SetL{comPtr_InstrBase         ,#instrtab}
0001DDE0 <AmiBlitz3.ab3@935>   !ComData_SetL{comPtr_LibPointer        ,#libpointer}
0001DE18 <AmiBlitz3.ab3@936>   !ComData_SetL{comPtr_CompilerVersion   ,#myversion }
0001DE50 <AmiBlitz3.ab3@937>   !ComData_SetL{comPtr_VersionInformation,#versioninformation}
0001DE88 <AmiBlitz3.ab3@938>   !ComData_SetL{comPtr_NumberOfBuilds    ,#number_of_builds}
0001DEC0 <AmiBlitz3.ab3@939>   !ComData_SetL{comFunc_SaveSource       ,#ab3_SaveSource}
0001DEF8 <AmiBlitz3.ab3@940>   !ComData_SetL{comFunc_LoadSource       ,#ab3_LoadSource}
0001DF30 <AmiBlitz3.ab3@941>   !ComData_SetL{comFunc_ClearSource      ,#ab3_ClearSource}
0001DF68 <AmiBlitz3.ab3@944>   !ComData_SetL{comFunc_CalculatExpression       ,#menu_calculator}
0001DFA0 <AmiBlitz3.ab3@945>   !ComData_SetL{comPtr_CalculatorExpressionString,#str_calcexpression}
0001DFD8 <AmiBlitz3.ab3@948>   !ComData_SetL{comFunc_BackupXtraData           ,#BackupXtraData}
0001E010 <AmiBlitz3.ab3@949>   !ComData_SetL{comFunc_RestoreXtraData          ,#RestoreXtraData}
0001E048 <AmiBlitz3.ab3@951>   !ComData_SetL{comFunc_GetObjectEntry           ,#getobjectentry}
0001E080 <AmiBlitz3.ab3@952>   !ComData_SetL{comFunc_StoreMaxObjects          ,#storemaxobjects}
0001E0B8 <AmiBlitz3.ab3@954>   !ComData_SetL{comFunc_ReloadResidentsForPED    ,#ReloadResidentsForPED}
0001E0F0 <AmiBlitz3.ab3@955>   !ComData_SetL{comFunc_FreeClearResidentsForPED ,#FreeClearResidentsForPED}    ; add tomsmart1 2012 06 09
0001E128 <AmiBlitz3.ab3@957>   !ComData_SetL{comPtr_Residents_Table           ,#residents_table}
0001E160 <AmiBlitz3.ab3@958>   !ComData_SetL{comPtr_StringBuffer_Long         ,#stringbuffer}
0001E198 <AmiBlitz3.ab3@959>   !ComData_SetL{comPtr_Stacksize_Long            ,#stacksize}
0001E1D0 <AmiBlitz3.ab3@960>   !ComData_SetL{comPtr_Create_IconFile_Byte      ,#create_iconfile}
0001E208 <AmiBlitz3.ab3@961>   !ComData_SetL{comPtr_Make_SmallestCode_Byte    ,#make_smallestcode}
0001E240 <AmiBlitz3.ab3@962>   !ComData_SetL{comPtr_Link_DebugInfo_Byte       ,#link_debuginfo}
0001E278 <AmiBlitz3.ab3@963>   !ComData_SetL{comPtr_Use_Debugger_Byte         ,#use_debugger}
0001E2B0 <AmiBlitz3.ab3@964>   !ComData_SetL{comPtr_Autorun_Byte              ,#autorun}
0001E2E8 <AmiBlitz3.ab3@965>   !ComData_SetL{comPtr_InterruptCheck_Byte       ,#interruptcheck}
0001E320 <AmiBlitz3.ab3@966>   !ComData_SetL{comPtr_AssemblerCheck_Byte       ,#assemblercheck}
0001E358 <AmiBlitz3.ab3@967>   !ComData_SetL{comPtr_OverflowCheck_Byte        ,#overflowcheck}
0001E390 <AmiBlitz3.ab3@968>   !ComData_SetL{comPtr_Number_of_Objects_Word    ,#number_of_objects}
0001E3C8 <AmiBlitz3.ab3@969>   !ComData_SetL{comPtr_MaxObjects_Value_Word     ,#maxobjects_value}
0001E400 <AmiBlitz3.ab3@970>   !ComData_SetL{comPtr_MaxObject_Pos_Word        ,#maxobject_pos}
0001E438 <AmiBlitz3.ab3@973>   !ComData_SetL{comPtr_CLIArgumentsString       ,#str_cliarguments}
0001E43E <AmiBlitz3.ab3@975>   CLR.w returncode_org
0001E468 <AmiBlitz3.ab3@977>   !basic
0001E472 <AmiBlitz3.ab3@978>   If CLIMode
0001E4E4 <AmiBlitz3.ab3@979>     If cli_verbose>=3 Then NPrint !TRANS{"Loading BlitzLibs..."}
0001E502 <AmiBlitz3.ab3@981>   !asm
0001E508 <AmiBlitz3.ab3@985>   TST.b start_without_libs
0001E50C <AmiBlitz3.ab3@986>   BNE 'skip_loading_libs
0001E510 <AmiBlitz3.ab3@988>     BSR.w call_setpointerbusy
0001E51A <AmiBlitz3.ab3@989>     MOVE.l #$FFFFffff,linenumat   ; was -1
0001E51E <AmiBlitz3.ab3@990>     BSR.w get_libraries
0001E524 <AmiBlitz3.ab3@991>     JSR init_libraries
0001E528 <AmiBlitz3.ab3@992>     BSR.w init_buffers
0001E52C <AmiBlitz3.ab3@993>     BSR.w call_setpointernormal
0001E52E <AmiBlitz3.ab3@1001>   MOVEQ.l #-$01,D0
0001E534 <AmiBlitz3.ab3@1002>   MOVEA.l _execbase,A6
0001E538 <AmiBlitz3.ab3@1003>   JSR _AllocSignal(A6)
0001E53E <AmiBlitz3.ab3@1004>   MOVE.l D0,signalNum
0001E540 <AmiBlitz3.ab3@1005>   MOVEQ.l #$00,D1
0001E542 <AmiBlitz3.ab3@1006>   BSET D0,D1
0001E548 <AmiBlitz3.ab3@1007>   MOVE.l D1,signals
0001E54E <AmiBlitz3.ab3@1014>   MOVE.l #str_defaultdbug,D1
0001E552 <AmiBlitz3.ab3@1015>   MOVEA.l _dosbase(PC),A6
0001E556 <AmiBlitz3.ab3@1016>   JSR _LoadSeg(A6)
0001E55C <AmiBlitz3.ab3@1017>   MOVE.l D0,ptr_seg_debugger
0001E55E <AmiBlitz3.ab3@1020>   TST.l d0
0001E562 <AmiBlitz3.ab3@1021>   BNE 'ok_12
0001E58C <AmiBlitz3.ab3@1022>     !basic
0001E5EE <AmiBlitz3.ab3@1023>     error{!TRANS{"The Debugexecutor `Defaultdbug` was not found.\\nDebugging is not possible."}}
0001E60C <AmiBlitz3.ab3@1024>     !asm
0001E612 <AmiBlitz3.ab3@1027>   TST.l CLIMode
0001E616 <AmiBlitz3.ab3@1028>   BEQ run_ped
0001E640 <AmiBlitz3.ab3@1034>   !basic
0001E646 <AmiBlitz3.ab3@1035>   err.l = False
0001E672 <AmiBlitz3.ab3@1043>   If cli_sourcefile
0001E692 <AmiBlitz3.ab3@1044>     lock.l = Lock_(&cli_sourcefile,#ACCESS_READ)
0001E69C <AmiBlitz3.ab3@1045>     If lock
0001E6C0 <AmiBlitz3.ab3@1046>       NameFromLock_ lock,&cli_tempstr,1024
0001E6EA <AmiBlitz3.ab3@1047>       cli_sourcefile.s = Peek.s(&cli_tempstr)
0001E6FA <AmiBlitz3.ab3@1048>       UnLock_ lock
0001E726 <AmiBlitz3.ab3@1051>     If cli_exefile
0001E778 <AmiBlitz3.ab3@1052>       SetCurrentDir{dos_PathPart{cli_sourcefile}}
0001E7D0 <AmiBlitz3.ab3@1053>       path.s = dos_PathPart{cli_exefile}
0001E7F0 <AmiBlitz3.ab3@1054>       lock.l = Lock_(&path,#ACCESS_READ)
0001E7FA <AmiBlitz3.ab3@1055>       If lock
0001E81E <AmiBlitz3.ab3@1056>         NameFromLock_ lock,&cli_tempstr,1024
0001E848 <AmiBlitz3.ab3@1057>         path.s = Peek.s(&cli_tempstr)
0001E8F6 <AmiBlitz3.ab3@1058>         cli_exefile = dos_AddPart{path,dos_FilePart{cli_exefile}}
0001E906 <AmiBlitz3.ab3@1059>         UnLock_ lock
0001E950 <AmiBlitz3.ab3@1070>   If cli_verbose>=3 Then NPrint "Initializing token hashmap..."
0001E9C4 <AmiBlitz3.ab3@1071> 
0001E9CE <AmiBlitz3.ab3@1072>   *PreProcessor.preprocessor = preproc_Create{}
0001E9DE <AmiBlitz3.ab3@1073>   Poke.l ?comPtr_PreProcessor,*PreProcessor
0001EA10 <AmiBlitz3.ab3@1074>   preproc_LoadTokens{*PreProcessor,TokenHashMapFile}
0001EA26 <AmiBlitz3.ab3@1075>   If *PreProcessor\tokens=Null
0001EAA0 <AmiBlitz3.ab3@1076>     If cli_verbose>=1 Then NPrint "No hashmap found (\\22"+TokenHashMapFile+"\\22), will be created..."
0001EAAA <AmiBlitz3.ab3@1077>     preproc_QueryTokens{*PreProcessor}
0001EADC <AmiBlitz3.ab3@1078>     preproc_SaveTokens{*PreProcessor,TokenHashMapFile}
0001EB28 <AmiBlitz3.ab3@1086>   If cli_sourcefile><"" AND err=False
0001EBCE <AmiBlitz3.ab3@1087>     If cli_verbose>=3 Then NPrint "Loading sourcecode \\22",cli_sourcefile,"\\22..."
0001EC00 <AmiBlitz3.ab3@1088>     succ=LoadSource{cli_sourcefile}
0001EC0A <AmiBlitz3.ab3@1089>     If succ
0001EC42 <AmiBlitz3.ab3@1090> 
0001ECBC <AmiBlitz3.ab3@1091>         If cli_verbose>=1 Then NPrint "Compiling \\22"+cli_sourcefile+"\\22..."
0001ECFE <AmiBlitz3.ab3@1092> 
0001ED08 <AmiBlitz3.ab3@1094>         If comerr
0001ED0E <AmiBlitz3.ab3@1096>         Else
0001ED14 <AmiBlitz3.ab3@1100>     Else
0001ED64 <AmiBlitz3.ab3@1101>       If cli_verbose>=0 NPrint "\\1b[1m*** ERROR: Unable to read source file!\\1b[0m" : err=True
0001EDB0 <AmiBlitz3.ab3@1105>   If cli_savefile><"" AND err=False
0001EE2A <AmiBlitz3.ab3@1106>     If cli_verbose>=2 Then NPrint "Saving sourcefiles as "+cli_savefile+"..."
0001EE58 <AmiBlitz3.ab3@1107>     SaveSource{cli_savefile}
0001EEA4 <AmiBlitz3.ab3@1110>   If cli_dumpfile><"" AND err=False
0001EEEE <AmiBlitz3.ab3@1111>     If cli_verbose>=2 Then NPrint "Saving dumpfile..."
0001EF24 <AmiBlitz3.ab3@1112>     DumpFile{cli_dumpfile,cli_dumpflags,cli_dumpform}
0001EF2E <AmiBlitz3.ab3@1115>   If cli_run
0001EF42 <AmiBlitz3.ab3@1116>     If comerr=False
0001EF6E <AmiBlitz3.ab3@1117>       If cli_exefile
0001EFE8 <AmiBlitz3.ab3@1118>         If cli_verbose>=1 Then NPrint "Recompiling "+cli_sourcefile+" for debug..."
0001F01E <AmiBlitz3.ab3@1119> 
0001F068 <AmiBlitz3.ab3@1121>       If cli_verbose>=1 Then NPrint "Running program..."
0001F076 <AmiBlitz3.ab3@1122> 
0001F078 <AmiBlitz3.ab3@1124>         CLR.l d0
0001F0B6 <AmiBlitz3.ab3@1125>         !ComData_GetB{comByte_RunningFlag,D0}
0001F0BA <AmiBlitz3.ab3@1126>         running.l = PutD0
0001F0D6 <AmiBlitz3.ab3@1127>         If running Then Delay_ 50
0001F0EA <AmiBlitz3.ab3@1129>       Until running=False
0001F0FE <AmiBlitz3.ab3@1130>       If Peek.l(?_runerror)
0001F14E <AmiBlitz3.ab3@1131>         If cli_verbose>=0 Then NPrint "\\1b[1m*** ERROR: Unable to run compiled program!\\1b[0m" : err=True
0001F15E <AmiBlitz3.ab3@1142>   preproc_Free{*PreProcessor} : *PreProcessor=Null
0001F1A8 <AmiBlitz3.ab3@1143>   If cli_verbose>=3 Then NPrint "Exit AmiBlitz3."
0001F1AE <AmiBlitz3.ab3@1144>   DeinitEmulatedPED{}
0001F1CC <AmiBlitz3.ab3@1146>   !asm
0001F1D2 <AmiBlitz3.ab3@1147> JMP terminate_ab3
0001F1D8 <AmiBlitz3.ab3@1153>   MOVEA.l ped_startup_addr,A1
0001F1DE <AmiBlitz3.ab3@1154>   LEA str_tempfilename,A0
0001F1E0 <AmiBlitz3.ab3@1155>   JSR (A1)            ;goto editor with filename!
0001F1E6 <AmiBlitz3.ab3@1162>   MOVE.l signalNum,D0
0001F1EC <AmiBlitz3.ab3@1163>   MOVEA.l _execbase,A6
0001F1F0 <AmiBlitz3.ab3@1164>   JSR _FreeSignal(A6)
0001F1F6 <AmiBlitz3.ab3@1166>   MOVE.l ptr_seg_debugger,D1
0001F1FA <AmiBlitz3.ab3@1167>   BEQ.b 'noseg
0001F1FE <AmiBlitz3.ab3@1168>     MOVEA.l _dosbase(PC),A6
0001F202 <AmiBlitz3.ab3@1169>     JSR _UnLoadSeg(A6)
0001F206 <AmiBlitz3.ab3@1172>   BSR.w Aclearallvars
0001F20A <AmiBlitz3.ab3@1173>   BSR.w free_residents
0001F210 <AmiBlitz3.ab3@1174>   JSR free_blitzlibs
0001F216 <AmiBlitz3.ab3@1177>   MOVE.l ptr_seg_ped,D1
0001F21A <AmiBlitz3.ab3@1178>   BEQ freemem_and_quit
0001F21E <AmiBlitz3.ab3@1179>   MOVEA.l _dosbase(PC),A6
0001F222 <AmiBlitz3.ab3@1180>   JSR _UnLoadSeg(A6)
0001F226 <AmiBlitz3.ab3@1181>   BRA freemem_and_quit     ; added by tomsmart1 for Ped errormessage
0001F250 <AmiBlitz3.ab3@1184>   !basic
0001F314 <AmiBlitz3.ab3@1185> 
0001F332 <AmiBlitz3.ab3@1186>   !asm
0001F336 <AmiBlitz3.ab3@1187>   BRA freemem_and_quit
0001F360 <AmiBlitz3.ab3@1190>   !basic
0001F424 <AmiBlitz3.ab3@1191>   error{!TRANS{"Can't load the Editor:\n"} + pedfile$ + !TRANS{"\n must quit, sorry!"} }  ; show error message  tomsmart1
0001F442 <AmiBlitz3.ab3@1192>   !asm
0001F446 <AmiBlitz3.ab3@1196>   BSR.w freeallox
0001F44C <AmiBlitz3.ab3@1198>   MOVEA.l ptr_macrobuffer_begin,A1
0001F44E <AmiBlitz3.ab3@1200>   MOVE.l -(a1),D0
0001F450 <AmiBlitz3.ab3@1201>   ADDQ.l #4,d0
0001F456 <AmiBlitz3.ab3@1203>   MOVEA.l _execbase,A6
0001F45A <AmiBlitz3.ab3@1204>   JSR _FreeMem(A6)
0001F460 <AmiBlitz3.ab3@1207>   MOVEA.l _dosbase,A1
0001F466 <AmiBlitz3.ab3@1208>   MOVEA.l _execbase,A6
0001F46A <AmiBlitz3.ab3@1209>   JSR _CloseLibrary(A6)
0001F470 <AmiBlitz3.ab3@1211>   MOVEA.l constpcat,A1
0001F476 <AmiBlitz3.ab3@1212>   MOVE.l constmaxpc,D0
0001F47C <AmiBlitz3.ab3@1213>   MOVEA.l _execbase,A6
0001F480 <AmiBlitz3.ab3@1214>   JSR _FreeMem(A6)
0001F486 <AmiBlitz3.ab3@1217>   MOVEA.l _mathffpbase,A1
0001F48C <AmiBlitz3.ab3@1218>   MOVEA.l _execbase,A6
0001F490 <AmiBlitz3.ab3@1219>   JSR _CloseLibrary(A6)
0001F496 <AmiBlitz3.ab3@1223>   TST.l mempool2                    ; test if mempool2 is allocated
0001F49A <AmiBlitz3.ab3@1224>   BEQ shutdown_compiler             ; no jump
0001F4A0 <AmiBlitz3.ab3@1225>   MOVEA.l _execbase,A6              ; yes delete it to free the memory
0001F4A6 <AmiBlitz3.ab3@1226>   MOVE.l mempool2,a0
0001F4AA <AmiBlitz3.ab3@1227>   JSR _DeletePool(a6)
0001F4B0 <AmiBlitz3.ab3@1228>   CLR.l mempool2
0001F4B6 <AmiBlitz3.ab3@1231>   MOVEA.l _execbase,A6
0001F4BC <AmiBlitz3.ab3@1232>   MOVE.l mempool,a0
0001F4C0 <AmiBlitz3.ab3@1233>   JSR _DeletePool(a6)
0001F4C6 <AmiBlitz3.ab3@1234>   CLR.l pushat
0001F4CC <AmiBlitz3.ab3@1235>   CLR.l mempool
0001F4D2 <AmiBlitz3.ab3@1237>   JSR free_unusedfunctions
0001F4D4 <AmiBlitz3.ab3@1238>   MOVEQ #0,d0
0001F4E2 <AmiBlitz3.ab3@1241>   !exitasm
0001F51A <AmiBlitz3.ab3@1242>   If dynassign<>""
0001F524 <AmiBlitz3.ab3@1243>     If *AssignSema
0001F534 <AmiBlitz3.ab3@1244>       ReleaseSemaphore_ *AssignSema
0001F54C <AmiBlitz3.ab3@1245>       If (AttemptSemaphore_ (*AssignSema))                 ; we are the exclusive owner of the sema now!
0001F5E0 <AmiBlitz3.ab3@1246>         dos_RemAssign{"LIBS:",dos_AddPart{dynassign,"Libs"}}
0001F61A <AmiBlitz3.ab3@1247>         dos_RemAssign{dynassign}
0001F62A <AmiBlitz3.ab3@1248>         RemSemaphore_ *AssignSema
0001F63A <AmiBlitz3.ab3@1249>         ReleaseSemaphore_ *AssignSema
0001F66C <AmiBlitz3.ab3@1250>         If *AssignSema\ss_Link\ln_Name Then FreeVec_ *AssignSema\ss_Link\ln_Name : *AssignSema\ss_Link\ln_Name = Null
0001F67C <AmiBlitz3.ab3@1251>         FreeVec_ *AssignSema
0001F682 <AmiBlitz3.ab3@1252>         *AssignSema = Null
0001F6B0 <AmiBlitz3.ab3@1256>   SetCurrentDir{cli_path}
0001F6D2 <AmiBlitz3.ab3@1257>   !coutclose
0001F6D8 <AmiBlitz3.ab3@1258> End
0001F6E4 <AmiBlitz3.ab3@1262> str_doslibrary:     Dc.b "dos.library",0 : Even
0001F6E8 <AmiBlitz3.ab3@1263> _dosbase:           Ds.l 1
0001F6EE <AmiBlitz3.ab3@1267>   MOVEA.l _execbase,A6
0001F6F4 <AmiBlitz3.ab3@1268>   LEA str_doslibrary,A1
0001F6F8 <AmiBlitz3.ab3@1269>   JSR _OldOpenLibrary(A6)
0001F6FE <AmiBlitz3.ab3@1270>   MOVE.l D0,_dosbase
0001F700 <AmiBlitz3.ab3@1271> RTS
0001F706 <AmiBlitz3.ab3@1275>   MOVEA.l #str_mathffpname,A1
0001F70C <AmiBlitz3.ab3@1276>   MOVEA.l _execbase,A6
0001F710 <AmiBlitz3.ab3@1277>   JSR _OldOpenLibrary(A6)
0001F716 <AmiBlitz3.ab3@1278>   MOVE.l D0,_mathffpbase
0001F718 <AmiBlitz3.ab3@1279> RTS
0001F74A <AmiBlitz3.ab3@1286> !ComData_JMP{comFunc_SetNormalPointer}
0001F77C <AmiBlitz3.ab3@1293> !ComData_JMP{comFunc_SetBusyPointer}
0001F7A6 <AmiBlitz3.ab3@1297>   !basic
0001F7AA <AmiBlitz3.ab3@1298>   ab3save_filenameP.l = PutD0
0001F7B4 <AmiBlitz3.ab3@1299>   If ab3save_filenameP
0001F7DC <AmiBlitz3.ab3@1300>     ab3save_filename.s = Peek.s(ab3save_filenameP)
0001F80A <AmiBlitz3.ab3@1302>     SaveSource{ab3save_filename}
0001F810 <AmiBlitz3.ab3@1303>   Else
0001F84A <AmiBlitz3.ab3@1304>     error{"INTERNAL ERROR: no filename passed in D0 to SaveSource{}!"}
0001F868 <AmiBlitz3.ab3@1306>   !asm
0001F86A <AmiBlitz3.ab3@1307>   RTS
0001F894 <AmiBlitz3.ab3@1310>   !basic
0001F898 <AmiBlitz3.ab3@1311>   ab3save_filenameP.l = PutD0
0001F8A2 <AmiBlitz3.ab3@1312>   If ab3save_filenameP
0001F8CA <AmiBlitz3.ab3@1313>     ab3save_filename.s = Peek.s(ab3save_filenameP)
0001F8F8 <AmiBlitz3.ab3@1314>     LoadSource{ab3save_filename}
0001F8FE <AmiBlitz3.ab3@1315>   Else
0001F938 <AmiBlitz3.ab3@1316>     error{"INTERNAL ERROR: no filename passed in D0 to LoadSource{}!"}
0001F956 <AmiBlitz3.ab3@1318>   !asm
0001F958 <AmiBlitz3.ab3@1319>   RTS
0001F982 <AmiBlitz3.ab3@1322>   !basic
0001F988 <AmiBlitz3.ab3@1323>   ClearSource{}
0001F9A6 <AmiBlitz3.ab3@1324>   !asm
0001F9A8 <AmiBlitz3.ab3@1325>   RTS
0001F9D2 <AmiBlitz3.ab3@1328>   !basic
0001F9D8 <AmiBlitz3.ab3@1329>   OpenConsoleFake{}
0001F9F6 <AmiBlitz3.ab3@1330>   !asm
0001F9F8 <AmiBlitz3.ab3@1331>   RTS
0001FA22 <AmiBlitz3.ab3@1335>   !basic
0001FA28 <AmiBlitz3.ab3@1336>   CloseConsoleFake{}
0001FA46 <AmiBlitz3.ab3@1337>   !asm
0001FA48 <AmiBlitz3.ab3@1338>   RTS
0001FA4E <AmiBlitz3.ab3@1343>   MOVE.w d6,menuitemdebug
0001FA78 <AmiBlitz3.ab3@1344>   !basic
0001FA8A <AmiBlitz3.ab3@1345>   menuitemx.l = Peek.w(?menuitemdebug)
0001FAB0 <AmiBlitz3.ab3@1346>   If menuitemx>16 OR  menuitemx<0
0001FB24 <AmiBlitz3.ab3@1347>     error{"Called invalid AB3 Menuitem #"+Str$(menuitemx)+"!"}
0001FB2C <AmiBlitz3.ab3@1348>     menuitemx=0
0001FB3C <AmiBlitz3.ab3@1350>   Poke.w ?menuitemdebug,menuitemx
0001FB5A <AmiBlitz3.ab3@1351>   !asm
0001FB60 <AmiBlitz3.ab3@1352>   MOVE.w menuitemdebug,d6
0001FB66 <AmiBlitz3.ab3@1356>   MOVE.l A5,firstitem_
0001FB6C <AmiBlitz3.ab3@1357>   MOVE.w D7,numlines_org
0001FB72 <AmiBlitz3.ab3@1359>   MOVE.l d7,numlines
0001FB74 <AmiBlitz3.ab3@1361>   LSL.w #2,D6
0001FB7A <AmiBlitz3.ab3@1362>   LEA menu_items,A0
0001FB7E <AmiBlitz3.ab3@1363>   MOVEA.l $0(A0,D6.W),A0
0001FB88 <AmiBlitz3.ab3@1364>   MOVE.l #$FFFFffff,linenumat             ; was -1
0001FB92 <AmiBlitz3.ab3@1365>   MOVE.l #$FFFFffff,compilelinecounter    ; was -1
0001FB94 <AmiBlitz3.ab3@1366>   JSR (A0)                              ; jsr to the function for the menuitem
0001FB9A <AmiBlitz3.ab3@1367>   MOVE.l compilelinecounter,D0
0001FB9C <AmiBlitz3.ab3@1368> RTS
0001FBA0 <AmiBlitz3.ab3@1370> menuitemdebug: Dc.l 0
0001FBA4 <AmiBlitz3.ab3@1372> mempool                Dc.l 0
0001FBBA <AmiBlitz3.ab3@1373> str_loaddebugmessage:  Dc.b "Debug module to load",0 : Even        ; was dtext org source
0001FBC0 <AmiBlitz3.ab3@1374> dloaderr:              JSR handle_compileerror
0001FBDC <AmiBlitz3.ab3@1375>                        Dc.b "Can't LoadSeg debug module!",0 : Even
0001FC1A <AmiBlitz3.ab3@1383>   !ComData_GetL{comFunc_ASLFileRequest,A3}
0001FC20 <AmiBlitz3.ab3@1384>   LEA str_loaddebugmessage,A2
0001FC26 <AmiBlitz3.ab3@1385>   LEA str_blitz3assign,A0
0001FC2C <AmiBlitz3.ab3@1386>   LEA str_temp_debugmodulename,A1
0001FC2E <AmiBlitz3.ab3@1387>   JSR (A3)                                                  ;open ped filerequest
0001FC32 <AmiBlitz3.ab3@1388>   BEQ.w nodload
0001FC38 <AmiBlitz3.ab3@1393>   MOVE.l D0,ptr_temp_debugmodule
0001FC3C <AmiBlitz3.ab3@1394>   BSR.w call_setpointerbusy
0001FC42 <AmiBlitz3.ab3@1396> 
0001FC48 <AmiBlitz3.ab3@1398>   MOVE.l A7,errstack
0001FC52 <AmiBlitz3.ab3@1399>   MOVE.l #nodload,errcont
0001FC58 <AmiBlitz3.ab3@1400>   MOVE.l ptr_temp_debugmodule,D1
0001FC5C <AmiBlitz3.ab3@1402>   MOVEA.l _dosbase(PC),A6
0001FC60 <AmiBlitz3.ab3@1403>   JSR _LoadSeg(A6)
0001FC62 <AmiBlitz3.ab3@1404>   MOVE.l D0,D7
0001FC66 <AmiBlitz3.ab3@1405>   BEQ.w dloaderr
0001FC6C <AmiBlitz3.ab3@1406>   MOVE.l ptr_seg_debugger,D1
0001FC70 <AmiBlitz3.ab3@1407>   BEQ.b 'ndseg
0001FC74 <AmiBlitz3.ab3@1408>   MOVEA.l _dosbase(PC),A6
0001FC78 <AmiBlitz3.ab3@1409>   JSR _UnLoadSeg(A6)
0001FC7C <AmiBlitz3.ab3@1410>   BSR.w call_setpointernormal
0001FC82 <AmiBlitz3.ab3@1413>   MOVE.l D7,ptr_seg_debugger
0001FC84 <AmiBlitz3.ab3@1416> RTS
0001FCA2 <AmiBlitz3.ab3@1419> str_request_exename:   Dc.b "Name of Executable to Create:",0 : Even                        ;xtext org source
0001FD62 <AmiBlitz3.ab3@1420> exepath:               Ds.l 48                             ;Ds.b #MAX_STRINGSIZE ; Ds.l 48  ;xpath  dcb.b 192,0 org source
0001FE22 <AmiBlitz3.ab3@1421> exefilename:           Ds.l 48                             ;Ds.b #MAX_STRINGSIZE ; Ds.l 48  ;xname  dcb.b 192,0 org source
0001FE26 <AmiBlitz3.ab3@1422> ptr_newexefilename:    Dc.l 0                                                               ;execname org
0001FE50 <AmiBlitz3.ab3@1426>   !basic
0001FE7A <AmiBlitz3.ab3@1427>   exepath.s = Peek.s(?exepath)
0001FEA4 <AmiBlitz3.ab3@1428>   exefile.s = Peek.s(?exefilename)
0001FEDC <AmiBlitz3.ab3@1429>   If exefile <> ""                                         ; test if we have a filename
0001FF14 <AmiBlitz3.ab3@1430>     If exepath <> ""                                       ; yes we have a filename ,test if we have a path
0001FF58 <AmiBlitz3.ab3@1431>       If dos_Exist{exepath}= False Then Goto nonexistpath  ; yes we have a path, test if he exist
0001FFD8 <AmiBlitz3.ab3@1433>     exefile.s = dos_AddPart{exepath,exefile}               ; combinat path and filename
00020010 <AmiBlitz3.ab3@1434>     Poke.s ?tempspace,exefile
0002002E <AmiBlitz3.ab3@1435>     !asm
00020034 <AmiBlitz3.ab3@1456>     LEA tempspace,a0
00020036 <AmiBlitz3.ab3@1457>     MOVE.l a0,d0
0002003A <AmiBlitz3.ab3@1458>    BRA newcreate2                                         ; jump to the compile
00020058 <AmiBlitz3.ab3@1462>    !asm
00020082 <AmiBlitz3.ab3@1468>   !basic
000200AC <AmiBlitz3.ab3@1469>   request_exename.s = Peek.s(?str_request_exename )
00020108 <AmiBlitz3.ab3@1470>   request_exename   = !TRANS{request_exename}
0002010E <AmiBlitz3.ab3@1471>   GetD0 &request_exename
0002012C <AmiBlitz3.ab3@1472>   !asm
0002012E <AmiBlitz3.ab3@1473>   MOVE.l D0,A2
0002016C <AmiBlitz3.ab3@1477>   !ComData_GetL{comFunc_ASLFileRequest,A3}
00020172 <AmiBlitz3.ab3@1479>   LEA exepath,A0
00020178 <AmiBlitz3.ab3@1480>   LEA exefilename,A1
0002017A <AmiBlitz3.ab3@1481>   JSR (A3)                                                 ;open ped filerequest
0002017E <AmiBlitz3.ab3@1483>   BEQ.w cancel_createexe    ; was 'err
00020188 <AmiBlitz3.ab3@1487>   ADD.l #1,number_of_builds
0002018E <AmiBlitz3.ab3@1491>   MOVE.l D0,ptr_newexefilename
00020196 <AmiBlitz3.ab3@1492>   MOVE.w #-1,debugversion
0002019E <AmiBlitz3.ab3@1498>     MOVE.w #1,makeexec
000201A4 <AmiBlitz3.ab3@1499>     JSR ab3_OpenDebugFile
000201A8 <AmiBlitz3.ab3@1501>     BSR.w startcompile
000201AE <AmiBlitz3.ab3@1503>     JSR ab3_CloseDebugFile
000201B8 <AmiBlitz3.ab3@1505>     CMP.l #"NORE",reqmode
000201BC <AmiBlitz3.ab3@1506>   BEQ 'l1
000201C2 <AmiBlitz3.ab3@1508>   TST.w anyerrs
000201C6 <AmiBlitz3.ab3@1509>   BNE.b 'skip
000201CA <AmiBlitz3.ab3@1510>   BSR.w savefile
000201CC <AmiBlitz3.ab3@1516> RTS
000201D4 <AmiBlitz3.ab3@1520>   MOVE.w #-1,flag_noPED
000201D6 <AmiBlitz3.ab3@1521> RTS
000201DE <AmiBlitz3.ab3@1525>   MOVE.w #-1,flag_noCLI
000201E0 <AmiBlitz3.ab3@1526> RTS
0002020A <AmiBlitz3.ab3@1530>   !basic
0002021C <AmiBlitz3.ab3@1531>     If dbg_fid>=0
0002022E <AmiBlitz3.ab3@1532> 
00020242 <AmiBlitz3.ab3@1533>         file_WriteMem{dbg_fid,&dbg_detokenlinesBuffer,fillcount} ; yes save it
0002024A <AmiBlitz3.ab3@1534>         fillcount = 0                                            ; set it back to zero bytes
00020254 <AmiBlitz3.ab3@1536>       file_Close{dbg_fid}
00020260 <AmiBlitz3.ab3@1537>       dbg_fid = -1
00020270 <AmiBlitz3.ab3@1539>     Poke.w ?word_WriteDebugFileNow,0
0002028E <AmiBlitz3.ab3@1540>   !asm
00020290 <AmiBlitz3.ab3@1541> RTS
00020294 <AmiBlitz3.ab3@1545>   BSR ab3_CloseDebugFile     ; remove double code and replaced it with a call of the subroutine  tomsmart1
000202BE <AmiBlitz3.ab3@1546>   !basic
000202D0 <AmiBlitz3.ab3@1547>     If dbg_fid.l<0
000202D2 <AmiBlitz3.ab3@1548>       CLR.l d0
00020310 <AmiBlitz3.ab3@1549>       !ComData_GetW{comWord_CreateDebugFile,D0}
00020314 <AmiBlitz3.ab3@1550>       dbg_Create.l = PutD0
0002031E <AmiBlitz3.ab3@1551>       If (dbg_Create) ; only when set!
0002032E <AmiBlitz3.ab3@1552>         exefileP.l = Peek.l (?ptr_newexefilename)
00020356 <AmiBlitz3.ab3@1553>         exefile.s = ""
00020388 <AmiBlitz3.ab3@1554>         If exefileP Then exefile.s = Peek.s(exefileP)
000203C0 <AmiBlitz3.ab3@1555>         If exefile><""
00020416 <AmiBlitz3.ab3@1556>           dbg_fid = file_Open{exefile+".dbg",#file_forcewrite}
00020428 <AmiBlitz3.ab3@1557>           If dbg_fid>=0
0002043A <AmiBlitz3.ab3@1558>             Poke.w ?word_WriteDebugFileNow,-1
00020446 <AmiBlitz3.ab3@1561>         oldhunkoffset.l = -1
0002046E <AmiBlitz3.ab3@1562>         oldfile.s       = ""
00020476 <AmiBlitz3.ab3@1563>         fillcount       = 0       ; set it to zero bytes in the buffer
00020494 <AmiBlitz3.ab3@1566>   !asm
00020496 <AmiBlitz3.ab3@1567> RTS
0002049C <AmiBlitz3.ab3@1571>   TST.w word_WriteDebugFileNow
000204A0 <AmiBlitz3.ab3@1572>   BEQ 'skipdebugfile
000204CA <AmiBlitz3.ab3@1573>   !basic
000204DC <AmiBlitz3.ab3@1574>     If dbg_fid>=0
000204EE <AmiBlitz3.ab3@1575>       pass.l          = Peek.w(?pass)
00020500 <AmiBlitz3.ab3@1576>       makesmallest.b  = Peek.b(?make_smallestcode)               ; get the status of make_smallestcode  tomsmart1
00020524 <AmiBlitz3.ab3@1577> 
0002052A <AmiBlitz3.ab3@1578>         oldhunkoffset.l = hunkoffset.l
0002055E <AmiBlitz3.ab3@1579>         oldfile.s       = codefile.s
0002057A <AmiBlitz3.ab3@1580>         If Peek.w (?ininclude)>0
0002058A <AmiBlitz3.ab3@1581>           codeline.l = Peek.l(?includeline);-1
000205FA <AmiBlitz3.ab3@1582>           codefile.s = dos_FilePart{incdim(Peek.w(?ininclude)-1)}
00020600 <AmiBlitz3.ab3@1583>         Else
0002062E <AmiBlitz3.ab3@1584>           !ComData_LEA{comStr_SourceName,A0}
00020630 <AmiBlitz3.ab3@1585>           MOVE.l A0,D0
00020634 <AmiBlitz3.ab3@1586>           sourceP.l = PutD0
0002065C <AmiBlitz3.ab3@1587>           codefile.s = Peek.s(sourceP)
0002066C <AmiBlitz3.ab3@1588>           codeline.l = Peek.l(?linenumat)
00020694 <AmiBlitz3.ab3@1590>         hunkoffset.l = Peek.l(?destpointer)-Peek.l(?destbufferstart)
000206E8 <AmiBlitz3.ab3@1591>         If oldhunkoffset><hunkoffset OR oldfile><codefile
0002078A <AmiBlitz3.ab3@1592>           linebegintext.s = Hex$(hunkoffset)+" <"+codefile+"@"+Str$(codeline)+"> "
0002079E <AmiBlitz3.ab3@1593>           linebeginlen.l  = FLen(linebegintext)
000207DC <AmiBlitz3.ab3@1594>           Poke.s &dbg_detokenlinesBuffer+fillcount,linebegintext           ; copy the begin of the line text to the buffer
000207EA <AmiBlitz3.ab3@1595>           fillcount + linebeginlen
000207FA <AmiBlitz3.ab3@1597>           *sourceLine.SourceLine_t = Peek.l(?sourceline)
00020804 <AmiBlitz3.ab3@1598>           If *sourceLine
00020846 <AmiBlitz3.ab3@1599>             !ComData_GetL{comPtr_PreProcessor,include_preprocessor}
00020856 <AmiBlitz3.ab3@1600>             *tn.preprocessor = Peek.l(?include_preprocessor)
00020888 <AmiBlitz3.ab3@1601>             written.l = preproc_Detokenize{*tn,&*sourceLine\Text,&dbg_detokenlinesBuffer+fillcount,*sourceLine\CharLength}
0002089A <AmiBlitz3.ab3@1602>             If written>0
000208A8 <AmiBlitz3.ab3@1603>               written-1
000208B6 <AmiBlitz3.ab3@1605>             fillcount + written                                            ; added the dekotenline size to the count
000208BC <AmiBlitz3.ab3@1606>           Else
000208EE <AmiBlitz3.ab3@1607>             Poke.s &dbg_detokenlinesBuffer+fillcount,"NULL"                ; copy it to the buffer
000208FC <AmiBlitz3.ab3@1608>             fillcount + 4                                                  ; added the size to the count
00020912 <AmiBlitz3.ab3@1611>           Poke.b &dbg_detokenlinesBuffer+fillcount,10                      ; copy line end (return) in to the buffer
00020920 <AmiBlitz3.ab3@1612>           fillcount +1                                                     ; count +1
00020932 <AmiBlitz3.ab3@1614>           If fillcount >= (#MAX_dbg_detokenlinesBufferSize - #MAX_Columns) ; check if we have no room for a nother line
00020946 <AmiBlitz3.ab3@1615>             file_WriteMem{dbg_fid,&dbg_detokenlinesBuffer,fillcount}       ; no room write the buffer it do disk
0002094E <AmiBlitz3.ab3@1616>             fillcount = 0                                                  ; set it back to zero bytes
0002096C <AmiBlitz3.ab3@1622>   !asm
0002096E <AmiBlitz3.ab3@1625> RTS
00020970 <AmiBlitz3.ab3@1627> word_WriteDebugFileNow: Dc.w 0
00020972 <AmiBlitz3.ab3@1631> flag_noPED:  Ds.w 1                                        ;closeed org source
00020974 <AmiBlitz3.ab3@1632> flag_noCLI:  Ds.w 1                                        ;nocli org source
00020978 <AmiBlitz3.ab3@1636>   MOVEM.l A2-A3,-(A7)
0002097E <AmiBlitz3.ab3@1637>   CLR.b doublepeek
00020984 <AmiBlitz3.ab3@1638>   MOVE.l A5,lastsourcepos
0002098A <AmiBlitz3.ab3@1639>    JSR getchar
0002098E <AmiBlitz3.ab3@1640>   CMP.w #$2E,D0              ;'.'
00020992 <AmiBlitz3.ab3@1641>    BEQ.w 'ok
00020998 <AmiBlitz3.ab3@1642>   MOVEA.l defaulttype,A2
0002099C <AmiBlitz3.ab3@1643>   CMP.w #$24,D0              ;'$'
000209A0 <AmiBlitz3.ab3@1644>    BNE.w 'none
000209A2 <AmiBlitz3.ab3@1645>   MOVEQ.l #$07,D1
000209A6 <AmiBlitz3.ab3@1646>  BRA.w 'skip
000209AC <AmiBlitz3.ab3@1649>   JSR getparameter2
000209B0 <AmiBlitz3.ab3@1650>   BEQ.w JUMP_syntaxerr1
000209B6 <AmiBlitz3.ab3@1651>   LEA newtypebase,A2
000209BC <AmiBlitz3.ab3@1652>   JSR findtype
000209C0 <AmiBlitz3.ab3@1653>   BNE.w JUMP_notypeerr1
000209CA <AmiBlitz3.ab3@1658>   MOVE.w oldqflag,instringon
000209D0 <AmiBlitz3.ab3@1659>   MOVEA.l lastsourcepos,A5
000209D6 <AmiBlitz3.ab3@1661>   MOVE.l a2,functionreturntype
000209DE <AmiBlitz3.ab3@1662>   CMPI.l #$100,$4(A2)
000209E2 <AmiBlitz3.ab3@1663>   BLE.w 'isvar
000209E4 <AmiBlitz3.ab3@1667>   MOVEQ #3,d1
000209E8 <AmiBlitz3.ab3@1668>   BRA 'skip
000209EC <AmiBlitz3.ab3@1678>   MOVE.w $6(A2),D1
000209F2 <AmiBlitz3.ab3@1680>   CMP.w #8,8(a2)
000209F6 <AmiBlitz3.ab3@1681>   BNE 'l1
000209FE <AmiBlitz3.ab3@1682>   MOVE.b #1,doublepeek
00020A04 <AmiBlitz3.ab3@1687>   MOVE.w D1,convsize
00020A08 <AmiBlitz3.ab3@1688>   MOVEM.l (A7)+,A2-A3
00020A0A <AmiBlitz3.ab3@1689> RTS
00020A10 <AmiBlitz3.ab3@1691> JUMP_notypeerr1  JMP notypeerr
00020A16 <AmiBlitz3.ab3@1692> JUMP_illtypeerr1 JMP illtypeerr
00020A1C <AmiBlitz3.ab3@1693> JUMP_syntaxerr1  JMP syntaxerr
00020A20 <AmiBlitz3.ab3@1698>   MOVEM.l D0-D1/A0-A1/A6,-(A7)
00020A26 <AmiBlitz3.ab3@1699>   MOVEA.l _execbase,A6
00020A2C <AmiBlitz3.ab3@1700>   TST.b MorphOS                    ; test if we have MorphOS ( 0 no, 1 yes)
00020A30 <AmiBlitz3.ab3@1701>    BEQ 'useclearU                  ; if we have 0 = No MorpOS then jump
00020A32 <AmiBlitz3.ab3@1703>   MOVEQ.l #8,d1
00020A38 <AmiBlitz3.ab3@1704>   MOVE.l #200,d0
00020A3C <AmiBlitz3.ab3@1705>   JSR _CacheClearE(A6)
00020A40 <AmiBlitz3.ab3@1706>  BRA 'exit
00020A44 <AmiBlitz3.ab3@1745>   JSR _CacheClearU(A6)
00020A48 <AmiBlitz3.ab3@1748>   MOVEM.l (A7)+,D0-D1/A0-A1/A6
00020A4A <AmiBlitz3.ab3@1749> RTS
00020A54 <AmiBlitz3.ab3@1757>   ADD.l #1,number_of_builds
00020A5A <AmiBlitz3.ab3@1759>   CLR.w debugversion
00020A60 <AmiBlitz3.ab3@1760>   CLR.w flag_noPED
00020A66 <AmiBlitz3.ab3@1761>   CLR.w flag_noCLI
00020A6E <AmiBlitz3.ab3@1765>     MOVE.w #0,makeexec                                     ;MOVE.w #$FFFF,debugversion
00020A72 <AmiBlitz3.ab3@1767>     BSR.w startcompile
00020A7C <AmiBlitz3.ab3@1769>     CMP.l #"NORE",reqmode
00020A80 <AmiBlitz3.ab3@1770>   BEQ 'l1
00020A86 <AmiBlitz3.ab3@1776>   TST.w anyerrs
00020A8A <AmiBlitz3.ab3@1777>    BNE.w 'dontrun
00020A8E <AmiBlitz3.ab3@1779>   MOVE.w flag_noPED(PC),D1
00020A92 <AmiBlitz3.ab3@1780>    BEQ.w 'noclose
00020AC4 <AmiBlitz3.ab3@1784>   !ComData_JSR{comFunc_CloseGUI}
00020AC8 <AmiBlitz3.ab3@1785>  BRA.b 'runprogram
00020ACC <AmiBlitz3.ab3@1789>   BSR.w compilerequester
00020AD2 <AmiBlitz3.ab3@1794>   MOVEA.l _dosbase,A6
00020AD8 <AmiBlitz3.ab3@1796>   LEA exepath,a0
00020ADA <AmiBlitz3.ab3@1797>   MOVE.l a0,d1
00020ADC <AmiBlitz3.ab3@1798>   MOVEQ #-2,d2
00020AE0 <AmiBlitz3.ab3@1799>   JSR _Lock(a6)                                            ;lock
00020AE6 <AmiBlitz3.ab3@1800>   MOVE.l d0,exelock
00020AEC <AmiBlitz3.ab3@1802>   MOVE.l #0,d1
00020AF0 <AmiBlitz3.ab3@1803>   JSR _CurrentDir(A6)
00020AF6 <AmiBlitz3.ab3@1804>   MOVE.l D0,lock_currentdir
00020AF8 <AmiBlitz3.ab3@1805>   MOVE.l D0,D1
00020AFC <AmiBlitz3.ab3@1806>   JSR _CurrentDir(A6)
00020B02 <AmiBlitz3.ab3@1808>   CLR.l ptr_exetask
00020B08 <AmiBlitz3.ab3@1817>   MOVE.l #str_process_name,D1
00020B0A <AmiBlitz3.ab3@1818>   MOVEQ.l #$00,D2
00020B10 <AmiBlitz3.ab3@1819>   MOVE.l #proc_seglist,D3
00020B12 <AmiBlitz3.ab3@1820>   LSR.l #2,D3
00020B18 <AmiBlitz3.ab3@1821>   MOVE.l stacksize,D4
00020B1E <AmiBlitz3.ab3@1822>   MOVEA.l _dosbase,A6
00020B22 <AmiBlitz3.ab3@1823>   JSR _CreateProc(A6)                                      ;runtask
00020B24 <AmiBlitz3.ab3@1824>   TST.l D0
00020B28 <AmiBlitz3.ab3@1825>    BEQ 'ErrorRunningProg
00020B5E <AmiBlitz3.ab3@1830>   !ComData_SetB{comByte_RunningFlag,#1}   ; this should be done here, straigt after it is clear that
00020B64 <AmiBlitz3.ab3@1834>   TST.w flag_noPED
00020B68 <AmiBlitz3.ab3@1835>    BNE.b 'fatal
00020B6C <AmiBlitz3.ab3@1836>   BSR.w close_compilewin
00020B72 <AmiBlitz3.ab3@1839>   CLR.l firstlocal
00020B78 <AmiBlitz3.ab3@1840>   CLR.l firstglob
00020B7C <AmiBlitz3.ab3@1842>   MOVE.w flag_noPED(PC),D1
00020B80 <AmiBlitz3.ab3@1843>   BEQ.w 'noopen         ;skip_openGUI
00020BB2 <AmiBlitz3.ab3@1847>   !ComData_JSR{comFunc_CreateGUI}
00020BB4 <AmiBlitz3.ab3@1857>  RTS
00020BBE <AmiBlitz3.ab3@1861>   MOVE.l #1,_runerror
00020BC2 <AmiBlitz3.ab3@1862> BRA 'fatal
00020BC6 <AmiBlitz3.ab3@1866> _runerror: Dc.l 0
00020BCA <AmiBlitz3.ab3@1867> lock_currentdir:    Ds.l 1                                          ;tasklock org source
00020BCE <AmiBlitz3.ab3@1868> ptr_exetask:        Ds.l 1                                          ;panictask org source
00020BD2 <AmiBlitz3.ab3@1869> signalNum:          Ds.l 1                                          ;panicbit org source
00020BD6 <AmiBlitz3.ab3@1870> signals:            Ds.l 1                                          ;panicmask org source
00020BEC <AmiBlitz3.ab3@1872> str_process_name:   Dc.b "Blitz ][ Program Proc",0 : Even           ;procname org source
00020BF1 <AmiBlitz3.ab3@1873>                     Ds.b 5                                          ;cnop 0,4 :dc.l 0   ;length org source
00020BF4 <AmiBlitz3.ab3@1874> Even4
00020BF8 <AmiBlitz3.ab3@1876> ptr_ThisTask:       Ds.l 1                                          ;length
00020BFC <AmiBlitz3.ab3@1877> .proc_seglist:      Ds.l 1                                          ;procstart org source ;next
00020C02 <AmiBlitz3.ab3@1881>   MOVEA.l $4,A0
00020C0A <AmiBlitz3.ab3@1882>   MOVE.l  $114(A0),ptr_exetask
00020C10 <AmiBlitz3.ab3@1884>   MOVEA.l _dosbase,A6
00020C16 <AmiBlitz3.ab3@1885>   MOVE.l exelock,D1
00020C1A <AmiBlitz3.ab3@1886>   JSR _CurrentDir(A6)
00020C50 <AmiBlitz3.ab3@1892>   !ComData_SetB{comByte_RunningFlag,#1}
00020C54 <AmiBlitz3.ab3@1899>   MOVE.w flag_noCLI(PC),D1
00020C58 <AmiBlitz3.ab3@1900>    BNE.b 'skip_openconsole
00020C8A <AmiBlitz3.ab3@1904>   !ComData_JSR{comFunc_OpenConsole}
00020C8E <AmiBlitz3.ab3@1907>   BSR.w calcvbr
00020C94 <AmiBlitz3.ab3@1908>   MOVEA.l vbr,A0
00020C9A <AmiBlitz3.ab3@1913>   CLR.w dirmode
00020CA0 <AmiBlitz3.ab3@1914>   CLR.l firstglob
00020CA6 <AmiBlitz3.ab3@1915>   CLR.l firstlocal
00020CAC <AmiBlitz3.ab3@1919>   MOVE.l stacksize,D2
00020CB2 <AmiBlitz3.ab3@1920>   MOVE.l #$624C745A,D7                                      ;#'bLtZ',d7 org source ;force cli-type run
00020CB8 <AmiBlitz3.ab3@1921>   LEA str_cliarguments,A0                                   ;cli arguement
00020CBE <AmiBlitz3.ab3@1922>   MOVEA.l destbufferstart,A1
00020CC2 <AmiBlitz3.ab3@1924>   BSR.w Aclearcache
00020CC4 <AmiBlitz3.ab3@1928>   JSR (A1)                                                 ; execute compiled code  ;Run the thing!
00020CCA <AmiBlitz3.ab3@1931>   MOVEA.l vbr,A0
00020CD0 <AmiBlitz3.ab3@1933>   CLR.l firstglob
00020CD6 <AmiBlitz3.ab3@1934>   CLR.l firstlocal
00020CDC <AmiBlitz3.ab3@1935>   MOVEA.l _dosbase,A6
00020CE2 <AmiBlitz3.ab3@1936>   MOVE.l exelock,d1
00020CE6 <AmiBlitz3.ab3@1937>   BEQ 'nolock
00020CEA <AmiBlitz3.ab3@1938>   JSR _UnLock(a6)
00020D20 <AmiBlitz3.ab3@1943>   !ComData_SetB{comByte_RunningFlag,#0}
00020D24 <AmiBlitz3.ab3@1947>   MOVE.w flag_noCLI(PC),D1
00020D28 <AmiBlitz3.ab3@1948>    BNE.b 'skip_closeconsole
00020D5A <AmiBlitz3.ab3@1952>   !ComData_JSR{comFunc_CloseConsole}
00020D62 <AmiBlitz3.ab3@1955>   MOVE.w #$0001,stopit      ;ended OK!
00020D66 <AmiBlitz3.ab3@1956>   MOVE.l signals(PC),D0
00020D6C <AmiBlitz3.ab3@1957>   MOVEA.l ptr_ThisTask,A1
00020D72 <AmiBlitz3.ab3@1958>   MOVEA.l _execbase,A6
00020D76 <AmiBlitz3.ab3@1959>   JSR _Signal(A6)
00020D78 <AmiBlitz3.ab3@1960> RTS
00020D7E <AmiBlitz3.ab3@1964>   MOVEA.l _execbase,A6
00020D82 <AmiBlitz3.ab3@1965>   MOVE.w $128(A6),D0
00020D84 <AmiBlitz3.ab3@1966>   MOVEQ.l #$00,D1
00020D88 <AmiBlitz3.ab3@1967>   ANDI.w #$F,D0
00020D8C <AmiBlitz3.ab3@1970>     BEQ.b 'skip
00020D8E <AmiBlitz3.ab3@1971>     ADDQ.w #1,D1
00020D90 <AmiBlitz3.ab3@1972>     LSR.w #1,D0
00020D94 <AmiBlitz3.ab3@1973>  BRA.b 'loop
00020D96 <AmiBlitz3.ab3@1976>   MOVEQ.l #$00,D2
00020D9A <AmiBlitz3.ab3@1977>   CMP.w #$2,D1
00020D9E <AmiBlitz3.ab3@1978>    BCS.b 'skip2
00020DA4 <AmiBlitz3.ab3@1979>   MOVEA.l _execbase,A6
00020DA8 <AmiBlitz3.ab3@1980>   JSR _SuperState(A6)
00020DAC <AmiBlitz3.ab3@1981>   Dc.l $4E7A2801                                           ;movec vbr,D2
00020DB0 <AmiBlitz3.ab3@1982>   JSR _UserState(A6)
00020DB6 <AmiBlitz3.ab3@1985>   MOVE.l D2,vbr
00020DB8 <AmiBlitz3.ab3@1986> RTS
00020DBE <AmiBlitz3.ab3@1991>   LEA instrtab,a0
00020DC4 <AmiBlitz3.ab3@1992>   MOVE.l #labelhash-instrtab,d0
00020DC6 <AmiBlitz3.ab3@1993>   ASR.l #2,d0
00020DC8 <AmiBlitz3.ab3@1994>   SUBQ.l #1,d0
00020DCA <AmiBlitz3.ab3@1997>   CLR.l (a0)+
00020DCC <AmiBlitz3.ab3@1998>   SUBQ.l #1,d0
00020DD0 <AmiBlitz3.ab3@1999>   BNE 'l10
00020DD4 <AmiBlitz3.ab3@2001>   BSR.w call_setpointerbusy
00020DD8 <AmiBlitz3.ab3@2002>   BSR.w free_userlibs
00020DDC <AmiBlitz3.ab3@2003>   BSR.w scan_for_userlibs
00020DE0 <AmiBlitz3.ab3@2004>   BSR.w loadblitzlibs
00020DE4 <AmiBlitz3.ab3@2005> BRA.w call_setpointernormal
00020E0E <AmiBlitz3.ab3@2017>   !basic
00020E48 <AmiBlitz3.ab3@2018>   Poke.l ?size_acidlibs, dos_GetFileSize{Peek$(?str_path_acidlibs)}
00020E58 <AmiBlitz3.ab3@2020>   deflibNameP.l = Peek.l(?deflib)
00020E62 <AmiBlitz3.ab3@2021>   If deflibNameP
00020E94 <AmiBlitz3.ab3@2022>     If Peek.s(deflibNameP)<>""
00020EDE <AmiBlitz3.ab3@2023>       Poke.l ?size_deflibs, dos_GetFileSize{Peek.s(Peek.l(?deflib))}
00020EE4 <AmiBlitz3.ab3@2024>     Else
00020F1E <AmiBlitz3.ab3@2025>       Poke.l ?size_deflibs, dos_GetFileSize{Peek.s(?str_path_deflibs)}
00020F24 <AmiBlitz3.ab3@2027>   Else
00020F5E <AmiBlitz3.ab3@2028>     Poke.l ?size_deflibs, dos_GetFileSize{Peek.s(?str_path_deflibs)}
00020F98 <AmiBlitz3.ab3@2029>     error{"INTERNAL: Invalid deflib name pointer!"}
00020FB6 <AmiBlitz3.ab3@2031>   !asm
00020FBC <AmiBlitz3.ab3@2037>   MOVE.l #str_path_userlibs,D1
00020FBE <AmiBlitz3.ab3@2038>   MOVEQ.l #-$02,D2
00020FC4 <AmiBlitz3.ab3@2039>   MOVEA.l _dosbase,A6
00020FC8 <AmiBlitz3.ab3@2040>   JSR _Lock(A6)
00020FCA <AmiBlitz3.ab3@2041>   MOVE.l D0,D7
00020FCE <AmiBlitz3.ab3@2042>    BEQ.w 'done     ;exit_get_libraries
00020FD0 <AmiBlitz3.ab3@2044>   MOVE.l D7,D1
00020FD6 <AmiBlitz3.ab3@2045>   MOVE.l #ptr_parameterstore,D2
00020FDA <AmiBlitz3.ab3@2046>   JSR _Examine(A6)
00020FDC <AmiBlitz3.ab3@2047>   TST.l D0
00020FE0 <AmiBlitz3.ab3@2048>   BEQ.w 'done2   ;unlock_and_exit_get_libraries
00020FE6 <AmiBlitz3.ab3@2049>   MOVE.l fib_DirEntryType,D0
00020FEA <AmiBlitz3.ab3@2050>   BMI.w 'done2   ;unlock_and_exit_get_libraries
00020FEC <AmiBlitz3.ab3@2058>     MOVE.l D7,D1
00020FF2 <AmiBlitz3.ab3@2059>     MOVE.l #ptr_parameterstore,D2
00020FF8 <AmiBlitz3.ab3@2060>     MOVEA.l _dosbase,A6
00020FFC <AmiBlitz3.ab3@2061>     JSR _ExNext(A6)
00020FFE <AmiBlitz3.ab3@2062>     TST.l D0
00021002 <AmiBlitz3.ab3@2063>      BEQ.w 'ok    ;exit_scan_libsdrawer                            ; kein weiteres File
00021008 <AmiBlitz3.ab3@2065>     MOVE.l fib_DirEntryType,D0                             ; positive for directoies, negative for files
0002100C <AmiBlitz3.ab3@2066>     BPL.w 'loop    ;scan_libsdrawer                                  ; skip directories
00021012 <AmiBlitz3.ab3@2068>     LEA fib_FileName,A0                                    ; pruefen ob infofile
00021016 <AmiBlitz3.ab3@2069>     BSR.w check_for_infoextention
0002101A <AmiBlitz3.ab3@2070>     BEQ.w 'loop    ;scan_libsdrawer
00021020 <AmiBlitz3.ab3@2072>     MOVEA.l _execbase,A6                                   ; allocate $26 = 38 bytes fuer listeneintrag
00021022 <AmiBlitz3.ab3@2073>     MOVEQ.l #$26,D0
00021024 <AmiBlitz3.ab3@2074>     MOVEQ.l #$01,D1
0002102A <AmiBlitz3.ab3@2076>     MOVE.l mempool,a0
0002102E <AmiBlitz3.ab3@2077>     JSR _AllocPooled(a6)
00021034 <AmiBlitz3.ab3@2080>     MOVEA.l _dosbase,A6
00021036 <AmiBlitz3.ab3@2082>     MOVE.l D0,D6                                           ; sichere speicheradresse in D6
0002103C <AmiBlitz3.ab3@2084>     LEA ptr_userlibs_list,A0                               ; pruefe liste
0002103E <AmiBlitz3.ab3@2087>     MOVE.l (A0),D5
00021042 <AmiBlitz3.ab3@2088>      BEQ.w 'here                                       ; kein pointer da? kann springe weiter
00021044 <AmiBlitz3.ab3@2089>     MOVEA.l D5,A2
00021046 <AmiBlitz3.ab3@2090>     ADDQ.w #6,A2                                       ; 6 bytes weiter gehen, um dateinamen zu speichern
0002104C <AmiBlitz3.ab3@2092>     LEA fib_FileName,A1    ;filename                  ; vergleich, ob Dateiname schon in der liste ist
0002104E <AmiBlitz3.ab3@2095>       MOVEQ.l #$00,D0
00021050 <AmiBlitz3.ab3@2096>       MOVE.b (A1)+,D0
00021054 <AmiBlitz3.ab3@2097>        BEQ.w 'here         ;I'm shorter                ; dateiname komplett, dann weiter
00021056 <AmiBlitz3.ab3@2098>       MOVEQ.l #$00,D1
00021058 <AmiBlitz3.ab3@2099>       MOVE.b (A2)+,D1
0002105C <AmiBlitz3.ab3@2100>        BEQ.w 'next         ;I'm longer
0002107E <AmiBlitz3.ab3@2102>       !compare1                                            ;bsr.w tstalpha
00021082 <AmiBlitz3.ab3@2104>       BNE.w 'acskip
00021086 <AmiBlitz3.ab3@2105>       ANDI.w #$DF,D0       ; was 255-32
00021088 <AmiBlitz3.ab3@2108>       EXG.l D0,D1
000210AA <AmiBlitz3.ab3@2110>       !compare1                                            ;bsr.w tstalpha
000210AE <AmiBlitz3.ab3@2112>       BNE.w 'acskip2
000210B2 <AmiBlitz3.ab3@2113>       ANDI.w #$DF,D0        ; was 255-32
000210B4 <AmiBlitz3.ab3@2116>       EXG.l D0,D1
000210B6 <AmiBlitz3.ab3@2117>       CMP.b D1,D0
000210BA <AmiBlitz3.ab3@2118>     BEQ.w 'comloop
000210BE <AmiBlitz3.ab3@2119>     BCS.w 'here             ;I'm less than
000210C0 <AmiBlitz3.ab3@2122>     MOVEA.l D5,A0
000210C4 <AmiBlitz3.ab3@2123>  BRA.w 'insloop
000210C6 <AmiBlitz3.ab3@2126>     MOVEA.l D6,A1                                          ; hier war die adresse des allokierten Speicers drin
000210C8 <AmiBlitz3.ab3@2127>     MOVE.l (A0),(A1)            ;next of last is next of me
000210CA <AmiBlitz3.ab3@2128>     MOVE.l A1,(A0)              ;I am next of last
000210CC <AmiBlitz3.ab3@2129>     ADDQ.w #4,A1                                           ; pointer zum naechsten namen ueberspringen
000210D0 <AmiBlitz3.ab3@2130>     MOVE.w #$FFFF,(A1)+         ; was - 1;set 'Used' flag  ; $FFFF schreiben
000210D6 <AmiBlitz3.ab3@2131>     MOVEA.l #fib_FileName,A0    ; was #namebuff+8,         ; dateinamen in die liste kopieren
000210D8 <AmiBlitz3.ab3@2134>       MOVE.b (A0)+,(A1)+
000210DC <AmiBlitz3.ab3@2135>     BNE.w 'coploop
000210E0 <AmiBlitz3.ab3@2136>  BRA.w 'loop    ;scan_libsdrawer
000210E2 <AmiBlitz3.ab3@2139>   MOVE.l D7,D1
000210E8 <AmiBlitz3.ab3@2140>   MOVEA.l _dosbase,A6
000210EC <AmiBlitz3.ab3@2141>   JSR _UnLock(A6)
000210EE <AmiBlitz3.ab3@2142>   MOVEQ.l #-$01,D0
000210F0 <AmiBlitz3.ab3@2145>  RTS
000210F2 <AmiBlitz3.ab3@2148>   MOVE.l D7,D1
000210F8 <AmiBlitz3.ab3@2149>   MOVEA.l _dosbase,A6
000210FC <AmiBlitz3.ab3@2150>   JSR _UnLock(A6)
000210FE <AmiBlitz3.ab3@2151>   MOVEQ.l #$00,D0
00021100 <AmiBlitz3.ab3@2152> RTS
00021106 <AmiBlitz3.ab3@2157>   MOVEA.l _execbase,A6
0002110C <AmiBlitz3.ab3@2158>   MOVEA.l ptr_userlibs_list,A2
00021112 <AmiBlitz3.ab3@2159>   CLR.l ptr_userlibs_list
00021116 <AmiBlitz3.ab3@2162>     CMPA.w #$0,A2
0002111A <AmiBlitz3.ab3@2163>     BEQ.w 'done
0002111C <AmiBlitz3.ab3@2164>       MOVEA.l A2,A1
0002111E <AmiBlitz3.ab3@2165>       MOVEQ.l #$26,D0
00021120 <AmiBlitz3.ab3@2166>       MOVEA.l (A2),A2
00021126 <AmiBlitz3.ab3@2168>       MOVE.l mempool,a0
0002112C <AmiBlitz3.ab3@2169>       MOVEA.l _execbase,A6
00021130 <AmiBlitz3.ab3@2170>       JSR _FreePooled(A6)
00021134 <AmiBlitz3.ab3@2173>  BRA.w 'loop
00021136 <AmiBlitz3.ab3@2176> RTS
00021138 <AmiBlitz3.ab3@2180> pass:  Dc.w 0                                             ; smallpass org source
0002113A <AmiBlitz3.ab3@2181> compiler_job: Dc.w 0                                      ; added by thilo: what the compiler is doing at the moment
00021140 <AmiBlitz3.ab3@2187>   MOVE.l A7,errstack                                      ;startcompile
00021144 <AmiBlitz3.ab3@2189>   !regs2stack
0002114C <AmiBlitz3.ab3@2190>   BTST #$7,make_smallestcode       ; test if makesmall is set
00021150 <AmiBlitz3.ab3@2191>   BNE 'nobigallox                  ; yes makesmall is set, we don't change the buffers
00021156 <AmiBlitz3.ab3@2192>     JSR bigallox                   ; no try to make big buffers for 1 pass compile
0002115A <AmiBlitz3.ab3@2195>   !stack2regs
00021160 <AmiBlitz3.ab3@2206>   CLR.l reqmode
0002116A <AmiBlitz3.ab3@2208>   MOVE.l #Aclearallvars,errcont
00021174 <AmiBlitz3.ab3@2209>   MOVE.l #concomstack,concomsp
00021178 <AmiBlitz3.ab3@2218>   MOVE.w #1450,D0
0002117A <AmiBlitz3.ab3@2220>   LSR.w #3,D0
0002117C <AmiBlitz3.ab3@2221>   SUBQ.w #7,D0                                             ; 173
00021182 <AmiBlitz3.ab3@2222>   MOVE.w D0,progressbar_width
00021184 <AmiBlitz3.ab3@2223>   SWAP D0
00021186 <AmiBlitz3.ab3@2224>   CLR.w D0
0002118C <AmiBlitz3.ab3@2225>   MOVE.l numlines,d1           ; was divu numlines,d0
00021190 <AmiBlitz3.ab3@2226>   DIVU.l d1,d0                                             ; progressbar_width / numlines
00021192 <AmiBlitz3.ab3@2228>   TST.w D0
00021196 <AmiBlitz3.ab3@2229>   BNE.w 'ok
00021198 <AmiBlitz3.ab3@2230>   MOVEQ.l #-$01,D0
0002119E <AmiBlitz3.ab3@2233>   MOVE.w D0,progress_per_line
000211A6 <AmiBlitz3.ab3@2243>   BTST #$7,use_debugger
000211AA <AmiBlitz3.ab3@2246>   BNE 'debugon
000211B0 <AmiBlitz3.ab3@2247>   CLR.w debugmode
000211B4 <AmiBlitz3.ab3@2248>  BRA.b 'debugoff
000211BA <AmiBlitz3.ab3@2251>   SNE debugmode
000211F2 <AmiBlitz3.ab3@2259>   !ComData_SetB{comByte_DebugMode,debugmode}
000211F8 <AmiBlitz3.ab3@2262>   CLR.w dirmode           ;direct mode flag                                  ;direct mode flag
000211FE <AmiBlitz3.ab3@2263>   CLR.w ezerr             ;quiet error                                 ;quiet error
00021204 <AmiBlitz3.ab3@2264>   CLR.l currentfunction
0002120A <AmiBlitz3.ab3@2265>   CLR.w connest
00021210 <AmiBlitz3.ab3@2266>   CLR.w varmode
00021216 <AmiBlitz3.ab3@2267>   CLR.w proceduremode
0002121C <AmiBlitz3.ab3@2268>   CLR.w ininclude
00021222 <AmiBlitz3.ab3@2269>   CLR.w intstring
00021228 <AmiBlitz3.ab3@2270>   CLR.w pass
00021230 <AmiBlitz3.ab3@2272>   MOVE.w #0,compiler_job
00021236 <AmiBlitz3.ab3@2273>   CLR.l errorcounter
0002123C <AmiBlitz3.ab3@2285>   CLR.l funcscanon
00021240 <AmiBlitz3.ab3@2287>   BSR.w compileall
00021246 <AmiBlitz3.ab3@2289>   ADDQ.w #1,pass
0002124A <AmiBlitz3.ab3@2290> 
00021274 <AmiBlitz3.ab3@2291>   !basic
0002127C <AmiBlitz3.ab3@2292>   samesize.l = 0
000212A4 <AmiBlitz3.ab3@2293>   needsize0.l = Peek.l(?bigpc) -Peek.l(?destbufferstart)
000212C2 <AmiBlitz3.ab3@2294>   !asm
000212C6 <AmiBlitz3.ab3@2295>   !stack2regs
000212CC <AmiBlitz3.ab3@2297>   TST.l errorcounter
000212D0 <AmiBlitz3.ab3@2298>   BEQ 'skiperrorstop
000212D2 <AmiBlitz3.ab3@2299>  RTS
000212D8 <AmiBlitz3.ab3@2302>   MOVE.w dontwrite_nomemleft,d0
000212DC <AmiBlitz3.ab3@2303>   CMP.w #1,d0
000212E0 <AmiBlitz3.ab3@2304>   BNE 'l3
000212E6 <AmiBlitz3.ab3@2305>   TST.l errorcounter
000212EA <AmiBlitz3.ab3@2306>   BNE 'l3
000212F0 <AmiBlitz3.ab3@2307>   CLR.w dontwrite_nomemleft
000212F6 <AmiBlitz3.ab3@2308> 
000212FA <AmiBlitz3.ab3@2309>   BSR compileall                                           ;if a function is not found
00021300 <AmiBlitz3.ab3@2310>   ADDQ.w #1,pass
0002133E <AmiBlitz3.ab3@2314>   !ComData_GetB{comByte_FuncOptimize,D0}  ; now its in the xtra file and can be put to GUI settings ; Wanderer
00021342 <AmiBlitz3.ab3@2315>   BEQ 'out  ; only if func optimize is set >< 0; Wanderer
00021348 <AmiBlitz3.ab3@2316>   LEA firstproc,a0
0002134E <AmiBlitz3.ab3@2317>   CLR.l savefuncspace
00021350 <AmiBlitz3.ab3@2318>   MOVE.l (a0),d0
00021352 <AmiBlitz3.ab3@2322>     MOVE.l d0,a0
00021356 <AmiBlitz3.ab3@2323>     BEQ 'out
0002135A <AmiBlitz3.ab3@2324>     TST.b isfunc(a0)
0002135E <AmiBlitz3.ab3@2325>     BNE 'nex
00021362 <AmiBlitz3.ab3@2326>     MOVEM.l d2/a6/a0,-(a7)
00021364 <AmiBlitz3.ab3@2328>     MOVEQ #0,d0
00021368 <AmiBlitz3.ab3@2329>     MOVE.b $21+#funcentry_extend-1(a0),d0
0002136C <AmiBlitz3.ab3@2330>     SUB.w #$21+#funcentry_extend,d0
00021370 <AmiBlitz3.ab3@2331>     ADD.w #16,d0
00021376 <AmiBlitz3.ab3@2332>     MOVE.l #$10000,d1
00021378 <AmiBlitz3.ab3@2333>     MOVE.l d0,d2
0002137E <AmiBlitz3.ab3@2334>     MOVEA.l _execbase,A6
00021382 <AmiBlitz3.ab3@2335>     JSR _AllocMem(a6)         ; thilo: not 100% sure about this!
00021384 <AmiBlitz3.ab3@2336>     MOVE.l d0,a1
00021388 <AmiBlitz3.ab3@2337>     MOVE.l d2,4(a1)
0002138E <AmiBlitz3.ab3@2338>     MOVE.l unusedfunc,(a1)
00021394 <AmiBlitz3.ab3@2339>     MOVE.l d0,unusedfunc
00021398 <AmiBlitz3.ab3@2340>     MOVEM.l (a7)+,a6/a0/d2
0002139C <AmiBlitz3.ab3@2341>     MOVE.l isfunc+1(a0),d0
0002139E <AmiBlitz3.ab3@2342>     ADDQ.l #6,d0
000213A4 <AmiBlitz3.ab3@2343>     ADD.l d0,savefuncspace
000213A8 <AmiBlitz3.ab3@2346>     MOVE.l d0,8(a1)
000213AC <AmiBlitz3.ab3@2347>     LEA 12(a1),a1
000213AE <AmiBlitz3.ab3@2348>     MOVE.l a0,-(a7)
000213B2 <AmiBlitz3.ab3@2349>     LEA $21+#funcentry_extend(a0),a0
000213B4 <AmiBlitz3.ab3@2352>       MOVE.b (a0)+,(a1)+
000213B8 <AmiBlitz3.ab3@2353>     BNE 'l1
000213BA <AmiBlitz3.ab3@2354>     MOVE.l (a7)+,a0
000213BC <AmiBlitz3.ab3@2357>     MOVE.l (a0),d0
000213C0 <AmiBlitz3.ab3@2358>  BRA 'lr1
000213C8 <AmiBlitz3.ab3@2361>   BTST #$7,make_smallestcode
000213CC <AmiBlitz3.ab3@2362>   BEQ.b 'nosmall                                           ;optimize for executable
000213D2 <AmiBlitz3.ab3@2364>   CLR.l morememadd
000213D6 <AmiBlitz3.ab3@2368>   BSR.w alloxadj
000213DA <AmiBlitz3.ab3@2369>   BEQ.w 'anerr
000213E0 <AmiBlitz3.ab3@2371> 
000213E4 <AmiBlitz3.ab3@2372>   BSR.w compileall
000213EA <AmiBlitz3.ab3@2374>   ADDQ.w #1,pass
000213EE <AmiBlitz3.ab3@2375> 
00021418 <AmiBlitz3.ab3@2376>   !basic
0002142C <AmiBlitz3.ab3@2377>   If releaseexe = True                                       ; test if we creat a releas exe
00021454 <AmiBlitz3.ab3@2378>     needsize1.l = Peek.l(?bigpc) -Peek.l(?destbufferstart)   ; get the size form the last compile
00021472 <AmiBlitz3.ab3@2379> 
000214A8 <AmiBlitz3.ab3@2380>       !ComData_SetW{comWord_CreateDebugFile,#1}              ; set create .dbg file to one
000214C6 <AmiBlitz3.ab3@2381>       !asm
000214CC <AmiBlitz3.ab3@2382>       JSR ab3_OpenDebugFile                                  ; open the .dbg flie
000214D0 <AmiBlitz3.ab3@2383>       !stack2regs
000214D4 <AmiBlitz3.ab3@2384>       BSR compileall                                         ; compile for the last time to creat the dbg file
000214D8 <AmiBlitz3.ab3@2385>       !regs2stack
00021502 <AmiBlitz3.ab3@2386>       !basic
00021510 <AmiBlitz3.ab3@2388>     If needsize1 < needsize0   ; test if the needed size is smaller then the compile befor
00021516 <AmiBlitz3.ab3@2389>       needsize0 = needsize1    ; yes the new size is that the old size
00021534 <AmiBlitz3.ab3@2390>       !asm
00021538 <AmiBlitz3.ab3@2391>       !stack2regs
0002153C <AmiBlitz3.ab3@2392>       BRA 'l3                  ; back to the funcscan and compile again
0002155A <AmiBlitz3.ab3@2395>   !asm
0002155E <AmiBlitz3.ab3@2396>   !stack2regs
00021564 <AmiBlitz3.ab3@2400>   MOVE.w dontwrite_nomemleft,D1
00021568 <AmiBlitz3.ab3@2401>   BEQ.w 'dosave
0002156C <AmiBlitz3.ab3@2422>  BRA.w 'inc     ; was beq
00021574 <AmiBlitz3.ab3@2436>   MOVE.w #$FFFF,anyerrs        ; was -1
00021578 <AmiBlitz3.ab3@2437>  BRA.w 'dosave
0002157C <AmiBlitz3.ab3@2440>   BSR.w alloxinc                                          ;increase all by 50%
00021580 <AmiBlitz3.ab3@2441>   BEQ.w Aclearallvars
00021586 <AmiBlitz3.ab3@2442> 
0002158A <AmiBlitz3.ab3@2443>  BRA.w 'retry
0002158E <AmiBlitz3.ab3@2456> BRA.w qfree        ;used to go after beq .nosave                          ;???????
00021594 <AmiBlitz3.ab3@2462>   JSR freereps
0002159A <AmiBlitz3.ab3@2463>   JSR freesels
000215A0 <AmiBlitz3.ab3@2464>   JSR freetlist
000215A6 <AmiBlitz3.ab3@2465>   JSR freepends
000215AC <AmiBlitz3.ab3@2466>   JSR freeifs
000215B2 <AmiBlitz3.ab3@2467>   JSR freeincs
000215B8 <AmiBlitz3.ab3@2468>   JSR freexincs
000215BE <AmiBlitz3.ab3@2469>   JSR freefors
000215C4 <AmiBlitz3.ab3@2470> JMP cleartemplabel
000215C8 <AmiBlitz3.ab3@2473> mempool2:  Dc.l 0
000215CE <AmiBlitz3.ab3@2478>   JSR Aclearcache
000215D6 <AmiBlitz3.ab3@2480>   BTST #$7,use_debugger
000215DA <AmiBlitz3.ab3@2482>   BNE 'debugon
000215E0 <AmiBlitz3.ab3@2483>   CLR.w debugmode
000215E4 <AmiBlitz3.ab3@2484>  BRA.b 'debugoff
000215EA <AmiBlitz3.ab3@2487>   SNE debugmode
00021622 <AmiBlitz3.ab3@2492>   !ComData_SetB{comByte_DebugMode,debugmode}
00021628 <AmiBlitz3.ab3@2494>   LEA regtable,a0
0002162A <AmiBlitz3.ab3@2495>   MOVEQ #10,d0
0002162C <AmiBlitz3.ab3@2498>     CLR.l (a0)+
00021630 <AmiBlitz3.ab3@2499>   DBF d0,'l1
00021636 <AmiBlitz3.ab3@2501>   LEA includetemp2,a0
00021638 <AmiBlitz3.ab3@2502>   CLR.b (a0)
00021642 <AmiBlitz3.ab3@2503>   MOVE.l #7,maxregs
00021648 <AmiBlitz3.ab3@2504>   CLR.w debugnest
0002164E <AmiBlitz3.ab3@2505>   CLR.b funcparloop
00021654 <AmiBlitz3.ab3@2506>   CLR.b nostringopt
0002165A <AmiBlitz3.ab3@2507>   CLR.b firsttime
00021660 <AmiBlitz3.ab3@2508>   CLR.l lastdestpointer
00021666 <AmiBlitz3.ab3@2509>   CLR.l lastwritedat
0002166C <AmiBlitz3.ab3@2510>   CLR.l prevwritedat
00021672 <AmiBlitz3.ab3@2511>   CLR.l includeline
00021678 <AmiBlitz3.ab3@2512>   CLR.b incnif
0002167E <AmiBlitz3.ab3@2513>   CLR.b formode
00021684 <AmiBlitz3.ab3@2514>   CLR.b funccall
0002168A <AmiBlitz3.ab3@2515>   CLR.w objectcount
00021690 <AmiBlitz3.ab3@2516>   CLR.b resdisable
00021696 <AmiBlitz3.ab3@2517>   CLR.b developobject
0002169C <AmiBlitz3.ab3@2518>   CLR.b optistring
000216A2 <AmiBlitz3.ab3@2519>   CLR.b optistring2
000216A8 <AmiBlitz3.ab3@2520>   CLR.b optiarray
000216AE <AmiBlitz3.ab3@2521>   CLR.b quickadd
000216B4 <AmiBlitz3.ab3@2522>   CLR.w newmode
000216BA <AmiBlitz3.ab3@2523>   CLR.w mode
000216C0 <AmiBlitz3.ab3@2524>   CLR.w string1
000216C6 <AmiBlitz3.ab3@2525>   CLR.b fastfunc
000216CC <AmiBlitz3.ab3@2526>   CLR.w load_var_size
000216D2 <AmiBlitz3.ab3@2527>   CLR.w load_var_reg
000216D8 <AmiBlitz3.ab3@2528>   CLR.l load_var_addr
000216DE <AmiBlitz3.ab3@2529>   CLR.w imm_size
000216E4 <AmiBlitz3.ab3@2530>   CLR.w imm_reg
000216EA <AmiBlitz3.ab3@2531>   CLR.l imm_addr
000216F0 <AmiBlitz3.ab3@2532>   CLR.b _dcb
000216F6 <AmiBlitz3.ab3@2533>   CLR.l nohunkoffset
000216FC <AmiBlitz3.ab3@2534>   CLR.b peekaddrsize
00021702 <AmiBlitz3.ab3@2535>   CLR.b typecheck
00021708 <AmiBlitz3.ab3@2536>   CLR.b declare2
0002170E <AmiBlitz3.ab3@2537>   CLR.b declare
00021714 <AmiBlitz3.ab3@2538>   CLR.l myoline                                          ;check
0002171A <AmiBlitz3.ab3@2539>   CLR.l myline                                          ;check
00021720 <AmiBlitz3.ab3@2540>   CLR.b newvariable
00021726 <AmiBlitz3.ab3@2541>   CLR.b saved0
0002172C <AmiBlitz3.ab3@2542>   CLR.l bsssize
00021732 <AmiBlitz3.ab3@2543>   CLR.l chipsize
00021738 <AmiBlitz3.ab3@2544>   CLR.b infunctioncode
0002173E <AmiBlitz3.ab3@2545>   CLR.l errorcounter
00021748 <AmiBlitz3.ab3@2546>   MOVE.l #-1,bssstart
00021752 <AmiBlitz3.ab3@2547>   MOVE.l #-1,bssend
0002175C <AmiBlitz3.ab3@2548>   MOVE.l #-1,chipstart
00021766 <AmiBlitz3.ab3@2549>   MOVE.l #-1,chipend
0002176E <AmiBlitz3.ab3@2550>   MOVE.w #0,bssmode
00021774 <AmiBlitz3.ab3@2551>   CLR.w a2offset
0002177A <AmiBlitz3.ab3@2552>   CLR.w fast
00021780 <AmiBlitz3.ab3@2553>   CLR.w fpu
00021786 <AmiBlitz3.ab3@2554>   CLR.b iee
0002178C <AmiBlitz3.ab3@2555>   CLR.w newsyntax
00021790 <AmiBlitz3.ab3@2557>   BSR.w qfree
00021796 <AmiBlitz3.ab3@2558>   JSR killoffs              ;free up DOS offset table
0002179C <AmiBlitz3.ab3@2559>   JSR frallvars               ;free up Global vars
000217A2 <AmiBlitz3.ab3@2560>   JSR fralltypes              ;free up all types
000217A8 <AmiBlitz3.ab3@2561>   JSR freemacs                ;free up actual macro defines.
000217AE <AmiBlitz3.ab3@2562>   JSR clearfunctionlist       ;free up states/funcs
000217B4 <AmiBlitz3.ab3@2564>   TST.w pass                  
000217BA <AmiBlitz3.ab3@2567>   JSR clearlabels             ;free up labels
000217C0 <AmiBlitz3.ab3@2569>   JSR clearhash
000217C6 <AmiBlitz3.ab3@2572>   LEA devo,a0
000217CA <AmiBlitz3.ab3@2573>   MOVEM.l a0-a6/d0-d7,-(a7)
000217D0 <AmiBlitz3.ab3@2574>   LEA ptr_parameterstore,a1
000217D2 <AmiBlitz3.ab3@2577>     MOVE.b (a0)+,(a1)+
000217D6 <AmiBlitz3.ab3@2578>   BNE 'l1b
000217D8 <AmiBlitz3.ab3@2579>   MOVEQ #13,d2
000217DE <AmiBlitz3.ab3@2580>   JSR findlabel2
000217E2 <AmiBlitz3.ab3@2581>   BNE 'd
000217E6 <AmiBlitz3.ab3@2582>   CLR.l 8(a2)
000217EA <AmiBlitz3.ab3@2585>   MOVEM.l (a7)+,a0-a6/d0-d7
00021814 <AmiBlitz3.ab3@2586>   !basic
00021888 <AmiBlitz3.ab3@2587>   dos_Delete{dos_AddPart{my_systemdir$,"ab_compileerror.txt"}}
000218A6 <AmiBlitz3.ab3@2588>   !asm
000218AC <AmiBlitz3.ab3@2589>   CLR.b returncode
000218B2 <AmiBlitz3.ab3@2591> JMP freeprocvs                     ;free up outstanding proc stuff
000218B8 <AmiBlitz3.ab3@2595>   MOVE.l #bssstore-labelhash,d0
000218BA <AmiBlitz3.ab3@2596>   ASR.l #2,d0
000218C0 <AmiBlitz3.ab3@2597>   LEA labelhash,a0
000218C2 <AmiBlitz3.ab3@2600>     CLR.l (a0)+
000218C4 <AmiBlitz3.ab3@2601>     SUBQ.l #1,d0
000218C8 <AmiBlitz3.ab3@2602>   BNE.s 'l10
000218CE <AmiBlitz3.ab3@2604>   LEA labelbase,a1
000218D0 <AmiBlitz3.ab3@2605>   MOVE.l (a1),d0
000218D4 <AmiBlitz3.ab3@2606>   BEQ 'l11
000218D6 <AmiBlitz3.ab3@2609>     MOVE.l d0,a1
000218DA <AmiBlitz3.ab3@2610>     TST.l 4(a1)
000218DE <AmiBlitz3.ab3@2611>     BEQ 'l29
000218E2 <AmiBlitz3.ab3@2612>     LEA $13(a1),a0
000218E4 <AmiBlitz3.ab3@2613>     MOVEQ #0,d0
000218E6 <AmiBlitz3.ab3@2614>     MOVEQ #0,d1
000218E8 <AmiBlitz3.ab3@2617>       MOVE.b (a0)+,d1
000218EC <AmiBlitz3.ab3@2618>       BEQ 'l12
000218F2 <AmiBlitz3.ab3@2619>       !hashalgo
000218F6 <AmiBlitz3.ab3@2620>  BRA 'l13
000218FC <AmiBlitz3.ab3@2623>     LEA labelhash,a0
00021902 <AmiBlitz3.ab3@2624>     AND.l #hashsize,d0
00021904 <AmiBlitz3.ab3@2625>      ASL.l #2,d0
00021908 <AmiBlitz3.ab3@2626>     MOVE.l 0(a0,d0),d1                                     ;*4
0002190C <AmiBlitz3.ab3@2627>     MOVE.l d1,$c(a1)
00021910 <AmiBlitz3.ab3@2628>     MOVE.l a1,0(a0,d0)
00021912 <AmiBlitz3.ab3@2631>     MOVE.l (a1),d0
00021916 <AmiBlitz3.ab3@2632>   BNE 'l21
00021918 <AmiBlitz3.ab3@2635> RTS
0002191E <AmiBlitz3.ab3@2639>   MOVEA.l lastrestype,A0
00021920 <AmiBlitz3.ab3@2640>   MOVEA.l (A0),A2
00021922 <AmiBlitz3.ab3@2641>   CLR.l (A0)
00021928 <AmiBlitz3.ab3@2642> JMP freetypes
0002192E <AmiBlitz3.ab3@2646>   MOVEA.l varbase,A3
00021934 <AmiBlitz3.ab3@2647>   CLR.l varbase
00021938 <AmiBlitz3.ab3@2651>   CMPA.w #$0,A3
0002193C <AmiBlitz3.ab3@2652>   BEQ.w 'l20
0002193E <AmiBlitz3.ab3@2653>   MOVEA.l A3,A1
00021940 <AmiBlitz3.ab3@2654>   MOVEA.l (A3),A3
00021942 <AmiBlitz3.ab3@2655>   MOVEQ.l #$00,D0
00021946 <AmiBlitz3.ab3@2656>   MOVE.b $E+4(A1),D0
0002194C <AmiBlitz3.ab3@2657>   MOVEA.l _execbase,A6
00021952 <AmiBlitz3.ab3@2658>   MOVE.l mempool2,a0
00021956 <AmiBlitz3.ab3@2659>   JSR _FreePooled(A6)
0002195A <AmiBlitz3.ab3@2660>  BRA.w 'l10
0002195C <AmiBlitz3.ab3@2663> RTS
00021962 <AmiBlitz3.ab3@2669>   LEA firstiff,A2
00021964 <AmiBlitz3.ab3@2670>   MOVEQ.l #$0E,D2
0002196A <AmiBlitz3.ab3@2671> JMP freeslist
0002196C <AmiBlitz3.ab3@2677> progressbar_width:   Dc.w 100                              ;riteend org source ;right end of include strip
0002196E <AmiBlitz3.ab3@2678> inmacro:             Ds.w 1                                ;macmask org source ;macro found
00021974 <AmiBlitz3.ab3@2685>   CLR.w inmacro
0002197A <AmiBlitz3.ab3@2687>   ADDQ.l #1,globallinecount
00021980 <AmiBlitz3.ab3@2688>   CLR.b nostringopt
00021984 <AmiBlitz3.ab3@2690>   BSR.w freembuff
0002198A <AmiBlitz3.ab3@2691>   CLR.w instringon
00021990 <AmiBlitz3.ab3@2696>   TST.w ininclude
00021994 <AmiBlitz3.ab3@2697>   BEQ.w 'skip3
0002199A <AmiBlitz3.ab3@2699>   ADDQ.l #1,includeline
000219A0 <AmiBlitz3.ab3@2700>     JSR ab3_WriteDebugFile
000219A6 <AmiBlitz3.ab3@2702>   JSR readinc
000219AA <AmiBlitz3.ab3@2703>   BEQ.w 'skip3
000219B0 <AmiBlitz3.ab3@2707>   MOVE.w ininclude,D0
000219B4 <AmiBlitz3.ab3@2708>   CMP.w #$4,D0
000219B8 <AmiBlitz3.ab3@2709>   BCC.w 'stskip
000219BA <AmiBlitz3.ab3@2710>   ADD.w D0,D0
000219C0 <AmiBlitz3.ab3@2711>   LEA progress_per_line,A0
000219C4 <AmiBlitz3.ab3@2712>   MOVE.w $0(A0,D0.W),D2     ;offset in line
000219C8 <AmiBlitz3.ab3@2713>   CMP.w progressbar_width(PC),D2
000219CC <AmiBlitz3.ab3@2714>   BCC.w 'stskip
000219D0 <AmiBlitz3.ab3@2715>   ADDQ.w #1,$0(A0,D0.W)
000219D2 <AmiBlitz3.ab3@2717>   LSR.w #1,D0
000219D4 <AmiBlitz3.ab3@2719>   MOVE.l d0,d1
000219D6 <AmiBlitz3.ab3@2720>   EXT.l d1
000219D8 <AmiBlitz3.ab3@2721>   MOVE.l d2,d0
000219DA <AmiBlitz3.ab3@2722>   EXT.l d0                                                 ;d0=x,d1=y
000219E0 <AmiBlitz3.ab3@2724>   JSR update_progressbar
000219E2 <AmiBlitz3.ab3@2728>   MOVEQ.l #-$01,D0
000219E4 <AmiBlitz3.ab3@2729>  RTS
000219EA <AmiBlitz3.ab3@2734>   MOVE.l titleat,D0
000219EC <AmiBlitz3.ab3@2735>   MOVEQ.l #$00,D1
000219F2 <AmiBlitz3.ab3@2736>   MOVE.w progress_per_line,D1
000219F4 <AmiBlitz3.ab3@2737>   ADD.l D1,D0
000219F6 <AmiBlitz3.ab3@2738>   MOVE.l D0,D1
000219F8 <AmiBlitz3.ab3@2739>   SWAP D0
000219FE <AmiBlitz3.ab3@2740>   CMP.w titleat,D0
00021A02 <AmiBlitz3.ab3@2741>    BEQ.w 'skip3a
00021A04 <AmiBlitz3.ab3@2746>   EXT.l d0
00021A06 <AmiBlitz3.ab3@2747>   MOVE.l d1,-(a7)
00021A0E <AmiBlitz3.ab3@2750>   MOVE.w #1,compiler_job                                    ; set to compiler job 1 (=build executable)
00021A14 <AmiBlitz3.ab3@2751>   JSR update_progressbar
00021A1C <AmiBlitz3.ab3@2752>   MOVE.w #0,compiler_job                                    ; set to compiler job 0 (=compile source)
00021A1E <AmiBlitz3.ab3@2758>   MOVE.l (a7)+,d1
00021A24 <AmiBlitz3.ab3@2762>   MOVE.l D1,titleat
00021A2A <AmiBlitz3.ab3@2765>   ADDQ.l #1,linenumat
00021A30 <AmiBlitz3.ab3@2766>   CLR.w linedone
00021A36 <AmiBlitz3.ab3@2768>   JSR ab3_WriteDebugFile  ; write to DebugFile every main source line
00021A3C <AmiBlitz3.ab3@2774>   SUBQ.l #1,numlines2
00021A40 <AmiBlitz3.ab3@2776>    BEQ.w 'skip
00021A46 <AmiBlitz3.ab3@2777>   MOVEA.l sourceline,A0
00021A48 <AmiBlitz3.ab3@2778>   MOVEA.l (A0),A0
00021A4E <AmiBlitz3.ab3@2779>   MOVE.l A0,sourceline
00021A52 <AmiBlitz3.ab3@2780>   LEA $9(A0),A5
00021A54 <AmiBlitz3.ab3@2783> RTS
00021A56 <AmiBlitz3.ab3@2787>   MOVE.w D0,-(A7)
00021A58 <AmiBlitz3.ab3@2788>   MOVEQ.l #$03,D0
00021A5A <AmiBlitz3.ab3@2791>     MOVE.w D1,D2
00021A5E <AmiBlitz3.ab3@2792>     ANDI.w #$F,D2
00021A62 <AmiBlitz3.ab3@2793>     ADDI.w #$30,D2
00021A66 <AmiBlitz3.ab3@2794>     CMP.w #$3A,D2
00021A6A <AmiBlitz3.ab3@2795>      BCS.w 'skip
00021A6C <AmiBlitz3.ab3@2796>     ADDQ.w #7,D2
00021A70 <AmiBlitz3.ab3@2799>     MOVE.b D2,$0(A0,D0.W)
00021A72 <AmiBlitz3.ab3@2800>     LSR.w #4,D1
00021A76 <AmiBlitz3.ab3@2801>   DBF D0,'loop
00021A78 <AmiBlitz3.ab3@2803>   MOVE.w (A7)+,D0
00021A7A <AmiBlitz3.ab3@2804> RTS
00021A80 <AmiBlitz3.ab3@2814>   MOVE.w skipcode,D1
00021A84 <AmiBlitz3.ab3@2815>   BNE.w 'loop0
00021A86 <AmiBlitz3.ab3@2816>  RTS
00021A88 <AmiBlitz3.ab3@2819>   MOVE.l A5,-(A7)
00021A8A <AmiBlitz3.ab3@2820>   MOVEQ.l #$3A,D1      ;':'
00021A8C <AmiBlitz3.ab3@2821>   MOVEQ.l #$21,D2      ;'!'
00021A8E <AmiBlitz3.ab3@2822>   MOVEQ.l #$3B,D3      ;';'
00021A90 <AmiBlitz3.ab3@2823>   MOVEQ.l #$22,D4      ;'"'
00021A92 <AmiBlitz3.ab3@2826>   MOVE.b (A5)+,D0
00021A96 <AmiBlitz3.ab3@2827>    BEQ.w 'done
00021A9A <AmiBlitz3.ab3@2828>    BPL.w 'test
00021A9C <AmiBlitz3.ab3@2829>   MOVE.b (A5)+,D0
00021AA0 <AmiBlitz3.ab3@2830>  BRA.w 'loop
00021AA2 <AmiBlitz3.ab3@2833>   CMP.b D4,D0
00021AA6 <AmiBlitz3.ab3@2834>    BNE.w 'notq
00021AA8 <AmiBlitz3.ab3@2837>   MOVE.b (A5)+,D0
00021AAC <AmiBlitz3.ab3@2838>    BEQ.w notqerr
00021AB0 <AmiBlitz3.ab3@2844>   CMP.b #$22,D0        ;'"'
00021AB4 <AmiBlitz3.ab3@2845>    BNE.w 'qloop
00021AB8 <AmiBlitz3.ab3@2846>  BRA.w 'loop
00021ABA <AmiBlitz3.ab3@2849>   CMP.b D1,D0
00021ABE <AmiBlitz3.ab3@2850>    BEQ.w 'done
00021AC0 <AmiBlitz3.ab3@2851>   CMP.b D3,D0
00021AC4 <AmiBlitz3.ab3@2852>    BEQ.w 'done       ;macro character!
00021AC6 <AmiBlitz3.ab3@2853>   CMP.b D2,D0
00021ACA <AmiBlitz3.ab3@2854>    BNE.w 'loop
00021AD2 <AmiBlitz3.ab3@2858>   MOVE.w #$FFFF,inmacro    ; was -1                                ; no runtimecheck in macros
00021AD4 <AmiBlitz3.ab3@2859>   MOVEA.l A5,A3
00021ADA <AmiBlitz3.ab3@2861>    JSR getparameter2
00021ADE <AmiBlitz3.ab3@2862>    BNE.w 'fkitme
00021AE4 <AmiBlitz3.ab3@2863>  JMP syntaxerr
00021AEE <AmiBlitz3.ab3@2868>    MOVE.w oldqflag,instringon
00021AF4 <AmiBlitz3.ab3@2869>   MOVEA.l lastsourcepos,A5
00021AFA <AmiBlitz3.ab3@2872>    JSR findmac                                             ;find macro
00021AFE <AmiBlitz3.ab3@2873>    BEQ.w 'kl1
00021B04 <AmiBlitz3.ab3@2874>  JMP nomacerr
00021B0A <AmiBlitz3.ab3@2878>   TST.b debugmode
00021B0E <AmiBlitz3.ab3@2879>   BEQ 'sk1
00021B12 <AmiBlitz3.ab3@2880>   MOVE.w #$4e71,d1
00021B18 <AmiBlitz3.ab3@2881>   JSR writeword
00021B1A <AmiBlitz3.ab3@2882>   MOVE.l a5,-(a7)
00021B1C <AmiBlitz3.ab3@2883>   MOVE.l a3,a5
00021B1E <AmiBlitz3.ab3@2884>   SUBQ.l #1,a5
00021B26 <AmiBlitz3.ab3@2885>   MOVE.w #$0,inmacro
00021B2A <AmiBlitz3.ab3@2886>   BSR debugstuffa
00021B32 <AmiBlitz3.ab3@2887>   MOVE.w #$FFFF,inmacro
00021B34 <AmiBlitz3.ab3@2888>   MOVE.l (a7)+,a5
00021B38 <AmiBlitz3.ab3@2889>   MOVE.w #$4e71,d1
00021B3E <AmiBlitz3.ab3@2890>   JSR writeword
00021B40 <AmiBlitz3.ab3@2894>   MOVEA.l A5,A4            ;start of parameters!
00021B44 <AmiBlitz3.ab3@2898>    CMP.b #" ",(a4)+
00021B48 <AmiBlitz3.ab3@2899>     BEQ 'l5a
00021B4A <AmiBlitz3.ab3@2900>      SUBQ.l#1,a4
00021B4E <AmiBlitz3.ab3@2901>      CMP.b #",",(a4)
00021B52 <AmiBlitz3.ab3@2902>     BEQ 'nops
00021B54 <AmiBlitz3.ab3@2906>   MOVEQ.l #$00,D4          ;narg=0
00021B5A <AmiBlitz3.ab3@2908>   TST.b newsyntax
00021B5E <AmiBlitz3.ab3@2909>   BEQ 'l10b
00021B62 <AmiBlitz3.ab3@2910>   MOVEM.l a0/d0,-(a7)
00021B66 <AmiBlitz3.ab3@2911>   MOVE.l 4(a2),a0
00021B6A <AmiBlitz3.ab3@2912>   MOVE.w 8(a2),d0
00021B6E <AmiBlitz3.ab3@2915>   CMP.b #"`",(a0)+
00021B72 <AmiBlitz3.ab3@2916>   BEQ 'x1
00021B74 <AmiBlitz3.ab3@2917>   SUBQ.w #1,d0
00021B78 <AmiBlitz3.ab3@2918>   BNE 'x2
00021B7C <AmiBlitz3.ab3@2919>  BRA 'x3
00021B80 <AmiBlitz3.ab3@2922>   MOVEM.l (a7)+,a0/d0
00021B84 <AmiBlitz3.ab3@2923>  BRA 'l10
00021B88 <AmiBlitz3.ab3@2926>   MOVEM.l (a7)+,a0/d0
00021B8C <AmiBlitz3.ab3@2927>  BRA 'nops
00021B90 <AmiBlitz3.ab3@2931>   CMPI.b #"{",(A4)
00021B94 <AmiBlitz3.ab3@2932>    BNE.w 'nops
00021B96 <AmiBlitz3.ab3@2937>   ADDQ.l #1,a4
00021B9A <AmiBlitz3.ab3@2940>     CMP.b #" ",(a4)
00021B9E <AmiBlitz3.ab3@2941>     BEQ 'l5
00021BA2 <AmiBlitz3.ab3@2942>     MOVEM.l a0/d0,-(a7)
00021BA8 <AmiBlitz3.ab3@2943>     CLR.b exmac
00021BAE <AmiBlitz3.ab3@2944>     LEA chartab,a0
00021BB0 <AmiBlitz3.ab3@2945>     MOVEQ #0,d0
00021BB2 <AmiBlitz3.ab3@2946>     MOVE.b (a4),d0
00021BB6 <AmiBlitz3.ab3@2947>     BMI 'm1
00021BBA <AmiBlitz3.ab3@2948>     TST.b 0(a0,d0)
00021BBE <AmiBlitz3.ab3@2949>     BEQ 'm1
00021BC4 <AmiBlitz3.ab3@2950>     TST.b newsyntax
00021BC8 <AmiBlitz3.ab3@2951>     BEQ 'ns1
00021BCC <AmiBlitz3.ab3@2952>     CMP.b #"#",d0
00021BD0 <AmiBlitz3.ab3@2953>     BEQ 'm1
00021BD4 <AmiBlitz3.ab3@2954>     CMP.b #"$",d0
00021BD8 <AmiBlitz3.ab3@2955>     BEQ 'm1
00021BDC <AmiBlitz3.ab3@2956>     CMP.b #"-",d0
00021BE0 <AmiBlitz3.ab3@2957>     BEQ 'm1
00021BE4 <AmiBlitz3.ab3@2960>   CMP.b #",",d0
00021BE8 <AmiBlitz3.ab3@2961>     BEQ 'm1
00021BEC <AmiBlitz3.ab3@2962>     CMP.b #"{",d0
00021BF0 <AmiBlitz3.ab3@2963>     BNE 'm1b
00021BF2 <AmiBlitz3.ab3@2964>     ADDQ.l #1,a4
00021BF6 <AmiBlitz3.ab3@2965>  BRA 'm1
00021BFC <AmiBlitz3.ab3@2968>   TST.b newsyntax
00021C00 <AmiBlitz3.ab3@2969>     BEQ 'm1
00021C08 <AmiBlitz3.ab3@2970>     MOVE.b #1,exmac
00021C0C <AmiBlitz3.ab3@2973>   MOVEM.l (a7)+,a0/d0
00021C12 <AmiBlitz3.ab3@2974>     TST.b exmac
00021C16 <AmiBlitz3.ab3@2975>     BNE 'nops
00021C18 <AmiBlitz3.ab3@2982>   TST.b (a4)
00021C1C <AmiBlitz3.ab3@2983>   BEQ 'nops
00021C22 <AmiBlitz3.ab3@2987>   MOVEA.l ptr_macrobuffer_begin,A0    ;start of parameter collect
00021C24 <AmiBlitz3.ab3@2990>   ADDQ.w #1,D4                        ;another p
00021C26 <AmiBlitz3.ab3@2991>   MOVE.l A4,(A0)
00021C2A <AmiBlitz3.ab3@2993>   CLR.w 4(a0)
00021C2E <AmiBlitz3.ab3@2995>    BSR.w findit
00021C30 <AmiBlitz3.ab3@2998>   ADDQ.l #4,a0
00021C32 <AmiBlitz3.ab3@3004>   SUBQ.w #1,(a0)+
00021C36 <AmiBlitz3.ab3@3006>   CMP.b #$7D,D0     ;'}'
00021C3A <AmiBlitz3.ab3@3008>   BEQ 'l10b1
00021C3C <AmiBlitz3.ab3@3009>   TST.b d0
00021C40 <AmiBlitz3.ab3@3010>   BEQ 'l10b1
00021C44 <AmiBlitz3.ab3@3011>  BRA 'ppl
00021C4A <AmiBlitz3.ab3@3017>   CLR.l sourceline3
00021C4C <AmiBlitz3.ab3@3019>   MOVEA.l A4,A5
00021C52 <AmiBlitz3.ab3@3022>   MOVE.w D4,numarg
00021C58 <AmiBlitz3.ab3@3033>   MOVE.l #$01,D1
00021C5E <AmiBlitz3.ab3@3034>   MOVEA.l _execbase,A6
00021C64 <AmiBlitz3.ab3@3036>   MOVE.l mempool,a0
00021C6A <AmiBlitz3.ab3@3037>   MOVE.l macrobuffer_size,D0
00021C70 <AmiBlitz3.ab3@3038>   CMP.l #DEFAULT_MACROBUFFERSIZE,d0                          ; replaced with a constant tomsmart1
00021C74 <AmiBlitz3.ab3@3039>   BGE 'l1mc
00021C7A <AmiBlitz3.ab3@3040>   MOVE.l #DEFAULT_MACROBUFFERSIZE,d0                         ; replaced with a constant tomsmart1
00021C80 <AmiBlitz3.ab3@3041>   MOVE.l d0,macrobuffer_size
00021C84 <AmiBlitz3.ab3@3044>   JSR _AllocPooled(a6)
00021C8E <AmiBlitz3.ab3@3048>   MOVE.l myline,myoline
00021C90 <AmiBlitz3.ab3@3052>   ADDQ.l #1,d0
00021C96 <AmiBlitz3.ab3@3054>   MOVE.l D0,myline
00021C98 <AmiBlitz3.ab3@3055>   MOVEA.l D0,A1
00021C9E <AmiBlitz3.ab3@3057>   MOVE.b #":",-1(a1)
00021CA0 <AmiBlitz3.ab3@3059>   MOVEA.l A1,A6
00021CA6 <AmiBlitz3.ab3@3060>   ADDA.l macrobuffer_size,A6   ;end of macro buffer
00021CA8 <AmiBlitz3.ab3@3062>   MOVEA.l (A7)+,A0             ;start of the line
00021CAA <AmiBlitz3.ab3@3065>   CMPA.l A6,A1
00021CAE <AmiBlitz3.ab3@3066>    BCC.w mbovererr
00021CB0 <AmiBlitz3.ab3@3067>   MOVE.b (A0)+,(a1)+
00021CB2 <AmiBlitz3.ab3@3068>   CMPA.l A3,A0
00021CB6 <AmiBlitz3.ab3@3069>    BCS.w 'loop2
00021CB8 <AmiBlitz3.ab3@3070>   SUBQ.w #1,A1                 ;back over '#'
00021CBC <AmiBlitz3.ab3@3072>   MOVE.w $8(A2),D1             ;mac len
00021CC0 <AmiBlitz3.ab3@3073>    BEQ.w 'loop4
00021CC8 <AmiBlitz3.ab3@3074>   MOVE.w $A(A2),macnum
00021CCC <AmiBlitz3.ab3@3075>   ADDQ.w #1,$A(A2)
00021CD0 <AmiBlitz3.ab3@3076>   MOVEA.l $4(A2),A2
00021CD2 <AmiBlitz3.ab3@3077>   SUBQ.w #1,D1
00021CD8 <AmiBlitz3.ab3@3079>   CLR.b firstmline
00021CDA <AmiBlitz3.ab3@3083>     MOVEQ.l #$00,D0
00021CDC <AmiBlitz3.ab3@3084>     MOVE.b (A2)+,D0
00021CE2 <AmiBlitz3.ab3@3086>     TST.b firstmline
00021CE6 <AmiBlitz3.ab3@3087>     BNE 'c1
00021CEA <AmiBlitz3.ab3@3088>     CMP.b #$22,d0         ;'"'
00021CEE <AmiBlitz3.ab3@3089>     BNE 's1
00021CF6 <AmiBlitz3.ab3@3090>     MOVE.b #1,firstmline
00021CFA <AmiBlitz3.ab3@3093>     CMP.b #":",d0
00021CFE <AmiBlitz3.ab3@3094>     BNE 'm1a
00021D06 <AmiBlitz3.ab3@3095>     MOVE.b #1,firstmline
00021D0A <AmiBlitz3.ab3@3098>     CMP.b #";",d0
00021D0E <AmiBlitz3.ab3@3099>     BNE 'c1
00021D10 <AmiBlitz3.ab3@3102>     SUBQ.w #1,d1                                           ;filter out comment
00021D12 <AmiBlitz3.ab3@3103>     MOVE.b (a2)+,d0
00021D18 <AmiBlitz3.ab3@3104>     CMP.w #":@",-1(a2)
00021D1C <AmiBlitz3.ab3@3105>     BEQ 'c2
00021D1E <AmiBlitz3.ab3@3106>     TST.w d1
00021D22 <AmiBlitz3.ab3@3107>     BNE 'l1d
00021D26 <AmiBlitz3.ab3@3108>    BRA 'oky2
00021D2C <AmiBlitz3.ab3@3111>     CMP.b #":",1(a2)
00021D30 <AmiBlitz3.ab3@3112>       BNE 'l1d
00021D32 <AmiBlitz3.ab3@3113>       ADDQ #2,a2
00021D34 <AmiBlitz3.ab3@3114>       SUBQ #3,d1
00021D36 <AmiBlitz3.ab3@3115>       MOVE.b (a2)+,d0
00021D3E <AmiBlitz3.ab3@3116>       MOVE.b #1,firstmline
00021D42 <AmiBlitz3.ab3@3120>     CMP.b #"`",D0
00021D46 <AmiBlitz3.ab3@3121>      BNE.w 'oky
00021D48 <AmiBlitz3.ab3@3122>     SUBQ.w #1,D1
00021D4A <AmiBlitz3.ab3@3123>     MOVE.b (A2)+,D0
00021D4E <AmiBlitz3.ab3@3124>     CMP.w #$7B,D0       ;'{'
00021D52 <AmiBlitz3.ab3@3125>      BEQ.w 'evalit
00021D56 <AmiBlitz3.ab3@3126>     CMP.w #$40,D0       ;'@'
00021D5A <AmiBlitz3.ab3@3127>      BNE.w 'notnum
00021D5C <AmiBlitz3.ab3@3131>     MOVEQ.l #$00,D2
00021D62 <AmiBlitz3.ab3@3132>     MOVE.w macnum,D2
00021D64 <AmiBlitz3.ab3@3133>     MOVEA.l A1,A0
00021D66 <AmiBlitz3.ab3@3134>     MOVE.w D1,-(A7)
00021D6C <AmiBlitz3.ab3@3135>      JSR makelong
00021D6E <AmiBlitz3.ab3@3136>     MOVEA.l A0,A1
00021D70 <AmiBlitz3.ab3@3137>     MOVE.w (A7)+,D1
00021D74 <AmiBlitz3.ab3@3139>    BRA.w 'oky2
00021D78 <AmiBlitz3.ab3@3142>     ORI.w #$20,D0
00021D7C <AmiBlitz3.ab3@3143>     CMP.w #$7A,D0       ;'z'
00021D80 <AmiBlitz3.ab3@3144>      BCS.w 'fkit
00021D86 <AmiBlitz3.ab3@3145>    JMP ilconsterr
00021D8A <AmiBlitz3.ab3@3148>     SUBI.w #$30,D0
00021D8E <AmiBlitz3.ab3@3149>     CMP.w #$A,D0
00021D92 <AmiBlitz3.ab3@3150>      BCS.w 'itsgot
00021D96 <AmiBlitz3.ab3@3152>     SUBI.w #$27,D0
00021D9A <AmiBlitz3.ab3@3153>     CMP.w #$A,D0
00021D9E <AmiBlitz3.ab3@3154>      BCC.w 'fkit2
00021DA4 <AmiBlitz3.ab3@3155>    JMP ilconsterr
00021DA8 <AmiBlitz3.ab3@3158>    BRA.w 'itsgot
00021DAA <AmiBlitz3.ab3@3161>     MOVE.l A5,-(A7)
00021DAE <AmiBlitz3.ab3@3162>     MOVEM.l D1/A1-A2/A6,-(A7)
00021DB0 <AmiBlitz3.ab3@3163>     MOVEA.l A2,A5
00021DB6 <AmiBlitz3.ab3@3164>      JSR evalconst2
00021DBA <AmiBlitz3.ab3@3165>     CMP.w #$7D,D0      ;'}'
00021DBE <AmiBlitz3.ab3@3166>      BEQ.w 'allisok
00021DC4 <AmiBlitz3.ab3@3167>    JMP syntaxerr
00021DC8 <AmiBlitz3.ab3@3170>     MOVEM.l (A7)+,D1/A1-A2/A6
00021DCA <AmiBlitz3.ab3@3171>     MOVE.l A5,D2
00021DCC <AmiBlitz3.ab3@3172>     SUB.l A2,D2
00021DCE <AmiBlitz3.ab3@3173>     SUB.w D2,D1
00021DD0 <AmiBlitz3.ab3@3174>     MOVEA.l A5,A2
00021DD6 <AmiBlitz3.ab3@3176>     CLR.w instringon
00021DD8 <AmiBlitz3.ab3@3177>     MOVEA.l (A7)+,A5
00021DDA <AmiBlitz3.ab3@3179>     MOVE.l D3,D0
00021DDE <AmiBlitz3.ab3@3180>     BPL.w 'itsgot
00021DE4 <AmiBlitz3.ab3@3181>    JMP ilconsterr
00021DE6 <AmiBlitz3.ab3@3184>     SUBQ.w #1,D0
00021DEA <AmiBlitz3.ab3@3185>      BPL.w 'ok
00021DF0 <AmiBlitz3.ab3@3189>     MOVE.w numarg,D0
00021DF4 <AmiBlitz3.ab3@3190>     DIVU #$A,D0
00021DF8 <AmiBlitz3.ab3@3191>     ADDI.w #$30,D0
00021DFA <AmiBlitz3.ab3@3192>     CMPA.l A6,A1
00021DFE <AmiBlitz3.ab3@3193>      BCC.w mbovererr
00021E00 <AmiBlitz3.ab3@3194>     MOVE.b D0,(A1)+
00021E02 <AmiBlitz3.ab3@3195>     SWAP D0
00021E06 <AmiBlitz3.ab3@3196>     ADDI.w #$30,D0
00021E08 <AmiBlitz3.ab3@3197>     CMPA.l A6,A1
00021E0C <AmiBlitz3.ab3@3198>      BCC.w mbovererr
00021E0E <AmiBlitz3.ab3@3199>     MOVE.b D0,(A1)+
00021E12 <AmiBlitz3.ab3@3200>    BRA.w 'oky2
00021E18 <AmiBlitz3.ab3@3206>     CMP.w numarg,D0
00021E1C <AmiBlitz3.ab3@3207>      BCC.w 'oky2
00021E1E <AmiBlitz3.ab3@3208>     LSL.w #1,D0
00021E20 <AmiBlitz3.ab3@3209>     MOVE.w D0,D4
00021E22 <AmiBlitz3.ab3@3210>     LSL.w #1,D0
00021E24 <AmiBlitz3.ab3@3211>     ADD.w D4,D0          ;*6
00021E2A <AmiBlitz3.ab3@3212>     MOVEA.l ptr_macrobuffer_begin,A0
00021E2C <AmiBlitz3.ab3@3213>     ADDA.w D0,A0
00021E30 <AmiBlitz3.ab3@3214>     MOVE.w $4(A0),D4     ;len of replacetext
00021E34 <AmiBlitz3.ab3@3215>      BEQ.w 'oky2
00021E36 <AmiBlitz3.ab3@3216>     MOVEA.l (A0),A0
00021E38 <AmiBlitz3.ab3@3217>     SUBQ.w #1,D4
00021E3A <AmiBlitz3.ab3@3220>       CMPA.l A6,A1
00021E3E <AmiBlitz3.ab3@3221>        BCC.w mbovererr
00021E42 <AmiBlitz3.ab3@3223>       CMP.w #"@@",(a0)
00021E46 <AmiBlitz3.ab3@3224>        BNE 'l10e
00021E4C <AmiBlitz3.ab3@3225>       TST.w ininclude
00021E50 <AmiBlitz3.ab3@3226>        BNE errorjoin
00021E56 <AmiBlitz3.ab3@3229>       MOVE.l sourceline,a0
00021E58 <AmiBlitz3.ab3@3230>       MOVE.l (a0),a0
00021E5E <AmiBlitz3.ab3@3231>       CMP.l #0,a0
00021E62 <AmiBlitz3.ab3@3232>       BNE 'l11e
00021E64 <AmiBlitz3.ab3@3233>       MOVEQ #0,d0
00021E6A <AmiBlitz3.ab3@3234>       JSR error
00021E70 <AmiBlitz3.ab3@3237>       MOVE.l a0,sourceline
00021E76 <AmiBlitz3.ab3@3238>       ADDQ.l #1,linenumat
00021E7A <AmiBlitz3.ab3@3239>       LEA 9(a0),a0
00021E7C <AmiBlitz3.ab3@3240>       MOVE.l a0,-(a7)
00021E80 <AmiBlitz3.ab3@3243>       CMP.b #" ",(a0)+
00021E84 <AmiBlitz3.ab3@3244>        BEQ 'l110e
00021E8A <AmiBlitz3.ab3@3245>       CMP.b #";",-1(a0)
00021E8C <AmiBlitz3.ab3@3246>       MOVE.l (a7)+,a0
00021E90 <AmiBlitz3.ab3@3247>        BEQ 'l111e
00021E92 <AmiBlitz3.ab3@3248>       SUBQ.l #1,d4
00021E94 <AmiBlitz3.ab3@3252>       MOVE.b (A0)+,(A1)+
00021E98 <AmiBlitz3.ab3@3253>     DBF D4,'plp
00021E9C <AmiBlitz3.ab3@3255>     BRA.w 'oky2
00021E9E <AmiBlitz3.ab3@3258>     CMPA.l A6,A1
00021EA2 <AmiBlitz3.ab3@3259>      BCC.w mbovererr
00021EA4 <AmiBlitz3.ab3@3260>     MOVE.b D0,(A1)+
00021EA8 <AmiBlitz3.ab3@3261>      BPL.w 'oky2
00021EAA <AmiBlitz3.ab3@3262>     CMPA.l A6,A1
00021EAE <AmiBlitz3.ab3@3263>      BCC.w mbovererr
00021EB0 <AmiBlitz3.ab3@3264>     MOVE.b (A2)+,(A1)+
00021EB2 <AmiBlitz3.ab3@3265>     SUBQ.w #1,D1
00021EB6 <AmiBlitz3.ab3@3268>    DBF D1,'loop3
00021EB8 <AmiBlitz3.ab3@3278>   CMPA.l A6,A1
00021EBC <AmiBlitz3.ab3@3279>    BCC.w mbovererr
00021EBE <AmiBlitz3.ab3@3280>   MOVE.b (A5)+,(A1)+
00021EC2 <AmiBlitz3.ab3@3281>    BNE.w 'loop4
00021EC8 <AmiBlitz3.ab3@3283>   MOVEA.l myline,A5
00021ECE <AmiBlitz3.ab3@3285>   MOVE.l myoline,D0
00021ED2 <AmiBlitz3.ab3@3286>    BEQ.w 'skip3
00021ED4 <AmiBlitz3.ab3@3288>   SUBQ.l #1,d0
00021ED6 <AmiBlitz3.ab3@3290>   MOVEA.l D0,A1
00021EDC <AmiBlitz3.ab3@3291>   MOVE.l macrobuffer_size,D0
00021EE2 <AmiBlitz3.ab3@3292>   MOVEA.l _execbase,A6
00021EE8 <AmiBlitz3.ab3@3294>   MOVE.l mempool,a0
00021EEC <AmiBlitz3.ab3@3295>   JSR _FreePooled(A6)
00021EF0 <AmiBlitz3.ab3@3300>  BRA.w 'loop0
00021EF2 <AmiBlitz3.ab3@3303>   MOVEA.l (A7)+,A5
00021EF4 <AmiBlitz3.ab3@3304> RTS
00021EFA <AmiBlitz3.ab3@3308>   MOVE.l myline,D0
00021EFE <AmiBlitz3.ab3@3309>   BEQ.w 'no
00021F00 <AmiBlitz3.ab3@3311>   SUBQ.l #1,d0
00021F06 <AmiBlitz3.ab3@3313>   CLR.l myline
00021F08 <AmiBlitz3.ab3@3314>   MOVEA.l D0,A1
00021F0E <AmiBlitz3.ab3@3315>   MOVE.l macrobuffer_size,D0
00021F14 <AmiBlitz3.ab3@3316>   MOVEA.l _execbase,A6
00021F1A <AmiBlitz3.ab3@3318>   MOVE.l mempool,a0
00021F1E <AmiBlitz3.ab3@3319>  JMP _FreePooled(A6)
00021F20 <AmiBlitz3.ab3@3324> RTS
00021F22 <AmiBlitz3.ab3@3330>   MOVEQ.l #$00,D2    ;no nesting
00021F26 <AmiBlitz3.ab3@3334>   ADDQ.w #1,4(a0)
00021F28 <AmiBlitz3.ab3@3336>    MOVE.b (A4)+,D0
00021F2C <AmiBlitz3.ab3@3339>    BEQ exit1
00021F30 <AmiBlitz3.ab3@3341>    BPL.w 'tst
00021F34 <AmiBlitz3.ab3@3343>   ADDQ.w #1,4(a0)
00021F36 <AmiBlitz3.ab3@3345>   ADDQ.w #1,A4
00021F3A <AmiBlitz3.ab3@3346>  BRA.w 'loop
00021F40 <AmiBlitz3.ab3@3350>    TST.w instringon
00021F44 <AmiBlitz3.ab3@3351>    BNE 'lnom
00021F48 <AmiBlitz3.ab3@3352>    CMP.b #";",d0
00021F4C <AmiBlitz3.ab3@3353>    BEQ exit2
00021F50 <AmiBlitz3.ab3@3354>    CMP.b #":",d0
00021F54 <AmiBlitz3.ab3@3355>    BEQ exit2
00021F58 <AmiBlitz3.ab3@3359>   CMP.b #$22,D0           ;'"'
00021F5C <AmiBlitz3.ab3@3360>    BNE.w 'notq
00021F62 <AmiBlitz3.ab3@3361>   NOT.w instringon
00021F66 <AmiBlitz3.ab3@3362>  BRA.w 'loop
00021F6C <AmiBlitz3.ab3@3365>   TST.w instringon
00021F70 <AmiBlitz3.ab3@3366>    BNE.w 'loop
00021F74 <AmiBlitz3.ab3@3368>    CMP.b #"@",d0
00021F78 <AmiBlitz3.ab3@3369>    BNE 'l10
00021F7C <AmiBlitz3.ab3@3370>    CMP.b #"@",(a4)
00021F80 <AmiBlitz3.ab3@3371>    BNE 'l10
00021F86 <AmiBlitz3.ab3@3372>    TST.w ininclude
00021F8A <AmiBlitz3.ab3@3373>    BNE errorjoin
00021F90 <AmiBlitz3.ab3@3374>    MOVE.l sourceline3,a4
00021F96 <AmiBlitz3.ab3@3375>    CMP.l #0,a4
00021F9A <AmiBlitz3.ab3@3376>    BNE 'l11
00021FA0 <AmiBlitz3.ab3@3377>    MOVE.l sourceline,a4
00021FA2 <AmiBlitz3.ab3@3380>   MOVE.l (a4),a4
00021FA8 <AmiBlitz3.ab3@3381>       CMP.l #0,a4
00021FAC <AmiBlitz3.ab3@3382>       BNE 'l12
00021FAE <AmiBlitz3.ab3@3383>       MOVEQ #0,d0
00021FB4 <AmiBlitz3.ab3@3384>       JSR error
00021FBA <AmiBlitz3.ab3@3387>    MOVE.l a4,sourceline3
00021FBE <AmiBlitz3.ab3@3388>    LEA 9(a4),a4
00021FC0 <AmiBlitz3.ab3@3389>    MOVEQ #",",d0
00021FC4 <AmiBlitz3.ab3@3393>   CMP.b #$2C,D0       ;','
00021FC8 <AmiBlitz3.ab3@3394>    BNE.w 'notc
00021FCA <AmiBlitz3.ab3@3395>   TST.w D2
00021FCE <AmiBlitz3.ab3@3396>    BEQ.w 'done
00021FD2 <AmiBlitz3.ab3@3397>  BRA.w 'loop
00021FD6 <AmiBlitz3.ab3@3402>    CMP.b #$7B,D0      ; same as itisopen                                     ;"{"
00021FDA <AmiBlitz3.ab3@3403>    BEQ.w 'l10b
00021FDE <AmiBlitz3.ab3@3404>   CMP.b #$28,D0                                            ;"("
00021FE2 <AmiBlitz3.ab3@3408>    BNE.w 'noto
00021FE4 <AmiBlitz3.ab3@3409>   ADDQ.w #1,D2
00021FE8 <AmiBlitz3.ab3@3410>  BRA.w 'loop
00021FEC <AmiBlitz3.ab3@3413>   CMP.b #$7D,D0       ;'}'                                    ;"}"
00021FF0 <AmiBlitz3.ab3@3414>    BNE.w 'notcb
00021FF2 <AmiBlitz3.ab3@3415>  TST.w D2
00021FF6 <AmiBlitz3.ab3@3416>    BEQ.w 'done
00021FFA <AmiBlitz3.ab3@3421>    CMP.b #$7D,D0     ; same as isitclose                                       ;"}"
00021FFE <AmiBlitz3.ab3@3422>    BEQ.w 'l10a
00022002 <AmiBlitz3.ab3@3423>   CMP.b #$29,D0                                            ;")"
00022006 <AmiBlitz3.ab3@3427>    BNE.w 'loop
00022008 <AmiBlitz3.ab3@3428>   SUBQ.w #1,D2
0002200C <AmiBlitz3.ab3@3429> BRA.w 'loop
0002200E <AmiBlitz3.ab3@3432> RTS
00022010 <AmiBlitz3.ab3@3437>       SUBQ.l #1,a4
00022016 <AmiBlitz3.ab3@3438>       CLR.l sourceline3
00022018 <AmiBlitz3.ab3@3439> RTS
0002201A <AmiBlitz3.ab3@3443>       MOVEQ #0,d0
0002201C <AmiBlitz3.ab3@3444>       SUBQ.l #1,a4
00022022 <AmiBlitz3.ab3@3445>       CLR.l sourceline3
00022024 <AmiBlitz3.ab3@3446> RTS
00022028 <AmiBlitz3.ab3@3451>   CMP.b #$7B,D0        ;'{'                                     ;"{"
0002202C <AmiBlitz3.ab3@3452>   BEQ.w 'yes
00022030 <AmiBlitz3.ab3@3453>   CMP.b #$28,D0        ;'('                                    ;"("
00022032 <AmiBlitz3.ab3@3456> RTS
00022036 <AmiBlitz3.ab3@3460>   CMP.b #$7D,D0         ;'}'                                   ;"}"
0002203A <AmiBlitz3.ab3@3461>   BEQ.w 'yes
0002203E <AmiBlitz3.ab3@3462>   CMP.b #$29,D0         ;')'                                   ;")"
00022040 <AmiBlitz3.ab3@3465> RTS
00022042 <AmiBlitz3.ab3@3469> stopit:     Ds.w 1
00022044 <AmiBlitz3.ab3@3470> clrreq:     Ds.w 1
00022048 <AmiBlitz3.ab3@3492>   MOVE.w clrreq(PC),D0
0002204C <AmiBlitz3.ab3@3493>    BEQ.w 'skip
00022052 <AmiBlitz3.ab3@3497>   LEA clrreq,a0
00022054 <AmiBlitz3.ab3@3498>   NOT.w (a0)                                               ;reass
0002205A <AmiBlitz3.ab3@3499>   MOVEA.l ptr_ThisTask,A0
0002205E <AmiBlitz3.ab3@3500>   CLR.l $1E(A0)
00022062 <AmiBlitz3.ab3@3501>   CLR.l $2A(A0)
00022064 <AmiBlitz3.ab3@3504> RTS
00022066 <AmiBlitz3.ab3@3507> intsused:  Ds.w 1
0002206E <AmiBlitz3.ab3@3511>   MOVE.w #-1,blitzoff
00022074 <AmiBlitz3.ab3@3512>   CLR.w intsused
0002207A <AmiBlitz3.ab3@3513>   CLR.w anyerrs
00022080 <AmiBlitz3.ab3@3514>   CLR.w blitzmode
00022086 <AmiBlitz3.ab3@3515>   CLR.w dontwrite_nomemleft                                              ;nomemleft
0002208C <AmiBlitz3.ab3@3516>   CLR.w constmode
00022092 <AmiBlitz3.ab3@3517>   CLR.w cmake
00022098 <AmiBlitz3.ab3@3518>   CLR.w cfetchmode
0002209E <AmiBlitz3.ab3@3519>   CLR.l intdata1
000220A4 <AmiBlitz3.ab3@3520>   CLR.w fuckpos
000220AA <AmiBlitz3.ab3@3521>   CLR.w procnum
000220B0 <AmiBlitz3.ab3@3522>   CLR.w procnum2
000220B6 <AmiBlitz3.ab3@3523>   CLR.w dfetch
000220BC <AmiBlitz3.ab3@3524>   CLR.l titleat
000220C2 <AmiBlitz3.ab3@3525>   CLR.b usedpath
000220C8 <AmiBlitz3.ab3@3526>   CLR.b path2
000220CE <AmiBlitz3.ab3@3527>   CLR.w inerr
000220D4 <AmiBlitz3.ab3@3528>   CLR.w intlevel
000220DA <AmiBlitz3.ab3@3529>   CLR.l cont_pc
000220E0 <AmiBlitz3.ab3@3530>   CLR.l cont_pc2
000220E6 <AmiBlitz3.ab3@3531>   CLR.l lastcontlink
000220F0 <AmiBlitz3.ab3@3533>   MOVE.l destbufferstart,destpointer
000220FA <AmiBlitz3.ab3@3534>   MOVE.l destbufferstart,bigpc
00022104 <AmiBlitz3.ab3@3535>   MOVE.l destbufferend,libend
0002210E <AmiBlitz3.ab3@3536>   MOVE.l data1start,data1
00022118 <AmiBlitz3.ab3@3537>   MOVE.l data2at,data2
00022120 <AmiBlitz3.ab3@3539>   MOVE.w #-1,skipcode                                      ;#-1,comflag org source
00022128 <AmiBlitz3.ab3@3540>   MOVE.w #-1,linemode                                      ;#-1,linemode org soruce
0002212E <AmiBlitz3.ab3@3541>   CLR.w oldvcodelen
00022134 <AmiBlitz3.ab3@3542>   CLR.b lastgloballabel                                    ;lastbiglab org source
00022136 <AmiBlitz3.ab3@3544> RTS
00022138 <AmiBlitz3.ab3@3547> debugmode:  Ds.w 1                                         ;debugga org source ;debugger enabled?
0002213E <AmiBlitz3.ab3@3551>   LEA  clrreq,a1
00022142 <AmiBlitz3.ab3@3552>   MOVE.w #2000,(a1)
0002216C <AmiBlitz3.ab3@3553>   !basic
000221BC <AmiBlitz3.ab3@3554>   comstatusstr  = !TRANS{"Initializing Compiler..."} ;default settings
000221C4 <AmiBlitz3.ab3@3555>   calcpro       = 0
000221CC <AmiBlitz3.ab3@3556>   calcpro_old   = 0
000221D8 <AmiBlitz3.ab3@3557>   typ_old       = -1
000221E4 <AmiBlitz3.ab3@3558>   pass_old      = -1
000221EA <AmiBlitz3.ab3@3559>   update_comstatus_gui = True ; for the first
00022224 <AmiBlitz3.ab3@3561>   GetD0 &comstatusstr : !ComData_SetL{comPtr_CompileStatusString,d0}  ; set pointer of status string for gui tomsmart1 2012 05 12
0002225E <AmiBlitz3.ab3@3562>   GetD0 &calcpro      : !ComData_SetL{comPtr_CompileCalcProLong ,d0}  ; set pointer of calcpro long for gui tomsmart1 2012 05 12
0002227C <AmiBlitz3.ab3@3563>   !asm
00022282 <AmiBlitz3.ab3@3566>   CLR.w stopit
00022284 <AmiBlitz3.ab3@3567> RTS
0002228A <AmiBlitz3.ab3@3574>   CLR.w storedebugmode
00022290 <AmiBlitz3.ab3@3575>   CLR.b iserror
00022294 <AmiBlitz3.ab3@3577>   BSR.w compilerequester
0002229E <AmiBlitz3.ab3@3579>   MOVE.l #0,globallinecount
000222A4 <AmiBlitz3.ab3@3580>   JSR check_of_same_source
000222A8 <AmiBlitz3.ab3@3583>   BSR.w call_setpointerbusy
000222AC <AmiBlitz3.ab3@3585>   BSR.w setcvars
000222B4 <AmiBlitz3.ab3@3587>   MOVE.w #$8000,globalvarpointer
000222BE <AmiBlitz3.ab3@3588>   MOVE.l #newtype_quick,defaulttype
000222C4 <AmiBlitz3.ab3@3590>   MOVE.l A7,passstack
000222CE <AmiBlitz3.ab3@3591>   MOVE.l #firstitem_,sourceline
000222D8 <AmiBlitz3.ab3@3592>   MOVE.w numlines_org,linesleft
000222E2 <AmiBlitz3.ab3@3594>   MOVE.l numlines,numlines2
000222E8 <AmiBlitz3.ab3@3596>   ADDQ.w #1,linesleft
000222EE <AmiBlitz3.ab3@3597>   ADDQ.l #1,numlines2
000222F8 <AmiBlitz3.ab3@3598>   MOVE.l #-1,linenumat
000222FC <AmiBlitz3.ab3@3600>   BSR.w resetlibs
00022300 <AmiBlitz3.ab3@3601>   BSR.w Aclearallvars
00022306 <AmiBlitz3.ab3@3603>   LEA progress_per_line+2,A0
00022308 <AmiBlitz3.ab3@3604>   MOVEQ.l #$03,D0
0002230A <AmiBlitz3.ab3@3607>     CLR.w (A0)+
0002230E <AmiBlitz3.ab3@3608>   DBF D0,'okloop
00022314 <AmiBlitz3.ab3@3612>   LEA _include,a0
00022318 <AmiBlitz3.ab3@3613>   MOVEM.l a0-a6/d0-d7,-(a7)
0002231E <AmiBlitz3.ab3@3614>   LEA ptr_parameterstore,a1
00022320 <AmiBlitz3.ab3@3617>     MOVE.b (a0)+,(a1)+
00022324 <AmiBlitz3.ab3@3618>   BNE 'l1b
00022326 <AmiBlitz3.ab3@3620>   MOVEQ #9,d2
0002232C <AmiBlitz3.ab3@3621>   JSR findlabel2
00022330 <AmiBlitz3.ab3@3622>   BNE 'd
00022338 <AmiBlitz3.ab3@3623>   MOVE.l #0,8(a2)
0002233C <AmiBlitz3.ab3@3624>   MOVEM.l (a7)+,a0-a6/d0-d7
00022340 <AmiBlitz3.ab3@3625>  BRA 'd2
00022346 <AmiBlitz3.ab3@3628>   JSR addlabelhash
0002234E <AmiBlitz3.ab3@3629>   MOVE.l #$1,$4(A2)
00022356 <AmiBlitz3.ab3@3630>   MOVE.l #0,8(a2)
0002235A <AmiBlitz3.ab3@3631>   MOVEM.l (a7)+,a0-a6/d0-d7
00022360 <AmiBlitz3.ab3@3634>   LEA _debug,a0
00022364 <AmiBlitz3.ab3@3635>   MOVEM.l a0-a6/d0-d7,-(a7)
0002236A <AmiBlitz3.ab3@3636>   LEA ptr_parameterstore,a1
0002236C <AmiBlitz3.ab3@3639>     MOVE.b (a0)+,(a1)+
00022370 <AmiBlitz3.ab3@3640>   BNE 'l9b
00022372 <AmiBlitz3.ab3@3642>   MOVEQ #7,d2
00022378 <AmiBlitz3.ab3@3643>   JSR findlabel2
0002237C <AmiBlitz3.ab3@3644>   BNE 'd9
00022380 <AmiBlitz3.ab3@3645>   MOVE.b debugmode(PC),D0
00022382 <AmiBlitz3.ab3@3646>   EXT.w d0
00022384 <AmiBlitz3.ab3@3647>   EXT.l d0
00022388 <AmiBlitz3.ab3@3648>   MOVE.l d0,8(a2)
0002238C <AmiBlitz3.ab3@3649>   MOVEM.l (a7)+,a0-a6/d0-d7
00022390 <AmiBlitz3.ab3@3650>  BRA 'd9b
00022396 <AmiBlitz3.ab3@3653>   JSR addlabelhash
0002239E <AmiBlitz3.ab3@3654>   MOVE.l #$1,$4(A2)
000223A2 <AmiBlitz3.ab3@3655>   MOVE.b debugmode(PC),D0
000223A4 <AmiBlitz3.ab3@3656>   EXT.w d0
000223A6 <AmiBlitz3.ab3@3657>   EXT.l d0
000223AA <AmiBlitz3.ab3@3658>   MOVE.l d0,8(a2)
000223AE <AmiBlitz3.ab3@3659>   MOVEM.l (a7)+,a0-a6/d0-d7
000223B4 <AmiBlitz3.ab3@3662>   MOVE.l #firstitem_,a0
000223B6 <AmiBlitz3.ab3@3663>   MOVE.l (a0),a0
000223BA <AmiBlitz3.ab3@3664>   LEA 9(a0),a0
000223C2 <AmiBlitz3.ab3@3665>   MOVE.w #0,exdebug
000223C8 <AmiBlitz3.ab3@3666>   TST.b debugmode
000223CC <AmiBlitz3.ab3@3667>    BEQ 'l10
000223CE <AmiBlitz3.ab3@3670>   MOVE.b (a0)+,d0
000223D2 <AmiBlitz3.ab3@3671>    BEQ 'l10
000223D6 <AmiBlitz3.ab3@3672>   CMP.b #$20,d0
000223DA <AmiBlitz3.ab3@3673>    BEQ 'l2
000223DC <AmiBlitz3.ab3@3674>   SUBQ.l #1,a0
000223E2 <AmiBlitz3.ab3@3675>   CMP.l #"DEBU",(a0)
000223E6 <AmiBlitz3.ab3@3676>    BNE 'l10
000223EC <AmiBlitz3.ab3@3677>   CMP.b #"G",4(a0)
000223F0 <AmiBlitz3.ab3@3678>    BNE 'l10
000223F8 <AmiBlitz3.ab3@3679>   MOVE.w #$0,debugversion
00022400 <AmiBlitz3.ab3@3680>   MOVE.b #1,exdebug
00022406 <AmiBlitz3.ab3@3687>   LEA nops4,A0
0002240C <AmiBlitz3.ab3@3688>   LEA nopsf,A1
00022412 <AmiBlitz3.ab3@3689>   JSR pokecode2                                            ;write intro nops
00022418 <AmiBlitz3.ab3@3691>   MOVE.l #$01010101,d1
0002241E <AmiBlitz3.ab3@3692>   JSR writedatalong                                        ;for the 4 tempregs
00022424 <AmiBlitz3.ab3@3693>   JSR writedatalong
0002242A <AmiBlitz3.ab3@3694>   JSR writedatalong
00022430 <AmiBlitz3.ab3@3695>   JSR writedatalong
00022436 <AmiBlitz3.ab3@3696>   TST.b saved0
0002243A <AmiBlitz3.ab3@3697>    BEQ 'l1
00022440 <AmiBlitz3.ab3@3698>   MOVE.l #$4e714e71,d1
00022446 <AmiBlitz3.ab3@3699>   JSR writelong                                            ;add 2 nops
0002244C <AmiBlitz3.ab3@3700>   MOVE.l #$4e714e71,d1
00022452 <AmiBlitz3.ab3@3701>   JSR writelong                                            ;add 2 nops
00022458 <AmiBlitz3.ab3@3702>   MOVE.l #$4e714e71,d1
0002245E <AmiBlitz3.ab3@3703>   JSR writelong                                            ;add 2 nops
00022464 <AmiBlitz3.ab3@3704>    MOVE.l #$4e714e71,d1
0002246A <AmiBlitz3.ab3@3705>   JSR writelong                                            ;add 2 nops
0002246E <AmiBlitz3.ab3@3709>   MOVE.b debugmode(PC),D1
00022472 <AmiBlitz3.ab3@3710>    BEQ.b 'dskip
0002247C <AmiBlitz3.ab3@3711>   MOVE.b debugmode,storedebugmode
00022480 <AmiBlitz3.ab3@3713>   MOVE.w #$FFDC,D1        ;#runerrlib,
00022484 <AmiBlitz3.ab3@3714>    BSR.w uselib
0002248A <AmiBlitz3.ab3@3716>   TST.w debugversion                                       ;make a version for debugger
0002248E <AmiBlitz3.ab3@3717>    BNE.b 'exec
00022492 <AmiBlitz3.ab3@3721>   MOVE.w #$FA3C,D1        ;#debuglib,
00022496 <AmiBlitz3.ab3@3722>    BSR.w uselib
0002249A <AmiBlitz3.ab3@3723>   MOVE.w #$0001,D1        ;#dhandlerlib,
0002249E <AmiBlitz3.ab3@3724>    BSR.w uselib
000224A2 <AmiBlitz3.ab3@3725>  BRA.b 'dskip
000224A6 <AmiBlitz3.ab3@3730>   MOVE.w #$FA32,D1        ;#rundebuglib,
000224AA <AmiBlitz3.ab3@3731>   BSR.w uselib
000224AE <AmiBlitz3.ab3@3734>   BSR.w nextline
000224B4 <AmiBlitz3.ab3@3736>   CLR.l linenum
000224BA <AmiBlitz3.ab3@3737>   CLR.l stacktrack
000224C0 <AmiBlitz3.ab3@3743>   ADDQ.l #1,linenum
000224CA <AmiBlitz3.ab3@3744>   MOVE.l destpointer,destpointer2
000224D0 <AmiBlitz3.ab3@3745>   MOVE.l a5,sourceline2
000224D4 <AmiBlitz3.ab3@3747>   BSR.w compile_line                                        ;compile pass
000224D8 <AmiBlitz3.ab3@3751>   BSR.w nextline
000224DC <AmiBlitz3.ab3@3752>    BNE.w passloop
000224E0 <AmiBlitz3.ab3@3753>   BSR.w JUMP_do_runerrson
000224E4 <AmiBlitz3.ab3@3754>   BSR.w pointchk
000224EA <AmiBlitz3.ab3@3756>   TST.b objectcount
000224EE <AmiBlitz3.ab3@3757>    BNE macenderr
000224F4 <AmiBlitz3.ab3@3759>   CLR.l linenumat
000224F8 <AmiBlitz3.ab3@3760>   BSR.w errchx2
00022502 <AmiBlitz3.ab3@3762>   CMP.l #-1,bssend
00022506 <AmiBlitz3.ab3@3763>    BNE 'l30
00022510 <AmiBlitz3.ab3@3764>   MOVE.l destpointer,bssend                                ;compile end
00022516 <AmiBlitz3.ab3@3767>   MOVE.l destpointer,d0
00022520 <AmiBlitz3.ab3@3768>   CMP.l #-1,bssstart
00022524 <AmiBlitz3.ab3@3769>   BNE 'lnf6
0002252E <AmiBlitz3.ab3@3770>   CMP.l #-1,chipstart
00022532 <AmiBlitz3.ab3@3771>   BNE 'lnf6
00022536 <AmiBlitz3.ab3@3772>  BRA 'leven4
0002253C <AmiBlitz3.ab3@3775>   MOVE.l destpointer,d1
0002253E <AmiBlitz3.ab3@3776>   ADDQ.l #3,d1
00022544 <AmiBlitz3.ab3@3777>   AND.l #$fffffffc,d1                                      ;bug ?
0002254A <AmiBlitz3.ab3@3778>   MOVE.l d1,destpointer
00022554 <AmiBlitz3.ab3@3781>   MOVE.l destpointer,codeend
0002255E <AmiBlitz3.ab3@3782>   CMP.l #-1,chipend
00022562 <AmiBlitz3.ab3@3783>   BNE 'l31
0002256C <AmiBlitz3.ab3@3784>   MOVE.l destpointer,chipend
00022572 <AmiBlitz3.ab3@3787>   MOVE.l destpointer,d1
00022574 <AmiBlitz3.ab3@3788>   ADDQ.l #1,d1
0002257A <AmiBlitz3.ab3@3789>   AND.l #$fffffffe,d1                                     ;new evenexit
00022580 <AmiBlitz3.ab3@3790>   MOVE.l d1,destpointer
00022584 <AmiBlitz3.ab3@3793>   MOVE.b debugmode(PC),D1
00022588 <AmiBlitz3.ab3@3794>    BEQ.b 'nodb
0002258C <AmiBlitz3.ab3@3796>    BSR.w debugstuff
00022590 <AmiBlitz3.ab3@3797>   MOVE.w #$C300,D1        ;#finalscheck,
00022596 <AmiBlitz3.ab3@3798>    JSR Atokejsr
0002259A <AmiBlitz3.ab3@3800>    BSR.w debugstuff
0002259E <AmiBlitz3.ab3@3801>   MOVE.l eopcode(PC),D1
000225A4 <AmiBlitz3.ab3@3802>    JSR writelong
000225A8 <AmiBlitz3.ab3@3803>   MOVE.l lastcontlink(PC),D1
000225AC <AmiBlitz3.ab3@3804>    BEQ.b 'nocl
000225AE <AmiBlitz3.ab3@3805>   MOVEA.l D1,A0
000225B2 <AmiBlitz3.ab3@3806>   CLR.w $6(A0)
000225BC <AmiBlitz3.ab3@3813>   MOVE.l destpointer,endop                                ;where end goes...
000225C2 <AmiBlitz3.ab3@3815>   TST.w blitzmode
000225C6 <AmiBlitz3.ab3@3816>   BEQ.w 'nobl
000225CA <AmiBlitz3.ab3@3817>   BSR.w do_AMIGA                                          ;back to amiga if in blitz!
000225D0 <AmiBlitz3.ab3@3820>   TST.w intsused
000225D4 <AmiBlitz3.ab3@3821>   BEQ.b 'noints
000225D8 <AmiBlitz3.ab3@3822>   MOVE.w #$C105,D1                                        ;interupts off!
000225DE <AmiBlitz3.ab3@3823>   JSR tokejsr2
000225E2 <AmiBlitz3.ab3@3826>   BSR.w calcstatic
000225E8 <AmiBlitz3.ab3@3827>   MOVE.w D4,numstatic
000225EE <AmiBlitz3.ab3@3828>   MOVE.l D3,staticdata
000225F2 <AmiBlitz3.ab3@3829>    BSR.w calcmaxs
000225F8 <AmiBlitz3.ab3@3831>   TST.l tokeslist
000225FC <AmiBlitz3.ab3@3832>    BEQ.b 'skipjsrs
00022602 <AmiBlitz3.ab3@3834>   MOVE.w gotocode,D1                                       ;jmp!
00022608 <AmiBlitz3.ab3@3835>    JSR writeword
00022612 <AmiBlitz3.ab3@3836>   MOVE.l destpointer,endjmpat
00022616 <AmiBlitz3.ab3@3837>    BSR.w addoff
0002261C <AmiBlitz3.ab3@3838>    JSR writelong                                           
00022620 <AmiBlitz3.ab3@3840>    BSR.w fixjsrs                                         ;has to be done before finits!
00022626 <AmiBlitz3.ab3@3844>   TST.w dontwrite_nomemleft
0002262A <AmiBlitz3.ab3@3845>    BNE.b 'skipjsrs
0002262E <AmiBlitz3.ab3@3846>   MOVEA.l endjmpat(PC),A4
00022634 <AmiBlitz3.ab3@3847>   MOVE.l destpointer,(A4)
0002263A <AmiBlitz3.ab3@3851>   TST.b returncode
0002263E <AmiBlitz3.ab3@3852>   BEQ 'l2
00022642 <AmiBlitz3.ab3@3853>   MOVE.w #$2e80,d1
00022648 <AmiBlitz3.ab3@3854>   JSR writeword
0002264E <AmiBlitz3.ab3@3858>   JSR makefinits
00022654 <AmiBlitz3.ab3@3860>   TST.b returncode
00022658 <AmiBlitz3.ab3@3861>   BEQ 'l3
0002265C <AmiBlitz3.ab3@3862>   MOVE.w #$4e75,d1
00022662 <AmiBlitz3.ab3@3863>   JSR writeword
00022666 <AmiBlitz3.ab3@3864>  BRA 'l1
0002266C <AmiBlitz3.ab3@3868>   MOVE.l #$70004E75,D1
00022672 <AmiBlitz3.ab3@3869>   JSR writelong                                            ;write moveq #0,d0:rts
00022678 <AmiBlitz3.ab3@3872>   JSR makeinits
0002267C <AmiBlitz3.ab3@3873>   BSR.w asmfixer
00022680 <AmiBlitz3.ab3@3875>   BSR.w close_compilewin
00022684 <AmiBlitz3.ab3@3876> BRA.w call_setpointernormal
0002268A <AmiBlitz3.ab3@3879> JUMP_do_runerrson JMP do_runerrson
0002268C <AmiBlitz3.ab3@3883> eopcode:    Dc.b $70,$03                                   ;MOVEQ #$03,D0
0002268E <AmiBlitz3.ab3@3884>             Dc.b $4E,$40                                   ;TRAP  #00
00022692 <AmiBlitz3.ab3@3886> endjmpat:   Ds.l 1
00022698 <AmiBlitz3.ab3@3890>   MOVEA.l newtype_string,A2
0002269E <AmiBlitz3.ab3@3891>   MOVE.l #MaxByte,D0                                       ;move.l #$ff,d0 org source
000226A2 <AmiBlitz3.ab3@3894>     CMPA.w #$0,A2
000226A6 <AmiBlitz3.ab3@3895>      BEQ.w 'done
000226AA <AmiBlitz3.ab3@3896>     CMP.l $4(A2),D0
000226AE <AmiBlitz3.ab3@3897>      BNE.w 'next
000226B6 <AmiBlitz3.ab3@3898>     MOVE.w $8(A2),linenumat+2                              ;type not found  ;move 8(a2),linenumat org source
000226BA <AmiBlitz3.ab3@3899>  BRA.w notypeerr
000226BC <AmiBlitz3.ab3@3902>     MOVEA.l (A2),A2
000226C0 <AmiBlitz3.ab3@3903>  BRA.w 'loop
000226C2 <AmiBlitz3.ab3@3906> RTS
000226C8 <AmiBlitz3.ab3@3910>   LEA labelbase,A2
000226CA <AmiBlitz3.ab3@3914>   MOVE.l (A2),D0                                           ;testlabels
000226CE <AmiBlitz3.ab3@3915>    BEQ.w 'done
000226D0 <AmiBlitz3.ab3@3916>   MOVEA.l D0,A2
000226D4 <AmiBlitz3.ab3@3917>   MOVE.l $4(A2),D0
000226D8 <AmiBlitz3.ab3@3918>   BTST #$0,D0
000226DC <AmiBlitz3.ab3@3919>    BNE.w 'loop
000226E0 <AmiBlitz3.ab3@3920>   MOVE.l $8(A2),D0
000226E4 <AmiBlitz3.ab3@3921>    BNE.w 'loop
000226EC <AmiBlitz3.ab3@3922>   MOVE.w $10(A2),linenumat+2
000226EE <AmiBlitz3.ab3@3923>   MOVEQ #0,d0
000226F2 <AmiBlitz3.ab3@3924>   MOVE.b $12(a2),d0
000226FA <AmiBlitz3.ab3@3925>   MOVE.w 0(a2,d0),linenumat
00022700 <AmiBlitz3.ab3@3926>  JMP nolaberr                                               ;label not found
00022706 <AmiBlitz3.ab3@3929>   MOVE.l concomsp,D0
0002270C <AmiBlitz3.ab3@3930>   CMP.l #concomstack,D0
00022710 <AmiBlitz3.ab3@3931>    BNE.w chxerr4
00022716 <AmiBlitz3.ab3@3932>   MOVE.w connest,D1
0002271A <AmiBlitz3.ab3@3933>    BNE.w chxerr4
0002271C <AmiBlitz3.ab3@3937>   MOVE.l D1,-(A7)
00022722 <AmiBlitz3.ab3@3938>   MOVE.l firstsel,D1
00022726 <AmiBlitz3.ab3@3939>    BNE.w 'err1
0002272C <AmiBlitz3.ab3@3940>   MOVE.l firstrep,D1
00022730 <AmiBlitz3.ab3@3941>    BNE.w 'err2
00022736 <AmiBlitz3.ab3@3942>   MOVE.w intstring,D1
0002273A <AmiBlitz3.ab3@3943>    BNE.w 'err3
0002273E <AmiBlitz3.ab3@3944>   MOVE.l 4(a7),d1
00022744 <AmiBlitz3.ab3@3945>   MOVE.w proceduremode,D1
00022748 <AmiBlitz3.ab3@3946>    BNE.w 'err6
0002274E <AmiBlitz3.ab3@3947>   MOVE.l firstiff,d1
00022752 <AmiBlitz3.ab3@3948>    BNE 'err5
00022758 <AmiBlitz3.ab3@3949>   MOVE.l firstfor,D1
0002275C <AmiBlitz3.ab3@3950>    BNE.w 'err7
0002275E <AmiBlitz3.ab3@3951>   MOVE.l (A7)+,D1
00022760 <AmiBlitz3.ab3@3952>  RTS
0002276A <AmiBlitz3.ab3@3955>   MOVE.l sellineat,linenumat
00022770 <AmiBlitz3.ab3@3956>  JMP selerrz
0002277A <AmiBlitz3.ab3@3959>   MOVE.l replineat,linenumat
00022780 <AmiBlitz3.ab3@3960>  JMP unterr3
0002278A <AmiBlitz3.ab3@3963>   MOVE.l intlineat,linenumat
00022790 <AmiBlitz3.ab3@3964>  JMP interr2
0002279A <AmiBlitz3.ab3@3967>   MOVE.l iflineat,linenumat
000227A0 <AmiBlitz3.ab3@3968>  JMP noenderr
000227AA <AmiBlitz3.ab3@3971>   MOVE.l prolineat,linenumat
000227B0 <AmiBlitz3.ab3@3972>  JMP nopenderr
000227BA <AmiBlitz3.ab3@3975>   MOVE.l forlineat,linenumat
000227C0 <AmiBlitz3.ab3@3976> JMP nonexterr
000227CA <AmiBlitz3.ab3@3980>   MOVE.l ciflineat,linenumat
000227D0 <AmiBlitz3.ab3@3981> JMP nocenderr
000227DA <AmiBlitz3.ab3@3985>   MOVE.l data1,maxsat
000227DC <AmiBlitz3.ab3@3986>   MOVEQ.l #$00,D4
000227E2 <AmiBlitz3.ab3@3987>   MOVEA.l libpointer,A2
000227E6 <AmiBlitz3.ab3@3990>     CMPA.w #$0,A2
000227EA <AmiBlitz3.ab3@3991>      BEQ.w 'done
000227EE <AmiBlitz3.ab3@3992>     TST.w $C(A2)
000227F2 <AmiBlitz3.ab3@3993>      BPL.w 'next
000227F6 <AmiBlitz3.ab3@3994>     MOVE.l $12(A2),D0
000227FA <AmiBlitz3.ab3@3995>     TST.w -$2(A2,D0.L)
000227FE <AmiBlitz3.ab3@3996>      BEQ.w 'next
00022800 <AmiBlitz3.ab3@3998>     ADDQ.w #1,D4
00022804 <AmiBlitz3.ab3@3999>     MOVE.w -$6(A2,D0.L),D1
00022808 <AmiBlitz3.ab3@4000>     BSR.w pokedata1
0002280A <AmiBlitz3.ab3@4001>     MOVEQ.l #$01,D1
0002280E <AmiBlitz3.ab3@4002>     MOVE.w -$2(A2,D0.L),D2
00022810 <AmiBlitz3.ab3@4003>     LSL.w D2,D1
00022814 <AmiBlitz3.ab3@4004>     MULU -$4(A2,D0.L),D1                                   ;write objectspacesize
00022818 <AmiBlitz3.ab3@4005>     BSR.w writedatalong
0002281A <AmiBlitz3.ab3@4008>     MOVEA.l (A2),A2
0002281E <AmiBlitz3.ab3@4009>  BRA.w 'loop
00022824 <AmiBlitz3.ab3@4012>   MOVE.w D4,maxsused
00022828 <AmiBlitz3.ab3@4013>    BEQ.w 'done2
0002282C <AmiBlitz3.ab3@4014>   MOVE.w #$FFFA,D1       ;was #65530    ;use memlib                                  ;;use memlib
00022830 <AmiBlitz3.ab3@4015> BRA.w uselib
00022832 <AmiBlitz3.ab3@4018> RTS
00022838 <AmiBlitz3.ab3@4024>    MOVE.l a7,stackaddr
0002283C <AmiBlitz3.ab3@4026>    BSR.w compile_term
00022840 <AmiBlitz3.ab3@4027>    BSR.w reget
00022844 <AmiBlitz3.ab3@4028>    BNE.w illeolerr
0002284A <AmiBlitz3.ab3@4030>    TST.w dontwrite_nomemleft
0002284E <AmiBlitz3.ab3@4031>    BNE 'l1
00022854 <AmiBlitz3.ab3@4032>    TST.l stacktrack
00022858 <AmiBlitz3.ab3@4033>    BNE errormsg_stack
0002285C <AmiBlitz3.ab3@4037>    CMP.w #-$7FDE,D0            ; was #$8000+34
00022860 <AmiBlitz3.ab3@4038>    BNE.w 'notelse
00022866 <AmiBlitz3.ab3@4039>    JSR do_else2
0002286A <AmiBlitz3.ab3@4040>  BRA.w compile_line
0002286C <AmiBlitz3.ab3@4043>   TST.w D0
00022870 <AmiBlitz3.ab3@4044>   BNE.w compile_line
00022876 <AmiBlitz3.ab3@4050>   MOVE.l firstiff,D0
0002287A <AmiBlitz3.ab3@4051>    BEQ.w 'done
0002287C <AmiBlitz3.ab3@4052>   MOVEA.l D0,A0
00022880 <AmiBlitz3.ab3@4053>   MOVE.w $C(A0),D1
00022884 <AmiBlitz3.ab3@4054>    BPL.w 'done
00022888 <AmiBlitz3.ab3@4058>   BCLR #$F,D1
0002288E <AmiBlitz3.ab3@4059>    JSR doendif2
00022894 <AmiBlitz3.ab3@4060>    JSR freetheifz
00022898 <AmiBlitz3.ab3@4061> BRA.w 'unthen
0002289A <AmiBlitz3.ab3@4064> RTS
000228A0 <AmiBlitz3.ab3@4068>   LEA lastgloballabel,A0
000228A2 <AmiBlitz3.ab3@4069>   TST.b (A0)
000228A6 <AmiBlitz3.ab3@4070>   BEQ.w nolocerr
000228AC <AmiBlitz3.ab3@4071>   LEA ptr_parameterstore,A1
000228AE <AmiBlitz3.ab3@4072>   MOVEQ.l #$00,D2
000228B0 <AmiBlitz3.ab3@4075>   ADDQ.w #1,D2
000228B2 <AmiBlitz3.ab3@4076>   MOVE.b (A0)+,(A1)+
000228B6 <AmiBlitz3.ab3@4077>    BNE.w 'loop
000228BC <AmiBlitz3.ab3@4078>   MOVE.b #$27,-$1(A1)
000228BE <AmiBlitz3.ab3@4079>   MOVE.w D2,-(A7)
000228C4 <AmiBlitz3.ab3@4080>    JSR makename4
000228C6 <AmiBlitz3.ab3@4081>   CMP.w (A7)+,D2
000228CA <AmiBlitz3.ab3@4082>    BEQ.w syntaxerr
000228CC <AmiBlitz3.ab3@4083>    TST.w d0
000228D0 <AmiBlitz3.ab3@4084>    BPL 'done
000228D8 <AmiBlitz3.ab3@4085>    MOVE.w #$3a,lastchar
000228DA <AmiBlitz3.ab3@4086>    SUBQ.l #2,a5
000228DC <AmiBlitz3.ab3@4089> RTS
000228E6 <AmiBlitz3.ab3@4093>   MOVE.l #forthstack,forthsp
000228F0 <AmiBlitz3.ab3@4094>   MOVE.l #precstack,precsp
000228F2 <AmiBlitz3.ab3@4095> RTS
000228F4 <AmiBlitz3.ab3@4102>   MOVEQ.l #$00,D4
0002291E <AmiBlitz3.ab3@4105>   !basic
00022960 <AmiBlitz3.ab3@4106> 
00022970 <AmiBlitz3.ab3@4108>   If (c_abort = 1)           ; check if set
00022972 <AmiBlitz3.ab3@4109>     MOVEQ.l #-$01,d4
00022978 <AmiBlitz3.ab3@4110>     MOVE.w D4,stopit
00022996 <AmiBlitz3.ab3@4111>     !asm
0002299A <AmiBlitz3.ab3@4112>     BRA 'skip
000229B8 <AmiBlitz3.ab3@4114>   !asm
000229BA <AmiBlitz3.ab3@4115>   MOVEQ.l #$00,D6
000229BC <AmiBlitz3.ab3@4116>   MOVEQ.l #$00,D7                                          ; clr Z-Flag for beq.b in chkstop_chk
000229BE <AmiBlitz3.ab3@4120> RTS
000229C2 <AmiBlitz3.ab3@4124>   MOVE.w stopit(PC),D0
000229C6 <AmiBlitz3.ab3@4125>   BEQ 'chk
000229CC <AmiBlitz3.ab3@4127>   SUBQ.w #1,stopit
000229CE <AmiBlitz3.ab3@4132>  RTS
000229D6 <AmiBlitz3.ab3@4136>   MOVE.w #2000,stopit
000229DA <AmiBlitz3.ab3@4138>   BSR.w chkrealstop
000229DE <AmiBlitz3.ab3@4139>   BEQ.b 'rts
000229E2 <AmiBlitz3.ab3@4142>   BSR.w close_compilewin
000229E6 <AmiBlitz3.ab3@4143>   BSR.w call_setpointernormal
000229EC <AmiBlitz3.ab3@4145>   MOVEA.l errstack,A7
000229F2 <AmiBlitz3.ab3@4146>   MOVEA.l errcont,A0
000229FA <AmiBlitz3.ab3@4147>   MOVE.w #-1,anyerrs
000229FC <AmiBlitz3.ab3@4148> JMP (A0)
00022A00 <AmiBlitz3.ab3@4151> d_pc:           Ds.l 1
00022A04 <AmiBlitz3.ab3@4152> d_bigpc:        Ds.l 1
00022A06 <AmiBlitz3.ab3@4153> d_nomemleft:    Ds.w 1
00022A0A <AmiBlitz3.ab3@4154> cont_pc:        Ds.l 1
00022A0E <AmiBlitz3.ab3@4155> cont_pc2:       Ds.l 1
00022A12 <AmiBlitz3.ab3@4156> lastcontlink:   Ds.l 1
00022A16 <AmiBlitz3.ab3@4160>   ORI.w #$4E40,D1
00022A1A <AmiBlitz3.ab3@4161> BRA.w JUMP_writeword
00022A20 <AmiBlitz3.ab3@4165>   TST.b debugmode
00022A24 <AmiBlitz3.ab3@4166>   BEQ.w debugstuffa_rts
00022A2A <AmiBlitz3.ab3@4177>   TST.w dirmode                                            ;or while in direct mode...
00022A2E <AmiBlitz3.ab3@4178>    BNE debugstuffa_rts
00022A38 <AmiBlitz3.ab3@4180>   MOVE.l destpointer,d_pc
00022A42 <AmiBlitz3.ab3@4181>   MOVE.l bigpc,d_bigpc
00022A4C <AmiBlitz3.ab3@4182>   MOVE.w dontwrite_nomemleft,d_nomemleft
00022A50 <AmiBlitz3.ab3@4184>   MOVEM.l D0-D1,-(A7)
00022A52 <AmiBlitz3.ab3@4186>   MOVEQ.l #$01,D1
00022A56 <AmiBlitz3.ab3@4187>    BSR.w writetrap                                         ;write the adress to sourceline
00022A5C <AmiBlitz3.ab3@4191>    MOVE.l destpointer,D0
00022A62 <AmiBlitz3.ab3@4192>   MOVE.l cont_pc,D1
00022A68 <AmiBlitz3.ab3@4193>   MOVE.l D0,cont_pc
00022A6E <AmiBlitz3.ab3@4194>   MOVE.l D1,cont_pc2
00022A72 <AmiBlitz3.ab3@4195>    BEQ.b 'skip
00022A78 <AmiBlitz3.ab3@4197>   TST.w dontwrite_nomemleft
00022A7C <AmiBlitz3.ab3@4198>    BNE.b 'skip
00022A7E <AmiBlitz3.ab3@4200>   MOVEA.l D1,A4
00022A80 <AmiBlitz3.ab3@4201>   SUB.l A4,D0
00022A84 <AmiBlitz3.ab3@4202>   MOVE.w D0,$6(A4)
00022A8A <AmiBlitz3.ab3@4203>   MOVE.l A4,lastcontlink
00022A90 <AmiBlitz3.ab3@4207>   TST.w ininclude
00022A96 <AmiBlitz3.ab3@4209>   TST.w makeexec
00022A9A <AmiBlitz3.ab3@4210>   BEQ 'l1
00022AA0 <AmiBlitz3.ab3@4211>   TST.w exdebug
00022AA4 <AmiBlitz3.ab3@4212>   BEQ 'noinc
00022AA8 <AmiBlitz3.ab3@4215>   MOVEM.l a0-a1/d2/d3,-(a7)                                ;write source for includes
00022AAE <AmiBlitz3.ab3@4216>   MOVE.l data1,d1
00022AB4 <AmiBlitz3.ab3@4217>   TST.b firsttime
00022AB8 <AmiBlitz3.ab3@4218>   BNE 'nofirst
00022AC0 <AmiBlitz3.ab3@4219>   MOVE.b #1,firsttime
00022AC6 <AmiBlitz3.ab3@4220>   MOVE.l #"DuCk",d1                                        ; to found from debugger the code start
00022ACC <AmiBlitz3.ab3@4221>   JSR writedatalong
00022AD2 <AmiBlitz3.ab3@4222>   MOVE.l #"AmiB",d1
00022AD8 <AmiBlitz3.ab3@4223>   JSR writedatalong
00022ADE <AmiBlitz3.ab3@4224>   MOVE.l destbufferstart,d1
00022AE4 <AmiBlitz3.ab3@4225>   JSR writedatalong
00022AEA <AmiBlitz3.ab3@4226>   TST.w dontwrite_nomemleft
00022AEE <AmiBlitz3.ab3@4227>   BNE 'nohunk
00022AF4 <AmiBlitz3.ab3@4228>   MOVE.l data1,d1
00022AF6 <AmiBlitz3.ab3@4229>   SUBQ.l #4,d1
00022AFC <AmiBlitz3.ab3@4230>   SUB.l destbufferstart,d1
00022AFE <AmiBlitz3.ab3@4231>   MOVE.l d1,d2
00022B04 <AmiBlitz3.ab3@4232>   JSR addhunkoffset
00022B0A <AmiBlitz3.ab3@4235>   MOVE.l destpointer,d2
00022B10 <AmiBlitz3.ab3@4236>   MOVE.l data1,d1
00022B16 <AmiBlitz3.ab3@4239>   MOVE.l destpointer,d2
00022B18 <AmiBlitz3.ab3@4240>   MOVE.l d1,d3
00022B1E <AmiBlitz3.ab3@4241>   SUB.l destbufferstart,d1
00022B24 <AmiBlitz3.ab3@4242>   OR.l #$80000000,d1
00022B2A <AmiBlitz3.ab3@4243>   JSR writelong
00022B30 <AmiBlitz3.ab3@4244>   TST.w inmacro
00022B34 <AmiBlitz3.ab3@4245>   BEQ 'sc1
00022B3A <AmiBlitz3.ab3@4246>   MOVE.l myline,a0
00022B3E <AmiBlitz3.ab3@4248>  BRA 'inc2
00022B44 <AmiBlitz3.ab3@4251>   TST.w ininclude
00022B48 <AmiBlitz3.ab3@4252>   BEQ 'inc
00022B4E <AmiBlitz3.ab3@4253>   MOVE.l includesourceline,a0
00022B52 <AmiBlitz3.ab3@4254>  BRA 'inc2
00022B58 <AmiBlitz3.ab3@4257>   MOVE.l sourceline,a0
00022B5C <AmiBlitz3.ab3@4258>   LEA 9(a0),a0
00022B5E <AmiBlitz3.ab3@4261>   MOVE.l d1,d2
00022B60 <AmiBlitz3.ab3@4262>   MOVE.l A5,D1
00022B62 <AmiBlitz3.ab3@4263>   SUB.l a0,D1
00022B68 <AmiBlitz3.ab3@4264>   ADD.l #9,d1
00022B6C <AmiBlitz3.ab3@4265>   BSR.w JUMP_writeword
00022B72 <AmiBlitz3.ab3@4266>   CMP.l #9,d1
00022B76 <AmiBlitz3.ab3@4267>   BEQ 'pos1
00022B7C <AmiBlitz3.ab3@4268>   TST.w dontwrite_nomemleft
00022B80 <AmiBlitz3.ab3@4269>   BNE 'nopad
00022B86 <AmiBlitz3.ab3@4270>   MOVE.l lastsourceline,d1
00022B8A <AmiBlitz3.ab3@4271>   MOVE.l d1,-6(a4)
00022B8E <AmiBlitz3.ab3@4272>  BRA 'nopad
00022B94 <AmiBlitz3.ab3@4275>   MOVE.l d2,lastsourceline
00022B9E <AmiBlitz3.ab3@4276>    MOVE.l destpointer,lastdestpointer
00022BA0 <AmiBlitz3.ab3@4277>    MOVEQ #0,d1
00022BA6 <AmiBlitz3.ab3@4278>   MOVE.l data1,d2
00022BAC <AmiBlitz3.ab3@4279>   SUB.l destbufferstart,d2
00022BB2 <AmiBlitz3.ab3@4280>   JSR writedatalong
00022BB8 <AmiBlitz3.ab3@4281>   TST.w dontwrite_nomemleft
00022BBC <AmiBlitz3.ab3@4282>   BNE 'no2
00022BC2 <AmiBlitz3.ab3@4283>   JSR addhunkoffset
00022BC8 <AmiBlitz3.ab3@4286>   MOVE.l data1,d2
00022BCE <AmiBlitz3.ab3@4287>   SUB.l destbufferstart,d2
00022BD4 <AmiBlitz3.ab3@4288>   JSR writedatalong
00022BDA <AmiBlitz3.ab3@4289>   TST.w dontwrite_nomemleft
00022BDE <AmiBlitz3.ab3@4290>   BNE 'no
00022BE4 <AmiBlitz3.ab3@4291>   JSR addhunkoffset
00022BEA <AmiBlitz3.ab3@4292>   MOVE.l lastwritedat,a1
00022BF0 <AmiBlitz3.ab3@4293>   CMP.l #0,a1
00022BF4 <AmiBlitz3.ab3@4294>   BEQ 'no
00022BF6 <AmiBlitz3.ab3@4295>   MOVE.l d3,(a1)
00022BFE <AmiBlitz3.ab3@4296>   MOVE.l prevwritedat,4(a1)
00022C08 <AmiBlitz3.ab3@4297>   MOVE.l lastwritedat,prevwritedat
00022C0E <AmiBlitz3.ab3@4300>   MOVE.l d3,lastwritedat
00022C10 <AmiBlitz3.ab3@4301>   MOVEQ #4,d1
00022C14 <AmiBlitz3.ab3@4302>   BSR pokedata1b
00022C16 <AmiBlitz3.ab3@4305>   MOVE.b (a0)+,d1
00022C1A <AmiBlitz3.ab3@4306>   BEQ 'done
00022C1E <AmiBlitz3.ab3@4307>   BSR pokedata1b
00022C22 <AmiBlitz3.ab3@4308>  BRA 'loop
00022C24 <AmiBlitz3.ab3@4311>   MOVEQ #0,d1
00022C28 <AmiBlitz3.ab3@4312>   BSR pokedata1b
00022C2E <AmiBlitz3.ab3@4313>   MOVE.l data1,d1
00022C32 <AmiBlitz3.ab3@4314>   BTST #0,d1
00022C36 <AmiBlitz3.ab3@4315>   BEQ 'nopad
00022C38 <AmiBlitz3.ab3@4316>   MOVEQ #0,d1
00022C3C <AmiBlitz3.ab3@4317>   BSR pokedata1b
00022C40 <AmiBlitz3.ab3@4320>   MOVEM.l (a7)+,a0-a1/d2/d3
00022C44 <AmiBlitz3.ab3@4321>  BRA 'noinc2
00022C4A <AmiBlitz3.ab3@4325>   MOVE.l sourceline,D1
00022C50 <AmiBlitz3.ab3@4326>   JSR writelong
00022C52 <AmiBlitz3.ab3@4327>   MOVE.l A5,D1
00022C58 <AmiBlitz3.ab3@4328>   SUB.l sourceline,D1
00022C5E <AmiBlitz3.ab3@4329>   JSR writeword
00022C60 <AmiBlitz3.ab3@4332>   MOVEQ.l #$00,D1
00022C66 <AmiBlitz3.ab3@4333>   JSR writeword          ;next cont goes here!                                  ; was: BSR.w writeword
00022C6A <AmiBlitz3.ab3@4335>   MOVEM.l (A7)+,D0-D1
00022C6C <AmiBlitz3.ab3@4338> RTS
00022C72 <AmiBlitz3.ab3@4342>   TST.b debugmode                                          ;extern debug
00022C76 <AmiBlitz3.ab3@4343>    BEQ.b 'rts
00022C7C <AmiBlitz3.ab3@4344>   TST.b dirmode
00022C80 <AmiBlitz3.ab3@4345>   BNE 'rts
00022C8A <AmiBlitz3.ab3@4353>   MOVE.w d_nomemleft,dontwrite_nomemleft
00022C94 <AmiBlitz3.ab3@4354>   MOVE.l d_bigpc,bigpc
00022C9E <AmiBlitz3.ab3@4355>   MOVE.l d_pc,destpointer
00022CA8 <AmiBlitz3.ab3@4356>   MOVE.l cont_pc2,cont_pc
00022CAA <AmiBlitz3.ab3@4359> RTS
00022CB4 <AmiBlitz3.ab3@4364>   MOVE.l #forthstack,forthsp
00022CBE <AmiBlitz3.ab3@4365>   MOVE.l #precstack,precsp
00022CC4 <AmiBlitz3.ab3@4366>   CLR.w regnum
00022CCA <AmiBlitz3.ab3@4367>   CLR.w nonew
00022CD0 <AmiBlitz3.ab3@4368>   CLR.w sbasegot
00022CDA <AmiBlitz3.ab3@4369>   MOVE.w varcodelen,oldvcodelen
00022CE0 <AmiBlitz3.ab3@4370>   CLR.w varcodelen
00022CE8 <AmiBlitz3.ab3@4371>   MOVE.w #-1,lasta6
00022CEA <AmiBlitz3.ab3@4372> RTS
00022CF0 <AmiBlitz3.ab3@4376>   TST.w linemode
00022CF4 <AmiBlitz3.ab3@4377>   BMI.b 'skip
00022CF8 <AmiBlitz3.ab3@4378>   BSR.w undodebug
00022CFE <AmiBlitz3.ab3@4379>   MOVE.w linemode,D1
00022D00 <AmiBlitz3.ab3@4380>   ADDQ.w #4,A7
00022D02 <AmiBlitz3.ab3@4381>   LSL.w #2,D1
00022D08 <AmiBlitz3.ab3@4382>   LEA modetable,A0
00022D0C <AmiBlitz3.ab3@4383>   MOVEA.l $0(A0,D1.W),A0
00022D10 <AmiBlitz3.ab3@4384>   BSR.w reget
00022D12 <AmiBlitz3.ab3@4385>  JMP (A0)                                                   ;jumptokenroutine
00022D14 <AmiBlitz3.ab3@4388> RTS
00022D1C <AmiBlitz3.ab3@4396>   MOVE.w #0,leaa0a0+2
00022D22 <AmiBlitz3.ab3@4397>   CLR.b nowdeclare
00022D28 <AmiBlitz3.ab3@4398>   CLR.b notypecheck
00022D2E <AmiBlitz3.ab3@4399>   CLR.l lasttoken
00022D34 <AmiBlitz3.ab3@4400>   CLR.b doimmediate
00022D3A <AmiBlitz3.ab3@4401>   CLR.w vartype
00022D40 <AmiBlitz3.ab3@4402>   CLR.w regnumfunc
00022D46 <AmiBlitz3.ab3@4403>   CLR.b optistring
00022D4C <AmiBlitz3.ab3@4404>   CLR.b iniffcommand
00022D52 <AmiBlitz3.ab3@4405>   CLR.w instringon  ; new
00022D58 <AmiBlitz3.ab3@4406>   CLR.b funccall
00022D5E <AmiBlitz3.ab3@4407>   CLR.l currentfunccall
00022D64 <AmiBlitz3.ab3@4408>   CLR.l leftsidetype
00022D6A <AmiBlitz3.ab3@4409>   CLR.l rightsidetype
00022D70 <AmiBlitz3.ab3@4410>   CLR.w leftsideflagmask
00022D76 <AmiBlitz3.ab3@4411>   CLR.w rightsideflagmask
00022D7C <AmiBlitz3.ab3@4412>   CLR.b peekaddrsize
00022D82 <AmiBlitz3.ab3@4413>   CLR.b blitzparloop
00022D88 <AmiBlitz3.ab3@4414>   CLR.b funcparloop
00022D8E <AmiBlitz3.ab3@4415>   CLR.w parnum           ;7.2014
00022D94 <AmiBlitz3.ab3@4416>   TST.b debugmode
00022D98 <AmiBlitz3.ab3@4417>    BEQ 'fpu
00022DA2 <AmiBlitz3.ab3@4423>   MOVE.b fpu,iee
00022DA6 <AmiBlitz3.ab3@4424>   MOVE.w stopit(PC),D0
00022DAA <AmiBlitz3.ab3@4425>   BNE 'chkstop_chkb
00022DAE <AmiBlitz3.ab3@4427>   BSR.w chkstop                                          ; message here
00022DB4 <AmiBlitz3.ab3@4431>   SUBQ.w #1,stopit
00022DB8 <AmiBlitz3.ab3@4435>   BSR.w findmacro                                          ;macro
00022DBE <AmiBlitz3.ab3@4497>   TST.b debugmode
00022DC2 <AmiBlitz3.ab3@4498>    BEQ.s 'l10
00022DC8 <AmiBlitz3.ab3@4499>   TST.b exdebug
00022DCC <AmiBlitz3.ab3@4500>   BEQ 'l10a
00022DCE <AmiBlitz3.ab3@4501>   MOVE.w (a5),d0
00022DD2 <AmiBlitz3.ab3@4502>   CMP.w #$8025,d0
00022DD6 <AmiBlitz3.ab3@4503>    BEQ 'l10
00022DDA <AmiBlitz3.ab3@4506>   BSR.w debugstuffa                                         ;insert runtimecode debugcode
00022DDE <AmiBlitz3.ab3@4510>   BSR.w get1bytemain                                       ;gettokenmain
00022DE2 <AmiBlitz3.ab3@4511>    BEQ.w undodebug
00022DE6 <AmiBlitz3.ab3@4512>   CMP.w #$002b,d0                                            ;check for + cast sign
00022DEA <AmiBlitz3.ab3@4513>     BNE 'lb2
00022DEE <AmiBlitz3.ab3@4514>     BSR.w get1bytemain
00022DF6 <AmiBlitz3.ab3@4515>     MOVE.b #1,notypecheck
00022E00 <AmiBlitz3.ab3@4526>   MOVE.l #forthstack,forthsp
00022E0A <AmiBlitz3.ab3@4527>   MOVE.l #precstack,precsp
00022E10 <AmiBlitz3.ab3@4528>   CLR.w regnum
00022E16 <AmiBlitz3.ab3@4529>   CLR.w nonew
00022E1C <AmiBlitz3.ab3@4530>   CLR.w sbasegot
00022E26 <AmiBlitz3.ab3@4531>   MOVE.w varcodelen,oldvcodelen
00022E2C <AmiBlitz3.ab3@4533>   CLR.w varcodelen
00022E34 <AmiBlitz3.ab3@4534>   MOVE.w #$FFFF,lasta6
00022E38 <AmiBlitz3.ab3@4537>   BSR.w smode
00022E3A <AmiBlitz3.ab3@4540>   TST.w D0                 ; was behind cmp ... and befor handleascii in org source
00022E3E <AmiBlitz3.ab3@4541>   BMI.w get_tokencode      ; "
00022E42 <AmiBlitz3.ab3@4543>   CMP.w #$2E,D0            ;'.'
00022E46 <AmiBlitz3.ab3@4544>    BEQ.w handlemouse                                         ;shortlist
00022E4A <AmiBlitz3.ab3@4545>   CMP.w #"#",D0
00022E4E <AmiBlitz3.ab3@4546>    BEQ.w handleconst                                         ;constant found
00022E52 <AmiBlitz3.ab3@4547>   CMP.w #$27,D0            ;'''  ; was #loclabch
00022E56 <AmiBlitz3.ab3@4548>    BEQ.w handlelocal                                            ;local label
00022E5C <AmiBlitz3.ab3@4551>   MOVE.l A5,letstart
00022E62 <AmiBlitz3.ab3@4552>   JSR getparameter
00022E66 <AmiBlitz3.ab3@4553>   BSR.w reget
00022E6A <AmiBlitz3.ab3@4554>    BEQ.w handlelabel                                         ;label found
00022E6E <AmiBlitz3.ab3@4555>   CMP.w #$7B,D0         ;'{'
00022E72 <AmiBlitz3.ab3@4556>    BEQ.w handleproc
00022E74 <AmiBlitz3.ab3@4558>   TST.w d0
00022E78 <AmiBlitz3.ab3@4559>    BPL 'll1
00022E7E <AmiBlitz3.ab3@4560>   TST.b newsyntax
00022E82 <AmiBlitz3.ab3@4561>    BEQ 'll1
00022E88 <AmiBlitz3.ab3@4562>   LEA allowtab,a0
00022E8A <AmiBlitz3.ab3@4563>   MOVEQ #0,d1
00022E8C <AmiBlitz3.ab3@4564>   MOVE.b d0,d1
00022E90 <AmiBlitz3.ab3@4565>   TST.b 0(a0,d1.w)
00022E94 <AmiBlitz3.ab3@4566>    BNE 'll1
00022E96 <AmiBlitz3.ab3@4567>   SUBQ.l #2,a5
00022E9E <AmiBlitz3.ab3@4568>   MOVE.w #":",lastchar                                     ;no doublepoint
00022EA2 <AmiBlitz3.ab3@4569>  BRA handlelabel
00022EAA <AmiBlitz3.ab3@4572>   CMP.l #"equ ",-1(a5)
00022EAE <AmiBlitz3.ab3@4573>    BEQ 'll4
00022EB6 <AmiBlitz3.ab3@4574>   CMP.l #"EQU ",-1(a5)
00022EBA <AmiBlitz3.ab3@4575>    BNE 'll2
00022EBC <AmiBlitz3.ab3@4578>   ADDQ.l #2,a5
00022EC0 <AmiBlitz3.ab3@4579>   BSR.w findlabel2
00022EC4 <AmiBlitz3.ab3@4580>   BEQ.w 'lf1
00022EC8 <AmiBlitz3.ab3@4581>   BSR.w addlabelhash
00022ED0 <AmiBlitz3.ab3@4582>   MOVE.l #$1,$4(A2)
00022ED8 <AmiBlitz3.ab3@4585>   CMPI.l #$1,$4(A2)
00022EDC <AmiBlitz3.ab3@4586>    BNE.w illconerr
00022EE0 <AmiBlitz3.ab3@4587>   BSR get1bytemain
00022EE2 <AmiBlitz3.ab3@4588>   MOVE.l A2,-(A7)
00022EE4 <AmiBlitz3.ab3@4599>   SUBQ.l #1,a5
00022EE6 <AmiBlitz3.ab3@4602>   SUBQ.l #1,a5
00022EEC <AmiBlitz3.ab3@4603>   JSR evalconst2
00022EEE <AmiBlitz3.ab3@4604>   MOVEA.l (A7)+,A2
00022EF2 <AmiBlitz3.ab3@4605>   MOVE.l D3,$8(A2)
00022EF4 <AmiBlitz3.ab3@4606>   RTS
00022EF8 <AmiBlitz3.ab3@4607>   BSR get1bytemain
00022F00 <AmiBlitz3.ab3@4610>   CMP.l #"SET ",-1(a5)
00022F04 <AmiBlitz3.ab3@4611>   BNE 'll3
00022F08 <AmiBlitz3.ab3@4612>  BRA 'll4
00022F0E <AmiBlitz3.ab3@4616> JMP dolet2
00022F12 <AmiBlitz3.ab3@4620>   CMP.w #-$7FDE,D0    ; was #$8000+34,
00022F16 <AmiBlitz3.ab3@4621>   BEQ.w get_tokencode
00022F1A <AmiBlitz3.ab3@4622> BRA.w undodebug       ;!*!*!
00022F1E <AmiBlitz3.ab3@4626>   BSR.w undodebug    ;!***!
00022F22 <AmiBlitz3.ab3@4627>   BSR.w createlab
00022F26 <AmiBlitz3.ab3@4628> BRA.w handlelab2
00022F2A <AmiBlitz3.ab3@4632>   BSR.w get1bytemain
00022F2E <AmiBlitz3.ab3@4633>    BEQ.w handleeol     ;syntaxerr
00022F32 <AmiBlitz3.ab3@4634>   CMP.w #"'",D0        ; was #loclabch
00022F36 <AmiBlitz3.ab3@4635>    BEQ.w handlelocal
00022F3A <AmiBlitz3.ab3@4636>    BSR.w makename2
00022F3C <AmiBlitz3.ab3@4638>    TST.w d0
00022F40 <AmiBlitz3.ab3@4639>    BPL handlelabel
00022F42 <AmiBlitz3.ab3@4640>    SUBQ.l #2,a5
00022F4A <AmiBlitz3.ab3@4641>    MOVE.w #":",lastchar
00022F4E <AmiBlitz3.ab3@4642> BRA handlelabel                                              ;????
00022F52 <AmiBlitz3.ab3@4649>   BSR.w undodebug      ;!***!
00022F58 <AmiBlitz3.ab3@4651>   LEA ptr_parameterstore,A0
00022F5E <AmiBlitz3.ab3@4652>   LEA lastgloballabel,A1
00022F60 <AmiBlitz3.ab3@4655>   MOVE.b (A0)+,(A1)+
00022F64 <AmiBlitz3.ab3@4656>    BNE.w 'coplab
00022F68 <AmiBlitz3.ab3@4660>   BSR.w findlabel2
00022F6C <AmiBlitz3.ab3@4661>    BEQ.w 'found
00022F70 <AmiBlitz3.ab3@4663>    BSR.w addlabelhash
00022F74 <AmiBlitz3.ab3@4666>   CLR.l $4(A2)                ;no refs
00022F7C <AmiBlitz3.ab3@4667>   MOVE.l destpointer,$8(A2)   ;pc of label.
00022F84 <AmiBlitz3.ab3@4672>   MOVE.w procnum,$10(A2)
00022F86 <AmiBlitz3.ab3@4673>  RTS
00022F8A <AmiBlitz3.ab3@4676>   MOVE.l $4(A2),D0
00022F8E <AmiBlitz3.ab3@4677>   BTST #$0,D0
00022F92 <AmiBlitz3.ab3@4678>    BNE.w illlaberr
00022F98 <AmiBlitz3.ab3@4680>   TST.w pass
00022F9C <AmiBlitz3.ab3@4683>   MOVE.l $8(A2),D0
00022FA0 <AmiBlitz3.ab3@4684>    BNE.w duplaberr
00022FA8 <AmiBlitz3.ab3@4685>   MOVE.w procnum,$10(A2)
00022FAC <AmiBlitz3.ab3@4689>   MOVEA.l $4(A2),A3      ;start of refs list
00022FB2 <AmiBlitz3.ab3@4690>   MOVEA.l _execbase,A6
00022FB6 <AmiBlitz3.ab3@4693>   CMPA.w #$0,A3
00022FBA <AmiBlitz3.ab3@4694>    BEQ.w 'done
00022FBE <AmiBlitz3.ab3@4696>     MOVE.l $4(A2),D1
00022FC2 <AmiBlitz3.ab3@4697>     BTST #$0,D1
00022FC6 <AmiBlitz3.ab3@4698>     BNE.w illlaberr
00022FCA <AmiBlitz3.ab3@4700>   MOVE.w $8(A3),D1
00022FCE <AmiBlitz3.ab3@4701>   CMP.w $10(A2),D1
00022FD2 <AmiBlitz3.ab3@4702>    BEQ.w 'isok
00022FD8 <AmiBlitz3.ab3@4704>    TST.b newsyntax
00022FDC <AmiBlitz3.ab3@4705>    BEQ 'l1
00022FE0 <AmiBlitz3.ab3@4706>  BRA.w 'isok                                            ;label context out of range fix
00022FE8 <AmiBlitz3.ab3@4712>   MOVE.w $A(A3),linenumat+2                                ;move 10(a3),linenumat org source
00022FEC <AmiBlitz3.ab3@4713>  BRA.w referr
00022FF2 <AmiBlitz3.ab3@4716>   MOVE.w dontwrite_nomemleft,D1
00022FF6 <AmiBlitz3.ab3@4717>    BNE.w 'isaskip
00022FFA <AmiBlitz3.ab3@4718>   MOVEA.l $4(A3),A1
00023000 <AmiBlitz3.ab3@4719>   BTST #$0,$7(A3)
00023004 <AmiBlitz3.ab3@4720>    BEQ.w 'pcref
00023006 <AmiBlitz3.ab3@4724>   SUBQ.w #1,A1
0002300C <AmiBlitz3.ab3@4725>   MOVE.l data2,(A1)
00023010 <AmiBlitz3.ab3@4726>  BRA.w 'isaskip
00023016 <AmiBlitz3.ab3@4729>   MOVE.l destpointer,(A1)
00023018 <AmiBlitz3.ab3@4732>   MOVEA.l A3,A1
0002301A <AmiBlitz3.ab3@4733>   MOVEA.l (A3),A3
0002301E <AmiBlitz3.ab3@4734>   MOVE.l A3,$4(A2)     ;new first.
00023020 <AmiBlitz3.ab3@4735>   MOVEQ.l #$0C+2,D0    ; was #12
00023026 <AmiBlitz3.ab3@4738>   MOVE.l mempool,a0
0002302C <AmiBlitz3.ab3@4739>   MOVEA.l _execbase,A6
00023030 <AmiBlitz3.ab3@4740>   JSR _FreePooled(A6)
00023034 <AmiBlitz3.ab3@4742>  BRA.w 'floop
0002303E <AmiBlitz3.ab3@4748>    MOVE.l #forthstack,forthsp
00023048 <AmiBlitz3.ab3@4749>   MOVE.l #precstack,precsp
0002304C <AmiBlitz3.ab3@4751>    BSR.w getparameter2
00023050 <AmiBlitz3.ab3@4755>   BSR.w findlabel2
00023054 <AmiBlitz3.ab3@4756>    BEQ.w 'cfound
00023058 <AmiBlitz3.ab3@4757>    BSR.w addlabelhash
00023060 <AmiBlitz3.ab3@4758>   MOVE.l #$1,$4(A2)
00023064 <AmiBlitz3.ab3@4759>  BRA.w 'cn
0002306C <AmiBlitz3.ab3@4762>   CMPI.l #$1,$4(A2)
00023070 <AmiBlitz3.ab3@4763>    BNE.w illconerr
00023074 <AmiBlitz3.ab3@4774>   CMP.w #$3D,D0         ;'='
00023078 <AmiBlitz3.ab3@4775>   BEQ.w 'asscon
0002307A <AmiBlitz3.ab3@4776>  RTS
0002307C <AmiBlitz3.ab3@4779>   MOVE.l A2,-(A7)
00023082 <AmiBlitz3.ab3@4780>   JSR evalconst2
00023084 <AmiBlitz3.ab3@4781>   MOVEA.l (A7)+,A2
00023088 <AmiBlitz3.ab3@4782>   MOVE.l D3,$8(A2)                                         ;store constant
00023090 <AmiBlitz3.ab3@4784>   CMP.w #$0a,lastchar
00023094 <AmiBlitz3.ab3@4785>   BNE 'l1
0002309C <AmiBlitz3.ab3@4786>   MOVE.w #":",lastchar                                     ;hack to read wizard include files
0002309E <AmiBlitz3.ab3@4790> RTS
000230A2 <AmiBlitz3.ab3@4796>   BSR.w findproc                                           ;write statement call
000230A6 <AmiBlitz3.ab3@4798>   BEQ '_state
000230AC <AmiBlitz3.ab3@4799>   TST.l unusedfunc
000230B0 <AmiBlitz3.ab3@4801>   BEQ noprocerr          ; was bne
000230B6 <AmiBlitz3.ab3@4804>   JSR gotoendsource
000230BA <AmiBlitz3.ab3@4808>   TST.b $5(A2)
000230C0 <AmiBlitz3.ab3@4811>   MOVE.l a2,currentfunccall
000230C8 <AmiBlitz3.ab3@4812>   MOVE.b #1,funccall
000230CE <AmiBlitz3.ab3@4813>   MOVE.b #1,isfunc(a2)
000230D2 <AmiBlitz3.ab3@4815>   MOVE.l $E(A2),-(A7)         ;pc of proc.
000230D4 <AmiBlitz3.ab3@4816>   MOVEQ.l #$00,D0
000230D8 <AmiBlitz3.ab3@4817>   MOVE.b $4(A2),D0
000230DE <AmiBlitz3.ab3@4818>   MOVE.l d0,parnumtemp
000230E2 <AmiBlitz3.ab3@4819>   BEQ.w 'nopars
000230E6 <AmiBlitz3.ab3@4821>   TST.b $20(a2)                                            ;increase if morepar
000230EA <AmiBlitz3.ab3@4822>   BNE 'no0par
000230EC <AmiBlitz3.ab3@4823>   MOVE.l a5,a4
000230F0 <AmiBlitz3.ab3@4826>   CMP.b #$20,(a4)+
000230F4 <AmiBlitz3.ab3@4827>   BEQ 'l1
000230FA <AmiBlitz3.ab3@4828>   CMP.b #"}",-1(a4)
000230FE <AmiBlitz3.ab3@4829>   BNE  'no0par                                             ;statementcall pars
00023100 <AmiBlitz3.ab3@4830>   MOVEQ #0,d0
00023104 <AmiBlitz3.ab3@4834>   LEA $16(A2),A1            ;pointer to var desc list
00023106 <AmiBlitz3.ab3@4838>   MOVE.l d1,-(a7)
00023108 <AmiBlitz3.ab3@4839>   MOVE.b (a1),d2
0002310A <AmiBlitz3.ab3@4840>   MOVE.l d0,d1
0002310E <AmiBlitz3.ab3@4841>   CMP.w #4,d2
00023112 <AmiBlitz3.ab3@4842>   BNE 'l1b
00023118 <AmiBlitz3.ab3@4843>   ADD.l #$203c,d1
0002311E <AmiBlitz3.ab3@4844>   JSR writeword
00023124 <AmiBlitz3.ab3@4845>   MOVE.l #$ffff0000,d1
0002312A <AmiBlitz3.ab3@4846>   JSR writelong
0002312E <AmiBlitz3.ab3@4847>  BRA 'l2b
00023134 <AmiBlitz3.ab3@4850>   TST.b fpu
00023138 <AmiBlitz3.ab3@4851>   BNE 'l1c
0002313C <AmiBlitz3.ab3@4852>   CMP.w #5,d2
00023140 <AmiBlitz3.ab3@4853>   BNE 'l1c
00023146 <AmiBlitz3.ab3@4854>   ADD.l #$203c,d1
0002314C <AmiBlitz3.ab3@4855>   JSR writeword
00023152 <AmiBlitz3.ab3@4856>   MOVE.l #$800000c1,d1
00023158 <AmiBlitz3.ab3@4857>   JSR writelong
0002315C <AmiBlitz3.ab3@4858>  BRA 'l2b
00023162 <AmiBlitz3.ab3@4861>   ADD.l #$70ff,d1
00023168 <AmiBlitz3.ab3@4862>   JSR writeword
0002316E <AmiBlitz3.ab3@4863>   MOVE.l #$f23c5000,d1
00023170 <AmiBlitz3.ab3@4864>   MOVE.l d0,d2
00023172 <AmiBlitz3.ab3@4865>   ASR.l #2,d2
00023174 <AmiBlitz3.ab3@4866>   ADD.l d2,d1
0002317A <AmiBlitz3.ab3@4867>   JSR writelong
0002317E <AmiBlitz3.ab3@4868>   MOVE.w #$ffff,d1
00023184 <AmiBlitz3.ab3@4869>   JSR writeword
00023186 <AmiBlitz3.ab3@4872>   MOVE.l (a7)+,d1
00023188 <AmiBlitz3.ab3@4873>   ADDQ.l #1,a1
0002318E <AmiBlitz3.ab3@4874>   ADD.l #$0200,d0
00023194 <AmiBlitz3.ab3@4875>   CMP.l #$0e00,d0
00023198 <AmiBlitz3.ab3@4876>    BEQ syntaxerr
0002319A <AmiBlitz3.ab3@4877>   TST.b (a1)
0002319E <AmiBlitz3.ab3@4878>    BNE 'again
000231A2 <AmiBlitz3.ab3@4879>  BRA 'nopars
000231AC <AmiBlitz3.ab3@4882>   MOVE.w a2offset,a2offset2
000231B0 <AmiBlitz3.ab3@4883>   LEA $16(A2),A2
000231B6 <AmiBlitz3.ab3@4884>   MOVE.b funcparloop,-(a7)
000231BE <AmiBlitz3.ab3@4885>   MOVE.b #1,funcparloop
000231C4 <AmiBlitz3.ab3@4886>   MOVE.b blitzparloop,-(a7)
000231CA <AmiBlitz3.ab3@4887>   CLR.b blitzparloop
000231CE <AmiBlitz3.ab3@4889>   BSR.w fetchpees2
000231D4 <AmiBlitz3.ab3@4891>   MOVE.b (a7)+,blitzparloop
000231DA <AmiBlitz3.ab3@4892>   MOVE.b (a7)+,funcparloop
000231DE <AmiBlitz3.ab3@4894>  BRA.w 'nopars3
000231E2 <AmiBlitz3.ab3@4898>   BSR.w get1bytemain
000231E6 <AmiBlitz3.ab3@4901>   CMP.w #$7D,D0        ;'}'
000231EA <AmiBlitz3.ab3@4902>    BNE.w morepar_                                          ;syntax error morepar
000231F0 <AmiBlitz3.ab3@4903>    JSR chkstak
000231F2 <AmiBlitz3.ab3@4904>   MOVE.l (A7)+,D1
000231F8 <AmiBlitz3.ab3@4922>    JSR makefjsr
000231FE <AmiBlitz3.ab3@4945>   CLR.b funccall
00023202 <AmiBlitz3.ab3@4947> BRA.w get1bytemain
00023208 <AmiBlitz3.ab3@4954>   MOVE.l d0,lasttoken
0002320C <AmiBlitz3.ab3@4955>   CMP.w #$c09f,d0                                          ;hack to use getregd0 instead of getd0
00023210 <AmiBlitz3.ab3@4956>   BNE 'l2
00023214 <AmiBlitz3.ab3@4957>    MOVE.w #$dd05,d0
00023218 <AmiBlitz3.ab3@4960>   CMP.w #$c0a0,d0                                          ;hack to use getregd0 instead of getd0
0002321C <AmiBlitz3.ab3@4961>   BNE 'l3
00023220 <AmiBlitz3.ab3@4962>    MOVE.w #$dd06,d0
00023224 <AmiBlitz3.ab3@4966>   CMP.w #-$7FC4,D0               ; was #$8000+fnum,
00023228 <AmiBlitz3.ab3@4967>   BCS.w 'nono
0002322C <AmiBlitz3.ab3@4968>     CMP.w #-$7F4D,D0             ; was #$8000+tnum,
00023230 <AmiBlitz3.ab3@4969>     BCC.w 'nono
00023238 <AmiBlitz3.ab3@4971>       BTST #$7,assemblercheck    ; was optreq2ga3+13                            ;inline Assembler checking
0002323C <AmiBlitz3.ab3@4972>       BNE.b 'asmok
00023242 <AmiBlitz3.ab3@4974>         TST.b debugmode
00023246 <AmiBlitz3.ab3@4975>         BEQ.b 'l10
00023250 <AmiBlitz3.ab3@4980>           MOVE.w d_nomemleft,dontwrite_nomemleft
0002325A <AmiBlitz3.ab3@4981>           MOVE.l d_bigpc,bigpc
00023264 <AmiBlitz3.ab3@4982>           MOVE.l d_pc,destpointer
0002326E <AmiBlitz3.ab3@4983>           MOVE.l cont_pc2,cont_pc
00023272 <AmiBlitz3.ab3@4991>  BRA.w asmit   ;assemble the bastard
00023276 <AmiBlitz3.ab3@4998>   BCLR #$F,D0
00023278 <AmiBlitz3.ab3@4999>   MOVE.w D0,D1
0002327C <AmiBlitz3.ab3@5000>   ANDI.w #$7F00,D1
00023280 <AmiBlitz3.ab3@5001>   BNE.w handlelib
00023284 <AmiBlitz3.ab3@5003>     CMP.w #$B3,D0        ; was #tnum,                                  ;intern Instructions
00023288 <AmiBlitz3.ab3@5004>     BCS.w 'isokat
0002328C <AmiBlitz3.ab3@5006>       SUBI.w #$77,D0     ; was #tnum-fnum,
00023290 <AmiBlitz3.ab3@5007>       CMP.w #$4B,D0      ; was #fnum+15
00023294 <AmiBlitz3.ab3@5008>       BEQ.w 'noerr
00023298 <AmiBlitz3.ab3@5009>         CMP.w #$46,D0    ; was #fnum+10,
0002329C <AmiBlitz3.ab3@5010>         BEQ.w 'noerr
000232A0 <AmiBlitz3.ab3@5011>  BRA.w 'doerr                                            ; change tokennum
000232A4 <AmiBlitz3.ab3@5014>     CMP.w #$38,D0        ;check for things which don't want
000232A8 <AmiBlitz3.ab3@5015>      BEQ.w 'noerr        ;error checking...
000232AC <AmiBlitz3.ab3@5016>     CMP.w #$39,D0
000232B0 <AmiBlitz3.ab3@5017>      BEQ.w 'noerr
000232B4 <AmiBlitz3.ab3@5018>     CMP.w #$D,D0
000232B8 <AmiBlitz3.ab3@5019>      BEQ.w 'noerr
000232BC <AmiBlitz3.ab3@5020>     CMP.w #$12,D0
000232C0 <AmiBlitz3.ab3@5021>      BEQ.w 'noerr
000232C4 <AmiBlitz3.ab3@5022>     CMP.w #$13,D0
000232C8 <AmiBlitz3.ab3@5023>      BEQ.w 'noerr
000232CC <AmiBlitz3.ab3@5024>     CMP.w #$1A,D0
000232D0 <AmiBlitz3.ab3@5025>      BEQ.w 'noerr
000232D4 <AmiBlitz3.ab3@5026>     CMP.w #$2A,D0
000232D8 <AmiBlitz3.ab3@5027>      BHI.w 'doerr
000232DC <AmiBlitz3.ab3@5028>     CMP.w #$23,D0
000232E0 <AmiBlitz3.ab3@5029>      BCS.b 'doerr
000232E4 <AmiBlitz3.ab3@5032>   BSR.w undodebug
000232E6 <AmiBlitz3.ab3@5035>   SUBQ.w #1,D0
000232E8 <AmiBlitz3.ab3@5036>   LSL.w #2,D0
000232EE <AmiBlitz3.ab3@5046>   LEA instructionbase,A0
000232F2 <AmiBlitz3.ab3@5047>   MOVEA.l $0(A0,D0.W),A0
000232F4 <AmiBlitz3.ab3@5048>   MOVE.l A0,-(A7)
000232F8 <AmiBlitz3.ab3@5049> BRA.w get1bytemain
000232FA <AmiBlitz3.ab3@5055>   MOVE.w D0,D1
000232FE <AmiBlitz3.ab3@5056>    BSR.w searchinstr    ;toke stuff in a3
00023304 <AmiBlitz3.ab3@5058>    TST.b newmode
00023308 <AmiBlitz3.ab3@5059>    BNE compile_term
0002330E <AmiBlitz3.ab3@5061>   BTST #$2,$1(A3)                                          ;a3 = pointer to instr ;toke stuff in a3
00023312 <AmiBlitz3.ab3@5062>    BNE.w stamigalib
00023318 <AmiBlitz3.ab3@5063>   BTST #$0,$1(A3)
0002331C <AmiBlitz3.ab3@5064>    BEQ.w needreturn_                                       ;syntax err need return   ;check it's a statement
00023320 <AmiBlitz3.ab3@5066>    BSR.w sizespec                                         ;does it need a size specifier?
00023324 <AmiBlitz3.ab3@5067>    BSR.w countpees
0002332A <AmiBlitz3.ab3@5073>   MOVE.w numreps,-(A7)
00023330 <AmiBlitz3.ab3@5074>   MOVE.w userp,-(A7)
00023336 <AmiBlitz3.ab3@5075>   MOVE.w a2offset,-(A7)
00023338 <AmiBlitz3.ab3@5076>   MOVE.l A2,-(A7)                                          ;recurs.
00023342 <AmiBlitz3.ab3@5077>   MOVE.w convsize,userp
00023346 <AmiBlitz3.ab3@5078>   LEA $6(A3),A1
00023348 <AmiBlitz3.ab3@5083>    MOVE.w (A1),D2
0002334C <AmiBlitz3.ab3@5084>    BMI.w 'SERR                                              ;statement syntax error
00023350 <AmiBlitz3.ab3@5085>   ANDI.w #$FF,D2
00023352 <AmiBlitz3.ab3@5086>   CMP.w D2,D1
00023356 <AmiBlitz3.ab3@5087>    BEQ.w 'found
0002335A <AmiBlitz3.ab3@5088>    BCS.w 'next
0002335C <AmiBlitz3.ab3@5089>   MOVE.b (A1),D3
00023360 <AmiBlitz3.ab3@5090>   ANDI.w #$7,D3
00023364 <AmiBlitz3.ab3@5091>    BEQ.w 'next
00023366 <AmiBlitz3.ab3@5092>   MOVE.w D2,D4
00023368 <AmiBlitz3.ab3@5093>   SUB.w D3,D4
0002336A <AmiBlitz3.ab3@5094>   MOVEQ.l #$00,D5
0002336C <AmiBlitz3.ab3@5095>   MOVE.w D1,D5
0002336E <AmiBlitz3.ab3@5096>   SUB.w D4,D5
00023370 <AmiBlitz3.ab3@5097>   DIVU D3,D5
00023372 <AmiBlitz3.ab3@5098>   SWAP D5
00023374 <AmiBlitz3.ab3@5099>   TST.w D5
00023378 <AmiBlitz3.ab3@5100>    BEQ.w 'found
0002337A <AmiBlitz3.ab3@5103>   ADDQ.w #2,A1
0002337C <AmiBlitz3.ab3@5104>   ADDA.w D2,A1
00023380 <AmiBlitz3.ab3@5105>    BSR.w aligna1
00023384 <AmiBlitz3.ab3@5106>    BSR.w skiplibreg
00023388 <AmiBlitz3.ab3@5107>   LEA $C(A1),A1
0002338C <AmiBlitz3.ab3@5108>  BRA.w 'loop
0002338E <AmiBlitz3.ab3@5112>   MOVE.w (a3),d2
00023392 <AmiBlitz3.ab3@5113>   BTST #1,d2
00023396 <AmiBlitz3.ab3@5114>   BEQ statement_
0002339A <AmiBlitz3.ab3@5115>   CMP.w #1,d1
0002339E <AmiBlitz3.ab3@5116>   BEQ statement_
000233A2 <AmiBlitz3.ab3@5119>   CMP.b #$20,(a5)+
000233A6 <AmiBlitz3.ab3@5120>   BEQ 'l2
000233AC <AmiBlitz3.ab3@5121>   CMP.b #"(",-2(a5)
000233B0 <AmiBlitz3.ab3@5122>   BNE 'l1
000233B4 <AmiBlitz3.ab3@5123>  BRA parameter_
000233B8 <AmiBlitz3.ab3@5126>  BRA inbrackets_
000233BA <AmiBlitz3.ab3@5130>   MOVE.b (A1),D2
000233BC <AmiBlitz3.ab3@5131>   LSL.w #8,D2
000233BE <AmiBlitz3.ab3@5132>   OR.w D2,D1
000233C0 <AmiBlitz3.ab3@5133>   MOVE.l A1,-(A7)
000233C6 <AmiBlitz3.ab3@5134>   CLR.w a2offset
000233C8 <AmiBlitz3.ab3@5135>   TST.w D1
000233CC <AmiBlitz3.ab3@5136>    BEQ.w 'nopees
000233D0 <AmiBlitz3.ab3@5137>   LEA $2(A1),A2
000233D6 <AmiBlitz3.ab3@5139>   MOVE.l lasttoken,-(a7)
000233DC <AmiBlitz3.ab3@5140>   CLR.l lasttoken
000233E0 <AmiBlitz3.ab3@5142>   BSR.w fetchlibps
000233E6 <AmiBlitz3.ab3@5144>   MOVE.l (a7)+,lasttoken
000233EA <AmiBlitz3.ab3@5146>  BRA.w 'skip
000233EE <AmiBlitz3.ab3@5149>   BSR.w get1bytemain
000233F0 <AmiBlitz3.ab3@5152>   MOVEA.l (A7)+,A1
000233F2 <AmiBlitz3.ab3@5153>   MOVEA.l (A7)+,A2
000233F8 <AmiBlitz3.ab3@5154>   MOVE.w a2offset,D1
000233FC <AmiBlitz3.ab3@5155>    BEQ.w 'skip2
00023402 <AmiBlitz3.ab3@5156>   MOVE.w D1,preplibst+2
00023408 <AmiBlitz3.ab3@5157>   MOVE.l preplibst,D1
0002340E <AmiBlitz3.ab3@5158>    JSR writelong                                           ;write array offset stack correct
00023418 <AmiBlitz3.ab3@5159>   MOVE.w numreps,movenumrep+2
0002341C <AmiBlitz3.ab3@5160>    BEQ.w 'skip2
00023422 <AmiBlitz3.ab3@5161>   MOVE.l movenumrep,D1
00023428 <AmiBlitz3.ab3@5162>    JSR writelong
0002342E <AmiBlitz3.ab3@5166>   JSR userjsr
00023434 <AmiBlitz3.ab3@5171>   MOVE.w a2offset,D1
00023438 <AmiBlitz3.ab3@5172>    BEQ.w 'skip3
0002343C <AmiBlitz3.ab3@5173>   CMP.w #$8,D1
00023440 <AmiBlitz3.ab3@5174>    BHI.w 'skip4
00023444 <AmiBlitz3.ab3@5175>   ANDI.w #$7,D1
00023446 <AmiBlitz3.ab3@5176>   LSL.w #8,D1
00023448 <AmiBlitz3.ab3@5177>   LSL.w #1,D1
0002344C <AmiBlitz3.ab3@5178>   ORI.w #$504F,D1       ;addq #x,a7
00023452 <AmiBlitz3.ab3@5179>   JSR writeword
00023456 <AmiBlitz3.ab3@5180>  BRA.w 'skip3
0002345C <AmiBlitz3.ab3@5183>   MOVE.w D1,fixlibst+2
00023462 <AmiBlitz3.ab3@5184>   MOVE.l fixlibst,D1
00023468 <AmiBlitz3.ab3@5185>   JSR writelong
0002346E <AmiBlitz3.ab3@5188>   MOVE.w (A7)+,a2offset
00023474 <AmiBlitz3.ab3@5189>   MOVE.w (A7)+,userp
0002347A <AmiBlitz3.ab3@5190>   MOVE.w (A7)+,numreps
0002347E <AmiBlitz3.ab3@5191> BRA.w reget
00023482 <AmiBlitz3.ab3@5195>   MOVEM.l A2-A3,-(A7)
00023488 <AmiBlitz3.ab3@5197>   CLR.b doublepeek
0002348E <AmiBlitz3.ab3@5199>   MOVE.l A5,lastsourcepos
00023492 <AmiBlitz3.ab3@5200>    BSR.w getchar          ;','
00023496 <AmiBlitz3.ab3@5201>   CMP.w #$2E,D0
0002349A <AmiBlitz3.ab3@5202>    BEQ.w 'ok1
000234A0 <AmiBlitz3.ab3@5203>   MOVEA.l defaulttype,A2
000234A4 <AmiBlitz3.ab3@5204>   CMP.w #$24,D0           ;'$'
000234A8 <AmiBlitz3.ab3@5205>    BNE.w 'none
000234AA <AmiBlitz3.ab3@5206>   MOVEQ.l #$07,D1
000234AE <AmiBlitz3.ab3@5207>  BRA.w 'skip
000234B2 <AmiBlitz3.ab3@5210>   BSR.w getparameter2
000234B6 <AmiBlitz3.ab3@5211>   BEQ.w syntaxerr
000234BC <AmiBlitz3.ab3@5212>   LEA newtypebase,A2
000234C0 <AmiBlitz3.ab3@5213>   BSR.w findtype
000234C4 <AmiBlitz3.ab3@5214>   BNE.w notypeerr
000234CE <AmiBlitz3.ab3@5219>   MOVE.w oldqflag,instringon
000234D4 <AmiBlitz3.ab3@5220>   MOVEA.l lastsourcepos,A5
000234D8 <AmiBlitz3.ab3@5228>   MOVE.w $6(A2),D1
000234DE <AmiBlitz3.ab3@5230>   CMP.w #8,8(a2)
000234E2 <AmiBlitz3.ab3@5231>   BNE 'l1
000234EA <AmiBlitz3.ab3@5232>   MOVE.b #1,doublepeek
000234F0 <AmiBlitz3.ab3@5237>   MOVE.w D1,convsize
000234F4 <AmiBlitz3.ab3@5238>   MOVEM.l (A7)+,A2-A3
000234F6 <AmiBlitz3.ab3@5239> RTS
000234FC <AmiBlitz3.ab3@5244>   BTST #$3,$1(A3)
00023500 <AmiBlitz3.ab3@5245>   BEQ.w 'skip
00023504 <AmiBlitz3.ab3@5246>   BSR.w sizespec2                                         ;read peek/poke size
00023508 <AmiBlitz3.ab3@5248>   ORI.w #$7000,D1
0002350E <AmiBlitz3.ab3@5249>   JSR writeword
00023514 <AmiBlitz3.ab3@5250>   ADDQ.w #1,regnum
00023516 <AmiBlitz3.ab3@5253> RTS
00023518 <AmiBlitz3.ab3@5260>             Dc.b $10,$12                                   ;MOVE.B  (A2),D0
0002351A <AmiBlitz3.ab3@5261>             Dc.b $14,$91                                   ;MOVE.B  (A1),(A2)
0002351C <AmiBlitz3.ab3@5262>             Dc.b $12,$80                                   ;MOVE.B  D0,(A1)
0002351E <AmiBlitz3.ab3@5266> swapw:      Dc.b $30,$12                                   ;MOVE.W  (A2),D0
00023520 <AmiBlitz3.ab3@5267>             Dc.b $34,$91                                   ;MOVE.W  (A1),(A2)
00023522 <AmiBlitz3.ab3@5268>             Dc.b $32,$80                                   ;MOVE.W  D0,(A1)
00023524 <AmiBlitz3.ab3@5272> swapl:      Dc.b $20,$12                                   ;MOVE.L  (A2),D0
00023526 <AmiBlitz3.ab3@5273>             Dc.b $24,$91                                   ;MOVE.L  (A1),(A2)
00023528 <AmiBlitz3.ab3@5274>             Dc.b $22,$80                                   ;MOVE.L  D0,(A1)
0002352A <AmiBlitz3.ab3@5278> pulla1:     Dc.b $22,$5F                                   ;MOVEA.L (A7)+,A1
0002352C <AmiBlitz3.ab3@5281> srctype:    Ds.w 1
00023530 <AmiBlitz3.ab3@5286>   BSR.w excget
00023534 <AmiBlitz3.ab3@5287>   CMP.w #$2C,D0     ;','
00023538 <AmiBlitz3.ab3@5288>    BNE.w syntaxerr
0002353E <AmiBlitz3.ab3@5289>   MOVE.b D2,srctype
00023544 <AmiBlitz3.ab3@5290>   MOVE.w pusha2,D1
0002354A <AmiBlitz3.ab3@5291>   JSR writeword
0002354E <AmiBlitz3.ab3@5292>   BSR.w get1bytemain
00023552 <AmiBlitz3.ab3@5293>   BSR.w excget
00023558 <AmiBlitz3.ab3@5294>   CMP.b srctype,D2
0002355C <AmiBlitz3.ab3@5295>    BNE.w excerr2
00023562 <AmiBlitz3.ab3@5296>   MOVE.w pulla1,D1
00023568 <AmiBlitz3.ab3@5297>    JSR writeword
0002356C <AmiBlitz3.ab3@5299>   CMP.b #$2,D2
00023570 <AmiBlitz3.ab3@5300>    BCS.w 'byte
00023574 <AmiBlitz3.ab3@5301>    BEQ.w 'word
00023578 <AmiBlitz3.ab3@5302>   LEA swapl(PC),A0
0002357C <AmiBlitz3.ab3@5303>   LEA swaplf(PC),A1
00023582 <AmiBlitz3.ab3@5304>  JMP pokecode
00023586 <AmiBlitz3.ab3@5307>   LEA swapw(PC),A0
0002358A <AmiBlitz3.ab3@5308>   LEA swapwf(PC),A1
00023590 <AmiBlitz3.ab3@5309>  JMP pokecode
00023594 <AmiBlitz3.ab3@5312>   LEA swapb(PC),A0
00023598 <AmiBlitz3.ab3@5313>   LEA swapbf(PC),A1
0002359E <AmiBlitz3.ab3@5314> JMP pokecode
000235A4 <AmiBlitz3.ab3@5318>   JSR getparameter
000235A8 <AmiBlitz3.ab3@5319>   BSR.w fetchvars
000235AE <AmiBlitz3.ab3@5320>   JSR calcvar
000235B2 <AmiBlitz3.ab3@5321>   BTST #$E,D2
000235B6 <AmiBlitz3.ab3@5322>    BEQ.w 'skip
000235BA <AmiBlitz3.ab3@5323>   MOVE.b #$4,D2
000235BC <AmiBlitz3.ab3@5326>   TST.b D2
000235C0 <AmiBlitz3.ab3@5327>    BEQ.w excerr
000235C4 <AmiBlitz3.ab3@5328>   BTST #$F,D2
000235C8 <AmiBlitz3.ab3@5329>    BNE.w 'done
000235CE <AmiBlitz3.ab3@5330>   MOVE.w leaamp,D1
000235D4 <AmiBlitz3.ab3@5331>    JSR pokewda5s
000235D6 <AmiBlitz3.ab3@5332>   MOVE.w D3,D1
000235DC <AmiBlitz3.ab3@5333>  JMP writeword
000235DE <AmiBlitz3.ab3@5336> RTS
000235E4 <AmiBlitz3.ab3@5345>   MOVE.l mempool,a0
000235EA <AmiBlitz3.ab3@5346>   MOVEA.l _execbase,A6
000235EE <AmiBlitz3.ab3@5347> JMP _AllocPooled(a6)
000235F2 <AmiBlitz3.ab3@5352>   MOVE.w #$BF00,D1       ; was #wbstart
000235F8 <AmiBlitz3.ab3@5353> JMP Atokejsr
000235FC <AmiBlitz3.ab3@5357>   CMP.w #-$7FFA,D0       ; was  #$8006
00023600 <AmiBlitz3.ab3@5358>    BEQ.w popreturn
00023604 <AmiBlitz3.ab3@5359>   CMP.w #-$7FEA,D0       ; was  #$8000+22,
00023608 <AmiBlitz3.ab3@5360>    BEQ.w popnext2
0002360C <AmiBlitz3.ab3@5361>   CMP.w #-$7FF2,D0       ; was  #$8000+14,
00023610 <AmiBlitz3.ab3@5362>    BEQ.w popselect2
00023614 <AmiBlitz3.ab3@5364>   CMP.w #-$7FF5,D0       ; was  #$8000+11
00023618 <AmiBlitz3.ab3@5365>    BEQ.w get1bytemain
0002361C <AmiBlitz3.ab3@5366>   CMP.w #-$7FF4,D0       ; was  #$8000+12
00023620 <AmiBlitz3.ab3@5367>    BEQ.w get1bytemain
00023624 <AmiBlitz3.ab3@5368>   CMP.w #-$7FEC,D0       ; was  #$8000+20
00023628 <AmiBlitz3.ab3@5369>    BEQ.w get1bytemain
0002362C <AmiBlitz3.ab3@5370>   CMP.w #-$7F45,D0       ; was  #$8000+tnum+8
00023630 <AmiBlitz3.ab3@5371>    BEQ.w get1bytemain
00023634 <AmiBlitz3.ab3@5372> BRA.w syntaxerr
0002363A <AmiBlitz3.ab3@5376>   TST.b debugmode
0002363E <AmiBlitz3.ab3@5377>    BEQ.w 'norerr
00023642 <AmiBlitz3.ab3@5378>   LEA 'rfix(PC),A0
00023646 <AmiBlitz3.ab3@5379>   LEA 'rfixf(PC),A1
0002364C <AmiBlitz3.ab3@5380>    JSR pokecode
00023650 <AmiBlitz3.ab3@5381>   MOVE.w #$C305,D1
00023656 <AmiBlitz3.ab3@5382>    JSR Atokejsr
0002365A <AmiBlitz3.ab3@5383>   MOVE.w 'rfix2(PC),D1
00023660 <AmiBlitz3.ab3@5385>    JSR writeword
00023664 <AmiBlitz3.ab3@5386>  BRA.w get1bytemain
0002366A <AmiBlitz3.ab3@5389>   CMPI.w #$6753,$4(A7)                                     ;#"gS",4(A7)
0002366E <AmiBlitz3.ab3@5390>   BEQ.w 'rfix2
00023674 <AmiBlitz3.ab3@5393>   JSR $20000                                               ;reass
00023676 <AmiBlitz3.ab3@5396>   ADDQ.w #6,A7
0002367A <AmiBlitz3.ab3@5399>   MOVE.w 'sfix(PC),D1
00023680 <AmiBlitz3.ab3@5400>   JSR writeword
00023684 <AmiBlitz3.ab3@5401> BRA.w get1bytemain
00023686 <AmiBlitz3.ab3@5406>   Dc.b $58,$4F                                             ;ADDQ.W  #4,A7
0002368C <AmiBlitz3.ab3@5411>   MOVE.l firstfor,D0
00023690 <AmiBlitz3.ab3@5412>    BEQ.w noforerr
00023692 <AmiBlitz3.ab3@5413>   MOVEA.l D0,A2
00023696 <AmiBlitz3.ab3@5414>    BSR.w get1bytemain
0002369A <AmiBlitz3.ab3@5415>   BSR.w popnext
000236A0 <AmiBlitz3.ab3@5418>   TST.b debugmode
000236A4 <AmiBlitz3.ab3@5419>    BEQ.w 'ner
000236AA <AmiBlitz3.ab3@5420>   MOVE.l nextfixw2,D1
000236B0 <AmiBlitz3.ab3@5421>   CMPI.w #$3,$C(A2)
000236B4 <AmiBlitz3.ab3@5422>    BCS.w 'writelong2
000236BA <AmiBlitz3.ab3@5423>   MOVE.l nextfixl2,D1
000236C0 <AmiBlitz3.ab3@5426>   JMP  writelong
000236C6 <AmiBlitz3.ab3@5429>   CMPI.w #$3,$C(A2)
000236CA <AmiBlitz3.ab3@5430>    BCS.w 'skip2
000236D0 <AmiBlitz3.ab3@5431>   MOVE.l nextfixl,D1
000236D6 <AmiBlitz3.ab3@5432>   JMP writelong
000236DC <AmiBlitz3.ab3@5435>   MOVE.w nextfixw,D1
000236E2 <AmiBlitz3.ab3@5436> JMP writeword
000236E6 <AmiBlitz3.ab3@5441>   MOVE.w $C(A2),D0
000236EC <AmiBlitz3.ab3@5442>   TST.b debugmode
000236F0 <AmiBlitz3.ab3@5443>    BEQ.w 'norunerr
000236F4 <AmiBlitz3.ab3@5444>   MOVE.w #$C306,D1
000236F8 <AmiBlitz3.ab3@5445>   CMP.w #$3,D0
000236FC <AmiBlitz3.ab3@5446>    BCS.w 'oktc
000236FE <AmiBlitz3.ab3@5447>   ADDQ.w #1,D1
00023700 <AmiBlitz3.ab3@5450>   MOVE.l A2,-(A7)
00023706 <AmiBlitz3.ab3@5451>   JSR Atokejsr
00023708 <AmiBlitz3.ab3@5452>   MOVEA.l (A7)+,A2
0002370A <AmiBlitz3.ab3@5455> RTS
00023710 <AmiBlitz3.ab3@5459>   MOVE.l firstsel,D0
00023714 <AmiBlitz3.ab3@5460>    BEQ.w eselerr
00023716 <AmiBlitz3.ab3@5461>   MOVEA.l D0,A2
0002371A <AmiBlitz3.ab3@5462>    BSR.w get1bytemain
0002371E <AmiBlitz3.ab3@5465>   MOVE.w $C(A2),D2
00023724 <AmiBlitz3.ab3@5466>   TST.b debugmode
00023728 <AmiBlitz3.ab3@5467>    BEQ.w 'norerr
0002372C <AmiBlitz3.ab3@5468>   MOVE.w #$C313,D1
00023730 <AmiBlitz3.ab3@5469>   CMP.w #$3,D2
00023734 <AmiBlitz3.ab3@5470>    BCS.w 'chkit
00023736 <AmiBlitz3.ab3@5471>   ADDQ.w #1,D1
0002373C <AmiBlitz3.ab3@5474>   JSR Atokejsr                                             ;make sure next thing on stack
0002373E <AmiBlitz3.ab3@5478>   MOVEQ.l #$02,D1
00023742 <AmiBlitz3.ab3@5479>   CMP.w #$3,D2
00023746 <AmiBlitz3.ab3@5480>    BCS.w 'doit
00023748 <AmiBlitz3.ab3@5481>   MOVEQ.l #$04,D1
0002374C <AmiBlitz3.ab3@5482>   CMP.w #$7,D2
00023750 <AmiBlitz3.ab3@5483>    BCS.w 'doit
00023756 <AmiBlitz3.ab3@5484>   LEA endselstr,A0
0002375C <AmiBlitz3.ab3@5485>   LEA endselstrf,A1
00023762 <AmiBlitz3.ab3@5486>   TST.b debugmode
00023766 <AmiBlitz3.ab3@5487>    BEQ.w 'norerr3
0002376C <AmiBlitz3.ab3@5488>   LEA endselstrf2,A1
00023772 <AmiBlitz3.ab3@5491>   JSR pokecode
00023776 <AmiBlitz3.ab3@5492>   MOVE.w #$C003,D1                                         ;global freemem
0002377C <AmiBlitz3.ab3@5493>  JMP Atokejsr
00023782 <AmiBlitz3.ab3@5496>   TST.b debugmode
00023786 <AmiBlitz3.ab3@5497>    BEQ.w 'norerr2
00023788 <AmiBlitz3.ab3@5498>   ADDQ.w #2,D1                                             ;for the "sE"
0002378A <AmiBlitz3.ab3@5501>   LSL.w #8,D1
0002378C <AmiBlitz3.ab3@5502>   LSL.w #1,D1
00023792 <AmiBlitz3.ab3@5503>   OR.w endsel,D1
00023798 <AmiBlitz3.ab3@5504> JMP writeword
0002379C <AmiBlitz3.ab3@5507> firstrep:    Ds.l 1
000237A0 <AmiBlitz3.ab3@5508> replineat:   Ds.l 1
000237A6 <AmiBlitz3.ab3@5517>   CLR.l fp0addr
000237B0 <AmiBlitz3.ab3@5518>   MOVE.l linenumat,replineat
000237B2 <AmiBlitz3.ab3@5519>   MOVEQ.l #$08,D0
000237B8 <AmiBlitz3.ab3@5520>   MOVEA.l _execbase,A6
000237BE <AmiBlitz3.ab3@5521>   MOVE.l mempool,a0
000237C2 <AmiBlitz3.ab3@5522>   JSR _AllocPooled(a6)
000237C4 <AmiBlitz3.ab3@5524>   MOVEA.l D0,A0
000237C8 <AmiBlitz3.ab3@5525>   MOVE.l firstrep(PC),(A0)
000237CE <AmiBlitz3.ab3@5526>   MOVE.l A0,firstrep
000237D6 <AmiBlitz3.ab3@5527>   MOVE.l destpointer,$4(A0)
000237D8 <AmiBlitz3.ab3@5528> RTS
000237DE <AmiBlitz3.ab3@5531> str_temp:  Ds.w 3                                            ;infochk  ds.b 6 org source
000237E2 <AmiBlitz3.ab3@5534>   LEA str_temp(PC),A1
000237E4 <AmiBlitz3.ab3@5535>   CLR.w (A1)
000237E8 <AmiBlitz3.ab3@5536>   CLR.l $2(A1)
000237EA <AmiBlitz3.ab3@5539>   MOVEQ.l #$04,D0
000237EE <AmiBlitz3.ab3@5542>     MOVE.b $1(A1),(A1)+
000237F2 <AmiBlitz3.ab3@5543>   DBF D0,'loop
000237F6 <AmiBlitz3.ab3@5548>   LEA str_temp(PC),A1
000237F8 <AmiBlitz3.ab3@5549>   MOVE.b (A0),D0
000237FC <AmiBlitz3.ab3@5550>   ORI.b #$20,D0
00023800 <AmiBlitz3.ab3@5551>   MOVE.b D0,$5(A1)
00023802 <AmiBlitz3.ab3@5552>   TST.b (A0)+
00023806 <AmiBlitz3.ab3@5553>    BNE.w 'loop2
0002380A <AmiBlitz3.ab3@5554>   CMPI.w #$2E69,(A1)+                                      ;".i"
0002380E <AmiBlitz3.ab3@5555>    BNE.w 'no
00023814 <AmiBlitz3.ab3@5556>   CMPI.l #$6E666F20,(A1)                                   ;"nfo "
00023816 <AmiBlitz3.ab3@5559> RTS
0002381A <AmiBlitz3.ab3@5563>   BPL.w 'evaltoke
0002381C <AmiBlitz3.ab3@5564>   MOVE.w D0,D1
00023820 <AmiBlitz3.ab3@5565>   ANDI.w #$7F80,D1
00023824 <AmiBlitz3.ab3@5566>    BEQ.w tokeerr
00023828 <AmiBlitz3.ab3@5567>   BCLR #$F,D0
0002382A <AmiBlitz3.ab3@5568>   MOVE.w D0,D4                                             ;got toke number
0002382E <AmiBlitz3.ab3@5569>   BSR.w get1bytemain
00023832 <AmiBlitz3.ab3@5570>  BRA.w 'gotnum
00023838 <AmiBlitz3.ab3@5573>   JSR evalconst
0002383E <AmiBlitz3.ab3@5574>   CMP.l #MaxWord,D3
00023842 <AmiBlitz3.ab3@5575>    BHI.w tokeerr
00023844 <AmiBlitz3.ab3@5576>   TST.w D6
00023848 <AmiBlitz3.ab3@5577>    BNE.w tokeerr
0002384A <AmiBlitz3.ab3@5578>   MOVE.w D3,D4
0002384C <AmiBlitz3.ab3@5581>   MOVEQ.l #$00,D5
00023850 <AmiBlitz3.ab3@5582>   CMP.w #$2C,D0
00023854 <AmiBlitz3.ab3@5583>    BNE.w 'gotfrom
00023856 <AmiBlitz3.ab3@5584>   MOVE.w D4,-(A7)
0002385C <AmiBlitz3.ab3@5585>    JSR evalconst2
00023862 <AmiBlitz3.ab3@5586>   CMP.l #MaxWord,D3
00023866 <AmiBlitz3.ab3@5587>    BHI.w tokeerr
00023868 <AmiBlitz3.ab3@5588>   TST.w D6
0002386C <AmiBlitz3.ab3@5589>    BNE.w tokeerr
0002386E <AmiBlitz3.ab3@5590>   MOVE.w D3,D5
00023870 <AmiBlitz3.ab3@5591>   MOVE.w (A7)+,D4
00023872 <AmiBlitz3.ab3@5594> RTS                                                        ;d4=toke, d5=form
00023874 <AmiBlitz3.ab3@5598>   TST.w D0
00023878 <AmiBlitz3.ab3@5599>    BSR.w gettokeps
0002387C <AmiBlitz3.ab3@5600>   MOVE.w #$4EB9,D1
00023882 <AmiBlitz3.ab3@5601>   JSR writeword
00023886 <AmiBlitz3.ab3@5602>   BSR.w addoff
00023888 <AmiBlitz3.ab3@5603>   MOVE.w D5,D1
0002388C <AmiBlitz3.ab3@5604>   ORI.w #$8000,D1                                          ;Toke of Amiga type.
0002388E <AmiBlitz3.ab3@5605>   SWAP D1
00023890 <AmiBlitz3.ab3@5606>   MOVE.w D4,D1
00023896 <AmiBlitz3.ab3@5607> JMP writelong
00023898 <AmiBlitz3.ab3@5611>   TST.w D0
0002389C <AmiBlitz3.ab3@5612>    BSR.w gettokeps
000238A0 <AmiBlitz3.ab3@5613>   MOVE.w #$4EB9,D1
000238A6 <AmiBlitz3.ab3@5614>   JSR writeword
000238AA <AmiBlitz3.ab3@5615>   BSR.w addoff
000238AC <AmiBlitz3.ab3@5616>   MOVE.w D5,D1
000238B0 <AmiBlitz3.ab3@5617>   ORI.w #$C000,D1                                          ;Toke of Blitz type.
000238B2 <AmiBlitz3.ab3@5618>   SWAP D1
000238B4 <AmiBlitz3.ab3@5619>   MOVE.w D4,D1
000238BA <AmiBlitz3.ab3@5620>   JMP writelong
000238C0 <AmiBlitz3.ab3@5624>   JSR evalconst
000238C6 <AmiBlitz3.ab3@5625>   CMP.l #$10000,D3
000238CA <AmiBlitz3.ab3@5626>    BCC.w tokeerr
000238CC <AmiBlitz3.ab3@5627>   MOVE.w D3,D1
000238D2 <AmiBlitz3.ab3@5628> JMP Atokejsr
000238D6 <AmiBlitz3.ab3@5632>   BSR.w gettokeps
000238DA <AmiBlitz3.ab3@5633>   MOVE.w #$4EB9,D1
000238E0 <AmiBlitz3.ab3@5634>   JSR writeword
000238E6 <AmiBlitz3.ab3@5635>   MOVE.l destpointer,D3
000238EE <AmiBlitz3.ab3@5636>   BTST #$7,blitzmode
000238F2 <AmiBlitz3.ab3@5637>    BEQ.w 'inamiga
000238F6 <AmiBlitz3.ab3@5638>   BSET #$E,D5
000238FA <AmiBlitz3.ab3@5641>   BSR.w maketjsr
000238FE <AmiBlitz3.ab3@5642>   BSR.w addoff
00023904 <AmiBlitz3.ab3@5643> JMP writelong
00023908 <AmiBlitz3.ab3@5647>   BEQ.w 'zero
0002390A <AmiBlitz3.ab3@5648>   MOVEQ.l #$02,D2                                          ;get a word
00023910 <AmiBlitz3.ab3@5650>   JSR bakeval
00023914 <AmiBlitz3.ab3@5651>   MOVE.w fvwait(PC),D1
00023918 <AmiBlitz3.ab3@5652>  BRA.w 'vcont
0002391C <AmiBlitz3.ab3@5655>   MOVE.w #$7000,D1                                         ;moveq #0,d0
00023922 <AmiBlitz3.ab3@5658>   JSR writeword
00023926 <AmiBlitz3.ab3@5659>   MOVE.w #$C104,D1
0002392C <AmiBlitz3.ab3@5660> JMP Atokejsr
0002392E <AmiBlitz3.ab3@5664>   SUBQ.w #1,D0
00023934 <AmiBlitz3.ab3@5667>   Dc.w $3b7c,$ffff,0                                       ;move.w #$FFFF,$0(A5) ;noopt
00023938 <AmiBlitz3.ab3@5670>   Dc.l $426d0001                                           ;clr.w $0(A5)
0002393C <AmiBlitz3.ab3@5674>   MOVE.b debugmode(PC),D1
00023940 <AmiBlitz3.ab3@5675>   BEQ.b 'skip
00023944 <AmiBlitz3.ab3@5676>   MOVE.w #$D500,D1
0002394A <AmiBlitz3.ab3@5677> JMP Atokejsr
0002394C <AmiBlitz3.ab3@5680> RTS
00023954 <AmiBlitz3.ab3@5684>   BSET #$0,blitzmode
0002395C <AmiBlitz3.ab3@5685>   BSET #$7,blitzmode
00023960 <AmiBlitz3.ab3@5686>   MOVE.w #$C200,D1
00023966 <AmiBlitz3.ab3@5687>   JSR Atokejsr
0002396C <AmiBlitz3.ab3@5688>   TST.b debugmode
00023970 <AmiBlitz3.ab3@5689>    BEQ.w 'done
00023974 <AmiBlitz3.ab3@5690>   MOVE.w cgoblitz(PC),D1
0002397A <AmiBlitz3.ab3@5691>   JSR writeword
0002397C <AmiBlitz3.ab3@5692>   MOVEQ.l #-$01,D1
00023982 <AmiBlitz3.ab3@5693>   JSR writeword
00023988 <AmiBlitz3.ab3@5694>   JSR getbbase
0002398E <AmiBlitz3.ab3@5695>   JSR writeword
00023992 <AmiBlitz3.ab3@5698> BRA.w debugmode_codelabel
00023996 <AmiBlitz3.ab3@5702>   MOVE.w #$C201,D1
0002399A <AmiBlitz3.ab3@5703> BRA.w do_AMIGA_toamode
0002399E <AmiBlitz3.ab3@5706>   MOVE.W  #$C202,D1
000239A6 <AmiBlitz3.ab3@5709>   BSET #$0,blitzmode
000239AE <AmiBlitz3.ab3@5710>   BCLR #$7,blitzmode
000239B4 <AmiBlitz3.ab3@5711>   JSR Atokejsr
000239BA <AmiBlitz3.ab3@5712>   TST.b debugmode
000239BE <AmiBlitz3.ab3@5713>    BEQ.w 'done
000239C2 <AmiBlitz3.ab3@5714>   MOVE.w cgoamiga(PC),D1
000239C8 <AmiBlitz3.ab3@5715>   JSR writeword
000239CE <AmiBlitz3.ab3@5716>   JSR getbbase
000239D4 <AmiBlitz3.ab3@5717>   JSR writeword
000239D8 <AmiBlitz3.ab3@5720> BRA.w debugmode_codelabel
000239DC <AmiBlitz3.ab3@5724>   MOVEM.l D2-D7/A2-A4,-(A7)
000239E0 <AmiBlitz3.ab3@5727>   MOVEM.l (A7)+,D2-D7/A2-A4
000239E6 <AmiBlitz3.ab3@5731>   JSR evalconst
000239EC <AmiBlitz3.ab3@5732>   CMP.l #$E,D3
000239F0 <AmiBlitz3.ab3@5733>    BCC.w interr4
000239F4 <AmiBlitz3.ab3@5734>   MOVE.w #$7000,D1
000239F6 <AmiBlitz3.ab3@5735>   OR.w D3,D1
000239FC <AmiBlitz3.ab3@5736>   JSR writeword
00023A00 <AmiBlitz3.ab3@5737>   MOVE.w #$C101,D1
00023A06 <AmiBlitz3.ab3@5738> JMP Atokejsr                                               ;clear the interupt
00023A08 <AmiBlitz3.ab3@5741> inerr:       Ds.w 1                                        ;flag - in error trap mode
00023A0C <AmiBlitz3.ab3@5742> errjmp:      Ds.l 1                                        ;where err jump is
00023A10 <AmiBlitz3.ab3@5743> errcode:     Ds.l 1
00023A14 <AmiBlitz3.ab3@5747>   MOVE.W  #$D202,D1
00023A1A <AmiBlitz3.ab3@5748> JMP Atokejsr                                               ;BRA.W Atokejsr
00023A1E <AmiBlitz3.ab3@5752>   MOVE.w inerr(PC),D1
00023A22 <AmiBlitz3.ab3@5753>    BEQ.w errerr3
00023A28 <AmiBlitz3.ab3@5754>   CLR.w inerr
00023A2E <AmiBlitz3.ab3@5755>   MOVE.w dontwrite_nomemleft,D1
00023A32 <AmiBlitz3.ab3@5756>    BNE.w 'skip
00023A36 <AmiBlitz3.ab3@5757>   MOVEA.l errjmp(PC),A0
00023A3C <AmiBlitz3.ab3@5758>   MOVE.l destpointer,(A0)
00023A40 <AmiBlitz3.ab3@5761> BRA.w get1bytemain
00023A44 <AmiBlitz3.ab3@5765>   MOVE.w #$D205,D1
00023A4A <AmiBlitz3.ab3@5766> JMP Atokejsr
00023A50 <AmiBlitz3.ab3@5770>   MOVE.w proceduremode,D1
00023A54 <AmiBlitz3.ab3@5771>    BNE.w errerr1
00023A58 <AmiBlitz3.ab3@5772>   MOVE.w inerr(PC),D1
00023A5C <AmiBlitz3.ab3@5773>    BNE.w errerr2
00023A62 <AmiBlitz3.ab3@5774>   LEA inerr,a0
00023A64 <AmiBlitz3.ab3@5775>   NOT.w (a0)                                               ;reass
00023A68 <AmiBlitz3.ab3@5776>   MOVE.w #$203C,D1                                         ;move.l #x,d0
00023A6E <AmiBlitz3.ab3@5777>   JSR writeword
00023A78 <AmiBlitz3.ab3@5778>   MOVE.l destpointer,errcode
00023A7C <AmiBlitz3.ab3@5779>   BSR.w addoff
00023A82 <AmiBlitz3.ab3@5780>   JSR writelong
00023A86 <AmiBlitz3.ab3@5781>   MOVE.w #$D201,D1
00023A8C <AmiBlitz3.ab3@5782>   JSR Atokejsr
00023A90 <AmiBlitz3.ab3@5783>   MOVE.w #$4EF9,D1                                         ;JMP
00023A96 <AmiBlitz3.ab3@5784>   JSR writeword
00023AA0 <AmiBlitz3.ab3@5785>   MOVE.l destpointer,errjmp
00023AA4 <AmiBlitz3.ab3@5786>   BSR.w addoff
00023AAA <AmiBlitz3.ab3@5787>   JSR writelong
00023AB0 <AmiBlitz3.ab3@5788>   MOVE.w dontwrite_nomemleft,D1
00023AB4 <AmiBlitz3.ab3@5789>    BNE.w 'skip
00023AB8 <AmiBlitz3.ab3@5790>   MOVEA.l errcode(PC),A0
00023ABE <AmiBlitz3.ab3@5791>   MOVE.l destpointer,(A0)
00023AC0 <AmiBlitz3.ab3@5794> RTS
00023AC4 <AmiBlitz3.ab3@5797> intlineat:  Ds.l 1
00023AC6 <AmiBlitz3.ab3@5801>   MOVEQ.l #-$01,D1                                        ;type - need new string space
00023ACA <AmiBlitz3.ab3@5802>   BSR.w errchx
00023AD0 <AmiBlitz3.ab3@5803>   MOVE.w D1,intstring
00023ADA <AmiBlitz3.ab3@5804>   MOVE.l linenumat,intlineat
00023AE0 <AmiBlitz3.ab3@5805>   JSR evalconst                                           ;get constant - int level
00023AE6 <AmiBlitz3.ab3@5806>   CMP.l #$E,D3
00023AEA <AmiBlitz3.ab3@5807>    BCC.w interr4
00023AF0 <AmiBlitz3.ab3@5808>   ST intsused
00023AF6 <AmiBlitz3.ab3@5809>   MOVE.w D3,intlevel
00023AFA <AmiBlitz3.ab3@5810>   MOVE.w #$7000,D1
00023AFC <AmiBlitz3.ab3@5811>   OR.w D3,D1                                              
00023B02 <AmiBlitz3.ab3@5812>   JSR writeword                                         ;moveq #x,d0
00023B06 <AmiBlitz3.ab3@5813>   MOVE.w #$223C,D1                                        ;move.l #x,d1
00023B0C <AmiBlitz3.ab3@5814>   JSR writeword
00023B10 <AmiBlitz3.ab3@5815>   BSR.w addoff
00023B16 <AmiBlitz3.ab3@5816>   MOVE.l destpointer,-(A7)
00023B1A <AmiBlitz3.ab3@5817>   BSR.w writelong
00023B1E <AmiBlitz3.ab3@5818>   MOVE.w #$C100,D1
00023B24 <AmiBlitz3.ab3@5819>   JSR Atokejsr
00023B28 <AmiBlitz3.ab3@5820>   MOVE.w #$4EF9,D1                                        ;jmp
00023B2E <AmiBlitz3.ab3@5821>   JSR writeword
00023B32 <AmiBlitz3.ab3@5822>   BSR.w addoff
00023B3C <AmiBlitz3.ab3@5823>   MOVE.l destpointer,intjmpat
00023B40 <AmiBlitz3.ab3@5824>   BSR.w writelong
00023B42 <AmiBlitz3.ab3@5825>   MOVEA.l (A7)+,A0
00023B48 <AmiBlitz3.ab3@5826>   MOVE.w dontwrite_nomemleft,D1
00023B4C <AmiBlitz3.ab3@5827>   BNE.w 'dontpoke
00023B52 <AmiBlitz3.ab3@5828>   MOVE.l destpointer,(A0)
00023B56 <AmiBlitz3.ab3@5831>   MOVE.l intstart0(PC),D1
00023B5A <AmiBlitz3.ab3@5832>   BSR.w writelong
00023B60 <AmiBlitz3.ab3@5833>   TST.b debugmode
00023B64 <AmiBlitz3.ab3@5834>    BEQ.w 'norerr
00023B66 <AmiBlitz3.ab3@5838>   MOVEQ.l #$02,D1
00023B6A <AmiBlitz3.ab3@5839>   BSR.w writetrap
00023B6E <AmiBlitz3.ab3@5840>   BSR.w addoff
00023B78 <AmiBlitz3.ab3@5841>   MOVE.l destpointer,intcleanat
00023B7C <AmiBlitz3.ab3@5842>   BSR.w writelong
00023B82 <AmiBlitz3.ab3@5843>   MOVE.w intlevel,D1
00023B86 <AmiBlitz3.ab3@5844>   BSR.w writeword
00023B8A <AmiBlitz3.ab3@5845>   MOVE.w #$C30B,D1                                         ;disable stack checks
00023B90 <AmiBlitz3.ab3@5846>   JSR Atokejsr
00023B94 <AmiBlitz3.ab3@5849>   MOVE.w #$FED3,D1
00023B98 <AmiBlitz3.ab3@5850>   BSR.w uselib
00023B9C <AmiBlitz3.ab3@5851>   MOVE.w #$C102,D1
00023BA2 <AmiBlitz3.ab3@5852>   JSR Atokejsr
00023BAA <AmiBlitz3.ab3@5853>   MOVE.w #-1,lasta6
00023BB4 <AmiBlitz3.ab3@5854>   MOVE.l linenumat,intline
00023BB6 <AmiBlitz3.ab3@5855> RTS
00023BB8 <AmiBlitz3.ab3@5859>             Ds.w 1                                         ;??looks like obsolved data??
00023BBC <AmiBlitz3.ab3@5861> intdata1:   Ds.l 1                                         ;where in data1 a5 is being kept
00023BC0 <AmiBlitz3.ab3@5863> intjmpat:   Ds.l 1
00023BC4 <AmiBlitz3.ab3@5864> intline:    Ds.l 1
00023BC6 <AmiBlitz3.ab3@5865> intstring:  Ds.w 1                                         ;flag 0 = no setint
00023BC8 <AmiBlitz3.ab3@5868> intlevel:   Ds.w 1
00023BCC <AmiBlitz3.ab3@5869> intcleanat: Ds.l 1
00023BD0 <AmiBlitz3.ab3@5870> ret15add:   Ds.l 1
00023BD2 <AmiBlitz3.ab3@5871> ret15cc:    Ds.w 1
00023BDA <AmiBlitz3.ab3@5875>   ADDI.l #$12,$2(A7)
00023BE2 <AmiBlitz3.ab3@5876>   MOVE.l $2(A7),ret15add
00023BE8 <AmiBlitz3.ab3@5877>   MOVE.w (A7),ret15cc
00023BF0 <AmiBlitz3.ab3@5878>   MOVE.l #directdo,$2(A7)
00023BF2 <AmiBlitz3.ab3@5879> RTE
00023BF6 <AmiBlitz3.ab3@5888>   MOVE.l ret15add(PC),-(A7)
00023BFA <AmiBlitz3.ab3@5889>   MOVE.w ret15cc(PC),-(A7)                                 ;15*4
00023BFE <AmiBlitz3.ab3@5890>   MOVEM.l D0-D7/A0-A6,-(A7)
00023C08 <AmiBlitz3.ab3@5891>   MOVE.l destbufferend,trap15temp                          ;store high buff addr
00023C12 <AmiBlitz3.ab3@5892>   MOVE.l destbufferstart,trap15temp2
00023C1C <AmiBlitz3.ab3@5893>   MOVE.l libend,templibend
00023C26 <AmiBlitz3.ab3@5894>   MOVE.l data1start,tempdata1start
00023C2C <AmiBlitz3.ab3@5895>   CLR.l hunkoffsetcounter
00023C32 <AmiBlitz3.ab3@5897>   MOVE.l directbuffer,a0
00023C38 <AmiBlitz3.ab3@5901>   MOVE.l a0,destbufferstart
00023C3E <AmiBlitz3.ab3@5902>   ADD.l #3900,a0
00023C44 <AmiBlitz3.ab3@5903>   MOVE.l a0,destbufferend
00023C4A <AmiBlitz3.ab3@5904>   TST.b exdebug
00023C4E <AmiBlitz3.ab3@5905>   BEQ 'l1
00023C54 <AmiBlitz3.ab3@5906>   MOVE.l a0,libend
00023C5A <AmiBlitz3.ab3@5907>   ADD.l #4000,a0
00023C60 <AmiBlitz3.ab3@5908>   MOVE.l a0,data1start
00023C6A <AmiBlitz3.ab3@5911>   MOVE.l #'dircont,errcont
00023C70 <AmiBlitz3.ab3@5912> 
00023C76 <AmiBlitz3.ab3@5913>   MOVE.l A7,errstack
00023C7E <AmiBlitz3.ab3@5914>   MOVE.w #$FFFF,dirmode
00023C82 <AmiBlitz3.ab3@5916>     MOVEA.l ret15add(PC),A1
00023C88 <AmiBlitz3.ab3@5917>     MOVE.w -(A1),blitzmode
00023C8A <AmiBlitz3.ab3@5918>     CLR.l -(A1)
00023C90 <AmiBlitz3.ab3@5919>     MOVE.l -(A1),firstglob
00023C96 <AmiBlitz3.ab3@5920>     MOVE.l -(A1),firstlocal
00023C9C <AmiBlitz3.ab3@5922>   CLR.w proceduremode
00023CA2 <AmiBlitz3.ab3@5923>   MOVE.l firstglob,D0
00023CA8 <AmiBlitz3.ab3@5924>   OR.l firstlocal,D0
00023CAC <AmiBlitz3.ab3@5925>   BEQ.b 'skip
00023CB2 <AmiBlitz3.ab3@5926>   NOT.w proceduremode
00023CB4 <AmiBlitz3.ab3@5929>   MOVEA.l -(A1),A0                                         ;address of string
00023CB6 <AmiBlitz3.ab3@5933>   MOVE.l A0,-(A7)
00023CF4 <AmiBlitz3.ab3@5936>   !ComData_GetL{comFunc_DebugTrap,A1}
00023CF6 <AmiBlitz3.ab3@5937>   JSR (A1)                                                 ;tokenise line.....
00023CF8 <AmiBlitz3.ab3@5939>   MOVEA.l (A7)+,A5
00023D02 <AmiBlitz3.ab3@5940>   MOVE.l directbuffer,destpointer
00023D08 <AmiBlitz3.ab3@5941>   TST.b exdebug
00023D0C <AmiBlitz3.ab3@5942>   BEQ 'noexdebug
00023D0E <AmiBlitz3.ab3@5943>   MOVE.l a5,a0
00023D14 <AmiBlitz3.ab3@5944>   MOVE.l #200,d0
00023D1A <AmiBlitz3.ab3@5947>     MOVE.b 0(a0,d0.l),8(a0,d0.l)
00023D1E <AmiBlitz3.ab3@5948>   DBF d0,'l2
00023D24 <AmiBlitz3.ab3@5953>   MOVE.l destpointer,a0
00023D28 <AmiBlitz3.ab3@5954>   MOVE.w #$207c,(a0)+
00023D2A <AmiBlitz3.ab3@5955>   MOVE.l a5,d0
00023D30 <AmiBlitz3.ab3@5956>   ADD.l #$206,d0                                           ;constant from debuglib
00023D32 <AmiBlitz3.ab3@5957>   MOVE.l d0,(a0)+
00023D38 <AmiBlitz3.ab3@5958>   MOVE.l a0,destpointer
00023D3A <AmiBlitz3.ab3@5959>   MOVE.l a5,a0
00023D3E <AmiBlitz3.ab3@5960>   MOVE.w #$8039,(a0)+                                      ;TokeJsr 164 (inputoutputlib) LSL 7+4
00023D44 <AmiBlitz3.ab3@5961>   MOVE.l #"$520",(a0)+
00023D48 <AmiBlitz3.ab3@5962>   MOVE.w #"4:",(a0)+
00023D4E <AmiBlitz3.ab3@5965>   CLR.w dontwrite_nomemleft
00023D56 <AmiBlitz3.ab3@5966>   MOVE.w #$FFFF,lasta6
00023D5A <AmiBlitz3.ab3@5967>   BSR.w compile_line                                        ;.....compile it
00023D60 <AmiBlitz3.ab3@5968>   TST.b exdebug
00023D64 <AmiBlitz3.ab3@5969>   BEQ 'noexdebug2
00023D6A <AmiBlitz3.ab3@5970>   JSR fixjsrs
00023D70 <AmiBlitz3.ab3@5973>   CLR.w proceduremode
00023D74 <AmiBlitz3.ab3@5974>   BSR.w errchx
00023D78 <AmiBlitz3.ab3@5975>   MOVE.w #$4EF9,D1
00023D7C <AmiBlitz3.ab3@5976>   BSR.w writeword                                          ;JMP
00023D80 <AmiBlitz3.ab3@5977>   MOVE.l ret15add(PC),D1
00023D84 <AmiBlitz3.ab3@5978>   BSR.w writelong                                          ;jmp to done
00023D8A <AmiBlitz3.ab3@5979>   MOVE.w dontwrite_nomemleft,D0
00023D8E <AmiBlitz3.ab3@5980>    BNE.w nodirmem
00023D96 <AmiBlitz3.ab3@5981>   MOVE.l directbuffer,$3E(A7)                              ;install code address
00023D9C <AmiBlitz3.ab3@5984>   CLR.w dirmode
00023DA2 <AmiBlitz3.ab3@5985>   MOVE.w ret15cc(PC),$3C(A7)
00023DAC <AmiBlitz3.ab3@5986>   MOVE.l trap15temp,destbufferend
00023DB6 <AmiBlitz3.ab3@5987>   MOVE.l trap15temp2,destbufferstart
00023DC0 <AmiBlitz3.ab3@5988>   MOVE.l tempdata1start,data1start
00023DCA <AmiBlitz3.ab3@5989>   MOVE.l templibend,libend
00023DCE <AmiBlitz3.ab3@5990>   MOVEM.l (A7)+,D0-D7/A0-A6
00023DD2 <AmiBlitz3.ab3@5991>   BSR.w Aclearcache                                        ;selden used
00023DD4 <AmiBlitz3.ab3@5992> RTR
00023DD8 <AmiBlitz3.ab3@5995>   MOVEA.l ret15add(PC),A0
00023DDA <AmiBlitz3.ab3@5996>   SUBQ.w #2,A0
00023DDC <AmiBlitz3.ab3@5997>   MOVE.l D0,-(A0)
00023DE0 <AmiBlitz3.ab3@5998> BRA.w 'direxit
00023DE4 <AmiBlitz3.ab3@6002>   MOVE.w $6(A3),D1
00023DE8 <AmiBlitz3.ab3@6003>   BSR.w uselib                                             ;get lib for base address
00023DEC <AmiBlitz3.ab3@6004>   MOVE.w $A(A1),-(A7)                                      ;libbase reg
00023DEE <AmiBlitz3.ab3@6005>   ADDQ.w #8,A3
00023DF0 <AmiBlitz3.ab3@6006>   MOVE.w (A3)+,-(A7)                                       ;get offset for lib
00023DF2 <AmiBlitz3.ab3@6007>   MOVE.l A3,-(A7)
00023DF4 <AmiBlitz3.ab3@6011>   MOVEQ.l #$00,D3
00023DFA <AmiBlitz3.ab3@6013>   JSR checka4a5
00023DFC <AmiBlitz3.ab3@6017>   MOVE.b (A3)+,D1
00023E00 <AmiBlitz3.ab3@6018>    BMI.w 'done
00023E02 <AmiBlitz3.ab3@6019>   MOVEQ.l #$03,D2
00023E04 <AmiBlitz3.ab3@6020>   ADDQ.w #1,D3
00023E08 <AmiBlitz3.ab3@6021>   MOVEM.l D3/A3,-(A7)
00023E0E <AmiBlitz3.ab3@6023>   MOVE.b funcparloop,-(a7)
00023E16 <AmiBlitz3.ab3@6024>   MOVE.b #0,funcparloop
00023E1C <AmiBlitz3.ab3@6025>   MOVE.l leftsidetype,-(a7)
00023E22 <AmiBlitz3.ab3@6026>   MOVE.l rightsidetype,-(a7)
00023E28 <AmiBlitz3.ab3@6027>   MOVE.w leftsideflagmask,-(a7)
00023E2E <AmiBlitz3.ab3@6028>   MOVE.w rightsideflagmask,-(a7)
00023E34 <AmiBlitz3.ab3@6029>   CLR.l leftsidetype
00023E3A <AmiBlitz3.ab3@6030>   CLR.l rightsidetype
00023E40 <AmiBlitz3.ab3@6031>   CLR.w leftsideflagmask
00023E46 <AmiBlitz3.ab3@6032>   CLR.w rightsideflagmask
00023E4C <AmiBlitz3.ab3@6033>   MOVE.b blitzparloop,-(a7)
00023E54 <AmiBlitz3.ab3@6034>   MOVE.b #1,blitzparloop                                 ;write the parameter to stack
00023E5A <AmiBlitz3.ab3@6036>   JSR peval
00023E60 <AmiBlitz3.ab3@6038>   MOVE.b (a7)+,blitzparloop
00023E66 <AmiBlitz3.ab3@6039>   MOVE.w (a7)+,rightsideflagmask
00023E6C <AmiBlitz3.ab3@6040>   MOVE.w (a7)+,leftsideflagmask
00023E72 <AmiBlitz3.ab3@6041>   MOVE.l (a7)+,rightsidetype
00023E78 <AmiBlitz3.ab3@6042>   MOVE.l (a7)+,leftsidetype
00023E7E <AmiBlitz3.ab3@6043>   MOVE.b (a7)+,funcparloop
00023E82 <AmiBlitz3.ab3@6044>   MOVEM.l (A7)+,D3/A3
00023E86 <AmiBlitz3.ab3@6046>   CMP.w #$2C,D0     ; ','
00023E8A <AmiBlitz3.ab3@6047>    BEQ.w 'loop
00023E8C <AmiBlitz3.ab3@6048>   TST.b (A3)
00023E90 <AmiBlitz3.ab3@6049>    BPL.w syntaxerr
00023E92 <AmiBlitz3.ab3@6052>   MOVEA.l (A7)+,A3
00023E94 <AmiBlitz3.ab3@6053>   SUBQ.w #1,D3
00023E98 <AmiBlitz3.ab3@6054>    BPL.w 'toend
00023E9C <AmiBlitz3.ab3@6055>    BSR.w get1bytemain                                      ;no pars - get :
00023EA0 <AmiBlitz3.ab3@6056>  BRA.w 'nopars
00023EA2 <AmiBlitz3.ab3@6059>   TST.b (A3)+                                              ;go to end of params
00023EA6 <AmiBlitz3.ab3@6060>    BPL.w 'toend
00023EA8 <AmiBlitz3.ab3@6061>   SUBQ.w #1,A3
00023EAA <AmiBlitz3.ab3@6064>    MOVEQ.l #$00,D1
00023EAC <AmiBlitz3.ab3@6065>    MOVE.b -(A3),D1
00023EB0 <AmiBlitz3.ab3@6066>    BTST #$4,D1
00023EB4 <AmiBlitz3.ab3@6067>     BNE.w 'addreg
00023EB6 <AmiBlitz3.ab3@6068>    LSL.w #8,D1
00023EB8 <AmiBlitz3.ab3@6069>    LSL.w #1,D1
00023EBC <AmiBlitz3.ab3@6070>    ORI.w #$201F,D1
00023EC0 <AmiBlitz3.ab3@6071>  BRA.w 'gotit
00023EC4 <AmiBlitz3.ab3@6074>    ANDI.w #$7,D1
00023EC6 <AmiBlitz3.ab3@6075>    LSL.w #8,D1
00023EC8 <AmiBlitz3.ab3@6076>    LSL.w #1,D1
00023ECC <AmiBlitz3.ab3@6077>    ORI.w #$205F,D1
00023ED0 <AmiBlitz3.ab3@6080>     BSR.w writeword
00023ED4 <AmiBlitz3.ab3@6081>   DBF D3,'loop2
00023EDA <AmiBlitz3.ab3@6084>   MOVE.w (A7)+,libjsr+2
00023EE0 <AmiBlitz3.ab3@6085>   MOVE.w (A7)+,libbase+2
00023EE6 <AmiBlitz3.ab3@6086>   MOVE.l libbase,D1
00023EEA <AmiBlitz3.ab3@6087>    BSR.w writelong
00023EF0 <AmiBlitz3.ab3@6088>   MOVE.l libjsr,D1
00023EF6 <AmiBlitz3.ab3@6089>   JSR writelong
00023EFC <AmiBlitz3.ab3@6091>   JSR restorea4a5
00023EFE <AmiBlitz3.ab3@6093> RTS
00023F04 <AmiBlitz3.ab3@6100>   MOVE.l data1,D4
00023F0A <AmiBlitz3.ab3@6101>   SUB.l data1start,D4
00023F10 <AmiBlitz3.ab3@6102>   ADD.l #10000,d4
00023F16 <AmiBlitz3.ab3@6103>   MOVE.l libend,D3
00023F1C <AmiBlitz3.ab3@6104>   SUB.l destbufferend,D3
00023F22 <AmiBlitz3.ab3@6105>   ADD.l #40000,d3
00023F28 <AmiBlitz3.ab3@6106>   MOVE.l bigpc,D2
00023F2E <AmiBlitz3.ab3@6107>   SUB.l destbufferstart,D2
00023F34 <AmiBlitz3.ab3@6108>   ADD.l #20000,d2
00023F3A <AmiBlitz3.ab3@6109>   MOVE.l databuffer,D5
00023F40 <AmiBlitz3.ab3@6110>   ADD.l #10000,D5
00023F44 <AmiBlitz3.ab3@6111>  BRA newallox
00023F4A <AmiBlitz3.ab3@6114>   MOVE.l objectbuffer,D2       ;??Looks like unused code??
00023F4C <AmiBlitz3.ab3@6115>   LSR.l #1,D2
00023F52 <AmiBlitz3.ab3@6116>   ADD.l objectbuffer,D2
00023F58 <AmiBlitz3.ab3@6118>   MOVE.l libsbuffer,D3
00023F5A <AmiBlitz3.ab3@6119>   LSR.l #1,D3
00023F60 <AmiBlitz3.ab3@6120>   ADD.l libsbuffer,D3
00023F66 <AmiBlitz3.ab3@6122>   MOVE.l systembuffer,D4
00023F68 <AmiBlitz3.ab3@6123>   LSR.l #1,D4
00023F6E <AmiBlitz3.ab3@6124>   ADD.l systembuffer,D4
00023F74 <AmiBlitz3.ab3@6126>   MOVE.l databuffer,D5
00023F76 <AmiBlitz3.ab3@6127>   LSR.l #1,D5
00023F7C <AmiBlitz3.ab3@6128>   ADD.l databuffer,D5
00023F80 <AmiBlitz3.ab3@6130> BRA.w newallox
00023F86 <AmiBlitz3.ab3@6134>   MOVE.l bigpc,D2
00023F8C <AmiBlitz3.ab3@6135>   SUB.l destbufferstart,D2                                     ;size of object buffer
00023F92 <AmiBlitz3.ab3@6136>   SUB.l savefuncspace,d2
00023F98 <AmiBlitz3.ab3@6138>   TST.w debugversion
00023F9C <AmiBlitz3.ab3@6139>    BNE.b 'skip
00023FA2 <AmiBlitz3.ab3@6140>   ADDI.l #$800,D2
00023FA8 <AmiBlitz3.ab3@6143>   MOVE.l libend,D3
00023FAE <AmiBlitz3.ab3@6144>   SUB.l destbufferend,D3
00023FB4 <AmiBlitz3.ab3@6148>   MOVE.l data1,D4
00023FBA <AmiBlitz3.ab3@6149>   SUB.l data1start,D4
00023FC0 <AmiBlitz3.ab3@6153>   MOVE.l data2,D5
00023FC6 <AmiBlitz3.ab3@6154>   SUB.l data2at,D5
00023FCC <AmiBlitz3.ab3@6157>   CLR.l morememadd
00023FD0 <AmiBlitz3.ab3@6161>   BSR.w makeallox
00023FD4 <AmiBlitz3.ab3@6162>   BNE.w 'done
00023FD8 <AmiBlitz3.ab3@6163>  BRA.w init_buffers
00023FDA <AmiBlitz3.ab3@6166> RTS
00023FE0 <AmiBlitz3.ab3@6170>   MOVEA.l _execbase,A6
00023FE6 <AmiBlitz3.ab3@6171>   MOVE.l objlen,D0
00023FEA <AmiBlitz3.ab3@6172>   BEQ.w 'skip
00023FF0 <AmiBlitz3.ab3@6173>   CLR.l objlen
00023FF6 <AmiBlitz3.ab3@6174>   MOVEA.l destbufferstart,A1
00023FFC <AmiBlitz3.ab3@6176>   MOVE.l mempool,a0
00024000 <AmiBlitz3.ab3@6177> JMP _FreeVec(A6)
00024002 <AmiBlitz3.ab3@6182> RTS
00024008 <AmiBlitz3.ab3@6186>   MOVE.l objectbuffer,D2
0002400E <AmiBlitz3.ab3@6187>   MOVE.l libsbuffer,D3
00024014 <AmiBlitz3.ab3@6188>   MOVE.l systembuffer,D4
0002401A <AmiBlitz3.ab3@6189>   MOVE.l databuffer,D5
00024022 <AmiBlitz3.ab3@6194>   MOVE.w #$FFFF,anyerrs      ; was -1
00024026 <AmiBlitz3.ab3@6195>   BSR.w freeallox
00024028 <AmiBlitz3.ab3@6199>   ADDQ.l #1,D2
0002402C <AmiBlitz3.ab3@6200>   BCLR #$0,D2
0002402E <AmiBlitz3.ab3@6201>   ADDQ.l #1,D3
00024032 <AmiBlitz3.ab3@6202>   BCLR #$0,D3
00024034 <AmiBlitz3.ab3@6203>   ADDQ.l #1,D4
00024038 <AmiBlitz3.ab3@6204>   BCLR #$0,D4
0002403A <AmiBlitz3.ab3@6206>   TST.l d5        ; ??? make no sence ??
0002403E <AmiBlitz3.ab3@6207>   BNE 'l1
00024040 <AmiBlitz3.ab3@6211>   ADDQ.l #1,D5
00024044 <AmiBlitz3.ab3@6212>   BCLR #$0,D5
00024046 <AmiBlitz3.ab3@6214>   MOVE.l D2,D0
00024048 <AmiBlitz3.ab3@6215>   ADD.l D3,D0
0002404A <AmiBlitz3.ab3@6216>   ADD.l D4,D0
0002404C <AmiBlitz3.ab3@6217>   ADD.l D5,D0
00024052 <AmiBlitz3.ab3@6219>   ADD.l #moremem,d0
00024054 <AmiBlitz3.ab3@6221>   MOVE.l D0,D6
0002405A <AmiBlitz3.ab3@6222>   MOVE.l #MemfPublic_MemfClear,D1
00024060 <AmiBlitz3.ab3@6224>   MOVE.l mempool,a0
00024066 <AmiBlitz3.ab3@6225>   MOVEA.l _execbase,A6
0002406A <AmiBlitz3.ab3@6226>   JSR _AllocVec(a6)                                        ;alloc mem for objectbuffer
0002406C <AmiBlitz3.ab3@6229>   TST.l D0
00024070 <AmiBlitz3.ab3@6230>   BEQ.w 'done
00024076 <AmiBlitz3.ab3@6231>   MOVE.l D6,objlen
0002407C <AmiBlitz3.ab3@6232>   MOVE.l D2,objectbuffer
00024082 <AmiBlitz3.ab3@6233>   MOVE.l D3,libsbuffer
00024088 <AmiBlitz3.ab3@6234>   MOVE.l D4,systembuffer
0002408E <AmiBlitz3.ab3@6235>   MOVE.l D5,databuffer
00024094 <AmiBlitz3.ab3@6236>   MOVE.l D0,destbufferstart
000240C8 <AmiBlitz3.ab3@6240>   !ComData_SetL{comPtr_DestBufferStart,D0}
000240CA <AmiBlitz3.ab3@6242>   ADD.l D2,D0
000240D0 <AmiBlitz3.ab3@6243>   MOVE.l D0,destbufferend
000240D2 <AmiBlitz3.ab3@6244>   ADD.l D3,D0
000240D8 <AmiBlitz3.ab3@6245>   MOVE.l D0,data1start
000240DA <AmiBlitz3.ab3@6246>   ADD.l D4,D0
000240E0 <AmiBlitz3.ab3@6247>   MOVE.l D0,data2at
000240E2 <AmiBlitz3.ab3@6248>   ADD.l D5,D0
000240E8 <AmiBlitz3.ab3@6249>   MOVE.l D0,allat
000240EA <AmiBlitz3.ab3@6252> RTS
000240EE <AmiBlitz3.ab3@6256>   Dc.b $00,$00,$00,$01                                     ;         1
000240F2 <AmiBlitz3.ab3@6257>   Dc.b $00,$00,$00,$0A                                     ;        10
000240F6 <AmiBlitz3.ab3@6258>   Dc.b $00,$00,$00,$64                                     ;       100
000240FA <AmiBlitz3.ab3@6259>   Dc.b $00,$00,$03,$E8                                     ;      1000
000240FE <AmiBlitz3.ab3@6260>   Dc.b $00,$00,$27,$10                                     ;     10000
00024102 <AmiBlitz3.ab3@6261>   Dc.b $00,$01,$86,$A0                                     ;    100000
00024106 <AmiBlitz3.ab3@6262>   Dc.b $00,$0F,$42,$40                                     ;   1000000
0002410A <AmiBlitz3.ab3@6263>   Dc.b $00,$98,$96,$80                                     ;  10000000
0002410E <AmiBlitz3.ab3@6264>   Dc.b $05,$F5,$E1,$00                                     ; 100000000
00024112 <AmiBlitz3.ab3@6265>   Dc.b $3B,$9A,$CA,$00                                     ;1000000000
00024114 <AmiBlitz3.ab3@6269>   MOVEQ.l #$00,D1                                          ;no zero printed
00024116 <AmiBlitz3.ab3@6270>   MOVEQ.l #$24,D3                                          ; "$"
00024118 <AmiBlitz3.ab3@6273>   MOVEQ.l #$30,D4                                          ; "0"
0002411C <AmiBlitz3.ab3@6276>     CMP.l divisors(PC,D3.W),D2
00024120 <AmiBlitz3.ab3@6277>     BCS.w 'skip
00024124 <AmiBlitz3.ab3@6278>     SUB.l divisors(PC,D3.W),D2
00024126 <AmiBlitz3.ab3@6279>     ADDQ.w #1,D4
0002412A <AmiBlitz3.ab3@6280>  BRA.w 'loop2
0002412E <AmiBlitz3.ab3@6283>   CMP.b #"0",D4
00024132 <AmiBlitz3.ab3@6284>   BNE.w 'doit
00024134 <AmiBlitz3.ab3@6285>   TST.w D1
00024138 <AmiBlitz3.ab3@6286>   BEQ.w 'skip2
0002413A <AmiBlitz3.ab3@6289>   MOVE.b D4,(A0)+
0002413C <AmiBlitz3.ab3@6290>   MOVEQ.l #$01,D1
0002413E <AmiBlitz3.ab3@6293>   SUBQ.w #4,D3
00024142 <AmiBlitz3.ab3@6294>   BPL.w 'loop
00024144 <AmiBlitz3.ab3@6295>   TST.w D1
00024148 <AmiBlitz3.ab3@6296>   BNE.w 'skip3
0002414C <AmiBlitz3.ab3@6297>   MOVE.b #"0",(A0)+
0002414E <AmiBlitz3.ab3@6300>   CLR.b (A0)
00024150 <AmiBlitz3.ab3@6301> RTS
00024170 <AmiBlitz3.ab3@6304> str_residentrequester:  Dc.b "Name of Resident File to Create",0 : Even        ;restext org source
00024230 <AmiBlitz3.ab3@6305> str_residentpath:       Ds.l 48                                                ;respath org source
000242F0 <AmiBlitz3.ab3@6306> str_residentname:       Ds.l 48                                                ;resname org source
000242F6 <AmiBlitz3.ab3@6312>   MOVE.l macrobase,D0
000242FA <AmiBlitz3.ab3@6313>    BNE.w 'skip
00024300 <AmiBlitz3.ab3@6314>   MOVE.l newtype_string,D0
00024304 <AmiBlitz3.ab3@6315>    BNE.w 'skip
0002430A <AmiBlitz3.ab3@6316>   MOVEA.l labelbase,A2
0002430E <AmiBlitz3.ab3@6319>     CMPA.w #$0,A2
00024312 <AmiBlitz3.ab3@6320>      BEQ.w 'err
0002431A <AmiBlitz3.ab3@6321>     CMPI.l #$1,$4(A2)
0002431E <AmiBlitz3.ab3@6322>      BEQ.w 'skip
00024320 <AmiBlitz3.ab3@6323>     MOVEA.l (A2),A2
00024324 <AmiBlitz3.ab3@6324>  BRA.w 'loop
0002434E <AmiBlitz3.ab3@6328>   !basic
000243B0 <AmiBlitz3.ab3@6329> 
000243CE <AmiBlitz3.ab3@6330>   !asm
000243D0 <AmiBlitz3.ab3@6332>  RTS
0002440E <AmiBlitz3.ab3@6337>   !ComData_GetL{comFunc_ASLFileRequest,A3}
00024414 <AmiBlitz3.ab3@6338>   LEA str_residentrequester,A2
0002441A <AmiBlitz3.ab3@6339>   LEA str_residentpath,A0
00024420 <AmiBlitz3.ab3@6340>   LEA str_residentname,A1
0002444A <AmiBlitz3.ab3@6342>   !basic
00024482 <AmiBlitz3.ab3@6343>     Poke$ ?str_residentpath,my_residentsdir$
000244AE <AmiBlitz3.ab3@6344>     Poke$ ?str_residentname,".res"
000244CC <AmiBlitz3.ab3@6345>   !asm
000244CE <AmiBlitz3.ab3@6347>   JSR (A3)                                                 ;open ped filerequest
000244D2 <AmiBlitz3.ab3@6348>   BEQ.w 'err
000244D4 <AmiBlitz3.ab3@6352>   MOVE.l D0,D1
000244DA <AmiBlitz3.ab3@6353>   MOVE.l #HUNK_RELOC_8__MODE_NEWFILE,D2
000244DE <AmiBlitz3.ab3@6354>   MOVEA.l _dosbase(PC),A6
000244E2 <AmiBlitz3.ab3@6355>   JSR _Open(A6)
000244E4 <AmiBlitz3.ab3@6356>   MOVE.l D0,D7               ;handle                                ;handle
000244E8 <AmiBlitz3.ab3@6357>   BEQ.w 'err
000244EC <AmiBlitz3.ab3@6359>   MOVEM.l d2-d7/a0-a6,-(a7)
000244F2 <AmiBlitz3.ab3@6360>   LEA devo,a0
000244F8 <AmiBlitz3.ab3@6361>   LEA ptr_parameterstore,a1
000244FA <AmiBlitz3.ab3@6364>     MOVE.b (a0)+,(a1)+
000244FE <AmiBlitz3.ab3@6365>   BNE 'l1
00024500 <AmiBlitz3.ab3@6366>   MOVEQ #13,d2
00024506 <AmiBlitz3.ab3@6367>   JSR findlabel2
0002450A <AmiBlitz3.ab3@6368>   BNE 'd
0002450E <AmiBlitz3.ab3@6369>   TST.l 8(a2)
00024512 <AmiBlitz3.ab3@6370>   BEQ 'd2
0002453C <AmiBlitz3.ab3@6371>   !basic
0002459E <AmiBlitz3.ab3@6372>     error{!TRANS{"Cannot create Resident with develope debug 1"}}
000245BC <AmiBlitz3.ab3@6373>   !asm
000245C0 <AmiBlitz3.ab3@6374>   MOVEM.l (a7)+,d2-d7/a0-a6
000245C4 <AmiBlitz3.ab3@6375>   MOVEA.l _dosbase(PC),A6
000245C6 <AmiBlitz3.ab3@6376>   MOVE.l d7,d1
000245CA <AmiBlitz3.ab3@6377>   JSR _Close(a6)
000245CE <AmiBlitz3.ab3@6378>  BRA 'err
000245D2 <AmiBlitz3.ab3@6382>   MOVEM.l (a7)+,d2-d7/a0-a6
000245D6 <AmiBlitz3.ab3@6384>   BSR.w call_setpointerbusy
000245DA <AmiBlitz3.ab3@6386>   BSR.w killoffs
000245DC <AmiBlitz3.ab3@6388>   MOVE.l D7,D1
000245E2 <AmiBlitz3.ab3@6389>   MOVE.l #tsthead,D2        ;header                               ;header
000245E4 <AmiBlitz3.ab3@6390>   MOVEQ.l #$20,D3
000245E8 <AmiBlitz3.ab3@6391>   MOVEA.l _dosbase(PC),A6
000245EC <AmiBlitz3.ab3@6392>   JSR _Write(A6)
000245EE <AmiBlitz3.ab3@6394>   MOVEQ.l #$00,D6           ;offset from start of file!                               ;offset from start of file!
000245F2 <AmiBlitz3.ab3@6395>   BSR.w restypes
000245F6 <AmiBlitz3.ab3@6396>   BSR.w resmacs
000245FA <AmiBlitz3.ab3@6397>   BSR.w resconsts
000245FC <AmiBlitz3.ab3@6399>   MOVE.l D6,D3
000245FE <AmiBlitz3.ab3@6400>   ADDQ.l #3,D3
00024604 <AmiBlitz3.ab3@6401>   ANDI.l #$FFFFFFFC,D3      ;long word align                               ;long word align
00024606 <AmiBlitz3.ab3@6402>   MOVE.l D3,-(A7)
00024608 <AmiBlitz3.ab3@6403>   SUB.l D6,D3
0002460C <AmiBlitz3.ab3@6404>   BEQ.w 'noalign
00024612 <AmiBlitz3.ab3@6405>   MOVE.l #writelist,D2      ; was #hello,
00024614 <AmiBlitz3.ab3@6406>   MOVE.l D7,D1
0002461A <AmiBlitz3.ab3@6407>   MOVEA.l _dosbase,A6
0002461E <AmiBlitz3.ab3@6408>   JSR _Write(A6)
00024628 <AmiBlitz3.ab3@6411>    MOVE.l hunkoffsetcounter,tstsize3
0002462C <AmiBlitz3.ab3@6412>    BEQ.w 'skip2a
0002462E <AmiBlitz3.ab3@6413>   MOVE.l D7,D1
00024634 <AmiBlitz3.ab3@6414>   MOVE.l #tstend,D2
00024636 <AmiBlitz3.ab3@6415>   MOVEQ.l #$0C,D3
0002463C <AmiBlitz3.ab3@6416>   MOVEA.l _dosbase,A6
00024640 <AmiBlitz3.ab3@6417>    JSR _Write(A6)
00024646 <AmiBlitz3.ab3@6421>   MOVEA.l hunkoffsetbase,A2
0002464A <AmiBlitz3.ab3@6424>   CMPA.w #$0,A2
0002464E <AmiBlitz3.ab3@6425>    BEQ.w 'skip2
00024652 <AmiBlitz3.ab3@6426>   LEA $4(A2),A1
00024654 <AmiBlitz3.ab3@6427>   MOVE.l D7,D1
00024656 <AmiBlitz3.ab3@6428>   MOVE.l A1,D2
00024658 <AmiBlitz3.ab3@6429>   MOVEQ.l #$04,D3
0002465E <AmiBlitz3.ab3@6430>   MOVEA.l _dosbase,A6
00024662 <AmiBlitz3.ab3@6431>    JSR _Write(A6)
00024664 <AmiBlitz3.ab3@6432>   MOVEA.l (A2),A2
00024668 <AmiBlitz3.ab3@6433>  BRA.w 'oloop
0002466A <AmiBlitz3.ab3@6436>   MOVE.l D7,D1
00024670 <AmiBlitz3.ab3@6437>   MOVE.l #zero,D2
00024672 <AmiBlitz3.ab3@6438>   MOVEQ.l #$04,D3
00024678 <AmiBlitz3.ab3@6439>   MOVEA.l _dosbase,A6
0002467C <AmiBlitz3.ab3@6440>   JSR _Write(A6)
0002467E <AmiBlitz3.ab3@6443>   MOVE.l D7,D1
00024684 <AmiBlitz3.ab3@6444>   MOVE.l #tstdone,D2
00024686 <AmiBlitz3.ab3@6445>   MOVEQ.l #$04,D3
0002468C <AmiBlitz3.ab3@6446>   MOVEA.l _dosbase,A6
00024690 <AmiBlitz3.ab3@6447>    JSR _Write(A6)
00024692 <AmiBlitz3.ab3@6448>   MOVE.l (A7)+,D0
00024694 <AmiBlitz3.ab3@6449>   LSR.l #2,D0
0002469A <AmiBlitz3.ab3@6450>   MOVE.l D0,temp1
0002469C <AmiBlitz3.ab3@6452>   MOVE.l D7,D1
0002469E <AmiBlitz3.ab3@6453>   MOVEQ.l #$14,D2
000246A0 <AmiBlitz3.ab3@6454>   MOVEQ.l #-$01,D3
000246A4 <AmiBlitz3.ab3@6455>   JSR _Seek(A6)
000246A6 <AmiBlitz3.ab3@6456>   MOVE.l D7,D1
000246AC <AmiBlitz3.ab3@6457>   MOVE.l #temp1,D2
000246AE <AmiBlitz3.ab3@6458>   MOVEQ.l #$04,D3
000246B2 <AmiBlitz3.ab3@6459>    JSR _Write(A6)
000246B4 <AmiBlitz3.ab3@6460>   MOVE.l D7,D1
000246B6 <AmiBlitz3.ab3@6461>   MOVEQ.l #$1C,D2
000246B8 <AmiBlitz3.ab3@6462>   MOVEQ.l #-$01,D3
000246BC <AmiBlitz3.ab3@6463>    JSR _Seek(A6)
000246BE <AmiBlitz3.ab3@6464>   MOVE.l D7,D1
000246C4 <AmiBlitz3.ab3@6465>   MOVE.l #temp1,D2
000246C6 <AmiBlitz3.ab3@6466>   MOVEQ.l #$04,D3
000246CA <AmiBlitz3.ab3@6467>    JSR _Write(A6)
000246CC <AmiBlitz3.ab3@6469>   MOVE.l D7,D1
000246D0 <AmiBlitz3.ab3@6470>    JSR _Close(A6)
000246D4 <AmiBlitz3.ab3@6471> BRA.w call_setpointernormal
000246D6 <AmiBlitz3.ab3@6477>   ADDQ.w #5,D1
000246D8 <AmiBlitz3.ab3@6478>   ADDQ.b #8,D0
000246DC <AmiBlitz3.ab3@6482>     CMPA.w #$0,A2
000246E0 <AmiBlitz3.ab3@6483>     BEQ.w 'done
000246E4 <AmiBlitz3.ab3@6484>      BSR.w writeitem
000246E6 <AmiBlitz3.ab3@6485>     MOVEA.l (A2),A2
000246EA <AmiBlitz3.ab3@6486>  BRA.w 'loop
000246EC <AmiBlitz3.ab3@6489> RTS
000246EE <AmiBlitz3.ab3@6493>   MOVEQ.l #$00,D3
000246F2 <AmiBlitz3.ab3@6494>   MOVE.b $0(A2,D5.W),D3
000246F4 <AmiBlitz3.ab3@6495>   ADDQ.w #1,D3
000246F8 <AmiBlitz3.ab3@6496>   BCLR #$0,D3                                              ;word align
000246FA <AmiBlitz3.ab3@6497>   MOVE.l (A2),-(A7)
000246FE <AmiBlitz3.ab3@6498>    BEQ.w 'skip
00024702 <AmiBlitz3.ab3@6499>    BSR.w 'resoff
00024704 <AmiBlitz3.ab3@6500>   ADD.l D3,D6
00024706 <AmiBlitz3.ab3@6501>   MOVE.l D6,(A2)
00024708 <AmiBlitz3.ab3@6502>   SUB.l D3,D6
0002470A <AmiBlitz3.ab3@6505>    ADD.l D3,D6
0002470C <AmiBlitz3.ab3@6506>   MOVE.l A2,D2
0002470E <AmiBlitz3.ab3@6507>   MOVE.l D7,D1
00024714 <AmiBlitz3.ab3@6508>   MOVEA.l _dosbase,A6
00024718 <AmiBlitz3.ab3@6509>    JSR _Write(A6)
0002471A <AmiBlitz3.ab3@6510>   MOVE.l (A7)+,(A2)
0002471C <AmiBlitz3.ab3@6511>  RTS
0002471E <AmiBlitz3.ab3@6514>   MOVE.l D6,D2
00024722 <AmiBlitz3.ab3@6515> BRA.w addhunkoffset
00024726 <AmiBlitz3.ab3@6522>     CMPA.w #$0,A2
0002472A <AmiBlitz3.ab3@6523>      BEQ.w 'done
00024730 <AmiBlitz3.ab3@6524>     MOVEA.l newtypebase,A1
00024732 <AmiBlitz3.ab3@6525>     MOVEQ.l #$00,D1
00024736 <AmiBlitz3.ab3@6528>       CMPA.w #$0,A1
0002473A <AmiBlitz3.ab3@6529>       BEQ.w 'found
0002473E <AmiBlitz3.ab3@6530>       CMPA.l $A(A2),A1
00024742 <AmiBlitz3.ab3@6531>        BEQ.w 'found
00024744 <AmiBlitz3.ab3@6532>       ADDQ.w #1,D1
00024746 <AmiBlitz3.ab3@6533>       MOVEA.l (A1),A1
0002474A <AmiBlitz3.ab3@6534>  BRA.w 'loop2
0002474E <AmiBlitz3.ab3@6537>     MOVE.w $A(A2),-(A7)
00024752 <AmiBlitz3.ab3@6538>     MOVE.w D1,$A(A2)
00024756 <AmiBlitz3.ab3@6539>      BSR.w writeitem
0002475A <AmiBlitz3.ab3@6540>     MOVE.w (A7)+,$A(A2)
0002475C <AmiBlitz3.ab3@6541>     MOVEA.l (A2),A2
00024760 <AmiBlitz3.ab3@6542>  BRA.w 'loop
00024762 <AmiBlitz3.ab3@6545> RTS
00024764 <AmiBlitz3.ab3@6549>   MOVEQ.l #$00,D0
00024768 <AmiBlitz3.ab3@6552>   CMPA.w #$0,A2
0002476C <AmiBlitz3.ab3@6553>    BEQ.w 'done
0002476E <AmiBlitz3.ab3@6554>   ADDQ.w #1,D0
00024770 <AmiBlitz3.ab3@6555>   MOVEA.l (A2),A2
00024774 <AmiBlitz3.ab3@6556>  BRA.w 'loop
0002477A <AmiBlitz3.ab3@6559>   MOVE.w D0,temp1
0002477C <AmiBlitz3.ab3@6560>   MOVE.l D7,D1
00024782 <AmiBlitz3.ab3@6561>   MOVE.l #temp1,D2
00024784 <AmiBlitz3.ab3@6562>   MOVEQ.l #$02,D3
00024786 <AmiBlitz3.ab3@6563>   ADDQ.l #2,D6
0002478C <AmiBlitz3.ab3@6564>   MOVEA.l _dosbase,A6
00024790 <AmiBlitz3.ab3@6565> JMP _Write(A6)
00024796 <AmiBlitz3.ab3@6572>    TST.b resdisable
0002479A <AmiBlitz3.ab3@6573>    BEQ 'l1
000247A0 <AmiBlitz3.ab3@6574>    MOVE.l currentmacroaddr,a3
000247A6 <AmiBlitz3.ab3@6575>    CMP.l #0,a3
000247AA <AmiBlitz3.ab3@6576>    BEQ 'l1
000247AC <AmiBlitz3.ab3@6577>    MOVE.l (a3),a3
000247B0 <AmiBlitz3.ab3@6578>  BRA 'l2
000247B6 <AmiBlitz3.ab3@6582>   MOVEA.l macrobase,A3                                     ;??begin org code??
000247B8 <AmiBlitz3.ab3@6585>   MOVEA.l A3,A2
000247BC <AmiBlitz3.ab3@6586>   BSR.w countem
000247C0 <AmiBlitz3.ab3@6589>    CMPA.w #$0,A3
000247C4 <AmiBlitz3.ab3@6590>    BEQ.w 'done
000247C6 <AmiBlitz3.ab3@6591>   MOVE.l D6,D5
000247C8 <AmiBlitz3.ab3@6592>   MOVE.l (A3),-(A7)
000247CC <AmiBlitz3.ab3@6593>   MOVE.l $4(A3),-(A7)
000247CE <AmiBlitz3.ab3@6594>   MOVEQ.l #$00,D3
000247D2 <AmiBlitz3.ab3@6595>   MOVE.b $C(A3),D3
000247D4 <AmiBlitz3.ab3@6596>   ADDQ.w #1,D3
000247D8 <AmiBlitz3.ab3@6597>   BCLR #$0,D3
000247DA <AmiBlitz3.ab3@6598>   ADD.l D3,D6                                              ;add len of struct
000247DE <AmiBlitz3.ab3@6599>   TST.w $8(A3)
000247E2 <AmiBlitz3.ab3@6600>    BEQ.w 'notext
000247E6 <AmiBlitz3.ab3@6601>   MOVE.l D6,$4(A3)
000247E8 <AmiBlitz3.ab3@6602>   MOVE.l D5,D2
000247EA <AmiBlitz3.ab3@6603>   ADDQ.l #4,D2
000247EE <AmiBlitz3.ab3@6604>    BSR.w addhunkoffset
000247F0 <AmiBlitz3.ab3@6607>   MOVEQ.l #$00,D4
000247F4 <AmiBlitz3.ab3@6608>   MOVE.w $8(A3),D4
000247F6 <AmiBlitz3.ab3@6609>   ADDQ.w #1,D4
000247FA <AmiBlitz3.ab3@6610>   BCLR #$0,D4
000247FC <AmiBlitz3.ab3@6611>   ADD.l D4,D6
000247FE <AmiBlitz3.ab3@6612>   TST.l (A3)
00024802 <AmiBlitz3.ab3@6613>    BEQ.w 'nomore
00024804 <AmiBlitz3.ab3@6614>   MOVE.l D6,(A3)
00024806 <AmiBlitz3.ab3@6615>   MOVE.l D5,D2
0002480A <AmiBlitz3.ab3@6616>    BSR.w addhunkoffset
0002480C <AmiBlitz3.ab3@6619>   MOVE.l A3,D2
0002480E <AmiBlitz3.ab3@6620>   MOVE.l D7,D1
00024814 <AmiBlitz3.ab3@6621>    MOVEA.l _dosbase,A6
00024818 <AmiBlitz3.ab3@6622>    JSR _Write(a6)
0002481A <AmiBlitz3.ab3@6623>   TST.l D4
0002481E <AmiBlitz3.ab3@6624>    BEQ.w 'skip
00024820 <AmiBlitz3.ab3@6625>   MOVE.l (A7),D2
00024822 <AmiBlitz3.ab3@6626>   MOVE.l D4,D3
00024824 <AmiBlitz3.ab3@6627>   MOVE.l D7,D1
0002482A <AmiBlitz3.ab3@6628>     MOVEA.l _dosbase,A6
0002482E <AmiBlitz3.ab3@6629>    JSR _Write(A6)
00024832 <AmiBlitz3.ab3@6632>   MOVE.l (A7)+,$4(A3)
00024834 <AmiBlitz3.ab3@6633>   MOVE.l (A7)+,(A3)
00024836 <AmiBlitz3.ab3@6634>   MOVEA.l (A3),A3
0002483A <AmiBlitz3.ab3@6635>  BRA.w 'loop
0002483C <AmiBlitz3.ab3@6638> RTS
00024842 <AmiBlitz3.ab3@6643>   TST.b resdisable
00024846 <AmiBlitz3.ab3@6644>   BEQ 'l1
0002484C <AmiBlitz3.ab3@6645>   MOVE.l lastrestype,a3
00024852 <AmiBlitz3.ab3@6646>   CMP.l #0,a3
00024856 <AmiBlitz3.ab3@6647>   BEQ 'l1
00024858 <AmiBlitz3.ab3@6648>   MOVE.l (a3),a3
0002485C <AmiBlitz3.ab3@6649>  BRA 'l2
00024862 <AmiBlitz3.ab3@6653>   MOVEA.l newtype_string,A3
00024864 <AmiBlitz3.ab3@6656>   MOVEA.l A3,A2
00024868 <AmiBlitz3.ab3@6657>    BSR.w countem
0002486C <AmiBlitz3.ab3@6660>    CMPA.w #$0,A3
00024870 <AmiBlitz3.ab3@6661>    BEQ.w 'done
00024872 <AmiBlitz3.ab3@6662>   MOVE.l D6,-(A7)
00024876 <AmiBlitz3.ab3@6663>   MOVEA.l $4(A3),A2
00024878 <AmiBlitz3.ab3@6664>   MOVEQ.l #$0E,D5
0002487C <AmiBlitz3.ab3@6665>    BSR.w writeoffs
0002487E <AmiBlitz3.ab3@6667>   MOVE.l (A7)+,D0
00024882 <AmiBlitz3.ab3@6668>   MOVE.l $4(A3),-(A7)
00024886 <AmiBlitz3.ab3@6669>   MOVE.l D0,$4(A3)
00024888 <AmiBlitz3.ab3@6670>   MOVE.l D6,D2
0002488A <AmiBlitz3.ab3@6671>   ADDQ.l #4,D2
0002488E <AmiBlitz3.ab3@6672>    BSR.w addhunkoffset
00024890 <AmiBlitz3.ab3@6673>   MOVEQ.l #$00,D3
00024894 <AmiBlitz3.ab3@6674>   MOVE.b $A(A3),D3
00024896 <AmiBlitz3.ab3@6675>   ADDQ.w #1,D3
0002489A <AmiBlitz3.ab3@6676>   BCLR #$0,D3
0002489C <AmiBlitz3.ab3@6677>   ADD.l D3,D6
0002489E <AmiBlitz3.ab3@6678>   MOVE.l A3,D2
000248A0 <AmiBlitz3.ab3@6679>   MOVE.l D7,D1
000248A6 <AmiBlitz3.ab3@6680>     MOVEA.l _dosbase,A6
000248AA <AmiBlitz3.ab3@6681>     JSR _Write(A6)
000248AE <AmiBlitz3.ab3@6682>   MOVE.l (A7)+,$4(A3)
000248B0 <AmiBlitz3.ab3@6683>   MOVEA.l (A3),A3
000248B4 <AmiBlitz3.ab3@6684>  BRA.w 'loop
000248B6 <AmiBlitz3.ab3@6687> RTS
000248BC <AmiBlitz3.ab3@6692>    TST.b resdisable
000248C0 <AmiBlitz3.ab3@6693>    BEQ 'l1
000248C6 <AmiBlitz3.ab3@6694>    MOVE.l currentlabeladdr,a2
000248CC <AmiBlitz3.ab3@6695>    CMP.l #0,a2
000248D0 <AmiBlitz3.ab3@6696>    BEQ 'l1
000248D2 <AmiBlitz3.ab3@6697>    MOVE.l (a2),a2
000248D6 <AmiBlitz3.ab3@6698>  BRA 'l2
000248DC <AmiBlitz3.ab3@6702>    MOVEA.l labelbase,A2
000248DE <AmiBlitz3.ab3@6705>    MOVEQ.l #$00,D0
000248E2 <AmiBlitz3.ab3@6708>    CMPA.w #$0,A2
000248E6 <AmiBlitz3.ab3@6709>    BEQ.w 'done
000248EE <AmiBlitz3.ab3@6710>   CMPI.l #$1,$4(A2)
000248F2 <AmiBlitz3.ab3@6711>    BNE.w 'next
000248F4 <AmiBlitz3.ab3@6712>   ADDQ.w #1,D0
000248F6 <AmiBlitz3.ab3@6715>   MOVEA.l (A2),A2
000248FA <AmiBlitz3.ab3@6716>  BRA.w 'loop
00024900 <AmiBlitz3.ab3@6719>   MOVE.w D0,temp1
00024902 <AmiBlitz3.ab3@6720>   MOVE.l D7,D1
00024908 <AmiBlitz3.ab3@6721>   MOVE.l #temp1,D2
0002490A <AmiBlitz3.ab3@6722>   MOVEQ.l #$02,D3
0002490C <AmiBlitz3.ab3@6723>   ADDQ.l #2,D6
00024912 <AmiBlitz3.ab3@6724>     MOVEA.l _dosbase,A6
00024916 <AmiBlitz3.ab3@6725>     JSR _Write(A6)
0002491C <AmiBlitz3.ab3@6727>    TST.b resdisable
00024920 <AmiBlitz3.ab3@6728>    BEQ 'done_l1
00024926 <AmiBlitz3.ab3@6729>    MOVE.l currentlabeladdr,a2
0002492C <AmiBlitz3.ab3@6730>    CMP.l #0,a2
00024930 <AmiBlitz3.ab3@6731>    BEQ 'done_l1
00024932 <AmiBlitz3.ab3@6732>    MOVE.l (a2),a2
00024936 <AmiBlitz3.ab3@6733>  BRA 'loop2
0002493C <AmiBlitz3.ab3@6737>    MOVEA.l labelbase,A2                                    ;write resident labels
00024940 <AmiBlitz3.ab3@6740>    CMPA.w #$0,A2
00024944 <AmiBlitz3.ab3@6741>    BEQ.w 'done2
0002494C <AmiBlitz3.ab3@6742>   CMPI.l #$1,$4(A2)
00024950 <AmiBlitz3.ab3@6743>    BNE.w 'next2
00024952 <AmiBlitz3.ab3@6744>    MOVEQ.l #$00,D3
00024956 <AmiBlitz3.ab3@6745>   MOVE.b $12(A2),D3                                        ;length
00024958 <AmiBlitz3.ab3@6746>   ADDQ.w #1,D3
0002495C <AmiBlitz3.ab3@6747>   BCLR #$0,D3
0002495E <AmiBlitz3.ab3@6748>   MOVE.l D6,D2
00024960 <AmiBlitz3.ab3@6749>   ADD.l D3,D6
00024962 <AmiBlitz3.ab3@6750>   MOVE.l (A2),-(A7)
00024964 <AmiBlitz3.ab3@6751>   TST.l (A2)
00024968 <AmiBlitz3.ab3@6752>    BEQ.w 'nonext
0002496A <AmiBlitz3.ab3@6753>   MOVE.l D6,(A2)
0002496E <AmiBlitz3.ab3@6754>    BSR.w addhunkoffset
00024970 <AmiBlitz3.ab3@6757>   MOVE.l A2,D2
00024972 <AmiBlitz3.ab3@6758>   MOVE.l D7,D1
00024978 <AmiBlitz3.ab3@6759>     MOVEA.l _dosbase,A6
0002497C <AmiBlitz3.ab3@6760>     JSR _Write(A6)
0002497E <AmiBlitz3.ab3@6761>   MOVE.l (A7)+,(A2)
00024980 <AmiBlitz3.ab3@6764>   MOVEA.l (A2),A2
00024984 <AmiBlitz3.ab3@6765>  BRA.w 'loop2
00024986 <AmiBlitz3.ab3@6768> RTS
000249B0 <AmiBlitz3.ab3@6773>    !basic
000249B6 <AmiBlitz3.ab3@6774>     MOVE.l ptr_resfile,d0
000249C6 <AmiBlitz3.ab3@6775>     resfileP.l = Peek.l(?ptr_resfile)
000249D0 <AmiBlitz3.ab3@6776>     If resfileP
000249F8 <AmiBlitz3.ab3@6777>       resfile$ = Peek.s(resfileP)
00024A44 <AmiBlitz3.ab3@6778>       tests.b = Instr(resfile$,"/")
00024A90 <AmiBlitz3.ab3@6779>       testc.b = Instr(resfile$,":")
00024AB2 <AmiBlitz3.ab3@6780>       If tests=0 AND testc=0
00024B32 <AmiBlitz3.ab3@6781>         resfile$ = dos_AddPart{my_residentsdir$,resfile$}
00024B44 <AmiBlitz3.ab3@6782>         Poke.l ?ptr_resfile,&resfile$
00024B4A <AmiBlitz3.ab3@6784>     Else
00024B84 <AmiBlitz3.ab3@6785>       error{"INTERNAL: Invalid pointer in ptr_resfile!"}
00024BA2 <AmiBlitz3.ab3@6787>    !asm
00024BA4 <AmiBlitz3.ab3@6788> RTS
00024BAA <AmiBlitz3.ab3@6795> 
00024BB0 <AmiBlitz3.ab3@6796>   MOVE.l A7,errstack
00024BBA <AmiBlitz3.ab3@6800>   MOVE.l #'next,errcont
00024BC2 <AmiBlitz3.ab3@6801>   MOVE.w #$FFFF,ezerr         ; was -1
00024BC6 <AmiBlitz3.ab3@6803>   BSR.w Aclearallvars
00024BCA <AmiBlitz3.ab3@6804>   BSR.w free_residents
00024BD0 <AmiBlitz3.ab3@6806>   LEA residents_table,A5
00024BD2 <AmiBlitz3.ab3@6807>   MOVEQ.l #$07,D6
00024BD4 <AmiBlitz3.ab3@6810>     TST.b (A5)
00024BD8 <AmiBlitz3.ab3@6811>     BEQ.w 'next
00024BDE <AmiBlitz3.ab3@6812>     MOVE.l A5,ptr_resfile
00024BE2 <AmiBlitz3.ab3@6813>     BSR check_residentpath
00024BE8 <AmiBlitz3.ab3@6814>     MOVE.l ptr_resfile,d1
00024BEE <AmiBlitz3.ab3@6815>     MOVEA.l _dosbase,A6
00024BF2 <AmiBlitz3.ab3@6816>     JSR _LoadSeg(A6)
00024BF6 <AmiBlitz3.ab3@6817>     MOVE.l D0,$40(A5)
00024BFA <AmiBlitz3.ab3@6818>     BNE.w 'yeah
00024BFE <AmiBlitz3.ab3@6820>     BSR.w reserr
00024C00 <AmiBlitz3.ab3@6824>     MOVEA.l D0,A3
00024C02 <AmiBlitz3.ab3@6825>     ADDA.l A3,A3
00024C04 <AmiBlitz3.ab3@6826>     ADDA.l A3,A3
00024C06 <AmiBlitz3.ab3@6827>     ADDQ.w #4,A3                                           ;start of res
00024C0A <AmiBlitz3.ab3@6829>     BSR.w fixtypes
00024C0E <AmiBlitz3.ab3@6830>     BSR.w fixmacs                                        ;add macros to list
00024C12 <AmiBlitz3.ab3@6831>     BSR.w fixconsts                                        ;read labels
00024C16 <AmiBlitz3.ab3@6834>     LEA ResidentEntryStep(A5),A5       ;$44
00024C1A <AmiBlitz3.ab3@6835>   DBF D6,'loop
00024C24 <AmiBlitz3.ab3@6840>   MOVE.l #free_residents,errcont
00024C2A <AmiBlitz3.ab3@6842>   MOVEA.l newtype_string,A3
00024C2C <AmiBlitz3.ab3@6843>   MOVEQ.l #$0B,D7
00024C30 <AmiBlitz3.ab3@6844>   BSR.w checkclash
00024C36 <AmiBlitz3.ab3@6846>   MOVEA.l macrobase,A3
00024C38 <AmiBlitz3.ab3@6847>   MOVEQ.l #$d,D7
00024C3C <AmiBlitz3.ab3@6848>   BSR.w checkclash
00024C42 <AmiBlitz3.ab3@6850>   MOVEA.l firstconst,A3
00024C44 <AmiBlitz3.ab3@6851>   MOVEQ.l #$19,D7
00024C48 <AmiBlitz3.ab3@6852>   BSR.w checkclash
00024C4A <AmiBlitz3.ab3@6855> RTS
00024C4C <AmiBlitz3.ab3@6859>   MOVEA.l A3,A4
00024C50 <AmiBlitz3.ab3@6862>     CMPA.w #$0,A4
00024C54 <AmiBlitz3.ab3@6863>     BEQ.w 'done
00024C5A <AmiBlitz3.ab3@6865>     LEA ptr_parameterstore,A0
00024C5E <AmiBlitz3.ab3@6866>     LEA $0(A4,D7.W),A1
00024C60 <AmiBlitz3.ab3@6867>     MOVEQ.l #-$01,D2
00024C62 <AmiBlitz3.ab3@6870>       ADDQ.w #1,D2
00024C64 <AmiBlitz3.ab3@6871>       MOVE.b (A1)+,(A0)+
00024C68 <AmiBlitz3.ab3@6872>     BNE.w 'loop2
00024C6A <AmiBlitz3.ab3@6873>     MOVEA.l A3,A2
00024C6E <AmiBlitz3.ab3@6876>     BSR.w findlab
00024C72 <AmiBlitz3.ab3@6877>     BNE.w 'next                                  ;not found
00024C74 <AmiBlitz3.ab3@6878>     CMPA.l A2,A4
00024C78 <AmiBlitz3.ab3@6880>     BEQ.w 'l1
00024C7A <AmiBlitz3.ab3@6881>     MOVE.l a1,a5
00024C7E <AmiBlitz3.ab3@6883>  BRA clasherr      ; was bne
00024C82 <AmiBlitz3.ab3@6886>  BRA.w 'more
00024C84 <AmiBlitz3.ab3@6889>     MOVEA.l (A4),A4
00024C88 <AmiBlitz3.ab3@6890>  BRA.w 'loop
00024C8A <AmiBlitz3.ab3@6893> RTS
00024C90 <AmiBlitz3.ab3@6897>   MOVEA.l _dosbase,A6
00024C96 <AmiBlitz3.ab3@6899>   LEA newtype_string,A0
00024C9C <AmiBlitz3.ab3@6900>   MOVE.l A0,lastrestype
00024C9E <AmiBlitz3.ab3@6901>   CLR.l (A0)
00024CA4 <AmiBlitz3.ab3@6903>   LEA macrobase,A0
00024CAA <AmiBlitz3.ab3@6904>   MOVE.l A0,currentmacroaddr
00024CAC <AmiBlitz3.ab3@6905>   CLR.l (A0)
00024CB2 <AmiBlitz3.ab3@6907>   LEA labelbase,A0
00024CB8 <AmiBlitz3.ab3@6908>   MOVE.l A0,currentlabeladdr
00024CBA <AmiBlitz3.ab3@6909>   CLR.l (A0)
00024CC0 <AmiBlitz3.ab3@6910>   CLR.w rescnt
00024CF8 <AmiBlitz3.ab3@6914>   !ComData_SetB{comByte_DebugMode,debugmode}
00024CFE <AmiBlitz3.ab3@6917>   LEA residents_table,A2
00024D00 <AmiBlitz3.ab3@6918>   MOVEQ.l #$07,D2
00024D04 <AmiBlitz3.ab3@6921>      MOVE.l $40(A2),D1
00024D08 <AmiBlitz3.ab3@6922>      BEQ.w 'next
00024D0C <AmiBlitz3.ab3@6923>       CLR.l $40(A2)
00024D12 <AmiBlitz3.ab3@6924>       MOVEA.l _dosbase,A6
00024D16 <AmiBlitz3.ab3@6925>       JSR _UnLoadSeg(A6)
00024D1A <AmiBlitz3.ab3@6928>      LEA ResidentEntryStep(A2),A2   ; $44
00024D1E <AmiBlitz3.ab3@6929>  DBF D2,'loop
00024D20 <AmiBlitz3.ab3@6931> RTS
00024D22 <AmiBlitz3.ab3@6935>   MOVE.w (A3)+,D1
00024D26 <AmiBlitz3.ab3@6936>   BEQ.w 'done
00024D2C <AmiBlitz3.ab3@6937>   MOVEA.l currentlabeladdr,A2
00024D2E <AmiBlitz3.ab3@6938>   MOVE.l A3,(A2)
00024D30 <AmiBlitz3.ab3@6939>   SUBQ.w #1,D1
00024D32 <AmiBlitz3.ab3@6942>     MOVEA.l A3,A2
00024D34 <AmiBlitz3.ab3@6943>     MOVEA.l (A3),A3
00024D38 <AmiBlitz3.ab3@6944>   DBF D1,'loop
00024D3A <AmiBlitz3.ab3@6947>   CLR.l (a2)                                               ;bugfix for object
00024D40 <AmiBlitz3.ab3@6949>   MOVE.l A2,currentlabeladdr
00024D42 <AmiBlitz3.ab3@6950>   MOVEA.l A2,A3
00024D44 <AmiBlitz3.ab3@6951>   MOVEQ.l #$00,D0
00024D48 <AmiBlitz3.ab3@6952>   MOVE.b $12(A3),D0
00024D4A <AmiBlitz3.ab3@6953>   ADDQ.w #1,D0
00024D4E <AmiBlitz3.ab3@6954>   BCLR #$0,D0
00024D50 <AmiBlitz3.ab3@6955>   ADDA.w D0,A3
00024D52 <AmiBlitz3.ab3@6958> RTS
00024D54 <AmiBlitz3.ab3@6962>   MOVE.w (A3)+,D1
00024D58 <AmiBlitz3.ab3@6963>   BEQ.w 'done
00024D5E <AmiBlitz3.ab3@6964>   MOVEA.l currentmacroaddr,A2
00024D60 <AmiBlitz3.ab3@6965>   MOVE.l A3,(A2)
00024D62 <AmiBlitz3.ab3@6966>   SUBQ.w #1,D1
00024D64 <AmiBlitz3.ab3@6969>     MOVEA.l A3,A2
00024D66 <AmiBlitz3.ab3@6970>     MOVEA.l (A3),A3
00024D6A <AmiBlitz3.ab3@6971>   DBF D1,'loop
00024D70 <AmiBlitz3.ab3@6973>   MOVE.l A2,currentmacroaddr
00024D72 <AmiBlitz3.ab3@6974>   MOVEA.l A2,A3
00024D74 <AmiBlitz3.ab3@6975>   MOVEQ.l #$00,D0
00024D78 <AmiBlitz3.ab3@6976>   MOVE.b $C(A3),D0
00024D7A <AmiBlitz3.ab3@6977>   ADDQ.w #1,D0
00024D7E <AmiBlitz3.ab3@6978>   BCLR #$0,D0
00024D82 <AmiBlitz3.ab3@6979>   MOVE.w $8(A3),D1
00024D84 <AmiBlitz3.ab3@6980>   ADDQ.w #1,D1
00024D88 <AmiBlitz3.ab3@6981>   BCLR #$0,D1
00024D8A <AmiBlitz3.ab3@6982>   ADDA.w D0,A3
00024D8C <AmiBlitz3.ab3@6983>   ADDA.w D1,A3
00024D8E <AmiBlitz3.ab3@6986> RTS
00024D90 <AmiBlitz3.ab3@6991>   MOVE.w (A3)+,D1            ;number of types to do
00024D94 <AmiBlitz3.ab3@6992>   BEQ.w 'done
00024D96 <AmiBlitz3.ab3@6993>   MOVE.w D1,-(A7)
00024D98 <AmiBlitz3.ab3@6994>   SUBQ.w #1,D1
00024D9E <AmiBlitz3.ab3@6995>   MOVEA.l lastrestype,A2
00024DA0 <AmiBlitz3.ab3@6996>   MOVE.l A2,-(A7)
00024DA2 <AmiBlitz3.ab3@6999>       MOVE.l (A3),D0          ;skip through offsets
00024DA6 <AmiBlitz3.ab3@7000>       BEQ.w 'loopme
00024DA8 <AmiBlitz3.ab3@7001>       MOVEA.l D0,A3
00024DAC <AmiBlitz3.ab3@7002>  BRA.w 'loop
00024DB0 <AmiBlitz3.ab3@7005>       MOVE.b $E(A3),D0
00024DB2 <AmiBlitz3.ab3@7006>       ADDQ.w #1,D0
00024DB6 <AmiBlitz3.ab3@7007>       BCLR #$0,D0
00024DB8 <AmiBlitz3.ab3@7008>       ADDA.w D0,A3            ;a3=type
00024DBA <AmiBlitz3.ab3@7009>       MOVE.l A3,(A2)          ;link
00024DBC <AmiBlitz3.ab3@7010>       MOVEA.l A3,A2
00024DBE <AmiBlitz3.ab3@7011>       MOVEQ.l #$00,D0
00024DC2 <AmiBlitz3.ab3@7012>       MOVE.b $A(A3),D0
00024DC4 <AmiBlitz3.ab3@7013>       ADDQ.w #1,D0
00024DC8 <AmiBlitz3.ab3@7014>       BCLR #$0,D0
00024DCA <AmiBlitz3.ab3@7015>       ADDA.w D0,A3            ;next offset
00024DCE <AmiBlitz3.ab3@7016>   DBF D1,'loop
00024DD0 <AmiBlitz3.ab3@7020>   MOVEA.l (A7)+,A0
00024DD2 <AmiBlitz3.ab3@7021>   MOVEA.l (A0),A0
00024DD6 <AmiBlitz3.ab3@7024>     CMPA.w #$0,A0
00024DDA <AmiBlitz3.ab3@7025>     BEQ.w 'fdone
00024DDE <AmiBlitz3.ab3@7026>     MOVEA.l $4(A0),A1          ;first offset!
00024DE2 <AmiBlitz3.ab3@7029>     CMPA.w #$0,A1
00024DE6 <AmiBlitz3.ab3@7030>     BEQ.w 'fofd
00024DEA <AmiBlitz3.ab3@7032>     MOVE.w $A(A1),D0           ;number of type
00024DF0 <AmiBlitz3.ab3@7033>     MOVEA.l newtypebase,A4
00024DF4 <AmiBlitz3.ab3@7034>     CMP.w #$7,D0
00024DF8 <AmiBlitz3.ab3@7035>     BCS.w 'fsys
00024DFE <AmiBlitz3.ab3@7036>     SUB.w rescnt,D0
00024E00 <AmiBlitz3.ab3@7039>     SUBQ.w #1,D0
00024E04 <AmiBlitz3.ab3@7040>     BMI.w 'fdone2
00024E06 <AmiBlitz3.ab3@7043>        MOVEA.l (A4),A4
00024E0A <AmiBlitz3.ab3@7044>   DBF D0,'floop3
00024E0E <AmiBlitz3.ab3@7047>     MOVE.l A4,$A(A1)
00024E10 <AmiBlitz3.ab3@7048>     MOVEA.l (A1),A1
00024E14 <AmiBlitz3.ab3@7049>  BRA.w 'floop2
00024E16 <AmiBlitz3.ab3@7052>     MOVEA.l (A0),A0
00024E1A <AmiBlitz3.ab3@7053>  BRA.w 'floop
00024E1C <AmiBlitz3.ab3@7056>   MOVE.w (A7)+,D0
00024E22 <AmiBlitz3.ab3@7057>   ADD.w D0,rescnt
00024E28 <AmiBlitz3.ab3@7058>   MOVE.l A2,lastrestype
00024E2A <AmiBlitz3.ab3@7061> RTS
00024E30 <AmiBlitz3.ab3@7068>   LEA tokens,A0
00024E34 <AmiBlitz3.ab3@7069>   MOVE.w #$003A,D0                                         ; $003A : 58 dec
00024E36 <AmiBlitz3.ab3@7072>     MOVEA.l (A0),A0
00024E3A <AmiBlitz3.ab3@7073>   DBF D0,'loop
00024E40 <AmiBlitz3.ab3@7075>   MOVEA.l #asmpnts,A1                                      ;create tokentab
00024E44 <AmiBlitz3.ab3@7076>   MOVE.w #$0076,D0        ; was #tnum-fnum-1,                                 ; $0076 : 118 dec
00024E48 <AmiBlitz3.ab3@7079>       LEA $6(A0),A2
00024E4A <AmiBlitz3.ab3@7082>         TST.b (A2)+
00024E4E <AmiBlitz3.ab3@7083>       BNE.w 'loop3
00024E50 <AmiBlitz3.ab3@7086>         TST.b (A2)+
00024E54 <AmiBlitz3.ab3@7087>       BNE.w 'loop4
00024E56 <AmiBlitz3.ab3@7089>       ADDQ.w #1,A2
00024E58 <AmiBlitz3.ab3@7090>       EXG.l D1,A2
00024E5C <AmiBlitz3.ab3@7091>       BCLR #$0,D1
00024E5E <AmiBlitz3.ab3@7092>       EXG.l D1,A2
00024E60 <AmiBlitz3.ab3@7093>       MOVE.l A2,(A1)+
00024E62 <AmiBlitz3.ab3@7094>       MOVEA.l (A0),A0
00024E66 <AmiBlitz3.ab3@7095>   DBF D0,'loop2
00024E68 <AmiBlitz3.ab3@7096> RTS
00024E6C <AmiBlitz3.ab3@7100>   BSR.w asmconst
00024E6E <AmiBlitz3.ab3@7101>   MOVEQ.l #$0B,D5
00024E70 <AmiBlitz3.ab3@7102> RTS
00024E72 <AmiBlitz3.ab3@7105> unmove:  Ds.w 1
00024E76 <AmiBlitz3.ab3@7109>   MOVE.w #$48E7,D1
00024E7A <AmiBlitz3.ab3@7110>   BSR.w writeword                                          ;movem.l -(a7)
00024E7E <AmiBlitz3.ab3@7111>   MOVE.w #$000F,D2
00024E80 <AmiBlitz3.ab3@7112>   SUB.w D4,D2
00024E82 <AmiBlitz3.ab3@7113>   MOVEQ.l #-$01,D1
00024E84 <AmiBlitz3.ab3@7114>   BCLR D2,D1
00024E88 <AmiBlitz3.ab3@7115>   BSR.w writeword
00024E8A <AmiBlitz3.ab3@7116>   MOVEQ.l #-$01,D1
00024E8C <AmiBlitz3.ab3@7117>   BCLR D4,D1
00024E92 <AmiBlitz3.ab3@7118>   MOVE.w D1,unmove
00024E94 <AmiBlitz3.ab3@7119> RTS
00024E98 <AmiBlitz3.ab3@7123>   MOVE.w #$4CDF,D1
00024E9C <AmiBlitz3.ab3@7124>   BSR.w writeword
00024EA0 <AmiBlitz3.ab3@7125>   MOVE.w unmove(PC),D1
00024EA4 <AmiBlitz3.ab3@7126>  BRA.w writeword
00024EA8 <AmiBlitz3.ab3@7139>   BSR.w get_reg2
00024EAC <AmiBlitz3.ab3@7140>   CMP.w #$2C,D0                                            ;#','
00024EB0 <AmiBlitz3.ab3@7141>    BNE.w syntaxerr
00024EB6 <AmiBlitz3.ab3@7142>   MOVE.l #$48E7FFFE,D1                                     ;movem to stack
00024EBA <AmiBlitz3.ab3@7143>    BSR.w writelong
00024EBC <AmiBlitz3.ab3@7144>   MOVE.w D4,D1
00024EC0 <AmiBlitz3.ab3@7145>   ORI.w #$2F00,D1
00024EC4 <AmiBlitz3.ab3@7146>    BSR.w writeword
00024EC8 <AmiBlitz3.ab3@7148>    BSR.w get1bytemain
00024ECC <AmiBlitz3.ab3@7149>    BSR.w getparameter
00024ED0 <AmiBlitz3.ab3@7150>    BSR.w fetchvars
00024ED4 <AmiBlitz3.ab3@7151>    BSR.w calcvar
00024ED8 <AmiBlitz3.ab3@7152>    BTST #$E,D2
00024EDC <AmiBlitz3.ab3@7153>    BEQ.w 'notp
00024EE0 <AmiBlitz3.ab3@7156>    MOVE.b #$3,D2
00024EE4 <AmiBlitz3.ab3@7157>  BRA.w 'pd
00024EE6 <AmiBlitz3.ab3@7160>   TST.b D2
00024EEA <AmiBlitz3.ab3@7161>    BEQ.w 'issa
00024EEE <AmiBlitz3.ab3@7162>   CMP.b #$7,D2
00024EF2 <AmiBlitz3.ab3@7163>    BEQ.w 'issa
00024EF6 <AmiBlitz3.ab3@7166>   BTST #$F,D2
00024EFA <AmiBlitz3.ab3@7167>    BNE.w 'nsimp
00024EFE <AmiBlitz3.ab3@7168>   MOVE.w #$45ED,D1                                         ;lea x(a5),a2
00024F02 <AmiBlitz3.ab3@7169>    BSR.w writeword
00024F04 <AmiBlitz3.ab3@7170>   MOVE.w D3,D1
00024F08 <AmiBlitz3.ab3@7171>    BSR.w writeword
00024F0C <AmiBlitz3.ab3@7174>   MOVE.w #$201F,D1                                         ;move.l (a7)+,d0
00024F10 <AmiBlitz3.ab3@7175>    BSR.w writeword
00024F14 <AmiBlitz3.ab3@7176>   MOVE.w #$1480,D1
00024F18 <AmiBlitz3.ab3@7177>   CMP.b #$1,D2
00024F1C <AmiBlitz3.ab3@7178>    BEQ.w 'pg
00024F20 <AmiBlitz3.ab3@7179>   EORI.w #$3000,D1
00024F24 <AmiBlitz3.ab3@7180>   CMP.b #$2,D2
00024F28 <AmiBlitz3.ab3@7181>    BNE.w 'pg
00024F2C <AmiBlitz3.ab3@7182>   ORI.w #$1000,D1
00024F30 <AmiBlitz3.ab3@7185>   BSR.w writeword
00024F36 <AmiBlitz3.ab3@7186>   MOVE.l #$4CDF7FFF,D1
00024F3A <AmiBlitz3.ab3@7187> BRA.w writelong
00024F3E <AmiBlitz3.ab3@7191>   BSR.w get_reg2
00024F42 <AmiBlitz3.ab3@7192>   CMP.w #$2C,D0     ;','
00024F46 <AmiBlitz3.ab3@7193>    BNE.w syntaxerr
00024F4A <AmiBlitz3.ab3@7194>    BSR.w regmovems
00024F4C <AmiBlitz3.ab3@7195>   MOVE.w D4,-(A7)
00024F4E <AmiBlitz3.ab3@7196>   MOVEQ.l #$03,D2   ;get a long
00024F52 <AmiBlitz3.ab3@7197>    BSR.w eval
00024F54 <AmiBlitz3.ab3@7198>   MOVE.w (A7)+,D1
00024F58 <AmiBlitz3.ab3@7199>    BEQ.w 'done
00024F5C <AmiBlitz3.ab3@7200>   CMP.w #$8,D1
00024F60 <AmiBlitz3.ab3@7201>    BCC.w 'addreg
00024F62 <AmiBlitz3.ab3@7202>   LSL.w #8,D1
00024F64 <AmiBlitz3.ab3@7203>   LSL.w #1,D1
00024F68 <AmiBlitz3.ab3@7204>   ORI.w #$2000,D1
00024F6C <AmiBlitz3.ab3@7205>    BSR.w writeword
00024F70 <AmiBlitz3.ab3@7206>  BRA.w 'done
00024F72 <AmiBlitz3.ab3@7209>   SUBQ.w #8,D1
00024F74 <AmiBlitz3.ab3@7210>   LSL.w #8,D1
00024F76 <AmiBlitz3.ab3@7211>   LSL.w #1,D1
00024F7A <AmiBlitz3.ab3@7212>   ORI.w #$2040,D1
00024F7E <AmiBlitz3.ab3@7213>   BSR.w writeword
00024F82 <AmiBlitz3.ab3@7216> BRA.w dounmove
00024F86 <AmiBlitz3.ab3@7221>   BSR.w get1bytemain
00024F8A <AmiBlitz3.ab3@7224>   ORI.w #$20,D0
00024F8E <AmiBlitz3.ab3@7225>   CMP.w #$64,D0       ;'d'
00024F92 <AmiBlitz3.ab3@7226>    BEQ.w getan3
00024F96 <AmiBlitz3.ab3@7227>   CMP.w #$61,D0       ;'a'
00024F9A <AmiBlitz3.ab3@7228>    BNE.w syntaxerr
00024F9E <AmiBlitz3.ab3@7229>    BSR.w getan3
00024FA0 <AmiBlitz3.ab3@7230>   ADDQ.w #8,D4
00024FA2 <AmiBlitz3.ab3@7231> RTS
00024FCE <AmiBlitz3.ab3@7236>   !fget                                                   ;bsr.w get1bytemain
00024FD2 <AmiBlitz3.ab3@7238>   ORI.w #$20,D0
00024FD6 <AmiBlitz3.ab3@7241>   CMP.w #$61,D0     ;'a'
00024FDA <AmiBlitz3.ab3@7242>   BNE.w syntaxerr
00025006 <AmiBlitz3.ab3@7246>   !fget                                                    ;bsr.w get1bytemain
0002500A <AmiBlitz3.ab3@7248>   SUBI.w #$30,D0
0002500E <AmiBlitz3.ab3@7249>    BMI.w syntaxerr
00025012 <AmiBlitz3.ab3@7250>   CMP.w #$7,D0
00025016 <AmiBlitz3.ab3@7251>    BHI.w syntaxerr
00025018 <AmiBlitz3.ab3@7252>   MOVE.w D0,D4
00025044 <AmiBlitz3.ab3@7254>   !fget
00025046 <AmiBlitz3.ab3@7256> RTS                                                        ;bra.w get1bytemain
00025048 <AmiBlitz3.ab3@7260>   ADDQ.w #8,D4
0002504A <AmiBlitz3.ab3@7263>   MOVEQ.l #$00,D5    ;bits for reg
0002504E <AmiBlitz3.ab3@7264>   SUBI.w #$30,D4
00025052 <AmiBlitz3.ab3@7267>   CMP.w #$2D,D0      ;'-'
00025056 <AmiBlitz3.ab3@7268>    BEQ.w 'range
0002505A <AmiBlitz3.ab3@7269>   CMP.w #$2F,D0      ;'/'
0002505E <AmiBlitz3.ab3@7270>    BEQ.w 'one
00025062 <AmiBlitz3.ab3@7271>  BRA.w syntaxerr
00025064 <AmiBlitz3.ab3@7274>   BSET D4,D5
00025066 <AmiBlitz3.ab3@7277>   MOVE.w D5,D4
00025068 <AmiBlitz3.ab3@7278>   MOVEQ.l #$0F,D5
0002506A <AmiBlitz3.ab3@7279>  RTS
0002506C <AmiBlitz3.ab3@7282>   BSET D4,D5
00025070 <AmiBlitz3.ab3@7283>   BSR.w get_reg
00025082 <AmiBlitz3.ab3@7285>   !compare3                                                ;bsr.w tstend2
00025086 <AmiBlitz3.ab3@7287>   BNE.w 'loop
0002508A <AmiBlitz3.ab3@7288>  BRA.w 'done2
0002508C <AmiBlitz3.ab3@7291>   MOVE.w D4,D1    ;from
00025090 <AmiBlitz3.ab3@7292>    BSR.w get_reg
00025092 <AmiBlitz3.ab3@7293>   CMP.w D4,D1
00025096 <AmiBlitz3.ab3@7294>    BLS.w 'loop2
00025098 <AmiBlitz3.ab3@7295>   EXG.l D4,D1
0002509A <AmiBlitz3.ab3@7298>   BSET D1,D5
0002509C <AmiBlitz3.ab3@7299>   ADDQ.w #1,D1
0002509E <AmiBlitz3.ab3@7300>   CMP.w D4,D1
000250A2 <AmiBlitz3.ab3@7301>    BLS.w 'loop2
000250B4 <AmiBlitz3.ab3@7303>   !compare3                                                ;bsr.w tstend2
000250B8 <AmiBlitz3.ab3@7305>   BNE.w 'loop
000250BC <AmiBlitz3.ab3@7306> BRA.w 'done
000250BE <AmiBlitz3.ab3@7312>   MOVEA.l A5,A4                                            ;bsr.w get1bytemain
000250EA <AmiBlitz3.ab3@7314>    !fget
000250EE <AmiBlitz3.ab3@7316>   CMP.w #$23,D0       ;'#'
000250F2 <AmiBlitz3.ab3@7317>    BEQ.w getimm
000250F6 <AmiBlitz3.ab3@7318>   CMP.w #$28,D0       ;'('
000250FA <AmiBlitz3.ab3@7319>    BEQ.w 'ind
000250FE <AmiBlitz3.ab3@7320>   CMP.w #$2D,D0       ;'-'
00025102 <AmiBlitz3.ab3@7321>    BNE.w 'more
0002512E <AmiBlitz3.ab3@7323>    !fget                                                   ;bsr.w get1bytemain       -(
00025132 <AmiBlitz3.ab3@7325>   CMP.w #$28,D0       ;'('
00025136 <AmiBlitz3.ab3@7326>    BNE.w 'notccr
0002513A <AmiBlitz3.ab3@7327>    BSR.w getan
0002513E <AmiBlitz3.ab3@7328>   CMP.w #$29,D0       ;')'
00025142 <AmiBlitz3.ab3@7329>    BNE.w syntaxerr
00025144 <AmiBlitz3.ab3@7330>   MOVEQ.l #$04,D5
00025170 <AmiBlitz3.ab3@7332>   !fget                                                    ;bsr.w get1bytemain  
00025172 <AmiBlitz3.ab3@7333>  RTS
00025176 <AmiBlitz3.ab3@7337>   BSR.w getan
0002517A <AmiBlitz3.ab3@7338>   CMP.w #$29,D0      ;')'
0002517E <AmiBlitz3.ab3@7339>    BNE.w syntaxerr
000251AA <AmiBlitz3.ab3@7341>   !fget
000251AE <AmiBlitz3.ab3@7343>   CMP.w #$2B,D0      ;'+'
000251B2 <AmiBlitz3.ab3@7344>    BEQ.w 'postinc
000251B4 <AmiBlitz3.ab3@7345>   MOVEQ.l #$02,D5
000251B6 <AmiBlitz3.ab3@7346>  RTS
000251B8 <AmiBlitz3.ab3@7349>   MOVEQ.l #$03,D5
000251E4 <AmiBlitz3.ab3@7351>   !fget                                                    ;bra.w get1bytemain
000251E6 <AmiBlitz3.ab3@7352>  RTS
000251EA <AmiBlitz3.ab3@7356>   ORI.w #$20,D0
000251EC <AmiBlitz3.ab3@7357>   MOVE.w D0,D1      ;first
00025218 <AmiBlitz3.ab3@7359>    !fget                                                   ;bsr.w get1bytemain  ;get second
0002521C <AmiBlitz3.ab3@7361>   CMP.w #$64,D1     ;'d'
00025220 <AmiBlitz3.ab3@7362>    BNE.w 'notdn
00025224 <AmiBlitz3.ab3@7363>   CMP.w #$30,D0     ;'0'
00025228 <AmiBlitz3.ab3@7364>    BCS.w 'notan
0002522C <AmiBlitz3.ab3@7365>   CMP.w #$37,D0     ;'7'
00025230 <AmiBlitz3.ab3@7366>    BHI.w 'notan
00025232 <AmiBlitz3.ab3@7367>   MOVE.w D0,D4
0002525E <AmiBlitz3.ab3@7369>    !fget                                                   ;bsr.w get1bytemain
00025270 <AmiBlitz3.ab3@7370>    !compare3                                               ;bsr.w tstend2
00025274 <AmiBlitz3.ab3@7372>    BEQ.w 'dn
00025278 <AmiBlitz3.ab3@7373>   CMP.w #$2D,D0     ;'-'
0002527C <AmiBlitz3.ab3@7374>    BEQ.w getmovem
00025280 <AmiBlitz3.ab3@7375>   CMP.w #$2F,D0     ;'/'
00025284 <AmiBlitz3.ab3@7376>    BEQ.w getmovem
00025288 <AmiBlitz3.ab3@7377>  BRA.w 'notan2
0002528A <AmiBlitz3.ab3@7380>   MOVEQ.l #$00,D5
0002528E <AmiBlitz3.ab3@7381>   SUBI.w #$30,D4
00025290 <AmiBlitz3.ab3@7382>  RTS
00025294 <AmiBlitz3.ab3@7385>    CMP.w #$61,D1    ;'a'
00025298 <AmiBlitz3.ab3@7386>    BNE.w 'notan
0002529C <AmiBlitz3.ab3@7388>   CMP.w #$30,D0     ;'0'
000252A0 <AmiBlitz3.ab3@7389>    BCS.w 'notan
000252A4 <AmiBlitz3.ab3@7390>   CMP.w #$37,D0     ;'7'
000252A8 <AmiBlitz3.ab3@7391>    BHI.w 'notan
000252AA <AmiBlitz3.ab3@7392>   MOVE.w D0,D4
000252D6 <AmiBlitz3.ab3@7394>    !fget                                                   ;bsr.w get1bytemain
000252E8 <AmiBlitz3.ab3@7395>    !compare3                                               ;bsr.w tstend2
000252EC <AmiBlitz3.ab3@7397>    BEQ.w 'an
000252F0 <AmiBlitz3.ab3@7398>   CMP.w #$2D,D0     ;'-'
000252F4 <AmiBlitz3.ab3@7399>    BEQ.w getmovem2                                         ;movem
000252F8 <AmiBlitz3.ab3@7400>   CMP.w #$2F,D0     ;'/'
000252FC <AmiBlitz3.ab3@7401>    BEQ.w getmovem2
00025300 <AmiBlitz3.ab3@7402>  BRA.w 'notan2
00025302 <AmiBlitz3.ab3@7408>   MOVEQ.l #1,d5
00025306 <AmiBlitz3.ab3@7409>   SUBI.w #$30,D4
0002530A <AmiBlitz3.ab3@7411>   BRA 'l10
0002530C <AmiBlitz3.ab3@7412>   ADDQ.w #8,d4                             ; ??? looks like dead code ???
0002530E <AmiBlitz3.ab3@7413>   MOVEQ #0,d5                              ;   "
00025310 <AmiBlitz3.ab3@7414>   BSET d4,d5                               ;   "
00025312 <AmiBlitz3.ab3@7415>   MOVE.w d5,d4                             ;   "
00025314 <AmiBlitz3.ab3@7416>   MOVEQ.l #$0f,D5                          ;   "             ;01
00025316 <AmiBlitz3.ab3@7420>  RTS
0002531A <AmiBlitz3.ab3@7423>   ORI.w #$20,D0
0002531C <AmiBlitz3.ab3@7424>   MOVE.w D0,D4
00025348 <AmiBlitz3.ab3@7425>    !fget                                                   ;bsr.w get1bytemain ;get third
0002535A <AmiBlitz3.ab3@7430>   !compare3                                                ;bsr.w tstend2
0002535E <AmiBlitz3.ab3@7432>    BNE.w 'notsx
00025362 <AmiBlitz3.ab3@7433>   CMP.w #$73,D1       ;'s'
00025366 <AmiBlitz3.ab3@7434>    BNE.w 'notsx
0002536A <AmiBlitz3.ab3@7435>   CMP.w #$70,D4       ;'p'
0002536E <AmiBlitz3.ab3@7436>    BNE.w 'notsp
00025380 <AmiBlitz3.ab3@7438>    !compare3                                               ;bsr.w tstend2
00025384 <AmiBlitz3.ab3@7440>    BNE.w 'notccr
00025386 <AmiBlitz3.ab3@7444>   MOVEQ.l #$07,D4
00025388 <AmiBlitz3.ab3@7445>   MOVEQ.l #$01,D5
0002538A <AmiBlitz3.ab3@7446>  RTS
0002538E <AmiBlitz3.ab3@7449>   CMP.w #$72,D4      ;'r'
00025392 <AmiBlitz3.ab3@7450>    BNE.w 'notccr
000253A4 <AmiBlitz3.ab3@7452>    !compare3                                               ;bsr.w tstend2
000253A8 <AmiBlitz3.ab3@7454>    BNE.w 'notccr
000253AA <AmiBlitz3.ab3@7455>   MOVEQ.l #$0D,D5
000253AC <AmiBlitz3.ab3@7456>  RTS
000253B0 <AmiBlitz3.ab3@7459>   ORI.w #$20,D0
000253B4 <AmiBlitz3.ab3@7460>   CMP.w #$63,D1      ;'c'
000253B8 <AmiBlitz3.ab3@7461>    BNE.w 'notccr0
000253BC <AmiBlitz3.ab3@7462>   CMP.w #$63,D4      ;'c'
000253C0 <AmiBlitz3.ab3@7463>    BNE.w 'notccr
000253C4 <AmiBlitz3.ab3@7464>   CMP.w #$72,D0      ;'r'
000253C8 <AmiBlitz3.ab3@7465>    BNE.w 'notccr
000253CC <AmiBlitz3.ab3@7466>    BSR.w get1bytemain                                      ;??wy not !fget
000253D0 <AmiBlitz3.ab3@7467>    BEQ.w 'ccr
000253D4 <AmiBlitz3.ab3@7468>   CMP.w #$2C,D0
000253D8 <AmiBlitz3.ab3@7469>    BNE.w 'notccr
000253DA <AmiBlitz3.ab3@7475>   MOVEQ.l #$0C,D5
000253DC <AmiBlitz3.ab3@7476>  RTS
000253E0 <AmiBlitz3.ab3@7479>   CMP.w #$75,D1      ;'u'
000253E4 <AmiBlitz3.ab3@7480>    BNE.w 'notccr
000253E8 <AmiBlitz3.ab3@7481>   CMP.w #$73,D4      ;'s'
000253EC <AmiBlitz3.ab3@7482>    BNE.w 'notccr
000253F0 <AmiBlitz3.ab3@7483>   CMP.w #$70,D0      ;'p'
000253F4 <AmiBlitz3.ab3@7484>    BNE.w 'notccr
000253F8 <AmiBlitz3.ab3@7485>    BSR.w get1bytemain                                      ;??wy not !fget
000253FC <AmiBlitz3.ab3@7486>    BEQ.w 'usp
00025400 <AmiBlitz3.ab3@7487>   CMP.w #$2C,D0      ;','
00025404 <AmiBlitz3.ab3@7488>    BNE.w 'notccr
00025406 <AmiBlitz3.ab3@7491>   MOVEQ.l #$0E,D5
00025408 <AmiBlitz3.ab3@7492>  RTS
0002540A <AmiBlitz3.ab3@7498>   MOVEA.l A4,A5
0002540E <AmiBlitz3.ab3@7499>    BSR.w asmconst
00025420 <AmiBlitz3.ab3@7502>    !compare3                                               ;bsr.w tstend2
00025424 <AmiBlitz3.ab3@7504>    BEQ.w 'abs1
00025428 <AmiBlitz3.ab3@7505>   CMP.w #$2E,D0      ;'.'
0002542C <AmiBlitz3.ab3@7506>    BEQ.w 'absx
00025430 <AmiBlitz3.ab3@7507>   CMP.w #$28,D0      ;'('
00025434 <AmiBlitz3.ab3@7508>    BNE.w syntaxerr
00025438 <AmiBlitz3.ab3@7509>    BSR.w get1bytemain                                      ;??wy not !fget
0002543C <AmiBlitz3.ab3@7510>   ORI.w #$20,D0
00025440 <AmiBlitz3.ab3@7511>   CMP.w #$70,D0      ;'p'
00025444 <AmiBlitz3.ab3@7512>    BNE.w 'notpcrel
00025448 <AmiBlitz3.ab3@7513>    BSR.w get1bytemain                                      ;??wy not !fget
0002544C <AmiBlitz3.ab3@7514>   ORI.w #$20,D0
00025450 <AmiBlitz3.ab3@7515>   CMP.w #$63,D0      ;'c'
00025454 <AmiBlitz3.ab3@7516>    BNE.w syntaxerr
00025458 <AmiBlitz3.ab3@7517>    BSR.w get1bytemain                                      ;??wy not !fget
0002545C <AmiBlitz3.ab3@7518>    BSR.w getrest
0002545E <AmiBlitz3.ab3@7519>   ADDQ.w #4,D5
00025460 <AmiBlitz3.ab3@7520>  RTS
00025464 <AmiBlitz3.ab3@7523>   BSR.w getan2
00025468 <AmiBlitz3.ab3@7524>  BRA.w getrest
0002546C <AmiBlitz3.ab3@7527>    BSR.w get1bytemain                                     ;??wy not !fget
00025470 <AmiBlitz3.ab3@7528>   ORI.w #$20,D0
00025474 <AmiBlitz3.ab3@7529>   CMP.w #$77,D0      ;'w'
00025478 <AmiBlitz3.ab3@7530>    BEQ.w 'absw
0002547C <AmiBlitz3.ab3@7531>   CMP.w #$6C,D0      ;'l'
00025480 <AmiBlitz3.ab3@7532>    BNE.w syntaxerr
00025482 <AmiBlitz3.ab3@7535>   MOVEQ.l #$08,D5
00025484 <AmiBlitz3.ab3@7536>  RTS
00025486 <AmiBlitz3.ab3@7539>   MOVEQ.l #$07,D5
00025488 <AmiBlitz3.ab3@7540> RTS
0002548A <AmiBlitz3.ab3@7544>   TST.w D0
0002548E <AmiBlitz3.ab3@7545>    BEQ.w 'ok
00025492 <AmiBlitz3.ab3@7546>   CMP.w #$3A,D0       ;':'
00025496 <AmiBlitz3.ab3@7547>    BEQ.w 'ok
0002549A <AmiBlitz3.ab3@7548>   CMP.w #$2C,D0       ;','
0002549C <AmiBlitz3.ab3@7551> RTS
000254A0 <AmiBlitz3.ab3@7555>   CMP.w #$2C,D0       ;','
000254A4 <AmiBlitz3.ab3@7556>    BNE.w 'dis
000254A8 <AmiBlitz3.ab3@7557>    BSR.w get1bytemain                                      ;??wy not !fget
000254AC <AmiBlitz3.ab3@7558>   ORI.w #$20,D0
000254AE <AmiBlitz3.ab3@7559>   MOVEQ.l #$00,D1
000254B2 <AmiBlitz3.ab3@7560>   CMP.w #$64,D0       ;'d'
000254B6 <AmiBlitz3.ab3@7561>    BEQ.w 'ianxi
000254BA <AmiBlitz3.ab3@7562>   CMP.w #$61,D0       ;'a'
000254BE <AmiBlitz3.ab3@7563>    BNE.w syntaxerr
000254C2 <AmiBlitz3.ab3@7564>   BSET #$F,D1
000254C6 <AmiBlitz3.ab3@7567>    BSR.w get1bytemain                                      ;??wy not !fget
000254CA <AmiBlitz3.ab3@7568>   SUBI.w #$30,D0
000254CE <AmiBlitz3.ab3@7569>    BMI.w syntaxerr
000254D2 <AmiBlitz3.ab3@7570>   CMP.w #$7,D0
000254D6 <AmiBlitz3.ab3@7571>    BHI.w syntaxerr
000254D8 <AmiBlitz3.ab3@7572>   LSL.w #8,D0
000254DA <AmiBlitz3.ab3@7573>   LSL.w #4,D0
000254DC <AmiBlitz3.ab3@7574>   OR.w D0,D1
000254E0 <AmiBlitz3.ab3@7575>    BSR.w get1bytemain                                      ;??wy not !fget
000254E4 <AmiBlitz3.ab3@7576>   CMP.w #$2E,D0       ;'.'
000254E8 <AmiBlitz3.ab3@7577>    BNE.w 'ok2
000254EC <AmiBlitz3.ab3@7578>    BSR.w get1bytemain                                      ;??wy not !fget
000254F0 <AmiBlitz3.ab3@7579>   ORI.w #$20,D0
000254F4 <AmiBlitz3.ab3@7580>   CMP.w #$77,D0       ;'w'
000254F8 <AmiBlitz3.ab3@7581>    BEQ.w 'ok
000254FC <AmiBlitz3.ab3@7582>   CMP.w #$6C,D0       ;'l'
00025500 <AmiBlitz3.ab3@7583>    BNE.w syntaxerr
00025504 <AmiBlitz3.ab3@7584>   BSET #$B,D1
00025508 <AmiBlitz3.ab3@7587>    BSR.w get1bytemain                                      ;??wy not !fget
0002550C <AmiBlitz3.ab3@7591>    CMP.b #"*",d0                                            ;020 * Mode
00025510 <AmiBlitz3.ab3@7592>             BNE 'l1
00025514 <AmiBlitz3.ab3@7593>             BSR.w get1bytemain                             ;??wy not !fget
00025518 <AmiBlitz3.ab3@7594>             CMP.b #"2",d0
0002551C <AmiBlitz3.ab3@7595>             BNE 'l2
00025520 <AmiBlitz3.ab3@7596>             OR.w #$200,d1
00025524 <AmiBlitz3.ab3@7597>  BRA 'l1b
00025528 <AmiBlitz3.ab3@7600>             CMP.b #"4",d0
0002552C <AmiBlitz3.ab3@7601>             BNE 'l3
00025530 <AmiBlitz3.ab3@7602>             OR.w #$400,d1
00025534 <AmiBlitz3.ab3@7603>  BRA 'l1b
00025538 <AmiBlitz3.ab3@7606>             CMP.b #"8",d0
0002553C <AmiBlitz3.ab3@7607>             BNE syntaxerr
00025540 <AmiBlitz3.ab3@7608>             OR.w #$600,d1
00025544 <AmiBlitz3.ab3@7611>         BSR.w get1bytemain                                 ;??wy not !fget
00025548 <AmiBlitz3.ab3@7615>   CMP.w #$29,D0       ;')'
0002554C <AmiBlitz3.ab3@7616>    BNE.w syntaxerr
00025552 <AmiBlitz3.ab3@7617>   MOVE.w D1,extraword
00025554 <AmiBlitz3.ab3@7618>   MOVEQ.l #$06,D5
00025558 <AmiBlitz3.ab3@7619>  BRA.w get1bytemain                                         ;??wy not !fget
0002555C <AmiBlitz3.ab3@7622>   CMP.w #")",D0                                            ;")"
00025560 <AmiBlitz3.ab3@7623>    BNE.w errorbracketmiss                                  ; was syntax error
00025562 <AmiBlitz3.ab3@7624>   MOVEQ.l #$05,D5
00025566 <AmiBlitz3.ab3@7625> BRA.w get1bytemain                                         ;??wy not !fget
0002556C <AmiBlitz3.ab3@7632>   MOVEA.l asmbuff,A0
00025572 <AmiBlitz3.ab3@7633>   MOVE.w ininclude,D1
00025578 <AmiBlitz3.ab3@7634>   OR.w inmacro,D1
0002557A <AmiBlitz3.ab3@7635>   MOVE.w D1,(A0)+                                          ;flag!
0002557E <AmiBlitz3.ab3@7636>    BNE.w copyconst
00025580 <AmiBlitz3.ab3@7637>   MOVE.l A5,-(A7)
00025584 <AmiBlitz3.ab3@7638>    BSR.w copyconst
0002558A <AmiBlitz3.ab3@7639>   MOVEA.l asmbuff,A0
0002558E <AmiBlitz3.ab3@7640>   CMP.w #$4,D1
00025592 <AmiBlitz3.ab3@7641>    BLS.w 'leave
00025598 <AmiBlitz3.ab3@7642>   TST.w lc
0002559C <AmiBlitz3.ab3@7643>    BNE.w 'leave
0002559E <AmiBlitz3.ab3@7644>   ADDQ.w #2,A0
000255A0 <AmiBlitz3.ab3@7645>   MOVE.l (A7)+,(A0)+
000255A2 <AmiBlitz3.ab3@7646>   CLR.b (A0)
000255AA <AmiBlitz3.ab3@7647>   MOVE.w #$0004,asmlen2                                    ;pointer + 0
000255AC <AmiBlitz3.ab3@7648>  RTS
000255AE <AmiBlitz3.ab3@7651>   NOT.w (A0)
000255B0 <AmiBlitz3.ab3@7652>   ADDQ.w #4,A7
000255B2 <AmiBlitz3.ab3@7653> RTS
000255B4 <AmiBlitz3.ab3@7656> lc:  Ds.w 1
000255BA <AmiBlitz3.ab3@7660>   CLR.w lc
000255BC <AmiBlitz3.ab3@7661>   MOVEQ.l #$00,D1
000255BE <AmiBlitz3.ab3@7664>    ADDQ.w #1,D1                                            ;label name
000255EA <AmiBlitz3.ab3@7666>    !fget                                                   ;bsr.w get1bytemain
000255EE <AmiBlitz3.ab3@7668>    BEQ.w 'done
000255F2 <AmiBlitz3.ab3@7671>    CMP.w #$22,d0
000255F6 <AmiBlitz3.ab3@7672>    BNE.s 'loop_l10
000255FC <AmiBlitz3.ab3@7673>    NOT.w instringon
00025600 <AmiBlitz3.ab3@7676>    CMP.w #":",d0
00025604 <AmiBlitz3.ab3@7677>    BNE.s 'loop_l11
0002560A <AmiBlitz3.ab3@7678>    TST.w instringon
0002560E <AmiBlitz3.ab3@7679>    BEQ 'done
00025610 <AmiBlitz3.ab3@7683>   TST.w D0
00025614 <AmiBlitz3.ab3@7684>   BPL.w 'notmi
00025616 <AmiBlitz3.ab3@7685>   MOVE.w D0,-(A7)
00025618 <AmiBlitz3.ab3@7686>   LSR.w #8,D0
0002561A <AmiBlitz3.ab3@7687>   MOVE.b D0,(A0)+
0002561C <AmiBlitz3.ab3@7688>   MOVE.w (A7)+,D0
0002561E <AmiBlitz3.ab3@7689>   MOVE.b D0,(A0)+
00025620 <AmiBlitz3.ab3@7690>   ADDQ.w #1,D1
00025624 <AmiBlitz3.ab3@7691>  BRA.s 'loop
0002562A <AmiBlitz3.ab3@7694>    TST.w instringon
0002562E <AmiBlitz3.ab3@7695>    BNE.w 'putbyte
00025634 <AmiBlitz3.ab3@7697>    TST.b _dcb
00025638 <AmiBlitz3.ab3@7698>    BNE 'notmi_l10
0002563C <AmiBlitz3.ab3@7700>    CMP.w #$28,D0     ;'('
00025640 <AmiBlitz3.ab3@7701>    BEQ.w 'done
00025644 <AmiBlitz3.ab3@7705>    CMP.w #$2C,D0     ;','
00025648 <AmiBlitz3.ab3@7706>    BEQ.w 'done
0002564C <AmiBlitz3.ab3@7707>    CMP.b #"'",D0           ; was #loclabch
00025650 <AmiBlitz3.ab3@7708>    BNE.w 'putbyte
00025656 <AmiBlitz3.ab3@7709>    MOVE.w D0,lc                                     ;locallabels
00025658 <AmiBlitz3.ab3@7710>    MOVE.l A1,-(A7)
0002565E <AmiBlitz3.ab3@7711>    LEA lastgloballabel,A1
00025660 <AmiBlitz3.ab3@7712>    TST.b (A1)
00025664 <AmiBlitz3.ab3@7713>    BEQ.w nolocerr
00025666 <AmiBlitz3.ab3@7716>   ADDQ.w #1,D1
00025668 <AmiBlitz3.ab3@7717>   MOVE.b (A1)+,(A0)+
0002566C <AmiBlitz3.ab3@7718>    BNE.w 'cloop
0002566E <AmiBlitz3.ab3@7719>   SUBQ.w #1,D1
00025670 <AmiBlitz3.ab3@7720>   SUBQ.w #1,A0
00025672 <AmiBlitz3.ab3@7721>   MOVEA.l (A7)+,A1
00025674 <AmiBlitz3.ab3@7724>   MOVE.b D0,(A0)+
00025678 <AmiBlitz3.ab3@7725>  BRA.w 'loop
0002567A <AmiBlitz3.ab3@7728>   CLR.b (A0)
00025680 <AmiBlitz3.ab3@7729>   MOVE.w D1,asmlen2
00025682 <AmiBlitz3.ab3@7730> RTS
00025688 <AmiBlitz3.ab3@7736>   CMP.l #$80ad,d0      
0002568C <AmiBlitz3.ab3@7737>   BNE.s 'l12
00025692 <AmiBlitz3.ab3@7738>  JMP bssseg
00025698 <AmiBlitz3.ab3@7741>   CMP.l #$807f,d0
0002569C <AmiBlitz3.ab3@7742>     BNE.s 'l13
000256A2 <AmiBlitz3.ab3@7743>  JMP chipseg
000256A8 <AmiBlitz3.ab3@7746>   ADDQ.l #1,destpointer                                    ;even
000256B0 <AmiBlitz3.ab3@7747>   BCLR #$0,destpointer+3
000256B4 <AmiBlitz3.ab3@7749>   SUBI.w #$803C,D0         ; was #$8000+fnum
000256B6 <AmiBlitz3.ab3@7750>   LSL.w #2,D0
000256BC <AmiBlitz3.ab3@7751>   MOVEA.l #asmpnts,A0
000256C0 <AmiBlitz3.ab3@7752>   MOVEA.l $0(A0,D0.W),A0                                   ;begin inline assembler
000256C6 <AmiBlitz3.ab3@7753>   MOVE.w D0,temp1
000256C8 <AmiBlitz3.ab3@7754>   MOVE.l A0,-(A7)
000256CA <AmiBlitz3.ab3@7756>   MOVEQ.l #$01,D1         ;word len (byte=0, long=2)
000256F6 <AmiBlitz3.ab3@7758>    !fget                                                   ;bsr.w get1bytemain
000256FA <AmiBlitz3.ab3@7760>   CMP.w #$2E,D0           ;'.'
000256FE <AmiBlitz3.ab3@7761>    BNE.w 'dsize
0002572A <AmiBlitz3.ab3@7763>   !fget                                                    ;bsr.w get1bytemain
0002572E <AmiBlitz3.ab3@7765>   ORI.w #$20,D0
00025732 <AmiBlitz3.ab3@7766>   CMP.w #$77,D0           ;'w'                                  ;long
00025736 <AmiBlitz3.ab3@7767>    BEQ.w 'wsize
0002573A <AmiBlitz3.ab3@7768>   CMP.w #$62,D0           ;'b'                                 ;byte
0002573E <AmiBlitz3.ab3@7769>    BEQ.w 'bsize
00025742 <AmiBlitz3.ab3@7770>   CMP.w #$6C,D0           ;'l'                                 ;word
00025746 <AmiBlitz3.ab3@7772>    BEQ.w 'lsize
0002574A <AmiBlitz3.ab3@7773>   CMP.w #"s",d0
0002574E <AmiBlitz3.ab3@7775>   BNE syntaxerr
00025752 <AmiBlitz3.ab3@7776>  BRA.w 'bsize             ; was 'lsize org source
00025754 <AmiBlitz3.ab3@7779>   MOVEQ.l #$00,D1
00025758 <AmiBlitz3.ab3@7780>   MOVE.w $8(A0),D0
0002575C <AmiBlitz3.ab3@7781>  BRA.w 'tstsize
0002575E <AmiBlitz3.ab3@7784>   MOVEQ.l #$04,D1
00025762 <AmiBlitz3.ab3@7785>  BRA.w 'putsize
00025764 <AmiBlitz3.ab3@7788>   MOVEQ.l #$04,D1
00025768 <AmiBlitz3.ab3@7789>   MOVE.w $8(A0),D0
0002576A <AmiBlitz3.ab3@7790>   LSR.w #4,D0
0002576E <AmiBlitz3.ab3@7791>  BRA.w 'tstsize
00025770 <AmiBlitz3.ab3@7794>   MOVEQ.l #$08,D1
00025774 <AmiBlitz3.ab3@7795>   MOVE.w $8(A0),D0
00025776 <AmiBlitz3.ab3@7796>   LSR.w #8,D0
0002577A <AmiBlitz3.ab3@7799>    ANDI.w #$F,D0
0002577E <AmiBlitz3.ab3@7800>   CMP.w #$F,D0
00025782 <AmiBlitz3.ab3@7802>    BNE.w 'cl60
0002578A <AmiBlitz3.ab3@7805>    CMP.l #"MULS",-6(a0)
0002578E <AmiBlitz3.ab3@7806>    BNE 'c20
00025794 <AmiBlitz3.ab3@7807>    MOVE.l #$4c000800,d1
0002579A <AmiBlitz3.ab3@7808>  JMP do32
000257A2 <AmiBlitz3.ab3@7811>    CMP.l #"MULU",-6(a0)
000257A6 <AmiBlitz3.ab3@7812>    BNE 'c30
000257AC <AmiBlitz3.ab3@7813>    MOVE.l #$4c000000,d1
000257B2 <AmiBlitz3.ab3@7814>  JMP do32
000257BA <AmiBlitz3.ab3@7817>    CMP.l #"DIVS",-6(a0)
000257BE <AmiBlitz3.ab3@7818>    BNE 'c40
000257C4 <AmiBlitz3.ab3@7819>    MOVE.l #$4c400800,d1
000257CA <AmiBlitz3.ab3@7820>  JMP do32
000257D2 <AmiBlitz3.ab3@7823>    CMP.l #"DIVU",-6(a0)
000257D6 <AmiBlitz3.ab3@7824>    BNE 'c50
000257DC <AmiBlitz3.ab3@7825>    MOVE.l #$4c400000,d1
000257E2 <AmiBlitz3.ab3@7826>  JMP do32
000257E6 <AmiBlitz3.ab3@7830>  BRA illsizeerr             ; in org source this was afte 'c160
00025812 <AmiBlitz3.ab3@7833>   !fget                                                    ;bsr.w get1bytemain
00025818 <AmiBlitz3.ab3@7836>   MOVE.w D1,asmsize
0002581A <AmiBlitz3.ab3@7837>   MOVEQ.l #-$01,D3
0002581E <AmiBlitz3.ab3@7838>    BSR.w reget
00025822 <AmiBlitz3.ab3@7839>    BEQ.w 'done0
0002582C <AmiBlitz3.ab3@7840>   MOVE.l #ptr_parameterstore,asmbuff
00025836 <AmiBlitz3.ab3@7843>    MOVE.w oldqflag,instringon
0002583C <AmiBlitz3.ab3@7844>   MOVEA.l lastsourcepos,A5
00025840 <AmiBlitz3.ab3@7846>    BSR.w getea
00025842 <AmiBlitz3.ab3@7847>   MOVE.l D4,D2                                              ;to src
00025844 <AmiBlitz3.ab3@7848>   MOVE.l D5,D3
0002584E <AmiBlitz3.ab3@7849>   MOVE.w asmlen2,asmlen
00025850 <AmiBlitz3.ab3@7850>   MOVEQ.l #-$01,D5
0002585A <AmiBlitz3.ab3@7851>   MOVE.w extraword,extraword2
0002585E <AmiBlitz3.ab3@7852>   CMP.w #$2C,D0                                             ;','
00025862 <AmiBlitz3.ab3@7853>    BNE.w 'done0
0002586C <AmiBlitz3.ab3@7854>   MOVE.l #namebuff2,asmbuff
00025870 <AmiBlitz3.ab3@7855>    BSR.w getea                                              ;dest
00025872 <AmiBlitz3.ab3@7862>   MOVEA.l (A7)+,A0
00025878 <AmiBlitz3.ab3@7866>   MOVEA.l destpointer,A1    ; pc
0002587A <AmiBlitz3.ab3@7868>   MOVEA.l A1,A4
0002587C <AmiBlitz3.ab3@7869>   ADDQ.w #2,A1
0002587E <AmiBlitz3.ab3@7870>   MOVE.w (A0),D1            ;opcode
00025880 <AmiBlitz3.ab3@7871>   TST.w D3
00025884 <AmiBlitz3.ab3@7872>    BMI.w 'none              ;no src/dest ea!
00025888 <AmiBlitz3.ab3@7876>   MOVE.w $E(A0),D0
0002588C <AmiBlitz3.ab3@7877>    BPL.w 'noia
00025890 <AmiBlitz3.ab3@7878>   BTST #$0,D0
00025894 <AmiBlitz3.ab3@7879>    BEQ.w 'noa
00025898 <AmiBlitz3.ab3@7880>   CMP.w #$1,D5
0002589C <AmiBlitz3.ab3@7881>    BNE.w 'noa
000258A0 <AmiBlitz3.ab3@7882>   CMP.w #$E,D3
000258A4 <AmiBlitz3.ab3@7883>    BEQ.w 'noia
000258AA <AmiBlitz3.ab3@7884>   MOVE.w temp1,D0
000258AC <AmiBlitz3.ab3@7885>   ADDQ.w #4,D0
000258B0 <AmiBlitz3.ab3@7886>  BRA.w 'moveon
000258B4 <AmiBlitz3.ab3@7889>   BTST #$1,D0
000258B8 <AmiBlitz3.ab3@7890>    BEQ.w 'noia
000258BC <AmiBlitz3.ab3@7891>   CMP.w #$B,D3
000258C0 <AmiBlitz3.ab3@7892>    BNE.w 'noia
000258C6 <AmiBlitz3.ab3@7893>   MOVE.w temp1,D0
000258C8 <AmiBlitz3.ab3@7896>   ADDQ.w #4,D0
000258CE <AmiBlitz3.ab3@7897>   MOVEA.l #asmpnts,A0
000258D2 <AmiBlitz3.ab3@7898>   MOVEA.l $0(A0,D0.W),A0
000258D4 <AmiBlitz3.ab3@7899>   MOVE.w (A0),D1
000258DE <AmiBlitz3.ab3@7902>   MOVE.l #ptr_parameterstore,buff1
000258E8 <AmiBlitz3.ab3@7903>   MOVE.l #namebuff2,buff2
000258EC <AmiBlitz3.ab3@7904>   MOVE.l $A(A0),D0
000258F0 <AmiBlitz3.ab3@7905>    BEQ.w 'nojsr
000258F2 <AmiBlitz3.ab3@7906>   MOVEA.l D0,A3
000258F8 <AmiBlitz3.ab3@7907>   MOVE.w asmsize,D6
000258FA <AmiBlitz3.ab3@7908>    JSR (A3)
000258FE <AmiBlitz3.ab3@7909>    BPL.w 'noerr
00025902 <AmiBlitz3.ab3@7910>   CMP.w #-$2,D0
00025906 <AmiBlitz3.ab3@7911>    BEQ.w illsizeerr
0002590A <AmiBlitz3.ab3@7912>  BRA.w illeaerr
0002590E <AmiBlitz3.ab3@7915>   BEQ.w 'nojsr
00025910 <AmiBlitz3.ab3@7917>   EXG.l D2,D4
00025912 <AmiBlitz3.ab3@7918>   EXG.l D3,D5
00025918 <AmiBlitz3.ab3@7920>   MOVE.l extraword,D6
0002591A <AmiBlitz3.ab3@7921>   SWAP D6
00025920 <AmiBlitz3.ab3@7922>   MOVE.l D6,extraword
0002592A <AmiBlitz3.ab3@7924>   MOVE.l #namebuff2,buff1
00025934 <AmiBlitz3.ab3@7925>   MOVE.l #ptr_parameterstore,buff2
0002593A <AmiBlitz3.ab3@7927>   MOVE.w asmlen,D6
00025940 <AmiBlitz3.ab3@7928>   MOVE.w asmlen2,D7
00025946 <AmiBlitz3.ab3@7929>   MOVE.w D6,asmlen2
0002594C <AmiBlitz3.ab3@7930>   MOVE.w D7,asmlen
00025956 <AmiBlitz3.ab3@7933>   MOVE.l buff1,asmbuff
0002595A <AmiBlitz3.ab3@7934>   MOVE.w $E(A0),D0
0002595E <AmiBlitz3.ab3@7935>    BEQ.w 'nothing
00025962 <AmiBlitz3.ab3@7936>    BMI.w 'nothing
00025966 <AmiBlitz3.ab3@7938>    CMP.w #$7000,d1
0002596A <AmiBlitz3.ab3@7939>    BNE 'skip
0002596E <AmiBlitz3.ab3@7940>    CMP.w #$b,d3
00025972 <AmiBlitz3.ab3@7941>    BNE illeaerr
00025976 <AmiBlitz3.ab3@7945>    CMP.w #$1,D0
0002597A <AmiBlitz3.ab3@7946>    BNE.w 'n1to8
0002597E <AmiBlitz3.ab3@7947>    CMP.w #$B,D3
00025982 <AmiBlitz3.ab3@7948>    BNE.w 'nothing
00025986 <AmiBlitz3.ab3@7951>    BSR.w insasm
00025988 <AmiBlitz3.ab3@7952>   MOVE.w D4,D2
0002598A <AmiBlitz3.ab3@7953>   MOVE.w D5,D3
0002598E <AmiBlitz3.ab3@7954>  BRA.w 'skipsrc2
00025992 <AmiBlitz3.ab3@7957>    CMP.w #$2,D0
00025996 <AmiBlitz3.ab3@7958>    BNE.w 'notbcc
0002599A <AmiBlitz3.ab3@7959>   CMP.w #$8,D3
0002599E <AmiBlitz3.ab3@7960>    BNE.w illeaerr
000259A0 <AmiBlitz3.ab3@7961>   MOVEQ.l #$09,D3
000259A4 <AmiBlitz3.ab3@7962>  BRA.w 'nothing
000259A8 <AmiBlitz3.ab3@7965>    CMP.w #$3,D0
000259AC <AmiBlitz3.ab3@7966>    BEQ.w 'skipsrc
000259B0 <AmiBlitz3.ab3@7969>   CMP.w #$4,D0
000259B4 <AmiBlitz3.ab3@7970>    BEQ.w 'skipsrc
000259B8 <AmiBlitz3.ab3@7973>   CMP.w #$5,D0
000259BC <AmiBlitz3.ab3@7974>    BNE.w 'notdbf
000259C0 <AmiBlitz3.ab3@7975>   CMP.w #$8,D5
000259C4 <AmiBlitz3.ab3@7976>    BNE.w illeaerr
000259C6 <AmiBlitz3.ab3@7977>   OR.w D2,D1
000259C8 <AmiBlitz3.ab3@7978>   MOVEQ.l #$09,D5
000259CC <AmiBlitz3.ab3@7982>   MOVE.w $2(A0),D6
000259D0 <AmiBlitz3.ab3@7983>   MOVE.b $6(A0),D7
000259D4 <AmiBlitz3.ab3@7984>   MOVEM.l D4-D5,-(A7)
000259DA <AmiBlitz3.ab3@7985>   MOVE.w extraword2,D4
000259DE <AmiBlitz3.ab3@7986>    BSR.w doea          ;do src
000259E2 <AmiBlitz3.ab3@7988>   MOVEM.l (A7)+,D2-D3
000259E4 <AmiBlitz3.ab3@7990>   TST.w D3
000259E8 <AmiBlitz3.ab3@7993>     BMI.w 'one
000259EE <AmiBlitz3.ab3@7994>   MOVE.w extraword,D4
000259F2 <AmiBlitz3.ab3@7995>   MOVE.w $4(A0),D6
000259F6 <AmiBlitz3.ab3@7996>   MOVE.b $7(A0),D7
00025A00 <AmiBlitz3.ab3@7997>   MOVE.l buff2,asmbuff
00025A0A <AmiBlitz3.ab3@7998>   MOVE.w asmlen2,asmlen
00025A0E <AmiBlitz3.ab3@7999>    BSR.w doea
00025A12 <AmiBlitz3.ab3@8000>  BRA.w 'putit
00025A16 <AmiBlitz3.ab3@8003>   MOVE.w $4(A0),D0
00025A1A <AmiBlitz3.ab3@8004>    BNE.w illeaerr
00025A1E <AmiBlitz3.ab3@8005>  BRA.w 'putit
00025A22 <AmiBlitz3.ab3@8008>   MOVE.w $2(A0),D0
00025A26 <AmiBlitz3.ab3@8009>   OR.w $4(A0),D0
00025A2A <AmiBlitz3.ab3@8010>    BNE.w illeaerr
00025A2E <AmiBlitz3.ab3@8015>   MOVE.w $8(A0),D0
00025A32 <AmiBlitz3.ab3@8016>   ANDI.w #$F000,D0
00025A36 <AmiBlitz3.ab3@8017>   CMP.w #-$1000,D0    ;was #$f000
00025A3A <AmiBlitz3.ab3@8018>    BEQ.w 'nosizep
00025A3C <AmiBlitz3.ab3@8019>   LSR.w #8,D0
00025A3E <AmiBlitz3.ab3@8020>   LSR.w #4,D0         ;shift for size
00025A42 <AmiBlitz3.ab3@8022>   MOVE.w $8(A0),D2
00025A48 <AmiBlitz3.ab3@8023>   MOVE.w asmsize,D3
00025A4A <AmiBlitz3.ab3@8024>   LSR.w D3,D2
00025A4E <AmiBlitz3.ab3@8025>   ANDI.w #$F,D2
00025A50 <AmiBlitz3.ab3@8026>   LSL.w D0,D2
00025A52 <AmiBlitz3.ab3@8027>   OR.w D2,D1          ;size into opcode
00025A58 <AmiBlitz3.ab3@8030>   CMPA.l destbufferend,A4
00025A5C <AmiBlitz3.ab3@8031>    BCS.w 'oky
00025A64 <AmiBlitz3.ab3@8032>   MOVE.w #$FFFF,dontwrite_nomemleft     ; was -1
00025A68 <AmiBlitz3.ab3@8033>  BRA.w 'done
00025A6A <AmiBlitz3.ab3@8036>   MOVE.w D1,(A4)
00025A70 <AmiBlitz3.ab3@8039>   MOVE.l A1,destpointer
00025A72 <AmiBlitz3.ab3@8040> RTS
00025A78 <AmiBlitz3.ab3@8044>   MOVE.l destpointer,-(A7)
00025A7E <AmiBlitz3.ab3@8045>   MOVE.l A1,destpointer
00025A82 <AmiBlitz3.ab3@8046>    BSR.w addoff
00025A88 <AmiBlitz3.ab3@8047>   MOVEA.l destpointer,A1
00025A8E <AmiBlitz3.ab3@8048>   MOVE.l (A7)+,destpointer
00025A90 <AmiBlitz3.ab3@8049> RTS
00025A94 <AmiBlitz3.ab3@8053>   MOVEM.l d2-d6,-(a7)
00025A9A <AmiBlitz3.ab3@8054>   JSR stripspaces
00025A9E <AmiBlitz3.ab3@8055>   CMP.b #"d",(a5)+
00025AA2 <AmiBlitz3.ab3@8056>   BNE noreg
00025AA4 <AmiBlitz3.ab3@8057>   MOVE.b (a5)+,d0
00025AA8 <AmiBlitz3.ab3@8058>   CMP.b #$30,d0
00025AAC <AmiBlitz3.ab3@8059>   BLT noreg
00025AB0 <AmiBlitz3.ab3@8060>   CMP.b #$37,d0
00025AB4 <AmiBlitz3.ab3@8061>   BGT noreg
00025AB8 <AmiBlitz3.ab3@8062>   SUB.b #$30,d0
00025ABA <AmiBlitz3.ab3@8063>   MOVEQ #0,d3
00025ABC <AmiBlitz3.ab3@8064>   MOVE.b d0,d3                                             ;reg1
00025ABE <AmiBlitz3.ab3@8065>   ASL.l #8,d3
00025AC0 <AmiBlitz3.ab3@8066>   ASL.l #8,d3
00025AC6 <AmiBlitz3.ab3@8067>   JSR stripspaces
00025ACA <AmiBlitz3.ab3@8068>   CMP.b #",",(a5)+
00025ACE <AmiBlitz3.ab3@8069>   BNE noreg
00025AD4 <AmiBlitz3.ab3@8070>   JSR stripspaces
00025AD8 <AmiBlitz3.ab3@8071>   CMP.b #"d",(a5)+
00025ADC <AmiBlitz3.ab3@8072>   BNE noreg
00025ADE <AmiBlitz3.ab3@8073>   MOVE.b (a5)+,d0
00025AE2 <AmiBlitz3.ab3@8074>   CMP.b #$30,d0
00025AE6 <AmiBlitz3.ab3@8075>   BLT noreg
00025AEA <AmiBlitz3.ab3@8076>   CMP.b #$37,d0
00025AEE <AmiBlitz3.ab3@8077>   BGT noreg
00025AF2 <AmiBlitz3.ab3@8078>   SUB.b #$30,d0
00025AF4 <AmiBlitz3.ab3@8079>   MOVEQ #0,d4
00025AF6 <AmiBlitz3.ab3@8080>   MOVE.b d0,d4                                             ;reg2
00025AF8 <AmiBlitz3.ab3@8081>   ASL.l #8,d4
00025AFA <AmiBlitz3.ab3@8082>   ASL.l #4,d4
00025AFC <AmiBlitz3.ab3@8083>   OR.b d0,d1
00025AFE <AmiBlitz3.ab3@8084>   OR.l d3,d1
00025B00 <AmiBlitz3.ab3@8085>   OR.l d4,d1
00025B06 <AmiBlitz3.ab3@8086>   JSR writelong
00025B0A <AmiBlitz3.ab3@8087>   MOVEM.l (a7)+,d2-d6
00025B0E <AmiBlitz3.ab3@8088>   MOVEM.l d1/a1-a3,-(a7)
00025B12 <AmiBlitz3.ab3@8089> BRA exit
00025B16 <AmiBlitz3.ab3@8093>   MOVEM.l (a7)+,d2-d6
00025B1C <AmiBlitz3.ab3@8094>   LEA errtext,a0
00025B1E <AmiBlitz3.ab3@8095>   MOVE.l a0,-(a7)
00025B24 <AmiBlitz3.ab3@8096> JMP handle_compileerror
00025B2A <AmiBlitz3.ab3@8101>   MOVE.w dontwrite_nomemleft,D1
00025B2E <AmiBlitz3.ab3@8102>    BNE.w 'done
00025B36 <AmiBlitz3.ab3@8103>   BTST #$7,make_smallestcode
00025B3A <AmiBlitz3.ab3@8104>    BEQ.w 'go
00025B3E <AmiBlitz3.ab3@8105>   MOVE.w pass(PC),D1
00025B42 <AmiBlitz3.ab3@8106>    BEQ.w 'done
00025B48 <AmiBlitz3.ab3@8109>   MOVEA.l templabel,A2                                     ;insert labels in Code
00025B50 <AmiBlitz3.ab3@8110>   MOVE.b #1,curtemplabel
00025B58 <AmiBlitz3.ab3@8111>   MOVE.w #$FFFF,constmode
00025B5E <AmiBlitz3.ab3@8112>   CLR.w regnum
00025B68 <AmiBlitz3.ab3@8113>           MOVE.l #forthstack,forthsp
00025B72 <AmiBlitz3.ab3@8114>           MOVE.l #precstack,precsp
00025B76 <AmiBlitz3.ab3@8115>    BSR.w prepstack
00025B78 <AmiBlitz3.ab3@8118>   MOVE.l A2,-(A7)
00025B7C <AmiBlitz3.ab3@8119>    BSR.w chkstop
00025B7E <AmiBlitz3.ab3@8120>   MOVEA.l (A7)+,A2
00025B82 <AmiBlitz3.ab3@8121>   CMPA.w #$0,A2
00025B86 <AmiBlitz3.ab3@8122>    BEQ.w 'done2
00025B8C <AmiBlitz3.ab3@8123>    CLR.b iee
00025B92 <AmiBlitz3.ab3@8124>   MOVE.l A2,asmbuff
00025B96 <AmiBlitz3.ab3@8125>   LEA $10(A2),A5
00025B9A <AmiBlitz3.ab3@8126>   TST.b $F(A2)
00025B9E <AmiBlitz3.ab3@8127>    BNE.w 'skipo
00025BA0 <AmiBlitz3.ab3@8128>   MOVEA.l (A5),A5                                          ;pointer to real text
00025BA6 <AmiBlitz3.ab3@8131>    CLR.w asmtype
00025BAA <AmiBlitz3.ab3@8132>    CMP.b #".",(a5)
00025BAE <AmiBlitz3.ab3@8133>    BNE.s 'skipo_l10
00025BB0 <AmiBlitz3.ab3@8134>    MOVE.l a2,-(a7)
00025BB2 <AmiBlitz3.ab3@8135>    ADDQ.l #1,a5
00025BB8 <AmiBlitz3.ab3@8136>    LEA newtypebase,a2
00025BBC <AmiBlitz3.ab3@8137>    BSR getparameter2
00025BC0 <AmiBlitz3.ab3@8138>    BEQ.w syntaxerr
00025BC4 <AmiBlitz3.ab3@8139>    BSR findtype
00025BC8 <AmiBlitz3.ab3@8140>    BNE.w notypeerr
00025BCC <AmiBlitz3.ab3@8141>    LEA $4(a2),a2
00025BD0 <AmiBlitz3.ab3@8142>    BSR getparameter2
00025BD4 <AmiBlitz3.ab3@8143>    BEQ.w syntaxerr
00025BD8 <AmiBlitz3.ab3@8144>    BSR.w findvariable2
00025BDC <AmiBlitz3.ab3@8145>    BNE.w notypeerr
00025BE0 <AmiBlitz3.ab3@8146>    MOVE.w $4(a2),d3
00025BE2 <AmiBlitz3.ab3@8147>    EXT.l d3
00025BE6 <AmiBlitz3.ab3@8148>  BRA 'skipo_l30b
00025BEA <AmiBlitz3.ab3@8151>   CMP.b #"\",(a5)
00025BEE <AmiBlitz3.ab3@8152>     BNE 'skipo_l20
00025BF0 <AmiBlitz3.ab3@8153>     ADDQ.l #1,a5
00025BF2 <AmiBlitz3.ab3@8154>    MOVE.l a2,-(a7)
00025BF4 <AmiBlitz3.ab3@8155>    MOVE.l a5,a4
00025BFA <AmiBlitz3.ab3@8156>    LEA usedpath,a5
00025BFE <AmiBlitz3.ab3@8157>    CMP.b #"*",(a5)
00025C02 <AmiBlitz3.ab3@8158>    BNE 'skipo_lm1
00025C04 <AmiBlitz3.ab3@8159>    ADDQ.l #1,a5
00025C08 <AmiBlitz3.ab3@8162>    BSR.w getparameter2
00025C0C <AmiBlitz3.ab3@8163>    BEQ.w syntaxerr
00025C12 <AmiBlitz3.ab3@8164>    LEA varbase,A2
00025C1A <AmiBlitz3.ab3@8165>    MOVE.b #1,newvariable
00025C1E <AmiBlitz3.ab3@8166>    BSR.w findvariable
00025C24 <AmiBlitz3.ab3@8167>    CLR.b newvariable
00025C2A <AmiBlitz3.ab3@8168>    CMP.l #-1,d0
00025C2E <AmiBlitz3.ab3@8169>    BEQ.w notypeerr
00025C30 <AmiBlitz3.ab3@8170>    MOVE.l a4,a5
00025C34 <AmiBlitz3.ab3@8171>    MOVE.l $a(a2),a2
00025C38 <AmiBlitz3.ab3@8172>    LEA $4(a2),a2
00025C3C <AmiBlitz3.ab3@8173>    BSR getparameter2
00025C40 <AmiBlitz3.ab3@8174>    BEQ.w syntaxerr
00025C44 <AmiBlitz3.ab3@8175>    BSR.w findvariable2
00025C48 <AmiBlitz3.ab3@8176>    BNE.w notypeerr
00025C4C <AmiBlitz3.ab3@8177>   MOVE.w $4(A2),D3
00025C4E <AmiBlitz3.ab3@8178>   EXT.l D3
00025C54 <AmiBlitz3.ab3@8181>    CMP.b #"[",-1(a5)
00025C58 <AmiBlitz3.ab3@8182>    BNE 'skipo_l30c
00025C5A <AmiBlitz3.ab3@8183>    MOVEQ #0,d0
00025C5C <AmiBlitz3.ab3@8184>    MOVE.b (a5)+,d0
00025C5E <AmiBlitz3.ab3@8185>    MOVE.l d3,-(a7)
00025C60 <AmiBlitz3.ab3@8186>    MOVEQ #0,d3
00025C66 <AmiBlitz3.ab3@8187>    JSR atoi
00025C68 <AmiBlitz3.ab3@8188>    MOVE.l (a7)+,d1
00025C6C <AmiBlitz3.ab3@8189>    MOVE.l $a(a2),a2
00025C70 <AmiBlitz3.ab3@8190>    MOVE.w 8(a2),d0
00025C72 <AmiBlitz3.ab3@8191>    MULS d0,d3
00025C74 <AmiBlitz3.ab3@8192>    ADD.l d1,d3
00025C76 <AmiBlitz3.ab3@8195>   MOVE.l (a7)+,a2
00025C7A <AmiBlitz3.ab3@8196>  BRA 'oko
00025C80 <AmiBlitz3.ab3@8199>   CMP.w #$c,$8(a2)
00025C84 <AmiBlitz3.ab3@8200>      BEQ 'skipo_lf1
00025C8A <AmiBlitz3.ab3@8201>      CMP.w #$d,$8(a2)
00025C8E <AmiBlitz3.ab3@8202>      BEQ 'skipo_lf1
00025C94 <AmiBlitz3.ab3@8205>   JSR evalconst3
00025C9A <AmiBlitz3.ab3@8208>   MOVEA.l asmbuff,A2
00025C9E <AmiBlitz3.ab3@8209>    BEQ.w 'oko
00025CA2 <AmiBlitz3.ab3@8210>   CMP.w #$28,D0
00025CA6 <AmiBlitz3.ab3@8211>    BEQ.w 'oko
00025CAA <AmiBlitz3.ab3@8212>   CMP.w #$2C,D0
00025CAE <AmiBlitz3.ab3@8213>    BEQ.w 'oko
00025CB2 <AmiBlitz3.ab3@8214>  BRA.w syntaxerr
00025CBA <AmiBlitz3.ab3@8217>   MOVE.b #1,iee
00025CBE <AmiBlitz3.ab3@8218>  BRA 'skipo_lf2
00025CC2 <AmiBlitz3.ab3@8221>   MOVEA.l $4(A2),A1
00025CC6 <AmiBlitz3.ab3@8223>   MOVE.w $8(A2),D1                                         ;labelmode
00025CCA <AmiBlitz3.ab3@8224>   CMP.w #$5,D1
00025CCE <AmiBlitz3.ab3@8225>    BNE.w 'notdan
00025CD2 <AmiBlitz3.ab3@8228>    BSR.w chkword                                           ;word
00025CD4 <AmiBlitz3.ab3@8231>   MOVE.w D3,(A1)
00025CD8 <AmiBlitz3.ab3@8232>  BRA.w 'next
00025CDC <AmiBlitz3.ab3@8235>   CMP.w #$6,D1
00025CE0 <AmiBlitz3.ab3@8236>    BNE.w 'notdanxi
00025CE4 <AmiBlitz3.ab3@8239>    BSR.w chkbyte                                           ;byte
00025CE8 <AmiBlitz3.ab3@8242>   MOVE.b D3,$1(A1)
00025CEC <AmiBlitz3.ab3@8243>  BRA.w 'next
00025CF0 <AmiBlitz3.ab3@8246>    CMP.w #$11,D1                                           ;byte
00025CF4 <AmiBlitz3.ab3@8247>    BEQ.w 'isbyte2
00025CF8 <AmiBlitz3.ab3@8248>    CMP.w #$c,d1
00025CFC <AmiBlitz3.ab3@8249>    BEQ 'single1
00025D00 <AmiBlitz3.ab3@8250>    CMP.w #$d,d1
00025D04 <AmiBlitz3.ab3@8251>    BEQ 'double1
00025D08 <AmiBlitz3.ab3@8252>   CMP.w #$7,D1
00025D0C <AmiBlitz3.ab3@8253>    BEQ.w 'word                                             ;word
00025D10 <AmiBlitz3.ab3@8254>   CMP.w #$8,D1
00025D14 <AmiBlitz3.ab3@8255>    BNE.w 'notabsl
00025D1A <AmiBlitz3.ab3@8258>   MOVE.w asmtype,D1                                        ;long
00025D1E <AmiBlitz3.ab3@8259>    BEQ.w 'notpcrel
00025D22 <AmiBlitz3.ab3@8260>      BSR.w asmoff
00025D24 <AmiBlitz3.ab3@8263>   MOVE.l D3,(A1)
00025D28 <AmiBlitz3.ab3@8264>  BRA.w 'next
00025D2E <AmiBlitz3.ab3@8267>   fmove.s fp0,0(a1)
00025D32 <AmiBlitz3.ab3@8268>  BRA.w 'next
00025D38 <AmiBlitz3.ab3@8271>   fmove.d fp0,0(a1)
00025D3C <AmiBlitz3.ab3@8272>  BRA.w 'next
00025D40 <AmiBlitz3.ab3@8275>   CMP.w #$9,D1
00025D44 <AmiBlitz3.ab3@8276>    BNE.w 'notdpc
00025D46 <AmiBlitz3.ab3@8277>   SUB.l A1,D3                                              ;branchword
00025D4A <AmiBlitz3.ab3@8278>    BSR.w chkword
00025D4C <AmiBlitz3.ab3@8279>   MOVE.w D3,(A1)
00025D50 <AmiBlitz3.ab3@8280>  BRA.w 'next
00025D54 <AmiBlitz3.ab3@8283>   CMP.w #$A,D1
00025D58 <AmiBlitz3.ab3@8284>    BNE.w 'imm
00025D5A <AmiBlitz3.ab3@8285>   SUB.l A1,D3                                              ;branchbyte
00025D5E <AmiBlitz3.ab3@8286>  BRA.w 'isbyte
00025D62 <AmiBlitz3.ab3@8289>   CMP.w #$11,d1
00025D66 <AmiBlitz3.ab3@8290>   BLE 'imm_org
00025D68 <AmiBlitz3.ab3@8291>   MOVE.l a3,-(a7)
00025D6E <AmiBlitz3.ab3@8292>   LEA pluginbase,a3
00025D72 <AmiBlitz3.ab3@8293>   MOVE.l 8(a2),a0
00025D74 <AmiBlitz3.ab3@8294>   JSR (a0)                                                 ;hook
00025D76 <AmiBlitz3.ab3@8295>   MOVE.l (a7)+,a3
00025D7A <AmiBlitz3.ab3@8296>  BRA 'next
00025D7E <AmiBlitz3.ab3@8299>   MOVE.w $A(A2),D0
00025D82 <AmiBlitz3.ab3@8300>    BEQ.w 'noflag
00025D86 <AmiBlitz3.ab3@8301>   CMP.w #$1,D0
00025D8A <AmiBlitz3.ab3@8302>    BEQ.w 'tocount
00025D8E <AmiBlitz3.ab3@8303>   CMP.w #$3,D0
00025D92 <AmiBlitz3.ab3@8304>    BEQ.w 'tomoveq
00025D96 <AmiBlitz3.ab3@8305>   CMP.w #$4,D0
00025D9A <AmiBlitz3.ab3@8306>    BEQ.w 'totrap
00025D9E <AmiBlitz3.ab3@8309>   CMP.w #$B,D1                                             ;long
00025DA2 <AmiBlitz3.ab3@8310>    BEQ.w 'isabsl
00025DA6 <AmiBlitz3.ab3@8311>  BRA 'word2                                                ;word
00025DAC <AmiBlitz3.ab3@8314>   CMP.l #$F,D3
00025DB0 <AmiBlitz3.ab3@8315>    BHI.w illtraperr
00025DB2 <AmiBlitz3.ab3@8316>   OR.b D3,-(A1)
00025DB6 <AmiBlitz3.ab3@8317>  BRA.w 'next
00025DBC <AmiBlitz3.ab3@8320>   CMP.l #$8,D3
00025DC0 <AmiBlitz3.ab3@8321>    BHI.w illimmerr
00025DC2 <AmiBlitz3.ab3@8322>   TST.l D3
00025DC6 <AmiBlitz3.ab3@8323>    BEQ.w illimmerr
00025DCA <AmiBlitz3.ab3@8324>   ANDI.w #$7,D3
00025DCC <AmiBlitz3.ab3@8325>   LSL.w #8,D3
00025DCE <AmiBlitz3.ab3@8326>   LSL.w #1,D3
00025DD0 <AmiBlitz3.ab3@8327>   OR.w D3,-(A1)
00025DD4 <AmiBlitz3.ab3@8328>  BRA.w 'next
00025DD8 <AmiBlitz3.ab3@8331>    BSR.w chkbyte
00025DDA <AmiBlitz3.ab3@8332>   MOVE.b D3,-(A1)
00025DDC <AmiBlitz3.ab3@8335>   MOVEA.l (A2),A2
00025DE0 <AmiBlitz3.ab3@8336>  BRA.w 'loop
00025DE6 <AmiBlitz3.ab3@8339>   CLR.w constmode
00025DEC <AmiBlitz3.ab3@8342>   CLR.b curtemplabel
00025DEE <AmiBlitz3.ab3@8343> RTS
00025DF0 <AmiBlitz3.ab3@8352>   BTST D3,D6
00025DF4 <AmiBlitz3.ab3@8353>    BEQ.w illeaerr
00025DF8 <AmiBlitz3.ab3@8354>    BSR.w makemode
00025DFC <AmiBlitz3.ab3@8355>   CMP.w #$7,D3
00025E00 <AmiBlitz3.ab3@8356>    BCS.w 'skip
00025E02 <AmiBlitz3.ab3@8357>   MOVE.w D3,D2
00025E04 <AmiBlitz3.ab3@8358>   SUBQ.w #7,D2
00025E08 <AmiBlitz3.ab3@8359>   CMP.w #$5,D2
00025E0C <AmiBlitz3.ab3@8360>    BCS.w 'skip0
00025E0E <AmiBlitz3.ab3@8361>   MOVEQ.l #$04,D2
00025E10 <AmiBlitz3.ab3@8364>   MOVEQ.l #$07,D3
00025E12 <AmiBlitz3.ab3@8367>   MOVE.b D7,D0
00025E16 <AmiBlitz3.ab3@8368>   ANDI.w #$F,D0
00025E1A <AmiBlitz3.ab3@8369>   CMP.w #$F,D0
00025E1E <AmiBlitz3.ab3@8370>    BEQ.w 'skip2
00025E20 <AmiBlitz3.ab3@8371>   LSL.w D0,D3
00025E22 <AmiBlitz3.ab3@8372>   OR.w D3,D1
00025E24 <AmiBlitz3.ab3@8375>   LSR.w #4,D7
00025E28 <AmiBlitz3.ab3@8376>   ANDI.w #$F,D7
00025E2C <AmiBlitz3.ab3@8377>   CMP.w #$F,D7
00025E30 <AmiBlitz3.ab3@8378>    BEQ.w 'skip3
00025E32 <AmiBlitz3.ab3@8379>   LSL.w D7,D2
00025E34 <AmiBlitz3.ab3@8380>   OR.w D2,D1
00025E36 <AmiBlitz3.ab3@8383> RTS
00025E3C <AmiBlitz3.ab3@8387>   CMP.l #$7F,D3
00025E40 <AmiBlitz3.ab3@8388>    BGT.w illdiserr
00025E46 <AmiBlitz3.ab3@8389>   CMP.l #$FFFFFF80,D3                                      ;#-128,d3 org source
00025E4A <AmiBlitz3.ab3@8390>    BLT.w illdiserr
00025E4C <AmiBlitz3.ab3@8391> RTS
00025E52 <AmiBlitz3.ab3@8395>   CMP.l #$7fff,D3
00025E56 <AmiBlitz3.ab3@8396>    BGT.w illdiserr
00025E5C <AmiBlitz3.ab3@8397>   CMP.l #$FFFF8000,D3                                      ;#-32768,d3 org source
00025E60 <AmiBlitz3.ab3@8398>    BLT.w illdiserr
00025E62 <AmiBlitz3.ab3@8399> RTS
00025E64 <AmiBlitz3.ab3@8404>   MOVE.b (a5)+,d0
00025E66 <AmiBlitz3.ab3@8405>   CMP.b d1,d0
00025E6A <AmiBlitz3.ab3@8406>   BEQ 'll10
00025E6C <AmiBlitz3.ab3@8407>   TST.b d0
00025E70 <AmiBlitz3.ab3@8408>   BNE 'll20
00025E72 <AmiBlitz3.ab3@8411>   SUBQ #1,a5
00025E74 <AmiBlitz3.ab3@8412> RTS
00025E76 <AmiBlitz3.ab3@8417>   MOVE.b (a5)+,d0
00025E7A <AmiBlitz3.ab3@8418>   CMP.b #",",d0
00025E7E <AmiBlitz3.ab3@8419>   BEQ 'll10
00025E82 <AmiBlitz3.ab3@8420>   CMP.b #";",d0
00025E86 <AmiBlitz3.ab3@8421>   BEQ 'll10
00025E8A <AmiBlitz3.ab3@8422>  CMP.b #":",d0
00025E8E <AmiBlitz3.ab3@8423>   BEQ 'll10
00025E90 <AmiBlitz3.ab3@8426>   TST.b d0
00025E94 <AmiBlitz3.ab3@8427>   BNE 'll20
00025E96 <AmiBlitz3.ab3@8430>   SUBQ #1,a5
00025E98 <AmiBlitz3.ab3@8431> RTS
00025E9A <AmiBlitz3.ab3@8435>   ADD.l a2,d1
00025EA0 <AmiBlitz3.ab3@8436>   LEA tempspace,a1
00025EA2 <AmiBlitz3.ab3@8437>   MOVE.l d1,a0
00025EA4 <AmiBlitz3.ab3@8440>   MOVE.b (a0)+,(a1)+
00025EA8 <AmiBlitz3.ab3@8441>   BNE.s 'l10
00025EAA <AmiBlitz3.ab3@8442>   SUBQ.l #1,a0
00025EAC <AmiBlitz3.ab3@8443>   SUBQ.l #1,a1
00025EAE <AmiBlitz3.ab3@8446>   MOVE.b (a5)+,(a1)+
00025EB2 <AmiBlitz3.ab3@8447>   BNE.s 'l20
00025EB4 <AmiBlitz3.ab3@8448>   CLR.b (a1)
00025EBA <AmiBlitz3.ab3@8449>   LEA tempspace,a5
00025EBC <AmiBlitz3.ab3@8450> RTS
00025EC0 <AmiBlitz3.ab3@8454>   MOVEM.l D1-D2/A0,-(A7)
00025EC2 <AmiBlitz3.ab3@8455>   MOVE.l d0,d2
00025EC4 <AmiBlitz3.ab3@8456>   MOVEQ #0,d1
00025EC6 <AmiBlitz3.ab3@8457>   MOVE.l a5,a4
00025EC8 <AmiBlitz3.ab3@8460>   ADDQ.l #1,d1
00025ECA <AmiBlitz3.ab3@8461>   MOVE.b (a5)+,d0
00025ECE <AmiBlitz3.ab3@8462>   CMP.b #",",d0
00025ED2 <AmiBlitz3.ab3@8463>   BEQ 'll10
00025ED6 <AmiBlitz3.ab3@8464>   CMP.b #";",d0
00025EDA <AmiBlitz3.ab3@8465>   BEQ 'll10
00025EDE <AmiBlitz3.ab3@8466>   CMP.b #":",d0
00025EE2 <AmiBlitz3.ab3@8467>   BEQ 'll10
00025EE6 <AmiBlitz3.ab3@8468>   CMP.b #"(",d0
00025EEA <AmiBlitz3.ab3@8469>   BEQ 'll10
00025EEC <AmiBlitz3.ab3@8470>   TST.b d0
00025EF0 <AmiBlitz3.ab3@8471>   BNE 'll20
00025EF2 <AmiBlitz3.ab3@8474>   SUBQ #1,a5
00025EF6 <AmiBlitz3.ab3@8475>   CMP.b #"'",(a4)
00025EFA <AmiBlitz3.ab3@8476>   BEQ 'llocal
00025F00 <AmiBlitz3.ab3@8477>   TST.w inmacro
00025F04 <AmiBlitz3.ab3@8478>   BNE 'lmacro
00025F06 <AmiBlitz3.ab3@8479>   MOVEQ.l #$14+4,D0
00025F08 <AmiBlitz3.ab3@8480>   ADD.l d1,d0
00025F0A <AmiBlitz3.ab3@8481>   MOVE.l d1,-(a7)
00025F0C <AmiBlitz3.ab3@8482>   MOVEQ.l #$01,D1
00025F12 <AmiBlitz3.ab3@8483>   MOVEA.l _execbase,A6
00025F18 <AmiBlitz3.ab3@8484>   MOVE.l mempool2,a0
00025F1C <AmiBlitz3.ab3@8485>   JSR _AllocPooled(a6)
00025F1E <AmiBlitz3.ab3@8487>   MOVE.l (a7)+,d1
00025F20 <AmiBlitz3.ab3@8488>   TST.l d0
00025F24 <AmiBlitz3.ab3@8489>   BEQ nomemory
00025F26 <AmiBlitz3.ab3@8490>   MOVEA.l D0,A0
00025F2E <AmiBlitz3.ab3@8492>   MOVE.w linenumat+2,$A(A0)
00025F34 <AmiBlitz3.ab3@8494>   MOVE.l templabel,(A0)
00025F3A <AmiBlitz3.ab3@8495>   MOVE.l A0,templabel
00025F42 <AmiBlitz3.ab3@8496>   MOVE.l destpointer,$4(A0)
00025F46 <AmiBlitz3.ab3@8497>   MOVE.l d2,$8(A0)
00025F4A <AmiBlitz3.ab3@8498>   LEA $E(A0),A0
00025F4E <AmiBlitz3.ab3@8499>   MOVE.b #$14,(A0)+
00025F50 <AmiBlitz3.ab3@8500>   CLR.b (a0)+
00025F52 <AmiBlitz3.ab3@8502>   MOVE.l a0,d2
00025F54 <AmiBlitz3.ab3@8503>   ADDQ.l #4,d2
00025F56 <AmiBlitz3.ab3@8504>   MOVE.l d2,(a0)+
00025F58 <AmiBlitz3.ab3@8507>   MOVE.b (a4)+,(a0)+
00025F5A <AmiBlitz3.ab3@8508>   SUBQ.l #1,d1
00025F5E <AmiBlitz3.ab3@8509>   BNE 'lc1
00025F60 <AmiBlitz3.ab3@8510>   CLR.b (a0)+
00025F66 <AmiBlitz3.ab3@8511>   MOVE.w linenumat,(a0)
00025F6A <AmiBlitz3.ab3@8512>   MOVEM.l (A7)+,D1-D2/A0
00025F6C <AmiBlitz3.ab3@8513>  RTS
00025F6E <AmiBlitz3.ab3@8516>   MOVEQ.l #$10+2,D0
00025F70 <AmiBlitz3.ab3@8517>   ADD.l d1,d0
00025F74 <AmiBlitz3.ab3@8518>   MOVEM.l a4/d3,-(a7)
00025F76 <AmiBlitz3.ab3@8519>   MOVE.l d1,d3
00025F78 <AmiBlitz3.ab3@8520>   MOVEQ.l #$01,D1
00025F7E <AmiBlitz3.ab3@8521>   MOVEA.l _execbase,A6
00025F84 <AmiBlitz3.ab3@8522>   MOVE.l mempool2,a0
00025F88 <AmiBlitz3.ab3@8523>   JSR _AllocPooled(a6)
00025F8A <AmiBlitz3.ab3@8525>   TST.l d0
00025F8E <AmiBlitz3.ab3@8526>   BEQ nomemory
00025F90 <AmiBlitz3.ab3@8527>   MOVEA.l D0,A0
00025F98 <AmiBlitz3.ab3@8530>   MOVE.w linenumat+2,$C(A0)
00025F9E <AmiBlitz3.ab3@8531>   MOVE.l templabel,(A0)
00025FA4 <AmiBlitz3.ab3@8532>   MOVE.l A0,templabel
00025FAC <AmiBlitz3.ab3@8533>   MOVE.l destpointer,$4(A0)
00025FB0 <AmiBlitz3.ab3@8534>   MOVE.l d2,$8(A0)
00025FB4 <AmiBlitz3.ab3@8535>   LEA $E(A0),A0
00025FB6 <AmiBlitz3.ab3@8536>   MOVE.b d3,(A0)+
00025FBC <AmiBlitz3.ab3@8537>   ADD.b #$10,-1(a0)
00025FC0 <AmiBlitz3.ab3@8538>   MOVE.b #$1,(a0)+
00025FC2 <AmiBlitz3.ab3@8539>   SUBQ.w #1,d3
00025FC4 <AmiBlitz3.ab3@8542>   MOVE.b (a4)+,(a0)+
00025FC6 <AmiBlitz3.ab3@8543>   SUBQ.l #1,d3
00025FCA <AmiBlitz3.ab3@8544>   BNE.s 'lm2
00025FCC <AmiBlitz3.ab3@8545>   CLR.b (a0)+
00025FD2 <AmiBlitz3.ab3@8546>   MOVE.w linenumat,(a0)
00025FD6 <AmiBlitz3.ab3@8547>   MOVEM.l (a7)+,d3/a4
00025FDA <AmiBlitz3.ab3@8548>   MOVEM.l (A7)+,D1-D2/A0
00025FDC <AmiBlitz3.ab3@8549>  RTS
00025FE2 <AmiBlitz3.ab3@8552>   LEA lastgloballabel,a1
00025FE4 <AmiBlitz3.ab3@8555>   ADDQ.l #1,d1
00025FE6 <AmiBlitz3.ab3@8556>   TST.b (a1)+
00025FEA <AmiBlitz3.ab3@8557>   BNE.s 'll11
00025FEC <AmiBlitz3.ab3@8558>   MOVEQ.l #$10+2,D0
00025FEE <AmiBlitz3.ab3@8559>   ADD.l d1,d0
00025FF2 <AmiBlitz3.ab3@8560>   MOVEM.l a4/d3,-(a7)
00025FF4 <AmiBlitz3.ab3@8561>   MOVE.l d1,d3
00025FF6 <AmiBlitz3.ab3@8562>   MOVEQ.l #$01,D1
00025FFC <AmiBlitz3.ab3@8563>   MOVEA.l _execbase,A6
00026002 <AmiBlitz3.ab3@8564>   MOVE.l mempool2,a0
00026006 <AmiBlitz3.ab3@8565>   JSR _AllocPooled(a6)
00026008 <AmiBlitz3.ab3@8567>   TST.l d0
0002600C <AmiBlitz3.ab3@8568>   BEQ nomemory
0002600E <AmiBlitz3.ab3@8569>   MOVEA.l D0,A0
00026016 <AmiBlitz3.ab3@8572>   MOVE.w linenumat+2,$C(A0)
0002601C <AmiBlitz3.ab3@8573>   MOVE.l templabel,(A0)
00026022 <AmiBlitz3.ab3@8574>   MOVE.l A0,templabel
0002602A <AmiBlitz3.ab3@8575>   MOVE.l destpointer,$4(A0)
0002602E <AmiBlitz3.ab3@8576>   MOVE.l d2,$8(A0)
00026032 <AmiBlitz3.ab3@8577>   LEA $E(A0),A0
00026034 <AmiBlitz3.ab3@8578>   MOVE.b d3,(A0)+
0002603A <AmiBlitz3.ab3@8579>   ADD.b #$10,-1(a0)
0002603E <AmiBlitz3.ab3@8580>   MOVE.b #$1,(a0)+
00026040 <AmiBlitz3.ab3@8581>   SUBQ.w #1,d3
00026046 <AmiBlitz3.ab3@8582>   LEA lastgloballabel,a1
00026048 <AmiBlitz3.ab3@8585>   SUBQ.l #1,d3
0002604A <AmiBlitz3.ab3@8586>   MOVE.b (a1)+,(a0)+
0002604E <AmiBlitz3.ab3@8587>   BNE.s 'lm3
00026050 <AmiBlitz3.ab3@8588>   SUBQ.l #1,a0
00026052 <AmiBlitz3.ab3@8591>   MOVE.b (a4)+,(a0)+
00026054 <AmiBlitz3.ab3@8592>   SUBQ.l #1,d3
00026058 <AmiBlitz3.ab3@8593>   BNE.s 'lm1
0002605A <AmiBlitz3.ab3@8594>   CLR.b (a0)+
00026060 <AmiBlitz3.ab3@8595>   MOVE.w linenumat,(a0)
00026064 <AmiBlitz3.ab3@8596>   MOVEM.l (a7)+,d3/a4
00026068 <AmiBlitz3.ab3@8597>   MOVEM.l (A7)+,D1-D2/A0
0002606A <AmiBlitz3.ab3@8598> RTS
00026094 <AmiBlitz3.ab3@8602>   !basic
000260F6 <AmiBlitz3.ab3@8603>   error{!TRANS{"No memory available!!!\\nAB3 will terminate due to low memory!"}}
00026108 <AmiBlitz3.ab3@8604>   loop Delay_ 1
0002610E <AmiBlitz3.ab3@8605> Goto loop
00026112 <AmiBlitz3.ab3@8609>   MOVEM.l D0-D2/A0,-(A7)
00026116 <AmiBlitz3.ab3@8610>   MOVE.w $E(A0),-(A7)
0002611A <AmiBlitz3.ab3@8611>    BPL.w 'ok
0002611C <AmiBlitz3.ab3@8612>   CLR.w (A7)
0002611E <AmiBlitz3.ab3@8615>   MOVE.l A1,-(A7)
00026120 <AmiBlitz3.ab3@8616>   MOVEQ.l #$10+2,D0
00026126 <AmiBlitz3.ab3@8617>   ADD.w asmlen,D0
00026128 <AmiBlitz3.ab3@8618>   MOVE.w D0,D2
0002612A <AmiBlitz3.ab3@8619>   MOVEQ.l #$01,D1
00026130 <AmiBlitz3.ab3@8620>   MOVEA.l _execbase,A6
00026136 <AmiBlitz3.ab3@8621>   MOVE.l mempool2,a0
0002613A <AmiBlitz3.ab3@8622>   JSR _AllocPooled(a6)
0002613C <AmiBlitz3.ab3@8624>   MOVEA.l D0,A0
00026144 <AmiBlitz3.ab3@8627>   MOVE.w linenumat+2,$C(A0)
0002614A <AmiBlitz3.ab3@8628>   MOVE.l templabel,(A0)
00026150 <AmiBlitz3.ab3@8629>   MOVE.l A0,templabel
00026154 <AmiBlitz3.ab3@8630>   MOVE.l (A7),$4(A0)
00026158 <AmiBlitz3.ab3@8631>   MOVE.w d3,$8(A0)
0002615E <AmiBlitz3.ab3@8632>   MOVE.w $4(A7),$A(A0)
00026162 <AmiBlitz3.ab3@8633>   LEA $E(A0),A0
00026164 <AmiBlitz3.ab3@8634>   MOVE.b D2,(A0)+                                           ;length
0002616A <AmiBlitz3.ab3@8635>   MOVEA.l asmbuff,A1
0002616C <AmiBlitz3.ab3@8636>   ADDQ.w #1,A1
0002616E <AmiBlitz3.ab3@8637>   MOVE.b (A1)+,(A0)+                                        ;type - 0 = indirect,else direct
00026172 <AmiBlitz3.ab3@8638>    BNE.w 'loop
00026174 <AmiBlitz3.ab3@8639>   MOVE.l (A1)+,(A0)+
0002617A <AmiBlitz3.ab3@8640>   MOVE.w linenumat,(a0)
0002617E <AmiBlitz3.ab3@8641>  BRA.w 'loopdone
00026180 <AmiBlitz3.ab3@8644>    MOVE.b (A1)+,(A0)+
00026184 <AmiBlitz3.ab3@8645>    BNE.w 'loop
0002618A <AmiBlitz3.ab3@8646>    MOVE.w linenumat,(a0)
0002618C <AmiBlitz3.ab3@8649>   MOVEA.l (A7)+,A1
0002618E <AmiBlitz3.ab3@8650>   ADDQ.w #2,A7
00026192 <AmiBlitz3.ab3@8651>   MOVEM.l (A7)+,D0-D2/A0
00026194 <AmiBlitz3.ab3@8652> RTS
00026198 <AmiBlitz3.ab3@8656>   CMP.w #$5,D3
0002619C <AmiBlitz3.ab3@8657>    BCS.w 'done
000261A0 <AmiBlitz3.ab3@8658>   CMP.w #$B,D3
000261A4 <AmiBlitz3.ab3@8659>    BHI.w 'done2
000261A8 <AmiBlitz3.ab3@8660>    BEQ.w 'imm
000261AC <AmiBlitz3.ab3@8661>    BSR.w insasm
000261B0 <AmiBlitz3.ab3@8662>   CMP.w #$5,D3
000261B4 <AmiBlitz3.ab3@8663>    BEQ.w 'word
000261B8 <AmiBlitz3.ab3@8664>   CMP.w #$6,D3
000261BC <AmiBlitz3.ab3@8665>    BEQ.w 'dxi
000261C0 <AmiBlitz3.ab3@8666>   CMP.w #$7,D3
000261C4 <AmiBlitz3.ab3@8667>    BEQ.w 'word
000261C8 <AmiBlitz3.ab3@8668>   CMP.w #$8,D3
000261CC <AmiBlitz3.ab3@8669>    BEQ.w 'long
000261D0 <AmiBlitz3.ab3@8670>   CMP.w #$9,D3
000261D4 <AmiBlitz3.ab3@8671>    BEQ.w 'word
000261DA <AmiBlitz3.ab3@8675>   CMPA.l destbufferend,A1
000261DE <AmiBlitz3.ab3@8676>    BCS.w 'ok7
000261E0 <AmiBlitz3.ab3@8677>   ADDQ.w #2,A1
000261E2 <AmiBlitz3.ab3@8678>  RTS
000261E4 <AmiBlitz3.ab3@8681>   MOVE.w D4,(A1)+
000261E6 <AmiBlitz3.ab3@8682>  RTS
000261EE <AmiBlitz3.ab3@8685>   CMPI.w #$8,asmsize
000261F2 <AmiBlitz3.ab3@8686>    BCC.w 'immlong
000261F4 <AmiBlitz3.ab3@8687>   MOVEQ.l #$10,D3
000261F8 <AmiBlitz3.ab3@8688>    BSR.w insasm
000261FA <AmiBlitz3.ab3@8689>   MOVEQ.l #$0B,D3
000261FE <AmiBlitz3.ab3@8690>  BRA.w 'word
00026202 <AmiBlitz3.ab3@8693>   BSR.w insasm
00026204 <AmiBlitz3.ab3@8696>   ADDQ.w #2,A1
00026206 <AmiBlitz3.ab3@8699>   ADDQ.w #2,A1
00026208 <AmiBlitz3.ab3@8700>  RTS
0002620C <AmiBlitz3.ab3@8703>   CMP.w #$F,D3
00026210 <AmiBlitz3.ab3@8704>    BNE.w 'done
00026216 <AmiBlitz3.ab3@8705>   CMPA.l destbufferend,A1
0002621A <AmiBlitz3.ab3@8706>    BCS.w 'ok3
0002621C <AmiBlitz3.ab3@8707>   ADDQ.w #2,A1
0002621E <AmiBlitz3.ab3@8708>   ADDQ.w #4,A7
00026220 <AmiBlitz3.ab3@8709>  RTS
00026222 <AmiBlitz3.ab3@8712>   MOVE.w D2,(A1)+
00026224 <AmiBlitz3.ab3@8713>   ADDQ.w #4,A7
00026226 <AmiBlitz3.ab3@8716> RTS
0002622A <AmiBlitz3.ab3@8725>   BSR.w storeloc
00026234 <AmiBlitz3.ab3@8727>   MOVE.l linenumat,oldline
00026236 <AmiBlitz3.ab3@8729>   MOVEQ.l #$00,D1
0002623A <AmiBlitz3.ab3@8730>    BSR.w get1bytemain    ;eol?
0002623E <AmiBlitz3.ab3@8731>    BEQ.w 'done
00026240 <AmiBlitz3.ab3@8732>   MOVEQ.l #$00,D3
00026244 <AmiBlitz3.ab3@8733>  BRA.w 'skiphelp
00026248 <AmiBlitz3.ab3@8736>    BSR.w get1bytemain
0002624C <AmiBlitz3.ab3@8737>    BNE.w 'skip
0002624E <AmiBlitz3.ab3@8741>   TST.w D3
00026252 <AmiBlitz3.ab3@8742>    BNE.w brackets_                                         ;syntax error brackets
00026256 <AmiBlitz3.ab3@8743>  BRA.w 'done2
0002625C <AmiBlitz3.ab3@8746>    MOVE.w instringon,D4
00026260 <AmiBlitz3.ab3@8749>     BEQ 'skiphelp
00026262 <AmiBlitz3.ab3@8752>     MOVEQ #0,d0
00026264 <AmiBlitz3.ab3@8753>      MOVE.b (a5)+,d0                                       ;fix "ue"
0002626A <AmiBlitz3.ab3@8754>      MOVE.w d0,lastchar
0002626E <AmiBlitz3.ab3@8755>      BEQ 'ready
00026272 <AmiBlitz3.ab3@8756>      CMP.b #$22,d0
00026276 <AmiBlitz3.ab3@8757>      BNE 'l1
0002627C <AmiBlitz3.ab3@8758>      NOT.w instringon
00026280 <AmiBlitz3.ab3@8759>  BRA 'loop
00026284 <AmiBlitz3.ab3@8764>            CMP.b #"@",d0                                   ;expand line @@ 1. for parameter
00026288 <AmiBlitz3.ab3@8765>            BNE 'l10
0002628C <AmiBlitz3.ab3@8766>            CMP.b #"@",(a5)
00026290 <AmiBlitz3.ab3@8767>            BNE 'l10
00026296 <AmiBlitz3.ab3@8770>            TST.w ininclude
0002629A <AmiBlitz3.ab3@8771>            BNE 'inc
000262A0 <AmiBlitz3.ab3@8772>            MOVE.l sourceline3,a5
000262A6 <AmiBlitz3.ab3@8773>            CMP.l #0,a5
000262AA <AmiBlitz3.ab3@8774>            BNE 'l11t
000262B0 <AmiBlitz3.ab3@8775>            MOVEA.l sourceline,A5
000262B2 <AmiBlitz3.ab3@8778>            MOVEA.l (A5),A5
000262B8 <AmiBlitz3.ab3@8779>            CMP.l #0,a5
000262BC <AmiBlitz3.ab3@8780>            BEQ 'done2
000262C2 <AmiBlitz3.ab3@8781>            MOVE.l a5,sourceline3
000262C6 <AmiBlitz3.ab3@8782>            LEA $9(A5),A5
000262CA <AmiBlitz3.ab3@8783>   BRA 'l11
000262CC <AmiBlitz3.ab3@8786>            ADDQ.l #1,a5
000262CE <AmiBlitz3.ab3@8787>            TST.b (a5)
000262D2 <AmiBlitz3.ab3@8788>            BNE 'inc
000262D4 <AmiBlitz3.ab3@8792>            ADDQ.l #1,a5
000262D6 <AmiBlitz3.ab3@8793>            TST.b (a5)
000262DA <AmiBlitz3.ab3@8794>            BEQ illeolerr
000262DC <AmiBlitz3.ab3@8795>            MOVE.l a5,-(a7)
000262E0 <AmiBlitz3.ab3@8798>       CMP.b #" ",(a5)+
000262E4 <AmiBlitz3.ab3@8799>       BEQ 'l110
000262EA <AmiBlitz3.ab3@8800>        CMP.b #";",-1(a5)
000262EC <AmiBlitz3.ab3@8801>        MOVE.l (a7)+,a5
000262F0 <AmiBlitz3.ab3@8802>        BEQ 'l111
000262F4 <AmiBlitz3.ab3@8803>   BRA 'loop
000262F8 <AmiBlitz3.ab3@8807>    CMP.w #$29,D0      ;')'
000262FC <AmiBlitz3.ab3@8808>    BNE.w 'skip2
000262FE <AmiBlitz3.ab3@8809>   TST.w D3
00026302 <AmiBlitz3.ab3@8810>    BEQ.w 'done2
00026304 <AmiBlitz3.ab3@8813>   SUBQ.w #1,D3
00026308 <AmiBlitz3.ab3@8814>  BRA.w 'loop
0002630C <AmiBlitz3.ab3@8817>    CMP.w #$7D,D0      ;'}'
00026310 <AmiBlitz3.ab3@8818>    BEQ.w 'skip3
00026314 <AmiBlitz3.ab3@8819>   CMP.w #$28,D0       ;'('
00026318 <AmiBlitz3.ab3@8820>    BNE.w 'skip4a
0002631A <AmiBlitz3.ab3@8823>    ADDQ.w #1,D3
0002631E <AmiBlitz3.ab3@8824>  BRA.w 'loop
00026322 <AmiBlitz3.ab3@8827>   CMP.w #$7B,D0        ;'{'
00026326 <AmiBlitz3.ab3@8828>    BEQ.w 'skip4
0002632A <AmiBlitz3.ab3@8829>   CMP.w #$2C,D0        ;','
0002632E <AmiBlitz3.ab3@8830>    BNE.w 'loop
00026330 <AmiBlitz3.ab3@8831>   TST.w D3
00026334 <AmiBlitz3.ab3@8832>    BNE.w 'loop
00026336 <AmiBlitz3.ab3@8833>   ADDQ.w #1,D1
0002633A <AmiBlitz3.ab3@8834>  BRA.w 'loop
0002633C <AmiBlitz3.ab3@8837>   ADDQ.w #1,D1
00026342 <AmiBlitz3.ab3@8841>   CLR.l sourceline3
0002634C <AmiBlitz3.ab3@8842>   MOVE.l oldline,linenumat
00026350 <AmiBlitz3.ab3@8844> BRA.w resloc
00026356 <AmiBlitz3.ab3@8857>    CLR.w numreps
00026358 <AmiBlitz3.ab3@8858>   MOVE.w D1,D0
0002635C <AmiBlitz3.ab3@8859>   ANDI.w #$FF00,D0
00026360 <AmiBlitz3.ab3@8860>    BEQ.w 'noreps
00026362 <AmiBlitz3.ab3@8861>   LSR.w #8,D0
00026364 <AmiBlitz3.ab3@8862>   LSR.w #4,D0           ;d0= start of reps
00026368 <AmiBlitz3.ab3@8863>    BEQ.w 'skip
0002636A <AmiBlitz3.ab3@8864>   SUB.b D0,D1           ;new number to fetch
00026374 <AmiBlitz3.ab3@8866>    MOVE.w regnum,regnumfunc
0002637A <AmiBlitz3.ab3@8867>    MOVE.b funcparloop,-(a7)
00026382 <AmiBlitz3.ab3@8868>    MOVE.b #0,funcparloop
00026388 <AmiBlitz3.ab3@8869>    MOVE.l leftsidetype,-(a7)
0002638E <AmiBlitz3.ab3@8870>    MOVE.l rightsidetype,-(a7)
00026394 <AmiBlitz3.ab3@8871>    MOVE.w leftsideflagmask,-(a7)
0002639A <AmiBlitz3.ab3@8872>    MOVE.w rightsideflagmask,-(a7)
000263A0 <AmiBlitz3.ab3@8873>    CLR.l leftsidetype
000263A6 <AmiBlitz3.ab3@8874>    CLR.l rightsidetype
000263AC <AmiBlitz3.ab3@8875>    CLR.w leftsideflagmask
000263B2 <AmiBlitz3.ab3@8876>    CLR.w rightsideflagmask
000263B8 <AmiBlitz3.ab3@8877>    MOVE.b blitzparloop,-(a7)
000263C0 <AmiBlitz3.ab3@8878>    MOVE.b #1,blitzparloop
000263C4 <AmiBlitz3.ab3@8880>    BSR.w fetchpees2      ;fetch first parms
000263CA <AmiBlitz3.ab3@8882>    MOVE.b (a7)+,blitzparloop
000263D0 <AmiBlitz3.ab3@8883>    MOVE.w (a7)+,rightsideflagmask
000263D6 <AmiBlitz3.ab3@8884>    MOVE.w (a7)+,leftsideflagmask
000263DC <AmiBlitz3.ab3@8885>    MOVE.l (a7)+,rightsidetype
000263E2 <AmiBlitz3.ab3@8886>    MOVE.l (a7)+,leftsidetype
000263E8 <AmiBlitz3.ab3@8887>    MOVE.b (a7)+,funcparloop
000263EC <AmiBlitz3.ab3@8889>   CMP.w #$2C,D0          ;','
000263F0 <AmiBlitz3.ab3@8890>    BNE.w syntaxerr
000263F2 <AmiBlitz3.ab3@8895>   MOVE.w D1,D2
000263F4 <AmiBlitz3.ab3@8896>   LSR.w #8,D2
000263F8 <AmiBlitz3.ab3@8897>   ANDI.w #$7,D2         ;# repeatable....
000263FA <AmiBlitz3.ab3@8900>    CMP.b D2,D1
000263FE <AmiBlitz3.ab3@8901>    BCS.w 'repsdone      ;all reps done....
00026400 <AmiBlitz3.ab3@8902>   SUB.b D2,D1
00026404 <AmiBlitz3.ab3@8903>   MOVEM.l D2/A2,-(A7)
00026406 <AmiBlitz3.ab3@8904>   MOVE.w D2,D0
0002640C <AmiBlitz3.ab3@8906>   MOVE.b funcparloop,-(a7)
00026414 <AmiBlitz3.ab3@8907>   MOVE.b #0,funcparloop
0002641A <AmiBlitz3.ab3@8908>   MOVE.l leftsidetype,-(a7)
00026420 <AmiBlitz3.ab3@8909>   MOVE.l rightsidetype,-(a7)
00026426 <AmiBlitz3.ab3@8910>   MOVE.w leftsideflagmask,-(a7)
0002642C <AmiBlitz3.ab3@8911>   MOVE.w rightsideflagmask,-(a7)
00026432 <AmiBlitz3.ab3@8912>   CLR.l leftsidetype
00026438 <AmiBlitz3.ab3@8913>   CLR.l rightsidetype
0002643E <AmiBlitz3.ab3@8914>   CLR.w leftsideflagmask
00026444 <AmiBlitz3.ab3@8915>   CLR.w rightsideflagmask
0002644A <AmiBlitz3.ab3@8916>   MOVE.b blitzparloop,-(a7)
00026452 <AmiBlitz3.ab3@8917>   MOVE.b #1,blitzparloop
00026456 <AmiBlitz3.ab3@8919>   BSR.w fetchpees4
0002645C <AmiBlitz3.ab3@8921>   MOVE.b (a7)+,blitzparloop
00026462 <AmiBlitz3.ab3@8922>   MOVE.w (a7)+,rightsideflagmask
00026468 <AmiBlitz3.ab3@8923>   MOVE.w (a7)+,leftsideflagmask
0002646E <AmiBlitz3.ab3@8924>   MOVE.l (a7)+,rightsidetype
00026474 <AmiBlitz3.ab3@8925>   MOVE.l (a7)+,leftsidetype
0002647A <AmiBlitz3.ab3@8926>   MOVE.b (a7)+,funcparloop
0002647E <AmiBlitz3.ab3@8928>   MOVEM.l (A7)+,D2/A2
00026484 <AmiBlitz3.ab3@8929>   ADDQ.w #1,numreps
00026488 <AmiBlitz3.ab3@8930>  BRA.w 'rloop
0002648E <AmiBlitz3.ab3@8933>    MOVE.w numreps,D3
00026492 <AmiBlitz3.ab3@8934>    BEQ.w syntaxerr
00026494 <AmiBlitz3.ab3@8935>   ADDA.w D2,A2
00026498 <AmiBlitz3.ab3@8936>   ANDI.w #$FF,D1
0002649C <AmiBlitz3.ab3@8937>    BEQ.w 'done
000264A0 <AmiBlitz3.ab3@8944>   CMP.w #$2C,D0       ;','
000264A4 <AmiBlitz3.ab3@8945>    BNE.w syntaxerr
000264A6 <AmiBlitz3.ab3@8948>    MOVE.w D1,D0
000264AA <AmiBlitz3.ab3@8949>    BNE.w 'fetchpees2b
000264AC <AmiBlitz3.ab3@8952>  RTS
000264B2 <AmiBlitz3.ab3@8956>   MOVE.b funcparloop,-(a7)
000264B8 <AmiBlitz3.ab3@8957>   MOVE.l leftsidetype,-(a7)
000264BE <AmiBlitz3.ab3@8958>   MOVE.l rightsidetype,-(a7)
000264C4 <AmiBlitz3.ab3@8959>   MOVE.w leftsideflagmask,-(a7)
000264CA <AmiBlitz3.ab3@8960>   MOVE.w rightsideflagmask,-(a7)
000264D0 <AmiBlitz3.ab3@8961>   CLR.l leftsidetype
000264D6 <AmiBlitz3.ab3@8962>   CLR.l rightsidetype
000264DC <AmiBlitz3.ab3@8963>   CLR.w leftsideflagmask
000264E2 <AmiBlitz3.ab3@8964>   CLR.w rightsideflagmask
000264EA <AmiBlitz3.ab3@8965>   MOVE.b #0,funcparloop
000264F0 <AmiBlitz3.ab3@8966>   MOVE.b blitzparloop,-(a7)
000264F8 <AmiBlitz3.ab3@8967>   MOVE.b #1,blitzparloop
000264FC <AmiBlitz3.ab3@8968>   BSR.w fetchpees2
00026502 <AmiBlitz3.ab3@8969>   MOVE.b (a7)+,blitzparloop
00026508 <AmiBlitz3.ab3@8970>   MOVE.w (a7)+,rightsideflagmask
0002650E <AmiBlitz3.ab3@8971>   MOVE.w (a7)+,leftsideflagmask
00026514 <AmiBlitz3.ab3@8972>   MOVE.l (a7)+,rightsidetype
0002651A <AmiBlitz3.ab3@8973>   MOVE.l (a7)+,leftsidetype
00026520 <AmiBlitz3.ab3@8974>   MOVE.b (a7)+,funcparloop
00026522 <AmiBlitz3.ab3@8975> RTS
00026526 <AmiBlitz3.ab3@8979> ptype:    Dc.b $3F,$3C,$00,$00                             ;MOVE.W  #$0000,-(A7)
00026528 <AmiBlitz3.ab3@8982> partostack:  Ds.w 1                                        ;pmode org source
0002652A <AmiBlitz3.ab3@8986>   MOVEQ.l #$01,D2
0002652E <AmiBlitz3.ab3@8987> BRA.w fetchpees3
00026530 <AmiBlitz3.ab3@8990>   MOVEQ.l #$00,D2
00026534 <AmiBlitz3.ab3@8993>   ANDI.w #$F,D0
0002653A <AmiBlitz3.ab3@9001>   CLR.w parnum
0002653C <AmiBlitz3.ab3@9002>   MOVE.w D1,-(A7)
00026540 <AmiBlitz3.ab3@9003>   MOVE.w partostack(PC),-(A7)                              ;in case of recursion
00026546 <AmiBlitz3.ab3@9004>   MOVE.w D2,partostack
00026548 <AmiBlitz3.ab3@9005>   MOVE.w D0,-(A7)
0002654C <AmiBlitz3.ab3@9006>   CMP.w #"@@",(a5)                                        
00026550 <AmiBlitz3.ab3@9007>   BNE 'loop                                      ;was 'l15
00026556 <AmiBlitz3.ab3@9008>   TST.w ininclude                                          ;merge macrolines
0002655A <AmiBlitz3.ab3@9009>   BNE errorjoin
00026560 <AmiBlitz3.ab3@9010>        MOVEA.l sourceline,A5
00026562 <AmiBlitz3.ab3@9013>            MOVEA.l (A5),A5
00026568 <AmiBlitz3.ab3@9014>            MOVE.l a5,sourceline
0002656C <AmiBlitz3.ab3@9015>            LEA $9(A5),A5
00026572 <AmiBlitz3.ab3@9016>            ADDQ.l #1,linenumat
00026574 <AmiBlitz3.ab3@9019>   MOVE.b (A2)+,D2                                          ;parameterloop   d2=vartype
00026578 <AmiBlitz3.ab3@9020>    BNE.w 'skip0
0002657E <AmiBlitz3.ab3@9021>   MOVE.w userp,D2                                          ;user selected type
00026580 <AmiBlitz3.ab3@9024>    MOVE.l A2,-(A7)
00026586 <AmiBlitz3.ab3@9025>    ADDQ.w #1,parnum
0002658C <AmiBlitz3.ab3@9026>    TST.b funccall
00026590 <AmiBlitz3.ab3@9027>    BEQ 'skip0_l1
00026598 <AmiBlitz3.ab3@9028>    CMP.w #6,parnum
0002659C <AmiBlitz3.ab3@9029>    BLE 'skip0_l1
000265A0 <AmiBlitz3.ab3@9030>    CMP.w #7,d2
000265A6 <AmiBlitz3.ab3@9036>    TST.b fpu
000265AA <AmiBlitz3.ab3@9037>    BEQ 'skip0_old
000265B0 <AmiBlitz3.ab3@9038>    TST.w regnumfunc
000265B4 <AmiBlitz3.ab3@9039>    BEQ 'skip0_old
000265BA <AmiBlitz3.ab3@9040>    CMP.w #$48e7,-4(a4)
000265BE <AmiBlitz3.ab3@9041>    BNE 'skip0_old
000265C0 <AmiBlitz3.ab3@9042>    MOVEQ #0,d1
000265C6 <AmiBlitz3.ab3@9043>    MOVE.w regnum,d1
000265CC <AmiBlitz3.ab3@9044>    CMP regnumfunc,d1                                       ;fpu reg function save
000265D0 <AmiBlitz3.ab3@9045>    BGE 'skip0_old
000265D2 <AmiBlitz3.ab3@9046>    ASL.w #7,d1
000265D4 <AmiBlitz3.ab3@9047>    MOVE.l d0,-(a7)
000265DA <AmiBlitz3.ab3@9048>    MOVE.w regnumfunc,d0
000265E0 <AmiBlitz3.ab3@9049>    CLR.w regmask
000265E6 <AmiBlitz3.ab3@9052>    BSET d0,regmask
000265E8 <AmiBlitz3.ab3@9053>    SUBQ #1,d0
000265EC <AmiBlitz3.ab3@9054>    BNE 'skip0_loop
000265EE <AmiBlitz3.ab3@9055>     MOVEQ #0,d0
000265F4 <AmiBlitz3.ab3@9058>       BTST d0,regmask
000265F8 <AmiBlitz3.ab3@9059>       BEQ 'skip0_noa7
000265FA <AmiBlitz3.ab3@9060>       MOVEQ #0,d1
000265FC <AmiBlitz3.ab3@9061>       MOVE.w d0,d1
000265FE <AmiBlitz3.ab3@9062>       SUBQ.w #1,d1
00026600 <AmiBlitz3.ab3@9063>       ASL #7,d1
00026606 <AmiBlitz3.ab3@9064>       OR.l #$f2277400,d1                                   ;fmove.d
0002660A <AmiBlitz3.ab3@9066>       BSR writelong
00026610 <AmiBlitz3.ab3@9068>       ADDQ.l #2,stacktrack
00026616 <AmiBlitz3.ab3@9069>       MOVE.l stacktrack,d1
0002661C <AmiBlitz3.ab3@9070>       CMP.l #180,d1
00026620 <AmiBlitz3.ab3@9071>       BGT conmemerr                                        ;formel too complex
00026622 <AmiBlitz3.ab3@9072>       MOVE.l a0,-(a7)
00026628 <AmiBlitz3.ab3@9073>       LEA fpustackbase,a0
00026630 <AmiBlitz3.ab3@9074>       MOVE.w regmask,0(a0,d1)
00026632 <AmiBlitz3.ab3@9075>       MOVE.l (a7)+,a0
00026634 <AmiBlitz3.ab3@9078>       ADDQ.w #1,d0
0002663A <AmiBlitz3.ab3@9079>       CMP.w regnumfunc,d0
0002663E <AmiBlitz3.ab3@9080>       BLE 'skip0_loop2
00026640 <AmiBlitz3.ab3@9083>       MOVE.l (a7)+,d0
00026646 <AmiBlitz3.ab3@9086>      MOVE.l currentfunccall,-(a7)
0002664C <AmiBlitz3.ab3@9087>      MOVE.w parnum,-(a7)
00026652 <AmiBlitz3.ab3@9088>      TST.l rightsidetype
00026656 <AmiBlitz3.ab3@9089>      BSR.w handlep
0002665C <AmiBlitz3.ab3@9090>      MOVE.w (a7)+,parnum
00026662 <AmiBlitz3.ab3@9092>    MOVE.l (a7)+,currentfunccall
00026668 <AmiBlitz3.ab3@9095>     TST.b typecheck                            ;typecheck for function call
0002666C <AmiBlitz3.ab3@9096>     BEQ 'notypecheck
00026672 <AmiBlitz3.ab3@9097>     TST.b notypecheck
00026676 <AmiBlitz3.ab3@9098>     BNE 'notypecheck
0002667C <AmiBlitz3.ab3@9099>     TST.b blitzparloop
00026680 <AmiBlitz3.ab3@9100>     BNE 'isblitzlibcall                                    ;no typecheck for blitzlibs currently
0002668A <AmiBlitz3.ab3@9101>     CMP.l #0,currentfunccall
0002668E <AmiBlitz3.ab3@9102>     BEQ 'isblitzlibcall
00026692 <AmiBlitz3.ab3@9103>     MOVEM.l a0/a1,-(a7)
00026698 <AmiBlitz3.ab3@9104>     MOVE.l currentfunccall,a0
0002669E <AmiBlitz3.ab3@9105>     MOVE.w parnum,d1
000266A4 <AmiBlitz3.ab3@9106>     TST.b isconstantvalue
000266A8 <AmiBlitz3.ab3@9107>     BEQ 'noconstant
000266B2 <AmiBlitz3.ab3@9108>     CMP.l #0,lastconstantvalue
000266B6 <AmiBlitz3.ab3@9109>     BEQ 'isnull
000266BA <AmiBlitz3.ab3@9112>     MOVE.l funcstruct_parametertype-4(a0,d1*4),a0
000266C0 <AmiBlitz3.ab3@9113>     CMP.l #0,a0
000266C4 <AmiBlitz3.ab3@9114>     BEQ 'notype
000266CC <AmiBlitz3.ab3@9115>     CMP.l #$100,4(a0)
000266D0 <AmiBlitz3.ab3@9116>     BLE 'notype
000266D6 <AmiBlitz3.ab3@9117>     MOVE.l lasttoken,d1
000266DA <AmiBlitz3.ab3@9118>     CMP.w #NullTokenID,d1                   ;$b581 ok, when token for null
000266DE <AmiBlitz3.ab3@9119>     BEQ 'isnull
000266E4 <AmiBlitz3.ab3@9120>     TST.l typetocast
000266E8 <AmiBlitz3.ab3@9121>     BEQ 'nocast
000266EE <AmiBlitz3.ab3@9122>     MOVE.l typetocast,a1
000266F2 <AmiBlitz3.ab3@9123>     BRA 'typecheck
000266F8 <AmiBlitz3.ab3@9126>     MOVE.l rightsidetype,a1
000266FE <AmiBlitz3.ab3@9127>     CMP.l #0,a1
00026702 <AmiBlitz3.ab3@9128>     BEQ 'notype
0002670A <AmiBlitz3.ab3@9130>   'typecheck   CMP.l #$100,4(a1)
0002670C <AmiBlitz3.ab3@9132>     CMP.l a0,a1
00026710 <AmiBlitz3.ab3@9133>     BEQ 'ok
00026718 <AmiBlitz3.ab3@9135>     CMP.l #$100,4(a1)                 ; is a type here
0002671C <AmiBlitz3.ab3@9136>     BLE 'error
00026720 <AmiBlitz3.ab3@9137>     MOVE.l 4(a1),a1                   ; load the address of type.
00026724 <AmiBlitz3.ab3@9138>     CMP.l $a(a1),a0                   ; check if the bigger type contain in first place same type as the function need
00026728 <AmiBlitz3.ab3@9139>     BEQ 'ok
0002672E <AmiBlitz3.ab3@9142>    JMP error_convert_types            ; for syntax 4
00026734 <AmiBlitz3.ab3@9147>     CLR.l typetocast
00026738 <AmiBlitz3.ab3@9148>     MOVEM.l (a7)+,a0/a1
0002673E <AmiBlitz3.ab3@9154>    CLR.l lastfunction
00026744 <AmiBlitz3.ab3@9155>    TST.b fpu
00026748 <AmiBlitz3.ab3@9156>    BEQ 'skip0_noprint
0002674A <AmiBlitz3.ab3@9157>   MOVE.l (a7),a2
0002674C <AmiBlitz3.ab3@9158>   ADDQ.l #1,a2
00026750 <AmiBlitz3.ab3@9159>    CMP.b #5,d2
00026754 <AmiBlitz3.ab3@9160>   BNE 'skip0_noprint
0002675A <AmiBlitz3.ab3@9161>   CMP.b #$5d,24(a2)
0002675E <AmiBlitz3.ab3@9162>   BNE 'skip0_noprint
00026764 <AmiBlitz3.ab3@9163>   CMP.b #$81,25(a2)
00026768 <AmiBlitz3.ab3@9164>   BLT 'skip0_noprint
0002676E <AmiBlitz3.ab3@9165>   CMP.b #$86,25(a2)
00026772 <AmiBlitz3.ab3@9166>   BEQ 'skip0_ok
00026778 <AmiBlitz3.ab3@9167>   CMP.b #$87,25(a2)
0002677C <AmiBlitz3.ab3@9168>   BEQ 'skip0_ok
00026782 <AmiBlitz3.ab3@9169>   CMP.b #$88,25(a2)
00026786 <AmiBlitz3.ab3@9170>   BEQ 'skip0_ok
0002678C <AmiBlitz3.ab3@9171>   CMP.b #$83,25(a2)
00026790 <AmiBlitz3.ab3@9172>   BGT 'skip0_noprint
00026796 <AmiBlitz3.ab3@9175>   MOVE.l destpointer,a4
0002679C <AmiBlitz3.ab3@9176>   CMP.w #$2f00,-2(a4)
000267A0 <AmiBlitz3.ab3@9177>   BNE 'skip0_noprint
000267A6 <AmiBlitz3.ab3@9178>   SUBQ.l #2,destpointer
000267AC <AmiBlitz3.ab3@9180>   MOVE.l #$f2277400,d1
000267B0 <AmiBlitz3.ab3@9181>   BSR writelong                                            ;fmove.d fp0,-(a7)
000267B6 <AmiBlitz3.ab3@9182>   ADDQ #4,a2offset
000267BC <AmiBlitz3.ab3@9199>   CLR.b optistring
000267BE <AmiBlitz3.ab3@9200>   MOVEA.l (A7)+,A2
000267C2 <AmiBlitz3.ab3@9201>    CMP.w #"@",d0
000267C6 <AmiBlitz3.ab3@9202>   BNE 'skip0_l10
000267CA <AmiBlitz3.ab3@9203>    CMP.b #"@",(a5)
000267CE <AmiBlitz3.ab3@9204>   BNE 'skip0_l10
000267D4 <AmiBlitz3.ab3@9205>   TST.w ininclude
000267D8 <AmiBlitz3.ab3@9206>   BNE errorjoin
000267DE <AmiBlitz3.ab3@9207>   MOVEA.l sourceline,A5
000267E0 <AmiBlitz3.ab3@9208>            MOVEA.l (A5),A5
000267E6 <AmiBlitz3.ab3@9209>            MOVE.l a5,sourceline
000267EC <AmiBlitz3.ab3@9210>            ADDQ.l #1,linenumat
000267F0 <AmiBlitz3.ab3@9211>            LEA $9(A5),A5
000267F2 <AmiBlitz3.ab3@9212>            MOVEQ #0,d0
000267F6 <AmiBlitz3.ab3@9213>            BSR get1bytemain
000267FA <AmiBlitz3.ab3@9216>    CMP.b #32,(a5)+ ;for space after a ,
000267FE <AmiBlitz3.ab3@9217>    BEQ 'skip0_l10:
00026800 <AmiBlitz3.ab3@9218>    SUBQ.l #1,a5
00026804 <AmiBlitz3.ab3@9220>    CMP.w #"@@",(a5)                                        ;if merge
00026808 <AmiBlitz3.ab3@9221>    BNE 'skip0_l15
0002680C <AmiBlitz3.ab3@9222>    MOVEM.l d0-d7/a0-a4/a6,-(a7)
00026812 <AmiBlitz3.ab3@9223>    JSR mergeline
00026816 <AmiBlitz3.ab3@9224>    MOVEM.l (a7)+,d0-d7/a0-a4/a6
00026818 <AmiBlitz3.ab3@9244>       SUBQ.w #1,(A7)
0002681C <AmiBlitz3.ab3@9245>    BEQ.w 'done
00026820 <AmiBlitz3.ab3@9247>     CMP.w #$2C,D0
00026824 <AmiBlitz3.ab3@9249>    BNE 'overloadfunc
00026828 <AmiBlitz3.ab3@9250>  BRA.w 'loop
0002682A <AmiBlitz3.ab3@9253>   ADDQ.w #2,A7
00026830 <AmiBlitz3.ab3@9254>   MOVE.w (A7)+,partostack
00026832 <AmiBlitz3.ab3@9255>   MOVE.w (A7)+,D1
00026838 <AmiBlitz3.ab3@9256>   CLR.b isconstantvalue
00026842 <AmiBlitz3.ab3@9257>   MOVE.l currentfunccall,lastfunction
00026848 <AmiBlitz3.ab3@9258>   CLR.b funccall
0002684E <AmiBlitz3.ab3@9259>   CLR.l currentfunccall
00026850 <AmiBlitz3.ab3@9260>  RTS
00026856 <AmiBlitz3.ab3@9263>   CLR.b funccall
0002685C <AmiBlitz3.ab3@9264>   MOVE.w regnum,d1
00026862 <AmiBlitz3.ab3@9265>   MOVE.l currentfunccall,a4
00026866 <AmiBlitz3.ab3@9266>   CMP.b $20(a4),d1                                         ;increase if more pars
0002686A <AmiBlitz3.ab3@9267>   BLT notparerr
0002686C <AmiBlitz3.ab3@9270>   MOVE.b (a2)+,d2
00026874 <AmiBlitz3.ab3@9271>   ADD.w #1,parnum
0002687A <AmiBlitz3.ab3@9272>   TST.b fpu
0002687E <AmiBlitz3.ab3@9273>   BEQ 'nofpu
00026882 <AmiBlitz3.ab3@9274>   CMP.b #5,d2
00026886 <AmiBlitz3.ab3@9275>   BNE 'nofpu
00026888 <AmiBlitz3.ab3@9276>   MOVEQ #0,d1
0002688E <AmiBlitz3.ab3@9277>   MOVE.w regnum,d1
00026896 <AmiBlitz3.ab3@9278>   CMP.w #6,regnum
0002689A <AmiBlitz3.ab3@9279>   BLT 'nostack2
0002689E <AmiBlitz3.ab3@9286>   MOVE.w #$2c3c,d1
000268A2 <AmiBlitz3.ab3@9287>   BSR writeword
000268A8 <AmiBlitz3.ab3@9288>   MOVE.l #$bf800000,d1
000268AC <AmiBlitz3.ab3@9289>   BSR writelong
000268B0 <AmiBlitz3.ab3@9290>   MOVE.w #$c4ff,d1                                         ;savetemp+regnum
000268B6 <AmiBlitz3.ab3@9291>   ADD.w parnum,d1
000268BC <AmiBlitz3.ab3@9292>   JSR Atokejsr
000268C2 <AmiBlitz3.ab3@9293>   TST.w dontwrite_nomemleft
000268C6 <AmiBlitz3.ab3@9294>   BNE 'l1
000268CC <AmiBlitz3.ab3@9295>   MOVE.l data1start,d1
000268D2 <AmiBlitz3.ab3@9296>   MOVE.l destpointer,a4
000268D6 <AmiBlitz3.ab3@9297>   ADD.l d1,-4(a4)
000268DC <AmiBlitz3.ab3@9298>   MOVE.l destpointer,d1
000268DE <AmiBlitz3.ab3@9299>   SUBQ.l #4,d1
000268E4 <AmiBlitz3.ab3@9300>   SUB.l destbufferstart,d1
000268E6 <AmiBlitz3.ab3@9301>   MOVE.l d2,-(a7)
000268E8 <AmiBlitz3.ab3@9302>   MOVE.l d1,d2
000268EE <AmiBlitz3.ab3@9303>   JSR addhunkoffset
000268F0 <AmiBlitz3.ab3@9304>   MOVE.l (a7)+,d2
000268F4 <AmiBlitz3.ab3@9305>  BRA 'l1
000268F6 <AmiBlitz3.ab3@9308>   ASL.l #7,d1
000268FC <AmiBlitz3.ab3@9309>   OR.l #$F23C5000,d1                                       ;fmove.w #-1,fpx
00026900 <AmiBlitz3.ab3@9310>   BSR writelong
00026902 <AmiBlitz3.ab3@9311>   MOVEQ #-1,d1                                             ;-1
00026906 <AmiBlitz3.ab3@9312>   BSR writeword
0002690A <AmiBlitz3.ab3@9313>  BRA 'l1
00026910 <AmiBlitz3.ab3@9316>   MOVE.w regnum,d1
00026918 <AmiBlitz3.ab3@9317>   CMP.w #6,regnum
0002691C <AmiBlitz3.ab3@9318>   BLT 'nostack
00026920 <AmiBlitz3.ab3@9323>   CMP.b #2,d2
00026924 <AmiBlitz3.ab3@9324>   BGT 'nw
00026928 <AmiBlitz3.ab3@9325>  BRA 'nos
0002692C <AmiBlitz3.ab3@9334>   CMP.w #7,d2
00026930 <AmiBlitz3.ab3@9335>   BNE 'nos
00026936 <AmiBlitz3.ab3@9336>   ADDQ #4,a2offset
0002693C <AmiBlitz3.ab3@9339>     MOVE.l #$48780000,d1
00026940 <AmiBlitz3.ab3@9340>     BSR writelong
00026946 <AmiBlitz3.ab3@9341>     ADDQ.w #4,a2offset
0002694A <AmiBlitz3.ab3@9342>     MOVE.w #$2f3c,d1
0002694E <AmiBlitz3.ab3@9343>     BSR writeword
00026954 <AmiBlitz3.ab3@9344>     MOVE.l #-1,d1
00026958 <AmiBlitz3.ab3@9345>     BSR writelong
0002695C <AmiBlitz3.ab3@9346>    BRA 'l1
00026960 <AmiBlitz3.ab3@9350>   CMP.b #4,d2
00026964 <AmiBlitz3.ab3@9351>       BNE 'noq
00026968 <AmiBlitz3.ab3@9352>       MOVE.w #$2c3c,d1
0002696C <AmiBlitz3.ab3@9353>       BSR writeword
00026972 <AmiBlitz3.ab3@9354>       MOVE.l #$ffff0000,d1
00026976 <AmiBlitz3.ab3@9355>       BSR writelong
0002697A <AmiBlitz3.ab3@9356>  BRA 'noq2
0002697E <AmiBlitz3.ab3@9359>      CMP.b #5,d2
00026982 <AmiBlitz3.ab3@9360>      BNE 'nof
00026986 <AmiBlitz3.ab3@9361>       MOVE.w #$2c3c,d1
0002698A <AmiBlitz3.ab3@9362>       BSR writeword
00026990 <AmiBlitz3.ab3@9363>       MOVE.l #$800000c1,d1
00026994 <AmiBlitz3.ab3@9364>       BSR writelong
00026998 <AmiBlitz3.ab3@9365>  BRA 'noq2
0002699C <AmiBlitz3.ab3@9368>   MOVE.w #$7cff,d1
000269A0 <AmiBlitz3.ab3@9369>   BSR writeword
000269A4 <AmiBlitz3.ab3@9372>   MOVE.w #$c4ff,d1                                         ;savetemp+regnum
000269AA <AmiBlitz3.ab3@9373>   ADD.w parnum,d1
000269B0 <AmiBlitz3.ab3@9374>   JSR Atokejsr
000269B6 <AmiBlitz3.ab3@9375>    TST.w dontwrite_nomemleft
000269BA <AmiBlitz3.ab3@9376>    BNE 'l1
000269C0 <AmiBlitz3.ab3@9377>    MOVE.l data1start,d1
000269C6 <AmiBlitz3.ab3@9378>    MOVE.l destpointer,a4
000269CA <AmiBlitz3.ab3@9379>    ADD.l d1,-4(a4)
000269D0 <AmiBlitz3.ab3@9380>    MOVE.l destpointer,d1
000269D2 <AmiBlitz3.ab3@9381>    SUBQ.l #4,d1
000269D8 <AmiBlitz3.ab3@9382>    SUB.l destbufferstart,d1
000269DA <AmiBlitz3.ab3@9383>    MOVE.l d2,-(a7)
000269DC <AmiBlitz3.ab3@9384>    MOVE.l d1,d2
000269E2 <AmiBlitz3.ab3@9385>    JSR addhunkoffset
000269E4 <AmiBlitz3.ab3@9386>    MOVE.l (a7)+,d2
000269E8 <AmiBlitz3.ab3@9387>  BRA 'l1
000269EA <AmiBlitz3.ab3@9390>   ASL.l #8,d1
000269EC <AmiBlitz3.ab3@9391>   ASL.l #1,d1
000269F2 <AmiBlitz3.ab3@9392>   OR.l #$203c,d1                                           ;-1
000269F6 <AmiBlitz3.ab3@9393>   BSR writeword
000269FC <AmiBlitz3.ab3@9394>   MOVE.l #-1,d1
00026A00 <AmiBlitz3.ab3@9395>   CMP.b #4,d2
00026A04 <AmiBlitz3.ab3@9396>   BNE 'nq1
00026A0A <AmiBlitz3.ab3@9397>   MOVE.l #$ffff0000,d1
00026A0E <AmiBlitz3.ab3@9400>   CMP.b #5,d2
00026A12 <AmiBlitz3.ab3@9401>   BNE 'nof2
00026A18 <AmiBlitz3.ab3@9402>   TST.b fpu
00026A1C <AmiBlitz3.ab3@9403>   BNE 'nof2
00026A22 <AmiBlitz3.ab3@9404>   MOVE.l #$800000c1,d1
00026A26 <AmiBlitz3.ab3@9407>    BSR writelong
00026A2A <AmiBlitz3.ab3@9408>    CMP.b #7,d2
00026A2E <AmiBlitz3.ab3@9409>    BNE 'l1
00026A34 <AmiBlitz3.ab3@9411>      MOVE.l #$48780000,d1
00026A38 <AmiBlitz3.ab3@9412>      BSR writelong
00026A3E <AmiBlitz3.ab3@9414>    ADDQ.w #4,a2offset                                      ; bug fix for string parameters
00026A44 <AmiBlitz3.ab3@9415>    MOVE.l #$594f,d1                                        ; subq #4,a7
00026A48 <AmiBlitz3.ab3@9416>    BSR writeword
00026A4A <AmiBlitz3.ab3@9419>    SUBQ.w #1,(A7)
00026A4E <AmiBlitz3.ab3@9420>    BEQ.w 'done
00026A54 <AmiBlitz3.ab3@9421>    ADDQ.w #1,regnum
00026A58 <AmiBlitz3.ab3@9422>  BRA 'ol2
00026A5A <AmiBlitz3.ab3@9435>    MOVE.w D2,D1
00026A5E <AmiBlitz3.ab3@9436>    ANDI.w #$40,D1          ;push bit
00026A64 <AmiBlitz3.ab3@9437>    MOVE.b D1,partostack
00026A66 <AmiBlitz3.ab3@9438>    TST.b D2
00026A6A <AmiBlitz3.ab3@9439>     BMI.w handlevara
00026A6E <AmiBlitz3.ab3@9440>    BTST #$5,D2
00026A72 <AmiBlitz3.ab3@9441>     BNE.w handlearr
00026A78 <AmiBlitz3.ab3@9446>     MOVE.w regnumstore,-(a7)
00026A7E <AmiBlitz3.ab3@9447>     MOVE.w tempregnum,-(a7)
00026A84 <AmiBlitz3.ab3@9448>     MOVE.w parnum,-(a7)
00026A88 <AmiBlitz3.ab3@9450>     BSR.w getap                                        ;recursive entry
00026A8E <AmiBlitz3.ab3@9452>     MOVE.w (a7)+,parnum
00026A94 <AmiBlitz3.ab3@9453>     MOVE.w (a7)+,tempregnum
00026A9A <AmiBlitz3.ab3@9454>     MOVE.w (a7)+,regnumstore
00026A9E <AmiBlitz3.ab3@9460>     MOVE.w partostack(PC),D1
00026AA2 <AmiBlitz3.ab3@9461>     BEQ.w putapincreg
00026AA8 <AmiBlitz3.ab3@9465>    ADDQ.w #4,a2offset
00026AAE <AmiBlitz3.ab3@9467>    MOVE.w pushdn,D1
00026AB4 <AmiBlitz3.ab3@9468>    OR.w regnum,D1      ;push long
00026AB8 <AmiBlitz3.ab3@9469>    CMP.w #$3,D2
00026ABC <AmiBlitz3.ab3@9470>     BCC.w 'skip
00026AC2 <AmiBlitz3.ab3@9471>    SUBQ.w #2,a2offset
00026AC6 <AmiBlitz3.ab3@9472>    ORI.w #$1000,D1    ;push word only
00026ACA <AmiBlitz3.ab3@9473>    BSR.w writeword
00026ACC <AmiBlitz3.ab3@9474>  RTS
00026AD0 <AmiBlitz3.ab3@9478>   CMP.b #7,d2
00026AD4 <AmiBlitz3.ab3@9479>    BNE 'l10a
00026ADC <AmiBlitz3.ab3@9480>    CMP.b #2,optistring
00026AE2 <AmiBlitz3.ab3@9484>   TST.b iee
00026AE6 <AmiBlitz3.ab3@9485>   BEQ 'olda
00026AEA <AmiBlitz3.ab3@9486>   CMP.b #5,d2
00026AEE <AmiBlitz3.ab3@9487>   BNE 'olda
00026AF2 <AmiBlitz3.ab3@9491>   BSR.w writeword                                          ;write val to stack
00026AF4 <AmiBlitz3.ab3@9492>  RTS
00026AFA <AmiBlitz3.ab3@9496>   SUBQ.w #4,a2offset
00026AFC <AmiBlitz3.ab3@9497> RTS
00026B02 <AmiBlitz3.ab3@9502>   ADDQ.w #1,regnum
00026B04 <AmiBlitz3.ab3@9503> RTS
00026B06 <AmiBlitz3.ab3@9507>   MOVEQ.l #$03,D2
00026B0A <AmiBlitz3.ab3@9508> BRA.w putap
00026B0E <AmiBlitz3.ab3@9514>   ANDI.w #$7,D2
00026B10 <AmiBlitz3.ab3@9515>   MOVE.w D2,-(A7)
00026B14 <AmiBlitz3.ab3@9517>    BSR.w ampersand2  ;ignore pnt to $
00026B18 <AmiBlitz3.ab3@9519>   CMP.b #$7,D2                                             ;ignore pnt to $
00026B1C <AmiBlitz3.ab3@9520>    BEQ.w 'nop2
00026B20 <AmiBlitz3.ab3@9522>   BTST #$E,D2
00026B24 <AmiBlitz3.ab3@9523>    BEQ.w 'nop
00026B28 <AmiBlitz3.ab3@9524>   MOVE.b #$3,D2      ;pointer to long                                      ;pointer to long
00026B2C <AmiBlitz3.ab3@9525>  BRA.w 'nop2
00026B2E <AmiBlitz3.ab3@9528>    TST.b D2
00026B32 <AmiBlitz3.ab3@9529>    BNE.w 'nop2
00026B36 <AmiBlitz3.ab3@9530>   MOVE.b #$3,D2
00026B38 <AmiBlitz3.ab3@9533>   MOVE.w (A7)+,D3
00026B3A <AmiBlitz3.ab3@9534>   TST.b D3
00026B3E <AmiBlitz3.ab3@9535>    BEQ.w 'unp
00026B40 <AmiBlitz3.ab3@9536>   CMP.b D2,D3
00026B44 <AmiBlitz3.ab3@9537>    BEQ.w putalp
00026B48 <AmiBlitz3.ab3@9538>  BRA.w mismatcherr
00026B4E <AmiBlitz3.ab3@9541>   ADDQ.w #2,a2offset
00026B52 <AmiBlitz3.ab3@9542>   MOVE.w ptype(PC),D1
00026B56 <AmiBlitz3.ab3@9543>    BSR.w writeword
00026B58 <AmiBlitz3.ab3@9544>   MOVEQ.l #$00,D1
00026B5A <AmiBlitz3.ab3@9545>   MOVE.b D2,D1
00026B5E <AmiBlitz3.ab3@9546>    BSR.w writeword
00026B62 <AmiBlitz3.ab3@9547> BRA.w putalp
00026B64 <AmiBlitz3.ab3@9551>    MOVE.w D2,-(A7)
00026B68 <AmiBlitz3.ab3@9552>    BSR.w baseadd
00026B6E <AmiBlitz3.ab3@9553>   BTST #$4,$1(A7)
00026B72 <AmiBlitz3.ab3@9554>    BEQ.w 'nohigh
00026B76 <AmiBlitz3.ab3@9555>    BSR.w highadd
00026B7C <AmiBlitz3.ab3@9558>    BTST #$3,$1(A7)
00026B80 <AmiBlitz3.ab3@9559>    BEQ.w 'notype
00026B84 <AmiBlitz3.ab3@9560>    BSR.w sendtype
00026B86 <AmiBlitz3.ab3@9563>    MOVE.w (A7)+,D2
00026B8A <AmiBlitz3.ab3@9564> BRA.w get1bytemain
00026B90 <AmiBlitz3.ab3@9570>   MOVE.w regnum,D1
00026B92 <AmiBlitz3.ab3@9571>   LSL.w #8,D1
00026B94 <AmiBlitz3.ab3@9572>   LSL.w #1,D1
00026B98 <AmiBlitz3.ab3@9573>   ORI.w #$7000,D1
00026B9E <AmiBlitz3.ab3@9574>   BTST #$0,$7(A3)
00026BA2 <AmiBlitz3.ab3@9575>    BNE.w 'isap         ;A Pointer
00026BAA <AmiBlitz3.ab3@9576>   CMPI.l #$100,$4(A2)
00026BAE <AmiBlitz3.ab3@9577>    BCC.w arrerr1       ;illegal type to send
00026BB2 <AmiBlitz3.ab3@9578>   MOVE.b $7(A2),D1
00026BB6 <AmiBlitz3.ab3@9581>   BSR.w writeword      ;moveq #type,d regat
00026BB8 <AmiBlitz3.ab3@9582>   MOVEQ.l #$02,D2      ;just a word.
00026BBC <AmiBlitz3.ab3@9583> BRA.w pushap
00026BC0 <AmiBlitz3.ab3@9586>   MOVE.b #$3,D1
00026BC4 <AmiBlitz3.ab3@9587> BRA.w 'putit
00026BC8 <AmiBlitz3.ab3@9593>    BSR.w get1bytemain                                      ;write array paramter code
00026BCC <AmiBlitz3.ab3@9594>    BSR.w getparameter
00026BD4 <AmiBlitz3.ab3@9595>   BTST #$1,flagmask+1
00026BD8 <AmiBlitz3.ab3@9596>    BEQ.w syntaxerr
00026BDC <AmiBlitz3.ab3@9597>    BSR.w fetchvars
00026BE0 <AmiBlitz3.ab3@9599>    BSR.w get1bytemain
00026BE4 <AmiBlitz3.ab3@9600>   CMP.w #$29,D0          ;')'  ;we just want a() or whatever                                 ;we just want a() or whatever
00026BE8 <AmiBlitz3.ab3@9601>    BNE.w syntaxerr
00026BEE <AmiBlitz3.ab3@9602>   MOVE.w notshared,D1
00026BF2 <AmiBlitz3.ab3@9603>    BNE.w noarrayerr
00026BF8 <AmiBlitz3.ab3@9604>   MOVE.w regnum,D1
00026BFA <AmiBlitz3.ab3@9605>   LSL.w #8,D1
00026BFC <AmiBlitz3.ab3@9606>   LSL.w #1,D1
00026C00 <AmiBlitz3.ab3@9607>   OR.w fbase(PC),D1
00026C06 <AmiBlitz3.ab3@9609>    TST.b varmode
00026C0A <AmiBlitz3.ab3@9610>    BEQ 'l1
00026C0E <AmiBlitz3.ab3@9611>    BCLR #0,d1
00026C12 <AmiBlitz3.ab3@9615>    BSR.w writeword
00026C16 <AmiBlitz3.ab3@9616>   MOVE.w $4(A3),D1
00026C1A <AmiBlitz3.ab3@9617>    BSR.w writeword
00026C1E <AmiBlitz3.ab3@9618> BRA.w putalp      ;OK, we've got da base reg.
00026C24 <AmiBlitz3.ab3@9624>   MOVE.w regnum,D1
00026C26 <AmiBlitz3.ab3@9625>   LSL.w #8,D1
00026C28 <AmiBlitz3.ab3@9626>   LSL.w #1,D1
00026C2C <AmiBlitz3.ab3@9627>   OR.w fbase(PC),D1
00026C32 <AmiBlitz3.ab3@9629>    TST.b varmode
00026C36 <AmiBlitz3.ab3@9630>    BEQ 'l1
00026C3A <AmiBlitz3.ab3@9631>    BCLR #0,d1
00026C3E <AmiBlitz3.ab3@9635>    BSR.w writeword
00026C42 <AmiBlitz3.ab3@9637>   MOVE.w $8(A3),D1
00026C44 <AmiBlitz3.ab3@9638>   LSL.w #2,D1
00026C4A <AmiBlitz3.ab3@9639>   MOVE.w varmode,D2
00026C4E <AmiBlitz3.ab3@9640>    BEQ.w 'isglob
00026C50 <AmiBlitz3.ab3@9641>   NEG.w D1
00026C54 <AmiBlitz3.ab3@9644>    ADD.w $4(A3),D1
00026C58 <AmiBlitz3.ab3@9645>    BSR.w writeword
00026C5E <AmiBlitz3.ab3@9646>   MOVE.w regnum,D1
00026C60 <AmiBlitz3.ab3@9647>   LSL.w #8,D1
00026C62 <AmiBlitz3.ab3@9648>   LSL.w #1,D1
00026C66 <AmiBlitz3.ab3@9650>   MOVE.w partostack(PC),D2
00026C6A <AmiBlitz3.ab3@9651>    BNE.w 'dopadd           ;we just pushed last parameter!
00026C72 <AmiBlitz3.ab3@9652>   CMPI.w #$7,regnum
00026C76 <AmiBlitz3.ab3@9653>    BCC.w 'dopadd           ;last was d6, it must have been
00026C7A <AmiBlitz3.ab3@9655>   OR.w pushlast(PC),D1
00026C80 <AmiBlitz3.ab3@9656>   MOVE.w regnum,D2
00026C82 <AmiBlitz3.ab3@9657>   SUBQ.w #1,D2
00026C84 <AmiBlitz3.ab3@9658>   OR.w D2,D1
00026C88 <AmiBlitz3.ab3@9659>  BRA.w 'pp
00026C8C <AmiBlitz3.ab3@9664>   OR.w pushadd(PC),D1
00026C90 <AmiBlitz3.ab3@9667>   BSR.w writeword
00026C98 <AmiBlitz3.ab3@9668>   MOVE.b #$1,partostack
00026C9C <AmiBlitz3.ab3@9669> BRA.w putalp
00026CA0 <AmiBlitz3.ab3@9673> fbase:       Dc.b $20,$2D,$00,$00                           ;MOVE.L  $0000(A5),D0
00026CA2 <AmiBlitz3.ab3@9674> pushadd:     Dc.b $D0,$97                                   ;ADD.L (A7),D0
00026CA4 <AmiBlitz3.ab3@9675> pushlast:    Dc.b $D0,$80                                   ;ADD.L D0,D0
00026CA8 <AmiBlitz3.ab3@9680>   ANDI.w #$7,D2                                            ;0-7 (unknown to string)
00026CAC <AmiBlitz3.ab3@9681>    BEQ.w evalu2
00026CB0 <AmiBlitz3.ab3@9682> BRA.w eval
00026CB6 <AmiBlitz3.ab3@9686>   MOVEA.l libpointer,A1
00026CBA <AmiBlitz3.ab3@9689>    CMPA.w #$0,A1
00026CBE <AmiBlitz3.ab3@9690>    BEQ.w 'done
00026CC4 <AmiBlitz3.ab3@9691>   MOVE.w #-1,$A(A1)
00026CCA <AmiBlitz3.ab3@9692>   BCLR #$7,$C(A1)
00026CCC <AmiBlitz3.ab3@9693>   MOVEA.l (A1),A1
00026CD0 <AmiBlitz3.ab3@9694>  BRA.w 'loop
00026CD2 <AmiBlitz3.ab3@9697> RTS
00026CD6 <AmiBlitz3.ab3@9701>   MOVE.w #$FFFE,D1       ;#allocvars
00026CDA <AmiBlitz3.ab3@9705>    BSR.w findlib
00026CE0 <AmiBlitz3.ab3@9708>   TST.w cfetchmode
00026CE4 <AmiBlitz3.ab3@9709>    BEQ.w 'noconst
00026CEA <AmiBlitz3.ab3@9710>   BTST #$6,$C(A1)
00026CEE <AmiBlitz3.ab3@9711>    BNE.w 'constok
00026CF2 <AmiBlitz3.ab3@9713>  BRA.w badconerr                                            ;Can't use this Library!
00026CF4 <AmiBlitz3.ab3@9716>  RTS
00026CFA <AmiBlitz3.ab3@9719>    BSET #$7,$C(A1)
00026CFE <AmiBlitz3.ab3@9720>    BNE.w 'skip                                         ;already done....
00026D04 <AmiBlitz3.ab3@9721>    CMPI.w #-1,$A(A1)
00026D08 <AmiBlitz3.ab3@9722>    BNE.w 'skip                                         ;something already here
00026D0E <AmiBlitz3.ab3@9726>    TST.w dirmode
00026D12 <AmiBlitz3.ab3@9727>    BEQ.b 'oktouse
00026D18 <AmiBlitz3.ab3@9730>    TST.b exdebug
00026D1C <AmiBlitz3.ab3@9731>    BEQ 'l1
00026D20 <AmiBlitz3.ab3@9732>  BRA.b 'oktouse
00026D26 <AmiBlitz3.ab3@9736>   BCLR #$7,$C(A1)
00026D2A <AmiBlitz3.ab3@9737>  BRA.w dirliberr
00026D30 <AmiBlitz3.ab3@9741>   MOVE.b debugmode,-(a7)
00026D34 <AmiBlitz3.ab3@9743>   MOVEM.l D1/A0/A2,-(A7)
00026D3C <AmiBlitz3.ab3@9753>   BTST #$7,use_debugger
00026D40 <AmiBlitz3.ab3@9754>   BNE 'debugon
00026D42 <AmiBlitz3.ab3@9755>   CLR.w D1
00026D46 <AmiBlitz3.ab3@9756>  BRA.b 'debugoff
00026D48 <AmiBlitz3.ab3@9759>   SNE D1
00026D4E <AmiBlitz3.ab3@9762>   MOVE.b d1,debugmode
00026D50 <AmiBlitz3.ab3@9767>   MOVEA.l A1,A0
00026D54 <AmiBlitz3.ab3@9768>   ADDA.l $12(A1),A0
00026D58 <AmiBlitz3.ab3@9769>   TST.w -$2(A0)
00026D5C <AmiBlitz3.ab3@9770>    BEQ.w 'notmax
00026D60 <AmiBlitz3.ab3@9771>   MOVEM.l A0-A1,-(A7)
00026D64 <AmiBlitz3.ab3@9772>   MOVE.w #$FB4F,D1            ; #64335,
00026D68 <AmiBlitz3.ab3@9773>    BSR.w uselib
00026D6C <AmiBlitz3.ab3@9774>   MOVEM.l (A7)+,A0-A1
00026D72 <AmiBlitz3.ab3@9775>   ADDQ.w #1,globalvarpointer
00026D7A <AmiBlitz3.ab3@9776>   BCLR #$0,globalvarpointer+1
00026D82 <AmiBlitz3.ab3@9777>   MOVE.w globalvarpointer,-$6(A0)
00026D88 <AmiBlitz3.ab3@9778>   ADDQ.w #4,globalvarpointer
00026D8C <AmiBlitz3.ab3@9779>   TST.l -$E(A0)
00026D90 <AmiBlitz3.ab3@9780>    BEQ.w 'notmax
00026D96 <AmiBlitz3.ab3@9781>   ADDQ.w #4,globalvarpointer
00026D9E <AmiBlitz3.ab3@9784>   MOVE.l libend,$28(A1)      ;pc of lib
00026DA0 <AmiBlitz3.ab3@9785>   MOVEA.l A1,A0
00026DA4 <AmiBlitz3.ab3@9786>   ADDA.l $12(A1),A0          ;start of lib
00026DA6 <AmiBlitz3.ab3@9788>   MOVE.l A1,D1
00026DAA <AmiBlitz3.ab3@9789>   ADD.l $6(A1),D1            ;end of lib
00026DAE <AmiBlitz3.ab3@9790>   TST.l $2C(A1)
00026DB2 <AmiBlitz3.ab3@9791>    BEQ.w 'nor
00026DB8 <AmiBlitz3.ab3@9792>   TST.b debugmode
00026DBC <AmiBlitz3.ab3@9793>    BNE.w 'nor                ;errs turned on
00026DBE <AmiBlitz3.ab3@9794>   MOVE.l A1,D1
00026DC2 <AmiBlitz3.ab3@9795>   ADD.l $2C(A1),D1           ;copy only non-errchks
00026DC8 <AmiBlitz3.ab3@9798>   MOVEA.l libend,A2
00026DCE <AmiBlitz3.ab3@9801>   CMPA.l data1start,A2
00026DD2 <AmiBlitz3.ab3@9802>    BCS.w 'okp
00026DDA <AmiBlitz3.ab3@9803>   MOVE.w #$FFFF,dontwrite_nomemleft     ; -1
00026DDC <AmiBlitz3.ab3@9806>   ADDQ.w #2,A0
00026DDE <AmiBlitz3.ab3@9807>   ADDQ.w #2,A2
00026DE0 <AmiBlitz3.ab3@9808>   CMPA.l D1,A0
00026DE4 <AmiBlitz3.ab3@9809>    BCS.w 'bad
00026DE8 <AmiBlitz3.ab3@9810>  BRA.w 'toreloc
00026DEA <AmiBlitz3.ab3@9813>   MOVE.w (A0)+,(A2)+                                       ;copylibcode
00026DEC <AmiBlitz3.ab3@9814>   CMPA.l D1,A0
00026DF0 <AmiBlitz3.ab3@9815>    BCS.w 'loop
00026DF6 <AmiBlitz3.ab3@9818>   MOVE.l A2,libend
00026DFA <AmiBlitz3.ab3@9819>   MOVE.l $20(A1),D1
00026DFE <AmiBlitz3.ab3@9820>    BEQ.w 'noreloc
00026E02 <AmiBlitz3.ab3@9822>   MOVEM.l D0/D2-D3,-(A7)
00026E06 <AmiBlitz3.ab3@9823>   MOVEA.l $24(A1),A0         ;start of reloc table
00026E08 <AmiBlitz3.ab3@9824>   MOVEQ.l #$00,D3            ;no tokejsrs (yet!)
00026E0A <AmiBlitz3.ab3@9830>   MOVE.l (A0)+,D2
00026E0E <AmiBlitz3.ab3@9831>   TST.l $2C(A1)
00026E12 <AmiBlitz3.ab3@9832>    BEQ.w 'skipr
00026E18 <AmiBlitz3.ab3@9833>   TST.b debugmode
00026E1C <AmiBlitz3.ab3@9834>    BNE.w 'skipr
00026E20 <AmiBlitz3.ab3@9835>   CMP.l $2C(A1),D2
00026E24 <AmiBlitz3.ab3@9836>    BCC.w 'next
00026E28 <AmiBlitz3.ab3@9839>   TST.w $0(A1,D2.L)
00026E2C <AmiBlitz3.ab3@9840>    BPL.w 'notajsr
00026E2E <AmiBlitz3.ab3@9841>   TST.l D3
00026E32 <AmiBlitz3.ab3@9842>    BNE.w 'notajsr      ;already done...
00026E34 <AmiBlitz3.ab3@9843>   MOVE.l A0,D0
00026E36 <AmiBlitz3.ab3@9844>   MOVE.l D1,D3         ;number left to do!
00026E3A <AmiBlitz3.ab3@9847>   SUB.l $12(A1),D2
00026E3E <AmiBlitz3.ab3@9848>    BMI.w 'next
00026E42 <AmiBlitz3.ab3@9849>   ADD.l $28(A1),D2
00026E44 <AmiBlitz3.ab3@9850>   MOVE.l D2,-(A7)
00026E4A <AmiBlitz3.ab3@9851>   SUB.l destbufferstart,D2
00026E4E <AmiBlitz3.ab3@9852>    BSR.w addhunkoffset
00026E50 <AmiBlitz3.ab3@9853>   MOVEA.l (A7)+,A2
00026E56 <AmiBlitz3.ab3@9854>   TST.w dontwrite_nomemleft
00026E5A <AmiBlitz3.ab3@9855>    BNE.w 'next
00026E5E <AmiBlitz3.ab3@9856>   MOVE.l $28(A1),D2
00026E62 <AmiBlitz3.ab3@9857>   SUB.l $12(A1),D2
00026E64 <AmiBlitz3.ab3@9858>   ADD.l D2,(A2)
00026E66 <AmiBlitz3.ab3@9861>    SUBQ.l #1,D1
00026E6A <AmiBlitz3.ab3@9862>    BNE.w 'reloop
00026E6C <AmiBlitz3.ab3@9863>   MOVE.l D3,D2
00026E70 <AmiBlitz3.ab3@9864>    BEQ.w 'nohand
00026E72 <AmiBlitz3.ab3@9865>   MOVEA.l D0,A2
00026E74 <AmiBlitz3.ab3@9866>   SUBQ.w #4,A2
00026E78 <AmiBlitz3.ab3@9868>    BSR.w handlejsrs
00026E7C <AmiBlitz3.ab3@9871>    MOVEM.l (A7)+,D0/D2-D3
00026E80 <AmiBlitz3.ab3@9874>    MOVEM.l (A7)+,D1/A0/A2
00026E84 <AmiBlitz3.ab3@9876>   MOVEM.l D1-D2,-(A7)
00026E88 <AmiBlitz3.ab3@9877>   TST.w $1A(A1)
00026E8C <AmiBlitz3.ab3@9878>    BNE.w 'skip2a
00026E90 <AmiBlitz3.ab3@9879>   CLR.w $A(A1)
00026E94 <AmiBlitz3.ab3@9880>  BRA.w 'skip2
00026E9A <AmiBlitz3.ab3@9883>   ADDQ.w #1,globalvarpointer
00026EA2 <AmiBlitz3.ab3@9884>   BCLR #$0,globalvarpointer+1
00026EAA <AmiBlitz3.ab3@9885>   MOVE.w globalvarpointer,$A(A1)
00026EAE <AmiBlitz3.ab3@9887>   CMP.w #-$12D,D1            ; was  #65235,
00026EB2 <AmiBlitz3.ab3@9888>    BNE.w 'nots1
00026EBA <AmiBlitz3.ab3@9890>   MOVE.w $A(A1),movestdn+2
00026EC2 <AmiBlitz3.ab3@9891>   MOVE.w $A(A1),pusha3+2
00026ECA <AmiBlitz3.ab3@9892>   MOVE.w $A(A1),pusha32+2
00026ED2 <AmiBlitz3.ab3@9893>   MOVE.w $A(A1),pulla3+2
00026EDA <AmiBlitz3.ab3@9894>   MOVE.w $A(A1),geta3+2
00026EDE <AmiBlitz3.ab3@9897>    CMP.w #-$3E9,D1           ; was #64535,
00026EE2 <AmiBlitz3.ab3@9898>    BNE.w 'notd
00026EEA <AmiBlitz3.ab3@9900>   MOVE.w $A(A1),dataget+2
00026EF2 <AmiBlitz3.ab3@9901>   MOVE.w $A(A1),dataput+2
00026EFA <AmiBlitz3.ab3@9902>   MOVE.w $A(A1),rescode+6
00026F02 <AmiBlitz3.ab3@9903>   MOVE.w $A(A1),rescode2+2
00026F08 <AmiBlitz3.ab3@9906>   ADDQ.w #2,globalvarpointer
00026F0C <AmiBlitz3.ab3@9907>   TST.w $1A(A1)
00026F10 <AmiBlitz3.ab3@9908>    BMI.w 'jword
00026F16 <AmiBlitz3.ab3@9909>   ADDQ.w #2,globalvarpointer
00026F1A <AmiBlitz3.ab3@9912>   MOVEM.l D1/A1,-(A7)
00026F1E <AmiBlitz3.ab3@9913>   BSR.w usevars
00026F22 <AmiBlitz3.ab3@9914>   MOVEM.l (A7)+,D1/A1
00026F24 <AmiBlitz3.ab3@9917>   MOVE.w D1,D2
00026F28 <AmiBlitz3.ab3@9918>   MOVE.l $16(A1),D1
00026F2C <AmiBlitz3.ab3@9919>    BSR.w uselib2
00026F30 <AmiBlitz3.ab3@9920>   MOVE.l $1C(A1),D1
00026F34 <AmiBlitz3.ab3@9921>    BSR.w uselib2
00026F38 <AmiBlitz3.ab3@9922>   MOVEM.l (A7)+,D1-D2
00026F3E <AmiBlitz3.ab3@9924>   MOVE.b (a7)+,debugmode
00026F40 <AmiBlitz3.ab3@9927> RTS
00026F42 <AmiBlitz3.ab3@9934>   MOVEQ.l #$00,D2       ;do list till this...
00026F48 <AmiBlitz3.ab3@9937>   MOVEA.l tokeslist,A2
00026F4A <AmiBlitz3.ab3@9938>   CMPA.l D2,A2
00026F4E <AmiBlitz3.ab3@9939>    BEQ.w 'done
00026F50 <AmiBlitz3.ab3@9940>   MOVE.l A2,-(A7)       ;next till...
00026F52 <AmiBlitz3.ab3@9943>   MOVEQ.l #$00,D3
00026F56 <AmiBlitz3.ab3@9946>   MOVEA.l $8(A2),A3
00026F58 <AmiBlitz3.ab3@9947>   CMPA.l D3,A3
00026F5C <AmiBlitz3.ab3@9948>    BEQ.w 'done4
00026F5E <AmiBlitz3.ab3@9950>   MOVE.l A3,-(A7)
00026F62 <AmiBlitz3.ab3@9951>   MOVEM.l D2-D3/A2-A3,-(A7)
00026F66 <AmiBlitz3.ab3@9952>   MOVE.w $4(A2),D1
00026F6A <AmiBlitz3.ab3@9953>   MOVE.w $6(A2),D2
00026F6E <AmiBlitz3.ab3@9955>    BSR.w tokecode
00026F72 <AmiBlitz3.ab3@9957>   MOVEM.l (A7)+,D2-D3/A2-A3
00026F78 <AmiBlitz3.ab3@9959>   MOVE.w dontwrite_nomemleft,D0
00026F7C <AmiBlitz3.ab3@9960>    BEQ.w 'ok
00026F7E <AmiBlitz3.ab3@9963>   MOVEA.l (A3),A3
00026F80 <AmiBlitz3.ab3@9964>   CMPA.l D3,A3
00026F84 <AmiBlitz3.ab3@9965>    BNE.w 'loop5
00026F88 <AmiBlitz3.ab3@9966>  BRA.w 'skipz
00026F8C <AmiBlitz3.ab3@9969>   MOVEA.l $4(A3),A0
00026F8E <AmiBlitz3.ab3@9970>   MOVE.l D7,(A0)
00026F90 <AmiBlitz3.ab3@9971>   MOVEA.l (A3),A3
00026F92 <AmiBlitz3.ab3@9972>   CMPA.l D3,A3
00026F96 <AmiBlitz3.ab3@9973>    BNE.w 'ok
00026F98 <AmiBlitz3.ab3@9976>   MOVE.l (A7)+,D3
00026F9C <AmiBlitz3.ab3@9977>  BRA.w 'loop3
00026F9E <AmiBlitz3.ab3@9980>    MOVEA.l (A2),A2
00026FA0 <AmiBlitz3.ab3@9981>   CMPA.l D2,A2
00026FA4 <AmiBlitz3.ab3@9982>    BNE.w 'loop2
00026FA6 <AmiBlitz3.ab3@9983>   MOVE.l (A7)+,D2
00026FAA <AmiBlitz3.ab3@9984>  BRA.w 'loop
00026FAC <AmiBlitz3.ab3@9987> RTS
00026FAE <AmiBlitz3.ab3@9995>   MOVE.w D2,-(A7)
00026FB2 <AmiBlitz3.ab3@9996>    BSR.w searchinstr
00026FB4 <AmiBlitz3.ab3@9997>   MOVE.w (A7)+,D2
00026FBC <AmiBlitz3.ab3@9999>   BCLR #$7,blitzmode
00026FC0 <AmiBlitz3.ab3@10000>   BCLR #$E,D2
00026FC4 <AmiBlitz3.ab3@10001>    BEQ.w 'isamiga
00026FCC <AmiBlitz3.ab3@10002>   BSET #$7,blitzmode
00026FCE <AmiBlitz3.ab3@10005>   TST.w (A3)
00026FD2 <AmiBlitz3.ab3@10006>    BEQ.w 'simple
00026FD8 <AmiBlitz3.ab3@10007>   BTST #$2,$1(A3)
00026FDC <AmiBlitz3.ab3@10008>    BNE.w tokeerr
00026FE2 <AmiBlitz3.ab3@10009>   BTST #$3,$1(A3)
00026FE6 <AmiBlitz3.ab3@10010>    BNE.w tokeerr
00026FEA <AmiBlitz3.ab3@10014>   LEA $6(A3),A3     ;skip node
00026FEC <AmiBlitz3.ab3@10017>   MOVE.w (A3)+,D0
00026FF0 <AmiBlitz3.ab3@10018>    BMI.w tokeerr
00026FF4 <AmiBlitz3.ab3@10019>   ANDI.w #$FF,D0
00026FF6 <AmiBlitz3.ab3@10020>   ADDA.w D0,A3
00026FF8 <AmiBlitz3.ab3@10021>   ADDQ.w #1,A3
00026FFA <AmiBlitz3.ab3@10022>   EXG.l D0,A3
00026FFE <AmiBlitz3.ab3@10023>   BCLR #$0,D0
00027000 <AmiBlitz3.ab3@10024>   EXG.l D0,A3
00027002 <AmiBlitz3.ab3@10025>   SUBQ.w #1,D2
00027006 <AmiBlitz3.ab3@10026>    BPL.w 'loop2
00027008 <AmiBlitz3.ab3@10028>   TST.w (A3)
0002700C <AmiBlitz3.ab3@10029>    BNE.w 'go4it          ;no libs to fetch....
00027010 <AmiBlitz3.ab3@10030>   MOVE.l $2(A3),D0
00027014 <AmiBlitz3.ab3@10031>   OR.l $A(A3),D0
00027018 <AmiBlitz3.ab3@10032>    BNE.w 'go4it          ;no error chx...
0002701E <AmiBlitz3.ab3@10033>   BTST #$0,$9(A3)
00027022 <AmiBlitz3.ab3@10034>    BNE.w 'go4it          ;ditto...
00027026 <AmiBlitz3.ab3@10035>   MOVE.l $6(A3),D7       ;sub offset
0002702A <AmiBlitz3.ab3@10036>   MOVE.w $0(A2,D7.L),D0
0002702E <AmiBlitz3.ab3@10037>   ANDI.w #$F000,D0
00027032 <AmiBlitz3.ab3@10038>   CMP.w #-$6000,D0
00027036 <AmiBlitz3.ab3@10039>    BEQ.w 'go4it
0002703A <AmiBlitz3.ab3@10042>   SUB.l $12(A2),D7
0002703E <AmiBlitz3.ab3@10043>   ADD.l $28(A2),D7
00027040 <AmiBlitz3.ab3@10044>  RTS
00027046 <AmiBlitz3.ab3@10047>   LEA cutejsr,A0
0002704C <AmiBlitz3.ab3@10051>   MOVE.l destpointer,-(A7)
00027054 <AmiBlitz3.ab3@10052>   MOVE.w #$FFFF,lasta6     ; was -1
00027056 <AmiBlitz3.ab3@10054>    JSR (A0)
0002705A <AmiBlitz3.ab3@10055>   MOVE.w #$4E75,D1
0002705E <AmiBlitz3.ab3@10056>    BSR.w writeword
00027060 <AmiBlitz3.ab3@10058>   MOVE.l (A7)+,D7
00027062 <AmiBlitz3.ab3@10059>  RTS
00027064 <AmiBlitz3.ab3@10062>   TST.w (A3)+
00027068 <AmiBlitz3.ab3@10063>    BEQ.w 'skip
0002706A <AmiBlitz3.ab3@10064>   ADDQ.w #2,A3
0002706E <AmiBlitz3.ab3@10065>  BRA.w 'loop2
00027072 <AmiBlitz3.ab3@10068>   LEA $C(A3),A3
00027076 <AmiBlitz3.ab3@10069>  BRA.w 'loop
00027078 <AmiBlitz3.ab3@10072>   TST.w D2
0002707C <AmiBlitz3.ab3@10073>    BNE.w tokeerr
00027080 <AmiBlitz3.ab3@10075>   TST.w $6(A3)
00027084 <AmiBlitz3.ab3@10076>    BNE.w 'be4it
00027088 <AmiBlitz3.ab3@10077>   MOVE.l $8(A3),D0
0002708C <AmiBlitz3.ab3@10078>   OR.l $10(A3),D0
00027090 <AmiBlitz3.ab3@10079>    BNE.w 'be4it
00027096 <AmiBlitz3.ab3@10080>   BTST #$0,$F(A3)
0002709A <AmiBlitz3.ab3@10081>    BNE.w 'be4it
0002709E <AmiBlitz3.ab3@10082>   MOVE.l $C(A3),D7
000270A2 <AmiBlitz3.ab3@10083>   MOVE.w $0(A2,D7.L),D0
000270A6 <AmiBlitz3.ab3@10084>   ANDI.w #$F000,D0
000270AA <AmiBlitz3.ab3@10085>   CMP.w #-$6000,D0        ; was #$a000
000270AE <AmiBlitz3.ab3@10086>    BNE.w 'penis
000270B0 <AmiBlitz3.ab3@10089>   MOVE.l A3,D1
000270B2 <AmiBlitz3.ab3@10090>   SUB.l A2,D1
000270B8 <AmiBlitz3.ab3@10091>   LEA Amakelibsub,A0
000270BC <AmiBlitz3.ab3@10092> BRA.w 'putcode
000270C2 <AmiBlitz3.ab3@10096>   MOVEA.l _execbase,A6
000270C8 <AmiBlitz3.ab3@10097>   MOVEA.l tokeslist,A2
000270CE <AmiBlitz3.ab3@10098>   CLR.l tokeslist
000270D2 <AmiBlitz3.ab3@10101>     CMPA.w #$0,A2
000270D6 <AmiBlitz3.ab3@10102>      BEQ.w 'done2
000270DA <AmiBlitz3.ab3@10103>     MOVEA.l $8(A2),A3
000270DE <AmiBlitz3.ab3@10106>       CMPA.w #$0,A3
000270E2 <AmiBlitz3.ab3@10107>        BEQ.w 'done3
000270E4 <AmiBlitz3.ab3@10108>       MOVEA.l A3,A1
000270E6 <AmiBlitz3.ab3@10109>       MOVEA.l (A3),A3
000270E8 <AmiBlitz3.ab3@10110>       MOVEQ.l #$08,D0
000270EE <AmiBlitz3.ab3@10112>       MOVE.l mempool,a0
000270F4 <AmiBlitz3.ab3@10113>       MOVEA.l _execbase,A6
000270F8 <AmiBlitz3.ab3@10114>       JSR _FreePooled(A6)
000270FC <AmiBlitz3.ab3@10117>  BRA.w 'floop2
000270FE <AmiBlitz3.ab3@10120>     MOVEA.l A2,A1
00027100 <AmiBlitz3.ab3@10121>     MOVEA.l (A2),A2
00027102 <AmiBlitz3.ab3@10122>     MOVEQ.l #$0C,D0
00027108 <AmiBlitz3.ab3@10124>     MOVE.l mempool,a0
0002710E <AmiBlitz3.ab3@10125>     MOVEA.l _execbase,A6
00027112 <AmiBlitz3.ab3@10126>     JSR _FreePooled(A6)
00027116 <AmiBlitz3.ab3@10129>  BRA.w 'floop
00027118 <AmiBlitz3.ab3@10132> RTS
0002711C <AmiBlitz3.ab3@10138>   MOVEM.l D3-D5/A1-A6,-(A7)
0002711E <AmiBlitz3.ab3@10139>   MOVEA.l A1,A4
00027120 <AmiBlitz3.ab3@10142>   MOVE.l (A2)+,D3
00027124 <AmiBlitz3.ab3@10143>   MOVE.w $0(A4,D3.L),D5
00027128 <AmiBlitz3.ab3@10144>    BPL.w 'next
0002712C <AmiBlitz3.ab3@10146>   TST.l $2C(A4)
00027130 <AmiBlitz3.ab3@10147>    BEQ.w 'skipr
00027136 <AmiBlitz3.ab3@10148>   TST.b debugmode
0002713A <AmiBlitz3.ab3@10149>    BNE.w 'skipr
0002713E <AmiBlitz3.ab3@10150>   CMP.l $2C(A4),D3
00027142 <AmiBlitz3.ab3@10151>    BCC.w 'next
00027146 <AmiBlitz3.ab3@10154>   BCLR #$F,D5             ;to offset number
0002714A <AmiBlitz3.ab3@10155>   MOVE.w $2(A4,D3.L),D4
0002714E <AmiBlitz3.ab3@10156>   SUB.l $12(A4),D3
00027152 <AmiBlitz3.ab3@10157>   ADD.l $28(A4),D3
00027156 <AmiBlitz3.ab3@10159>   MOVEM.l D2/A2/A4,-(A7)
0002715A <AmiBlitz3.ab3@10160>    BSR.w maketjsr
0002715E <AmiBlitz3.ab3@10161>   MOVEM.l (A7)+,D2/A2/A4
00027160 <AmiBlitz3.ab3@10164>   SUBQ.l #1,D2
00027164 <AmiBlitz3.ab3@10165>    BNE.w 'loop
00027168 <AmiBlitz3.ab3@10167>   MOVEM.l (A7)+,D3-D5/A1-A6
0002716A <AmiBlitz3.ab3@10168> RTS
00027170 <AmiBlitz3.ab3@10176>   LEA tokeslist,A3
00027176 <AmiBlitz3.ab3@10177>   MOVEA.l _execbase,A6
00027178 <AmiBlitz3.ab3@10180>   MOVE.l (A3),D0
0002717C <AmiBlitz3.ab3@10181>    BEQ.w 'notfound
0002717E <AmiBlitz3.ab3@10182>   MOVEA.l D0,A3
00027182 <AmiBlitz3.ab3@10183>   CMP.w $4(A3),D4
00027186 <AmiBlitz3.ab3@10184>    BNE.w 'loop2
0002718A <AmiBlitz3.ab3@10185>   CMP.w $6(A3),D5
0002718E <AmiBlitz3.ab3@10186>    BNE.w 'loop2
00027192 <AmiBlitz3.ab3@10187>  BRA.w 'found
00027194 <AmiBlitz3.ab3@10192>   MOVEQ.l #$0C,D0
00027196 <AmiBlitz3.ab3@10193>   MOVEQ.l #$01,D1
0002719C <AmiBlitz3.ab3@10195>   MOVE.l mempool,a0
000271A0 <AmiBlitz3.ab3@10196>   JSR _AllocPooled(a6)
000271A2 <AmiBlitz3.ab3@10199>   MOVEA.l D0,A3
000271A8 <AmiBlitz3.ab3@10200>   MOVE.l tokeslist,(A3)
000271AE <AmiBlitz3.ab3@10201>   MOVE.l A3,tokeslist
000271B2 <AmiBlitz3.ab3@10202>   MOVE.w D4,$4(A3)
000271B6 <AmiBlitz3.ab3@10203>   MOVE.w D5,$6(A3)
000271BA <AmiBlitz3.ab3@10204>   CLR.l $8(A3)
000271BC <AmiBlitz3.ab3@10207>   MOVEQ.l #$08,D0
000271BE <AmiBlitz3.ab3@10208>   MOVEQ.l #$01,D1
000271C4 <AmiBlitz3.ab3@10210>   MOVE.l mempool,a0
000271C8 <AmiBlitz3.ab3@10211>   JSR _AllocPooled(a6)
000271CA <AmiBlitz3.ab3@10214>   MOVEA.l D0,A0
000271CE <AmiBlitz3.ab3@10215>   MOVE.l D3,$4(A0)
000271D2 <AmiBlitz3.ab3@10216>   MOVE.l $8(A3),(A0)
000271D6 <AmiBlitz3.ab3@10217>   MOVE.l A0,$8(A3)
000271D8 <AmiBlitz3.ab3@10219>   MOVE.w D4,D1
000271DC <AmiBlitz3.ab3@10220> BRA.w searchinstr       ;use this library - NOW!
000271E0 <AmiBlitz3.ab3@10223> tokeslist: Ds.l 1
000271E4 <AmiBlitz3.ab3@10236>   BEQ.w 'skip
000271E6 <AmiBlitz3.ab3@10237>   MOVE.l A1,-(A7)
000271E8 <AmiBlitz3.ab3@10238>   ADDA.l D1,A1
000271EA <AmiBlitz3.ab3@10239>   ADDQ.w #6,A1
000271EC <AmiBlitz3.ab3@10242>     MOVE.w (A1)+,D1
000271F0 <AmiBlitz3.ab3@10243>     BEQ.w 'done
000271F2 <AmiBlitz3.ab3@10244>     CMP.w D2,D1
000271F6 <AmiBlitz3.ab3@10245>     BEQ.w 'skip2
000271F8 <AmiBlitz3.ab3@10246>     MOVE.l A1,-(A7)
000271FC <AmiBlitz3.ab3@10247>     BSR.w uselib
000271FE <AmiBlitz3.ab3@10248>     MOVEA.l (A7)+,A1
00027200 <AmiBlitz3.ab3@10251>     ADDQ.w #2,A1
00027204 <AmiBlitz3.ab3@10252>  BRA.w 'loop
00027206 <AmiBlitz3.ab3@10255>   MOVEA.l (A7)+,A1
00027208 <AmiBlitz3.ab3@10258> RTS
0002720E <AmiBlitz3.ab3@10262>   MOVEA.l libpointer,A1
00027212 <AmiBlitz3.ab3@10265>   CMPA.w #$0,A1
00027216 <AmiBlitz3.ab3@10266>    BEQ.b 'rts
0002721A <AmiBlitz3.ab3@10267>   CMP.w $4(A1),D1
0002721E <AmiBlitz3.ab3@10268>    BEQ.w 'found
00027220 <AmiBlitz3.ab3@10269>   MOVEA.l (A1),A1
00027224 <AmiBlitz3.ab3@10270>  BRA.w 'loop
00027226 <AmiBlitz3.ab3@10273>   MOVEQ.l #-$01,D1
00027228 <AmiBlitz3.ab3@10276> RTS
0002722C <AmiBlitz3.ab3@10283>   MOVEM.l d0/a2,-(a7)
0002722E <AmiBlitz3.ab3@10284>   MOVEQ #0,d0
00027234 <AmiBlitz3.ab3@10285>   LEA instrtab+4,a2
00027236 <AmiBlitz3.ab3@10286>   MOVE.w d1,d0
00027238 <AmiBlitz3.ab3@10287>   ASL.l #3,d0
0002723C <AmiBlitz3.ab3@10288>   MOVE.l 0(a2,d0.l),a1                                     ;*8
00027242 <AmiBlitz3.ab3@10289>   CMP.l #0,a1
00027246 <AmiBlitz3.ab3@10290>   BNE 'foundb
0002724C <AmiBlitz3.ab3@10292>   MOVEA.l libpointer,A1
00027250 <AmiBlitz3.ab3@10295>     CMPA.w #$0,A1
00027254 <AmiBlitz3.ab3@10297>     BEQ.w noliberr
00027258 <AmiBlitz3.ab3@10299>     CMP.w $4(A1),D1
0002725C <AmiBlitz3.ab3@10300>     BEQ.w 'found
0002725E <AmiBlitz3.ab3@10301>    MOVEA.l (A1),A1
00027262 <AmiBlitz3.ab3@10302>  BRA.w 'loop
00027266 <AmiBlitz3.ab3@10306>   MOVE.l a1,0(a2,d0.l)
0002726A <AmiBlitz3.ab3@10309>   MOVEM.l (a7)+,d0/a2
0002726C <AmiBlitz3.ab3@10311> RTS
00027270 <AmiBlitz3.ab3@10321>   MOVEM.l d0-d1/a1,-(a7)
00027272 <AmiBlitz3.ab3@10322>   MOVEQ #0,d0
00027278 <AmiBlitz3.ab3@10323>   LEA instrtab,a1
0002727A <AmiBlitz3.ab3@10324>   MOVE.w d1,d0
0002727C <AmiBlitz3.ab3@10325>   ASL.l #3,d0
00027280 <AmiBlitz3.ab3@10326>   MOVE.l 0(a1,d0.l),a3
00027284 <AmiBlitz3.ab3@10327>   MOVE.l 4(a1,d0.l),a2
0002728A <AmiBlitz3.ab3@10328>   CMP.l #0,a3
0002728E <AmiBlitz3.ab3@10329>   BNE 'foundb
00027294 <AmiBlitz3.ab3@10332>   MOVEA.l libpointer,A2
00027298 <AmiBlitz3.ab3@10335>   CMPA.w #$0,A2
0002729C <AmiBlitz3.ab3@10336>   BEQ.w notokerr
000272A0 <AmiBlitz3.ab3@10337>   CMP.w $E(A2),D1
000272A4 <AmiBlitz3.ab3@10338>   BCS.w 'next
000272A8 <AmiBlitz3.ab3@10339>   CMP.w $10(A2),D1
000272AC <AmiBlitz3.ab3@10340>   BCC.w 'next
000272B0 <AmiBlitz3.ab3@10344>   LEA $30(A2),A3
000272B4 <AmiBlitz3.ab3@10345>   TST.w $4(A2)
000272B8 <AmiBlitz3.ab3@10346>   BPL.w 'userlib
000272BC <AmiBlitz3.ab3@10349>     CMP.w $E(A2),D1
000272C0 <AmiBlitz3.ab3@10350>     BEQ.w 'found
000272C2 <AmiBlitz3.ab3@10351>     SUBQ.w #1,D1
000272C6 <AmiBlitz3.ab3@10352>     MOVEA.l $2(A3),A3
000272CA <AmiBlitz3.ab3@10353>  BRA.w 'loop2
000272CE <AmiBlitz3.ab3@10357>   MOVE.l a3,0(a1,d0.l)
000272D2 <AmiBlitz3.ab3@10358>   MOVE.l a2,4(a1,d0.l)
000272D6 <AmiBlitz3.ab3@10361>   MOVEM.l (a7)+,d0-d1/a1
000272DA <AmiBlitz3.ab3@10363>   MOVEM.l D1/A1-a3,-(A7)      ; was  movem.l d1/a1,-(a7)
000272DE <AmiBlitz3.ab3@10365>   CMP.w #1,(a3)
000272E2 <AmiBlitz3.ab3@10366>   BNE.s 'ex10
000272EA <AmiBlitz3.ab3@10367>   CMP.l #$12345678,$e(a3)
000272EE <AmiBlitz3.ab3@10368>   BNE.s 'ex10
000272F4 <AmiBlitz3.ab3@10369>   CMP.w #$ffff,$16(a3)
000272F8 <AmiBlitz3.ab3@10370>   BNE.s 'ex10
000272FC <AmiBlitz3.ab3@10371>   MOVE.l $12(a3),d1
00027300 <AmiBlitz3.ab3@10372>   BEQ.s 'ex10
00027306 <AmiBlitz3.ab3@10373>   LEA pluginbase,a3
0002730A <AmiBlitz3.ab3@10375>  JMP 0(a2,d1.l)                                             ;plugin
0002730C <AmiBlitz3.ab3@10379>   MOVEA.l A2,A1
00027312 <AmiBlitz3.ab3@10381>   CLR.b newmode
00027316 <AmiBlitz3.ab3@10383>   MOVE.w $4(A1),D1       ;set lib#
0002731A <AmiBlitz3.ab3@10388>   BSR.w uselib3
0002731E <AmiBlitz3.ab3@10389>   MOVEM.l (A7)+,D1/A1-a3
00027320 <AmiBlitz3.ab3@10390>  RTS
00027326 <AmiBlitz3.ab3@10394>   MOVE.w globalvarpointer,-(a7)         ; "
0002732E <AmiBlitz3.ab3@10395>   MOVE.w #$8004,globalvarpointer        ; "
00027332 <AmiBlitz3.ab3@10396>   BSR.w uselib3                         ; "
00027338 <AmiBlitz3.ab3@10397>   MOVE.w (a7)+,globalvarpointer         ; "
0002733C <AmiBlitz3.ab3@10398>   MOVEM.l (A7)+,D1/A1-a3
0002733E <AmiBlitz3.ab3@10399>  RTS
00027342 <AmiBlitz3.ab3@10403>     CMP.w $E(A2),D1
00027346 <AmiBlitz3.ab3@10404>     BEQ.w 'found
00027348 <AmiBlitz3.ab3@10405>     SUBQ.w #1,D1
0002734C <AmiBlitz3.ab3@10406>     MOVEA.l $2(A3),A3
00027350 <AmiBlitz3.ab3@10407>  BRA.w 'userlib
00027352 <AmiBlitz3.ab3@10410>   MOVEA.l (A2),A2
00027356 <AmiBlitz3.ab3@10411> BRA.w 'loop
0002735A <AmiBlitz3.ab3@10415>   MOVEM.l (A7)+,D1/A1-a3
00027360 <AmiBlitz3.ab3@10416>   JSR stripspaces
00027362 <AmiBlitz3.ab3@10417>   MOVEQ #0,d0
00027364 <AmiBlitz3.ab3@10418>   MOVE.b (a5)+,d0
0002736A <AmiBlitz3.ab3@10419>   MOVE.w d0,lastchar
0002736C <AmiBlitz3.ab3@10420>   ADDQ.l #4,a7
0002736E <AmiBlitz3.ab3@10421> RTS
00027374 <AmiBlitz3.ab3@10424> JUMP_writeword JMP writeword
00027378 <AmiBlitz3.ab3@10427> ptr_acidlibs:   Ds.l 1                                     ;deflibsat org source
0002737C <AmiBlitz3.ab3@10428> ptr_deflibs:    Ds.l 1                                     ;acidlibsat org source
00027380 <AmiBlitz3.ab3@10429> ptr_userlibs:   Ds.l 1                                     ;blitzlibsat org source  ;;start of blitzlibs list!
00027382 <AmiBlitz3.ab3@10439>   TST.l D0
00027386 <AmiBlitz3.ab3@10440>   BEQ.w 'rts
00027388 <AmiBlitz3.ab3@10441>     MOVE.l D0,D6                                           ;d6=len
0002738E <AmiBlitz3.ab3@10442>     MOVEA.l _dosbase,A6
00027394 <AmiBlitz3.ab3@10443>     MOVE.l #HUNK_RELOC_16__MODE_OLDFILE,D2
00027398 <AmiBlitz3.ab3@10444>     JSR _Open(A6)
0002739A <AmiBlitz3.ab3@10445>     MOVE.l D0,D7
0002739E <AmiBlitz3.ab3@10446>     BEQ.w 'rts
000273A0 <AmiBlitz3.ab3@10447>       MOVE.l D6,D0
000273A2 <AmiBlitz3.ab3@10448>       MOVEQ.l #$01,D1
000273A8 <AmiBlitz3.ab3@10449>       MOVEA.l _execbase,A6
000273AE <AmiBlitz3.ab3@10452>       MOVE.l mempool,a0
000273B2 <AmiBlitz3.ab3@10453>       JSR _AllocPooled(a6)
000273B4 <AmiBlitz3.ab3@10455>       MOVE.l D0,D5                                         ;start address
000273B6 <AmiBlitz3.ab3@10457>       MOVE.l D7,D1                                         ; handle
000273B8 <AmiBlitz3.ab3@10458>       MOVE.l D5,D2                                         ; buffer addr
000273BA <AmiBlitz3.ab3@10459>       MOVE.l D6,D3                                         ; size
000273C0 <AmiBlitz3.ab3@10460>       MOVEA.l _dosbase,A6
000273C4 <AmiBlitz3.ab3@10461>       JSR _Read(A6)
000273C6 <AmiBlitz3.ab3@10462>       MOVE.l D7,D1
000273CA <AmiBlitz3.ab3@10463>       JSR _Close(A6)
000273CC <AmiBlitz3.ab3@10465>       MOVEA.l D5,A0                                        ; buffer addr
000273CE <AmiBlitz3.ab3@10471>         MOVE.l (A0)+,D0                                    ; naechster Longwert nach DO
000273D2 <AmiBlitz3.ab3@10472>         BEQ.b 'linkdone                                    ; wenn <> 0, dann
000273D6 <AmiBlitz3.ab3@10473>           LEA $20(A0),A1  ;link in.                        ;   lade inhalt von D0+40bytes nach A1
000273D8 <AmiBlitz3.ab3@10474>           MOVE.l A1,(A3)                                   ;   kopiere Adresse in A1 zum libpointer
000273DA <AmiBlitz3.ab3@10475>           MOVEA.l A1,A3                                    ;   kopiere A1 nach A3
000273DC <AmiBlitz3.ab3@10476>           ADDA.l D0,A0                                     ;   addiere inhalt von D0 zu A0 hinzu
000273E0 <AmiBlitz3.ab3@10480>           MOVE.l -$4(A1),D0    ;number of longwords.       ;   hole die 4bytes vor nach D0
000273E2 <AmiBlitz3.ab3@10481>           ADD.l D0,D0          ;to bytes...                ;   verdoppele D0
000273E4 <AmiBlitz3.ab3@10482>           ADD.l D0,D0                                      ;   verdoppele D0 nochmal
000273E8 <AmiBlitz3.ab3@10483>           MOVE.l D0,$6(A1)     ;fix 1                      ;   schreibe D0 6bytes nach A1
000273EC <AmiBlitz3.ab3@10484>           CLR.l $20(A1)        ;no relocs                  ;   loesche D0+40bytes
000273F0 <AmiBlitz3.ab3@10485>           LEA $C(A1,D0.L),A2   ;reloc info.                ;   lade inhalt von (A1)+D0+$C nach A2
000273F2 <AmiBlitz3.ab3@10486>           CMPA.l A0,A2         ;is it over?
000273F6 <AmiBlitz3.ab3@10487>           BCC.b 'linkloop                                  ; wenn A0=>A2
000273FC <AmiBlitz3.ab3@10489>             MOVE.l -$8(A2),$20(A1)  ;number of relocs.     ;
00027400 <AmiBlitz3.ab3@10490>             MOVE.l A2,$24(A1)       ;pointer to relocs.    ;
00027404 <AmiBlitz3.ab3@10491>   BRA.w 'linkloop
00027406 <AmiBlitz3.ab3@10494>       MOVE.l D5,D0
00027408 <AmiBlitz3.ab3@10497> RTS
00027432 <AmiBlitz3.ab3@10502>   !basic
000274A6 <AmiBlitz3.ab3@10503>    tempmapping$ = dos_AddPart{my_systemdir$,"token_mapping_userlibs.txt"}
000274DA <AmiBlitz3.ab3@10504>    dos_Delete{tempmapping$}
0002751E <AmiBlitz3.ab3@10505>    fid.l = file_Open{tempmapping$,#file_forcewrite}
0002753C <AmiBlitz3.ab3@10506>   !asm
00027542 <AmiBlitz3.ab3@10508>   LEA libpointer,A3
00027548 <AmiBlitz3.ab3@10512>   MOVE.l size_deflibs,D0                 ; in org source was acid libs first
0002754E <AmiBlitz3.ab3@10513>   MOVE.l deflib,d1
00027552 <AmiBlitz3.ab3@10515>   BEQ 'l1
00027556 <AmiBlitz3.ab3@10516>  BRA 'l2
0002755C <AmiBlitz3.ab3@10519>   MOVE.l #str_path_deflibs,D1
00027560 <AmiBlitz3.ab3@10523>   BSR.w load_libsfile
00027566 <AmiBlitz3.ab3@10524>   MOVE.l D0,ptr_deflibs
0002756C <AmiBlitz3.ab3@10527>   MOVE.l size_acidlibs,D0               ; in org source was deflibs libs second
00027572 <AmiBlitz3.ab3@10528>   MOVE.l #str_path_acidlibs,D1
00027576 <AmiBlitz3.ab3@10529>   BSR.w load_libsfile
0002757C <AmiBlitz3.ab3@10530>   MOVE.l D0,ptr_acidlibs
0002757E <AmiBlitz3.ab3@10536>   CLR.l (A3)
00027584 <AmiBlitz3.ab3@10537>   MOVE.l A3,ptr_userlibs
0002758A <AmiBlitz3.ab3@10542>   LEA str_libfilename,A0
00027590 <AmiBlitz3.ab3@10543>   LEA str_path_userlibs,A1
00027592 <AmiBlitz3.ab3@10546>     MOVE.b (A1)+,(A0)+
00027596 <AmiBlitz3.ab3@10547>   BNE.b 'loop0
00027598 <AmiBlitz3.ab3@10550>   SUBQ.w #1,A0
0002759C <AmiBlitz3.ab3@10551>   MOVE.b #$2F,(A0)+
0002759E <AmiBlitz3.ab3@10555>   MOVE.l A0,-(A7) ;store first pos for chars        ; -- store str_path_userlibs in A7
000275A4 <AmiBlitz3.ab3@10557>   LEA ptr_userlibs_list,A2   ;lib names!
000275AA <AmiBlitz3.ab3@10558>   MOVEA.l ptr_userlibs,A3
000275B0 <AmiBlitz3.ab3@10559>   MOVEA.l _dosbase,A6
000275B2 <AmiBlitz3.ab3@10564>       MOVE.l (A2),D0                                       ; addresse aus liste nach D0
000275B6 <AmiBlitz3.ab3@10565>       BNE.b 'more                                      ; wenn nix drin, processing ueberspringen
000275B8 <AmiBlitz3.ab3@10567>       CLR.l (A3)
000275BA <AmiBlitz3.ab3@10568>       ADDQ.w #4,A7
000275E4 <AmiBlitz3.ab3@10570>       !basic
000275F8 <AmiBlitz3.ab3@10571>       If fid<>-1
00027602 <AmiBlitz3.ab3@10572>         file_Close{fid}
0002760E <AmiBlitz3.ab3@10573>         fid = -1
0002762C <AmiBlitz3.ab3@10575>       !asm
00027630 <AmiBlitz3.ab3@10577>  BRA.w process_libraries
00027632 <AmiBlitz3.ab3@10580>       MOVEA.l D0,A2                                        ; addresse zureuck nach A2
00027636 <AmiBlitz3.ab3@10581>       TST.w $4(A2)                                         ; naechste addresse pruefen
0002763A <AmiBlitz3.ab3@10582>     BEQ.b 'loop
0002763E <AmiBlitz3.ab3@10584>     LEA $6(A2),A1          ;add dir name to libsdir
00027640 <AmiBlitz3.ab3@10585>     MOVEA.l (A7),A0
00027642 <AmiBlitz3.ab3@10588>       MOVE.b (A1)+,(A0)+
00027646 <AmiBlitz3.ab3@10589>     BNE.w 'loop2
00027648 <AmiBlitz3.ab3@10593>     MOVE.l A0,-(A7)                  ;pointer for lib name
0002764E <AmiBlitz3.ab3@10595>     MOVE.l #str_libfilename,D1
00027650 <AmiBlitz3.ab3@10596>     MOVEQ.l #-$02,D2
00027656 <AmiBlitz3.ab3@10597>     MOVEA.l _dosbase,A6
0002765A <AmiBlitz3.ab3@10598>      JSR _Lock(A6)
0002765C <AmiBlitz3.ab3@10599>     MOVE.l D0,D1
00027660 <AmiBlitz3.ab3@10600>      BEQ.w 'exdone2
00027662 <AmiBlitz3.ab3@10601>     MOVEA.l (A7),A0
00027668 <AmiBlitz3.ab3@10602>     MOVE.b #$2F,-$1(A0)           ;#'/'
0002766A <AmiBlitz3.ab3@10605>     MOVE.l D1,-(A7)               ;lock
00027670 <AmiBlitz3.ab3@10606>     MOVE.l #ptr_parameterstore,D2
00027676 <AmiBlitz3.ab3@10607>     MOVEA.l _dosbase,A6
0002767A <AmiBlitz3.ab3@10608>     JSR _Examine(A6)
0002767C <AmiBlitz3.ab3@10609>     TST.l D0
00027680 <AmiBlitz3.ab3@10610>      BEQ.w 'exdone
00027686 <AmiBlitz3.ab3@10617>     LEA fib_FileName,A0
0002768A <AmiBlitz3.ab3@10618>     BSR.w check_for_infoextention
0002768E <AmiBlitz3.ab3@10619>     BEQ.w 'exdone
000276B8 <AmiBlitz3.ab3@10623>     !basic
0002773C <AmiBlitz3.ab3@10624>       Poke$ ?str_libfilename,dos_AddPart{Peek$(?str_path_userlibs),Peek$(?fib_FileName)}
0002775A <AmiBlitz3.ab3@10625>     !asm
00027760 <AmiBlitz3.ab3@10626>     MOVE.l #str_libfilename,D1
00027764 <AmiBlitz3.ab3@10627>     BSR.w open_userlibfile
00027766 <AmiBlitz3.ab3@10631>     MOVE.l (A7)+,D1
0002776C <AmiBlitz3.ab3@10632>     MOVEA.l _dosbase,A6
00027770 <AmiBlitz3.ab3@10633>     JSR _UnLock(A6)
00027772 <AmiBlitz3.ab3@10636>     ADDQ.w #4,A7    ;forget namepos
00027776 <AmiBlitz3.ab3@10637> BRA.w 'loop
0002777C <AmiBlitz3.ab3@10644>   MOVE.l #HUNK_RELOC_16__MODE_OLDFILE,D2
00027782 <AmiBlitz3.ab3@10645>   MOVEA.l _dosbase,A6
00027786 <AmiBlitz3.ab3@10646>    JSR _Open(A6)
00027788 <AmiBlitz3.ab3@10647>   MOVE.l D0,D7
0002778C <AmiBlitz3.ab3@10648>    BEQ.w 'openerr
0002778E <AmiBlitz3.ab3@10651>   MOVE.l D7,D1                                             ; filehandle
00027794 <AmiBlitz3.ab3@10652>   MOVE.l #optstuff,D2                                     ; buffer
0002779A <AmiBlitz3.ab3@10653>   MOVEA.l _dosbase,A6
0002779C <AmiBlitz3.ab3@10654>   MOVEQ.l #$20,D3                                          ; size
000277A0 <AmiBlitz3.ab3@10655>   JSR _Read(A6)
000277A6 <AmiBlitz3.ab3@10658>   MOVE.l optstuff+28,D6      ;long words to read
000277A8 <AmiBlitz3.ab3@10659>   LSL.l #2,D6
000277AA <AmiBlitz3.ab3@10660>   MOVE.l D6,D0
000277AC <AmiBlitz3.ab3@10661>   MOVEQ.l #$01,D1
000277B2 <AmiBlitz3.ab3@10662>   MOVEA.l _execbase,A6
000277B8 <AmiBlitz3.ab3@10665>   MOVE.l mempool,a0
000277BC <AmiBlitz3.ab3@10666>   JSR _AllocPooled(a6)
000277BE <AmiBlitz3.ab3@10668>   MOVEA.l D0,A5
000277C4 <AmiBlitz3.ab3@10671>   MOVEA.l _dosbase,A6
000277C6 <AmiBlitz3.ab3@10672>   MOVE.l D7,D1                                             ; filehandle
000277C8 <AmiBlitz3.ab3@10673>   MOVE.l A5,D2                                             ; buffer
000277CA <AmiBlitz3.ab3@10674>   MOVE.l D6,D3                                             ; size
000277CE <AmiBlitz3.ab3@10675>    JSR _Read(A6)   ;read in struct
000277D0 <AmiBlitz3.ab3@10677>   MOVE.l A5,(A3)
000277D2 <AmiBlitz3.ab3@10680>   MOVE.l A5,d0
000277D4 <AmiBlitz3.ab3@10683>   MOVEA.l A5,A3
000277D8 <AmiBlitz3.ab3@10684>   MOVE.l D6,$6(A5)
000277DC <AmiBlitz3.ab3@10685>   CLR.l $20(A5)
00027806 <AmiBlitz3.ab3@10687>   !basic
00027810 <AmiBlitz3.ab3@10689>   addr_libnum.l = PutD0 + 4
00027824 <AmiBlitz3.ab3@10690>   If fid<>-1
000278C4 <AmiBlitz3.ab3@10691>     currentlib$ = LSet$(Peek.s(?fib_FileName),30)+";"+LSet$(Get_Libinfo{addr_libnum},30) ;+";"+Str$(Peek.w(addr_libnum))
000278F6 <AmiBlitz3.ab3@10692>     file_WriteLine{fid,currentlib$}
00027914 <AmiBlitz3.ab3@10694>   !asm
00027916 <AmiBlitz3.ab3@10697>   MOVE.l D7,D1                                             ; filehandle
0002791C <AmiBlitz3.ab3@10698>   MOVE.l #optstuff,D2                                     ; buffer
0002791E <AmiBlitz3.ab3@10699>   MOVEQ.l #$0C,D3                                          ; size
00027924 <AmiBlitz3.ab3@10700>   MOVEA.l _dosbase,A6
00027928 <AmiBlitz3.ab3@10701>    JSR _Read(A6)
0002792E <AmiBlitz3.ab3@10704>   CMP.l #$C,D0
00027932 <AmiBlitz3.ab3@10705>    BCS.w 'closeup
00027938 <AmiBlitz3.ab3@10708>   MOVE.l optstuff+4,D0
0002793C <AmiBlitz3.ab3@10709>   MOVE.l D0,$20(A5)
0002793E <AmiBlitz3.ab3@10710>   LSL.l #2,D0
00027940 <AmiBlitz3.ab3@10711>   MOVE.l D0,D5             ;length of reloc info
00027942 <AmiBlitz3.ab3@10712>   MOVEQ.l #$01,D1
00027948 <AmiBlitz3.ab3@10713>   MOVEA.l _execbase,A6
0002794E <AmiBlitz3.ab3@10715>   MOVE.l mempool,a0
00027952 <AmiBlitz3.ab3@10716>   JSR _AllocPooled(a6)
00027958 <AmiBlitz3.ab3@10719>   MOVEA.l _dosbase,A6
0002795C <AmiBlitz3.ab3@10721>   MOVE.l D0,$24(A5)        ;pointer to reloc mem
0002795E <AmiBlitz3.ab3@10722>   MOVE.l D7,D1
00027960 <AmiBlitz3.ab3@10723>   MOVE.l D0,D2
00027962 <AmiBlitz3.ab3@10724>   MOVE.l D5,D3
00027966 <AmiBlitz3.ab3@10725>   JSR _Read(A6)
00027968 <AmiBlitz3.ab3@10728>   MOVE.l D7,D1
0002796E <AmiBlitz3.ab3@10729>   MOVEA.l _dosbase,A6
00027972 <AmiBlitz3.ab3@10730> JMP _Close(A6)
00027974 <AmiBlitz3.ab3@10733> RTS
0002797A <AmiBlitz3.ab3@10743>   CLR.w number_of_objects
00027980 <AmiBlitz3.ab3@10744>   MOVEA.l end_of_tokenlist,A3
00027986 <AmiBlitz3.ab3@10745>   MOVEA.l libpointer,A2
0002798A <AmiBlitz3.ab3@10748>     CMPA.w #$0,A2
0002798E <AmiBlitz3.ab3@10749>     BEQ.w 'done                                        ; <-- abbruch mit RTS
00027992 <AmiBlitz3.ab3@10751>     MOVE.w $4(A2),D7                                       ; <-- get tokennumber
00027996 <AmiBlitz3.ab3@10752>     BMI.w 'syslib
00027998 <AmiBlitz3.ab3@10753>       LSL.w #7,D7
0002799A <AmiBlitz3.ab3@10754>       ADDQ.w #1,D7
0002799E <AmiBlitz3.ab3@10755>       MOVE.w D7,$E(A2)
000279A2 <AmiBlitz3.ab3@10758>     LEA $30(A2),A1
000279A8 <AmiBlitz3.ab3@10759>     LEA temp1,A4
000279AA <AmiBlitz3.ab3@10762>       MOVE.w (A1),D0
000279AE <AmiBlitz3.ab3@10763>       BMI.w 'next
000279B0 <AmiBlitz3.ab3@10764>       MOVE.l A1,(A4)
000279B2 <AmiBlitz3.ab3@10765>       MOVEA.l A1,A4      ;last link for subs
000279B4 <AmiBlitz3.ab3@10766>       ADDQ.w #2,A4
000279B6 <AmiBlitz3.ab3@10767>       ADDQ.w #6,A1
000279BA <AmiBlitz3.ab3@10768>       CMP.w #$8,D0
000279BE <AmiBlitz3.ab3@10769>       BEQ.w 'addtoke
000279C2 <AmiBlitz3.ab3@10770>         ANDI.w #$F,D0
000279C6 <AmiBlitz3.ab3@10771>         BNE.w 'something
000279CA <AmiBlitz3.ab3@10775>           BSR.w skiplibreg
000279CE <AmiBlitz3.ab3@10776>           LEA $C(A1),A1
000279D0 <AmiBlitz3.ab3@10777>           ADDQ.w #1,D7   ;in case it's a user lib
000279D4 <AmiBlitz3.ab3@10778>  BRA.w 'loop2
000279D8 <AmiBlitz3.ab3@10781>     BTST #$2,D0
000279DC <AmiBlitz3.ab3@10782>     BEQ.w 'notalib
000279DE <AmiBlitz3.ab3@10783>       ADDQ.w #4,A1
000279E0 <AmiBlitz3.ab3@10786>         TST.b (A1)+
000279E4 <AmiBlitz3.ab3@10787>       BPL.w 'alibloop
000279E8 <AmiBlitz3.ab3@10788>       BSR.w aligna1
000279EC <AmiBlitz3.ab3@10789>  BRA.w 'addtoke
000279EE <AmiBlitz3.ab3@10794>       MOVE.w (A1)+,D0
000279F2 <AmiBlitz3.ab3@10795>       BMI.w 'addtoke
000279F6 <AmiBlitz3.ab3@10796>       ANDI.w #$FF,D0
000279F8 <AmiBlitz3.ab3@10797>       ADDA.w D0,A1
000279FC <AmiBlitz3.ab3@10798>       BSR.w aligna1
00027A00 <AmiBlitz3.ab3@10799>       BSR.w skiplibreg
00027A04 <AmiBlitz3.ab3@10800>       LEA $C(A1),A1
00027A08 <AmiBlitz3.ab3@10801>  BRA.w 'stloop
00027A0A <AmiBlitz3.ab3@10804>     MOVE.l A1,(A3)
00027A0C <AmiBlitz3.ab3@10805>     MOVEA.l A1,A3
00027A0E <AmiBlitz3.ab3@10806>     ADDQ.w #4,A1
00027A10 <AmiBlitz3.ab3@10808>     MOVE.w D7,(A1)+
00027A12 <AmiBlitz3.ab3@10811>       TST.b (A1)+
00027A16 <AmiBlitz3.ab3@10812>     BNE.w 'tokeloop
00027A18 <AmiBlitz3.ab3@10815>       TST.b (A1)+
00027A1C <AmiBlitz3.ab3@10816>     BNE.w 'tokeloop2
00027A20 <AmiBlitz3.ab3@10817>     BSR.w aligna1
00027A22 <AmiBlitz3.ab3@10818>     ADDQ.w #1,D7
00027A26 <AmiBlitz3.ab3@10819>  BRA.w 'loop2
00027A2A <AmiBlitz3.ab3@10822>     TST.w $4(A2)
00027A2E <AmiBlitz3.ab3@10823>      BMI.w 'notulib
00027A32 <AmiBlitz3.ab3@10824>     MOVE.w D7,$10(A2)
00027A34 <AmiBlitz3.ab3@10827>     ADDQ.w #2,A1
00027A36 <AmiBlitz3.ab3@10828>     TST.l (A1)+
00027A3A <AmiBlitz3.ab3@10829>      BEQ.w 'nomax
00027A40 <AmiBlitz3.ab3@10830>     ADDQ.w #1,number_of_objects
00027A44 <AmiBlitz3.ab3@10831>     LEA $16(A1),A1
00027A46 <AmiBlitz3.ab3@10834>     SUBA.l A2,A1
00027A4A <AmiBlitz3.ab3@10835>     MOVE.l A1,$12(A2)
00027A4C <AmiBlitz3.ab3@10836>     MOVEA.l (A2),A2
00027A50 <AmiBlitz3.ab3@10837>  BRA.w 'loop
00027A52 <AmiBlitz3.ab3@10840>   CLR.l (A3)
00027A58 <AmiBlitz3.ab3@10842> 
00027A5E <AmiBlitz3.ab3@10844>   MOVE.l A7,errstack
00027A68 <AmiBlitz3.ab3@10845>   MOVE.l #'cont,errcont
00027A70 <AmiBlitz3.ab3@10846>   MOVE.w #$FFFF,ezerr       ; was -1
00027A74 <AmiBlitz3.ab3@10847>   MOVE.w #$FFFA,D1          ;#65530
00027A78 <AmiBlitz3.ab3@10848>    BSR.w findlib            ;get address of mem lib
00027A7E <AmiBlitz3.ab3@10849>   MOVE.l A1,tempvm
00027A82 <AmiBlitz3.ab3@10850>   MOVE.w #$FDA7,D1          ;#64935,
00027A86 <AmiBlitz3.ab3@10851>    BSR.w findlib
00027A8C <AmiBlitz3.ab3@10852>   MOVE.l A1,ffplib
00027A8E <AmiBlitz3.ab3@10855> RTS
00027A92 <AmiBlitz3.ab3@10858> ffplib:  Ds.l 1
00027A94 <AmiBlitz3.ab3@10862>     TST.w (A1)+
00027A98 <AmiBlitz3.ab3@10863>     BEQ.w 'done
00027A9A <AmiBlitz3.ab3@10864>     ADDQ.w #2,A1
00027A9E <AmiBlitz3.ab3@10865>  BRA.w skiplibreg
00027AA0 <AmiBlitz3.ab3@10868> RTS
00027AA2 <AmiBlitz3.ab3@10872>   EXG.l A1,A0
00027AA6 <AmiBlitz3.ab3@10873>   BSR.w aligna1
00027AA8 <AmiBlitz3.ab3@10874>   EXG.l A1,A0
00027AAA <AmiBlitz3.ab3@10875> RTS
00027AAC <AmiBlitz3.ab3@10879>   EXG.l D0,A1
00027AAE <AmiBlitz3.ab3@10880>   ADDQ.l #1,D0
00027AB2 <AmiBlitz3.ab3@10881>   BCLR #$0,D0
00027AB4 <AmiBlitz3.ab3@10882>   EXG.l D0,A1
00027AB6 <AmiBlitz3.ab3@10883> RTS
00027ABC <AmiBlitz3.ab3@10887>   MOVEA.l _execbase,A6
00027AC2 <AmiBlitz3.ab3@10888>   MOVEA.l ptr_userlibs,A2
00027AC4 <AmiBlitz3.ab3@10889>   MOVE.l (A2),D0
00027AC6 <AmiBlitz3.ab3@10890>   CLR.l (A2)
00027AC8 <AmiBlitz3.ab3@10891>   MOVEA.l D0,A2
00027ACC <AmiBlitz3.ab3@10894>     CMPA.w #$0,A2
00027AD0 <AmiBlitz3.ab3@10895>     BEQ.w free_userlib
00027AD4 <AmiBlitz3.ab3@10897>     MOVE.l $20(A2),D0
00027AD8 <AmiBlitz3.ab3@10898>     BEQ.b 'skip
00027ADA <AmiBlitz3.ab3@10899>       LSL.l #2,D0
00027AE0 <AmiBlitz3.ab3@10901>       MOVE.l mempool,a0
00027AE4 <AmiBlitz3.ab3@10903>       MOVEA.l $24(A2),A1
00027AE8 <AmiBlitz3.ab3@10905>       JSR _FreePooled(A6)
00027AEA <AmiBlitz3.ab3@10910>     MOVEA.l A2,A1
00027AEE <AmiBlitz3.ab3@10911>     MOVE.l $6(A1),D0
00027AF4 <AmiBlitz3.ab3@10913>     MOVE.l mempool,a0
00027AF6 <AmiBlitz3.ab3@10915>     MOVEA.l (A2),A2
00027AFC <AmiBlitz3.ab3@10917>     MOVEA.l _execbase,A6
00027B00 <AmiBlitz3.ab3@10918>     JSR _FreePooled(A6)
00027B04 <AmiBlitz3.ab3@10921> BRA.w 'loop
00027B08 <AmiBlitz3.ab3@10925>   BSR.w free_userlibs
00027B0E <AmiBlitz3.ab3@10927>   MOVEA.l _execbase,A6
00027B14 <AmiBlitz3.ab3@10928>   CLR.l libpointer
00027B1A <AmiBlitz3.ab3@10929>   MOVEA.l end_of_tokenlist,A0
00027B1C <AmiBlitz3.ab3@10930>   CLR.l (A0)
00027B22 <AmiBlitz3.ab3@10932>   MOVE.l size_acidlibs,D0
00027B26 <AmiBlitz3.ab3@10933>   BEQ.b 'defskip
00027B2C <AmiBlitz3.ab3@10934>     MOVE.l ptr_acidlibs,D1
00027B30 <AmiBlitz3.ab3@10935>     BEQ.b 'defskip
00027B36 <AmiBlitz3.ab3@10936>       CLR.l ptr_acidlibs
00027B38 <AmiBlitz3.ab3@10937>       MOVEA.l D1,A1
00027B3E <AmiBlitz3.ab3@10939>       MOVE.l mempool,a0
00027B44 <AmiBlitz3.ab3@10940>       MOVEA.l _execbase,A6
00027B48 <AmiBlitz3.ab3@10941>       JSR _FreePooled(A6)                                 ; free acidlibs
00027B4E <AmiBlitz3.ab3@10946>   MOVE.l size_deflibs,D0
00027B52 <AmiBlitz3.ab3@10947>   BEQ.b 'acidskip
00027B58 <AmiBlitz3.ab3@10948>     MOVE.l ptr_deflibs,D1
00027B5C <AmiBlitz3.ab3@10949>     BEQ.b 'acidskip
00027B62 <AmiBlitz3.ab3@10950>       CLR.l ptr_deflibs                                    ; d0: memorySize
00027B64 <AmiBlitz3.ab3@10951>       MOVEA.l D1,A1                                        ; a1: memory
00027B6A <AmiBlitz3.ab3@10953>       MOVE.l mempool,a0                                    ; a0: poolHeader
00027B70 <AmiBlitz3.ab3@10954>       MOVEA.l _execbase,A6
00027B74 <AmiBlitz3.ab3@10955>       JSR _FreePooled(A6)                                  ; free deflibs
00027B76 <AmiBlitz3.ab3@10960> RTS
00027B7C <AmiBlitz3.ab3@10964>   MOVEA.l currentmacroaddr,A0
00027B7E <AmiBlitz3.ab3@10965>   MOVEA.l (A0),A2
00027B80 <AmiBlitz3.ab3@10966>   CLR.l (A0)
00027B86 <AmiBlitz3.ab3@10967>   MOVEA.l _execbase,A6
00027B8A <AmiBlitz3.ab3@10970>     CMPA.w #$0,A2
00027B8E <AmiBlitz3.ab3@10971>     BEQ.w 'done
00027B90 <AmiBlitz3.ab3@10972>     MOVEQ.l #$00,D0
00027B94 <AmiBlitz3.ab3@10973>     MOVE.w $8(A2),D0
00027B98 <AmiBlitz3.ab3@10974>     BEQ.w 'skip
00027B9C <AmiBlitz3.ab3@10975>     MOVEA.l $4(A2),A1
00027BA2 <AmiBlitz3.ab3@10977>     MOVE.l mempool,a0
00027BA6 <AmiBlitz3.ab3@10978>     JSR _FreePooled(A6)
00027BA8 <AmiBlitz3.ab3@10983>     MOVEA.l A2,A1
00027BAA <AmiBlitz3.ab3@10984>     MOVEA.l (A2),A2
00027BAC <AmiBlitz3.ab3@10985>     MOVEQ.l #$00,D0
00027BB0 <AmiBlitz3.ab3@10986>     MOVE.b $C(A1),D0
00027BB6 <AmiBlitz3.ab3@10988>     MOVE.l mempool2,a0
00027BBA <AmiBlitz3.ab3@10989>     JSR _FreePooled(A6)
00027BBE <AmiBlitz3.ab3@10993>  BRA.w 'loop
00027BC0 <AmiBlitz3.ab3@10996> RTS
00027BC6 <AmiBlitz3.ab3@11000>   MOVEA.l templabel,A2
00027BCC <AmiBlitz3.ab3@11001>   CLR.l templabel
00027BCE <AmiBlitz3.ab3@11003> RTS
00027BD4 <AmiBlitz3.ab3@11005>   MOVEA.l _execbase,A6                                     ;??looks like dead code?
00027BD8 <AmiBlitz3.ab3@11008>     CMPA.w #$0,A2
00027BDC <AmiBlitz3.ab3@11009>     BEQ.w 'done
00027BDE <AmiBlitz3.ab3@11010>     MOVEQ.l #$00,D0
00027BE2 <AmiBlitz3.ab3@11011>     MOVE.b $E(A2),D0                                       ;labeltemp
00027BE4 <AmiBlitz3.ab3@11012>     MOVEA.l A2,A1
00027BE6 <AmiBlitz3.ab3@11013>     MOVEA.l (A2),A2
00027BEC <AmiBlitz3.ab3@11015>     MOVE.l mempool2,a0
00027BF0 <AmiBlitz3.ab3@11020>  BRA.w 'loop
00027BF2 <AmiBlitz3.ab3@11023> RTS
00027BF8 <AmiBlitz3.ab3@11027>   MOVEA.l data1,A4
00027BFE <AmiBlitz3.ab3@11028>   CMPA.l data2at,A4
00027C02 <AmiBlitz3.ab3@11029>   BCC.w 'over
00027C04 <AmiBlitz3.ab3@11030>     MOVE.b D1,(A4)+
00027C0A <AmiBlitz3.ab3@11031>     MOVE.l A4,data1
00027C0C <AmiBlitz3.ab3@11032>  RTS
00027C14 <AmiBlitz3.ab3@11035>   MOVE.w #$FFFF,dontwrite_nomemleft     ; was -1                             ;move #-1, org source
00027C1A <AmiBlitz3.ab3@11036>   ADDQ.l #1,data1
00027C1C <AmiBlitz3.ab3@11037> RTS
00027C1E <AmiBlitz3.ab3@11041>   SWAP D1
00027C22 <AmiBlitz3.ab3@11042>   BSR.w pokedata1
00027C24 <AmiBlitz3.ab3@11043>   SWAP D1
00027C2A <AmiBlitz3.ab3@11046>   MOVEA.l data1,A4
00027C30 <AmiBlitz3.ab3@11047>   CMPA.l data2at,A4
00027C34 <AmiBlitz3.ab3@11048>    BCC.w 'over
00027C36 <AmiBlitz3.ab3@11049>   MOVE.w D1,(A4)+
00027C3C <AmiBlitz3.ab3@11050>   MOVE.l A4,data1
00027C3E <AmiBlitz3.ab3@11051>  RTS
00027C46 <AmiBlitz3.ab3@11054>   MOVE.w #$FFFF,dontwrite_nomemleft    ; was -1
00027C4C <AmiBlitz3.ab3@11055>   ADDQ.l #2,data1
00027C4E <AmiBlitz3.ab3@11056> RTS
00027C54 <AmiBlitz3.ab3@11060>   MOVE.l data1,D3                                      ;write local string/type allocs
00027C56 <AmiBlitz3.ab3@11061>   MOVEQ.l #$00,D4
00027C5A <AmiBlitz3.ab3@11064>   CMPA.w #$0,A2
00027C5E <AmiBlitz3.ab3@11065>    BEQ.w 'done
00027C62 <AmiBlitz3.ab3@11066>   TST.w $6(A2)
00027C66 <AmiBlitz3.ab3@11067>    BNE.w 'next
00027C6A <AmiBlitz3.ab3@11068>   MOVEA.l $A(A2),A3
00027C72 <AmiBlitz3.ab3@11069>   CMPI.l #$100,$4(A3)
00027C76 <AmiBlitz3.ab3@11070>    BCS.w 'next
00027C7A <AmiBlitz3.ab3@11071>   MOVE.w $4(A2),D1
00027C7E <AmiBlitz3.ab3@11072>    BSR.w pokedata1
00027C82 <AmiBlitz3.ab3@11073>   MOVE.w $8(A3),D1
00027C86 <AmiBlitz3.ab3@11074>    BSR.w pokedata1
00027C88 <AmiBlitz3.ab3@11075>   ADDQ.w #1,D4
00027C8A <AmiBlitz3.ab3@11078>    MOVEA.l (A2),A2
00027C8E <AmiBlitz3.ab3@11079>  BRA.w 'loop
00027C90 <AmiBlitz3.ab3@11082>    TST.w D4
00027C94 <AmiBlitz3.ab3@11083>    BEQ.w calcstatic2_skip
00027C98 <AmiBlitz3.ab3@11084>   MOVE.w #$FF37,D1              ;#65335
00027C9C <AmiBlitz3.ab3@11085>    BSR.w uselib                 ;use statics lib
00027CA0 <AmiBlitz3.ab3@11086>   MOVE.w #$FFFA,D1              ;use memlib
00027CA4 <AmiBlitz3.ab3@11087> BRA.w uselib
00027CAA <AmiBlitz3.ab3@11096>   MOVEA.l varbase,A2                                       ;add alloc mem for types/strings global
00027CB0 <AmiBlitz3.ab3@11099>   MOVE.l data1,D3
00027CB2 <AmiBlitz3.ab3@11100>   MOVEQ.l #$00,D4
00027CB8 <AmiBlitz3.ab3@11102>   TST.b iserror
00027CBC <AmiBlitz3.ab3@11103>   BEQ 'loop
00027CBE <AmiBlitz3.ab3@11104>   RTS
00027CC2 <AmiBlitz3.ab3@11108>    CMPA.w #$0,A2
00027CC6 <AmiBlitz3.ab3@11109>    BEQ.w 'done
00027CCA <AmiBlitz3.ab3@11110>   TST.w $6(A2)
00027CCE <AmiBlitz3.ab3@11111>    BNE.w 'next
00027CD2 <AmiBlitz3.ab3@11112>   MOVEA.l $A(A2),A3
00027CDA <AmiBlitz3.ab3@11113>   CMPI.l #$100,$4(A3)
00027CDE <AmiBlitz3.ab3@11114>    BCS.w 'next
00027CE2 <AmiBlitz3.ab3@11115>   MOVE.w $4(A2),D1
00027CE6 <AmiBlitz3.ab3@11116>    BSR.w pokedata1
00027CEA <AmiBlitz3.ab3@11117>   MOVE.w $8(A3),D1
00027CEE <AmiBlitz3.ab3@11118>    BSR.w pokedata1
00027CF0 <AmiBlitz3.ab3@11119>   ADDQ.w #1,D4
00027CF2 <AmiBlitz3.ab3@11122>   MOVEA.l (A2),A2
00027CF6 <AmiBlitz3.ab3@11123>  BRA.w 'loop
00027CFC <AmiBlitz3.ab3@11128>   MOVEA.l sharebase,A2  ; org  varbase
00027D00 <AmiBlitz3.ab3@11131>   CMPA.w #$0,A2
00027D04 <AmiBlitz3.ab3@11132>    BEQ.w 'doneb
00027D08 <AmiBlitz3.ab3@11134>   TST.w $6(A2)
00027D0C <AmiBlitz3.ab3@11135>    BNE.w 'nextb
00027D10 <AmiBlitz3.ab3@11136>   MOVEA.l $A(A2),A3
00027D18 <AmiBlitz3.ab3@11137>   CMPI.l #$100,$4(A3)
00027D1C <AmiBlitz3.ab3@11138>    BCS.w 'nextb
00027D20 <AmiBlitz3.ab3@11139>   MOVE.w $4(A2),D1
00027D24 <AmiBlitz3.ab3@11140>    BSR.w pokedata1
00027D28 <AmiBlitz3.ab3@11141>   MOVE.w $8(A3),D1
00027D2C <AmiBlitz3.ab3@11142>    BSR.w pokedata1
00027D2E <AmiBlitz3.ab3@11143>   ADDQ.w #1,D4
00027D30 <AmiBlitz3.ab3@11146>   MOVEA.l (A2),A2
00027D34 <AmiBlitz3.ab3@11147>  BRA.w 'loopb
00027D36 <AmiBlitz3.ab3@11151>    TST.w D4
00027D3A <AmiBlitz3.ab3@11152>    BEQ.w calcstatic2_skip
00027D3E <AmiBlitz3.ab3@11153>   MOVE.w #$FF37,D1      ;#65335
00027D42 <AmiBlitz3.ab3@11154>    BSR.w uselib         ;use statics lib                                   ;use statics lib
00027D46 <AmiBlitz3.ab3@11155>   MOVE.w #$FFFA,D1      ;use memlib                                   ;use memlib
00027D4A <AmiBlitz3.ab3@11156> BRA.w uselib
00027D4C <AmiBlitz3.ab3@11159> RTS
00027D52 <AmiBlitz3.ab3@11163>   MOVE.w numtoa2,D1
00027D56 <AmiBlitz3.ab3@11164>    BSR.w writeword
00027D5A <AmiBlitz3.ab3@11165>    BSR.w addoff
00027D5C <AmiBlitz3.ab3@11166>   MOVE.l D3,D1
00027D60 <AmiBlitz3.ab3@11167>    BSR.w writelong
00027D62 <AmiBlitz3.ab3@11168>   SUBQ.w #1,D4
00027D68 <AmiBlitz3.ab3@11169>   MOVE.w D4,endarray+2
00027D6E <AmiBlitz3.ab3@11170>   MOVE.l endarray,D1
00027D72 <AmiBlitz3.ab3@11171> BRA.w writelong
00027D74 <AmiBlitz3.ab3@11175>   MOVE.l D3,-(A7)
00027D7A <AmiBlitz3.ab3@11178>   MOVEA.l _dosbase,A6
00027D7E <AmiBlitz3.ab3@11180>   JSR _Write(a6)
00027D80 <AmiBlitz3.ab3@11181>   CMP.l (A7)+,D0
00027D84 <AmiBlitz3.ab3@11182>    BNE.w 'skip
00027D86 <AmiBlitz3.ab3@11183>  RTS
00027D88 <AmiBlitz3.ab3@11186>   MOVE.l D7,D1
00027D8E <AmiBlitz3.ab3@11189>   MOVEA.l _dosbase,A6
00027D92 <AmiBlitz3.ab3@11191>   JSR _Close(a6)
00027D98 <AmiBlitz3.ab3@11194> JMP error_create_exe
00027D9E <AmiBlitz3.ab3@11203> 
00027DA4 <AmiBlitz3.ab3@11205>   MOVE.l A7,errstack
00027DA8 <AmiBlitz3.ab3@11207>   MOVEM.l d2-d7/a2-a6,-(a7)
00027DB2 <AmiBlitz3.ab3@11209>   MOVE.l #'rts,errcont
00027DB8 <AmiBlitz3.ab3@11211>    JSR call_setpointerbusy
00027DC0 <AmiBlitz3.ab3@11213>   MOVE.w #$FFFF,anyerrs   ; was -1
00027DCA <AmiBlitz3.ab3@11215>   CMP.l #-1,chipstart
00027DCE <AmiBlitz3.ab3@11216>   BEQ 'l01
00027DD4 <AmiBlitz3.ab3@11217>   MOVE.l chipend,d1
00027DD6 <AmiBlitz3.ab3@11218>   ADDQ.l #3,d1
00027DDC <AmiBlitz3.ab3@11219>   AND.l #$fffffffc,d1                                      ;bug
00027DE2 <AmiBlitz3.ab3@11220>   MOVE.l d1,chipend
00027DE4 <AmiBlitz3.ab3@11221>   MOVE.l d1,a1
00027DEA <AmiBlitz3.ab3@11222>   MOVE.l chipstart,a0
00027DEC <AmiBlitz3.ab3@11223>   MOVE.l a1,d1
00027DEE <AmiBlitz3.ab3@11224>   SUB.l a0,d1
00027DF4 <AmiBlitz3.ab3@11225>   MOVE.l d1,chipsize
00027DFE <AmiBlitz3.ab3@11228>   CMP.l #-1,bssstart
00027E02 <AmiBlitz3.ab3@11229>   BEQ 'l11
00027E08 <AmiBlitz3.ab3@11230>   MOVE.l realbssend,a1
00027E0E <AmiBlitz3.ab3@11231>   MOVE.l bssstart,a0
00027E10 <AmiBlitz3.ab3@11232>   MOVE.l a1,d1
00027E12 <AmiBlitz3.ab3@11233>   SUB.l a0,d1
00027E18 <AmiBlitz3.ab3@11234>   MOVE.l d1,bsssize
00027E1C <AmiBlitz3.ab3@11235>   BEQ 'l11
00027E1E <AmiBlitz3.ab3@11238>   TST.b (a0)+
00027E22 <AmiBlitz3.ab3@11239>   BEQ 'l31
00027E28 <AmiBlitz3.ab3@11240>   TST.b debugmode
00027E2C <AmiBlitz3.ab3@11241>   BEQ 'l1
00027E32 <AmiBlitz3.ab3@11242>   TST.b exdebug
00027E36 <AmiBlitz3.ab3@11243>   BNE 'l31
00027E3C <AmiBlitz3.ab3@11246>   MOVE.l #nodata,-(a7)
00027E42 <AmiBlitz3.ab3@11247>  JMP handle_compileerror
00027E44 <AmiBlitz3.ab3@11250>   CMP.l a0,a1
00027E48 <AmiBlitz3.ab3@11251>   BGT 'l32
00027E4E <AmiBlitz3.ab3@11252>   MOVE.l bssend,d1
00027E50 <AmiBlitz3.ab3@11253>   ADDQ.l #3,d1
00027E56 <AmiBlitz3.ab3@11254>   AND.l #$fffffffc,d1                                      ;bug
00027E5C <AmiBlitz3.ab3@11255>   MOVE.l d1,bssend
00027E5E <AmiBlitz3.ab3@11256>   MOVE.l d1,a1
00027E64 <AmiBlitz3.ab3@11257>   MOVE.l bssstart,a0
00027E66 <AmiBlitz3.ab3@11258>   MOVE.l a1,d1
00027E68 <AmiBlitz3.ab3@11259>   SUB.l a0,d1
00027E6E <AmiBlitz3.ab3@11260>   MOVE.l d1,bsssize
00027E72 <AmiBlitz3.ab3@11263>   MOVEM.l d5-d7/d3,-(a7)
00027E78 <AmiBlitz3.ab3@11265>   MOVE.w dontwrite_nomemleft,D1
00027E7C <AmiBlitz3.ab3@11266>   BNE.w 'fixdone
00027E82 <AmiBlitz3.ab3@11268>   MOVE.l chipsize,d5
00027E88 <AmiBlitz3.ab3@11269>   MOVE.l bsssize,d3
00027E8E <AmiBlitz3.ab3@11270>   MOVE.l chipstart,d7
00027E94 <AmiBlitz3.ab3@11271>   MOVE.l bssstart,d6
00027E9A <AmiBlitz3.ab3@11273>   MOVEA.l hunkoffsetbase,A2
00027EA0 <AmiBlitz3.ab3@11274>   MOVEA.l destbufferstart,A1
00027EA2 <AmiBlitz3.ab3@11275>   MOVE.l A1,D2
00027EA8 <AmiBlitz3.ab3@11276>   ADD.l noinits,D2
00027EAE <AmiBlitz3.ab3@11278>   CLR.l hunkoffsetnum
00027EB2 <AmiBlitz3.ab3@11282>   CMPA.w #$0,A2
00027EB6 <AmiBlitz3.ab3@11283>    BEQ.w 'fixdone
00027EBA <AmiBlitz3.ab3@11284>   MOVE.l $4(A2),D0
00027EBE <AmiBlitz3.ab3@11286>    LEA $0(a1,d0.l),a0
00027EC0 <AmiBlitz3.ab3@11287>    MOVE.l (a0),d1
00027EC2 <AmiBlitz3.ab3@11288>   TST.l d1
00027EC6 <AmiBlitz3.ab3@11289>    BMI.w 'lm1a
00027ECE <AmiBlitz3.ab3@11290>   MOVE.b #0,newhunk
00027ED8 <AmiBlitz3.ab3@11291>   CMP.l #-1,chipstart
00027EDC <AmiBlitz3.ab3@11292>   BEQ 'l10a
00027EE2 <AmiBlitz3.ab3@11293>   CMP.l chipstart,d1
00027EE6 <AmiBlitz3.ab3@11294>   BLT 'l10a
00027EEE <AmiBlitz3.ab3@11295>   MOVE.b #1,newhunk
00027EF4 <AmiBlitz3.ab3@11296>   CMP.l chipend,d1
00027EF8 <AmiBlitz3.ab3@11297>   BGE 'l110a
00027EFA <AmiBlitz3.ab3@11298>   SUB.l d7,(a0)
00027F02 <AmiBlitz3.ab3@11299>   ADD.l #$80000000,4(a2)
00027F06 <AmiBlitz3.ab3@11300>  BRA 'noway
00027F0A <AmiBlitz3.ab3@11303>   SUB.l d5,0(a0)
00027F14 <AmiBlitz3.ab3@11306>   CMP.l #-1,bssstart
00027F18 <AmiBlitz3.ab3@11307>     BEQ 'l11a
00027F1E <AmiBlitz3.ab3@11308>   CMP.l bssstart,d1
00027F22 <AmiBlitz3.ab3@11309>   BLT 'l11a
00027F28 <AmiBlitz3.ab3@11310>   CMP.l bssend,d1
00027F2C <AmiBlitz3.ab3@11311>   BGE 'l111a
00027F32 <AmiBlitz3.ab3@11312>   TST.b newhunk
00027F36 <AmiBlitz3.ab3@11313>   BEQ 'ln1a
00027F38 <AmiBlitz3.ab3@11314>   ADD.l d5,(a0)
00027F3A <AmiBlitz3.ab3@11317>   SUB.l d6,(a0)
00027F42 <AmiBlitz3.ab3@11318>   ADD.l #$40000000,4(a2)
00027F46 <AmiBlitz3.ab3@11319>  BRA 'noway
00027F4A <AmiBlitz3.ab3@11322>   SUB.l d3,0(a0)
00027F4C <AmiBlitz3.ab3@11325>   SUB.l D2,(A0)
00027F52 <AmiBlitz3.ab3@11328>   ADDQ.l #1,hunkoffsetnum
00027F54 <AmiBlitz3.ab3@11332>    MOVEA.l (A2),A2
00027F58 <AmiBlitz3.ab3@11333>  BRA.w 'loop0
00027F5C <AmiBlitz3.ab3@11337>   MOVEM.l (a7)+,d5-d7/d3
00027F62 <AmiBlitz3.ab3@11339>   MOVE.l ptr_newexefilename,D1
00027F68 <AmiBlitz3.ab3@11340>   MOVE.l #HUNK_RELOC_8__MODE_NEWFILE,D2
00027F6E <AmiBlitz3.ab3@11341>   MOVEA.l _dosbase,A6
00027F72 <AmiBlitz3.ab3@11342>    JSR _Open(A6)
00027F74 <AmiBlitz3.ab3@11343>   MOVE.l D0,D7
00027F78 <AmiBlitz3.ab3@11344>    BEQ.w execerr
00027F7E <AmiBlitz3.ab3@11346>   MOVE.l objlen,D0
00027F84 <AmiBlitz3.ab3@11348>   SUB.l #moremem,d0
00027F8A <AmiBlitz3.ab3@11350>   SUB.l noinits,D0
00027F94 <AmiBlitz3.ab3@11352>   CMP.l #-1,bssstart
00027F98 <AmiBlitz3.ab3@11353>   BEQ 'l60
00027F9E <AmiBlitz3.ab3@11354>   SUB.l bsssize,d0
00027FA4 <AmiBlitz3.ab3@11355>   SUB.l chipsize,d0
00027FA8 <AmiBlitz3.ab3@11356>  BRA.s 'l61
00027FB2 <AmiBlitz3.ab3@11359>   CMP.l #-1,chipstart
00027FB6 <AmiBlitz3.ab3@11360>   BEQ 'l61
00027FBC <AmiBlitz3.ab3@11361>   SUB.l bsssize,d0
00027FC2 <AmiBlitz3.ab3@11362>   SUB.l chipsize,d0
00027FC4 <AmiBlitz3.ab3@11366>   ADDQ.l #3,D0
00027FC6 <AmiBlitz3.ab3@11367>   LSR.l #2,D0
00027FCC <AmiBlitz3.ab3@11368>   MOVE.l D0,tstsize1
00027FD2 <AmiBlitz3.ab3@11369>   MOVE.l D0,tstsize2
00027FD4 <AmiBlitz3.ab3@11370>   MOVE.l D7,D1
00027FDA <AmiBlitz3.ab3@11371>   MOVE.l #tsthead,D2                                      ;hunkbegin
00027FDC <AmiBlitz3.ab3@11372>   MOVEQ.l #$20,D3
00027FE6 <AmiBlitz3.ab3@11374>   CMP.l #-1,bssstart
00027FEA <AmiBlitz3.ab3@11375>   BEQ 'lb1
00027FF4 <AmiBlitz3.ab3@11376>   CMP.l #-1,chipstart
00027FF8 <AmiBlitz3.ab3@11377>   BEQ 'lb1
00028002 <AmiBlitz3.ab3@11378>   MOVE.l #1,bssnum
0002800C <AmiBlitz3.ab3@11379>   MOVE.l #2,chipnum
0002800E <AmiBlitz3.ab3@11380>   MOVEQ.l #$28,D3
00028014 <AmiBlitz3.ab3@11381>   MOVE.l bsssize,d2
00028016 <AmiBlitz3.ab3@11382>   ADDQ.l #3,d2
00028018 <AmiBlitz3.ab3@11383>   ASR.l #2,d2
0002801E <AmiBlitz3.ab3@11384>   MOVE.l d2,hunkend+8
00028024 <AmiBlitz3.ab3@11385>   MOVE.l d2,bsssize3
0002802A <AmiBlitz3.ab3@11386>   MOVE.l chipsize,d2
0002802C <AmiBlitz3.ab3@11387>   ADDQ.l #3,d2
0002802E <AmiBlitz3.ab3@11388>   ASR.l #2,d2
00028034 <AmiBlitz3.ab3@11389>   MOVE.l d2,chipsize2
0002803E <AmiBlitz3.ab3@11390>   ADD.l #$40000000,chipsize2
00028044 <AmiBlitz3.ab3@11391>   MOVE.l d2,hunkend2+8
0002804A <AmiBlitz3.ab3@11392>   MOVE.l D0,tstsize1c
00028050 <AmiBlitz3.ab3@11393>   MOVE.l D0,tstsize2c
00028056 <AmiBlitz3.ab3@11394>   MOVE.l #hunkbegin2,d2
0002805A <AmiBlitz3.ab3@11395>  BRA 'l100b
00028064 <AmiBlitz3.ab3@11398>   CMP.l #-1,bssstart
00028068 <AmiBlitz3.ab3@11399>   BEQ 'l10b
00028072 <AmiBlitz3.ab3@11400>   MOVE.l #1,bssnum
00028074 <AmiBlitz3.ab3@11401>   MOVEQ.l #$24,D3
0002807A <AmiBlitz3.ab3@11402>   MOVE.l bsssize,d2
0002807C <AmiBlitz3.ab3@11403>   ADDQ.l #3,d2
0002807E <AmiBlitz3.ab3@11404>   ASR.l #2,d2
00028084 <AmiBlitz3.ab3@11405>   MOVE.l d2,hunkend+8
0002808A <AmiBlitz3.ab3@11406>   MOVE.l d2,bsssize2
00028090 <AmiBlitz3.ab3@11407>   MOVE.l D0,tstsize1b
00028096 <AmiBlitz3.ab3@11408>   MOVE.l D0,tstsize2b
0002809C <AmiBlitz3.ab3@11409>   MOVE.l #hunkbegin,d2
000280A6 <AmiBlitz3.ab3@11412>   CMP.l #-1,chipstart
000280AA <AmiBlitz3.ab3@11413>   BEQ 'l100b
000280B4 <AmiBlitz3.ab3@11414>   MOVE.l #1,chipnum
000280B6 <AmiBlitz3.ab3@11415>   MOVEQ.l #$24,D3
000280BC <AmiBlitz3.ab3@11416>   MOVE.l chipsize,d2
000280BE <AmiBlitz3.ab3@11417>   ADDQ.l #3,d2
000280C0 <AmiBlitz3.ab3@11418>   ASR.l #2,d2
000280C6 <AmiBlitz3.ab3@11419>   MOVE.l d2,hunkend2+8
000280CC <AmiBlitz3.ab3@11420>   MOVE.l d2,bsssize2
000280D6 <AmiBlitz3.ab3@11421>   ADD.l #$40000000,bsssize2
000280DC <AmiBlitz3.ab3@11422>   MOVE.l D0,tstsize1b
000280E2 <AmiBlitz3.ab3@11423>   MOVE.l D0,tstsize2b
000280E8 <AmiBlitz3.ab3@11424>   MOVE.l #hunkbegin,d2
000280EC <AmiBlitz3.ab3@11428>    BSR.w mywrite
000280F2 <AmiBlitz3.ab3@11430>   MOVE.l destbufferstart,D2
000280F8 <AmiBlitz3.ab3@11431>   ADD.l noinits,D2
000280FE <AmiBlitz3.ab3@11432>   MOVE.l objlen,D3
00028104 <AmiBlitz3.ab3@11433>   SUB.l #moremem,d3
0002810A <AmiBlitz3.ab3@11434>   SUB.l noinits,D3
00028114 <AmiBlitz3.ab3@11436>   CMP.l #-1,bssstart
00028118 <AmiBlitz3.ab3@11437>   BNE 'l40
00028122 <AmiBlitz3.ab3@11438>   CMP.l #-1,chipstart
00028126 <AmiBlitz3.ab3@11439>   BNE 'l40
0002812A <AmiBlitz3.ab3@11440>  BRA 'l41
00028130 <AmiBlitz3.ab3@11443>   MOVE.l codeend,d1
00028132 <AmiBlitz3.ab3@11444>     SUB.l d2,d1
00028134 <AmiBlitz3.ab3@11445>     MOVE.l d1,d3
0002813A <AmiBlitz3.ab3@11446>   SUB.l bsssize,d3
00028140 <AmiBlitz3.ab3@11447>   SUB.l chipsize,d3
00028142 <AmiBlitz3.ab3@11448>   MOVE.l D7,D1
00028146 <AmiBlitz3.ab3@11449>   BSR.w mywrite
0002814C <AmiBlitz3.ab3@11450>   MOVE.l objlen,D3
00028152 <AmiBlitz3.ab3@11451>   SUB.l #moremem,d3
00028158 <AmiBlitz3.ab3@11452>   SUB.l noinits,D3
0002815A <AmiBlitz3.ab3@11453>   MOVE.l d3,d1
00028160 <AmiBlitz3.ab3@11454>   MOVE.l destbufferstart,D2
00028166 <AmiBlitz3.ab3@11455>   ADD.l noinits,D2
00028168 <AmiBlitz3.ab3@11456>   ADD.l d2,d1
0002816E <AmiBlitz3.ab3@11457>   SUB.l codeend,d1
00028170 <AmiBlitz3.ab3@11458>   MOVE.l d1,d3
00028176 <AmiBlitz3.ab3@11459>   MOVE.l codeend,d2
00028178 <AmiBlitz3.ab3@11462>   MOVE.l d2,d1
0002817A <AmiBlitz3.ab3@11463>   ADD.l d3,d1
0002817C <AmiBlitz3.ab3@11465>   ADDQ.l #3,D1
00028182 <AmiBlitz3.ab3@11466>   ANDI.l #$FFFFFFFC,D1
00028184 <AmiBlitz3.ab3@11468>   SUB.l d2,d1
00028186 <AmiBlitz3.ab3@11469>   MOVE.l d1,d3
00028188 <AmiBlitz3.ab3@11470>   MOVE.l D7,D1
0002818C <AmiBlitz3.ab3@11472>    BSR.w mywrite
00028196 <AmiBlitz3.ab3@11474>   MOVE.l hunkoffsetcounter,tstsize3
0002819A <AmiBlitz3.ab3@11475>    BEQ.w 'skip
0002819C <AmiBlitz3.ab3@11476>   MOVE.l D7,D1
000281A2 <AmiBlitz3.ab3@11477>   MOVE.l #tstend,D2
000281A4 <AmiBlitz3.ab3@11478>   MOVEQ.l #$04,D3           ; was #12
000281A8 <AmiBlitz3.ab3@11479>    BSR.w mywrite
000281AE <AmiBlitz3.ab3@11481>    MOVEA.l _execbase,A6
000281B4 <AmiBlitz3.ab3@11482>    MOVE.l hunkoffsetcounter,d0
000281B6 <AmiBlitz3.ab3@11483>    ASL.l #2,d0
000281BC <AmiBlitz3.ab3@11484>    ADD.l #12,d0
000281BE <AmiBlitz3.ab3@11485>    MOVEQ #0,d1
000281C2 <AmiBlitz3.ab3@11486>    JSR _AllocMem(a6)
000281C4 <AmiBlitz3.ab3@11487>    TST.l d0
000281C8 <AmiBlitz3.ab3@11488>    BEQ 'nomem
000281CE <AmiBlitz3.ab3@11489>    MOVE.l noinits,D4
000281D0 <AmiBlitz3.ab3@11490>    MOVE.l d5,-(a7)
000281D2 <AmiBlitz3.ab3@11491>    MOVE.l d0,d5
000281D4 <AmiBlitz3.ab3@11492>    MOVE.l d0,a1
000281DA <AmiBlitz3.ab3@11493>    MOVEA.l hunkoffsetbase,A2
000281E2 <AmiBlitz3.ab3@11494>    MOVE.b #0,newhunk
000281E6 <AmiBlitz3.ab3@11497>   CMPA.w #$0,A2
000281EA <AmiBlitz3.ab3@11498>    BEQ.w 'savehunk
000281F0 <AmiBlitz3.ab3@11499>   MOVE.l destbufferstart,D2
000281F6 <AmiBlitz3.ab3@11500>   ADD.l noinits,D2
000281FA <AmiBlitz3.ab3@11501>   MOVE.l  $4(A2),d1
000281FE <AmiBlitz3.ab3@11502>   BTST #31,d1
00028202 <AmiBlitz3.ab3@11503>   BEQ 'lh1
0002820A <AmiBlitz3.ab3@11504>   MOVE.b #1,newhunk
0002820E <AmiBlitz3.ab3@11505>  BRA 'lh3
00028212 <AmiBlitz3.ab3@11508>   BTST #30,d1
00028216 <AmiBlitz3.ab3@11509>   BEQ 'lh2
0002821E <AmiBlitz3.ab3@11510>   MOVE.b #1,newhunk
00028222 <AmiBlitz3.ab3@11511>  BRA 'lh3
00028224 <AmiBlitz3.ab3@11514>   ADD.l d1,d2
0002822A <AmiBlitz3.ab3@11515>   CMP.l chipend,d2
0002822E <AmiBlitz3.ab3@11516>   BLT 'l102c
00028234 <AmiBlitz3.ab3@11517>   SUB.l chipsize,d1
0002823A <AmiBlitz3.ab3@11520>   CMP.l bssend,d2
0002823E <AmiBlitz3.ab3@11521>   BLT 'l101c
00028244 <AmiBlitz3.ab3@11522>   SUB.l bsssize,d1
00028246 <AmiBlitz3.ab3@11525>   MOVE.l d1,(a1)
00028248 <AmiBlitz3.ab3@11526>   SUB.l D4,(A1)+
0002824A <AmiBlitz3.ab3@11529>   MOVEA.l (A2),A2
0002824E <AmiBlitz3.ab3@11530>  BRA.w 'oloopb
00028250 <AmiBlitz3.ab3@11533>   MOVE.l D7,D1
00028256 <AmiBlitz3.ab3@11534>   MOVEA.l _dosbase,A6
00028260 <AmiBlitz3.ab3@11535>   MOVE.l hunkoffsetnum,tstsize3
00028264 <AmiBlitz3.ab3@11536>   BEQ 'ln1c
0002826A <AmiBlitz3.ab3@11537>   MOVE.l #tstend+4,d2
0002826C <AmiBlitz3.ab3@11538>     MOVEQ #8,d3
00028270 <AmiBlitz3.ab3@11539>    JSR _Write(A6)
00028272 <AmiBlitz3.ab3@11540>   MOVE.l d7,d1
00028278 <AmiBlitz3.ab3@11541>   MOVE.l hunkoffsetnum,d3
0002827A <AmiBlitz3.ab3@11542>   ASL.l #2,d3
0002827C <AmiBlitz3.ab3@11543>   MOVE.l d5,D2
00028280 <AmiBlitz3.ab3@11544>   JSR _Write(a6)
00028286 <AmiBlitz3.ab3@11547>   TST.b newhunk
0002828A <AmiBlitz3.ab3@11548>   BEQ 'l10c
00028290 <AmiBlitz3.ab3@11549>   MOVEA.l hunkoffsetbase,A2
00028292 <AmiBlitz3.ab3@11550>   MOVE.l d5,a0
00028294 <AmiBlitz3.ab3@11551>   ADDQ #8,a0
0002829C <AmiBlitz3.ab3@11552>   MOVE.l bssnum,-4(a0)
0002829E <AmiBlitz3.ab3@11553>   MOVEQ #0,d6
000282A2 <AmiBlitz3.ab3@11556>   CMPA.w #$0,A2
000282A6 <AmiBlitz3.ab3@11557>    BEQ.w 'lh3c
000282AC <AmiBlitz3.ab3@11558>   MOVE.l destbufferstart,D2
000282B2 <AmiBlitz3.ab3@11559>   ADD.l noinits,D2
000282B6 <AmiBlitz3.ab3@11560>   MOVE.l  $4(A2),d1
000282BA <AmiBlitz3.ab3@11561>   BTST #30,d1
000282BE <AmiBlitz3.ab3@11562>   BEQ 'lh1c
000282C2 <AmiBlitz3.ab3@11563>   BCLR #30,d1
000282C4 <AmiBlitz3.ab3@11564>   MOVE.l d1,(a0)
000282C6 <AmiBlitz3.ab3@11565>   SUB.l D4,(A0)+
000282C8 <AmiBlitz3.ab3@11566>   ADDQ.l #1,d6
000282CA <AmiBlitz3.ab3@11569>   MOVE.l (a2),a2
000282CE <AmiBlitz3.ab3@11570>  BRA 'lh2c
000282D0 <AmiBlitz3.ab3@11573>   TST.l d6
000282D4 <AmiBlitz3.ab3@11574>     BEQ 'lh10c
000282D6 <AmiBlitz3.ab3@11575>     MOVE.l d5,a0
000282D8 <AmiBlitz3.ab3@11576>     MOVE.l d6,(a0)
000282DA <AmiBlitz3.ab3@11577>     MOVE.l d7,d1
000282DC <AmiBlitz3.ab3@11578>     MOVE.l d5,d2
000282DE <AmiBlitz3.ab3@11579>     MOVE.l d6,d3
000282E0 <AmiBlitz3.ab3@11580>     ASL.l #2,d3
000282E2 <AmiBlitz3.ab3@11581>     ADDQ.l #8,d3
000282E6 <AmiBlitz3.ab3@11582>     BSR.w mywrite
000282EC <AmiBlitz3.ab3@11585>   MOVEA.l hunkoffsetbase,A2
000282EE <AmiBlitz3.ab3@11586>   MOVE.l d5,a0
000282F0 <AmiBlitz3.ab3@11587>   ADDQ #8,a0
000282F8 <AmiBlitz3.ab3@11588>   MOVE.l chipnum,-4(a0)
000282FA <AmiBlitz3.ab3@11589>   MOVEQ #0,d6
000282FE <AmiBlitz3.ab3@11592>   CMPA.w #$0,A2
00028302 <AmiBlitz3.ab3@11593>    BEQ.w 'lh30c
00028308 <AmiBlitz3.ab3@11594>   MOVE.l destbufferstart,D2
0002830E <AmiBlitz3.ab3@11595>   ADD.l noinits,D2
00028312 <AmiBlitz3.ab3@11596>   MOVE.l  $4(A2),d1
00028316 <AmiBlitz3.ab3@11597>   BTST #31,d1
0002831A <AmiBlitz3.ab3@11598>   BEQ 'lh11c
0002831E <AmiBlitz3.ab3@11599>   BCLR #31,d1
00028320 <AmiBlitz3.ab3@11600>   MOVE.l d1,(a0)
00028322 <AmiBlitz3.ab3@11601>   SUB.l D4,(A0)+
00028324 <AmiBlitz3.ab3@11602>   ADDQ.l #1,d6
00028326 <AmiBlitz3.ab3@11605>   MOVE.l (a2),a2
0002832A <AmiBlitz3.ab3@11606>  BRA 'lh20c
0002832C <AmiBlitz3.ab3@11609>   TST.l d6
00028330 <AmiBlitz3.ab3@11610>     BEQ 'l10c
00028332 <AmiBlitz3.ab3@11611>     MOVE.l d5,a0
00028334 <AmiBlitz3.ab3@11612>     MOVE.l d6,(a0)
00028336 <AmiBlitz3.ab3@11613>     MOVE.l d7,d1
00028338 <AmiBlitz3.ab3@11614>     MOVE.l d5,d2
0002833A <AmiBlitz3.ab3@11615>     MOVE.l d6,d3
0002833C <AmiBlitz3.ab3@11616>     ASL.l #2,d3
0002833E <AmiBlitz3.ab3@11617>     ADDQ.l #8,d3
00028342 <AmiBlitz3.ab3@11618>     BSR.w mywrite
00028348 <AmiBlitz3.ab3@11622>    MOVEA.l _execbase,A6
0002834E <AmiBlitz3.ab3@11623>    MOVE.l hunkoffsetcounter,d0
00028350 <AmiBlitz3.ab3@11624>    ASL.l #2,d0
00028356 <AmiBlitz3.ab3@11625>    ADD.l #12,d0
00028358 <AmiBlitz3.ab3@11626>    MOVE.l d5,a1
0002835C <AmiBlitz3.ab3@11627>    JSR _FreeMem(a6)
00028362 <AmiBlitz3.ab3@11628>    MOVEA.l _dosbase,A6
00028364 <AmiBlitz3.ab3@11629>    MOVE.l (a7)+,d5
00028368 <AmiBlitz3.ab3@11630>  BRA 'skip2
0002836E <AmiBlitz3.ab3@11634>   MOVEA.l hunkoffsetbase,A2
00028374 <AmiBlitz3.ab3@11635>   MOVE.l noinits,D4
00028378 <AmiBlitz3.ab3@11638>   CMPA.w #$0,A2                                            ;write hunkoffsets
0002837C <AmiBlitz3.ab3@11639>   BEQ.w 'skip2
00028380 <AmiBlitz3.ab3@11640>   LEA $4(A2),A1
00028382 <AmiBlitz3.ab3@11641>   SUB.l D4,(A1)
00028384 <AmiBlitz3.ab3@11642>   MOVE.l D7,D1
00028386 <AmiBlitz3.ab3@11643>   MOVE.l A1,D2
00028388 <AmiBlitz3.ab3@11644>   MOVEQ.l #$04,D3
0002838C <AmiBlitz3.ab3@11645>   BSR.w mywrite
00028390 <AmiBlitz3.ab3@11647>   ADD.l D4,$4(A2)
00028392 <AmiBlitz3.ab3@11648>   MOVEA.l (A2),A2
00028396 <AmiBlitz3.ab3@11649>  BRA.w 'loop
0002839C <AmiBlitz3.ab3@11652>   CLR.l tstsize3
0002839E <AmiBlitz3.ab3@11653>   MOVE.l D7,D1
000283A4 <AmiBlitz3.ab3@11654>   MOVE.l #tstsize3,D2
000283A6 <AmiBlitz3.ab3@11655>   MOVEQ.l #$04,D3
000283AA <AmiBlitz3.ab3@11656>    BSR.w mywrite
000283B2 <AmiBlitz3.ab3@11659>   BTST #$7,link_debuginfo
000283B6 <AmiBlitz3.ab3@11660>    BEQ.w 'nodebug
000283BC <AmiBlitz3.ab3@11662>   MOVE.l #sysdebug,D2                                      ;debughunks
000283BE <AmiBlitz3.ab3@11663>   MOVEQ.l #$04,D3
000283C0 <AmiBlitz3.ab3@11664>   MOVE.l D7,D1
000283C4 <AmiBlitz3.ab3@11665>    BSR.w mywrite
000283CA <AmiBlitz3.ab3@11667>   MOVEA.l labelbase,A2
000283CE <AmiBlitz3.ab3@11670>   CMPA.w #$0,A2
000283D2 <AmiBlitz3.ab3@11671>    BEQ.w 'dedone
000283D8 <AmiBlitz3.ab3@11672>   BTST #$0,$7(A2)
000283DC <AmiBlitz3.ab3@11673>    BEQ.w 'dedeb
000283E4 <AmiBlitz3.ab3@11674>   CMPI.l #$1,$4(A2)
000283E8 <AmiBlitz3.ab3@11677>   BRA.w 'denext                                            ;only addr labels
000283EA <AmiBlitz3.ab3@11681>   MOVEQ.l #$00,D4
000283EE <AmiBlitz3.ab3@11682>   MOVE.b $12(A2),D4
000283F2 <AmiBlitz3.ab3@11683>   SUBI.w #$13,D4
000283F4 <AmiBlitz3.ab3@11684>   ADDQ.w #2,D4
000283F8 <AmiBlitz3.ab3@11685>   ANDI.w #$FFFC,D4     ;long align
000283FA <AmiBlitz3.ab3@11686>   MOVE.l D4,D5
000283FC <AmiBlitz3.ab3@11687>   LSR.w #2,D5
00028402 <AmiBlitz3.ab3@11688>   MOVE.l D5,temp1
00028404 <AmiBlitz3.ab3@11689>   LSL.w #2,D5          ;#bytes
0002840A <AmiBlitz3.ab3@11691>   MOVE.l #temp1,a1
00028410 <AmiBlitz3.ab3@11695>   LEA debugstore,a0
00028412 <AmiBlitz3.ab3@11696>   MOVE.l (a1),(a0)+
00028414 <AmiBlitz3.ab3@11698>   MOVEQ.l #$04,D3
00028418 <AmiBlitz3.ab3@11702>   LEA $13(A2),A1
0002841A <AmiBlitz3.ab3@11704>   MOVE.l d4,d1
0002841C <AmiBlitz3.ab3@11705>   SUBQ.l #1,d1
0002841E <AmiBlitz3.ab3@11708>     MOVE.b (a1)+,d0
00028422 <AmiBlitz3.ab3@11709>     BEQ 'l21d
00028426 <AmiBlitz3.ab3@11710>     CMP.b #"'",d0                                            ; ' does reassembler/assembler not like, so replace
0002842A <AmiBlitz3.ab3@11711>     BNE 'ok
0002842E <AmiBlitz3.ab3@11712>     MOVE.b #"_",d0
00028430 <AmiBlitz3.ab3@11715>    MOVE.b d0,(a0)+                                      ; copy labeltext to debuginfo
00028434 <AmiBlitz3.ab3@11716>   DBF d1,'l10d
00028438 <AmiBlitz3.ab3@11718>   BRA 'l22d
0002843A <AmiBlitz3.ab3@11721>       CLR.b (a0)+
0002843E <AmiBlitz3.ab3@11722>   DBF d1,'l21d
00028440 <AmiBlitz3.ab3@11725>   ADD.l d4,d3
00028442 <AmiBlitz3.ab3@11732>   SUB.l D4,D5
00028446 <AmiBlitz3.ab3@11733>    BEQ.w 'deoff
0002844C <AmiBlitz3.ab3@11735>   MOVE.l #zero,a1
0002844E <AmiBlitz3.ab3@11739>   MOVE.l (a1),(a0)+
00028450 <AmiBlitz3.ab3@11743>   ADD.l d5,d3
00028454 <AmiBlitz3.ab3@11749>   MOVE.l $8(A2),D2
0002845A <AmiBlitz3.ab3@11750>   SUB.l destbufferstart,D2
00028460 <AmiBlitz3.ab3@11751>   SUB.l noinits,D2
00028466 <AmiBlitz3.ab3@11752>   MOVE.l D2,temp1
0002846C <AmiBlitz3.ab3@11754>   MOVE.l #temp1,a1
0002846E <AmiBlitz3.ab3@11758>   MOVE.l (a1),(a0)+
00028474 <AmiBlitz3.ab3@11759>   ADD.l #4,d3
0002847A <AmiBlitz3.ab3@11760>   LEA debugstore,a0
0002847C <AmiBlitz3.ab3@11761>   MOVE.l a0,d2
0002847E <AmiBlitz3.ab3@11764>   MOVE.l D7,D1
00028482 <AmiBlitz3.ab3@11765>   BSR.w mywrite
00028484 <AmiBlitz3.ab3@11768>   MOVEA.l (A2),A2
00028488 <AmiBlitz3.ab3@11769>  BRA.w 'deloop
0002848E <AmiBlitz3.ab3@11772>   MOVE.l #zero,D2
00028490 <AmiBlitz3.ab3@11773>   MOVEQ.l #$04,D3
00028492 <AmiBlitz3.ab3@11774>   MOVE.l D7,D1
00028496 <AmiBlitz3.ab3@11775>   BSR.w mywrite
00028498 <AmiBlitz3.ab3@11778>   MOVE.l D7,D1
0002849E <AmiBlitz3.ab3@11779>   MOVE.l #tstdone,D2                                      ;hunkend
000284A0 <AmiBlitz3.ab3@11780>   MOVEQ.l #$04,D3
000284AA <AmiBlitz3.ab3@11782>   CMPI.l #-1,bssstart
000284AE <AmiBlitz3.ab3@11783>   BEQ 'l10e
000284B0 <AmiBlitz3.ab3@11784>   MOVEQ #16,d3
000284B6 <AmiBlitz3.ab3@11785>   MOVE.l #hunkend,d2
000284C0 <AmiBlitz3.ab3@11786>   CMPI.l #-1,chipstart
000284C4 <AmiBlitz3.ab3@11787>   BEQ 'l10e
000284C6 <AmiBlitz3.ab3@11788>   MOVE.l d7,d1
000284C8 <AmiBlitz3.ab3@11789>   MOVEQ #12,d3
000284CC <AmiBlitz3.ab3@11790>   BSR.w mywrite
000284D6 <AmiBlitz3.ab3@11793>   CMPI.l #-1,chipstart
000284DA <AmiBlitz3.ab3@11794>   BEQ 'l11e
000284DC <AmiBlitz3.ab3@11795>   MOVEQ #12,d3
000284E2 <AmiBlitz3.ab3@11796>   MOVE.l #hunkend2,d2
000284E4 <AmiBlitz3.ab3@11797>   MOVE.l d7,d1
000284E8 <AmiBlitz3.ab3@11798>   BSR.w mywrite
000284EA <AmiBlitz3.ab3@11799>   MOVE.l d7,d1
000284F0 <AmiBlitz3.ab3@11800>   MOVE.l chipstart,d2
000284F6 <AmiBlitz3.ab3@11801>   MOVE.l chipsize,d3
000284FA <AmiBlitz3.ab3@11802>   BSR.w mywrite
000284FC <AmiBlitz3.ab3@11803>   MOVEQ #4,d3
00028502 <AmiBlitz3.ab3@11804>   MOVE.l #hunkend,d2
00028504 <AmiBlitz3.ab3@11805>   MOVE.l d7,d1
00028508 <AmiBlitz3.ab3@11809>   BSR.w mywrite
0002850A <AmiBlitz3.ab3@11810>   MOVE.l D7,D1
00028510 <AmiBlitz3.ab3@11811>   MOVEA.l _dosbase,A6
00028514 <AmiBlitz3.ab3@11812>   JSR _Close(A6)
0002851C <AmiBlitz3.ab3@11817>   BTST #$7,create_iconfile
00028520 <AmiBlitz3.ab3@11818>    BEQ.w 'done
00028526 <AmiBlitz3.ab3@11822>   MOVEA.l ptr_newexefilename,A0
00028528 <AmiBlitz3.ab3@11825>     TST.b (A0)+
0002852C <AmiBlitz3.ab3@11826>   BNE.w 'iloop
0002852E <AmiBlitz3.ab3@11827>   SUBQ.w #1,A0
00028530 <AmiBlitz3.ab3@11828>   MOVE.l A0,-(A7)        ;to later null out!
00028536 <AmiBlitz3.ab3@11829>   LEA str_infoextention2,A1
00028538 <AmiBlitz3.ab3@11832>     MOVE.b (A1)+,(A0)+
0002853C <AmiBlitz3.ab3@11833>   BNE.w 'iloop2
00028542 <AmiBlitz3.ab3@11835>   MOVE.l ptr_newexefilename,D1
00028544 <AmiBlitz3.ab3@11836>   MOVEQ.l #-$02,D2
0002854A <AmiBlitz3.ab3@11837>   MOVEA.l _dosbase,A6
0002854E <AmiBlitz3.ab3@11838>   JSR _Lock(A6)
00028550 <AmiBlitz3.ab3@11839>   MOVE.l D0,D1
00028554 <AmiBlitz3.ab3@11840>   BEQ.w 'dildo      ;not exist                                    ;no icon exit so jump to create one  tomsmart1
00028558 <AmiBlitz3.ab3@11841>   JSR _UnLock(A6)                                          ;OH!! there is a Icon so we must Unlock it  tomsmart1
0002855C <AmiBlitz3.ab3@11842>  BRA.w 'ifail                                            ;and skip writing a Icon  tomsmart1
00028562 <AmiBlitz3.ab3@11845>   MOVE.l ptr_newexefilename,D1
00028568 <AmiBlitz3.ab3@11846>   MOVE.l #HUNK_RELOC_8__MODE_NEWFILE,D2
0002856E <AmiBlitz3.ab3@11847>   MOVEA.l _dosbase,A6
00028572 <AmiBlitz3.ab3@11848>    JSR _Open(A6)
00028574 <AmiBlitz3.ab3@11849>   MOVE.l D0,D7
00028578 <AmiBlitz3.ab3@11850>    BEQ.w 'ifail
0002857E <AmiBlitz3.ab3@11851>   MOVE.l #icongfx_data,D2                                  ; icon graphics
00028584 <AmiBlitz3.ab3@11852>   MOVE.l #icongfx_data_end-icongfx_data,D3                 ; length of gfx-data
00028586 <AmiBlitz3.ab3@11853>   MOVE.l D7,D1
0002858C <AmiBlitz3.ab3@11854>   MOVEA.l _dosbase,A6
00028590 <AmiBlitz3.ab3@11855>   JSR _Write(A6)
00028592 <AmiBlitz3.ab3@11856>   MOVE.l D7,D1
00028596 <AmiBlitz3.ab3@11857>   JSR _Close(A6)
00028598 <AmiBlitz3.ab3@11860>   MOVEA.l (A7)+,A0
0002859A <AmiBlitz3.ab3@11861>   CLR.b (A0)
000285A0 <AmiBlitz3.ab3@11867>   TST.b exdebug
000285A4 <AmiBlitz3.ab3@11868>    BEQ 'fixdoneb
000285AA <AmiBlitz3.ab3@11869>   MOVE.w dontwrite_nomemleft,D1
000285AE <AmiBlitz3.ab3@11870>   BNE.w 'fixdoneb
000285B4 <AmiBlitz3.ab3@11871>   MOVE.l chipsize,d5
000285BA <AmiBlitz3.ab3@11872>   MOVE.l bsssize,d3
000285C0 <AmiBlitz3.ab3@11873>   MOVE.l chipstart,d7
000285C6 <AmiBlitz3.ab3@11874>   MOVE.l bssstart,d6
000285CC <AmiBlitz3.ab3@11875>   MOVEA.l hunkoffsetbase,A2
000285D2 <AmiBlitz3.ab3@11876>   MOVEA.l destbufferstart,A1
000285D4 <AmiBlitz3.ab3@11877>   MOVE.l A1,D2
000285DA <AmiBlitz3.ab3@11878>   ADD.l noinits,D2
000285E0 <AmiBlitz3.ab3@11879>   CLR.l hunkoffsetnum
000285E4 <AmiBlitz3.ab3@11882>   CMPA.w #$0,A2
000285E8 <AmiBlitz3.ab3@11883>    BEQ.w 'fixdoneb
000285EC <AmiBlitz3.ab3@11884>   MOVE.l $4(A2),D0
000285F0 <AmiBlitz3.ab3@11885>    LEA $0(a1,d0.l),a0
000285F2 <AmiBlitz3.ab3@11886>    MOVE.l (a0),d1
000285F4 <AmiBlitz3.ab3@11887>   TST.l d1
000285F8 <AmiBlitz3.ab3@11888>    BMI.w 'lm1f
00028600 <AmiBlitz3.ab3@11889>   MOVE.b #0,newhunk
0002860A <AmiBlitz3.ab3@11890>   CMP.l #-1,chipstart
0002860E <AmiBlitz3.ab3@11891>   BEQ 'l10f
00028614 <AmiBlitz3.ab3@11892>   CMP.l chipstart,d1
00028618 <AmiBlitz3.ab3@11893>   BLT 'l10f
00028620 <AmiBlitz3.ab3@11894>   MOVE.b #1,newhunk
00028626 <AmiBlitz3.ab3@11895>   CMP.l chipend,d1
0002862A <AmiBlitz3.ab3@11896>   BGE 'l110f
0002862C <AmiBlitz3.ab3@11897>   ADD.l d7,(a0)
00028634 <AmiBlitz3.ab3@11898>   ADD.l #$80000000,4(a2)
00028638 <AmiBlitz3.ab3@11899>  BRA 'nowayb
0002863C <AmiBlitz3.ab3@11902>   ADD.l d5,0(a0)
00028646 <AmiBlitz3.ab3@11905>   CMP.l #-1,bssstart
0002864A <AmiBlitz3.ab3@11906>     BEQ 'l11f
00028650 <AmiBlitz3.ab3@11907>   CMP.l bssstart,d1
00028654 <AmiBlitz3.ab3@11908>   BLT 'l11f
0002865A <AmiBlitz3.ab3@11909>   CMP.l bssend,d1
0002865E <AmiBlitz3.ab3@11910>   BGE 'l111f
00028664 <AmiBlitz3.ab3@11911>   TST.b newhunk
00028668 <AmiBlitz3.ab3@11912>   BEQ 'ln1f
0002866A <AmiBlitz3.ab3@11913>   ADD.l d5,(a0)
0002866C <AmiBlitz3.ab3@11916>   ADD.l d6,(a0)
00028674 <AmiBlitz3.ab3@11917>   ADD.l #$40000000,4(a2)
00028678 <AmiBlitz3.ab3@11918>  BRA 'nowayb
0002867C <AmiBlitz3.ab3@11921>   ADD.l d3,0(a0)
0002867E <AmiBlitz3.ab3@11924>   ADD.l D2,(A0)                                            ;only normal code offsets restore
00028684 <AmiBlitz3.ab3@11927>   ADDQ.l #1,hunkoffsetnum
00028686 <AmiBlitz3.ab3@11930>   MOVEA.l (A2),A2
0002868A <AmiBlitz3.ab3@11931>  BRA.w 'loop0b
00028690 <AmiBlitz3.ab3@11935>   JSR call_setpointernormal
00028694 <AmiBlitz3.ab3@11936>   MOVEM.l (a7)+,d2-d7/a2-a6
00028696 <AmiBlitz3.ab3@11939> RTS
00028698 <AmiBlitz3.ab3@11945>   MOVE.l D2,-(A7)
0002869E <AmiBlitz3.ab3@11946>   MOVE.l destpointer,D2
000286A4 <AmiBlitz3.ab3@11947>   SUB.l destbufferstart,D2
000286A8 <AmiBlitz3.ab3@11948>   BSR.w addhunkoffset
000286AA <AmiBlitz3.ab3@11949>   MOVE.l (A7)+,D2
000286AC <AmiBlitz3.ab3@11950> RTS
000286B0 <AmiBlitz3.ab3@11956>   MOVEM.l D0-D1/A0-A1/A6,-(A7)
000286B6 <AmiBlitz3.ab3@11958>   TST.b nohunkoffset
000286BA <AmiBlitz3.ab3@11959>   BNE 'l10
000286BC <AmiBlitz3.ab3@11961>   MOVEQ.l #$8,D0
000286BE <AmiBlitz3.ab3@11962>   MOVEQ.l #$01,D1
000286C4 <AmiBlitz3.ab3@11963>   MOVEA.l _execbase,A6
000286CA <AmiBlitz3.ab3@11965>   MOVE.l mempool2,a0
000286CE <AmiBlitz3.ab3@11966>   JSR _AllocPooled(a6)
000286D4 <AmiBlitz3.ab3@11970>   ADDQ.l #1,hunkoffsetcounter
000286D6 <AmiBlitz3.ab3@11971>   MOVEA.l D0,A0
000286DC <AmiBlitz3.ab3@11972>   MOVE.l hunkoffsetbase,(A0)
000286E2 <AmiBlitz3.ab3@11973>   MOVE.l A0,hunkoffsetbase
000286E6 <AmiBlitz3.ab3@11974>   MOVE.l D2,$4(A0)
000286EA <AmiBlitz3.ab3@11979>   MOVEM.l (A7)+,D0-D1/A0-A1/A6
000286EC <AmiBlitz3.ab3@11980> RTS
000286F2 <AmiBlitz3.ab3@11986>   CLR.l hunkoffsetbase
000286F8 <AmiBlitz3.ab3@11987>   MOVEA.l _execbase,A6
000286FE <AmiBlitz3.ab3@11988>   MOVEA.l hunkoffsetbase,A2
00028702 <AmiBlitz3.ab3@11991>     CMPA.w #$0,A2
00028706 <AmiBlitz3.ab3@11992>      BEQ.w 'skip
00028708 <AmiBlitz3.ab3@11993>     MOVEA.l A2,A1
0002870A <AmiBlitz3.ab3@11994>     MOVEQ.l #$08,D0
0002870C <AmiBlitz3.ab3@11995>     MOVEA.l (A2),A2
00028712 <AmiBlitz3.ab3@11997>     MOVE.l mempool2,a0
00028716 <AmiBlitz3.ab3@11998>     JSR _FreePooled(A6)
0002871A <AmiBlitz3.ab3@12001>  BRA.w 'loop
00028720 <AmiBlitz3.ab3@12004>   CLR.l hunkoffsetcounter
00028722 <AmiBlitz3.ab3@12005> RTS
0002873A <AmiBlitz3.ab3@12008> cmakebuff:  Ds.l 6                                          ;dc.w 12 org source
0002873E <AmiBlitz3.ab3@12009> cmakea5:    Ds.l 1
00028740 <AmiBlitz3.ab3@12010> cmake:      Ds.w 1
000287C0 <AmiBlitz3.ab3@12011> cmakebak:   Ds.l 32                                         ;ds.b 128 org source
000287C6 <AmiBlitz3.ab3@12015>   MOVE.l A5,lastsourcepos
000287D0 <AmiBlitz3.ab3@12016>   MOVE.w instringon,oldqflag
000287D2 <AmiBlitz3.ab3@12019>   MOVEQ.l #$00,D0
000287D4 <AmiBlitz3.ab3@12020>   MOVE.b (A5)+,D0
000287D8 <AmiBlitz3.ab3@12021>    BEQ 'donea
000287DC <AmiBlitz3.ab3@12022>   BPL 'stuffa
000287DE <AmiBlitz3.ab3@12023>   LSL.l #8,D0
000287E0 <AmiBlitz3.ab3@12024>   MOVE.b (A5)+,D0
000287E2 <AmiBlitz3.ab3@12025>   MOVE.l a1,-(a7)
000287E8 <AmiBlitz3.ab3@12026>   LEA replacedat,a1
000287EC <AmiBlitz3.ab3@12027>   Dc.w $4a71,$0a00                                         ;TST.w 0(a1,d0.l*2)
000287F0 <AmiBlitz3.ab3@12028>   BEQ 'l10
000287F4 <AmiBlitz3.ab3@12029>   Dc.w $3031,$0a00                                         ;MOVE.w 0(a1,d0.l*2),d0
000287F6 <AmiBlitz3.ab3@12033>   MOVE.l (a7)+,a1
000287FA <AmiBlitz3.ab3@12034>  BRA 'weiter
000287FE <AmiBlitz3.ab3@12037>   CMP.w #$22,D0
00028802 <AmiBlitz3.ab3@12038>    BEQ.b 'swapquotea
00028806 <AmiBlitz3.ab3@12039>   CMP.w #$3B,D0
0002880A <AmiBlitz3.ab3@12040>    BNE.b 'donea
00028810 <AmiBlitz3.ab3@12041>   TST.w instringon
00028814 <AmiBlitz3.ab3@12042>    BNE.b 'donea
00028816 <AmiBlitz3.ab3@12045>   MOVE.b (A5)+,D0
0002881A <AmiBlitz3.ab3@12046>              BEQ 'l1
0002881E <AmiBlitz3.ab3@12047>              CMP.b #":",d0
00028822 <AmiBlitz3.ab3@12048>              BNE 'loopa                                ;:@
00028826 <AmiBlitz3.ab3@12049>              CMP.b #"@",(a5)
0002882A <AmiBlitz3.ab3@12050>              BNE 'loopa
0002882C <AmiBlitz3.ab3@12051>              ADDQ #1,a5
00028832 <AmiBlitz3.ab3@12054>   MOVE.w D0,lastchar
00028836 <AmiBlitz3.ab3@12057>  BRA.s 'weiter
0002883C <AmiBlitz3.ab3@12060>   NOT.w instringon
00028842 <AmiBlitz3.ab3@12063>    MOVE.w D0,lastchar
00028846 <AmiBlitz3.ab3@12064>    BEQ.w 'done
0002884A <AmiBlitz3.ab3@12065>    BPL.w 'done2
0002884E <AmiBlitz3.ab3@12066>   CMP.w #-$7FE4,D0                                         ;cnif
00028852 <AmiBlitz3.ab3@12067>    BEQ.w 'cnif
00028856 <AmiBlitz3.ab3@12068>   CMP.w #-$7FE3,D0                                         ;csif
0002885A <AmiBlitz3.ab3@12069>    BEQ.w 'csif
0002885E <AmiBlitz3.ab3@12070>   CMP.w #-$7FE2,D0                                         ;celse
00028862 <AmiBlitz3.ab3@12071>    BEQ.w 'celse
00028866 <AmiBlitz3.ab3@12072>   CMP.w #-$7FE1,D0                                         ;cend
0002886A <AmiBlitz3.ab3@12073>    BEQ.w 'cend
00028870 <AmiBlitz3.ab3@12076>   TST.w skipcode
00028874 <AmiBlitz3.ab3@12077>    BEQ.w getchar
00028878 <AmiBlitz3.ab3@12078>   CMP.w #$7E,D0
0002887C <AmiBlitz3.ab3@12079>    BEQ.w 'cmake                                            ;tilde
00028880 <AmiBlitz3.ab3@12080>   CMP.w #$2,D0
00028884 <AmiBlitz3.ab3@12081>    BNE.w 'notunpath
0002888A <AmiBlitz3.ab3@12082>   MOVEA.l usedfrom,A5
00028890 <AmiBlitz3.ab3@12083>   CLR.l usedfrom
00028894 <AmiBlitz3.ab3@12084>  BRA.w getchar
00028898 <AmiBlitz3.ab3@12087>   CMP.w #$1,D0
0002889C <AmiBlitz3.ab3@12088>    BNE.w 'done
000288A0 <AmiBlitz3.ab3@12092>   MOVEA.l cmakea5(PC),A5
000288A4 <AmiBlitz3.ab3@12093>  BRA.w getchar
000288AA <AmiBlitz3.ab3@12096>   TST.w cmake
000288AE <AmiBlitz3.ab3@12097>    BNE.w 'done
000288B2 <AmiBlitz3.ab3@12099>   MOVEM.l D0-D7/A0-A6,-(A7)
000288B8 <AmiBlitz3.ab3@12100>   LEA cmake,a0                                            ;reass
000288BA <AmiBlitz3.ab3@12101>   NOT.w (a0)
000288BE <AmiBlitz3.ab3@12102>   LEA cmakebak(PC),A0
000288C4 <AmiBlitz3.ab3@12103>   LEA ptr_parameterstore,A1
000288C6 <AmiBlitz3.ab3@12104>   MOVEQ.l #$1F,D0
000288C8 <AmiBlitz3.ab3@12107>     MOVE.l (A1)+,(A0)+
000288CC <AmiBlitz3.ab3@12108>   DBF D0,'cmloop
000288D2 <AmiBlitz3.ab3@12111>    JSR evalconst3
000288D6 <AmiBlitz3.ab3@12112>   CMP.w #$7E,D0
000288DA <AmiBlitz3.ab3@12113>    BNE.w syntaxerr
000288E0 <AmiBlitz3.ab3@12114>   MOVE.l A5,cmakea5                                      ;tilde
000288E4 <AmiBlitz3.ab3@12115>   LEA cmakebuff(PC),A0
000288E6 <AmiBlitz3.ab3@12116>   MOVE.l D3,D2
000288EA <AmiBlitz3.ab3@12117>   BSR.w makelong
000288EC <AmiBlitz3.ab3@12118>   ADDQ.b #1,(A0)
000288F2 <AmiBlitz3.ab3@12119>   LEA cmake,a0
000288F4 <AmiBlitz3.ab3@12120>   NOT.w (a0)                                               ;reass
000288F8 <AmiBlitz3.ab3@12121>   LEA cmakebak(PC),A0
000288FE <AmiBlitz3.ab3@12122>   LEA ptr_parameterstore,A1
00028900 <AmiBlitz3.ab3@12123>   MOVEQ.l #$1F,D0
00028902 <AmiBlitz3.ab3@12126>     MOVE.l (A0)+,(A1)+
00028906 <AmiBlitz3.ab3@12127>   DBF D0,'cmloop2
0002890A <AmiBlitz3.ab3@12129>   MOVEM.l (A7)+,D0-D7/A0-A6
0002890E <AmiBlitz3.ab3@12130>   LEA cmakebuff(PC),A5
00028912 <AmiBlitz3.ab3@12131>  BRA.w getchar
00028914 <AmiBlitz3.ab3@12134>  RTS
0002891E <AmiBlitz3.ab3@12137>   MOVE.l linenumat,ciflineat                               ;csif
00028924 <AmiBlitz3.ab3@12138>   TST.w skipcode
00028928 <AmiBlitz3.ab3@12139>    BEQ.w 'incnest
0002892C <AmiBlitz3.ab3@12140>    BSR.w get1bytemain
0002892E <AmiBlitz3.ab3@12141>    MOVE.l a1,-(a7)
00028934 <AmiBlitz3.ab3@12142>    JSR do_csif
00028936 <AmiBlitz3.ab3@12143>    MOVE.l (a7)+,a1
0002893A <AmiBlitz3.ab3@12144>  BRA.w getchar
00028944 <AmiBlitz3.ab3@12147>   MOVE.l linenumat,ciflineat                               ;cnif
0002894A <AmiBlitz3.ab3@12148>   TST.w skipcode
0002894E <AmiBlitz3.ab3@12149>    BEQ.w 'incnest
00028952 <AmiBlitz3.ab3@12150>    BSR.w get1bytemain
00028956 <AmiBlitz3.ab3@12151>    CMP.b #"@",d0
0002895A <AmiBlitz3.ab3@12152>    BNE 'cnif_ok2
0002895E <AmiBlitz3.ab3@12153>    BSR.w get1bytemain
00028966 <AmiBlitz3.ab3@12154>    MOVE.b #1,incnif
0002896C <AmiBlitz3.ab3@12155>    JSR findconstant2
00028970 <AmiBlitz3.ab3@12156>    BEQ 'cnif_ok2
00028976 <AmiBlitz3.ab3@12159>    MOVE.w fast,-(a7)
0002897C <AmiBlitz3.ab3@12160>    CLR.b fast
0002897E <AmiBlitz3.ab3@12161>    MOVE.l a1,-(a7)
00028984 <AmiBlitz3.ab3@12162>    JSR do_cnif
0002898A <AmiBlitz3.ab3@12163>    CLR.b incnif
0002898C <AmiBlitz3.ab3@12164>    MOVE.l (a7)+,a1
00028992 <AmiBlitz3.ab3@12165>    MOVE.w (a7)+,fast
00028996 <AmiBlitz3.ab3@12166>  BRA.w getchar
0002899C <AmiBlitz3.ab3@12169>   ADDQ.w #1,connest
000289A0 <AmiBlitz3.ab3@12170>  BRA.w getchar
000289A6 <AmiBlitz3.ab3@12173>   MOVE.w connest,D0                                      ;celse
000289AA <AmiBlitz3.ab3@12174>    BNE.w getchar
000289B0 <AmiBlitz3.ab3@12175>   NOT.w skipcode
000289B4 <AmiBlitz3.ab3@12176>  BRA.w getchar
000289BA <AmiBlitz3.ab3@12179>   SUBQ.w #1,connest                                      ;cend
000289BE <AmiBlitz3.ab3@12180>    BPL.w getchar
000289C4 <AmiBlitz3.ab3@12181>   ADDQ.w #1,connest
000289CA <AmiBlitz3.ab3@12182>   MOVEA.l concomsp,A0
000289D0 <AmiBlitz3.ab3@12183>   CMPA.l #concomstack,A0
000289D4 <AmiBlitz3.ab3@12184>    BEQ.w nociferr
000289D6 <AmiBlitz3.ab3@12185>   SUBQ.w #2,A0
000289DC <AmiBlitz3.ab3@12186>   MOVE.l A0,concomsp
000289E2 <AmiBlitz3.ab3@12187>   MOVE.w (A0),skipcode
000289E6 <AmiBlitz3.ab3@12188> BRA.w getchar
000289EA <AmiBlitz3.ab3@12191> ciflineat:   Ds.l 1
000289EC <AmiBlitz3.ab3@12199>   MOVEQ.l #$00,D0
000289EE <AmiBlitz3.ab3@12200>   MOVE.b (A5)+,D0
000289F2 <AmiBlitz3.ab3@12201>    BEQ.b 'done
000289F6 <AmiBlitz3.ab3@12202>    BPL.b 'stuff
000289F8 <AmiBlitz3.ab3@12203>   LSL.w #8,D0
000289FA <AmiBlitz3.ab3@12204>   MOVE.b (A5)+,D0
000289FC <AmiBlitz3.ab3@12205>  RTS
00028A00 <AmiBlitz3.ab3@12208>   CMP.w #$22,D0
00028A04 <AmiBlitz3.ab3@12209>    BEQ.b 'swapquote
00028A08 <AmiBlitz3.ab3@12210>   CMP.w #$3B,D0
00028A0C <AmiBlitz3.ab3@12211>    BNE.b 'done
00028A12 <AmiBlitz3.ab3@12212>   TST.w instringon
00028A16 <AmiBlitz3.ab3@12213>    BNE.b 'done
00028A18 <AmiBlitz3.ab3@12216>   MOVE.b (A5)+,D0
00028A1C <AmiBlitz3.ab3@12217>             BEQ 'loop_l1
00028A20 <AmiBlitz3.ab3@12218>             CMP.b #":",d0
00028A24 <AmiBlitz3.ab3@12219>             BNE 'loop
00028A28 <AmiBlitz3.ab3@12220>             CMP.b #"@",(a5)
00028A2C <AmiBlitz3.ab3@12221>             BNE 'loop
00028A32 <AmiBlitz3.ab3@12224>   MOVE.w D0,lastchar
00028A34 <AmiBlitz3.ab3@12227>  RTS
00028A3A <AmiBlitz3.ab3@12230>   NOT.w instringon
00028A3C <AmiBlitz3.ab3@12231> RTS
00028A40 <AmiBlitz3.ab3@12235>   BSR.w getchar
00028A46 <AmiBlitz3.ab3@12236>   TST.w instringon
00028A4A <AmiBlitz3.ab3@12237>    BNE.w 'skip
00028A4E <AmiBlitz3.ab3@12238>   CMP.w #$20,D0        ;' '
00028A52 <AmiBlitz3.ab3@12239>    BEQ.w get1byte_
00028A54 <AmiBlitz3.ab3@12242> RTS
00028A6E <AmiBlitz3.ab3@12245> gs:        Ds.w 13                                         ;ds.b 26  org source
00028A72 <AmiBlitz3.ab3@12246>            Dc.b $F6,$E4,$FC,$D6                            ;dc.b 228,246,252,196,214,220 org source
00028A74 <AmiBlitz3.ab3@12247>            Dc.b $C4,$DC
00028A78 <AmiBlitz3.ab3@12254>   BSR.w getchar
00028A7E <AmiBlitz3.ab3@12255>   TST.w instringon
00028A82 <AmiBlitz3.ab3@12256>    BNE.w gchar2
00028A86 <AmiBlitz3.ab3@12257>   CMP.w #$20,D0
00028A8A <AmiBlitz3.ab3@12258>    BEQ.w get1bytemain
00028A8C <AmiBlitz3.ab3@12260>   TST.w D0
00028A90 <AmiBlitz3.ab3@12263>   BEQ.b 'zero
00028A96 <AmiBlitz3.ab3@12264>   TST.w instringon
00028A9A <AmiBlitz3.ab3@12265>    BEQ.b 'noqoute
00028A9E <AmiBlitz3.ab3@12266>   CMP.b #$20,D0           ;' '
00028AA2 <AmiBlitz3.ab3@12267>    BCC.b 'skip
00028AA6 <AmiBlitz3.ab3@12268>   MOVE.b gs(PC,D0.W),D0
00028AA8 <AmiBlitz3.ab3@12269>  RTS
00028AAC <AmiBlitz3.ab3@12272>   CMP.w #-$7FDE,D0                                         ;cmp #$8000+34,d0 org source  ;else
00028AB0 <AmiBlitz3.ab3@12273>    BEQ.b 'zero
00028AB4 <AmiBlitz3.ab3@12274>   CMP.w #$3A,D0           ;':'
00028AB8 <AmiBlitz3.ab3@12275>    BEQ.b 'zero
00028ABA <AmiBlitz3.ab3@12278>   TST.w D0
00028ABC <AmiBlitz3.ab3@12281> RTS
00028AC2 <AmiBlitz3.ab3@12285>   MOVE.w lastchar,D0
00028AC6 <AmiBlitz3.ab3@12286> BRA.w gchar2
00028AD0 <AmiBlitz3.ab3@12290>   MOVE.w oldqflag,instringon
00028AD6 <AmiBlitz3.ab3@12291>   MOVEA.l lastsourcepos,A5
00028AD8 <AmiBlitz3.ab3@12292> RTS
00028ADE <AmiBlitz3.ab3@12296>   MOVE.w D0,locchar
00028AE4 <AmiBlitz3.ab3@12297>   MOVE.l A5,locloc
00028AE6 <AmiBlitz3.ab3@12298> RTS
00028AEC <AmiBlitz3.ab3@12302>   MOVEA.l locloc,A5
00028AF2 <AmiBlitz3.ab3@12303>   MOVE.w locchar,D0
00028AF8 <AmiBlitz3.ab3@12304>   MOVE.w D0,lastchar
00028AFA <AmiBlitz3.ab3@12305> RTS
00028AFA <internal_errormsg.ab3@1> XINCLUDE "internal_errormsg.ab3"
00028B42 <internal_errormsg.ab3@9> XINCLUDE "internal_errormsg.ab3"
00028B94 <internal_errormsg.ab3@10> XINCLUDE "internal_errormsg.ab3"
00028BD2 <internal_errormsg.ab3@11> XINCLUDE "internal_errormsg.ab3"
00028C10 <internal_errormsg.ab3@12> XINCLUDE "internal_errormsg.ab3"
00028C3A <internal_errormsg.ab3@13> XINCLUDE "internal_errormsg.ab3"
00028C6A <internal_errormsg.ab3@14> XINCLUDE "internal_errormsg.ab3"
00028CB4 <internal_errormsg.ab3@15> XINCLUDE "internal_errormsg.ab3"
00028D3A <internal_errormsg.ab3@16> XINCLUDE "internal_errormsg.ab3"
00028D9C <internal_errormsg.ab3@17> XINCLUDE "internal_errormsg.ab3"
00028DE4 <internal_errormsg.ab3@18> XINCLUDE "internal_errormsg.ab3"
00028E36 <internal_errormsg.ab3@19> XINCLUDE "internal_errormsg.ab3"
00028E98 <internal_errormsg.ab3@20> XINCLUDE "internal_errormsg.ab3"
00028EE6 <internal_errormsg.ab3@21> XINCLUDE "internal_errormsg.ab3"
00028F1C <internal_errormsg.ab3@22> XINCLUDE "internal_errormsg.ab3"
00028F4A <internal_errormsg.ab3@23> XINCLUDE "internal_errormsg.ab3"
00028F64 <internal_errormsg.ab3@24> XINCLUDE "internal_errormsg.ab3"
00028F82 <internal_errormsg.ab3@25> XINCLUDE "internal_errormsg.ab3"
00029000 <internal_errormsg.ab3@26> XINCLUDE "internal_errormsg.ab3"
0002902A <internal_errormsg.ab3@27> XINCLUDE "internal_errormsg.ab3"
00029050 <internal_errormsg.ab3@28> XINCLUDE "internal_errormsg.ab3"
00029070 <internal_errormsg.ab3@29> XINCLUDE "internal_errormsg.ab3"
0002908E <internal_errormsg.ab3@30> XINCLUDE "internal_errormsg.ab3"
000290AE <internal_errormsg.ab3@31> XINCLUDE "internal_errormsg.ab3"
000290D6 <internal_errormsg.ab3@32> XINCLUDE "internal_errormsg.ab3"
00029100 <internal_errormsg.ab3@33> XINCLUDE "internal_errormsg.ab3"
0002911C <internal_errormsg.ab3@34> XINCLUDE "internal_errormsg.ab3"
00029142 <internal_errormsg.ab3@35> XINCLUDE "internal_errormsg.ab3"
0002915A <internal_errormsg.ab3@36> XINCLUDE "internal_errormsg.ab3"
000291B8 <internal_errormsg.ab3@37> XINCLUDE "internal_errormsg.ab3"
000291DA <internal_errormsg.ab3@38> XINCLUDE "internal_errormsg.ab3"
00029200 <internal_errormsg.ab3@39> XINCLUDE "internal_errormsg.ab3"
00029228 <internal_errormsg.ab3@40> XINCLUDE "internal_errormsg.ab3"
00029248 <internal_errormsg.ab3@41> XINCLUDE "internal_errormsg.ab3"
0002926C <internal_errormsg.ab3@42> XINCLUDE "internal_errormsg.ab3"
000292B2 <internal_errormsg.ab3@43> XINCLUDE "internal_errormsg.ab3"
000292D6 <internal_errormsg.ab3@44> XINCLUDE "internal_errormsg.ab3"
000292FA <internal_errormsg.ab3@45> XINCLUDE "internal_errormsg.ab3"
0002931A <internal_errormsg.ab3@46> XINCLUDE "internal_errormsg.ab3"
0002933E <internal_errormsg.ab3@47> XINCLUDE "internal_errormsg.ab3"
00029360 <internal_errormsg.ab3@48> XINCLUDE "internal_errormsg.ab3"
0002938C <internal_errormsg.ab3@49> XINCLUDE "internal_errormsg.ab3"
000293B2 <internal_errormsg.ab3@50> XINCLUDE "internal_errormsg.ab3"
000293BC <internal_errormsg.ab3@53> XINCLUDE "internal_errormsg.ab3"
000293E2 <internal_errormsg.ab3@54> XINCLUDE "internal_errormsg.ab3"
00029434 <internal_errormsg.ab3@56> XINCLUDE "internal_errormsg.ab3"
0002949E <internal_errormsg.ab3@57> XINCLUDE "internal_errormsg.ab3"
000294FC <internal_errormsg.ab3@58> XINCLUDE "internal_errormsg.ab3"
0002956A <internal_errormsg.ab3@59> XINCLUDE "internal_errormsg.ab3"
000295A6 <internal_errormsg.ab3@60> XINCLUDE "internal_errormsg.ab3"
000295C4 <internal_errormsg.ab3@61> XINCLUDE "internal_errormsg.ab3"
000295EA <internal_errormsg.ab3@62> XINCLUDE "internal_errormsg.ab3"
0002961A <internal_errormsg.ab3@63> XINCLUDE "internal_errormsg.ab3"
0002963E <internal_errormsg.ab3@64> XINCLUDE "internal_errormsg.ab3"
0002966C <internal_errormsg.ab3@65> XINCLUDE "internal_errormsg.ab3"
00029690 <internal_errormsg.ab3@66> XINCLUDE "internal_errormsg.ab3"
000296A6 <internal_errormsg.ab3@67> XINCLUDE "internal_errormsg.ab3"
000296BC <internal_errormsg.ab3@68> XINCLUDE "internal_errormsg.ab3"
000296C2 <internal_errormsg.ab3@71> XINCLUDE "internal_errormsg.ab3"
000296CA <internal_errormsg.ab3@73> XINCLUDE "internal_errormsg.ab3"
000296CC <internal_errormsg.ab3@75> XINCLUDE "internal_errormsg.ab3"
000296D0 <internal_errormsg.ab3@76> XINCLUDE "internal_errormsg.ab3"
000296D8 <internal_errormsg.ab3@77> XINCLUDE "internal_errormsg.ab3"
000296DA <internal_errormsg.ab3@79> XINCLUDE "internal_errormsg.ab3"
00029714 <internal_errormsg.ab3@81> XINCLUDE "internal_errormsg.ab3"
00029740 <internal_errormsg.ab3@82> XINCLUDE "internal_errormsg.ab3"
00029770 <internal_errormsg.ab3@83> XINCLUDE "internal_errormsg.ab3"
000297A8 <internal_errormsg.ab3@84> XINCLUDE "internal_errormsg.ab3"
00029802 <internal_errormsg.ab3@85> XINCLUDE "internal_errormsg.ab3"
00029804 <internal_errormsg.ab3@89> XINCLUDE "internal_errormsg.ab3"
00029808 <internal_errormsg.ab3@90> XINCLUDE "internal_errormsg.ab3"
0002980C <internal_errormsg.ab3@91> XINCLUDE "internal_errormsg.ab3"
00029810 <internal_errormsg.ab3@92> XINCLUDE "internal_errormsg.ab3"
00029814 <internal_errormsg.ab3@93> XINCLUDE "internal_errormsg.ab3"
00029818 <internal_errormsg.ab3@94> XINCLUDE "internal_errormsg.ab3"
0002981C <internal_errormsg.ab3@95> XINCLUDE "internal_errormsg.ab3"
00029820 <internal_errormsg.ab3@96> XINCLUDE "internal_errormsg.ab3"
00029824 <internal_errormsg.ab3@97> XINCLUDE "internal_errormsg.ab3"
00029828 <internal_errormsg.ab3@98> XINCLUDE "internal_errormsg.ab3"
0002982C <internal_errormsg.ab3@99> XINCLUDE "internal_errormsg.ab3"
0002986A <internal_errormsg.ab3@100> XINCLUDE "internal_errormsg.ab3"
0002989C <internal_errormsg.ab3@102> XINCLUDE "internal_errormsg.ab3"
000298BA <internal_errormsg.ab3@103> XINCLUDE "internal_errormsg.ab3"
000298E4 <internal_errormsg.ab3@104> XINCLUDE "internal_errormsg.ab3"
00029900 <internal_errormsg.ab3@105> XINCLUDE "internal_errormsg.ab3"
0002991A <internal_errormsg.ab3@106> XINCLUDE "internal_errormsg.ab3"
00029938 <internal_errormsg.ab3@107> XINCLUDE "internal_errormsg.ab3"
0002995C <internal_errormsg.ab3@108> XINCLUDE "internal_errormsg.ab3"
0002995E <internal_errormsg.ab3@112> XINCLUDE "internal_errormsg.ab3"
000299B0 <internal_errormsg.ab3@114> XINCLUDE "internal_errormsg.ab3"
000299D8 <internal_errormsg.ab3@116> XINCLUDE "internal_errormsg.ab3"
00029A00 <internal_errormsg.ab3@117> XINCLUDE "internal_errormsg.ab3"
00029A1C <internal_errormsg.ab3@121> XINCLUDE "internal_errormsg.ab3"
00029A3C <internal_errormsg.ab3@122> XINCLUDE "internal_errormsg.ab3"
00029A54 <internal_errormsg.ab3@123> XINCLUDE "internal_errormsg.ab3"
00029A98 <internal_errormsg.ab3@124> XINCLUDE "internal_errormsg.ab3"
00029AE0 <internal_errormsg.ab3@125> XINCLUDE "internal_errormsg.ab3"
00029B0A <internal_errormsg.ab3@126> XINCLUDE "internal_errormsg.ab3"
00029B34 <internal_errormsg.ab3@127> XINCLUDE "internal_errormsg.ab3"
00029B4E <internal_errormsg.ab3@131> XINCLUDE "internal_errormsg.ab3"
00029B78 <internal_errormsg.ab3@132> XINCLUDE "internal_errormsg.ab3"
00029BCC <internal_errormsg.ab3@133> XINCLUDE "internal_errormsg.ab3"
00029C18 <internal_errormsg.ab3@134> XINCLUDE "internal_errormsg.ab3"
00029C50 <internal_errormsg.ab3@135> XINCLUDE "internal_errormsg.ab3"
00029C56 <internal_errormsg.ab3@138> XINCLUDE "internal_errormsg.ab3"
00029C64 <internal_errormsg.ab3@142> XINCLUDE "internal_errormsg.ab3"
00029C94 <internal_errormsg.ab3@145> XINCLUDE "internal_errormsg.ab3"
00029CC8 <internal_errormsg.ab3@146> XINCLUDE "internal_errormsg.ab3"
00029D2E <internal_errormsg.ab3@147> XINCLUDE "internal_errormsg.ab3"
00029D4C <internal_errormsg.ab3@148> XINCLUDE "internal_errormsg.ab3"
00029DC6 <internal_errormsg.ab3@149> XINCLUDE "internal_errormsg.ab3"
00029DEE <internal_errormsg.ab3@150> XINCLUDE "internal_errormsg.ab3"
00029E04 <internal_errormsg.ab3@151> XINCLUDE "internal_errormsg.ab3"
00029E18 <internal_errormsg.ab3@152> XINCLUDE "internal_errormsg.ab3"
00029E38 <internal_errormsg.ab3@153> XINCLUDE "internal_errormsg.ab3"
00029E3E <internal_errormsg.ab3@156> XINCLUDE "internal_errormsg.ab3"
00029E50 <internal_errormsg.ab3@160> XINCLUDE "internal_errormsg.ab3"
00029E84 <internal_errormsg.ab3@163> XINCLUDE "internal_errormsg.ab3"
00029E9C <internal_errormsg.ab3@164> XINCLUDE "internal_errormsg.ab3"
00029EB8 <internal_errormsg.ab3@165> XINCLUDE "internal_errormsg.ab3"
00029ED0 <internal_errormsg.ab3@166> XINCLUDE "internal_errormsg.ab3"
00029EF0 <internal_errormsg.ab3@167> XINCLUDE "internal_errormsg.ab3"
00029F10 <internal_errormsg.ab3@168> XINCLUDE "internal_errormsg.ab3"
00029F36 <internal_errormsg.ab3@169> XINCLUDE "internal_errormsg.ab3"
00029F4C <internal_errormsg.ab3@170> XINCLUDE "internal_errormsg.ab3"
00029F68 <internal_errormsg.ab3@171> XINCLUDE "internal_errormsg.ab3"
00029F92 <internal_errormsg.ab3@172> XINCLUDE "internal_errormsg.ab3"
00029FAA <internal_errormsg.ab3@173> XINCLUDE "internal_errormsg.ab3"
00029FC6 <internal_errormsg.ab3@174> XINCLUDE "internal_errormsg.ab3"
00029FE6 <internal_errormsg.ab3@175> XINCLUDE "internal_errormsg.ab3"
00029FFE <internal_errormsg.ab3@176> XINCLUDE "internal_errormsg.ab3"
0002A002 <internal_errormsg.ab3@179> XINCLUDE "internal_errormsg.ab3"
0002A008 <internal_errormsg.ab3@180> XINCLUDE "internal_errormsg.ab3"
0002A00E <internal_errormsg.ab3@181> XINCLUDE "internal_errormsg.ab3"
0002A023 <internal_errormsg.ab3@182> XINCLUDE "internal_errormsg.ab3"
0002A029 <internal_errormsg.ab3@184> XINCLUDE "internal_errormsg.ab3"
0002A02A <internal_errormsg.ab3@185> XINCLUDE "internal_errormsg.ab3"
0002A02E <internal_errormsg.ab3@188> XINCLUDE "internal_errormsg.ab3"
0002A034 <internal_errormsg.ab3@189> XINCLUDE "internal_errormsg.ab3"
0002A03A <internal_errormsg.ab3@190> XINCLUDE "internal_errormsg.ab3"
0002A04D <internal_errormsg.ab3@191> XINCLUDE "internal_errormsg.ab3"
0002A053 <internal_errormsg.ab3@193> XINCLUDE "internal_errormsg.ab3"
0002A054 <internal_errormsg.ab3@194> XINCLUDE "internal_errormsg.ab3"
0002A072 <internal_errormsg.ab3@196> XINCLUDE "internal_errormsg.ab3"
0002A08A <internal_errormsg.ab3@197> XINCLUDE "internal_errormsg.ab3"
0002A0A6 <internal_errormsg.ab3@198> XINCLUDE "internal_errormsg.ab3"
0002A0D0 <internal_errormsg.ab3@199> XINCLUDE "internal_errormsg.ab3"
0002A0EA <internal_errormsg.ab3@200> XINCLUDE "internal_errormsg.ab3"
0002A10A <internal_errormsg.ab3@201> XINCLUDE "internal_errormsg.ab3"
0002A128 <internal_errormsg.ab3@202> XINCLUDE "internal_errormsg.ab3"
0002A156 <internal_errormsg.ab3@203> XINCLUDE "internal_errormsg.ab3"
0002A160 <internal_errormsg.ab3@206> XINCLUDE "internal_errormsg.ab3"
0002A192 <internal_errormsg.ab3@207> XINCLUDE "internal_errormsg.ab3"
0002A1B0 <internal_errormsg.ab3@209> XINCLUDE "internal_errormsg.ab3"
0002A1CE <internal_errormsg.ab3@210> XINCLUDE "internal_errormsg.ab3"
0002A1EE <internal_errormsg.ab3@211> XINCLUDE "internal_errormsg.ab3"
0002A214 <internal_errormsg.ab3@212> XINCLUDE "internal_errormsg.ab3"
0002A23A <internal_errormsg.ab3@213> XINCLUDE "internal_errormsg.ab3"
0002A262 <internal_errormsg.ab3@214> XINCLUDE "internal_errormsg.ab3"
0002A280 <internal_errormsg.ab3@215> XINCLUDE "internal_errormsg.ab3"
0002A2A0 <internal_errormsg.ab3@216> XINCLUDE "internal_errormsg.ab3"
0002A2BA <internal_errormsg.ab3@217> XINCLUDE "internal_errormsg.ab3"
0002A2DC <internal_errormsg.ab3@218> XINCLUDE "internal_errormsg.ab3"
0002A2FA <internal_errormsg.ab3@219> XINCLUDE "internal_errormsg.ab3"
0002A31C <internal_errormsg.ab3@220> XINCLUDE "internal_errormsg.ab3"
0002A340 <internal_errormsg.ab3@221> XINCLUDE "internal_errormsg.ab3"
0002A346 <internal_errormsg.ab3@225> XINCLUDE "internal_errormsg.ab3"
0002A362 <internal_errormsg.ab3@227> XINCLUDE "internal_errormsg.ab3"
0002A37E <internal_errormsg.ab3@229> XINCLUDE "internal_errormsg.ab3"
0002A39C <internal_errormsg.ab3@230> XINCLUDE "internal_errormsg.ab3"
0002A3BA <internal_errormsg.ab3@231> XINCLUDE "internal_errormsg.ab3"
0002A408 <internal_errormsg.ab3@232> XINCLUDE "internal_errormsg.ab3"
0002A426 <internal_errormsg.ab3@233> XINCLUDE "internal_errormsg.ab3"
0002A444 <internal_errormsg.ab3@234> XINCLUDE "internal_errormsg.ab3"
0002A45E <internal_errormsg.ab3@235> XINCLUDE "internal_errormsg.ab3"
0002A4AA <internal_errormsg.ab3@236> XINCLUDE "internal_errormsg.ab3"
0002A4D0 <internal_errormsg.ab3@237> XINCLUDE "internal_errormsg.ab3"
0002A4F0 <internal_errormsg.ab3@238> XINCLUDE "internal_errormsg.ab3"
0002A512 <internal_errormsg.ab3@239> XINCLUDE "internal_errormsg.ab3"
0002A52E <internal_errormsg.ab3@240> XINCLUDE "internal_errormsg.ab3"
0002A554 <internal_errormsg.ab3@241> XINCLUDE "internal_errormsg.ab3"
0002A570 <internal_errormsg.ab3@242> XINCLUDE "internal_errormsg.ab3"
0002A58E <internal_errormsg.ab3@243> XINCLUDE "internal_errormsg.ab3"
0002A5B6 <internal_errormsg.ab3@244> XINCLUDE "internal_errormsg.ab3"
0002A5D2 <internal_errormsg.ab3@245> XINCLUDE "internal_errormsg.ab3"
0002A5E2 <internal_errormsg.ab3@246> XINCLUDE "internal_errormsg.ab3"
0002A604 <internal_errormsg.ab3@247> XINCLUDE "internal_errormsg.ab3"
0002A606 <internal_errormsg.ab3@251> XINCLUDE "internal_errormsg.ab3"
0002A620 <internal_errormsg.ab3@253> XINCLUDE "internal_errormsg.ab3"
0002A644 <internal_errormsg.ab3@255> XINCLUDE "internal_errormsg.ab3"
0002A664 <internal_errormsg.ab3@256> XINCLUDE "internal_errormsg.ab3"
0002A696 <internal_errormsg.ab3@257> XINCLUDE "internal_errormsg.ab3"
0002A6F4 <internal_errormsg.ab3@258> XINCLUDE "internal_errormsg.ab3"
0002A72C <internal_errormsg.ab3@259> XINCLUDE "internal_errormsg.ab3"
0002A76A <internal_errormsg.ab3@260> XINCLUDE "internal_errormsg.ab3"
0002A7A0 <internal_errormsg.ab3@261> XINCLUDE "internal_errormsg.ab3"
0002A7D2 <internal_errormsg.ab3@262> XINCLUDE "internal_errormsg.ab3"
0002A7F6 <internal_errormsg.ab3@263> XINCLUDE "internal_errormsg.ab3"
0002A81A <internal_errormsg.ab3@264> XINCLUDE "internal_errormsg.ab3"
0002A864 <internal_errormsg.ab3@265> XINCLUDE "internal_errormsg.ab3"
0002A88C <internal_errormsg.ab3@266> XINCLUDE "internal_errormsg.ab3"
0002A8D6 <internal_errormsg.ab3@267> XINCLUDE "internal_errormsg.ab3"
0002A916 <internal_errormsg.ab3@268> XINCLUDE "internal_errormsg.ab3"
0002A916 <AmiBlitz3.ab3@12309> XINCLUDE "internal_errormsg.ab3"
0002A918 <AmiBlitz3.ab3@12313> ezerr:   Ds.w 1                                            ;for simple errors
0002A91E <AmiBlitz3.ab3@12320>    MOVE.l myline,d0
0002A922 <AmiBlitz3.ab3@12321>   BNE 'l2
0002A928 <AmiBlitz3.ab3@12324>     MOVE.l a5,lastsourcepos
0002A92A <AmiBlitz3.ab3@12327>     SUBA.l a5,a5
0002A930 <AmiBlitz3.ab3@12330>   TST.l usedfrom
0002A934 <AmiBlitz3.ab3@12331>   BEQ 'org
0002A93A <AmiBlitz3.ab3@12332>     MOVEA.l usedfrom,a5
0002A940 <AmiBlitz3.ab3@12336>   TST.w dirmode
0002A944 <AmiBlitz3.ab3@12337>   BNE.b 'quiet
0002A94A <AmiBlitz3.ab3@12339>     JSR call_setpointernormal
0002A94E <AmiBlitz3.ab3@12341>     MOVE.w ezerr(PC),D0
0002A952 <AmiBlitz3.ab3@12342>     BNE.w 'skip
0002A958 <AmiBlitz3.ab3@12343>       MOVE.w cfetchmode,D0
0002A95C <AmiBlitz3.ab3@12344>       BEQ.w 'skip2
0002A966 <AmiBlitz3.ab3@12345>         MOVE.l oldlibat,destbufferend                      ;fix up lib thing.
0002A96C <AmiBlitz3.ab3@12348>   MOVE.w constmode,D0
0002A970 <AmiBlitz3.ab3@12349>   BEQ.b 'skip3
0002A974 <AmiBlitz3.ab3@12350>     BSR.w asmerr2
0002A97A <AmiBlitz3.ab3@12353>   MOVE.l firstlocal,D1
0002A980 <AmiBlitz3.ab3@12354>   OR.l firstglob,D1
0002A984 <AmiBlitz3.ab3@12355>   BEQ.b 'notproc                                           ;?!?!?!
0002A98A <AmiBlitz3.ab3@12357> 
0002A98E <AmiBlitz3.ab3@12358>     BNE 'notproc                                           ; yes skip
0002A994 <AmiBlitz3.ab3@12360>       JSR droplocals                                        ; no free some data ????
0002A99C <AmiBlitz3.ab3@12363>   MOVE.w #$FFFF,anyerrs                                    ;#-1,anyerrs org source
0002A9A6 <AmiBlitz3.ab3@12365>   CMP.l #"NORE",reqmode                                    ;for used functions
0002A9AA <AmiBlitz3.ab3@12366>   BEQ 'notproc_l1
0002A9B4 <AmiBlitz3.ab3@12368>     MOVE.l linenumat,compilelinecounter
0002A9BA <AmiBlitz3.ab3@12371>   JSR close_compilewin
0002A9BC <AmiBlitz3.ab3@12374>   MOVEA.l (A7)+,A0
0002A9C2 <AmiBlitz3.ab3@12376>   MOVE.l errorcounter,d0                                   ; added to make maxerrorcount changable in CLIMode  tomsmart1
0002A9C8 <AmiBlitz3.ab3@12377>   CMP.l maxerrorcount,d0                                   ; changed to make maxerrorcount changable in CLIMode  tomsmart1
0002A9CC <AmiBlitz3.ab3@12378>   BLT 'lesserror
0002A9D2 <AmiBlitz3.ab3@12379>   LEA errorlimit_text,a0
0002A9D8 <AmiBlitz3.ab3@12382>   ADDQ.l #1,errorcounter
0002A9DE <AmiBlitz3.ab3@12383>   JSR errorstringparse
0002A9E8 <AmiBlitz3.ab3@12384>   CMP.l #"NORE",reqmode                                    ;for used functions
0002A9EC <AmiBlitz3.ab3@12385>   BEQ 'skip_Lxx2
0002A9F2 <AmiBlitz3.ab3@12386>   TST.l CLIMode
0002A9F6 <AmiBlitz3.ab3@12387>   BNE 'climode_output
0002A9FC <AmiBlitz3.ab3@12390>     JSR save_errorfile
0002AA00 <AmiBlitz3.ab3@12391>     BRA 'end_output
0002AA06 <AmiBlitz3.ab3@12394>     JSR stdout_error
0002AA0C <AmiBlitz3.ab3@12397>        MOVE.l errorcounter,d0                          ; added to make maxerrorcount changable in CLIMode  tomsmart1
0002AA12 <AmiBlitz3.ab3@12398>        CMP.l maxerrorcount,d0                          ; changed to make maxerrorcount changable in CLIMode  tomsmart1
0002AA16 <AmiBlitz3.ab3@12399>        BGT 'end_output
0002AA1C <AmiBlitz3.ab3@12400>       MOVE.l lastsourcepos,a5
0002AA1E <AmiBlitz3.ab3@12403>       TST.b (a5)
0002AA22 <AmiBlitz3.ab3@12404>         BEQ 'ok2
0002AA24 <AmiBlitz3.ab3@12405>       MOVE.b (a5)+,d0                                  ; position to usefull source position to avoid following errors
0002AA28 <AmiBlitz3.ab3@12406>       BEQ 'ok
0002AA2C <AmiBlitz3.ab3@12407>       CMP.b #":",d0
0002AA30 <AmiBlitz3.ab3@12408>       BEQ 'ok
0002AA34 <AmiBlitz3.ab3@12409>       BRA 'loop
0002AA36 <AmiBlitz3.ab3@12412>     SUBQ.l #1,a5
0002AA3E <AmiBlitz3.ab3@12415>       MOVE.w #0,lastchar
0002AA46 <AmiBlitz3.ab3@12416>       MOVE.b #1,iserror
0002AA4C <AmiBlitz3.ab3@12417>       MOVE.l stackaddr,a7
0002AA4E <AmiBlitz3.ab3@12418>       RTS
0002AA50 <AmiBlitz3.ab3@12426>   MOVE.l A0,-(a7)
0002AA8E <AmiBlitz3.ab3@12427>   !ComData_GetL{comFunc_ErrorRequest,A1}
0002AA90 <AmiBlitz3.ab3@12428>   MOVE.l (a7)+,A0
0002AA94 <AmiBlitz3.ab3@12430>   MOVEM.l d6/D7/A6,-(A7)
0002AA9A <AmiBlitz3.ab3@12432>   MOVE.l includeline,d7
0002AAA0 <AmiBlitz3.ab3@12433>   MOVE.l #"INLN",a6
0002AAAA <AmiBlitz3.ab3@12434>   MOVE.l errstack,tempa7
0002AAAC <AmiBlitz3.ab3@12436>   JSR (A1)                                                  ;open ped errorrequest
0002AAB0 <AmiBlitz3.ab3@12438>   MOVEM.l (A7)+,D7/d6/A6
0002AAB6 <AmiBlitz3.ab3@12442>   MOVE.l tempa7,a7
0002AABC <AmiBlitz3.ab3@12444>   MOVEA.l errcont,A0
0002AABE <AmiBlitz3.ab3@12447>  RTS
0002AAC4 <AmiBlitz3.ab3@12450>   MOVEA.l errstack,A7
0002AACA <AmiBlitz3.ab3@12451>   MOVEA.l errcont,A0
0002AACC <AmiBlitz3.ab3@12453>  RTS
0002AACE <AmiBlitz3.ab3@12457>   MOVE.l (A7),D0
0002AAD4 <AmiBlitz3.ab3@12458>   MOVEA.l errstack,A7
0002AADA <AmiBlitz3.ab3@12459>   MOVEA.l errcont,A0
0002AADC <AmiBlitz3.ab3@12460> JMP (A0)
0002AAE0 <AmiBlitz3.ab3@12466>   CMP.w #$7A,D0                                            ;'z'
0002AAE4 <AmiBlitz3.ab3@12467>    BHI.w 'no
0002AAE8 <AmiBlitz3.ab3@12468>   CMP.w #$41,D0                                            ;'A'
0002AAEC <AmiBlitz3.ab3@12469>    BCS.w 'no
0002AAF0 <AmiBlitz3.ab3@12470>   CMP.w #$61,D0                                            ;'a'
0002AAF4 <AmiBlitz3.ab3@12471>    BCC.w 'yes
0002AAF8 <AmiBlitz3.ab3@12472>   CMP.w #$5A,D0                                            ;'Z'
0002AAFC <AmiBlitz3.ab3@12473>    BHI.w 'no
0002AAFE <AmiBlitz3.ab3@12476>   CMP.w D0,D0
0002AB00 <AmiBlitz3.ab3@12479> RTS
0002AB04 <AmiBlitz3.ab3@12487>   CMP.w #$30,D0                                            ;'0'
0002AB08 <AmiBlitz3.ab3@12488>    BCS.w 'skip
0002AB0C <AmiBlitz3.ab3@12489>   CMP.w #$39,D0                                            ;'9'
0002AB10 <AmiBlitz3.ab3@12490>    BHI.w 'skip
0002AB12 <AmiBlitz3.ab3@12491>   CMP.w D0,D0
0002AB14 <AmiBlitz3.ab3@12494> RTS
0002AB36 <AmiBlitz3.ab3@12501>   !compare1                                                ;bsr.w tstalpha
0002AB3A <AmiBlitz3.ab3@12503>    BEQ.w 'skip
0002AB4C <AmiBlitz3.ab3@12505>   !compare2                                                ;bsr.w tstnum2
0002AB50 <AmiBlitz3.ab3@12507>    BEQ.w 'skip
0002AB54 <AmiBlitz3.ab3@12508>   CMP.w #$5F,D0                                            ;'_'
0002AB58 <AmiBlitz3.ab3@12509>    BEQ.w 'skip
0002AB5C <AmiBlitz3.ab3@12510>   CMP.w #$27,D0                                            ;''';#loclabch,d0 org source
0002AB5E <AmiBlitz3.ab3@12513> RTS
0002AB68 <AmiBlitz3.ab3@12519>   MOVE.w oldqflag,instringon
0002AB6E <AmiBlitz3.ab3@12520>   MOVEA.l lastsourcepos,A5
0002AB74 <AmiBlitz3.ab3@12529>   MOVE.l a5,beforeparameterfetch
0002AB7A <AmiBlitz3.ab3@12531>   LEA ptr_parameterstore,A1
0002AB7C <AmiBlitz3.ab3@12534>   MOVEQ.l #$00,D2
0002AB82 <AmiBlitz3.ab3@12538>   LEA chartab,a0
0002AB84 <AmiBlitz3.ab3@12539>   MOVEQ #0,d0
0002AB8A <AmiBlitz3.ab3@12540>   MOVE.l A5,lastsourcepos
0002AB94 <AmiBlitz3.ab3@12541>   MOVE.w instringon,oldqflag
0002AB96 <AmiBlitz3.ab3@12544>     MOVE.b (a5)+,d0
0002AB9A <AmiBlitz3.ab3@12545>   CMP.b #$20,d0                                            ;space deftype
0002AB9E <AmiBlitz3.ab3@12546>   BEQ 'retry
0002ABA4 <AmiBlitz3.ab3@12548>   MOVE.w d0,lastchar
0002ABA8 <AmiBlitz3.ab3@12549>   TST.b 0(a0,d0.w)
0002ABAC <AmiBlitz3.ab3@12550>   BNE 'done
0002ABAE <AmiBlitz3.ab3@12563>   MOVE.b D0,(A1)+
0002ABB0 <AmiBlitz3.ab3@12564>   ADDQ.l #1,D2
0002ABB6 <AmiBlitz3.ab3@12567>   MOVE.l A5,lastsourcepos
0002ABB8 <AmiBlitz3.ab3@12570>   MOVE.b (a5)+,d0
0002ABBE <AmiBlitz3.ab3@12571>   MOVE.b d0,lastchar+1
0002ABC2 <AmiBlitz3.ab3@12572>   CMP.b #$20,d0
0002ABC6 <AmiBlitz3.ab3@12573>   BEQ 'loop_l20
0002ABCA <AmiBlitz3.ab3@12575>   TST.b 0(a0,d0)
0002ABCE <AmiBlitz3.ab3@12576>   BEQ 'loop
0002ABD2 <AmiBlitz3.ab3@12577>   CMP.b #2,d0
0002ABD6 <AmiBlitz3.ab3@12578>   BNE 'loop_lf1
0002ABDC <AmiBlitz3.ab3@12579>   MOVEA.l usedfrom,A5
0002ABE2 <AmiBlitz3.ab3@12580>   CLR.l usedfrom
0002ABE6 <AmiBlitz3.ab3@12581>  BRA 'loop_ln1
0002ABEA <AmiBlitz3.ab3@12584>   CMP.b #1,d0
0002ABEE <AmiBlitz3.ab3@12585>   BNE 'loop_l20
0002ABF2 <AmiBlitz3.ab3@12586>   MOVEA.l cmakea5(PC),A5
0002ABF6 <AmiBlitz3.ab3@12587>  BRA 'loop_ln1
0002ABFA <AmiBlitz3.ab3@12590>   CMP.b #$7e,d0
0002ABFE <AmiBlitz3.ab3@12591>             BNE 'loop_lt
0002AC04 <AmiBlitz3.ab3@12592>             TST.w cmake
0002AC08 <AmiBlitz3.ab3@12593>             BNE.w 'loop_a1
0002AC0A <AmiBlitz3.ab3@12594>             SUBQ.l #1,a5
0002AC0E <AmiBlitz3.ab3@12595>             BSR.w get1bytemain
0002AC12 <AmiBlitz3.ab3@12596>  BRA 'loop
0002AC16 <AmiBlitz3.ab3@12600>  BRA 'loop_gpex
0002AC1A <AmiBlitz3.ab3@12604>   BSR.w getchar
0002AC3C <AmiBlitz3.ab3@12606>    !compare1                                               ;bsr.w tstalpha
0002AC40 <AmiBlitz3.ab3@12607>    BEQ.w 'loop_getp1
0002AC52 <AmiBlitz3.ab3@12608>    !compare2                                               ;bsr.w tstnum
0002AC56 <AmiBlitz3.ab3@12609>    BEQ.w 'loop_getp1
0002AC5A <AmiBlitz3.ab3@12610>   CMP.w #$5F,D0                                            ;'_'
0002AC5E <AmiBlitz3.ab3@12611>    BEQ.w 'loop_getp1
0002AC62 <AmiBlitz3.ab3@12612>   CMP.w #$27,D0                                            ;''';#loclabch,d0 org source
0002AC66 <AmiBlitz3.ab3@12616>       BNE 'loop_gpex
0002AC6A <AmiBlitz3.ab3@12617>       CMP.b #$20,d0
0002AC6E <AmiBlitz3.ab3@12619>       BNE.w 'loop
0002AC70 <AmiBlitz3.ab3@12622>      TST.b d0
0002AC74 <AmiBlitz3.ab3@12623>      BPL 'loop_l10
0002AC76 <AmiBlitz3.ab3@12624>      SUBQ.l #1,a5
0002AC7A <AmiBlitz3.ab3@12625>      BSR get1byte_
0002AC7E <AmiBlitz3.ab3@12633>    CMP.w #$20,D0
0002AC82 <AmiBlitz3.ab3@12634>    BNE.w 'done
0002AC84 <AmiBlitz3.ab3@12636>    MOVEQ #0,d0
0002AC8A <AmiBlitz3.ab3@12637>   MOVE.l a5,lastsourcepos
0002AC8C <AmiBlitz3.ab3@12640>   MOVE.b (a5)+,d0                                          ;neuneu
0002AC90 <AmiBlitz3.ab3@12641>   BPL 'loop_l101
0002AC92 <AmiBlitz3.ab3@12642>   ASL.w #8,d0
0002AC94 <AmiBlitz3.ab3@12643>   MOVE.b (a5)+,d0
0002AC9A <AmiBlitz3.ab3@12646>   TST.w instringon
0002AC9E <AmiBlitz3.ab3@12647>   BNE 'loop_l102
0002ACA2 <AmiBlitz3.ab3@12648>   CMP.b #$20,d0
0002ACA6 <AmiBlitz3.ab3@12649>   BEQ 'loop_l103
0002ACAA <AmiBlitz3.ab3@12650>   CMP.b #";",d0
0002ACAE <AmiBlitz3.ab3@12651>   BNE 'loop_l102
0002ACB0 <AmiBlitz3.ab3@12654>   MOVE.b (A5)+,D0
0002ACB4 <AmiBlitz3.ab3@12655>              BEQ 'loop_l1
0002ACB8 <AmiBlitz3.ab3@12656>              CMP.b #":",d0
0002ACBC <AmiBlitz3.ab3@12657>              BNE 'loop_lr                         ;:@
0002ACC0 <AmiBlitz3.ab3@12658>              CMP.b #"@",(a5)
0002ACC4 <AmiBlitz3.ab3@12659>              BNE 'loop_lr
0002ACC6 <AmiBlitz3.ab3@12660>              ADDQ #1,a5
0002ACCC <AmiBlitz3.ab3@12664>   MOVE.w d0,lastchar
0002ACD0 <AmiBlitz3.ab3@12670>   CMP.b #";",d0
0002ACD4 <AmiBlitz3.ab3@12671>   BEQ 'done_l11
0002ACD6 <AmiBlitz3.ab3@12673>   CLR.b (A1)
0002ACD8 <AmiBlitz3.ab3@12677>   TST.w D2
0002ACDA <AmiBlitz3.ab3@12678>  RTS
0002ACDC <AmiBlitz3.ab3@12682>   CLR.b (a1)
0002ACDE <AmiBlitz3.ab3@12683>   MOVEQ #0,d0
0002ACE4 <AmiBlitz3.ab3@12684>   MOVE.w d0,lastchar
0002ACE6 <AmiBlitz3.ab3@12687>   TST.w D2
0002ACE8 <AmiBlitz3.ab3@12688> RTS
0002ACEA <AmiBlitz3.ab3@12695>   MOVE.l (A2),D0
0002ACEE <AmiBlitz3.ab3@12698>   BEQ.w 'here
0002ACF0 <AmiBlitz3.ab3@12699>   MOVEA.l D0,A2
0002ACF4 <AmiBlitz3.ab3@12700>  BRA.w 'loop
0002ACF8 <AmiBlitz3.ab3@12703> BRA.w reget
0002ACFA <AmiBlitz3.ab3@12709>   MOVE.l (A2),-(A7)
0002ACFE <AmiBlitz3.ab3@12710>   BSR.w addlabel
0002AD00 <AmiBlitz3.ab3@12711>   MOVE.l (A7)+,(A2)
0002AD02 <AmiBlitz3.ab3@12712> RTS
0002AD08 <AmiBlitz3.ab3@12717>   CLR.l fp0addr
0002AD0E <AmiBlitz3.ab3@12718>   TST.w dirmode
0002AD12 <AmiBlitz3.ab3@12719>    BNE.w illdirerr
0002AD14 <AmiBlitz3.ab3@12720>   MOVEQ.l #$00,D0
0002AD16 <AmiBlitz3.ab3@12721>   MOVE.w D7,D0
0002AD18 <AmiBlitz3.ab3@12722>   ADD.w D2,D0
0002AD1A <AmiBlitz3.ab3@12723>   ADDQ.w #1,D0
0002AD1C <AmiBlitz3.ab3@12724>   MOVE.w D0,D2
0002AD1E <AmiBlitz3.ab3@12725>   ADDQ.l #2,d0
0002AD20 <AmiBlitz3.ab3@12726>   MOVEQ.l #$01,D1
0002AD26 <AmiBlitz3.ab3@12727>   MOVEA.l _execbase,A6
0002AD2C <AmiBlitz3.ab3@12728>   MOVE.l mempool2,a0
0002AD30 <AmiBlitz3.ab3@12729>   JSR _AllocPooled(a6)
0002AD36 <AmiBlitz3.ab3@12731>   MOVE.l lastlabel,a2
0002AD38 <AmiBlitz3.ab3@12732>   MOVE.l D0,(A2)
0002AD3A <AmiBlitz3.ab3@12733>   MOVE.l d0,a0
0002AD3C <AmiBlitz3.ab3@12734>   CLR.l (a0)
0002AD42 <AmiBlitz3.ab3@12735>   MOVE.l a0,lastlabel
0002AD44 <AmiBlitz3.ab3@12736>   MOVE.l d0,A2
0002AD48 <AmiBlitz3.ab3@12737>   LEA -$1(A0,D7.W),A0
0002AD4A <AmiBlitz3.ab3@12738>   MOVE.b D2,(A0)+
0002AD50 <AmiBlitz3.ab3@12739>   LEA ptr_parameterstore,A1
0002AD52 <AmiBlitz3.ab3@12740>   MOVEQ #0,d0
0002AD54 <AmiBlitz3.ab3@12741>   MOVEQ #0,d1
0002AD56 <AmiBlitz3.ab3@12744>   MOVE.b (A1)+,d1
0002AD5A <AmiBlitz3.ab3@12745>    BEQ 'l1
0002AD60 <AmiBlitz3.ab3@12746>    !hashalgo
0002AD62 <AmiBlitz3.ab3@12747>    MOVE.b d1,(A0)+
0002AD66 <AmiBlitz3.ab3@12748>  BRA 'loop2a
0002AD68 <AmiBlitz3.ab3@12751>    CLR.b (a0)+
0002AD6E <AmiBlitz3.ab3@12752>    LEA labelhash,a0
0002AD74 <AmiBlitz3.ab3@12753>    AND.l #hashsize,d0
0002AD76 <AmiBlitz3.ab3@12754>    ASL.l #2,d0
0002AD7A <AmiBlitz3.ab3@12755>    MOVE.l 0(a0,d0),d1
0002AD7E <AmiBlitz3.ab3@12756>    MOVE.l d1,$c(a2)
0002AD82 <AmiBlitz3.ab3@12757>    MOVE.l a2,0(a0,d0)
0002AD84 <AmiBlitz3.ab3@12758>    MOVEQ #0,d0
0002AD88 <AmiBlitz3.ab3@12759> BRA.w reget
0002AD8E <AmiBlitz3.ab3@12763>    TST.b newvariable
0002AD92 <AmiBlitz3.ab3@12764>    BNE addlabel
0002AD98 <AmiBlitz3.ab3@12767>   TST.w dirmode
0002AD9C <AmiBlitz3.ab3@12768>    BNE.w illdirerr
0002AD9E <AmiBlitz3.ab3@12769>   MOVEQ.l #$00,D0
0002ADA0 <AmiBlitz3.ab3@12770>   MOVE.w D7,D0
0002ADA2 <AmiBlitz3.ab3@12771>   ADD.w D2,D0
0002ADA4 <AmiBlitz3.ab3@12772>   ADDQ.w #1,D0
0002ADA6 <AmiBlitz3.ab3@12773>   MOVE.w D0,D2
0002ADA8 <AmiBlitz3.ab3@12774>   MOVEQ.l #$01,D1
0002ADAE <AmiBlitz3.ab3@12775>   MOVEA.l _execbase,A6
0002ADB4 <AmiBlitz3.ab3@12776>   MOVE.l mempool2,a0
0002ADB8 <AmiBlitz3.ab3@12777>   JSR _AllocPooled(a6)
0002ADBA <AmiBlitz3.ab3@12778>   MOVEA.l D0,A0
0002ADC0 <AmiBlitz3.ab3@12780>   LEA varbase,a2
0002ADC2 <AmiBlitz3.ab3@12781>   MOVE.l (a2),(a0)
0002ADC4 <AmiBlitz3.ab3@12782>   MOVE.l A0,(A2)
0002ADC6 <AmiBlitz3.ab3@12783>   MOVEA.l A0,A2
0002ADCA <AmiBlitz3.ab3@12784>   LEA -$1(A0,D7.W),A0
0002ADCC <AmiBlitz3.ab3@12785>   MOVE.b D2,(A0)+
0002ADD2 <AmiBlitz3.ab3@12786>   LEA ptr_parameterstore,A1
0002ADD4 <AmiBlitz3.ab3@12787>   MOVEQ #0,d0
0002ADD6 <AmiBlitz3.ab3@12788>   MOVEQ #0,d1
0002ADD8 <AmiBlitz3.ab3@12791>   MOVE.b (A1)+,d1
0002ADDC <AmiBlitz3.ab3@12792>    BEQ 'l12
0002ADE2 <AmiBlitz3.ab3@12793>    !hashalgo
0002ADE4 <AmiBlitz3.ab3@12794>    MOVE.b d1,(A0)+
0002ADE8 <AmiBlitz3.ab3@12795>  BRA 'l11
0002ADEA <AmiBlitz3.ab3@12798>   CLR.b (a0)+
0002ADF0 <AmiBlitz3.ab3@12799>   LEA variablehash,a0
0002ADF6 <AmiBlitz3.ab3@12800>    AND.l #hashsize,d0
0002ADF8 <AmiBlitz3.ab3@12801>    ASL.l #2,d0
0002ADFC <AmiBlitz3.ab3@12802>    MOVE.l 0(a0,d0),d1
0002AE00 <AmiBlitz3.ab3@12803>    MOVE.l d1,$e(a2)
0002AE04 <AmiBlitz3.ab3@12804>    MOVE.l a2,0(a0,d0)
0002AE06 <AmiBlitz3.ab3@12805>    MOVEQ #0,d0
0002AE0A <AmiBlitz3.ab3@12806> BRA.w reget
0002AE10 <AmiBlitz3.ab3@12810>   TST.w dirmode
0002AE14 <AmiBlitz3.ab3@12811>    BNE.w illdirerr
0002AE16 <AmiBlitz3.ab3@12818>   MOVEQ.l #$00,D0
0002AE18 <AmiBlitz3.ab3@12819>   MOVE.w D7,D0
0002AE1A <AmiBlitz3.ab3@12820>   ADD.w D2,D0
0002AE1C <AmiBlitz3.ab3@12821>   ADDQ.w #1,D0
0002AE1E <AmiBlitz3.ab3@12822>   MOVE.w D0,D2
0002AE20 <AmiBlitz3.ab3@12823>   MOVEQ.l #$01,D1
0002AE26 <AmiBlitz3.ab3@12824>   MOVEA.l _execbase,A6
0002AE2C <AmiBlitz3.ab3@12826>   MOVE.l mempool2,a0
0002AE30 <AmiBlitz3.ab3@12827>   JSR _AllocPooled(a6)
0002AE32 <AmiBlitz3.ab3@12831>   MOVEA.l D0,A0
0002AE34 <AmiBlitz3.ab3@12832>   MOVE.l A0,(A2)
0002AE36 <AmiBlitz3.ab3@12833>   CLR.l (a0)              ;clear next
0002AE3A <AmiBlitz3.ab3@12835>   CLR.l 8(a0)
0002AE3C <AmiBlitz3.ab3@12836>   MOVEA.l A0,A2
0002AE40 <AmiBlitz3.ab3@12838>   LEA -$1(A0,D7.W),A0
0002AE42 <AmiBlitz3.ab3@12839>   MOVE.b D2,(A0)+          ;put in struct length
0002AE48 <AmiBlitz3.ab3@12840>   LEA ptr_parameterstore,A1
0002AE4A <AmiBlitz3.ab3@12842>   MOVEQ #0,d0
0002AE4C <AmiBlitz3.ab3@12843>   MOVEQ #0,d1
0002AE4E <AmiBlitz3.ab3@12847> 
0002AE50 <AmiBlitz3.ab3@12848>   MOVE.b d1,(A0)+       ; "
0002AE54 <AmiBlitz3.ab3@12849>   BNE.w 'loop2
0002AE58 <AmiBlitz3.ab3@12850> BRA.w reget
0002AE5A <AmiBlitz3.ab3@12854>   MOVEQ.l #$13,D7
0002AE60 <AmiBlitz3.ab3@12855>   LEA constantbase,A2
0002AE64 <AmiBlitz3.ab3@12856> BRA.w findlab
0002AE66 <AmiBlitz3.ab3@12860>   MOVEQ.l #$05+8,D7        ; was #5                                ;#5,d7 org source
0002AE6C <AmiBlitz3.ab3@12861>   LEA xinclude_base,A2
0002AE70 <AmiBlitz3.ab3@12862> BRA.w findlab
0002AE72 <AmiBlitz3.ab3@12866>   MOVEQ.l #$09,D7
0002AE78 <AmiBlitz3.ab3@12867>   LEA firstconst,A2
0002AE7C <AmiBlitz3.ab3@12868> BRA.w findlab
0002AE7E <AmiBlitz3.ab3@12872>   MOVEQ.l #$0d,D7                                          ;find macro
0002AE84 <AmiBlitz3.ab3@12873>   LEA macrobase,A2
0002AE88 <AmiBlitz3.ab3@12874> BRA.w findlab
0002AE8E <AmiBlitz3.ab3@12878>   LEA labelhash,A2
0002AE90 <AmiBlitz3.ab3@12879>   MOVEQ.l #$13,D7
0002AE92 <AmiBlitz3.ab3@12881>   EXT.l d2
0002AE98 <AmiBlitz3.ab3@12882>   LEA ptr_parameterstore,A0
0002AE9A <AmiBlitz3.ab3@12883>   MOVEQ #0,d0
0002AE9C <AmiBlitz3.ab3@12884>   MOVEQ #0,d1
0002AE9E <AmiBlitz3.ab3@12887>     MOVE.b (a0)+,d1
0002AEA2 <AmiBlitz3.ab3@12888>     BEQ 'l15
0002AEA8 <AmiBlitz3.ab3@12889>     !hashalgo
0002AEAC <AmiBlitz3.ab3@12890>  BRA 'l20
0002AEB2 <AmiBlitz3.ab3@12893>   AND.l #hashsize,d0
0002AEB4 <AmiBlitz3.ab3@12894>   ASL.l #2,d0
0002AEB8 <AmiBlitz3.ab3@12895>   MOVE.l 0(a2,d0),d0
0002AEBC <AmiBlitz3.ab3@12896>  BRA 'l11
0002AEC0 <AmiBlitz3.ab3@12899>   MOVE.l $c(A2),D0          ;  begin copy of findlabel
0002AEC4 <AmiBlitz3.ab3@12902>   BEQ findlab_no
0002AEC6 <AmiBlitz3.ab3@12903>   MOVEA.l D0,A2
0002AEC8 <AmiBlitz3.ab3@12904>   MOVEQ.l #$00,D0
0002AECC <AmiBlitz3.ab3@12905>   MOVE.b -$1(A2,D7.l),D0
0002AED2 <AmiBlitz3.ab3@12906>   LEA ptr_parameterstore,A0
0002AED4 <AmiBlitz3.ab3@12907>   SUB.l D7,D0
0002AED6 <AmiBlitz3.ab3@12908>   SUBQ.l #1,D0
0002AED8 <AmiBlitz3.ab3@12909>   CMP.l D0,D2
0002AEDC <AmiBlitz3.ab3@12910>    BNE.b 'loop
0002AEE0 <AmiBlitz3.ab3@12911>   LEA $0(A2,D7.W),A1
0002AEE2 <AmiBlitz3.ab3@12912>   SUBQ.l #1,D0
0002AEE4 <AmiBlitz3.ab3@12915>     MOVE.b (a1)+,d1
0002AEE6 <AmiBlitz3.ab3@12916>     CMP.b (a0)+,d1
0002AEEA <AmiBlitz3.ab3@12918>     BNE.b 'loop
0002AEEE <AmiBlitz3.ab3@12919>   DBF D0,'loop2
0002AEF2 <AmiBlitz3.ab3@12921>   BSR.w reget
0002AEF4 <AmiBlitz3.ab3@12922>   CMP.w D0,D0
0002AEF6 <AmiBlitz3.ab3@12923> RTS                     ; end copy of findlab
0002AEF8 <AmiBlitz3.ab3@12927>   MOVEQ.l #$0B,D7
0002AEFC <AmiBlitz3.ab3@12928> BRA.w findlab
0002AF02 <AmiBlitz3.ab3@12932>   LEA firstproc,A2
0002AF08 <AmiBlitz3.ab3@12933>   MOVE.l #$21+#funcentry_extend,D7    ; was #33,
0002AF0C <AmiBlitz3.ab3@12934> BRA findlab
0002AF12 <AmiBlitz3.ab3@12938>   LEA firstfor,A2
0002AF14 <AmiBlitz3.ab3@12939>   MOVEQ.l #$11,D7
0002AF18 <AmiBlitz3.ab3@12940> BRA.w findlab
0002AF1A <AmiBlitz3.ab3@12944>   MOVEQ.l #$0F,D7
0002AF1E <AmiBlitz3.ab3@12946> BRA.w findlab
0002AF20 <AmiBlitz3.ab3@12950>   MOVEQ.l #$0F+4,D7
0002AF26 <AmiBlitz3.ab3@12951>   TST.b newvariable
0002AF2A <AmiBlitz3.ab3@12952>    BNE.w findlab
0002AF30 <AmiBlitz3.ab3@12953>   LEA variablehash,A2
0002AF36 <AmiBlitz3.ab3@12954>   LEA ptr_parameterstore,A0
0002AF38 <AmiBlitz3.ab3@12955>   MOVEQ #0,d0
0002AF3A <AmiBlitz3.ab3@12956>   MOVEQ #0,d1
0002AF3C <AmiBlitz3.ab3@12959>     MOVE.b (a0)+,d1
0002AF40 <AmiBlitz3.ab3@12960>     BEQ 'l15
0002AF46 <AmiBlitz3.ab3@12961>     !hashalgo
0002AF4A <AmiBlitz3.ab3@12962>  BRA 'l20
0002AF50 <AmiBlitz3.ab3@12965>   AND.l #hashsize,d0
0002AF52 <AmiBlitz3.ab3@12966>   ASL.l #2,d0
0002AF56 <AmiBlitz3.ab3@12967>   MOVE.l 0(a2,d0),d0
0002AF5A <AmiBlitz3.ab3@12968>  BRA 'l11
0002AF5E <AmiBlitz3.ab3@12971>   MOVE.l $e(A2),D0                                         ;find label
0002AF62 <AmiBlitz3.ab3@12974>   BEQ findlab_no
0002AF64 <AmiBlitz3.ab3@12975>   MOVEA.l D0,A2
0002AF66 <AmiBlitz3.ab3@12976>   MOVEQ.l #$00,D0
0002AF6A <AmiBlitz3.ab3@12977>   MOVE.b -$1(A2,D7.W),D0
0002AF70 <AmiBlitz3.ab3@12978>   LEA ptr_parameterstore,A0
0002AF72 <AmiBlitz3.ab3@12979>   SUB.w D7,D0
0002AF74 <AmiBlitz3.ab3@12980>   SUBQ.l #1,D0
0002AF76 <AmiBlitz3.ab3@12981>   CMP.w D0,D2
0002AF7A <AmiBlitz3.ab3@12982>    BNE.b 'l10
0002AF7E <AmiBlitz3.ab3@12983>   LEA $0(A2,D7.W),A1
0002AF80 <AmiBlitz3.ab3@12984>   SUBQ.l #1,D0
0002AF82 <AmiBlitz3.ab3@12987>     MOVE.b (a1)+,d1
0002AF84 <AmiBlitz3.ab3@12988>     CMP.b (a0)+,d1
0002AF88 <AmiBlitz3.ab3@12990>     BNE.b 'l10
0002AF8C <AmiBlitz3.ab3@12991>   DBF D0,'l201
0002AF90 <AmiBlitz3.ab3@12993>   BSR.w reget
0002AF92 <AmiBlitz3.ab3@12994>   CMP.w D0,D0
0002AF94 <AmiBlitz3.ab3@12995> RTS
0002AF96 <AmiBlitz3.ab3@13008>     MOVE.l (A2),D0                                         ;find label
0002AF9A <AmiBlitz3.ab3@13009>      BEQ.b findlab_no
0002AF9C <AmiBlitz3.ab3@13010>     MOVEA.l D0,A2
0002AF9E <AmiBlitz3.ab3@13011>     MOVEQ.l #$00,D0
0002AFA2 <AmiBlitz3.ab3@13012>     MOVE.b -$1(A2,D7.W),D0
0002AFA4 <AmiBlitz3.ab3@13013>     SUB.l D7,D0
0002AFA6 <AmiBlitz3.ab3@13014>     SUBQ.l #1,D0
0002AFA8 <AmiBlitz3.ab3@13015>   CMP.w D0,D2
0002AFAC <AmiBlitz3.ab3@13016>   BNE.b 'loop
0002AFB0 <AmiBlitz3.ab3@13018>   LEA $0(A2,D7.W),A1
0002AFB6 <AmiBlitz3.ab3@13019>   LEA ptr_parameterstore,A0
0002AFB8 <AmiBlitz3.ab3@13020>   SUBQ.l #1,D0
0002AFBA <AmiBlitz3.ab3@13024>     MOVE.b (a1)+,d1
0002AFBC <AmiBlitz3.ab3@13025>     CMP.b (a0)+,d1
0002AFC0 <AmiBlitz3.ab3@13028>     BNE.b 'loop
0002AFC4 <AmiBlitz3.ab3@13029>   DBF D0,'loop2
0002AFC8 <AmiBlitz3.ab3@13031>   BSR.w reget
0002AFCA <AmiBlitz3.ab3@13032>   CMP.w D0,D0
0002AFCC <AmiBlitz3.ab3@13033>  RTS
0002AFD0 <AmiBlitz3.ab3@13036>   BSR.w reget
0002AFD2 <AmiBlitz3.ab3@13037>   MOVEQ.l #-$01,D1
0002AFD4 <AmiBlitz3.ab3@13038> RTS
0002AFDA <AmiBlitz3.ab3@13042>   MOVEA.l alllocals,A4
0002AFE0 <AmiBlitz3.ab3@13043>   CLR.l alllocals
0002AFE4 <AmiBlitz3.ab3@13049>     CMPA.w #$0,A4
0002AFE8 <AmiBlitz3.ab3@13050>      BEQ.b 'done
0002AFEC <AmiBlitz3.ab3@13051>     MOVEA.l $4(A4),A3
0002AFF0 <AmiBlitz3.ab3@13053>     MOVEA.l $8(A4),A3
0002AFF2 <AmiBlitz3.ab3@13055>     MOVEA.l A4,A1
0002AFF4 <AmiBlitz3.ab3@13056>     MOVEA.l (A4),A4
0002AFF6 <AmiBlitz3.ab3@13057>     MOVEQ.l #$0C,D0
0002AFFC <AmiBlitz3.ab3@13058>     MOVEA.l _execbase,A6
0002B002 <AmiBlitz3.ab3@13060>     MOVE.l mempool,a0
0002B006 <AmiBlitz3.ab3@13061>     JSR _FreePooled(A6)
0002B00A <AmiBlitz3.ab3@13064>  BRA.b 'loop
0002B010 <AmiBlitz3.ab3@13068>   CLR.l firstglob                                          ;fix 2*aclearallvar called
0002B016 <AmiBlitz3.ab3@13069>   CLR.l firstlocal
0002B01C <AmiBlitz3.ab3@13070>   CLR.l sharebase
0002B022 <AmiBlitz3.ab3@13071>   TST.l mempool2
0002B026 <AmiBlitz3.ab3@13072>   BEQ 'done_l10
0002B02C <AmiBlitz3.ab3@13074>   MOVEA.l _execbase,A6
0002B032 <AmiBlitz3.ab3@13075>   MOVE.l mempool2,a0
0002B038 <AmiBlitz3.ab3@13076>   CLR.l mempool2
0002B03C <AmiBlitz3.ab3@13077>   JSR _DeletePool(a6)
0002B042 <AmiBlitz3.ab3@13080>   MOVE.l _execbase,a6
0002B048 <AmiBlitz3.ab3@13081>   MOVE.l #$10000,d0
0002B04E <AmiBlitz3.ab3@13082>   MOVE.l #80000,d1
0002B050 <AmiBlitz3.ab3@13083>   MOVE.l d1,d2
0002B054 <AmiBlitz3.ab3@13084>   JSR _CreatePool(a6)
0002B05A <AmiBlitz3.ab3@13085>   MOVE.l d0,mempool2
0002B05C <AmiBlitz3.ab3@13087> RTS
0002B060 <AmiBlitz3.ab3@13092>   CMPA.w #$0,A3
0002B064 <AmiBlitz3.ab3@13093>    BEQ.w 'done
0002B066 <AmiBlitz3.ab3@13094>   MOVEA.l A3,A1
0002B068 <AmiBlitz3.ab3@13095>   MOVEA.l (A3),A3
0002B06A <AmiBlitz3.ab3@13096>   MOVEQ.l #$00,D0
0002B06E <AmiBlitz3.ab3@13097>   MOVE.b $E(A1),D0
0002B074 <AmiBlitz3.ab3@13098>   MOVEA.l _execbase,A6
0002B07A <AmiBlitz3.ab3@13100>   MOVE.l mempool2,a0
0002B07E <AmiBlitz3.ab3@13101>   JSR _FreePooled(A6)
0002B082 <AmiBlitz3.ab3@13104>  BRA.w freevars
0002B086 <AmiBlitz3.ab3@13108>     CMPA.w #$0,A3
0002B08A <AmiBlitz3.ab3@13109>      BEQ.w 'done
0002B08C <AmiBlitz3.ab3@13110>     MOVEA.l A3,A1
0002B08E <AmiBlitz3.ab3@13111>     MOVEA.l (A3),A3
0002B090 <AmiBlitz3.ab3@13112>     MOVEQ.l #$00,D0
0002B094 <AmiBlitz3.ab3@13113>     MOVE.b $E+4(A1),D0
0002B09A <AmiBlitz3.ab3@13114>     MOVEA.l _execbase,A6
0002B0A0 <AmiBlitz3.ab3@13115>     MOVE.l mempool2,a0
0002B0A4 <AmiBlitz3.ab3@13116>     JSR _FreePooled(A6)
0002B0A8 <AmiBlitz3.ab3@13117>  BRA.w 'freevarsb
0002B0AA <AmiBlitz3.ab3@13121> RTS
0002B0B0 <AmiBlitz3.ab3@13127>   MOVEA.l currentlabeladdr,A0
0002B0B6 <AmiBlitz3.ab3@13128>   MOVE.l a0,lastlabel
0002B0B8 <AmiBlitz3.ab3@13129>   MOVEA.l (A0),A2
0002B0BA <AmiBlitz3.ab3@13130>   CLR.l (A0)
0002B0C0 <AmiBlitz3.ab3@13131>   MOVEA.l _execbase,A6
0002B0C4 <AmiBlitz3.ab3@13134>   CMPA.w #$0,A2
0002B0C8 <AmiBlitz3.ab3@13135>    BEQ.w 'done
0002B0CC <AmiBlitz3.ab3@13136>   MOVE.l $4(A2),D0
0002B0D0 <AmiBlitz3.ab3@13137>   BTST #$0,D0
0002B0D4 <AmiBlitz3.ab3@13138>    BNE.w 'skip
0002B0D6 <AmiBlitz3.ab3@13139>   MOVEA.l D0,A3
0002B0DA <AmiBlitz3.ab3@13142>     CMPA.w #$0,A3
0002B0DE <AmiBlitz3.ab3@13143>      BEQ.w 'skip
0002B0E0 <AmiBlitz3.ab3@13144>     MOVEA.l A3,A1
0002B0E2 <AmiBlitz3.ab3@13145>     MOVEA.l (A3),A3
0002B0E4 <AmiBlitz3.ab3@13146>     MOVEQ.l #$0C+2,D0     ; was #12                                 ;cancel fix
0002B0EA <AmiBlitz3.ab3@13148>     MOVE.l mempool,a0
0002B0EE <AmiBlitz3.ab3@13149>     JSR _FreePooled(A6)
0002B0F2 <AmiBlitz3.ab3@13152>  BRA.w 'loop2
0002B0F4 <AmiBlitz3.ab3@13155>   MOVEQ.l #$00,D0
0002B0F8 <AmiBlitz3.ab3@13156>   MOVE.b $12(A2),D0
0002B0FA <AmiBlitz3.ab3@13157>   MOVEA.l A2,A1
0002B0FC <AmiBlitz3.ab3@13158>   MOVEA.l (A2),A2
0002B102 <AmiBlitz3.ab3@13160>   MOVE.l mempool2,a0
0002B106 <AmiBlitz3.ab3@13164>  BRA.w 'loop
0002B108 <AmiBlitz3.ab3@13167> RTS
0002B10E <AmiBlitz3.ab3@13171>   MOVEA.l firstpend,A3
0002B114 <AmiBlitz3.ab3@13172>   CLR.l firstpend
0002B11A <AmiBlitz3.ab3@13173>   MOVEA.l _execbase,A6
0002B11E <AmiBlitz3.ab3@13176>     CMPA.w #$0,A3
0002B122 <AmiBlitz3.ab3@13177>      BEQ.w 'done
0002B124 <AmiBlitz3.ab3@13178>     MOVEA.l A3,A1
0002B126 <AmiBlitz3.ab3@13179>     MOVEQ.l #$08,D0
0002B128 <AmiBlitz3.ab3@13180>     MOVEA.l (A3),A3
0002B12E <AmiBlitz3.ab3@13182>     MOVE.l mempool,a0
0002B132 <AmiBlitz3.ab3@13183>     JSR _FreePooled(A6)
0002B136 <AmiBlitz3.ab3@13186>  BRA.w 'fpnd2
0002B138 <AmiBlitz3.ab3@13189> RTS
0002B13E <AmiBlitz3.ab3@13195>   MOVEA.l firstproc,A2
0002B144 <AmiBlitz3.ab3@13196>   CLR.l firstproc
0002B14A <AmiBlitz3.ab3@13197>   MOVEA.l _execbase,A6
0002B14E <AmiBlitz3.ab3@13200>     CMPA.w #$0,A2
0002B152 <AmiBlitz3.ab3@13201>      BEQ.w 'done
0002B154 <AmiBlitz3.ab3@13202>     MOVEA.l A2,A1
0002B156 <AmiBlitz3.ab3@13203>     MOVEA.l (A2),A2
0002B158 <AmiBlitz3.ab3@13204>     MOVEQ.l #$00,D0
0002B15C <AmiBlitz3.ab3@13205>     MOVE.b $20+#funcentry_extend(A1),D0    ; was 32(a1),
0002B162 <AmiBlitz3.ab3@13207>     MOVE.l mempool2,a0
0002B166 <AmiBlitz3.ab3@13208>     JSR _FreePooled(A6)
0002B16A <AmiBlitz3.ab3@13211>  BRA.w 'loop
0002B16C <AmiBlitz3.ab3@13214> RTS
0002B170 <AmiBlitz3.ab3@13219>   CMPA.w #$0,A2
0002B174 <AmiBlitz3.ab3@13220>    BEQ.w 'done
0002B178 <AmiBlitz3.ab3@13221>   MOVEA.l $4(A2),A3
0002B17C <AmiBlitz3.ab3@13222>   CMPA.w #$FF,A3
0002B180 <AmiBlitz3.ab3@13223>    BEQ.w 'noway
0002B184 <AmiBlitz3.ab3@13227>    BSR.w freevars
0002B186 <AmiBlitz3.ab3@13230>     MOVEA.l A2,A1
0002B188 <AmiBlitz3.ab3@13231>     MOVEA.l (A2),A2
0002B18A <AmiBlitz3.ab3@13232>     MOVEQ.l #$00,D0
0002B18E <AmiBlitz3.ab3@13233>     MOVE.b $A(A1),D0
0002B194 <AmiBlitz3.ab3@13234>     MOVEA.l _execbase,A6
0002B19A <AmiBlitz3.ab3@13236>     MOVE.l mempool2,a0
0002B19E <AmiBlitz3.ab3@13237>     JSR _FreePooled(A6)
0002B1A2 <AmiBlitz3.ab3@13240>  BRA.w freetypes
0002B1A4 <AmiBlitz3.ab3@13243> RTS
0002B1AA <AmiBlitz3.ab3@13252>   JSR usevars
0002B1B0 <AmiBlitz3.ab3@13254>   CLR.w notshared
0002B1B6 <AmiBlitz3.ab3@13255>   CLR.w varmode           ;local mode
0002B1BC <AmiBlitz3.ab3@13256>   MOVE.w proceduremode,D1
0002B1C0 <AmiBlitz3.ab3@13257>    BNE.w fvarlocal
0002B1C6 <AmiBlitz3.ab3@13259>   LEA varbase,A2
0002B1CC <AmiBlitz3.ab3@13261>   LEA ptr_parameterstore,a0
0002B1D0 <AmiBlitz3.ab3@13262>   CMP.b #$22,(a0)
0002B1D4 <AmiBlitz3.ab3@13263>   BNE fvarback
0002B1D6 <AmiBlitz3.ab3@13264>   MOVEQ #0,d0
0002B1DC <AmiBlitz3.ab3@13265>  JMP error
0002B1E0 <AmiBlitz3.ab3@13270>   BSR.w findvariable
0002B1E4 <AmiBlitz3.ab3@13273>   BNE.w fvaradd
0002B1EA <AmiBlitz3.ab3@13278>   MOVE.b flagmask+1,D1
0002B1EE <AmiBlitz3.ab3@13279>   MOVE.b $7(A2),D3
0002B1F0 <AmiBlitz3.ab3@13280>   EOR.b D3,D1
0002B1F4 <AmiBlitz3.ab3@13282>   BNE 'l2
0002B1FC <AmiBlitz3.ab3@13283>   CMP.b #2,nowdeclare
0002B200 <AmiBlitz3.ab3@13284>   BEQ errormsg_declaredtwice
0002B204 <AmiBlitz3.ab3@13285>  BRA.w fvarfound
0002B208 <AmiBlitz3.ab3@13289>   BSR.w findlab
0002B20C <AmiBlitz3.ab3@13291>   BNE 'l1
0002B214 <AmiBlitz3.ab3@13292>   CMP.b #2,nowdeclare
0002B218 <AmiBlitz3.ab3@13293>   BEQ errormsg_declaredtwice
0002B21A <AmiBlitz3.ab3@13294>   CMP.w d0,d0
0002B21E <AmiBlitz3.ab3@13298>  BRA.w 'more
0002B220 <AmiBlitz3.ab3@13302>    MOVE.l a2,-(a7)
0002B226 <AmiBlitz3.ab3@13303>    LEA sharebase,a2
0002B228 <AmiBlitz3.ab3@13304>    MOVEQ #$f+4,d7
0002B22C <AmiBlitz3.ab3@13305>    BSR.w findlab
0002B230 <AmiBlitz3.ab3@13306>    BEQ 'l2x
0002B232 <AmiBlitz3.ab3@13307>    MOVE.l (a7)+,a2
0002B236 <AmiBlitz3.ab3@13308>  BRA 'cont
0002B238 <AmiBlitz3.ab3@13311>   ADDQ.l #4,a7
0002B23E <AmiBlitz3.ab3@13312>   CLR.w varmode
0002B244 <AmiBlitz3.ab3@13313>   MOVE.b flagmask+1,D1
0002B248 <AmiBlitz3.ab3@13314>   MOVE.b $7(A2),D3
0002B24A <AmiBlitz3.ab3@13315>   EOR.b D3,D1
0002B24E <AmiBlitz3.ab3@13316>   BNE vardeclareerr
0002B252 <AmiBlitz3.ab3@13317>  BRA fvarfound
0002B258 <AmiBlitz3.ab3@13321>    MOVE.w nonew,D1
0002B25C <AmiBlitz3.ab3@13322>    BNE.w nonewerr
0002B262 <AmiBlitz3.ab3@13324>    TST.b nowdeclare
0002B266 <AmiBlitz3.ab3@13325>    BNE 'l2b
0002B26C <AmiBlitz3.ab3@13326>    TST.b declare2
0002B270 <AmiBlitz3.ab3@13327>    BEQ 'l1b
0002B274 <AmiBlitz3.ab3@13328>    CMP.b #$2e,d0
0002B278 <AmiBlitz3.ab3@13329>    BEQ 'l2b
0002B27C <AmiBlitz3.ab3@13330>    CMP.b #"$",d0
0002B280 <AmiBlitz3.ab3@13331>    BEQ 'l2b
0002B284 <AmiBlitz3.ab3@13332>  BRA vardeclareerr
0002B28A <AmiBlitz3.ab3@13335>   TST.b declare
0002B28E <AmiBlitz3.ab3@13336>    BNE vardeclareerr
0002B292 <AmiBlitz3.ab3@13340>   BSR.w addvariable      ;create var
0002B298 <AmiBlitz3.ab3@13341>   NOT.w notshared        ;set added flag
0002B29A <AmiBlitz3.ab3@13342>   MOVEA.l A2,A3
0002B2A0 <AmiBlitz3.ab3@13343>   MOVEA.l defaulttype,A2
0002B2A4 <AmiBlitz3.ab3@13344>   CMP.w #$2E,D0         ;'.'
0002B2A8 <AmiBlitz3.ab3@13345>    BEQ.w 'clapton
0002B2AC <AmiBlitz3.ab3@13346>   CMP.w #$24,D0         ;'$'
0002B2B0 <AmiBlitz3.ab3@13347>    BNE.w 'usedef
0002B2B6 <AmiBlitz3.ab3@13348>   LEA newtype_string,A2
0002B2BA <AmiBlitz3.ab3@13349>    BSR.w get1bytemain
0002B2BE <AmiBlitz3.ab3@13350>  BRA.w 'usedef
0002B2C2 <AmiBlitz3.ab3@13353>   BSR.w getparameter2
0002B2C8 <AmiBlitz3.ab3@13354>   LEA newtypebase,A2
0002B2CC <AmiBlitz3.ab3@13355>    BSR.w findtype
0002B2D0 <AmiBlitz3.ab3@13356>    BNE.w notypeerr
0002B2D6 <AmiBlitz3.ab3@13359>   CMPA.l #newtype_byte,A2
0002B2DA <AmiBlitz3.ab3@13360>    BEQ.w 'byte
0002B2E0 <AmiBlitz3.ab3@13361>   MOVE.w varmode,D1
0002B2E4 <AmiBlitz3.ab3@13362>    BNE.w 'pit
0002B2EA <AmiBlitz3.ab3@13363>   ADDQ.w #1,globalvarpointer
0002B2F2 <AmiBlitz3.ab3@13366>   BCLR #$0,globalvarpointer+1
0002B2F6 <AmiBlitz3.ab3@13369>   MOVE.l A2,$A(A3)           ;set type
0002B2FE <AmiBlitz3.ab3@13370>   MOVE.w flagmask,$6(A3)                                  ;??????????
0002B300 <AmiBlitz3.ab3@13371>   MOVEQ.l #$04,D1
0002B308 <AmiBlitz3.ab3@13372>   BTST #$0,flagmask+1
0002B30C <AmiBlitz3.ab3@13373>    BNE.w 'skip3
0002B314 <AmiBlitz3.ab3@13374>   BTST #$1,flagmask+1
0002B318 <AmiBlitz3.ab3@13375>    BNE.w 'skip3
0002B320 <AmiBlitz3.ab3@13376>   CMPI.l #$100,$4(A2)
0002B324 <AmiBlitz3.ab3@13377>    BCC.w 'skip3
0002B328 <AmiBlitz3.ab3@13378>   MOVE.w $8(A2),D1
0002B32E <AmiBlitz3.ab3@13381>   TST.w varmode
0002B332 <AmiBlitz3.ab3@13382>    BEQ.w fvaradd_pit2
0002B334 <AmiBlitz3.ab3@13383>   NEG.w D1
0002B33A <AmiBlitz3.ab3@13384>   ADD.w D1,globalvarpointer
0002B342 <AmiBlitz3.ab3@13385>   MOVE.w globalvarpointer,$4(A3)
0002B344 <AmiBlitz3.ab3@13386>  RTS
0002B34C <AmiBlitz3.ab3@13389>   MOVE.w globalvarpointer,$4(A3)
0002B352 <AmiBlitz3.ab3@13390>   ADD.w D1,globalvarpointer
0002B354 <AmiBlitz3.ab3@13391> RTS
0002B358 <AmiBlitz3.ab3@13396>    BSR.w getparameter2
0002B35E <AmiBlitz3.ab3@13397>   LEA newtypebase,A2
0002B362 <AmiBlitz3.ab3@13398>    BSR.w findtype
0002B366 <AmiBlitz3.ab3@13399>    BNE.w notypeerr
0002B36C <AmiBlitz3.ab3@13402>   CMPA.l #newtype_byte,A2
0002B370 <AmiBlitz3.ab3@13403>    BEQ.w 'byte
0002B376 <AmiBlitz3.ab3@13404>   MOVE.w varmode,D1
0002B37A <AmiBlitz3.ab3@13405>    BNE.w 'pit
0002B380 <AmiBlitz3.ab3@13406>   ADDQ.w #1,globalvarpointer
0002B388 <AmiBlitz3.ab3@13409>   BCLR #$0,globalvarpointer+1
0002B38C <AmiBlitz3.ab3@13412>   MOVE.l A2,$A(A3)              ;set type
0002B394 <AmiBlitz3.ab3@13413>   MOVE.w flagmask,$6(A3)                                  ;??????????
0002B396 <AmiBlitz3.ab3@13415>   MOVEQ.l #$04,D1
0002B39E <AmiBlitz3.ab3@13416>   BTST #$0,flagmask+1
0002B3A2 <AmiBlitz3.ab3@13417>    BNE.w 'skip3
0002B3AA <AmiBlitz3.ab3@13418>   BTST #$1,flagmask+1
0002B3AE <AmiBlitz3.ab3@13419>    BNE.w 'skip3
0002B3B6 <AmiBlitz3.ab3@13420>   CMPI.l #$100,$4(A2)
0002B3BA <AmiBlitz3.ab3@13421>    BCC.w 'skip3
0002B3BE <AmiBlitz3.ab3@13422>   MOVE.w $8(A2),D1
0002B3C4 <AmiBlitz3.ab3@13425>   TST.w varmode
0002B3C8 <AmiBlitz3.ab3@13426> BRA.w fvaradd_pit2
0002B3CE <AmiBlitz3.ab3@13436>   LEA firstglob,A2
0002B3D2 <AmiBlitz3.ab3@13437>    BSR.w findvariable2
0002B3D6 <AmiBlitz3.ab3@13440>   BNE.w 'hendrix
0002B3DC <AmiBlitz3.ab3@13441>   MOVE.b flagmask+1,D1
0002B3E0 <AmiBlitz3.ab3@13442>   MOVE.b $7(A2),D3
0002B3E2 <AmiBlitz3.ab3@13443>   EOR.b D3,D1
0002B3E6 <AmiBlitz3.ab3@13444>    BEQ.w fvarfound
0002B3EA <AmiBlitz3.ab3@13445>    BSR.w findlab
0002B3EE <AmiBlitz3.ab3@13446>  BRA.w 'more
0002B3F6 <AmiBlitz3.ab3@13449>   MOVE.w #$FFFF,varmode           ; was -1
0002B3FC <AmiBlitz3.ab3@13450>   MOVE.w globalvarpointer,-(A7)
0002B406 <AmiBlitz3.ab3@13451>   MOVE.w locvaroff,globalvarpointer
0002B40C <AmiBlitz3.ab3@13452>   LEA firstlocal,A2
0002B414 <AmiBlitz3.ab3@13454>   MOVE.b #1,newvariable
0002B418 <AmiBlitz3.ab3@13456>    BSR.w fvarback
0002B41E <AmiBlitz3.ab3@13458>   CLR.b newvariable
0002B428 <AmiBlitz3.ab3@13460>   MOVE.w globalvarpointer,locvaroff
0002B42E <AmiBlitz3.ab3@13461>   MOVE.w (A7)+,globalvarpointer
0002B430 <AmiBlitz3.ab3@13462> RTS
0002B432 <AmiBlitz3.ab3@13466>   MOVEA.l A2,A3
0002B436 <AmiBlitz3.ab3@13470>   CMP.w #$2E,D0         ;'.'
0002B43A <AmiBlitz3.ab3@13471>    BEQ.w 'skipsh
0002B43E <AmiBlitz3.ab3@13472>   CMP.w #$24,D0         ;'$'
0002B442 <AmiBlitz3.ab3@13473>    BNE.w 'skip4
0002B44A <AmiBlitz3.ab3@13474>   CMPI.l #newtype_string,$A(A3)
0002B44E <AmiBlitz3.ab3@13475>    BNE.w rongtypeerr
0002B452 <AmiBlitz3.ab3@13476>    BSR.w get1bytemain
0002B456 <AmiBlitz3.ab3@13477>  BRA.w 'skip4
0002B45A <AmiBlitz3.ab3@13480>    BSR.w getparameter2
0002B460 <AmiBlitz3.ab3@13481>   LEA newtypebase,A2
0002B464 <AmiBlitz3.ab3@13482>    BSR.w findtype
0002B468 <AmiBlitz3.ab3@13483>    BNE.w notypeerr
0002B46C <AmiBlitz3.ab3@13484>   CMPA.l $A(A3),A2
0002B470 <AmiBlitz3.ab3@13485>    BNE.w rongtypeerr
0002B478 <AmiBlitz3.ab3@13488>   BTST #$0,flagmask+1
0002B47C <AmiBlitz3.ab3@13489>    BEQ.w 'skipz
0002B482 <AmiBlitz3.ab3@13491>   BTST #$0,$7(A3)
0002B486 <AmiBlitz3.ab3@13492>    BEQ.w pointerr
0002B48A <AmiBlitz3.ab3@13495>   MOVEA.l $A(A3),A2
0002B48C <AmiBlitz3.ab3@13496> RTS
0002B48E <AmiBlitz3.ab3@13500>    TST.l D3                                                ;newtype >32kb  .w to .l
0002B492 <AmiBlitz3.ab3@13501>    BEQ.w 'done2a
0002B49C <AmiBlitz3.ab3@13503>    MOVE.l destpointer,loada
0002B4A0 <AmiBlitz3.ab3@13506>  BRA 'done3a
0002B4A4 <AmiBlitz3.ab3@13509>   CMP.w #$9,D3                                             ;_addq_arrays
0002B4A8 <AmiBlitz3.ab3@13510>    BCC.w 'done3a
0002B4AE <AmiBlitz3.ab3@13512>   MOVE.w d3,arrayoffset
0002B4B2 <AmiBlitz3.ab3@13514>   ANDI.w #$7,D3
0002B4B4 <AmiBlitz3.ab3@13515>   LSL.w #8,D3
0002B4B6 <AmiBlitz3.ab3@13516>   LSL.w #1,D3
0002B4BE <AmiBlitz3.ab3@13517>   ANDI.w #$F1FF,addqa0
0002B4C4 <AmiBlitz3.ab3@13518>   OR.w D3,addqa0
0002B4CA <AmiBlitz3.ab3@13519>   MOVE.w addqa0,D1
0002B4CE <AmiBlitz3.ab3@13520>  BRA.w writeword
0002B4D4 <AmiBlitz3.ab3@13524>   CMP.l #$7fff,d3                                          ;>32kb newtypes
0002B4D8 <AmiBlitz3.ab3@13525>   BGT longoffset
0002B4DE <AmiBlitz3.ab3@13527>   MOVE.w D3,leaa0a0+2
0002B4E4 <AmiBlitz3.ab3@13529>   MOVE.w d3,arrayoffset
0002B4EA <AmiBlitz3.ab3@13531>   MOVE.l leaa0a0,D1
0002B4EE <AmiBlitz3.ab3@13532>   BSR.w writelong
0002B4F0 <AmiBlitz3.ab3@13535> RTS
0002B4F4 <AmiBlitz3.ab3@13539>    MOVE.w #$d5fc,d1
0002B4F8 <AmiBlitz3.ab3@13540>    BSR writeword
0002B4FA <AmiBlitz3.ab3@13541>    MOVE.l d3,d1
0002B4FE <AmiBlitz3.ab3@13542>    BSR.w writelong
0002B500 <AmiBlitz3.ab3@13543> RTS
0002B504 <AmiBlitz3.ab3@13547>   Dc.w $b0ad,0000                                          ;cmp.l $0(A5),D0    ;nooptimize
0002B508 <AmiBlitz3.ab3@13550>    BCS.w arrchk3                                           
0002B50E <AmiBlitz3.ab3@13551>    JSR $20000                                              ;jsr 0
0002B514 <AmiBlitz3.ab3@13562>   TST.b fast
0002B518 <AmiBlitz3.ab3@13563>   BEQ 'l1
0002B51A <AmiBlitz3.ab3@13564>    MOVEQ #0,d1                                             ;faster arrays
0002B520 <AmiBlitz3.ab3@13565>    MOVE.w regnum,d2
0002B522 <AmiBlitz3.ab3@13566>    MOVE.w d2,d1
0002B524 <AmiBlitz3.ab3@13567>    LSL.w #8,d1
0002B526 <AmiBlitz3.ab3@13568>    LSL.w #4,d1
0002B528 <AmiBlitz3.ab3@13569>    ADD.w d2,d1
0002B52E <AmiBlitz3.ab3@13570>    OR.l #$4c2d0000,d1
0002B534 <AmiBlitz3.ab3@13571>    TST.w varmode
0002B538 <AmiBlitz3.ab3@13572>    BEQ 'l1a
0002B53C <AmiBlitz3.ab3@13573>    BCLR #16,d1
0002B540 <AmiBlitz3.ab3@13576>    BSR writelong
0002B544 <AmiBlitz3.ab3@13577>    MOVE.w $4(A7),D1
0002B548 <AmiBlitz3.ab3@13578>    BSR.w writeword
0002B54E <AmiBlitz3.ab3@13579>    MOVE.w regnum,D1
0002B550 <AmiBlitz3.ab3@13580>   SUBQ.w #1,D1
0002B552 <AmiBlitz3.ab3@13581>   LSL.w #8,D1
0002B554 <AmiBlitz3.ab3@13582>   LSL.w #1,D1
0002B558 <AmiBlitz3.ab3@13583>   ORI.w #$D080,D1
0002B55E <AmiBlitz3.ab3@13584>   OR.w regnum,D1
0002B562 <AmiBlitz3.ab3@13585>    BSR.w writeword
0002B564 <AmiBlitz3.ab3@13586>  RTS
0002B56A <AmiBlitz3.ab3@13590>   MOVE.w regnum,D2
0002B56E <AmiBlitz3.ab3@13592>   MOVE.w arrmul1(PC),D1
0002B570 <AmiBlitz3.ab3@13593>   OR.w D2,D1
0002B572 <AmiBlitz3.ab3@13594>   SUBQ.w #1,D1
0002B576 <AmiBlitz3.ab3@13595>    BSR.w writeword
0002B57A <AmiBlitz3.ab3@13596>   MOVE.w arrmul2(PC),D1
0002B57C <AmiBlitz3.ab3@13597>   OR.w D2,D1
0002B57E <AmiBlitz3.ab3@13598>   MOVE.w D2,D3
0002B580 <AmiBlitz3.ab3@13599>   SUBQ.w #1,D3
0002B582 <AmiBlitz3.ab3@13600>   LSL.w #8,D3
0002B584 <AmiBlitz3.ab3@13601>   LSL.w #1,D3
0002B586 <AmiBlitz3.ab3@13602>   OR.w D3,D1
0002B58A <AmiBlitz3.ab3@13603>    BSR.w writeword
0002B58E <AmiBlitz3.ab3@13604>   MOVE.w arrmul3(PC),D1
0002B590 <AmiBlitz3.ab3@13605>   MOVE.w D2,D3
0002B592 <AmiBlitz3.ab3@13606>   LSL.w #8,D3
0002B594 <AmiBlitz3.ab3@13607>   LSL.w #1,D3
0002B596 <AmiBlitz3.ab3@13608>   OR.w D3,D1
0002B59A <AmiBlitz3.ab3@13609>    BSR.w pokewda5s
0002B59E <AmiBlitz3.ab3@13610>   MOVE.w $4(A7),D1         ; was 4+0
0002B5A0 <AmiBlitz3.ab3@13611>   ADDQ.w #2,D1
0002B5A4 <AmiBlitz3.ab3@13612>    BSR.w writeword
0002B5A8 <AmiBlitz3.ab3@13614>   MOVE.w arrmul4(PC),D1
0002B5AA <AmiBlitz3.ab3@13615>   MOVE.w D2,D3
0002B5AC <AmiBlitz3.ab3@13616>   SUBQ.w #1,D3
0002B5AE <AmiBlitz3.ab3@13617>   LSL.w #8,D3
0002B5B0 <AmiBlitz3.ab3@13618>   LSL.w #1,D3
0002B5B2 <AmiBlitz3.ab3@13619>   OR.w D3,D1
0002B5B6 <AmiBlitz3.ab3@13620>    BSR.w pokewda5s
0002B5BA <AmiBlitz3.ab3@13621>   MOVE.w $4(A7),D1       ; was 4+0
0002B5BE <AmiBlitz3.ab3@13622>    BSR.w writeword
0002B5C2 <AmiBlitz3.ab3@13624>   MOVE.w arrmul5(PC),D1
0002B5C4 <AmiBlitz3.ab3@13625>   OR.w D2,D1
0002B5C6 <AmiBlitz3.ab3@13626>   SUBQ.w #1,D1
0002B5CA <AmiBlitz3.ab3@13627>    BSR.w writeword
0002B5CE <AmiBlitz3.ab3@13628>   MOVE.w arrmul6(PC),D1
0002B5D0 <AmiBlitz3.ab3@13629>   OR.w D2,D1
0002B5D2 <AmiBlitz3.ab3@13630>   SUBQ.w #1,D1
0002B5D6 <AmiBlitz3.ab3@13631>    BSR.w writeword
0002B5DA <AmiBlitz3.ab3@13632>   MOVE.w arrmul7(PC),D1
0002B5DC <AmiBlitz3.ab3@13633>   OR.w D2,D1
0002B5DE <AmiBlitz3.ab3@13634>   SUBQ.w #1,D1
0002B5E0 <AmiBlitz3.ab3@13635>   MOVE.w D2,D3
0002B5E2 <AmiBlitz3.ab3@13636>   LSL.w #8,D3
0002B5E4 <AmiBlitz3.ab3@13637>   LSL.w #1,D3
0002B5E6 <AmiBlitz3.ab3@13638>   OR.w D3,D1
0002B5EA <AmiBlitz3.ab3@13639>    BSR.w writeword
0002B5EE <AmiBlitz3.ab3@13640>   MOVE.w arrmul8(PC),D1
0002B5F0 <AmiBlitz3.ab3@13641>   MOVE.w D2,D3
0002B5F2 <AmiBlitz3.ab3@13642>   SUBQ.w #1,D3
0002B5F4 <AmiBlitz3.ab3@13643>   LSL.w #8,D3
0002B5F6 <AmiBlitz3.ab3@13644>   LSL.w #1,D3
0002B5F8 <AmiBlitz3.ab3@13645>   OR.w D3,D1
0002B5FC <AmiBlitz3.ab3@13646>    BSR.w writeword
0002B602 <AmiBlitz3.ab3@13648>   MOVE.w regnum,D1
0002B604 <AmiBlitz3.ab3@13649>   SUBQ.w #1,D1
0002B606 <AmiBlitz3.ab3@13650>   LSL.w #8,D1
0002B608 <AmiBlitz3.ab3@13651>   LSL.w #1,D1
0002B60C <AmiBlitz3.ab3@13652>   ORI.w #$D080,D1
0002B612 <AmiBlitz3.ab3@13653>   OR.w regnum,D1
0002B616 <AmiBlitz3.ab3@13654> BRA.w writeword
0002B618 <AmiBlitz3.ab3@13662> arrmul1:   MOVE.l d0,-(a7)                                ;write array access
0002B61A <AmiBlitz3.ab3@13663> arrmul2:   MOVE  d0,d0
0002B61E <AmiBlitz3.ab3@13664> arrmul3:   MULU 0(a5),d0                                  ;mulu   x+2(a5),d1  ;lo*lo
0002B622 <AmiBlitz3.ab3@13665> arrmul4:   MULU 0(a5),d0                                  ;mulu   x(a5),d0    ;hi*lo
0002B624 <AmiBlitz3.ab3@13667> arrmul5:   SWAP d0
0002B626 <AmiBlitz3.ab3@13668> arrmul6:   CLR d0
0002B628 <AmiBlitz3.ab3@13669> arrmul7:   ADD.l d0,d0
0002B62A <AmiBlitz3.ab3@13670> arrmul8:   MOVE.l (a7)+,d0
0002B62E <AmiBlitz3.ab3@13675> listcode1:  Dc.b $24,$6D :              Dc.b $00,$00       ;MOVEA.L $0000(A5),A2      ;pointer to start of array data
0002B632 <AmiBlitz3.ab3@13676> listcode2:  Dc.b $24,$6A,$FF,$E0                           ;MOVEA.L -$0020(A2),A2     ;pointer to current
0002B634 <AmiBlitz3.ab3@13677> listarfix:  Dc.b $50,$4A                                   ;ADDQ.W  #8,A2
0002B63A <AmiBlitz3.ab3@13695>   CLR.l lastoffset_org
0002B640 <AmiBlitz3.ab3@13696>   BTST #$1,$7(A3)
0002B644 <AmiBlitz3.ab3@13697>    BEQ.w 'notarr
0002B64A <AmiBlitz3.ab3@13698>   MOVE.w notshared,D1
0002B64E <AmiBlitz3.ab3@13699>    BNE.w noarrerr
0002B652 <AmiBlitz3.ab3@13700>    BSR.w get1bytemain
0002B656 <AmiBlitz3.ab3@13701>   CMP.w #$29,D0
0002B65A <AmiBlitz3.ab3@13702>    BNE.w 'notalist
0002B660 <AmiBlitz3.ab3@13703>   BTST #$0,$6(A3)
0002B664 <AmiBlitz3.ab3@13704>    BEQ.w nolisterr
0002B66C <AmiBlitz3.ab3@13705>   MOVE.w $4(A3),listcode1+2
0002B670 <AmiBlitz3.ab3@13706>   MOVE.l listcode1(PC),D1
0002B674 <AmiBlitz3.ab3@13707>    BSR.w pokela5s
0002B678 <AmiBlitz3.ab3@13708>   MOVE.l listcode2(PC),D1
0002B67C <AmiBlitz3.ab3@13709>    BSR.w writelong
0002B682 <AmiBlitz3.ab3@13710>   TST.b debugmode
0002B686 <AmiBlitz3.ab3@13711>    BEQ.w 'nolrerr
0002B688 <AmiBlitz3.ab3@13715>   MOVE.l A2,-(A7)
0002B68C <AmiBlitz3.ab3@13716>   MOVE.w #$C315,D1
0002B690 <AmiBlitz3.ab3@13717>    BSR.w Atokejsr
0002B692 <AmiBlitz3.ab3@13718>   MOVEA.l (A7)+,A2
0002B696 <AmiBlitz3.ab3@13721>    MOVE.w listarfix(PC),D1                                 ;addq #8,a2
0002B69A <AmiBlitz3.ab3@13723>    BSR.w writeword
0002B69E <AmiBlitz3.ab3@13724>  BRA.w 'normalar
0002B6A0 <AmiBlitz3.ab3@13727>  'listoff:   Ds.w 1
0002B6A6 <AmiBlitz3.ab3@13730>   CLR.w 'listoff
0002B6AC <AmiBlitz3.ab3@13731>   BTST #$0,$6(A3)
0002B6B0 <AmiBlitz3.ab3@13732>    BEQ.w 'knop
0002B6B8 <AmiBlitz3.ab3@13733>   MOVE.w #$0008,'listoff                            ;adjust size of one element if list.
0002B6BC <AmiBlitz3.ab3@13736>   MOVEM.l A2-A3,-(A7)
0002B6C2 <AmiBlitz3.ab3@13737>   MOVE.w varmode,-(A7)
0002B6C6 <AmiBlitz3.ab3@13738>   MOVE.w $8(A3),-(A7)                                       ;number of dims
0002B6CA <AmiBlitz3.ab3@13739>   MOVE.w $4(A3),-(A7)                                       ;varoff
0002B6CC <AmiBlitz3.ab3@13740>   MOVE.l A2,-(A7)
0002B6D2 <AmiBlitz3.ab3@13741>   MOVE.w flagmask,-(A7)
0002B6DC <AmiBlitz3.ab3@13743>   MOVE.w oldqflag,instringon
0002B6E2 <AmiBlitz3.ab3@13744>   MOVEA.l lastsourcepos,A5
0002B6E6 <AmiBlitz3.ab3@13745>    BSR.w arreval
0002B6EC <AmiBlitz3.ab3@13746>   MOVE.w (A7)+,flagmask
0002B6F4 <AmiBlitz3.ab3@13747>   MOVE.w $8(A7),varmode
0002B6FA <AmiBlitz3.ab3@13748>   TST.b debugmode
0002B6FE <AmiBlitz3.ab3@13749>    BEQ.w 'noszchk
0002B700 <AmiBlitz3.ab3@13753>   MOVEA.l (A7)+,A2
0002B702 <AmiBlitz3.ab3@13754>   MOVEQ.l #$04,D1
0002B70A <AmiBlitz3.ab3@13755>   BTST #$0,flagmask+1                                      ;pointer?
0002B70E <AmiBlitz3.ab3@13756>    BNE.b 'domul                                          ;yes, then use 4 byte mul...
0002B712 <AmiBlitz3.ab3@13757>   MOVE.w $8(A2),D1
0002B716 <AmiBlitz3.ab3@13760>   ADD.w 'listoff(PC),D1
0002B71A <AmiBlitz3.ab3@13761>   BSR.w muld1
0002B720 <AmiBlitz3.ab3@13762>   ADDQ.w #1,regnum
0002B722 <AmiBlitz3.ab3@13765>   ADDQ.w #4,(A7)
0002B726 <AmiBlitz3.ab3@13766>   TST.w $4(A7)
0002B72A <AmiBlitz3.ab3@13767>    BEQ.w 'isglob
0002B72C <AmiBlitz3.ab3@13768>   SUBQ.w #8,(A7)                                           ;range check local array
0002B732 <AmiBlitz3.ab3@13771>   TST.b debugmode
0002B736 <AmiBlitz3.ab3@13772>    BEQ.w 'noer1
0002B73C <AmiBlitz3.ab3@13773>   MOVE.w regnum,D1
0002B73E <AmiBlitz3.ab3@13774>   SUBQ.w #1,D1
0002B740 <AmiBlitz3.ab3@13775>   LSL.w #8,D1
0002B742 <AmiBlitz3.ab3@13776>   LSL.w #1,D1
0002B746 <AmiBlitz3.ab3@13777>   OR.w zarrchk(PC),D1
0002B74A <AmiBlitz3.ab3@13778>    BSR.w pokewda5s                                         ;cmp.l x(a5),D regat
0002B74C <AmiBlitz3.ab3@13779>   MOVE.w (A7),D1
0002B750 <AmiBlitz3.ab3@13780>    BSR.w writeword
0002B754 <AmiBlitz3.ab3@13781>   MOVE.l arrchk2(PC),D1
0002B758 <AmiBlitz3.ab3@13782>    BSR.w writelong
0002B75C <AmiBlitz3.ab3@13783>   MOVE.w #$C309,D1
0002B760 <AmiBlitz3.ab3@13784>    BSR.w Atokejsr
0002B764 <AmiBlitz3.ab3@13787>   SUBQ.w #1,$2(A7)
0002B768 <AmiBlitz3.ab3@13788>    BEQ.w 'ardone
0002B76C <AmiBlitz3.ab3@13789>   CMP.w #$2C,D0
0002B770 <AmiBlitz3.ab3@13790>    BNE.w syntaxerr
0002B776 <AmiBlitz3.ab3@13791>    TST.b fast
0002B77A <AmiBlitz3.ab3@13792>    BNE 'l1
0002B77E <AmiBlitz3.ab3@13793>    BSR.w arrevalchk
0002B782 <AmiBlitz3.ab3@13794>  BRA 'l2
0002B786 <AmiBlitz3.ab3@13797>   BSR arreval
0002B78E <AmiBlitz3.ab3@13800>   MOVE.w $4(A7),varmode
0002B792 <AmiBlitz3.ab3@13801>   BSR.w makeamul
0002B796 <AmiBlitz3.ab3@13802>  BRA.w 'arloop
0002B79A <AmiBlitz3.ab3@13805>   CMP.w #$29,D0
0002B79E <AmiBlitz3.ab3@13806>    BNE.w syntaxerr
0002B7A4 <AmiBlitz3.ab3@13807>   SUBQ.w #1,regnum
0002B7A6 <AmiBlitz3.ab3@13808>   ADDQ.w #6,A7
0002B7AA <AmiBlitz3.ab3@13809>   MOVEM.l (A7)+,A2-A3
0002B7B2 <AmiBlitz3.ab3@13810>   MOVE.w $4(A3),movea5a0+2
0002B7B8 <AmiBlitz3.ab3@13811>   MOVE.l movea5a0,D1
0002B7BC <AmiBlitz3.ab3@13812>    BSR.w pokela5s
0002B7C2 <AmiBlitz3.ab3@13813>   MOVE.w regnum,D1
0002B7C6 <AmiBlitz3.ab3@13814>   ORI.w #$D5C0,D1                                          ;add.l Dr,a2
0002B7CA <AmiBlitz3.ab3@13815>    BSR.w writeword
0002B7D0 <AmiBlitz3.ab3@13816>   BTST #$0,$6(A3)
0002B7D4 <AmiBlitz3.ab3@13817>    BEQ.w 'normalar
0002B7D8 <AmiBlitz3.ab3@13821>   MOVE.w listarfix(PC),D1
0002B7DC <AmiBlitz3.ab3@13822>    BSR.w writeword
0002B7E0 <AmiBlitz3.ab3@13825>   BSR.w get1bytemain
0002B7E6 <AmiBlitz3.ab3@13829>   BTST #$0,$7(A3)
0002B7EA <AmiBlitz3.ab3@13830>    BEQ.w 'noppnt
0002B7EE <AmiBlitz3.ab3@13831>   CMP.w #$5C,D0
0002B7F2 <AmiBlitz3.ab3@13832>    BNE.w 'pmskip
0002B7F6 <AmiBlitz3.ab3@13833>   MOVE.w 'pfix(PC),D1
0002B7FA <AmiBlitz3.ab3@13834>    BSR.w writeword
0002B7FE <AmiBlitz3.ab3@13837>   MOVE.w #$8000,D2
0002B802 <AmiBlitz3.ab3@13838>  BRA.w 'loopml
0002B806 <AmiBlitz3.ab3@13841>   MOVE.w #$C000,D2
0002B80A <AmiBlitz3.ab3@13842>  BRA.w 'loopml
0002B80C <AmiBlitz3.ab3@13845>  'pfix:   Dc.b $24,$52                                   ;MOVEA.L (A2),A2
0002B810 <AmiBlitz3.ab3@13850>   CMP.w #$28,D0
0002B814 <AmiBlitz3.ab3@13851>    BEQ.w noarrerr
0002B81C <AmiBlitz3.ab3@13852>   CMPI.l #$100,$4(A2)
0002B820 <AmiBlitz3.ab3@13853>    BCS.w 'simpvar
0002B826 <AmiBlitz3.ab3@13854>   BTST #$0,$7(A3)
0002B82A <AmiBlitz3.ab3@13855>    BEQ.w 'notap
0002B82E <AmiBlitz3.ab3@13859>   CMP.w #$5C,D0
0002B832 <AmiBlitz3.ab3@13860>    BEQ.w 'notap
0002B834 <AmiBlitz3.ab3@13861>   MOVEQ.l #$00,D2
0002B838 <AmiBlitz3.ab3@13862>  BRA.w 'simpvar2
0002B83C <AmiBlitz3.ab3@13865>   MOVE.w #$8000,D2
0002B844 <AmiBlitz3.ab3@13866>   MOVE.w $4(A3),movea5a0+2
0002B84A <AmiBlitz3.ab3@13867>   MOVE.l movea5a0,D1
0002B84E <AmiBlitz3.ab3@13868>    BSR.w pokela5s                                         ;move.l x(a5),a2
0002B854 <AmiBlitz3.ab3@13870>    TST.b debugmode
0002B858 <AmiBlitz3.ab3@13871>    BEQ.w 'skip
0002B85C <AmiBlitz3.ab3@13872>    MOVE.w #$c320,D1
0002B862 <AmiBlitz3.ab3@13873>    JSR Atokejsr
0002B864 <AmiBlitz3.ab3@13877>   MOVEQ.l #$00,D3
0002B868 <AmiBlitz3.ab3@13880>   CMP.w #$5C,D0
0002B86C <AmiBlitz3.ab3@13881>    BNE.w 'done
0002B874 <AmiBlitz3.ab3@13882>   CMPI.l #$100,$4(A2)
0002B878 <AmiBlitz3.ab3@13883>    BCS.w rongtypeerr
0002B87A <AmiBlitz3.ab3@13884>   MOVE.w D2,-(A7)
0002B87E <AmiBlitz3.ab3@13885>    BSR.w getparameter2
0002B882 <AmiBlitz3.ab3@13886>    BEQ.w syntaxerr
0002B884 <AmiBlitz3.ab3@13887>   ADDQ.w #4,A2
0002B888 <AmiBlitz3.ab3@13888>    BSR.w findvariable2
0002B88C <AmiBlitz3.ab3@13889>    BNE.w noofferr
0002B88E <AmiBlitz3.ab3@13890>   MOVE.w (A7)+,D2
0002B890 <AmiBlitz3.ab3@13891>   MOVEA.l A2,A3                                             ;pointer to offset
0002B894 <AmiBlitz3.ab3@13892>   MOVEA.l $A(A3),A2                                         ;pointer to type
0002B896 <AmiBlitz3.ab3@13893>   MOVEQ #0,d1
0002B89A <AmiBlitz3.ab3@13894>   MOVE.w 4(a3),d1
0002B89C <AmiBlitz3.ab3@13895>   ADD.l d1,d3
0002B8A2 <AmiBlitz3.ab3@13897>   MOVE.l A3,lastoffset_org
0002B8A6 <AmiBlitz3.ab3@13898>   CMP.w #$5B,D0
0002B8AA <AmiBlitz3.ab3@13899>    BNE.w 'realdone
0002B8B0 <AmiBlitz3.ab3@13900>   BTST #$1,$7(A3)                                           ;a array [] in newtype is found
0002B8B4 <AmiBlitz3.ab3@13901>    BEQ.w rongtypeerr
0002B8B8 <AmiBlitz3.ab3@13902>    BSR.w addd0a0
0002B8BC <AmiBlitz3.ab3@13903>   MOVEM.l A2-A3,-(A7)
0002B8C2 <AmiBlitz3.ab3@13904>   MOVE.w varmode,-(A7)
0002B8C8 <AmiBlitz3.ab3@13905>   MOVE.l lastoffset_org,-(A7)
0002B8CE <AmiBlitz3.ab3@13906>   MOVE.w pusha2,D1
0002B8D2 <AmiBlitz3.ab3@13907>   BSR.w writeword
0002B8D4 <AmiBlitz3.ab3@13908>   MOVEQ.l #$03,D2                                          ;was 2 >32kb types
0002B8DE <AmiBlitz3.ab3@13909>   MOVE.l destpointer,deststore
0002B8E4 <AmiBlitz3.ab3@13910>   MOVE.l leftsidetype,-(a7)
0002B8EA <AmiBlitz3.ab3@13911>   MOVE.l rightsidetype,-(a7)
0002B8F0 <AmiBlitz3.ab3@13913>   MOVE.w leftsideflagmask,-(a7)
0002B8F6 <AmiBlitz3.ab3@13914>   MOVE.w rightsideflagmask,-(a7)
0002B8FC <AmiBlitz3.ab3@13915>   CLR.l rightsidetype
0002B902 <AmiBlitz3.ab3@13916>   CLR.l leftsidetype
0002B908 <AmiBlitz3.ab3@13917>   CLR.w leftsideflagmask
0002B90E <AmiBlitz3.ab3@13918>   CLR.w rightsideflagmask
0002B912 <AmiBlitz3.ab3@13919>   BSR.w eval
0002B918 <AmiBlitz3.ab3@13920>   MOVE.w (a7)+,rightsideflagmask
0002B91E <AmiBlitz3.ab3@13921>   MOVE.w (a7)+,leftsideflagmask
0002B924 <AmiBlitz3.ab3@13922>   MOVE.l (a7)+,rightsidetype
0002B92A <AmiBlitz3.ab3@13923>   MOVE.l (a7)+,leftsidetype
0002B92E <AmiBlitz3.ab3@13924>   CMP.w #$5D,D0
0002B932 <AmiBlitz3.ab3@13925>    BNE.w syntaxerr
0002B938 <AmiBlitz3.ab3@13926>   TST.b fast                                               ;a2,-(a7) array
0002B93C <AmiBlitz3.ab3@13927>   BEQ 'loop0_l10
0002B942 <AmiBlitz3.ab3@13933>   MOVE.l destpointer,d1
0002B948 <AmiBlitz3.ab3@13934>   SUB.l deststore,d1
0002B94E <AmiBlitz3.ab3@13935>   CMP.l #4,d1
0002B952 <AmiBlitz3.ab3@13936>   BNE 'loop0_l10
0002B958 <AmiBlitz3.ab3@13937>   MOVE.l destpointer,a4
0002B95E <AmiBlitz3.ab3@13938>   MOVE.l -4(a4),-6(a4)
0002B964 <AmiBlitz3.ab3@13939>   SUBQ.l #2,destpointer
0002B96A <AmiBlitz3.ab3@13940>   CLR.l imm_addr
0002B970 <AmiBlitz3.ab3@13941>   CLR.l load_var_addr
0002B974 <AmiBlitz3.ab3@13942>  BRA 'loop0_l20
0002B97A <AmiBlitz3.ab3@13945>   MOVE.w pulla2,D1
0002B97E <AmiBlitz3.ab3@13946>    BSR.w writeword
0002B984 <AmiBlitz3.ab3@13949>   MOVE.l (A7)+,lastoffset_org
0002B98A <AmiBlitz3.ab3@13950>   MOVE.w (A7)+,varmode
0002B98E <AmiBlitz3.ab3@13951>   MOVEM.l (A7)+,A2-A3
0002B994 <AmiBlitz3.ab3@13957>   TST.w debugmode
0002B998 <AmiBlitz3.ab3@13958>    BEQ.b 'nobchk
0002B99C <AmiBlitz3.ab3@13959>   MOVE.w $8(A3),D1
0002B9A0 <AmiBlitz3.ab3@13960>    BEQ.b 'nobchk                                   ;no [0] checks!
0002B9A6 <AmiBlitz3.ab3@13964>   MOVE.w D1,brchkcode+2
0002B9AC <AmiBlitz3.ab3@13965>   MOVE.w regnum,D1
0002B9AE <AmiBlitz3.ab3@13966>   LSL.w #8,D1
0002B9B0 <AmiBlitz3.ab3@13967>   LSL.w #1,D1
0002B9B4 <AmiBlitz3.ab3@13968>   OR.w brchkcode0(PC),D1
0002B9BA <AmiBlitz3.ab3@13969>   MOVE.w D1,brchkcode
0002B9BE <AmiBlitz3.ab3@13970>   MOVE.l brchkcode(PC),D1
0002B9C2 <AmiBlitz3.ab3@13971>    BSR.w writelong
0002B9C6 <AmiBlitz3.ab3@13972>   MOVE.l brchkcode+4(PC),D1
0002B9CA <AmiBlitz3.ab3@13973>    BSR.w writelong
0002B9CE <AmiBlitz3.ab3@13974>   MOVE.w brchkcode+8(PC),D1
0002B9D2 <AmiBlitz3.ab3@13975>    BSR.w writeword
0002B9D4 <AmiBlitz3.ab3@13978>   MOVEQ.l #$04,D1
0002B9DA <AmiBlitz3.ab3@13979>   BTST #$0,$7(A3)
0002B9DE <AmiBlitz3.ab3@13980>    BNE.w 'dothemul
0002B9E2 <AmiBlitz3.ab3@13981>   MOVE.w $8(A2),D1
0002B9E6 <AmiBlitz3.ab3@13984>   BSR.w muld1
0002B9EC <AmiBlitz3.ab3@13985>   MOVE.w addrega2,D1
0002B9F2 <AmiBlitz3.ab3@13986>   OR.w regnum,D1
0002B9F6 <AmiBlitz3.ab3@13987>    OR.w #$100,d1                                           ;>32kb types
0002B9FA <AmiBlitz3.ab3@13988>    BSR.w writeword
0002B9FE <AmiBlitz3.ab3@13989>    BSR.w get1bytemain
0002BA00 <AmiBlitz3.ab3@13990>   MOVEQ.l #$00,D3
0002BA04 <AmiBlitz3.ab3@13991>   MOVE.w #$8000,D2
0002BA0A <AmiBlitz3.ab3@13994>   BTST #$0,$7(A3)
0002BA0E <AmiBlitz3.ab3@13995>    BNE.w 'pointer
0002BA12 <AmiBlitz3.ab3@13996>  BRA.w 'loop0
0002BA16 <AmiBlitz3.ab3@13999>  CMP.w #$5C,D0
0002BA1A <AmiBlitz3.ab3@14000>    BNE.w 'done3
0002BA1C <AmiBlitz3.ab3@14001>   TST.w D3
0002BA20 <AmiBlitz3.ab3@14002>    BNE.w 'pskip
0002BA26 <AmiBlitz3.ab3@14003>   MOVE.w movea0,D1
0002BA2A <AmiBlitz3.ab3@14004>    BSR.w writeword
0002BA2E <AmiBlitz3.ab3@14005>  BRA.w 'pmore
0002BA34 <AmiBlitz3.ab3@14008>   MOVE.w D3,movea0a0+2
0002BA3A <AmiBlitz3.ab3@14009>   MOVE.l movea0a0,D1
0002BA3E <AmiBlitz3.ab3@14010>    BSR.w writelong
0002BA44 <AmiBlitz3.ab3@14013>   BTST #$2,$7(A3)
0002BA48 <AmiBlitz3.ab3@14014>    BEQ.w 'loopml
0002BA4E <AmiBlitz3.ab3@14015>   MOVE.l adda0a0,D1
0002BA52 <AmiBlitz3.ab3@14016>    BSR.w writelong
0002BA56 <AmiBlitz3.ab3@14017>  BRA.w 'loopml
0002BA5A <AmiBlitz3.ab3@14020>   BSET #$E,D2
0002BA60 <AmiBlitz3.ab3@14021>   BTST #$2,$7(A3)
0002BA64 <AmiBlitz3.ab3@14022>    BNE.w 'done
0002BA68 <AmiBlitz3.ab3@14023>   BSET #$D,D2
0002BA70 <AmiBlitz3.ab3@14026>   CMPI.l #$100,$4(A2)
0002BA74 <AmiBlitz3.ab3@14027>    BCC.w 'done2
0002BA78 <AmiBlitz3.ab3@14028>   MOVE.b $7(A2),D2
0002BA7C <AmiBlitz3.ab3@14031>  BRA.w addd0a0
0002BA80 <AmiBlitz3.ab3@14034>   MOVE.w $6(A2),D2
0002BA84 <AmiBlitz3.ab3@14037>   MOVE.w $4(A3),D3
0002BA8A <AmiBlitz3.ab3@14038>   BTST #$0,$7(A3)
0002BA8E <AmiBlitz3.ab3@14039>    BEQ.w 'nopoint
0002BA92 <AmiBlitz3.ab3@14040>   BSET #$E,D2
0002BA94 <AmiBlitz3.ab3@14043> RTS
0002BA98 <AmiBlitz3.ab3@14047> brchkcode0:  Dc.b $B0,$7C,$00,$00                          ;CMP.W   #$0000,D0
0002BA9C <AmiBlitz3.ab3@14048> brchkcode:   Dc.b $B0,$7C :             Dc.b $00,$00       ;CMP.W   #$0000,D0
0002BA9E <AmiBlitz3.ab3@14049>              Dc.b $65,$04                                  ;BCS.B   brchkcode_ok
0002BAA0 <AmiBlitz3.ab3@14050>              Dc.b $70,$02                                  ;MOVEQ   #$02,D0
0002BAA2 <AmiBlitz3.ab3@14051>              Dc.b $4E,$40                                  ;TRAP    #00
0002BAA8 <AmiBlitz3.ab3@14059>   TST.w varmode
0002BAAC <AmiBlitz3.ab3@14060>    BEQ.w writeword
0002BAB0 <AmiBlitz3.ab3@14061>   BCLR #$0,D1
0002BAB4 <AmiBlitz3.ab3@14062> BRA.w writeword
0002BABA <AmiBlitz3.ab3@14065>   TST.w varmode
0002BABE <AmiBlitz3.ab3@14066>    BEQ.w writeword
0002BAC2 <AmiBlitz3.ab3@14067>   BCLR #$9,D1
0002BAC6 <AmiBlitz3.ab3@14068> BRA.w writeword
0002BACC <AmiBlitz3.ab3@14071>   TST.w proceduremode
0002BAD0 <AmiBlitz3.ab3@14072>    BEQ.w writelong
0002BAD4 <AmiBlitz3.ab3@14073>   BCLR #$19,D1
0002BAD8 <AmiBlitz3.ab3@14074> BRA.w writelong
0002BADE <AmiBlitz3.ab3@14077>   TST.w varmode
0002BAE2 <AmiBlitz3.ab3@14078>   BEQ.w writelong
0002BAE6 <AmiBlitz3.ab3@14079>   BCLR #$10,D1
0002BAEC <AmiBlitz3.ab3@14087>   ADDQ.l #1,destpointer                                   ; this is a copy of the writewordcode
0002BAF4 <AmiBlitz3.ab3@14088>   BCLR #$0,destpointer+3
0002BAFA <AmiBlitz3.ab3@14089>   MOVEA.l destpointer,A4
0002BB00 <AmiBlitz3.ab3@14090>   CMPA.l destbufferend,A4
0002BB04 <AmiBlitz3.ab3@14091>    BCC.w 'overa
0002BB06 <AmiBlitz3.ab3@14092>   MOVE.l D1,(A4)+
0002BB0C <AmiBlitz3.ab3@14095>   MOVE.l A4,destpointer
0002BB10 <AmiBlitz3.ab3@14096>   CMPA.l bigpc(PC),A4
0002BB14 <AmiBlitz3.ab3@14097>    BHI.w 'nbpa
0002BB16 <AmiBlitz3.ab3@14098>  RTS
0002BB1C <AmiBlitz3.ab3@14101>   TST.w cfetchmode                                         ; to complete the subroutine
0002BB20 <AmiBlitz3.ab3@14102>   BNE.w 'nbp2a                                             ;
0002BB26 <AmiBlitz3.ab3@14103>   MOVE.l A4,bigpc                                          ;
0002BB28 <AmiBlitz3.ab3@14106>  RTS
0002BB30 <AmiBlitz3.ab3@14109>   MOVE.w #$FFFF,dontwrite_nomemleft                                  ;#-1 org source
0002BB36 <AmiBlitz3.ab3@14110>   CLR.b fast
0002BB3C <AmiBlitz3.ab3@14111>   CLR.b fpu
0002BB42 <AmiBlitz3.ab3@14112>   CLR.b iee                                                ; in writeword this is #2
0002BB44 <AmiBlitz3.ab3@14113>   ADDQ.w #4,A4
0002BB48 <AmiBlitz3.ab3@14114> BRA.w 'msa
0002BB4E <AmiBlitz3.ab3@14133>   ADDQ.l #1,destpointer
0002BB56 <AmiBlitz3.ab3@14134>   BCLR #$0,destpointer+3
0002BB5C <AmiBlitz3.ab3@14135>   MOVEA.l destpointer,A4
0002BB62 <AmiBlitz3.ab3@14136>   CMPA.l destbufferend,A4
0002BB66 <AmiBlitz3.ab3@14137>    BCC.w 'over
0002BB68 <AmiBlitz3.ab3@14138>   MOVE.w D1,(A4)+
0002BB6E <AmiBlitz3.ab3@14141>   MOVE.l A4,destpointer
0002BB72 <AmiBlitz3.ab3@14142>   CMPA.l bigpc(PC),A4
0002BB76 <AmiBlitz3.ab3@14143>    BHI.w 'nbp
0002BB78 <AmiBlitz3.ab3@14144>  RTS
0002BB7E <AmiBlitz3.ab3@14147>   TST.w cfetchmode
0002BB82 <AmiBlitz3.ab3@14148>   BNE.w 'nbp2
0002BB88 <AmiBlitz3.ab3@14149>   MOVE.l A4,bigpc
0002BB8A <AmiBlitz3.ab3@14152>  RTS
0002BB92 <AmiBlitz3.ab3@14155>   MOVE.w #$FFFF,dontwrite_nomemleft                                  ;#-1 org source
0002BB94 <AmiBlitz3.ab3@14156>   ADDQ.w #2,A4
0002BB9A <AmiBlitz3.ab3@14157>   CLR.b fast
0002BBA0 <AmiBlitz3.ab3@14158>   CLR.b fpu
0002BBA6 <AmiBlitz3.ab3@14159>   CLR.b iee
0002BBAA <AmiBlitz3.ab3@14160> BRA.w 'ms
0002BBB0 <AmiBlitz3.ab3@14164>   MOVEA.l destpointer,A4
0002BBB6 <AmiBlitz3.ab3@14165>   CMPA.l destbufferend,A4
0002BBBA <AmiBlitz3.ab3@14166>    BCC.w 'over
0002BBBC <AmiBlitz3.ab3@14167>   MOVE.b D1,(A4)+
0002BBC2 <AmiBlitz3.ab3@14170>   MOVE.l A4,destpointer
0002BBC6 <AmiBlitz3.ab3@14171>   CMPA.l bigpc(PC),A4
0002BBCA <AmiBlitz3.ab3@14172>    BHI.w 'nbp
0002BBCC <AmiBlitz3.ab3@14173>  RTS
0002BBD2 <AmiBlitz3.ab3@14176>   TST.w cfetchmode
0002BBD6 <AmiBlitz3.ab3@14177>    BNE.w 'nbp2
0002BBDC <AmiBlitz3.ab3@14178>   MOVE.l A4,bigpc
0002BBDE <AmiBlitz3.ab3@14181>  RTS
0002BBE6 <AmiBlitz3.ab3@14184>   MOVE.w #-1,dontwrite_nomemleft
0002BBE8 <AmiBlitz3.ab3@14185>   ADDQ.w #1,A4
0002BBEE <AmiBlitz3.ab3@14186>   CLR.b fast
0002BBF4 <AmiBlitz3.ab3@14187>   CLR.b fpu
0002BBFA <AmiBlitz3.ab3@14188>   CLR.b iee
0002BBFE <AmiBlitz3.ab3@14189> BRA.w 'ms
0002BC02 <AmiBlitz3.ab3@14192> bigpc:   Ds.l 1
0002BC04 <AmiBlitz3.ab3@14196>   MOVE.w (A0)+,D1
0002BC08 <AmiBlitz3.ab3@14197>   BSR.w writeword
0002BC0A <AmiBlitz3.ab3@14200>     CMPA.l A1,A0
0002BC0E <AmiBlitz3.ab3@14201>     BCC.w 'done
0002BC10 <AmiBlitz3.ab3@14202>       MOVE.w (A0)+,D1
0002BC14 <AmiBlitz3.ab3@14203>       BSR.w writeword
0002BC18 <AmiBlitz3.ab3@14204>  BRA.w 'loop
0002BC1A <AmiBlitz3.ab3@14207> RTS
0002BC1C <AmiBlitz3.ab3@14211>   MOVE.w (A0)+,D1
0002BC20 <AmiBlitz3.ab3@14212>   BSR.w writeword
0002BC22 <AmiBlitz3.ab3@14213>   CMPA.l A1,A0
0002BC26 <AmiBlitz3.ab3@14214>   BCS.w pokecode2
0002BC28 <AmiBlitz3.ab3@14215> RTS
0002BC2E <AmiBlitz3.ab3@14222>   TST.b iniffcommand
0002BC32 <AmiBlitz3.ab3@14223>   BEQ 'l1
0002BC36 <AmiBlitz3.ab3@14224>     MOVE.w #$4880,D1
0002BC3C <AmiBlitz3.ab3@14225>     OR.w regnum,D1
0002BC40 <AmiBlitz3.ab3@14226>     BSR writeword
0002BC42 <AmiBlitz3.ab3@14230> RTS
0002BC46 <AmiBlitz3.ab3@14236>   BSR.w convert_byte_to_word
0002BC4C <AmiBlitz3.ab3@14240>   TST.b iee
0002BC50 <AmiBlitz3.ab3@14241>   BEQ 'old
0002BC54 <AmiBlitz3.ab3@14242>   CMP.b #5,d2
0002BC58 <AmiBlitz3.ab3@14243>   BEQ wtof
0002BC5C <AmiBlitz3.ab3@14247>   MOVE.w #$48C0,D1
0002BC62 <AmiBlitz3.ab3@14248>   OR.w regnum,D1
0002BC66 <AmiBlitz3.ab3@14249> BRA.w writeword
0002BC68 <AmiBlitz3.ab3@14253>   MOVEQ #0,d0
0002BC6E <AmiBlitz3.ab3@14254>   MOVE.w regnum,d0
0002BC70 <AmiBlitz3.ab3@14255>   ASL.l #7,d0
0002BC76 <AmiBlitz3.ab3@14256>   MOVE.l #$f2005000,d1
0002BC78 <AmiBlitz3.ab3@14257>   OR.l d0,d1
0002BC7A <AmiBlitz3.ab3@14258>   ASL.l #1,d0
0002BC7C <AmiBlitz3.ab3@14259>   ASL.l #8,d0
0002BC7E <AmiBlitz3.ab3@14260>   OR.l d0,d1
0002BC82 <AmiBlitz3.ab3@14261> BRA writelong
0002BC86 <AmiBlitz3.ab3@14265>   BSR.w convert_byte_to_word
0002BC8A <AmiBlitz3.ab3@14268>   MOVE.w #$4840,D1
0002BC90 <AmiBlitz3.ab3@14269>   OR.w regnum,D1
0002BC94 <AmiBlitz3.ab3@14270>    BSR.w writeword
0002BC98 <AmiBlitz3.ab3@14271>   MOVE.w #$4240,D1
0002BC9E <AmiBlitz3.ab3@14272>   OR.w regnum,D1
0002BCA2 <AmiBlitz3.ab3@14273> BRA.w writeword
0002BCA6 <AmiBlitz3.ab3@14277>   CMP.w #$ffdc,d1
0002BCAA <AmiBlitz3.ab3@14278>   BNE 'negfpu
0002BCAC <AmiBlitz3.ab3@14279>   MOVEQ #0,d0
0002BCB2 <AmiBlitz3.ab3@14280>   MOVE.w regnum,d0
0002BCB4 <AmiBlitz3.ab3@14281>   ASL.l #7,d0
0002BCBA <AmiBlitz3.ab3@14282>   MOVE.l #$f2004000,d1
0002BCBC <AmiBlitz3.ab3@14283>   OR.l d0,d1
0002BCBE <AmiBlitz3.ab3@14284>   ASL.l #1,d0
0002BCC0 <AmiBlitz3.ab3@14285>   ASL.l #8,d0
0002BCC2 <AmiBlitz3.ab3@14286>   OR.l d0,d1
0002BCC6 <AmiBlitz3.ab3@14287>  BRA writelong
0002BCC8 <AmiBlitz3.ab3@14290>   MOVEQ #0,d1
0002BCCE <AmiBlitz3.ab3@14291>   MOVE.w regnum,d1                                         ;fpu neg
0002BCD0 <AmiBlitz3.ab3@14292>   ASL.l #7,d1
0002BCD6 <AmiBlitz3.ab3@14293>   OR.l #$f200001a,d1
0002BCD8 <AmiBlitz3.ab3@14294>   MOVE.l d0,-(a7)
0002BCDA <AmiBlitz3.ab3@14295>   MOVEQ #0,d0
0002BCE0 <AmiBlitz3.ab3@14296>   MOVE.w regnum,d0
0002BCE2 <AmiBlitz3.ab3@14297>   ASL.l #8,d0
0002BCE4 <AmiBlitz3.ab3@14298>   ASL.l #2,d0
0002BCE6 <AmiBlitz3.ab3@14299>   OR.l d0,d1
0002BCE8 <AmiBlitz3.ab3@14300>   MOVE.l (a7)+,d0
0002BCEC <AmiBlitz3.ab3@14301> BRA writelong
0002BCF2 <AmiBlitz3.ab3@14307>    TST.b iee
0002BCF6 <AmiBlitz3.ab3@14308>    BNE wtof
0002BCFA <AmiBlitz3.ab3@14310>    BSR.w convert_byte_to_long
0002BCFE <AmiBlitz3.ab3@14313>    MOVE.w #$FFDC,D1
0002BD04 <AmiBlitz3.ab3@14317>    TST.b iee
0002BD08 <AmiBlitz3.ab3@14318>    BNE ltof
0002BD0E <AmiBlitz3.ab3@14320>    MOVE.w D1,libjsr+2
0002BD12 <AmiBlitz3.ab3@14321>    BSR.w savereg
0002BD14 <AmiBlitz3.ab3@14322>   MOVE.l D4,D1
0002BD18 <AmiBlitz3.ab3@14323>    BSR.w pokemovem
0002BD1C <AmiBlitz3.ab3@14324>   MOVE.w #$C900,D1      ; #getffpbase,
0002BD20 <AmiBlitz3.ab3@14325>    BSR.w Atokejsr
0002BD24 <AmiBlitz3.ab3@14326>    BSR.w ritetod0
0002BD2A <AmiBlitz3.ab3@14327>   MOVE.l libjsr,D1
0002BD2E <AmiBlitz3.ab3@14328>    BSR.w writelong
0002BD32 <AmiBlitz3.ab3@14329>    BSR.w ritefromd0
0002BD34 <AmiBlitz3.ab3@14330>   MOVE.l D5,D1
0002BD38 <AmiBlitz3.ab3@14331> BRA.w pokemovem
0002BD3A <AmiBlitz3.ab3@14333> RTS ; dead old code
0002BD3E <AmiBlitz3.ab3@14336>   MOVE.w #$C317,D1     ;#wtobover
0002BD44 <AmiBlitz3.ab3@14338>   TST.b typecheck
0002BD48 <AmiBlitz3.ab3@14339>   BEQ 'l1
0002BD4E <AmiBlitz3.ab3@14340>    TST.b notypecheck
0002BD52 <AmiBlitz3.ab3@14341>    BNE 'l1
0002BD58 <AmiBlitz3.ab3@14342>    TST.l lasttoken
0002BD5E <AmiBlitz3.ab3@14352>   TST.b debugmode
0002BD62 <AmiBlitz3.ab3@14353>    BEQ.w 'skip
0002BD6A <AmiBlitz3.ab3@14354>   BTST #$7,overflowcheck      ;;*** was 7! overflow checking?
0002BD6E <AmiBlitz3.ab3@14355>    BEQ.w 'skip
0002BD74 <AmiBlitz3.ab3@14357>   TST.w cfetchmode
0002BD78 <AmiBlitz3.ab3@14358>    BNE.w 'skip
0002BD7E <AmiBlitz3.ab3@14360>   TST.w regnum
0002BD82 <AmiBlitz3.ab3@14361>    BEQ.w 'isok
0002BD84 <AmiBlitz3.ab3@14362>   MOVE.w D1,-(A7)
0002BD88 <AmiBlitz3.ab3@14363>   MOVE.w 'code1(PC),D1
0002BD8C <AmiBlitz3.ab3@14364>    BSR.w writeword
0002BD92 <AmiBlitz3.ab3@14365>   MOVE.w regnum,D1
0002BD96 <AmiBlitz3.ab3@14366>   OR.w 'code3(PC),D1
0002BD9A <AmiBlitz3.ab3@14367>    BSR.w writeword
0002BD9C <AmiBlitz3.ab3@14368>   MOVE.w (A7)+,D1
0002BDA0 <AmiBlitz3.ab3@14369>    BSR.w 'isok
0002BDA4 <AmiBlitz3.ab3@14370>   MOVE.w 'code2(PC),D1
0002BDA8 <AmiBlitz3.ab3@14371>  BRA.w writeword
0002BDAC <AmiBlitz3.ab3@14374>   MOVEM.l D0-D7/A0-A6,-(A7)
0002BDB0 <AmiBlitz3.ab3@14375>    BSR.w Atokejsr
0002BDB4 <AmiBlitz3.ab3@14376>   MOVEM.l (A7)+,D0-D7/A0-A6
0002BDB6 <AmiBlitz3.ab3@14379>  RTS
0002BDB8 <AmiBlitz3.ab3@14382>   MOVE.l D0,-(A7)
0002BDBA <AmiBlitz3.ab3@14385>   MOVE.l (A7)+,D0
0002BDBC <AmiBlitz3.ab3@14388>   MOVE.l D0,D0
0002BDC0 <AmiBlitz3.ab3@14393>   BSR.w convert_word_to_long
0002BDC6 <AmiBlitz3.ab3@14395>   TST.b iee
0002BDCA <AmiBlitz3.ab3@14396>   BEQ 'old
0002BDCE <AmiBlitz3.ab3@14397>   CMP.b #5,d2
0002BDD2 <AmiBlitz3.ab3@14398>   BNE 'old
0002BDD4 <AmiBlitz3.ab3@14399>  RTS
0002BDD8 <AmiBlitz3.ab3@14403> BRA.w bytetof2
0002BDDC <AmiBlitz3.ab3@14406>   MOVE.w #$C316,D1      ; #ltobover
0002BDE2 <AmiBlitz3.ab3@14408>   TST.b typecheck
0002BDE6 <AmiBlitz3.ab3@14409>   BEQ 'l1
0002BDEC <AmiBlitz3.ab3@14410>   TST.b peekaddrsize
0002BDF0 <AmiBlitz3.ab3@14411>   BNE 'l1
0002BDF6 <AmiBlitz3.ab3@14412>   TST.b notypecheck
0002BDFA <AmiBlitz3.ab3@14413>   BNE 'l1
0002BE00 <AmiBlitz3.ab3@14414>   TST.l lasttoken
0002BE04 <AmiBlitz3.ab3@14421> BRA.w overchk
0002BE08 <AmiBlitz3.ab3@14424>   MOVE.w #$C318,D1      ; #ltowover,
0002BE0E <AmiBlitz3.ab3@14426>   TST.b typecheck
0002BE12 <AmiBlitz3.ab3@14427>   BEQ 'l1
0002BE18 <AmiBlitz3.ab3@14428>   TST.b peekaddrsize
0002BE1C <AmiBlitz3.ab3@14429>   BNE 'l1
0002BE22 <AmiBlitz3.ab3@14430>   TST.b notypecheck
0002BE26 <AmiBlitz3.ab3@14431>   BNE 'l1
0002BE2C <AmiBlitz3.ab3@14432>   TST.l lasttoken
0002BE30 <AmiBlitz3.ab3@14439> BRA.w overchk
0002BE34 <AmiBlitz3.ab3@14442>   MOVE.w #$C318,D1      ;#ltowover,
0002BE3A <AmiBlitz3.ab3@14444>   TST.b typecheck
0002BE3E <AmiBlitz3.ab3@14445>   BEQ 'l1
0002BE44 <AmiBlitz3.ab3@14446>   TST.b notypecheck
0002BE48 <AmiBlitz3.ab3@14447>   BNE 'l1
0002BE4E <AmiBlitz3.ab3@14448>   TST.l lasttoken
0002BE52 <AmiBlitz3.ab3@14455>   BSR.w overchk
0002BE56 <AmiBlitz3.ab3@14456> BRA.w convert_word_to_quick
0002BE5A <AmiBlitz3.ab3@14459> BRA.w bytetof2
0002BE5C <AmiBlitz3.ab3@14461> RTS ; dead old code
0002BE60 <AmiBlitz3.ab3@14464>   MOVE.w #$C319,D1         ; #qtobover,
0002BE66 <AmiBlitz3.ab3@14466>   TST.b typecheck
0002BE6A <AmiBlitz3.ab3@14467>   BEQ 'l1
0002BE70 <AmiBlitz3.ab3@14468>   TST.b notypecheck
0002BE74 <AmiBlitz3.ab3@14469>   BNE 'l1
0002BE7A <AmiBlitz3.ab3@14470>   TST.l lasttoken
0002BE7E <AmiBlitz3.ab3@14477>   BSR.w overchk
0002BE82 <AmiBlitz3.ab3@14480>   MOVE.w #$4240,D1
0002BE88 <AmiBlitz3.ab3@14481>   OR.w regnum,D1
0002BE8C <AmiBlitz3.ab3@14482>   BSR.w writeword
0002BE90 <AmiBlitz3.ab3@14483>   MOVE.w #$4840,D1
0002BE96 <AmiBlitz3.ab3@14484>   OR.w regnum,D1
0002BE9A <AmiBlitz3.ab3@14485> BRA.w writeword
0002BE9E <AmiBlitz3.ab3@14488> BRA.w quicktob2
0002BEA2 <AmiBlitz3.ab3@14491>   BSR.w quicktob2
0002BEA6 <AmiBlitz3.ab3@14492> BRA.w convert_word_to_long
0002BEA8 <AmiBlitz3.ab3@14497>   MOVEQ #0,d0
0002BEAE <AmiBlitz3.ab3@14498>   MOVE.w regnum,d0
0002BEB0 <AmiBlitz3.ab3@14499>   ASL.l #7,d0
0002BEB6 <AmiBlitz3.ab3@14500>   MOVE.l #$f2004000,d1
0002BEB8 <AmiBlitz3.ab3@14501>   OR.l d0,d1
0002BEBA <AmiBlitz3.ab3@14502>   ASL.l #1,d0
0002BEBC <AmiBlitz3.ab3@14503>   ASL.l #8,d0
0002BEBE <AmiBlitz3.ab3@14504>   OR.l d0,d1
0002BEC2 <AmiBlitz3.ab3@14505>   BSR writelong
0002BEC8 <AmiBlitz3.ab3@14506>   MOVE.w regnum,d0
0002BECA <AmiBlitz3.ab3@14507>   ASL.l #7,d0
0002BED0 <AmiBlitz3.ab3@14508>   MOVE.l #$f23c4423,d1                                     ;fmul.s #1/65536,fpreg
0002BED2 <AmiBlitz3.ab3@14509>   OR.w d0,d1
0002BED6 <AmiBlitz3.ab3@14510>   BSR writelong
0002BEDC <AmiBlitz3.ab3@14511>   MOVE.l #$37800000,d1
0002BEE0 <AmiBlitz3.ab3@14512>   BSR writelong
0002BEE2 <AmiBlitz3.ab3@14513> RTS
0002BEE8 <AmiBlitz3.ab3@14520>   TST.b iee
0002BEEC <AmiBlitz3.ab3@14521>   BNE qtof
0002BEF0 <AmiBlitz3.ab3@14523>   MOVE.w #$D300,D1       ; #qutofl,
0002BEF2 <AmiBlitz3.ab3@14526>   MOVE.w D1,-(A7)
0002BEF6 <AmiBlitz3.ab3@14527>    BSR.w savereg
0002BEF8 <AmiBlitz3.ab3@14528>   MOVE.l D4,D1
0002BEFC <AmiBlitz3.ab3@14529>    BSR.w pokemovem
0002BF00 <AmiBlitz3.ab3@14531>    BSR.w ritetod0
0002BF02 <AmiBlitz3.ab3@14532>   MOVE.w (A7)+,D1
0002BF06 <AmiBlitz3.ab3@14533>    BSR.w Atokejsr
0002BF0A <AmiBlitz3.ab3@14535>    BSR.w ritefromd0
0002BF0C <AmiBlitz3.ab3@14536>   MOVE.l D5,D1
0002BF10 <AmiBlitz3.ab3@14537> BRA.w pokemovem
0002BF12 <AmiBlitz3.ab3@14539> RTS ; dead old code
0002BF18 <AmiBlitz3.ab3@14543>   TST.b typecheck
0002BF1C <AmiBlitz3.ab3@14544>   BEQ 'l1
0002BF22 <AmiBlitz3.ab3@14545>   TST.b notypecheck
0002BF26 <AmiBlitz3.ab3@14546>   BNE 'l1
0002BF2C <AmiBlitz3.ab3@14547>   TST.l lasttoken
0002BF32 <AmiBlitz3.ab3@14553>   TST.b iee
0002BF36 <AmiBlitz3.ab3@14554>   BNE ftol
0002BF3A <AmiBlitz3.ab3@14556>   MOVE.w #$C31A,D1       ; #ftobover
0002BF3E <AmiBlitz3.ab3@14557>   BSR.w overchk
0002BF42 <AmiBlitz3.ab3@14559>   BSR.w floattolong2
0002BF46 <AmiBlitz3.ab3@14560> BRA.w convert_long_to_byte
0002BF48 <AmiBlitz3.ab3@14562> RTS ; dead old code
0002BF4E <AmiBlitz3.ab3@14566>   TST.b typecheck
0002BF52 <AmiBlitz3.ab3@14567>   BEQ 'l1
0002BF58 <AmiBlitz3.ab3@14568>   TST.b notypecheck
0002BF5C <AmiBlitz3.ab3@14569>   BNE 'l1
0002BF62 <AmiBlitz3.ab3@14570>   TST.l lasttoken
0002BF68 <AmiBlitz3.ab3@14576>   TST.b iee
0002BF6C <AmiBlitz3.ab3@14577>   BNE ftol
0002BF70 <AmiBlitz3.ab3@14579>   MOVE.w #$C31B,D1         ; #ftowover
0002BF74 <AmiBlitz3.ab3@14580>   BSR.w overchk
0002BF78 <AmiBlitz3.ab3@14582>   BSR.w floattolong2
0002BF7C <AmiBlitz3.ab3@14583> BRA.w convert_long_to_word
0002BF7E <AmiBlitz3.ab3@14585> RTS  ; dead old code
0002BF84 <AmiBlitz3.ab3@14589>   TST.b iee
0002BF88 <AmiBlitz3.ab3@14590>   BNE ftol
0002BF8C <AmiBlitz3.ab3@14592>   MOVE.w #$C31C,D1     ; #ftolover,
0002BF90 <AmiBlitz3.ab3@14593>   BSR.w overchk
0002BF94 <AmiBlitz3.ab3@14596>   MOVE.w #$FFE2,D1     ; #-30,
0002BF98 <AmiBlitz3.ab3@14597> BRA.w fdo2
0002BF9A <AmiBlitz3.ab3@14601>   MOVE.l d0,-(a7)
0002BF9C <AmiBlitz3.ab3@14602>   MOVEQ #0,d0
0002BFA2 <AmiBlitz3.ab3@14603>   MOVE.w regnum,d0
0002BFA4 <AmiBlitz3.ab3@14604>   ASL.l #7,d0
0002BFAA <AmiBlitz3.ab3@14605>   MOVE.l #$f2006000,d1
0002BFAC <AmiBlitz3.ab3@14606>   OR.l d0,d1
0002BFAE <AmiBlitz3.ab3@14607>   ASL.l #1,d0
0002BFB0 <AmiBlitz3.ab3@14608>   ASL.l #8,d0
0002BFB2 <AmiBlitz3.ab3@14609>   OR.l d0,d1
0002BFB4 <AmiBlitz3.ab3@14610>   MOVE.l (a7)+,d0
0002BFB8 <AmiBlitz3.ab3@14611> BRA writelong
0002BFBA <AmiBlitz3.ab3@14615>   MOVE.l d0,-(a7)
0002BFBC <AmiBlitz3.ab3@14616>   MOVEQ #0,d0
0002BFC2 <AmiBlitz3.ab3@14617>   MOVE.l #$f23c4023,d1
0002BFC8 <AmiBlitz3.ab3@14618>   MOVE.w regnum,d0
0002BFCA <AmiBlitz3.ab3@14619>   ASL.l #7,d0
0002BFCC <AmiBlitz3.ab3@14620>   OR.l d0,d1
0002BFD0 <AmiBlitz3.ab3@14621>   BSR writelong
0002BFD6 <AmiBlitz3.ab3@14622>   MOVE.l #$00010000,d1
0002BFDA <AmiBlitz3.ab3@14623>   BSR writelong
0002BFE0 <AmiBlitz3.ab3@14624>   MOVE.w regnum,d0
0002BFE2 <AmiBlitz3.ab3@14625>   ASL.l #7,d0
0002BFE8 <AmiBlitz3.ab3@14626>   MOVE.l #$f2006000,d1
0002BFEA <AmiBlitz3.ab3@14627>   OR.l d0,d1
0002BFEC <AmiBlitz3.ab3@14628>   ASL.l #1,d0
0002BFEE <AmiBlitz3.ab3@14629>   ASL.l #8,d0
0002BFF0 <AmiBlitz3.ab3@14630>   OR.l d0,d1
0002BFF4 <AmiBlitz3.ab3@14631>   BSR writelong
0002BFF6 <AmiBlitz3.ab3@14632>   MOVE.l (a7)+,d0
0002BFF8 <AmiBlitz3.ab3@14633> RTS
0002BFFA <AmiBlitz3.ab3@14636> RTS         ; dead old code
0002C000 <AmiBlitz3.ab3@14643>   TST.b iee
0002C004 <AmiBlitz3.ab3@14644>   BNE ftoq
0002C008 <AmiBlitz3.ab3@14646>   MOVE.w #$C31B,D1    ; #ftowover,
0002C00C <AmiBlitz3.ab3@14647>   BSR.w overchk
0002C010 <AmiBlitz3.ab3@14649>   MOVE.w #$D301,D1    ; #fltoqu,
0002C014 <AmiBlitz3.ab3@14650> BRA.w qtof2
0002C01A <AmiBlitz3.ab3@14655>    TST.b blitzparloop
0002C01E <AmiBlitz3.ab3@14656>    BNE 'l1
0002C024 <AmiBlitz3.ab3@14657>    TST.b funcparloop
0002C028 <AmiBlitz3.ab3@14658>    BNE 'l1
0002C02C <AmiBlitz3.ab3@14659>    BRA error_convert_types
0002C034 <AmiBlitz3.ab3@14662>   CMP.b #2,optistring
0002C038 <AmiBlitz3.ab3@14663>   BEQ JLrts
0002C03E <AmiBlitz3.ab3@14665>   MOVE.w stol,D1
0002C042 <AmiBlitz3.ab3@14666>   BSR.w writeword
0002C04A <AmiBlitz3.ab3@14668>   CMPI.w #$2,sbgot
0002C04E <AmiBlitz3.ab3@14670>   BCS.w sbtolong                     ; was BRA
0002C052 <AmiBlitz3.ab3@14672>   MOVE.w ceos(PC),D1                 ; begin copy of sbtolong
0002C056 <AmiBlitz3.ab3@14673>   BSR.w writeword
0002C05C <AmiBlitz3.ab3@14675>   MOVE.w regnum,D1
0002C05E <AmiBlitz3.ab3@14676>   LSL.w #8,D1
0002C060 <AmiBlitz3.ab3@14677>   LSL.w #1,D1
0002C068 <AmiBlitz3.ab3@14678>   CMPI.w #$2,sbgot
0002C06C <AmiBlitz3.ab3@14679>   BCS.w sbtolong_skip2
0002C072 <AmiBlitz3.ab3@14680>   MOVE.w a2offset,D3
0002C078 <AmiBlitz3.ab3@14681>   SUB.w thisstuse,D3
0002C07C <AmiBlitz3.ab3@14682>   CMP.w #$6,D3
0002C080 <AmiBlitz3.ab3@14683>   BNE.w 'lenonly
0002C086 <AmiBlitz3.ab3@14684>   OR.w movestst2,D1
0002C08A <AmiBlitz3.ab3@14685>   BSR.w writeword
0002C090 <AmiBlitz3.ab3@14686>   LEA movestst2+2,A0
0002C096 <AmiBlitz3.ab3@14687>   LEA movestst2f,A1
0002C09A <AmiBlitz3.ab3@14688>  BRA.w pokecode2
0002C0A0 <AmiBlitz3.ab3@14691>   OR.w movea7dn,D1
0002C0A4 <AmiBlitz3.ab3@14692>   BSR.w writeword
0002C0AA <AmiBlitz3.ab3@14693>   MOVE.l #0,D1
0002C0AE <AmiBlitz3.ab3@14694> BRA.w writeword                      ; end of copy
0002C0B4 <AmiBlitz3.ab3@14701>   ADDQ.w #1,fuckpos
0002C0B8 <AmiBlitz3.ab3@14702>   BSR.w writeconvertcode
0002C0BE <AmiBlitz3.ab3@14703>   SUBQ.w #1,fuckpos
0002C0C0 <AmiBlitz3.ab3@14707> RTS
0002C0C2 <AmiBlitz3.ab3@14711>   MOVE.w D3,D1
0002C0C6 <AmiBlitz3.ab3@14713>   CMP.w #7,d1
0002C0CA <AmiBlitz3.ab3@14714>   BLE 'ok
0002C0D0 <AmiBlitz3.ab3@14715>   JMP errorinternalconvert
0002C0D2 <AmiBlitz3.ab3@14719>   SUBQ.w #1,D1
0002C0D6 <AmiBlitz3.ab3@14720>   MULU #$7,D1
0002C0D8 <AmiBlitz3.ab3@14721>   ADD.w D2,D1
0002C0DA <AmiBlitz3.ab3@14722>   SUBQ.w #1,D1
0002C0DC <AmiBlitz3.ab3@14723>   LSL.w #2,D1
0002C0E2 <AmiBlitz3.ab3@14724>   LEA convtable,A0
0002C0E6 <AmiBlitz3.ab3@14725>   MOVE.l $0(A0,D1.W),D1
0002C0EA <AmiBlitz3.ab3@14726>   BEQ.w 'skip
0002C0EC <AmiBlitz3.ab3@14727>     MOVEA.l D1,A0
0002C0F0 <AmiBlitz3.ab3@14729>     CMP.b #$ff,d3
0002C0F4 <AmiBlitz3.ab3@14730>     BEQ 'skip
0002C0F6 <AmiBlitz3.ab3@14732>  JMP (A0)
0002C0F8 <AmiBlitz3.ab3@14735> RTS
0002C0FC <AmiBlitz3.ab3@14738> usedfrom:  Ds.l 1
0002C100 <AmiBlitz3.ab3@14745>   CMP.w #"\",D0
0002C104 <AmiBlitz3.ab3@14746>   BNE.w 'skip0
0002C108 <AmiBlitz3.ab3@14748>     CMP.b #"\",(a5)
0002C10C <AmiBlitz3.ab3@14749>     BNE 'first
0002C112 <AmiBlitz3.ab3@14750>       MOVE.l A5,usedfrom
0002C118 <AmiBlitz3.ab3@14751>       LEA path2,A5
0002C11C <AmiBlitz3.ab3@14752>  BRA 'g1
0002C11E <AmiBlitz3.ab3@14756>     SUBQ.w #1,A5
0002C124 <AmiBlitz3.ab3@14757>   MOVE.l A5,usedfrom
0002C12A <AmiBlitz3.ab3@14758>   LEA usedpath,A5                                          ;read path
0002C12E <AmiBlitz3.ab3@14763>   BSR.w get1bytemain
0002C134 <AmiBlitz3.ab3@14766>   CLR.w flagmask
0002C138 <AmiBlitz3.ab3@14767>   CMP.w #$2A,D0             ;'*'
0002C13C <AmiBlitz3.ab3@14768>    BNE.w 'skip
0002C144 <AmiBlitz3.ab3@14769>   MOVE.w #$0001,flagmask
0002C148 <AmiBlitz3.ab3@14772>    BSR.w getparameter2
0002C14C <AmiBlitz3.ab3@14775>    BEQ.w syntaxerr
0002C150 <AmiBlitz3.ab3@14776>   CMP.w #$28,D0             ;'('
0002C154 <AmiBlitz3.ab3@14777>    BEQ.w 'setmask
0002C158 <AmiBlitz3.ab3@14778>   CMP.w #$2E,D0             ;'.'
0002C15C <AmiBlitz3.ab3@14779>    BEQ.w 'morem
0002C160 <AmiBlitz3.ab3@14780>   CMP.w #$24,D0             ;'$'
0002C164 <AmiBlitz3.ab3@14781>    BNE.w 'done
0002C16C <AmiBlitz3.ab3@14782>   ORI.w #$8,flagmask
0002C170 <AmiBlitz3.ab3@14783>    BSR.w storeloc
0002C174 <AmiBlitz3.ab3@14784>    BSR.w get1bytemain
0002C178 <AmiBlitz3.ab3@14785>  BRA.w 'morez
0002C17C <AmiBlitz3.ab3@14789>   BSR.w storeloc
0002C17E <AmiBlitz3.ab3@14790>   MOVE.w D2,-(A7)
0002C184 <AmiBlitz3.ab3@14791>   LEA namebuff2,A1
0002C188 <AmiBlitz3.ab3@14792>    BSR.w makename3
0002C18C <AmiBlitz3.ab3@14793>    BEQ.w syntaxerr
0002C18E <AmiBlitz3.ab3@14794>   MOVE.w (A7)+,D2
0002C190 <AmiBlitz3.ab3@14797>    MOVE.w D0,D1
0002C194 <AmiBlitz3.ab3@14798>    BSR.w resloc
0002C198 <AmiBlitz3.ab3@14799>    CMP.w #$28,D1             ;'('
0002C19C <AmiBlitz3.ab3@14800>    BNE.w 'done
0002C1A4 <AmiBlitz3.ab3@14803>   ORI.w #$2,flagmask
0002C1A6 <AmiBlitz3.ab3@14806>  RTS
0002C1AA <AmiBlitz3.ab3@14809>   CMP.w #$40,D0              ;'@'
0002C1AE <AmiBlitz3.ab3@14810>    BNE.w 'skip2
0002C1B6 <AmiBlitz3.ab3@14811>   MOVE.w #$0005,flagmask
0002C1BA <AmiBlitz3.ab3@14812>  BRA.w 'more2
0002C1BE <AmiBlitz3.ab3@14815>   BSR.w makename2
0002C1C2 <AmiBlitz3.ab3@14816> BRA.w 'more
0002C1C6 <AmiBlitz3.ab3@14820>   MOVE.w #$FED3,D1          ; #65235
0002C1CA <AmiBlitz3.ab3@14821>    BSR.w uselib
0002C1D0 <AmiBlitz3.ab3@14822>   LEA pusha3,A0
0002C1D6 <AmiBlitz3.ab3@14823>   LEA pusha3f,A1
0002C1DA <AmiBlitz3.ab3@14824> BRA.w pokecode
0002C1DE <AmiBlitz3.ab3@14828>   MOVE.w #$FED3,D1          ; #65235
0002C1E2 <AmiBlitz3.ab3@14829>    BSR.w uselib
0002C1E8 <AmiBlitz3.ab3@14830>   LEA pulla3,A0
0002C1EE <AmiBlitz3.ab3@14831>   LEA pulla3f,A1
0002C1F2 <AmiBlitz3.ab3@14832> BRA.w pokecode
0002C1F4 <AmiBlitz3.ab3@14836> ceos:   Dc.b $42,$1B                                       ;CLR.B   (A3)+             ;*!
0002C1FC <AmiBlitz3.ab3@14842>     CMP.b #2,optistring
0002C200 <AmiBlitz3.ab3@14843>    BEQ 'l10
0002C204 <AmiBlitz3.ab3@14845>    MOVE.w ceos(PC),D1
0002C208 <AmiBlitz3.ab3@14846>    BSR.w writeword                                         ;clr.b (a3)
0002C20E <AmiBlitz3.ab3@14851>   MOVE.w regnum,D1
0002C210 <AmiBlitz3.ab3@14852>   LSL.w #8,D1
0002C212 <AmiBlitz3.ab3@14853>   LSL.w #1,D1
0002C21A <AmiBlitz3.ab3@14854>   CMPI.w #$2,sbgot
0002C21E <AmiBlitz3.ab3@14855>    BCS.w sbtolong_skip2
0002C224 <AmiBlitz3.ab3@14856>   MOVE.w a2offset,D3                                       ;stackuse,d3 org source
0002C22A <AmiBlitz3.ab3@14857>   SUB.w thisstuse,D3
0002C22E <AmiBlitz3.ab3@14858>   CMP.w #$6,D3
0002C232 <AmiBlitz3.ab3@14859>    BNE.w 'lenonly
0002C238 <AmiBlitz3.ab3@14860>   OR.w movestst2,D1
0002C23C <AmiBlitz3.ab3@14861>    BSR.w writeword
0002C242 <AmiBlitz3.ab3@14862>   LEA movestst2+2,A0
0002C248 <AmiBlitz3.ab3@14863>   LEA movestst2f,A1
0002C24C <AmiBlitz3.ab3@14864>  BRA.w pokecode2
0002C252 <AmiBlitz3.ab3@14867>    OR.w movea7dn,D1
0002C256 <AmiBlitz3.ab3@14868>    BSR.w writeword
0002C25C <AmiBlitz3.ab3@14869>   MOVE.l movea7dn+2,D1
0002C260 <AmiBlitz3.ab3@14882>   BSR writelong
0002C268 <AmiBlitz3.ab3@14885>    CMP.w #6,regnum
0002C26C <AmiBlitz3.ab3@14886>    BEQ 'l1
0002C272 <AmiBlitz3.ab3@14887>    TST.w stackpar
0002C276 <AmiBlitz3.ab3@14888>    BNE 'l1
0002C27C <AmiBlitz3.ab3@14889>    TST.b funcparloop
0002C280 <AmiBlitz3.ab3@14890>    BEQ 'l1
0002C286 <AmiBlitz3.ab3@14891>    MOVE.l #$48780000,d1
0002C28A <AmiBlitz3.ab3@14892>    BSR writelong
0002C28C <AmiBlitz3.ab3@14896>  RTS
0002C28E <AmiBlitz3.ab3@14902>      MOVE.l d1,-(a7)
0002C296 <AmiBlitz3.ab3@14903>      CMP.w #6,regnum
0002C29A <AmiBlitz3.ab3@14904>      BEQ 'l1
0002C2A0 <AmiBlitz3.ab3@14905>      TST.w stackpar
0002C2A4 <AmiBlitz3.ab3@14906>      BNE 'l1
0002C2AA <AmiBlitz3.ab3@14907>      TST.b funcparloop
0002C2AE <AmiBlitz3.ab3@14908>      BEQ 'l1
0002C2B4 <AmiBlitz3.ab3@14909>      MOVE.l #$48780000,d1
0002C2B8 <AmiBlitz3.ab3@14910>      BSR writelong
0002C2BA <AmiBlitz3.ab3@14913>      MOVE.l (a7)+,d1
0002C2C0 <AmiBlitz3.ab3@14916>    OR.w movestdn,D1
0002C2C4 <AmiBlitz3.ab3@14917>    BSR.w writeword
0002C2C8 <AmiBlitz3.ab3@14918>   MOVE.w #$FED3,D1        ;#65235
0002C2CC <AmiBlitz3.ab3@14919>    BSR.w uselib
0002C2D0 <AmiBlitz3.ab3@14920>   MOVE.w $A(A1),D1
0002C2D4 <AmiBlitz3.ab3@14921> BRA.w writeword
0002C2D6 <AmiBlitz3.ab3@14924> unknown:    Ds.w 1
0002C2DC <AmiBlitz3.ab3@14927> somecode:   Dc.b $0C,$80,$00,$01,$00,$00                   ;CMPI.L  #$00010000,D0
0002C2E0 <AmiBlitz3.ab3@14928> somecode2:  Dc.b $65,$00,$00,$08                           ;BCS.W   codeisok
0002C2E6 <AmiBlitz3.ab3@14929>             Dc.b $4E,$B9,$00,$00,$00,$00                   ;JSR $00000000
0002C2EC <AmiBlitz3.ab3@14935>   TST.b debugmode
0002C2F0 <AmiBlitz3.ab3@14936>   BEQ.w sharreval
0002C2F4 <AmiBlitz3.ab3@14937>  BSR.w arreval
0002C2F8 <AmiBlitz3.ab3@14940>   MOVE.w somecode(PC),D1
0002C2FE <AmiBlitz3.ab3@14941>   OR.w regnum,D1
0002C302 <AmiBlitz3.ab3@14942>    BSR.w writeword
0002C304 <AmiBlitz3.ab3@14943>   MOVEQ.l #$01,D1
0002C306 <AmiBlitz3.ab3@14944>   SWAP D1
0002C30A <AmiBlitz3.ab3@14945>    BSR.w writelong
0002C30E <AmiBlitz3.ab3@14946>   MOVE.l somecode2(PC),D1
0002C312 <AmiBlitz3.ab3@14947>    BSR.w writelong
0002C316 <AmiBlitz3.ab3@14948>   MOVE.w #$C309,D1     ; was #arrerr,
0002C31A <AmiBlitz3.ab3@14949> BRA.w Atokejsr
0002C31C <AmiBlitz3.ab3@14953>   MOVEQ.l #$02,D2
0002C31E <AmiBlitz3.ab3@14954>   MOVEQ.l #$00,D1
0002C320 <AmiBlitz3.ab3@14955>   MOVEQ.l #$00,D3
0002C324 <AmiBlitz3.ab3@14956> BRA.w maineval2
0002C326 <AmiBlitz3.ab3@14960>   MOVEQ.l #$03,D2           ;getlong
0002C328 <AmiBlitz3.ab3@14961>   MOVEQ.l #$00,D1           ;no push
0002C32A <AmiBlitz3.ab3@14962>   MOVEQ.l #$00,D3           ;and convert
0002C330 <AmiBlitz3.ab3@14963>   MOVE.b notypecheck,-(a7)
0002C338 <AmiBlitz3.ab3@14964>   MOVE.b #1,notypecheck                                    ;typecheck need switch off for array offset calculation code
0002C33E <AmiBlitz3.ab3@14965>   JSR maineval2             ;2!* ;was bra
0002C344 <AmiBlitz3.ab3@14967>   MOVE.b (a7)+,notypecheck                                 ;now its switch to old state
0002C346 <AmiBlitz3.ab3@14968> RTS
0002C350 <AmiBlitz3.ab3@14974>   MOVE.w oldqflag,instringon
0002C356 <AmiBlitz3.ab3@14975>   MOVEA.l lastsourcepos,A5
0002C358 <AmiBlitz3.ab3@14977>   MOVEQ.l #-$01,D1
0002C35A <AmiBlitz3.ab3@14978>   MOVEQ.l #-$01,D3
0002C35E <AmiBlitz3.ab3@14979> BRA.w peval
0002C368 <AmiBlitz3.ab3@14985>   MOVE.w oldqflag,instringon
0002C36E <AmiBlitz3.ab3@14986>   MOVEA.l lastsourcepos,A5
0002C370 <AmiBlitz3.ab3@14989>   MOVEQ.l #-$01,D1
0002C372 <AmiBlitz3.ab3@14990>   MOVEQ.l #$00,D3
0002C378 <AmiBlitz3.ab3@14992>   MOVE.l leftsidetype,-(a7)
0002C37E <AmiBlitz3.ab3@14993>   MOVE.l rightsidetype,-(a7)
0002C384 <AmiBlitz3.ab3@14994>   MOVE.w leftsideflagmask,-(a7)
0002C38A <AmiBlitz3.ab3@14995>   MOVE.w rightsideflagmask,-(a7)
0002C390 <AmiBlitz3.ab3@14996>   CLR.l leftsidetype
0002C396 <AmiBlitz3.ab3@14997>   CLR.l rightsidetype
0002C39C <AmiBlitz3.ab3@14998>   CLR.w leftsideflagmask
0002C3A2 <AmiBlitz3.ab3@14999>   CLR.w rightsideflagmask
0002C3A8 <AmiBlitz3.ab3@15001>   JSR maineval                    ; was bra
0002C3AE <AmiBlitz3.ab3@15003>   MOVE.w (a7)+,rightsideflagmask
0002C3B4 <AmiBlitz3.ab3@15004>   MOVE.w (a7)+,leftsideflagmask
0002C3BA <AmiBlitz3.ab3@15005>   MOVE.l (a7)+,rightsidetype
0002C3C0 <AmiBlitz3.ab3@15006>   MOVE.l (a7)+,leftsidetype
0002C3C2 <AmiBlitz3.ab3@15007> RTS
0002C3CC <AmiBlitz3.ab3@15013>   MOVE.w oldqflag,instringon
0002C3D2 <AmiBlitz3.ab3@15014>   MOVEA.l lastsourcepos,A5
0002C3D4 <AmiBlitz3.ab3@15017>   MOVEQ.l #$00,D1
0002C3D6 <AmiBlitz3.ab3@15018>   MOVEQ.l #-$01,D3
0002C3DA <AmiBlitz3.ab3@15019> BRA.w maineval
0002C3DC <AmiBlitz3.ab3@15023>   MOVEQ.l #$01,D1
0002C3DE <AmiBlitz3.ab3@15024>   MOVEQ.l #-$01,D3
0002C3E2 <AmiBlitz3.ab3@15025> BRA.w maineval
0002C3EC <AmiBlitz3.ab3@15031>   MOVE.w oldqflag,instringon
0002C3F2 <AmiBlitz3.ab3@15032>   MOVEA.l lastsourcepos,A5
0002C3F4 <AmiBlitz3.ab3@15036>   MOVEQ.l #$00,D1      ;no push
0002C3F6 <AmiBlitz3.ab3@15037>   MOVEQ.l #$00,D3
0002C3FE <AmiBlitz3.ab3@15058>    CMPI.w #$6,regnum
0002C402 <AmiBlitz3.ab3@15059>    BCS.w maineval2
0002C404 <AmiBlitz3.ab3@15061>    MOVEQ #0,d1
0002C40A <AmiBlitz3.ab3@15062>    MOVE.l destpointer,a4
0002C410 <AmiBlitz3.ab3@15064>    CMPA.l destbufferend,A4
0002C414 <AmiBlitz3.ab3@15065>    BCC.w 'l2
0002C41A <AmiBlitz3.ab3@15067>    CMP.w #$2f0a,-2(a4)                                    ;bug is a move.l a2,-(a7) before (show temp calc)?
0002C41E <AmiBlitz3.ab3@15069>    BNE 'l2
0002C422 <AmiBlitz3.ab3@15073> BRA 'l1
0002C424 <AmiBlitz3.ab3@15077>   MOVEQ.l #-$01,D1                                         ;do stackpar write
0002C42C <AmiBlitz3.ab3@15080>   MOVE.w #$0006,regnum                                     ;write a func par To stack
0002C432 <AmiBlitz3.ab3@15086>   MOVE.w thisstuse,-(A7)
0002C43C <AmiBlitz3.ab3@15087>   MOVE.w a2offset,thisstuse
0002C442 <AmiBlitz3.ab3@15089>   MOVE.w stackpar,-(A7)
0002C448 <AmiBlitz3.ab3@15090>   MOVE.w D1,stackpar
0002C44E <AmiBlitz3.ab3@15091>   MOVE.w sbgot,-(A7)
0002C454 <AmiBlitz3.ab3@15092>   CLR.w sbgot                ;not pushed yet
0002C458 <AmiBlitz3.ab3@15093>   MOVE.w unknown(PC),-(A7)
0002C45E <AmiBlitz3.ab3@15094>   MOVE.w D3,unknown
0002C460 <AmiBlitz3.ab3@15096>   MOVE.w D2,-(a7)
0002C466 <AmiBlitz3.ab3@15098>   MOVE.w d2,mode
0002C46A <AmiBlitz3.ab3@15100>    BSR.w eval3
0002C46C <AmiBlitz3.ab3@15101>   MOVE.w (a7)+,d3            ;type asked for
0002C470 <AmiBlitz3.ab3@15102>    BEQ.w 'noconv
0002C474 <AmiBlitz3.ab3@15103>   MOVE.w unknown(PC),D1
0002C478 <AmiBlitz3.ab3@15104>    BNE.w 'noconv
0002C47A <AmiBlitz3.ab3@15105>   EXG.l D2,D3
0002C47C <AmiBlitz3.ab3@15107>    MOVE.l a2,-(a7)
0002C482 <AmiBlitz3.ab3@15108>    TST.b curtemplabel
0002C486 <AmiBlitz3.ab3@15109>    BEQ 'l10
0002C48C <AmiBlitz3.ab3@15110>    MOVE.l asmbuff,a2
0002C492 <AmiBlitz3.ab3@15111>    CMP.w #$c,$8(a2)
0002C496 <AmiBlitz3.ab3@15112>    BEQ 'l20
0002C49C <AmiBlitz3.ab3@15113>    CMP.w #$d,$8(a2)
0002C4A0 <AmiBlitz3.ab3@15114>    BEQ 'l20
0002C4A2 <AmiBlitz3.ab3@15117>   CMP.w d2,d3
0002C4A6 <AmiBlitz3.ab3@15118>   BEQ 'l20
0002C4AA <AmiBlitz3.ab3@15119>   BSR.w writeconvertcode
0002C4B0 <AmiBlitz3.ab3@15120>   CLR.b doimmediate
0002C4B2 <AmiBlitz3.ab3@15123>   MOVE.l (a7)+,a2
0002C4B8 <AmiBlitz3.ab3@15127>   MOVE.w (A7)+,unknown
0002C4BE <AmiBlitz3.ab3@15128>   MOVE.w stackpar,D1
0002C4C2 <AmiBlitz3.ab3@15129>    BEQ.w 'skipme
0002C4C6 <AmiBlitz3.ab3@15130>    BMI.w 'skipme
0002C4CC <AmiBlitz3.ab3@15134>   MOVE.w regnum,D1
0002C4CE <AmiBlitz3.ab3@15135>   LSL.w #8,D1
0002C4D0 <AmiBlitz3.ab3@15136>   LSL.w #1,D1
0002C4D4 <AmiBlitz3.ab3@15137>   CMP.w #$7,D2
0002C4D8 <AmiBlitz3.ab3@15138>    BNE.w 'hi1
0002C4E0 <AmiBlitz3.ab3@15140>    CMP.b #2,optistring
0002C4E4 <AmiBlitz3.ab3@15141>    BEQ 'hi1a
0002C4E6 <AmiBlitz3.ab3@15143>   MOVE.w D1,-(A7)
0002C4EC <AmiBlitz3.ab3@15144>   OR.w getstlen,D1
0002C4F0 <AmiBlitz3.ab3@15145>    BSR.w writeword
0002C4F2 <AmiBlitz3.ab3@15146>   MOVE.w (A7)+,D1
0002C4F8 <AmiBlitz3.ab3@15149>   ADDQ.w #2,a2offset                                        ;lib mode to stack
0002C4FC <AmiBlitz3.ab3@15154>   MOVE.w #$3f3c,d1
0002C500 <AmiBlitz3.ab3@15156>    BSR.w writeword
0002C502 <AmiBlitz3.ab3@15161>   MOVE.w d2,d1
0002C508 <AmiBlitz3.ab3@15162>   MOVE.w d1,libmode
0002C50C <AmiBlitz3.ab3@15164>    BSR.w writeword
0002C510 <AmiBlitz3.ab3@15166>   CMP.w #$7,D2
0002C514 <AmiBlitz3.ab3@15167>    BNE.w 'skipme
0002C51A <AmiBlitz3.ab3@15168>   MOVE.w putstlen,D1
0002C520 <AmiBlitz3.ab3@15169>   OR.w regnum,D1
0002C524 <AmiBlitz3.ab3@15170>    BSR.w writeword
0002C528 <AmiBlitz3.ab3@15173>    CMP.w #$7,D2
0002C52C <AmiBlitz3.ab3@15174>    BNE.w 'notst
0002C534 <AmiBlitz3.ab3@15187>    CMP.b #2,optistring
0002C538 <AmiBlitz3.ab3@15188>    BEQ 'skipme_l10
0002C53E <AmiBlitz3.ab3@15190>    ADDQ.w #4,a2offset     ;a length on da stack.....
0002C542 <AmiBlitz3.ab3@15191>    BSR.w sbtolong
0002C546 <AmiBlitz3.ab3@15192>  BRA.w 'notst2
0002C54E <AmiBlitz3.ab3@15197>     CMP.w #6,regnum
0002C552 <AmiBlitz3.ab3@15198>     BEQ 'skipme_l10_l1
0002C558 <AmiBlitz3.ab3@15199>     TST.b funcparloop
0002C55C <AmiBlitz3.ab3@15200>     BEQ 'skipme_l10_l1
0002C562 <AmiBlitz3.ab3@15201>     MOVE.l #$48780000,d1
0002C566 <AmiBlitz3.ab3@15202>     BSR writelong
0002C56A <AmiBlitz3.ab3@15206>  BRA.w 'notst2
0002C570 <AmiBlitz3.ab3@15209>   ADDQ.w #2,a2offset
0002C574 <AmiBlitz3.ab3@15210>  BRA 'skipme
0002C57C <AmiBlitz3.ab3@15214>   CMPI.w #$2,sbgot
0002C580 <AmiBlitz3.ab3@15215>    BCS.w 'notst2                                         ;correct stack
0002C584 <AmiBlitz3.ab3@15216>   MOVE.w ststfix(PC),D1
0002C588 <AmiBlitz3.ab3@15217>    BSR.w writeword
0002C58E <AmiBlitz3.ab3@15220>   MOVE.w (A7)+,sbgot
0002C594 <AmiBlitz3.ab3@15222>   MOVE.w stackpar,D1
0002C598 <AmiBlitz3.ab3@15223>    BPL.w 'skip
0002C59C <AmiBlitz3.ab3@15225>    CMP.b #7,d2
0002C5A0 <AmiBlitz3.ab3@15226>    BEQ 'notst2_l1
0002C5A6 <AmiBlitz3.ab3@15227>   TST.b funcparloop
0002C5AA <AmiBlitz3.ab3@15228>   BEQ 'notst2_l1
0002C5AE <AmiBlitz3.ab3@15229>   CMP.b #5,d2
0002C5B2 <AmiBlitz3.ab3@15230>   BNE 'notst2_skip
0002C5B8 <AmiBlitz3.ab3@15231>   TST.b fpu
0002C5BC <AmiBlitz3.ab3@15232>   BEQ 'notst2_skip
0002C5C2 <AmiBlitz3.ab3@15233>   MOVE.l #$f2066700,d1                                     ;fmove.s fp6,d6
0002C5C8 <AmiBlitz3.ab3@15234>   JSR writelong
0002C5CC <AmiBlitz3.ab3@15237>   MOVE.w #$c4ff,d1                                         ;savetemp+regnum
0002C5D2 <AmiBlitz3.ab3@15238>   ADD.w parnum,d1
0002C5D8 <AmiBlitz3.ab3@15239>   JSR Atokejsr
0002C5DE <AmiBlitz3.ab3@15240>    TST.w dontwrite_nomemleft
0002C5E2 <AmiBlitz3.ab3@15241>    BNE 'notst2_l1
0002C5E8 <AmiBlitz3.ab3@15242>    MOVE.l data1start,d1
0002C5EE <AmiBlitz3.ab3@15243>    MOVE.l destpointer,a4
0002C5F2 <AmiBlitz3.ab3@15244>    ADD.l d1,-4(a4)
0002C5F8 <AmiBlitz3.ab3@15245>    MOVE.l destpointer,d1
0002C5FA <AmiBlitz3.ab3@15246>    SUBQ.l #4,d1
0002C600 <AmiBlitz3.ab3@15247>    SUB.l destbufferstart,d1
0002C602 <AmiBlitz3.ab3@15248>    MOVE.l d2,-(a7)
0002C604 <AmiBlitz3.ab3@15249>    MOVE.l d1,d2
0002C60A <AmiBlitz3.ab3@15250>    JSR addhunkoffset
0002C60C <AmiBlitz3.ab3@15251>    MOVE.l (a7)+,d2
0002C610 <AmiBlitz3.ab3@15252>  BRA 'skip
0002C616 <AmiBlitz3.ab3@15256>   ADDQ.w #2,a2offset
0002C61C <AmiBlitz3.ab3@15257>   MOVE.w pushd0wd,D1
0002C620 <AmiBlitz3.ab3@15258>   CMP.w #$3,D2                                             ;write parameter to stack
0002C624 <AmiBlitz3.ab3@15259>    BCS.w 'ok
0002C62A <AmiBlitz3.ab3@15260>   ADDQ.w #2,a2offset
0002C630 <AmiBlitz3.ab3@15262>   TST.b fpu
0002C634 <AmiBlitz3.ab3@15263>   BEQ 'notst2_nofpu
0002C638 <AmiBlitz3.ab3@15264>   CMP.w #5,d2
0002C63C <AmiBlitz3.ab3@15265>   BNE 'notst2_nofpu
0002C63E <AmiBlitz3.ab3@15266>   MOVEQ #0,d1
0002C644 <AmiBlitz3.ab3@15267>   MOVE.w regnum,d1
0002C646 <AmiBlitz3.ab3@15268>   ASL.l #7,d1
0002C64C <AmiBlitz3.ab3@15269>   OR.l #$f2276400,d1
0002C650 <AmiBlitz3.ab3@15270>   BSR writelong
0002C654 <AmiBlitz3.ab3@15271>  BRA 'skip
0002C65A <AmiBlitz3.ab3@15275>   MOVE.w pushd0l,D1
0002C660 <AmiBlitz3.ab3@15278>    OR.w regnum,D1
0002C664 <AmiBlitz3.ab3@15279>    BSR.w writeword                                         ;nat
0002C66A <AmiBlitz3.ab3@15282>   MOVE.w (A7)+,stackpar
0002C670 <AmiBlitz3.ab3@15283>   MOVE.w (A7)+,thisstuse
0002C672 <AmiBlitz3.ab3@15284> RTS
0002C674 <AmiBlitz3.ab3@15287> thisstuse: Ds.w 1
0002C676 <AmiBlitz3.ab3@15290> ststfix:   Dc.b $58,$4F                                    ;ADDQ.W  #4,A7
0002C678 <AmiBlitz3.ab3@15291> pushut:    Dc.b $3F,$00                                    ;MOVE.W  D0,-(A7)
0002C67C <AmiBlitz3.ab3@15296>   BSR.w eval4
0002C686 <AmiBlitz3.ab3@15297>   SUBI.l #$12,forthsp
0002C688 <AmiBlitz3.ab3@15298> RTS
0002C68A <AmiBlitz3.ab3@15302>   MOVEQ.l #$01,D1
0002C68E <AmiBlitz3.ab3@15305>       MOVEA.l precsp(PC),A1
0002C690 <AmiBlitz3.ab3@15306>       MOVE.l A0,(A1)+
0002C692 <AmiBlitz3.ab3@15307>       MOVE.w D1,(A1)+
0002C698 <AmiBlitz3.ab3@15308>       MOVE.l A1,precsp
0002C69C <AmiBlitz3.ab3@15310>    BSR.w calcloop
0002C69E <AmiBlitz3.ab3@15311>   TST.w D1
0002C6A2 <AmiBlitz3.ab3@15312>    BNE.w syntaxerr
0002C6A8 <AmiBlitz3.ab3@15314>   SUBQ.l #6,precsp           ;pop the prec set up
0002C6AA <AmiBlitz3.ab3@15315> RTS
0002C6AE <AmiBlitz3.ab3@15319>   BSR.w eval2
0002C6B2 <AmiBlitz3.ab3@15322>   MOVEA.l precsp(PC),A1
0002C6B4 <AmiBlitz3.ab3@15323>   CMP.w -(A1),D1
0002C6B8 <AmiBlitz3.ab3@15324>    BHI.w 'higher
0002C6BA <AmiBlitz3.ab3@15325>  RTS
0002C6BE <AmiBlitz3.ab3@15331>   MOVEA.l precsp(PC),A1
0002C6C0 <AmiBlitz3.ab3@15332>   MOVE.l A0,(A1)+
0002C6C2 <AmiBlitz3.ab3@15333>   MOVE.w D1,(A1)+
0002C6C8 <AmiBlitz3.ab3@15334>   MOVE.l A1,precsp
0002C6CA <AmiBlitz3.ab3@15336>   MOVE.w D2,-(A7)
0002C6D0 <AmiBlitz3.ab3@15337>   ADDQ.w #1,regnum
0002C6D4 <AmiBlitz3.ab3@15338>    BSR.w calcloop               ;constant optimizer
0002C6DA <AmiBlitz3.ab3@15339>   SUBQ.w #1,regnum
0002C6DC <AmiBlitz3.ab3@15340>   MOVE.w (A7)+,D3
0002C6E0 <AmiBlitz3.ab3@15341>   MOVEM.l D1/A0,-(A7)
0002C6E4 <AmiBlitz3.ab3@15342>    BEQ.w 'skip
0002C6E8 <AmiBlitz3.ab3@15343>    BSR.w convtypef     ;could possibly fuck regat+1 !
0002C6EC <AmiBlitz3.ab3@15346>   BSR.w popprec
0002C6F0 <AmiBlitz3.ab3@15347>   BSR.w writecode
0002C6F4 <AmiBlitz3.ab3@15354>   MOVEA.l forthsp(PC),A0
0002C6F8 <AmiBlitz3.ab3@15355>   MOVE.w -$2(A0),D1
0002C6FC <AmiBlitz3.ab3@15356>   OR.w -$14(A0),D1
0002C700 <AmiBlitz3.ab3@15357>   MOVE.w D1,-$14(A0)
0002C704 <AmiBlitz3.ab3@15358>    BNE.w 'no
0002C70A <AmiBlitz3.ab3@15359>   MOVE.w dontwrite_nomemleft,D1
0002C70E <AmiBlitz3.ab3@15360>    BNE.w 'no
0002C712 <AmiBlitz3.ab3@15367>    MOVEA.l -$24(A0),A0
0002C84E <AmiBlitz3.ab3@15369>   !newcalc
0002C852 <AmiBlitz3.ab3@15370>    BEQ 'l10
0002C856 <AmiBlitz3.ab3@15371>    MOVEA.l forthsp(PC),A0
0002C85E <AmiBlitz3.ab3@15372>    MOVE.w -$18(A0),lasta6
0002C866 <AmiBlitz3.ab3@15373>    MOVE.l -$1C(A0),lasta6
0002C86A <AmiBlitz3.ab3@15374>    MOVEA.l -$24(A0),A0
0002C870 <AmiBlitz3.ab3@15375>    MOVE.l A0,destpointer
0002C876 <AmiBlitz3.ab3@15376>    MOVEA.l _mathffpbase,A6
0002C87C <AmiBlitz3.ab3@15377>    MOVEA.l ffplib,A1
0002C880 <AmiBlitz3.ab3@15378>  BRA 'cont1
0002C884 <AmiBlitz3.ab3@15382>   MOVE.w #$2000,D1
0002C88A <AmiBlitz3.ab3@15383>   OR.w regnum,D1            ; was regat(pc),
0002C88E <AmiBlitz3.ab3@15384>    BSR.w writeword
0002C890 <AmiBlitz3.ab3@15386>     MOVEQ #0,d1
0002C896 <AmiBlitz3.ab3@15387>     MOVE.w regnum,D1
0002C898 <AmiBlitz3.ab3@15388>     ASL.l #8,d1
0002C89A <AmiBlitz3.ab3@15389>     ASL.l #2,d1
0002C8A0 <AmiBlitz3.ab3@15390>     OR.l #$f2000000,d1
0002C8A4 <AmiBlitz3.ab3@15391>     BSR writelong
0002C8A8 <AmiBlitz3.ab3@15393>   MOVE.w #$4E75,D1
0002C8AC <AmiBlitz3.ab3@15394>    BSR.w writeword
0002C8B4 <AmiBlitz3.ab3@15395>   MOVE.w -$18(A0),lasta6
0002C8BC <AmiBlitz3.ab3@15396>   MOVE.l -$1C(A0),lasta6
0002C8C0 <AmiBlitz3.ab3@15397>   MOVEA.l -$24(A0),A0
0002C8C6 <AmiBlitz3.ab3@15398>   MOVE.l A0,destpointer
0002C8CA <AmiBlitz3.ab3@15400>   MOVEM.l D2/A5,-(A7)
0002C8D0 <AmiBlitz3.ab3@15402>   MOVEA.l _mathffpbase,A6
0002C8D6 <AmiBlitz3.ab3@15403>   MOVEA.l ffplib,A1
0002C8DA <AmiBlitz3.ab3@15404>   MOVE.w $A(A1),D0
0002C8E0 <AmiBlitz3.ab3@15405>   LEA _mathffpbase,A5
0002C8E2 <AmiBlitz3.ab3@15406>   SUBA.w D0,A5
0002C8E8 <AmiBlitz3.ab3@15408>   JSR Aclearcache                                          ;neg +
0002C8EE <AmiBlitz3.ab3@15410>   CLR.l load_var_addr
0002C8F4 <AmiBlitz3.ab3@15411>   CLR.l imm_addr
0002C8FA <AmiBlitz3.ab3@15412>   TST.w dontwrite_nomemleft
0002C8FE <AmiBlitz3.ab3@15413>   BNE '1
0002C900 <AmiBlitz3.ab3@15415>   JSR (A0)                                                 ;calc constant inline expression
0002C904 <AmiBlitz3.ab3@15419>   MOVEM.l (A7)+,D2/A5
0002C90A <AmiBlitz3.ab3@15426>   MOVE.b d2,isconstantvalue
0002C910 <AmiBlitz3.ab3@15427>   MOVE.l d0,lastconstantvalue
0002C916 <AmiBlitz3.ab3@15429>   MOVE.w regnum,D1
0002C918 <AmiBlitz3.ab3@15430>   LSL.w #8,D1
0002C91A <AmiBlitz3.ab3@15431>   LSL.w #1,D1
0002C91E <AmiBlitz3.ab3@15432>   ORI.w #$203C,D1      ;move.l #x,dn
0002C922 <AmiBlitz3.ab3@15433>   CMP.w #$3,D2
0002C926 <AmiBlitz3.ab3@15434>    BCC.w 'ok
0002C92A <AmiBlitz3.ab3@15435>   ORI.w #$1000,D1
0002C92E <AmiBlitz3.ab3@15436>    BSR.w writeword
0002C930 <AmiBlitz3.ab3@15437>   MOVE.w D0,D1
0002C934 <AmiBlitz3.ab3@15438>    BSR.w writeword
0002C938 <AmiBlitz3.ab3@15439>  BRA.w 'mode
0002C93E <AmiBlitz3.ab3@15443>   TST.b iee                                                ;fpu constant
0002C942 <AmiBlitz3.ab3@15444>   BEQ 'l10b
0002C946 <AmiBlitz3.ab3@15445>   CMP.b #5,d2
0002C94A <AmiBlitz3.ab3@15446>   BNE 'l10b
0002C94C <AmiBlitz3.ab3@15447>   MOVEQ #0,d1
0002C952 <AmiBlitz3.ab3@15448>   MOVE.w regnum,D1
0002C954 <AmiBlitz3.ab3@15449>   ASL.l #7,d1
0002C95A <AmiBlitz3.ab3@15450>   OR.l #$f23c5400,d1
0002C95E <AmiBlitz3.ab3@15451>   BSR writelong
0002C960 <AmiBlitz3.ab3@15452>   SUBQ.l #8,a7
0002C966 <AmiBlitz3.ab3@15453>   fmove.d fp0,0(a7)
0002C968 <AmiBlitz3.ab3@15454>   MOVE.l (a7)+,d1
0002C96C <AmiBlitz3.ab3@15455>   BSR writelong
0002C96E <AmiBlitz3.ab3@15456>   MOVE.l (a7)+,d1
0002C972 <AmiBlitz3.ab3@15457>   BSR writelong
0002C976 <AmiBlitz3.ab3@15458>  BRA 'mode
0002C97A <AmiBlitz3.ab3@15462>   BSR.w writeword
0002C97C <AmiBlitz3.ab3@15463>   MOVE.l D0,D1
0002C980 <AmiBlitz3.ab3@15464>   BSR.w writelong
0002C984 <AmiBlitz3.ab3@15471>   MOVEA.l forthsp(PC),A0
0002C988 <AmiBlitz3.ab3@15472>   MOVEA.l -$20(A0),A3
0002C98E <AmiBlitz3.ab3@15473>   MOVEA.l hunkoffsetbase,A2
0002C994 <AmiBlitz3.ab3@15474>   MOVE.l A3,hunkoffsetbase
0002C99A <AmiBlitz3.ab3@15475>   MOVEA.l _execbase,A6
0002C99C <AmiBlitz3.ab3@15478>   CMPA.l A3,A2
0002C9A0 <AmiBlitz3.ab3@15479>   BEQ.w 'done
0002C9A6 <AmiBlitz3.ab3@15480>   SUBQ.l #1,hunkoffsetcounter
0002C9A8 <AmiBlitz3.ab3@15481>   MOVEA.l A2,A1
0002C9AA <AmiBlitz3.ab3@15482>   MOVEA.l (A2),A2
0002C9AC <AmiBlitz3.ab3@15483>   MOVEQ.l #$8,D0
0002C9B2 <AmiBlitz3.ab3@15485>   MOVE.l mempool2,a0
0002C9B6 <AmiBlitz3.ab3@15486>    JSR _FreePooled(A6)
0002C9BA <AmiBlitz3.ab3@15489>  BRA.w 'loop
0002C9BE <AmiBlitz3.ab3@15492>   MOVEA.l forthsp(PC),A0
0002C9C2 <AmiBlitz3.ab3@15495>   LEA -$12(A0),A0
0002C9C8 <AmiBlitz3.ab3@15496>   MOVE.l A0,forthsp
0002C9CC <AmiBlitz3.ab3@15498>   MOVEM.l (A7)+,D1/A0
0002C9D0 <AmiBlitz3.ab3@15499>   BSR.w reget
0002C9D4 <AmiBlitz3.ab3@15500> BRA.w 'more
0002C9D8 <AmiBlitz3.ab3@15509>   BSR.w getelement
0002C9DA <AmiBlitz3.ab3@15511>   TST.w d0
0002C9DE <AmiBlitz3.ab3@15512>   BEQ 'done
0002C9E2 <AmiBlitz3.ab3@15513>   CMP.b #",",d0
0002C9E6 <AmiBlitz3.ab3@15514>   BEQ 'done
0002C9EA <AmiBlitz3.ab3@15515>   CMP.b #"@",d0                                            ;expandline @@
0002C9EE <AmiBlitz3.ab3@15516>   BEQ 'done
0002C9F4 <AmiBlitz3.ab3@15519>   LEA operators,A0
0002C9F6 <AmiBlitz3.ab3@15522>    TST.w (A0)
0002C9FA <AmiBlitz3.ab3@15523>    BEQ.w 'done
0002C9FC <AmiBlitz3.ab3@15524>   CMP.w (A0),D0
0002CA00 <AmiBlitz3.ab3@15525>    BEQ.w 'found
0002CA04 <AmiBlitz3.ab3@15526>   LEA $20(A0),A0
0002CA08 <AmiBlitz3.ab3@15527>  BRA.w 'loop
0002CA0A <AmiBlitz3.ab3@15530>   MOVEQ.l #$00,D1
0002CA0C <AmiBlitz3.ab3@15531>  RTS
0002CA10 <AmiBlitz3.ab3@15534>   CMP.w #$3C,D0
0002CA14 <AmiBlitz3.ab3@15535>    BNE.w 'notlt
0002CA18 <AmiBlitz3.ab3@15536>    BSR.w get1bytemain
0002CA1C <AmiBlitz3.ab3@15537>   CMP.w #$3D,D0
0002CA20 <AmiBlitz3.ab3@15538>    BNE.w 'notlteq
0002CA26 <AmiBlitz3.ab3@15539>   LEA ople,A0
0002CA2A <AmiBlitz3.ab3@15540>  BRA.w 'found2
0002CA2E <AmiBlitz3.ab3@15543>   CMP.w #$3E,D0          ;'>'
0002CA32 <AmiBlitz3.ab3@15544>    BNE.w 'found3
0002CA36 <AmiBlitz3.ab3@15545>  BRA.w 'isne
0002CA3A <AmiBlitz3.ab3@15548>   CMP.w #$3E,D0          ;'>'
0002CA3E <AmiBlitz3.ab3@15549>    BNE.w 'notqt
0002CA42 <AmiBlitz3.ab3@15550>    BSR.w get1bytemain
0002CA46 <AmiBlitz3.ab3@15551>   CMP.w #$3D,D0          ;'='
0002CA4A <AmiBlitz3.ab3@15552>    BNE.w 'notgteq
0002CA50 <AmiBlitz3.ab3@15553>   LEA opge,A0
0002CA54 <AmiBlitz3.ab3@15554>  BRA.w 'found2
0002CA58 <AmiBlitz3.ab3@15557>   CMP.w #$3C,D0          ;'<'
0002CA5C <AmiBlitz3.ab3@15558>    BEQ.w 'isne
0002CA66 <AmiBlitz3.ab3@15563>     MOVE.w oldqflag,instringon
0002CA6C <AmiBlitz3.ab3@15564>     MOVEA.l lastsourcepos,A5
0002CA70 <AmiBlitz3.ab3@15566>  BRA.w 'found2
0002CA74 <AmiBlitz3.ab3@15569>   CMP.w #$3D,D0          ;'='
0002CA78 <AmiBlitz3.ab3@15570>    BNE.w 'found2
0002CA7C <AmiBlitz3.ab3@15571>    BSR.w get1bytemain
0002CA80 <AmiBlitz3.ab3@15572>   CMP.w #$3E,D0          ;'>'
0002CA84 <AmiBlitz3.ab3@15573>    BNE.w 'noteqgt
0002CA8A <AmiBlitz3.ab3@15574>   LEA opge,A0
0002CA8E <AmiBlitz3.ab3@15575>  BRA.w 'found2
0002CA92 <AmiBlitz3.ab3@15578>   CMP.w #$3C,D0          ;'<'
0002CA96 <AmiBlitz3.ab3@15579>   BNE.w 'found3
0002CA9C <AmiBlitz3.ab3@15582>   LEA opne,A0
0002CAA0 <AmiBlitz3.ab3@15588>   MOVE.w $1E(A0),D1
0002CAA2 <AmiBlitz3.ab3@15589> RTS
0002CAA4 <AmiBlitz3.ab3@15598>   MOVE.w d2,d1
0002CAA6 <AmiBlitz3.ab3@15599>   SUBQ.w #1,D1
0002CAAA <AmiBlitz3.ab3@15600>    BMI.w illoperr
0002CAAC <AmiBlitz3.ab3@15601>   LSL.w #2,D1
0002CAB0 <AmiBlitz3.ab3@15602>   MOVE.l $2(A0,D1.W),D1
0002CAB4 <AmiBlitz3.ab3@15603>    BEQ.w illoperr
0002CAB6 <AmiBlitz3.ab3@15604>   MOVEA.l D1,A0
0002CAB8 <AmiBlitz3.ab3@15605> JMP (A0)
0002CABC <AmiBlitz3.ab3@15621>   MOVEA.l precsp(PC),A1
0002CAC2 <AmiBlitz3.ab3@15622>   CMPA.l #precstackf,A1
0002CAC6 <AmiBlitz3.ab3@15623>    BCC.w pserr
0002CAC8 <AmiBlitz3.ab3@15624>   MOVE.w -(A1),D1
0002CACA <AmiBlitz3.ab3@15625>   MOVEA.l -(A1),A0
0002CAD0 <AmiBlitz3.ab3@15626>   MOVE.l A1,precsp
0002CAD2 <AmiBlitz3.ab3@15627> RTS
0002CAD6 <AmiBlitz3.ab3@15630> precsp:      Dc.l precstack
0002CBD2 <AmiBlitz3.ab3@15631> precstack:   Ds.l 63                                       ;ds 6*32 org source   ;Lotsa Room?
0002CC56 <AmiBlitz3.ab3@15632>              Ds.l 33
0002CC58 <AmiBlitz3.ab3@15638> mseq:  SEQ D0
0002CC5A <AmiBlitz3.ab3@15639> msne:    SNE D0
0002CC5C <AmiBlitz3.ab3@15640> mslt:    SLT D0
0002CC5E <AmiBlitz3.ab3@15641> msle:    SLE D0
0002CC60 <AmiBlitz3.ab3@15642> msgt:    SGT D0
0002CC62 <AmiBlitz3.ab3@15643> msge:    SGE D0
0002CC64 <AmiBlitz3.ab3@15645> cmp0:    CMP.b D0,D0
0002CC66 <AmiBlitz3.ab3@15646> cmp1:    CMP.w D0,D0
0002CC68 <AmiBlitz3.ab3@15647> cmp2:    CMP.l D0,D0
0002CC6C <AmiBlitz3.ab3@15651>   MOVE.w cmp0(PC),D1
0002CC70 <AmiBlitz3.ab3@15652> BRA.w doeqcmp2                                            ;writecompare
0002CC74 <AmiBlitz3.ab3@15656>   MOVE.w cmp0(PC),D1
0002CC78 <AmiBlitz3.ab3@15657> BRA.w donecmp2
0002CC7C <AmiBlitz3.ab3@15661>   MOVE.w cmp0(PC),D1
0002CC80 <AmiBlitz3.ab3@15662> BRA.w doltcmp2
0002CC84 <AmiBlitz3.ab3@15666>   MOVE.w cmp0(PC),D1
0002CC88 <AmiBlitz3.ab3@15667> BRA.w dolecmp2
0002CC8C <AmiBlitz3.ab3@15671>   MOVE.w cmp0(PC),D1
0002CC90 <AmiBlitz3.ab3@15672> BRA.w dogtcmp2
0002CC94 <AmiBlitz3.ab3@15677>   MOVE.w cmp0(PC),D1
0002CC98 <AmiBlitz3.ab3@15678> BRA.w dogecmp2
0002CC9C <AmiBlitz3.ab3@15682>   MOVE.w cmp1(PC),D1
0002CCA0 <AmiBlitz3.ab3@15683> BRA.w doeqcmp2
0002CCA4 <AmiBlitz3.ab3@15687>   MOVE.w cmp1(PC),D1
0002CCA8 <AmiBlitz3.ab3@15688> BRA.w donecmp2
0002CCAC <AmiBlitz3.ab3@15692>   MOVE.w cmp1(PC),D1
0002CCB0 <AmiBlitz3.ab3@15693> BRA.w doltcmp2
0002CCB4 <AmiBlitz3.ab3@15697>   MOVE.w cmp1(PC),D1
0002CCB8 <AmiBlitz3.ab3@15698> BRA.w dolecmp2
0002CCBC <AmiBlitz3.ab3@15702>   MOVE.w cmp1(PC),D1
0002CCC0 <AmiBlitz3.ab3@15703> BRA.w dogtcmp2
0002CCC4 <AmiBlitz3.ab3@15708>   MOVE.w cmp1(PC),D1
0002CCC8 <AmiBlitz3.ab3@15709> BRA.w dogecmp2
0002CCCC <AmiBlitz3.ab3@15713>   MOVE.w cmp2(PC),D1                                   ;writecomparelong
0002CCD0 <AmiBlitz3.ab3@15714> BRA doeqcmp2
0002CCD4 <AmiBlitz3.ab3@15717>   MOVE.w cmp2(PC),D1
0002CCD8 <AmiBlitz3.ab3@15718> BRA donecmp2
0002CCDC <AmiBlitz3.ab3@15722>   MOVE.w cmp2(PC),D1
0002CCE0 <AmiBlitz3.ab3@15723> BRA.w doltcmp2
0002CCE4 <AmiBlitz3.ab3@15727>   MOVE.w cmp2(PC),D1
0002CCE8 <AmiBlitz3.ab3@15728> BRA.w dolecmp2
0002CCEC <AmiBlitz3.ab3@15732>   MOVE.w cmp2(PC),D1
0002CCF0 <AmiBlitz3.ab3@15733> BRA.w dogtcmp2
0002CCF4 <AmiBlitz3.ab3@15737>   MOVE.w cmp2(PC),D1
0002CCF8 <AmiBlitz3.ab3@15738> BRA.w dogecmp2
0002CCFA <AmiBlitz3.ab3@15741> cfregat:  Ds.w 1
0002CD00 <AmiBlitz3.ab3@15745>   MOVE.w D1,libjsr+2
0002CD04 <AmiBlitz3.ab3@15746>    BSR.w savereg
0002CD06 <AmiBlitz3.ab3@15747>   MOVE.l D4,D1
0002CD0A <AmiBlitz3.ab3@15748>    BSR.w pokemovem
0002CD0E <AmiBlitz3.ab3@15749>   MOVE.w #$C900,D1
0002CD12 <AmiBlitz3.ab3@15750>    BSR.w Atokejsr
0002CD16 <AmiBlitz3.ab3@15751>    BSR.w ritetod0
0002CD1C <AmiBlitz3.ab3@15752>   MOVE.l libjsr,D1
0002CD20 <AmiBlitz3.ab3@15753>    BSR.w writelong
0002CD2A <AmiBlitz3.ab3@15754>   MOVE.w regnum,cfregat
0002CD30 <AmiBlitz3.ab3@15755>   CLR.w regnum
0002CD32 <AmiBlitz3.ab3@15756> RTS
0002CD3C <AmiBlitz3.ab3@15760>   MOVE.w cfregat,regnum
0002CD40 <AmiBlitz3.ab3@15761>    BSR.w ritefromd0
0002CD42 <AmiBlitz3.ab3@15762>   MOVE.l D5,D1
0002CD46 <AmiBlitz3.ab3@15763> BRA.w pokemovem
0002CD48 <AmiBlitz3.ab3@15767>    MOVEQ.l #-$2A,D1
0002CD4E <AmiBlitz3.ab3@15768>    TST.b fpu
0002CD52 <AmiBlitz3.ab3@15769>    BEQ 'nofpu
0002CD54 <AmiBlitz3.ab3@15770>    MOVEQ #0,d1
0002CD5A <AmiBlitz3.ab3@15771>    MOVE.w regnum,d1
0002CD5C <AmiBlitz3.ab3@15772>    MOVE.l d1,d2
0002CD5E <AmiBlitz3.ab3@15773>    ASL.l #7,d1
0002CD60 <AmiBlitz3.ab3@15774>    ADDQ  #1,d2
0002CD62 <AmiBlitz3.ab3@15775>    ASL.l #8,d2
0002CD64 <AmiBlitz3.ab3@15776>    ASL.l #2,d2
0002CD66 <AmiBlitz3.ab3@15777>    OR.l d2,d1
0002CD6C <AmiBlitz3.ab3@15778>    OR.l #$f2000038,d1
0002CD72 <AmiBlitz3.ab3@15779>    JSR writelong
0002CD76 <AmiBlitz3.ab3@15780>    MOVE.w #$f240,d1
0002CD7C <AmiBlitz3.ab3@15781>    OR.w regnum,d1
0002CD80 <AmiBlitz3.ab3@15782>    BSR writeword
0002CD82 <AmiBlitz3.ab3@15783>    MOVEQ.l #1,d2
0002CD86 <AmiBlitz3.ab3@15784>    MOVE.w #1,d1                                            ;fpu comp fseq
0002CD8A <AmiBlitz3.ab3@15785>    BSR writeword
0002CD8C <AmiBlitz3.ab3@15786>  RTS
0002CD90 <AmiBlitz3.ab3@15789>    BSR.w docflib
0002CD94 <AmiBlitz3.ab3@15790>    BSR.w doeqcmp
0002CD98 <AmiBlitz3.ab3@15791> BRA.w docflib2
0002CD9A <AmiBlitz3.ab3@15795>   MOVEQ.l #-$2A,D1
0002CDA0 <AmiBlitz3.ab3@15796>   TST.b fpu
0002CDA4 <AmiBlitz3.ab3@15797>    BEQ 'nofpu
0002CDA6 <AmiBlitz3.ab3@15798>    MOVEQ #0,d1
0002CDAC <AmiBlitz3.ab3@15799>    MOVE.w regnum,d1
0002CDAE <AmiBlitz3.ab3@15800>    MOVE.l d1,d2
0002CDB0 <AmiBlitz3.ab3@15801>    ASL.l #7,d1
0002CDB2 <AmiBlitz3.ab3@15802>    ADDQ  #1,d2
0002CDB4 <AmiBlitz3.ab3@15803>    ASL.l #8,d2
0002CDB6 <AmiBlitz3.ab3@15804>    ASL.l #2,d2
0002CDB8 <AmiBlitz3.ab3@15805>    OR.l d2,d1
0002CDBE <AmiBlitz3.ab3@15806>    OR.l #$f2000038,d1
0002CDC4 <AmiBlitz3.ab3@15807>    JSR writelong
0002CDC8 <AmiBlitz3.ab3@15808>    MOVE.w #$f240,d1
0002CDCE <AmiBlitz3.ab3@15809>    OR.w regnum,d1
0002CDD2 <AmiBlitz3.ab3@15810>    BSR writeword
0002CDD8 <AmiBlitz3.ab3@15811>    MOVE.l #1,d2
0002CDDC <AmiBlitz3.ab3@15812>    MOVE.w #$e,d1                                           ;fpu comp fsne
0002CDE0 <AmiBlitz3.ab3@15813>    BSR writeword
0002CDE2 <AmiBlitz3.ab3@15814>  RTS
0002CDE6 <AmiBlitz3.ab3@15817>    BSR.w docflib
0002CDEA <AmiBlitz3.ab3@15818>    BSR.w donecmp
0002CDEE <AmiBlitz3.ab3@15819> BRA.w docflib2
0002CDF0 <AmiBlitz3.ab3@15823>   MOVEQ.l #-$2A,D1
0002CDF6 <AmiBlitz3.ab3@15824>     TST.b fpu
0002CDFA <AmiBlitz3.ab3@15825>    BEQ 'nofpu
0002CDFC <AmiBlitz3.ab3@15826>    MOVEQ #0,d1
0002CE02 <AmiBlitz3.ab3@15827>    MOVE.w regnum,d1
0002CE04 <AmiBlitz3.ab3@15828>    MOVE.l d1,d2
0002CE06 <AmiBlitz3.ab3@15829>    ASL.l #7,d1
0002CE08 <AmiBlitz3.ab3@15830>    ADDQ  #1,d2
0002CE0A <AmiBlitz3.ab3@15831>    ASL.l #8,d2
0002CE0C <AmiBlitz3.ab3@15832>    ASL.l #2,d2
0002CE0E <AmiBlitz3.ab3@15833>    OR.l d2,d1
0002CE14 <AmiBlitz3.ab3@15834>    OR.l #$f2000038,d1
0002CE1A <AmiBlitz3.ab3@15835>    JSR writelong
0002CE1E <AmiBlitz3.ab3@15836>    MOVE.w #$f240,d1
0002CE24 <AmiBlitz3.ab3@15837>    OR.w regnum,d1
0002CE28 <AmiBlitz3.ab3@15838>    BSR writeword
0002CE2E <AmiBlitz3.ab3@15839>    MOVE.l #$1,d2
0002CE32 <AmiBlitz3.ab3@15840>    MOVE.w #$14,d1                                          ;fpu comp fslt
0002CE36 <AmiBlitz3.ab3@15841>    BSR writeword
0002CE38 <AmiBlitz3.ab3@15842>  RTS
0002CE3C <AmiBlitz3.ab3@15845>    BSR.w docflib
0002CE40 <AmiBlitz3.ab3@15846>    BSR.w doltcmp
0002CE44 <AmiBlitz3.ab3@15847> BRA.w docflib2
0002CE46 <AmiBlitz3.ab3@15851>   MOVEQ.l #-$2A,D1
0002CE4C <AmiBlitz3.ab3@15852>   TST.b fpu
0002CE50 <AmiBlitz3.ab3@15853>    BEQ 'nofpu
0002CE52 <AmiBlitz3.ab3@15854>    MOVEQ #0,d1
0002CE58 <AmiBlitz3.ab3@15855>    MOVE.w regnum,d1
0002CE5A <AmiBlitz3.ab3@15856>    MOVE.l d1,d2
0002CE5C <AmiBlitz3.ab3@15857>    ASL.l #7,d1
0002CE5E <AmiBlitz3.ab3@15858>    ADDQ  #1,d2
0002CE60 <AmiBlitz3.ab3@15859>    ASL.l #8,d2
0002CE62 <AmiBlitz3.ab3@15860>    ASL.l #2,d2
0002CE64 <AmiBlitz3.ab3@15861>    OR.l d2,d1
0002CE6A <AmiBlitz3.ab3@15862>    OR.l #$f2000038,d1
0002CE70 <AmiBlitz3.ab3@15863>    JSR writelong
0002CE74 <AmiBlitz3.ab3@15864>    MOVE.w #$f240,d1
0002CE7A <AmiBlitz3.ab3@15865>    OR.w regnum,d1
0002CE7E <AmiBlitz3.ab3@15866>    BSR writeword
0002CE84 <AmiBlitz3.ab3@15867>    MOVE.l #1,d2
0002CE88 <AmiBlitz3.ab3@15868>    MOVE.w #$15,d1                                          ;fpu comp fsle
0002CE8C <AmiBlitz3.ab3@15869>    BSR writeword
0002CE8E <AmiBlitz3.ab3@15870>  RTS
0002CE92 <AmiBlitz3.ab3@15873>    BSR.w docflib
0002CE96 <AmiBlitz3.ab3@15874>    BSR.w dolecmp
0002CE9A <AmiBlitz3.ab3@15875> BRA.w docflib2
0002CE9C <AmiBlitz3.ab3@15879>   MOVEQ.l #-$2A,D1
0002CEA2 <AmiBlitz3.ab3@15880>    TST.b fpu
0002CEA6 <AmiBlitz3.ab3@15881>    BEQ 'nofpu
0002CEA8 <AmiBlitz3.ab3@15882>     MOVEQ #0,d1
0002CEAE <AmiBlitz3.ab3@15883>    MOVE.w regnum,d1
0002CEB0 <AmiBlitz3.ab3@15884>    MOVE.l d1,d2
0002CEB2 <AmiBlitz3.ab3@15885>    ASL.l #7,d1
0002CEB4 <AmiBlitz3.ab3@15886>    ADDQ  #1,d2
0002CEB6 <AmiBlitz3.ab3@15887>    ASL.l #8,d2
0002CEB8 <AmiBlitz3.ab3@15888>    ASL.l #2,d2
0002CEBA <AmiBlitz3.ab3@15889>    OR.l d2,d1
0002CEC0 <AmiBlitz3.ab3@15890>    OR.l #$f2000038,d1
0002CEC6 <AmiBlitz3.ab3@15891>    JSR writelong
0002CECA <AmiBlitz3.ab3@15892>    MOVE.w #$f240,d1
0002CED0 <AmiBlitz3.ab3@15893>    OR.w regnum,d1
0002CED4 <AmiBlitz3.ab3@15894>    BSR writeword
0002CEDA <AmiBlitz3.ab3@15895>    MOVE.l #1,d2
0002CEDE <AmiBlitz3.ab3@15896>    MOVE.w #$12,d1                                          ;fpu comp fsgt
0002CEE2 <AmiBlitz3.ab3@15897>    BSR writeword
0002CEE4 <AmiBlitz3.ab3@15898>  RTS
0002CEE8 <AmiBlitz3.ab3@15901>    BSR.w docflib
0002CEEC <AmiBlitz3.ab3@15902>    BSR.w dogtcmp
0002CEF0 <AmiBlitz3.ab3@15903> BRA.w docflib2
0002CEF2 <AmiBlitz3.ab3@15907>   MOVEQ.l #-$2A,D1
0002CEF8 <AmiBlitz3.ab3@15908>  TST.b fpu
0002CEFC <AmiBlitz3.ab3@15909>    BEQ 'nofpu
0002CEFE <AmiBlitz3.ab3@15910>    MOVEQ #0,d1
0002CF04 <AmiBlitz3.ab3@15911>    MOVE.w regnum,d1
0002CF06 <AmiBlitz3.ab3@15912>    MOVE.l d1,d2
0002CF08 <AmiBlitz3.ab3@15913>    ASL.l #7,d1
0002CF0A <AmiBlitz3.ab3@15914>    ADDQ  #1,d2
0002CF0C <AmiBlitz3.ab3@15915>    ASL.l #8,d2
0002CF0E <AmiBlitz3.ab3@15916>    ASL.l #2,d2
0002CF10 <AmiBlitz3.ab3@15917>    OR.l d2,d1
0002CF16 <AmiBlitz3.ab3@15918>    OR.l #$f2000038,d1
0002CF1C <AmiBlitz3.ab3@15919>    JSR writelong
0002CF20 <AmiBlitz3.ab3@15920>    MOVE.w #$f240,d1
0002CF26 <AmiBlitz3.ab3@15921>    OR.w regnum,d1
0002CF2A <AmiBlitz3.ab3@15922>    BSR writeword
0002CF30 <AmiBlitz3.ab3@15923>    MOVE.l #1,d2
0002CF34 <AmiBlitz3.ab3@15924>    MOVE.w #$13,d1                                          ;fpu comp fsge
0002CF38 <AmiBlitz3.ab3@15925>    BSR writeword
0002CF3A <AmiBlitz3.ab3@15926>  RTS
0002CF3E <AmiBlitz3.ab3@15929>    BSR.w docflib
0002CF42 <AmiBlitz3.ab3@15930>    BSR.w dogecmp
0002CF46 <AmiBlitz3.ab3@15931> BRA.w docflib2
0002CF4C <AmiBlitz3.ab3@15936>   MOVE.l #$CE00,D1
0002CF52 <AmiBlitz3.ab3@15937>    MOVE.l d1,lastinstruction
0002CF56 <AmiBlitz3.ab3@15938>    BSR.w Atokejsr
0002CF5A <AmiBlitz3.ab3@15939> BRA.w doeqcmp
0002CF60 <AmiBlitz3.ab3@15943>   MOVE.l #$CE00,D1
0002CF66 <AmiBlitz3.ab3@15944>    MOVE.l d1,lastinstruction
0002CF6A <AmiBlitz3.ab3@15945>    BSR.w Atokejsr
0002CF6E <AmiBlitz3.ab3@15946> BRA.w donecmp
0002CF74 <AmiBlitz3.ab3@15950>   MOVE.l #$CE00,D1
0002CF7A <AmiBlitz3.ab3@15951>    MOVE.l d1,lastinstruction
0002CF7E <AmiBlitz3.ab3@15952>    BSR.w Atokejsr
0002CF82 <AmiBlitz3.ab3@15953> BRA.w doltcmp
0002CF88 <AmiBlitz3.ab3@15957>   MOVE.l #$CE00,D1
0002CF8E <AmiBlitz3.ab3@15958>    MOVE.l d1,lastinstruction
0002CF92 <AmiBlitz3.ab3@15959>    BSR.w Atokejsr
0002CF96 <AmiBlitz3.ab3@15960> BRA.w dolecmp
0002CF9C <AmiBlitz3.ab3@15964>   MOVE.l #$CE00,D1
0002CFA2 <AmiBlitz3.ab3@15965>    MOVE.l d1,lastinstruction
0002CFA6 <AmiBlitz3.ab3@15966>    BSR.w Atokejsr
0002CFAA <AmiBlitz3.ab3@15967> BRA.w dogtcmp
0002CFB0 <AmiBlitz3.ab3@15971>   MOVE.l #$CE00,D1
0002CFB6 <AmiBlitz3.ab3@15972>    MOVE.l d1,lastinstruction
0002CFBA <AmiBlitz3.ab3@15973>    BSR.w Atokejsr
0002CFBE <AmiBlitz3.ab3@15974> BRA.w dogecmp
0002CFC4 <AmiBlitz3.ab3@15979>   TST.b fast                                               ;compare
0002CFC8 <AmiBlitz3.ab3@15980>   BEQ 'org
0002CFCE <AmiBlitz3.ab3@15984>   MOVE.l destpointer,a0
0002CFD4 <AmiBlitz3.ab3@15985>   SUB.l imm_addr,a0
0002CFDA <AmiBlitz3.ab3@15986>   CMP.l #6,a0
0002CFDE <AmiBlitz3.ab3@15987>   BNE 'l11
0002CFE4 <AmiBlitz3.ab3@15988>   MOVE.l imm_addr,a0
0002CFEC <AmiBlitz3.ab3@15989>   CMP.w #$223c,imm_addr
0002CFF0 <AmiBlitz3.ab3@15990>   BNE 'org
0002CFF6 <AmiBlitz3.ab3@15991>   ADD.w #$8e80,-6(a4)
0002CFFC <AmiBlitz3.ab3@15994>   CLR.l imm_addr
0002CFFE <AmiBlitz3.ab3@15995>  RTS
0002D004 <AmiBlitz3.ab3@15998>   CMP.l #4,a0
0002D008 <AmiBlitz3.ab3@15999>   BNE 'l10
0002D00C <AmiBlitz3.ab3@16000>   CMP.b #2,d3
0002D010 <AmiBlitz3.ab3@16001>   BNE 'l11b
0002D016 <AmiBlitz3.ab3@16002>   ADD.w #$7e40,-4(a4)
0002D018 <AmiBlitz3.ab3@16003>  RTS
0002D01E <AmiBlitz3.ab3@16006>   ADD.w #$7e00,-4(a4)
0002D020 <AmiBlitz3.ab3@16007>  RTS
0002D026 <AmiBlitz3.ab3@16010>    MOVE.l destpointer,a0
0002D02C <AmiBlitz3.ab3@16011>    SUB.l load_var_addr,a0
0002D030 <AmiBlitz3.ab3@16012>    CMP.w #4,a0
0002D034 <AmiBlitz3.ab3@16013>    BNE 'org
0002D038 <AmiBlitz3.ab3@16014>    CMP.b #3,d3
0002D03C <AmiBlitz3.ab3@16015>    BCS 'lv1
0002D042 <AmiBlitz3.ab3@16016>    CLR.l load_var_addr
0002D048 <AmiBlitz3.ab3@16017>    ADD.w #$9080-$200,-4(a4)
0002D04A <AmiBlitz3.ab3@16018>  RTS
0002D04E <AmiBlitz3.ab3@16021>   CMP.b #2,d3
0002D052 <AmiBlitz3.ab3@16022>    BNE 'org
0002D058 <AmiBlitz3.ab3@16023>    CLR.l load_var_addr
0002D05E <AmiBlitz3.ab3@16024>    ADD.w #$8040-$200,-4(a4)
0002D060 <AmiBlitz3.ab3@16025>  RTS
0002D066 <AmiBlitz3.ab3@16028>   MOVE.w regnum,D3
0002D068 <AmiBlitz3.ab3@16029>   OR.w D3,D1
0002D06A <AmiBlitz3.ab3@16030>   LSL.w #8,D3
0002D06C <AmiBlitz3.ab3@16031>   LSL.w #1,D3
0002D06E <AmiBlitz3.ab3@16032>   OR.w D3,D1
0002D070 <AmiBlitz3.ab3@16033>   ADDQ.w #1,D1
0002D074 <AmiBlitz3.ab3@16034> BRA.w writeword
0002D078 <AmiBlitz3.ab3@16038>    BSR.w cmpit
0002D07C <AmiBlitz3.ab3@16041>    MOVE.w mseq(PC),D1
0002D080 <AmiBlitz3.ab3@16042> BRA.w cpoke
0002D084 <AmiBlitz3.ab3@16046>   BSR.w cmpit
0002D088 <AmiBlitz3.ab3@16049>   MOVE.w msne(PC),D1
0002D08C <AmiBlitz3.ab3@16050> BRA.w cpoke
0002D090 <AmiBlitz3.ab3@16054>   BSR.w cmpit
0002D094 <AmiBlitz3.ab3@16057>    MOVE.w mslt(PC),D1
0002D098 <AmiBlitz3.ab3@16058> BRA.w cpoke
0002D09C <AmiBlitz3.ab3@16062>    BSR.w cmpit
0002D0A0 <AmiBlitz3.ab3@16065>    MOVE.w msle(PC),D1
0002D0A4 <AmiBlitz3.ab3@16066> BRA.w cpoke
0002D0A8 <AmiBlitz3.ab3@16070>    BSR.w cmpit
0002D0AC <AmiBlitz3.ab3@16073>    MOVE.w msgt(PC),D1
0002D0B0 <AmiBlitz3.ab3@16074> BRA.w cpoke
0002D0B4 <AmiBlitz3.ab3@16078>   BSR.w cmpit
0002D0B8 <AmiBlitz3.ab3@16081>    MOVE.w msge(PC),D1
0002D0BE <AmiBlitz3.ab3@16084>    OR.w regnum,D1
0002D0C2 <AmiBlitz3.ab3@16085>    CMP.w #5,d2
0002D0C6 <AmiBlitz3.ab3@16086>    BNE 'nod0
0002D0CA <AmiBlitz3.ab3@16087>    CMP.w #5,d3
0002D0CE <AmiBlitz3.ab3@16088>    BNE 'nod0
0002D0D0 <AmiBlitz3.ab3@16089>    MOVE.l d1,-(a7)
0002D0D6 <AmiBlitz3.ab3@16090>    MOVE.l #$44004a00,d1                                    ;68k neg.b:tst.b
0002D0DA <AmiBlitz3.ab3@16091>    BSR writelong
0002D0DC <AmiBlitz3.ab3@16092>    MOVE.l (a7)+,d1
0002D0E0 <AmiBlitz3.ab3@16095>    BSR.w writeword                                         ;writeseq
0002D0E2 <AmiBlitz3.ab3@16096>    MOVEQ.l #1,d2
0002D0E8 <AmiBlitz3.ab3@16097>    MOVE.l lasttoken,d1
0002D0EE <AmiBlitz3.ab3@16098>     TST.b fast
0002D0F2 <AmiBlitz3.ab3@16099>     BEQ.s 'l11
0002D0F8 <AmiBlitz3.ab3@16100>    CMP.l #$800b,d1
0002D0FC <AmiBlitz3.ab3@16101>    BEQ 'l10
0002D100 <AmiBlitz3.ab3@16104>   MOVE.w #$4880,D1                                         ;ext.w D regat
0002D106 <AmiBlitz3.ab3@16105>   OR.w regnum,D1
0002D10A <AmiBlitz3.ab3@16106>    BSR.w writeword                                         ;writeext.w
0002D10C <AmiBlitz3.ab3@16107>   MOVEQ.l #$02,D2                                          ;type now WORD!
0002D10E <AmiBlitz3.ab3@16110> RTS
0002D112 <AmiBlitz3.ab3@16115>   MOVE.w #$D040,D1
0002D114 <AmiBlitz3.ab3@16116>   MOVEQ.l #$02,D2                                          ;writeaddword   ;now a word
0002D118 <AmiBlitz3.ab3@16117> BRA.w doplus2
0002D11C <AmiBlitz3.ab3@16121>   MOVE.w #$D040,D1
0002D11E <AmiBlitz3.ab3@16122>   MOVEQ.l #$03,D2                                          ;now a long
0002D122 <AmiBlitz3.ab3@16123>    BSR.w doplus2
0002D126 <AmiBlitz3.ab3@16124> BRA.w convert_word_to_long
0002D12A <AmiBlitz3.ab3@16128>   MOVE.w #$D080,D1                                         ;writeaddlong
0002D12C <AmiBlitz3.ab3@16131>   MOVE.w d1,a1
0002D132 <AmiBlitz3.ab3@16132>   TST.b fast
0002D136 <AmiBlitz3.ab3@16133>   BEQ 'l10
0002D138 <AmiBlitz3.ab3@16137>   ASR.w #8,d1
0002D13C <AmiBlitz3.ab3@16138>   CMP.b #$90,d1
0002D140 <AmiBlitz3.ab3@16139>   BEQ 'sub1
0002D144 <AmiBlitz3.ab3@16140>   CMP.b #$d0,d1
0002D148 <AmiBlitz3.ab3@16141>   BNE 'l10
0002D14C <AmiBlitz3.ab3@16142>   CMP.b #3,d3
0002D150 <AmiBlitz3.ab3@16143>   BCS 'lq10
0002D156 <AmiBlitz3.ab3@16144>   TST.b quickadd
0002D15C <AmiBlitz3.ab3@16148>    MOVE.l destpointer,a0
0002D162 <AmiBlitz3.ab3@16149>    CLR.b quickadd
0002D168 <AmiBlitz3.ab3@16150>    CLR.l load_var_addr
0002D16E <AmiBlitz3.ab3@16151>    SUB.l imm_addr,a0
0002D172 <AmiBlitz3.ab3@16152>    CMP.w #6,a0
0002D176 <AmiBlitz3.ab3@16153>    BEQ 'li10
0002D17A <AmiBlitz3.ab3@16154>    CMP.w #4,a0
0002D17E <AmiBlitz3.ab3@16155>    BNE.s 'li1
0002D184 <AmiBlitz3.ab3@16156>    CLR.l imm_addr
0002D18A <AmiBlitz3.ab3@16157>    ADD.w #$a040-$200,-4(a4)
0002D18C <AmiBlitz3.ab3@16158>  RTS
0002D18E <AmiBlitz3.ab3@16161>    MOVE.l a4,a0
0002D194 <AmiBlitz3.ab3@16162>    SUB.l load_var_addr,a0
0002D19A <AmiBlitz3.ab3@16163>    CMP.l #$a,a0
0002D19E <AmiBlitz3.ab3@16164>    BNE 'l10e
0002D1A4 <AmiBlitz3.ab3@16165>    CLR.l load_var_addr
0002D1A8 <AmiBlitz3.ab3@16166>    MOVE.w -$8(a4),d1
0002D1AE <AmiBlitz3.ab3@16167>    MOVE.l -$4(a4),-$8(a4)
0002D1B2 <AmiBlitz3.ab3@16168>    MOVE.w d1,-$4(a4)
0002D1B8 <AmiBlitz3.ab3@16169>    SUB.w #$1980,-$a(a4)
0002D1BE <AmiBlitz3.ab3@16170>    SUBQ.l #2,destpointer
0002D1C0 <AmiBlitz3.ab3@16171>  RTS
0002D1C6 <AmiBlitz3.ab3@16174>   CLR.b quickadd
0002D1CA <AmiBlitz3.ab3@16175>  BRA 'l10
0002D1D0 <AmiBlitz3.ab3@16178>    CLR.l imm_addr
0002D1D4 <AmiBlitz3.ab3@16179>    TST.l -4(a4)                                            ;skip If ADD.l #0,dx
0002D1D8 <AmiBlitz3.ab3@16180>    BNE 'doit
0002D1DE <AmiBlitz3.ab3@16181>    SUBQ.l #6,destpointer
0002D1E0 <AmiBlitz3.ab3@16182>  RTS
0002D1E6 <AmiBlitz3.ab3@16185>    ADD.w #$b080-$200,-6(a4)
0002D1E8 <AmiBlitz3.ab3@16186>  RTS
0002D1EE <AmiBlitz3.ab3@16189>    MOVE.l destpointer,a0
0002D1F4 <AmiBlitz3.ab3@16190>    SUB.l load_var_addr,a0
0002D1F8 <AmiBlitz3.ab3@16191>    CMP.w #4,a0
0002D1FC <AmiBlitz3.ab3@16192>    BNE 'l10
0002D200 <AmiBlitz3.ab3@16193>    CMP.b #3,d3
0002D204 <AmiBlitz3.ab3@16194>    BNE 'lv1
0002D20A <AmiBlitz3.ab3@16195>    CLR.l load_var_addr
0002D210 <AmiBlitz3.ab3@16196>    ADD.w #$b080-$200,-4(a4)
0002D212 <AmiBlitz3.ab3@16197>  RTS
0002D216 <AmiBlitz3.ab3@16200>   CMP.b #2,d3
0002D21A <AmiBlitz3.ab3@16201>   BNE 'l10
0002D220 <AmiBlitz3.ab3@16202>   CLR.l load_var_addr
0002D226 <AmiBlitz3.ab3@16203>   ADD.w #$a040-$200,-4(a4)
0002D228 <AmiBlitz3.ab3@16204>  RTS
0002D22E <AmiBlitz3.ab3@16207>   MOVE.w regnum,D3
0002D230 <AmiBlitz3.ab3@16208>   MOVE.w a1,d1
0002D232 <AmiBlitz3.ab3@16209>   OR.w D3,D1
0002D234 <AmiBlitz3.ab3@16210>   ADDQ.w #1,D1
0002D236 <AmiBlitz3.ab3@16211>   LSL.w #8,D3
0002D238 <AmiBlitz3.ab3@16212>   LSL.w #1,D3
0002D23A <AmiBlitz3.ab3@16213>   OR.w D3,D1
0002D23E <AmiBlitz3.ab3@16214>  BRA.w writeword
0002D242 <AmiBlitz3.ab3@16217>    CMP.b #3,d3
0002D246 <AmiBlitz3.ab3@16218>    BCS 'sub1_lq10
0002D24C <AmiBlitz3.ab3@16219>    TST.b quickadd
0002D252 <AmiBlitz3.ab3@16223>    MOVE.l destpointer,a0
0002D258 <AmiBlitz3.ab3@16224>    CLR.b quickadd
0002D25E <AmiBlitz3.ab3@16225>    CLR.l load_var_addr
0002D264 <AmiBlitz3.ab3@16226>    SUB.l imm_addr,a0
0002D268 <AmiBlitz3.ab3@16227>    CMP.w #6,a0
0002D26C <AmiBlitz3.ab3@16228>    BEQ 'sub1_li10
0002D270 <AmiBlitz3.ab3@16229>    CMP.w #4,a0
0002D274 <AmiBlitz3.ab3@16230>    BNE.s 'sub1_li1
0002D27A <AmiBlitz3.ab3@16231>    CLR.l imm_addr
0002D280 <AmiBlitz3.ab3@16232>    ADD.w #$6040-$200,-4(a4)
0002D282 <AmiBlitz3.ab3@16233>  RTS
0002D284 <AmiBlitz3.ab3@16236>    MOVE.l a4,a0
0002D28A <AmiBlitz3.ab3@16237>     SUB.l load_var_addr,a0
0002D290 <AmiBlitz3.ab3@16238>     CMP.l #$a,a0
0002D294 <AmiBlitz3.ab3@16239>     BNE 'sub1_l10e
0002D29A <AmiBlitz3.ab3@16240>    CLR.l load_var_addr
0002D29E <AmiBlitz3.ab3@16241>    MOVE.w -$8(a4),d1
0002D2A4 <AmiBlitz3.ab3@16242>    MOVE.l -$4(a4),-$8(a4)
0002D2A8 <AmiBlitz3.ab3@16243>    MOVE.w d1,-$4(a4)
0002D2AE <AmiBlitz3.ab3@16244>    SUB.w #$1b80,-$a(a4)
0002D2B4 <AmiBlitz3.ab3@16245>    SUBQ.l #2,destpointer
0002D2B6 <AmiBlitz3.ab3@16246>  RTS
0002D2BC <AmiBlitz3.ab3@16249>   CLR.b quickadd
0002D2C0 <AmiBlitz3.ab3@16250>  BRA 'sub1_l10
0002D2C6 <AmiBlitz3.ab3@16253>    CLR.l imm_addr
0002D2CC <AmiBlitz3.ab3@16254>    ADD.w #$7080-$200,-6(a4)
0002D2CE <AmiBlitz3.ab3@16255>  RTS
0002D2D4 <AmiBlitz3.ab3@16258>    MOVE.l destpointer,a0
0002D2DA <AmiBlitz3.ab3@16259>    SUB.l load_var_addr,a0
0002D2DE <AmiBlitz3.ab3@16260>    CMP.w #4,a0
0002D2E2 <AmiBlitz3.ab3@16261>    BNE 'sub1_l10
0002D2E6 <AmiBlitz3.ab3@16262>    CMP.b #3,d3
0002D2EA <AmiBlitz3.ab3@16263>    BNE 'sub1_lv1
0002D2F0 <AmiBlitz3.ab3@16264>    CLR.l load_var_addr
0002D2F6 <AmiBlitz3.ab3@16265>    ADD.w #$7080-$200,-4(a4)
0002D2F8 <AmiBlitz3.ab3@16266>  RTS
0002D2FC <AmiBlitz3.ab3@16269>    CMP.b #2,d3
0002D300 <AmiBlitz3.ab3@16270>    BNE 'sub1_l10
0002D306 <AmiBlitz3.ab3@16271>    CLR.l load_var_addr
0002D30C <AmiBlitz3.ab3@16272>    ADD.w #$6040-$200,-4(a4)
0002D30E <AmiBlitz3.ab3@16273>  RTS
0002D314 <AmiBlitz3.ab3@16276>   MOVE.w regnum,D3
0002D316 <AmiBlitz3.ab3@16277>   MOVE.w a1,d1
0002D318 <AmiBlitz3.ab3@16278>   OR.w D3,D1
0002D31A <AmiBlitz3.ab3@16279>   ADDQ.w #1,D1
0002D31C <AmiBlitz3.ab3@16280>   LSL.w #8,D3
0002D31E <AmiBlitz3.ab3@16281>   LSL.w #1,D3
0002D320 <AmiBlitz3.ab3@16282>   OR.w D3,D1
0002D324 <AmiBlitz3.ab3@16283> BRA.w writeword
0002D326 <AmiBlitz3.ab3@16287>   MOVEQ #0,d0
0002D32C <AmiBlitz3.ab3@16288>   MOVE.w regnum,d0
0002D32E <AmiBlitz3.ab3@16289>   ADDQ #1,d0
0002D330 <AmiBlitz3.ab3@16290>   ASL.w #8,d0
0002D332 <AmiBlitz3.ab3@16291>   ASL.w #2,d0
0002D338 <AmiBlitz3.ab3@16292>   MOVE.l #$f2000022,d1                                     ;fpu add
0002D33A <AmiBlitz3.ab3@16293>   OR.l d0,d1
0002D340 <AmiBlitz3.ab3@16294>   MOVE.w regnum,d0
0002D342 <AmiBlitz3.ab3@16295>   ASL.w #7,d0
0002D344 <AmiBlitz3.ab3@16296>   OR.l d0,d1
0002D348 <AmiBlitz3.ab3@16297> BRA.w writelong
0002D34E <AmiBlitz3.ab3@16304>   TST.b iee
0002D352 <AmiBlitz3.ab3@16305>   BNE do_plus_float_fadd1
0002D356 <AmiBlitz3.ab3@16306>   MOVE.w #$FFBE,D1                                         ;#-66,d1 org soruce ;floatadd
0002D35C <AmiBlitz3.ab3@16309>    MOVE.w D1,libjsr+2
0002D360 <AmiBlitz3.ab3@16310>    BSR.w savereg
0002D362 <AmiBlitz3.ab3@16311>   MOVE.l D4,D1
0002D366 <AmiBlitz3.ab3@16312>    BSR.w pokemovem
0002D36A <AmiBlitz3.ab3@16313>   MOVE.w #$C900,D1
0002D36E <AmiBlitz3.ab3@16314>    BSR.w Atokejsr
0002D372 <AmiBlitz3.ab3@16315>    BSR.w ritetod0
0002D378 <AmiBlitz3.ab3@16316>   MOVE.l libjsr,D1
0002D37C <AmiBlitz3.ab3@16317>    BSR.w writelong
0002D380 <AmiBlitz3.ab3@16318>    BSR.w ritefromd0
0002D382 <AmiBlitz3.ab3@16319>   MOVE.l D5,D1
0002D386 <AmiBlitz3.ab3@16320> BRA.w pokemovem
0002D38C <AmiBlitz3.ab3@16324>   MOVE.w regnum,D1
0002D38E <AmiBlitz3.ab3@16325>   LSL.w #8,D1
0002D390 <AmiBlitz3.ab3@16326>   LSL.w #1,D1
0002D392 <AmiBlitz3.ab3@16327>   MOVE.w D1,-(A7)
0002D396 <AmiBlitz3.ab3@16328>   CMP.w #3072,d1
0002D39A <AmiBlitz3.ab3@16329>   BEQ 'l1
0002D3A0 <AmiBlitz3.ab3@16330>   OR.w addcode,D1                                          ;move.l (a7)+,d0
0002D3A4 <AmiBlitz3.ab3@16331> BRA 'l2
0002D3A8 <AmiBlitz3.ab3@16334>    MOVE.w #$588f,d1                                        ;addq.l #4,a7
0002D3AC <AmiBlitz3.ab3@16337>    BSR.w writeword
0002D3AE <AmiBlitz3.ab3@16338>   MOVE.w (A7)+,D1
0002D3B4 <AmiBlitz3.ab3@16339>   OR.w addcode+2,D1                                        ;native string add.l d0,(a7)
0002D3B8 <AmiBlitz3.ab3@16340> BRA.w writeword
0002D3BC <AmiBlitz3.ab3@16346>   MOVE.w #$9040,D1
0002D3C0 <AmiBlitz3.ab3@16347> BRA.w doplus2
0002D3C4 <AmiBlitz3.ab3@16351>   MOVE.w #$9040,D1
0002D3C8 <AmiBlitz3.ab3@16352> BRA.w doplus2
0002D3CC <AmiBlitz3.ab3@16356>   MOVE.w #$9080,D1
0002D3D0 <AmiBlitz3.ab3@16357> BRA.w doplus2
0002D3D6 <AmiBlitz3.ab3@16361>    TST.b iee
0002D3DA <AmiBlitz3.ab3@16362>     BNE 'fs1
0002D3DE <AmiBlitz3.ab3@16363>   MOVE.w #$FFB8,D1                                         ;floatsub
0002D3E2 <AmiBlitz3.ab3@16364> BRA.w doflib
0002D3E4 <AmiBlitz3.ab3@16367>   MOVEQ #0,d0
0002D3EA <AmiBlitz3.ab3@16368>   MOVE.w regnum,d0
0002D3EC <AmiBlitz3.ab3@16369>   ADDQ #1,d0
0002D3EE <AmiBlitz3.ab3@16370>   ASL.w #8,d0
0002D3F0 <AmiBlitz3.ab3@16371>   ASL.w #2,d0
0002D3F6 <AmiBlitz3.ab3@16372>   MOVE.l #$f2000028,d1
0002D3F8 <AmiBlitz3.ab3@16373>   OR.l d0,d1
0002D3FE <AmiBlitz3.ab3@16374>   MOVE.w regnum,d0
0002D400 <AmiBlitz3.ab3@16375>   ASL.w #7,d0
0002D402 <AmiBlitz3.ab3@16376>   OR.l d0,d1
0002D406 <AmiBlitz3.ab3@16377> BRA.w writelong
0002D40A <AmiBlitz3.ab3@16383>   MOVE.w #$C1C0,D1
0002D40C <AmiBlitz3.ab3@16384>   MOVEQ.l #$02,D2                                          ;now a word
0002D410 <AmiBlitz3.ab3@16385> BRA.w doplus2
0002D414 <AmiBlitz3.ab3@16389>   MOVE.w #$C1C0,D1
0002D416 <AmiBlitz3.ab3@16390>   MOVEQ.l #$03,D2                                          ;now a long.
0002D41A <AmiBlitz3.ab3@16391> BRA.w doplus2
0002D41E <AmiBlitz3.ab3@16395>   MOVE.w #$CA00,D1                                         ;quickmul
0002D422 <AmiBlitz3.ab3@16396> BRA.w domylib
0002D428 <AmiBlitz3.ab3@16400>   TST.b fast
0002D42C <AmiBlitz3.ab3@16401>   BNE.s 'l10
0002D430 <AmiBlitz3.ab3@16402>   MOVE.w #$CA01,D1                                         ;writelongmul
0002D434 <AmiBlitz3.ab3@16403> BRA.w domylib
0002D43A <AmiBlitz3.ab3@16412>    MOVE.l destpointer,a0
0002D440 <AmiBlitz3.ab3@16413>    SUB.l imm_addr,a0
0002D444 <AmiBlitz3.ab3@16414>    CMP.w #6,a0
0002D448 <AmiBlitz3.ab3@16415>    BNE 'li1
0002D44A <AmiBlitz3.ab3@16416>    MOVEQ.l #2,d1
0002D44C <AmiBlitz3.ab3@16417>    MOVEQ #1,d3
0002D450 <AmiBlitz3.ab3@16420>   CMP.l -4(a4),d1
0002D454 <AmiBlitz3.ab3@16421>    BEQ 'oklsl
0002D456 <AmiBlitz3.ab3@16422>     LSL.l #1,d1
0002D45C <AmiBlitz3.ab3@16423>     ADD.l #1,d3
0002D462 <AmiBlitz3.ab3@16424>     CMP.l #9,d3
0002D466 <AmiBlitz3.ab3@16425>     BNE 'ag
0002D46A <AmiBlitz3.ab3@16426>    MOVE.w -2(a4),d1
0002D46E <AmiBlitz3.ab3@16427>    BSR writeword
0002D474 <AmiBlitz3.ab3@16428>    MOVE.w -6(a4),-4(a4)
0002D47C <AmiBlitz3.ab3@16429>    MOVE.l #$4c3c0800,-8(a4)
0002D482 <AmiBlitz3.ab3@16430>    MOVE.w regnum,D3
0002D486 <AmiBlitz3.ab3@16431>    MULS #$1000,D3
0002D48A <AmiBlitz3.ab3@16432>    OR.w D3,-6(a4)
0002D490 <AmiBlitz3.ab3@16433>    CLR.l load_var_addr
0002D496 <AmiBlitz3.ab3@16434>    CLR.l imm_addr
0002D49A <AmiBlitz3.ab3@16435> BRA 'li3
0002D49E <AmiBlitz3.ab3@16438>    CMP.w #8,d3
0002D4A2 <AmiBlitz3.ab3@16439>    BEQ 'ok
0002D4A4 <AmiBlitz3.ab3@16440>    ASL.l #1,d3
0002D4A6 <AmiBlitz3.ab3@16441>    ASL.l #8,d3
0002D4AA <AmiBlitz3.ab3@16442>    MOVE.w #$e188,d1
0002D4AC <AmiBlitz3.ab3@16443>    OR.w d3,d1
0002D4B0 <AmiBlitz3.ab3@16444>    MOVE.w d1,-6(a4)
0002D4B4 <AmiBlitz3.ab3@16445> BRA 'okls
0002D4BA <AmiBlitz3.ab3@16448>   MOVE.w #$e188,-6(a4)                                     ;lsl.l #,dx
0002D4C0 <AmiBlitz3.ab3@16451>   MOVE.w regnum,d3
0002D4C4 <AmiBlitz3.ab3@16452>    OR.b d3,-5(a4)
0002D4CA <AmiBlitz3.ab3@16453>    SUBQ.l #4,destpointer
0002D4D0 <AmiBlitz3.ab3@16454>    CLR.l load_var_addr
0002D4D6 <AmiBlitz3.ab3@16455>    CLR.l imm_addr
0002D4DA <AmiBlitz3.ab3@16456> BRA 'li3
0002D4E0 <AmiBlitz3.ab3@16459>    MOVE.l destpointer,a0
0002D4E6 <AmiBlitz3.ab3@16460>    SUB.l load_var_addr,a0
0002D4EA <AmiBlitz3.ab3@16461>    CMP.w #4,a0
0002D4EE <AmiBlitz3.ab3@16462>    BNE 'li2
0002D4F2 <AmiBlitz3.ab3@16463>    MOVE.w -2(a4),d1
0002D4F6 <AmiBlitz3.ab3@16464>    BSR writeword
0002D4FC <AmiBlitz3.ab3@16465>    MOVE.b #$4c,-6(a4)
0002D502 <AmiBlitz3.ab3@16466>    MOVE.w #$0800,-4(a4)
0002D508 <AmiBlitz3.ab3@16467>    MOVE.w regnum,D3
0002D50C <AmiBlitz3.ab3@16468>    MULS #$1000,d3
0002D510 <AmiBlitz3.ab3@16469>    OR.w D3,-4(a4)
0002D514 <AmiBlitz3.ab3@16470> BRA 'li3
0002D51A <AmiBlitz3.ab3@16473>    MOVE.l #$4c010800,d1
0002D520 <AmiBlitz3.ab3@16474>    MOVE.w regnum,D3
0002D522 <AmiBlitz3.ab3@16475>    EXT.l d3
0002D526 <AmiBlitz3.ab3@16476>    MULS #$1000,d3
0002D528 <AmiBlitz3.ab3@16477>    OR.w D3,d1
0002D52C <AmiBlitz3.ab3@16478>    MULS #$10,d3
0002D52E <AmiBlitz3.ab3@16479>    ADD.l d3,d1
0002D532 <AmiBlitz3.ab3@16480>    BSR writelong
0002D534 <AmiBlitz3.ab3@16485> RTS
0002D536 <AmiBlitz3.ab3@16489>   MOVE.w D1,-(A7)
0002D53A <AmiBlitz3.ab3@16490>    BSR.w savereg
0002D53C <AmiBlitz3.ab3@16491>   MOVE.l D4,D1
0002D540 <AmiBlitz3.ab3@16492>    BSR.w pokemovem
0002D544 <AmiBlitz3.ab3@16493>    BSR.w ritetod0
0002D546 <AmiBlitz3.ab3@16494>   MOVEQ #0,d1
0002D548 <AmiBlitz3.ab3@16495>   MOVE.w (A7)+,D1
0002D54E <AmiBlitz3.ab3@16496>   MOVE.l d1,lastinstruction
0002D552 <AmiBlitz3.ab3@16497>    BSR.w Atokejsr
0002D556 <AmiBlitz3.ab3@16498>    BSR.w ritefromd0
0002D558 <AmiBlitz3.ab3@16499>   MOVE.l D5,D1
0002D55C <AmiBlitz3.ab3@16500> BRA.w pokemovem
0002D562 <AmiBlitz3.ab3@16504>    TST.b iee
0002D566 <AmiBlitz3.ab3@16505>     BNE fm1
0002D56A <AmiBlitz3.ab3@16506>  MOVE.w #$FFB2,D1                                          ;floatmul
0002D56E <AmiBlitz3.ab3@16507> BRA.w doflib
0002D570 <AmiBlitz3.ab3@16510>   MOVEQ #0,d0
0002D576 <AmiBlitz3.ab3@16511>  MOVE.w regnum,d0
0002D578 <AmiBlitz3.ab3@16512>  ADDQ #1,d0
0002D57A <AmiBlitz3.ab3@16513>  ASL.w #8,d0
0002D57C <AmiBlitz3.ab3@16514>  ASL.w #2,d0
0002D582 <AmiBlitz3.ab3@16515>  MOVE.l #$f2000023,d1
0002D584 <AmiBlitz3.ab3@16516>  OR.l d0,d1
0002D58A <AmiBlitz3.ab3@16517>  MOVE.w regnum,d0
0002D58C <AmiBlitz3.ab3@16518>  ASL.w #7,d0
0002D58E <AmiBlitz3.ab3@16519>  OR.l d0,d1
0002D592 <AmiBlitz3.ab3@16520> BRA.w writelong
0002D594 <AmiBlitz3.ab3@16524>   MOVE.w D2,-(A7)                                          ;dopow
0002D596 <AmiBlitz3.ab3@16525>   MOVE.w D2,D3
0002D598 <AmiBlitz3.ab3@16526>   MOVEQ.l #$05,D2
0002D59C <AmiBlitz3.ab3@16527>    BSR.w convtypef
0002D5A2 <AmiBlitz3.ab3@16528>   ADDQ.w #1,regnum
0002D5A4 <AmiBlitz3.ab3@16529>   MOVE.w (A7)+,D3
0002D5A6 <AmiBlitz3.ab3@16530>   MOVEQ.l #$05,D2
0002D5AA <AmiBlitz3.ab3@16531>    BSR.w writeconvertcode
0002D5B0 <AmiBlitz3.ab3@16532>   SUBQ.w #1,regnum
0002D5B4 <AmiBlitz3.ab3@16533>    BSR.w nocando
0002D5BA <AmiBlitz3.ab3@16534>    TST.b fpu
0002D5BE <AmiBlitz3.ab3@16535>    BEQ 'old
0002D5C0 <AmiBlitz3.ab3@16536>    MOVEQ #0,d1
0002D5C6 <AmiBlitz3.ab3@16537>    MOVE.w regnum,d1
0002D5C8 <AmiBlitz3.ab3@16538>   MOVE.l d1,d0
0002D5CA <AmiBlitz3.ab3@16539>   ASL.w #7,d1
0002D5CC <AmiBlitz3.ab3@16540>   ASL.w #8,d0
0002D5CE <AmiBlitz3.ab3@16541>   ASL.w #2,d0
0002D5D0 <AmiBlitz3.ab3@16542>   OR.w d0,d1
0002D5D2 <AmiBlitz3.ab3@16543>   MOVE.l d1,-(a7)
0002D5D8 <AmiBlitz3.ab3@16545>    OR.l #$f2000016,d1                                       ;flog2.x fp0      ;fpu ^ pow
0002D5DC <AmiBlitz3.ab3@16546>    BSR writelong
0002D5E2 <AmiBlitz3.ab3@16547>    MOVE.w regnum,d0
0002D5E4 <AmiBlitz3.ab3@16548>  ADDQ #1,d0
0002D5E6 <AmiBlitz3.ab3@16549>  ASL.w #8,d0
0002D5E8 <AmiBlitz3.ab3@16550>  ASL.w #2,d0
0002D5EE <AmiBlitz3.ab3@16551>  MOVE.l #$f2000023,d1
0002D5F0 <AmiBlitz3.ab3@16552>  OR.l d0,d1
0002D5F6 <AmiBlitz3.ab3@16553>  MOVE.w regnum,d0
0002D5F8 <AmiBlitz3.ab3@16554>  ASL.w #7,d0
0002D5FA <AmiBlitz3.ab3@16555>  OR.l d0,d1
0002D600 <AmiBlitz3.ab3@16556>    OR.l #$f2000023,d1                                      ;fmulx.x fp1,fp0
0002D604 <AmiBlitz3.ab3@16557>    BSR writelong
0002D606 <AmiBlitz3.ab3@16558>    MOVE.l (a7)+,d1
0002D60C <AmiBlitz3.ab3@16560>    OR.l #$f2000011,d1                                      ;ftwotox.x fp0
0002D610 <AmiBlitz3.ab3@16561>    BSR writelong
0002D612 <AmiBlitz3.ab3@16562> RTS
0002D616 <AmiBlitz3.ab3@16565>   MOVE.w #$6001,D1
0002D61A <AmiBlitz3.ab3@16566> BRA.w domylib
0002D61E <AmiBlitz3.ab3@16572>   MOVEA.l forthsp(PC),A0
0002D622 <AmiBlitz3.ab3@16573>   MOVE.w #$FFFF,-(A0)                                      ;#-1,-(a0) org source
0002D624 <AmiBlitz3.ab3@16574> RTS
0002D628 <AmiBlitz3.ab3@16580>   MOVE.w #$D400,D1
0002D62C <AmiBlitz3.ab3@16581> BRA.w domylib
0002D630 <AmiBlitz3.ab3@16585>   MOVE.w #$D401,D1
0002D634 <AmiBlitz3.ab3@16586> BRA.w domylib
0002D638 <AmiBlitz3.ab3@16590>    BSR.w nocando                                           ;modlib uses an alibjsr here!
0002D63C <AmiBlitz3.ab3@16591>   MOVE.w #$D402,D1
0002D640 <AmiBlitz3.ab3@16592> BRA.w domylib
0002D644 <AmiBlitz3.ab3@16596>   MOVE.w #$D403,D1
0002D646 <AmiBlitz3.ab3@16597>   MOVEQ.l #$02,D2                                          ;now a word.
0002D64A <AmiBlitz3.ab3@16598> BRA.w domylib
0002D64E <AmiBlitz3.ab3@16602>    BSR.w nocando                                           ;modlib lib uses an alibjsr!  ;domod float
0002D654 <AmiBlitz3.ab3@16603>   TST.b fpu
0002D658 <AmiBlitz3.ab3@16604>   BEQ 'old
0002D65A <AmiBlitz3.ab3@16605>   MOVEQ #0,d1
0002D660 <AmiBlitz3.ab3@16606>   MOVE.w regnum,d1                                         ;fpu mod
0002D662 <AmiBlitz3.ab3@16607>   MOVE.l d1,d0
0002D664 <AmiBlitz3.ab3@16608>   ADDQ.l #1,d1
0002D666 <AmiBlitz3.ab3@16609>   ASL.l #7,d0
0002D668 <AmiBlitz3.ab3@16610>   ASL.l #8,d1
0002D66A <AmiBlitz3.ab3@16611>   ASL.l #2,d1
0002D66C <AmiBlitz3.ab3@16612>   OR.l d0,d1
0002D66E <AmiBlitz3.ab3@16613>   MOVE.l d0,-(a7)
0002D674 <AmiBlitz3.ab3@16614>   OR.l #$f2000021,d1
0002D678 <AmiBlitz3.ab3@16615>   BSR writelong
0002D67A <AmiBlitz3.ab3@16616>   MOVE.l (a7)+,d0
0002D67C <AmiBlitz3.ab3@16617>  RTS
0002D680 <AmiBlitz3.ab3@16620>   MOVE.w #$D404,D1
0002D682 <AmiBlitz3.ab3@16621>   MOVEQ.l #$03,D2                                          ;now a long
0002D686 <AmiBlitz3.ab3@16622> BRA.w domylib
0002D68A <AmiBlitz3.ab3@16630>   MOVE.w #$48C0,D1
0002D690 <AmiBlitz3.ab3@16631>   OR.w regnum,D1
0002D694 <AmiBlitz3.ab3@16632>    BSR.w writeword
0002D696 <AmiBlitz3.ab3@16633>   ADDQ.w #1,D1
0002D69A <AmiBlitz3.ab3@16634>    BSR.w writeword
0002D69E <AmiBlitz3.ab3@16637>    MOVE.w #$48C0,D1
0002D6A4 <AmiBlitz3.ab3@16638>   OR.w regnum,D1
0002D6A8 <AmiBlitz3.ab3@16639>    BSR.w writeword
0002D6AC <AmiBlitz3.ab3@16640>   MOVE.w #$81C0,D1
0002D6B0 <AmiBlitz3.ab3@16641> BRA.w doplus2
0002D6B6 <AmiBlitz3.ab3@16645>   TST.b fast
0002D6BA <AmiBlitz3.ab3@16646>   BNE.s 'l10
0002D6BE <AmiBlitz3.ab3@16647>   MOVE.w #$CB01,D1
0002D6C2 <AmiBlitz3.ab3@16648> BRA.w domylib
0002D6C6 <AmiBlitz3.ab3@16654>   BSR.w savereg
0002D6C8 <AmiBlitz3.ab3@16655>   MOVE.l D4,D1
0002D6CC <AmiBlitz3.ab3@16656>    BSR.w pokemovem
0002D6D0 <AmiBlitz3.ab3@16657>    BSR.w ritetod0
0002D6D6 <AmiBlitz3.ab3@16671>    MOVE.l #$4c410800,d1
0002D6DA <AmiBlitz3.ab3@16672>    BSR writelong
0002D6DE <AmiBlitz3.ab3@16675>   MOVE.w #$4e71,d1
0002D6E2 <AmiBlitz3.ab3@16677>    BSR.w ritefromd0
0002D6E4 <AmiBlitz3.ab3@16678>   MOVE.l D5,D1
0002D6E8 <AmiBlitz3.ab3@16679> BRA.w pokemovem
0002D6EC <AmiBlitz3.ab3@16682>     CMP.w #8,d3
0002D6F0 <AmiBlitz3.ab3@16683>     BEQ 'ok
0002D6F2 <AmiBlitz3.ab3@16684>     ASL.l #1,d3
0002D6F4 <AmiBlitz3.ab3@16685>     ASL.l #8,d3
0002D6F8 <AmiBlitz3.ab3@16686>     MOVE.w #$e080,d1
0002D6FA <AmiBlitz3.ab3@16687>     OR.w d3,d1
0002D6FE <AmiBlitz3.ab3@16688> BRA 'oklsr2
0002D702 <AmiBlitz3.ab3@16691>   MOVE.w #$e080,d1                                         ;lsr.l #,dx
0002D708 <AmiBlitz3.ab3@16694>      SUBQ.l #6,destpointer
0002D70C <AmiBlitz3.ab3@16695>      BSR writeword
0002D70E <AmiBlitz3.ab3@16696>      MOVE.l (a7)+,d3
0002D710 <AmiBlitz3.ab3@16697>      MOVEQ #0,d1
0002D716 <AmiBlitz3.ab3@16698>      CLR.l load_var_addr
0002D71C <AmiBlitz3.ab3@16699>      CLR.l imm_addr
0002D720 <AmiBlitz3.ab3@16700> BRA pokemovem
0002D724 <AmiBlitz3.ab3@16704>   MOVE.w #$CB00,D1                                         ;quickdiv
0002D728 <AmiBlitz3.ab3@16705> BRA.w domylib
0002D72E <AmiBlitz3.ab3@16709>    TST.b iee
0002D732 <AmiBlitz3.ab3@16710>    BNE fdiv1
0002D736 <AmiBlitz3.ab3@16711>    MOVE.w #$FFAC,D1                                        ;floatdiv
0002D73A <AmiBlitz3.ab3@16712> BRA.w doflib
0002D73C <AmiBlitz3.ab3@16716>   MOVEQ #0,d0
0002D742 <AmiBlitz3.ab3@16717>   MOVE.w regnum,d0
0002D744 <AmiBlitz3.ab3@16718>   ADDQ #1,d0
0002D746 <AmiBlitz3.ab3@16719>   ASL.w #8,d0
0002D748 <AmiBlitz3.ab3@16720>   ASL.w #2,d0
0002D74E <AmiBlitz3.ab3@16721>   MOVE.l #$f2000020,d1                                     ;fpu div
0002D750 <AmiBlitz3.ab3@16722>   OR.l d0,d1
0002D756 <AmiBlitz3.ab3@16723>   MOVE.w regnum,d0
0002D758 <AmiBlitz3.ab3@16724>   ASL.w #7,d0
0002D75A <AmiBlitz3.ab3@16725>   OR.l d0,d1
0002D75E <AmiBlitz3.ab3@16726> BRA.w writelong
0002D762 <AmiBlitz3.ab3@16730>   MOVE.w #$C000,D1
0002D766 <AmiBlitz3.ab3@16731> BRA.w doplus2
0002D76A <AmiBlitz3.ab3@16735>   MOVE.w #$C040,D1
0002D76E <AmiBlitz3.ab3@16736> BRA.w doplus2
0002D772 <AmiBlitz3.ab3@16740>   MOVE.w #$C080,D1
0002D776 <AmiBlitz3.ab3@16741> BRA.w doplus2
0002D77A <AmiBlitz3.ab3@16745>   MOVE.w #$8000,D1
0002D77E <AmiBlitz3.ab3@16746> BRA.w doplus2
0002D782 <AmiBlitz3.ab3@16750>   MOVE.w #$8040,D1
0002D786 <AmiBlitz3.ab3@16751> BRA.w doplus2
0002D78A <AmiBlitz3.ab3@16755>   MOVE.w #$8080,D1
0002D78E <AmiBlitz3.ab3@16756> BRA.w doplus2
0002D792 <AmiBlitz3.ab3@16760>   MOVE.w #$B100,D1
0002D798 <AmiBlitz3.ab3@16763>    MOVE.w regnum,D3
0002D79A <AmiBlitz3.ab3@16764>   OR.w D3,D1
0002D79C <AmiBlitz3.ab3@16765>   ADDQ.w #1,D3
0002D79E <AmiBlitz3.ab3@16766>   LSL.w #8,D3
0002D7A0 <AmiBlitz3.ab3@16767>   LSL.w #1,D3
0002D7A2 <AmiBlitz3.ab3@16768>   OR.w D3,D1
0002D7A6 <AmiBlitz3.ab3@16769> BRA.w writeword
0002D7AA <AmiBlitz3.ab3@16773>   MOVE.w #$B140,D1
0002D7AE <AmiBlitz3.ab3@16774> BRA.w doeor2
0002D7B2 <AmiBlitz3.ab3@16778>   MOVE.w #$B180,D1
0002D7B6 <AmiBlitz3.ab3@16779> BRA.w doeor2
0002D7BA <AmiBlitz3.ab3@16783>   MOVE.w #$E1A8,D1
0002D7BE <AmiBlitz3.ab3@16784> BRA.w shpoke
0002D7C2 <AmiBlitz3.ab3@16788>   MOVE.w #$E0A8,D1
0002D7C6 <AmiBlitz3.ab3@16789> BRA.w shpoke
0002D7CA <AmiBlitz3.ab3@16793>   MOVE.w #$E0A0,D1
0002D7CE <AmiBlitz3.ab3@16794> BRA.w shpoke
0002D7D0 <AmiBlitz3.ab3@16798>   MOVE.w D1,-(A7)
0002D7D6 <AmiBlitz3.ab3@16799>   ADDQ.w #1,regnum   ;make second a word!
0002D7D8 <AmiBlitz3.ab3@16800>   MOVE.w D2,-(A7)
0002D7DA <AmiBlitz3.ab3@16801>   MOVE.w D2,D3
0002D7DC <AmiBlitz3.ab3@16802>   MOVEQ.l #$02,D2
0002D7E0 <AmiBlitz3.ab3@16809>    BSR.w writeconvertcode
0002D7E2 <AmiBlitz3.ab3@16813>   MOVE.w (A7)+,D2     ;type
0002D7E8 <AmiBlitz3.ab3@16814>   SUBQ.w #1,regnum
0002D7EC <AmiBlitz3.ab3@16815>   CMP.w #$4,D2        ;don't fuck with quix
0002D7F0 <AmiBlitz3.ab3@16816>    BEQ.w 'skip
0002D7F2 <AmiBlitz3.ab3@16817>   MOVE.w D2,D3
0002D7F4 <AmiBlitz3.ab3@16818>   MOVEQ.l #$03,D2
0002D7F8 <AmiBlitz3.ab3@16819>    BSR.w convtypef    ;make first (and current) a long
0002D7FA <AmiBlitz3.ab3@16822>    MOVE.w (A7)+,D1
0002D800 <AmiBlitz3.ab3@16824>   MOVE.w regnum,D3
0002D802 <AmiBlitz3.ab3@16825>   OR.w D3,D1
0002D804 <AmiBlitz3.ab3@16826>   ADDQ.w #1,D3
0002D806 <AmiBlitz3.ab3@16827>   LSL.w #8,D3
0002D808 <AmiBlitz3.ab3@16828>   LSL.w #1,D3
0002D80A <AmiBlitz3.ab3@16829>   OR.w D3,D1
0002D80E <AmiBlitz3.ab3@16830> BRA.w writeword
0002D812 <AmiBlitz3.ab3@16834>   MOVE.w #$0100,D1
0002D816 <AmiBlitz3.ab3@16835>    BSR.w dothebit
0002D81C <AmiBlitz3.ab3@16837>   MOVE.w regnum,D1
0002D820 <AmiBlitz3.ab3@16838>   ORI.w #$56C0,D1    ;sne regat
0002D824 <AmiBlitz3.ab3@16839>    BSR.w writeword
0002D82A <AmiBlitz3.ab3@16841>   MOVE.w regnum,D1
0002D82E <AmiBlitz3.ab3@16842>   ORI.w #$4880,D1    ;ext.w D regat
0002D832 <AmiBlitz3.ab3@16843>    BSR.w writeword
0002D834 <AmiBlitz3.ab3@16845>   MOVEQ.l #$02,D2    ;type now WORD!
0002D836 <AmiBlitz3.ab3@16846> RTS
0002D83A <AmiBlitz3.ab3@16850>   MOVE.w #$01C0,D1
0002D83E <AmiBlitz3.ab3@16853>    BSR.w dothebit
0002D840 <AmiBlitz3.ab3@16855>   MOVEQ.l #$03,D2    ;type now LONG!
0002D842 <AmiBlitz3.ab3@16856> RTS
0002D846 <AmiBlitz3.ab3@16860>   MOVE.w #$0180,D1
0002D84A <AmiBlitz3.ab3@16861> BRA.w dothemip
0002D84E <AmiBlitz3.ab3@16865>   MOVE.w #$0140,D1
0002D852 <AmiBlitz3.ab3@16866> BRA.w dothemip
0002D854 <AmiBlitz3.ab3@16870>   MOVE.w D1,-(A7)
0002D856 <AmiBlitz3.ab3@16874>   MOVE.w D2,-(A7)
0002D858 <AmiBlitz3.ab3@16875>   MOVE.w D2,D3
0002D85A <AmiBlitz3.ab3@16876>   MOVEQ.l #$03,D2         ;first to long!
0002D85E <AmiBlitz3.ab3@16877>    BSR.w convtypef
0002D860 <AmiBlitz3.ab3@16879>   MOVE.w (A7)+,D3
0002D862 <AmiBlitz3.ab3@16880>   MOVEQ.l #$01,D2         ;second to byte!
0002D868 <AmiBlitz3.ab3@16881>   ADDQ.w #1,regnum
0002D86C <AmiBlitz3.ab3@16882>    BSR.w writeconvertcode
0002D872 <AmiBlitz3.ab3@16883>   SUBQ.w #1,regnum
0002D878 <AmiBlitz3.ab3@16885>   MOVE.w regnum,D1
0002D87A <AmiBlitz3.ab3@16886>   MOVE.w D1,D2
0002D87C <AmiBlitz3.ab3@16887>   ADDQ.w #1,D2
0002D87E <AmiBlitz3.ab3@16888>   LSL.w #8,D2
0002D880 <AmiBlitz3.ab3@16889>   LSL.w #1,D2
0002D882 <AmiBlitz3.ab3@16890>   OR.w (A7)+,D1
0002D884 <AmiBlitz3.ab3@16891>   OR.w D2,D1
0002D888 <AmiBlitz3.ab3@16892> BRA.w writeword        ;btst regat+1,regat
0002D88E <AmiBlitz3.ab3@16898>   MOVE.w regnum,D1
0002D892 <AmiBlitz3.ab3@16899>    BEQ.w 'skip
0002D896 <AmiBlitz3.ab3@16900>   ORI.w #$2000,D1
0002D89A <AmiBlitz3.ab3@16901>    BSR.w writeword
0002D89E <AmiBlitz3.ab3@16902>   ADDI.w #$201,D1
0002D8A2 <AmiBlitz3.ab3@16903>    BSR.w writeword
0002D8A4 <AmiBlitz3.ab3@16906> RTS
0002D8AA <AmiBlitz3.ab3@16912>   MOVE.w regnum,D1
0002D8AE <AmiBlitz3.ab3@16913>    BEQ.w 'skip
0002D8B0 <AmiBlitz3.ab3@16914>   LSL.w #8,D1
0002D8B2 <AmiBlitz3.ab3@16915>   LSL.w #1,D1
0002D8B6 <AmiBlitz3.ab3@16916>   ORI.w #$2000,D1
0002D8BA <AmiBlitz3.ab3@16917>    BSR.w writeword
0002D8BC <AmiBlitz3.ab3@16920> RTS
0002D8C2 <AmiBlitz3.ab3@16925>    CLR.b isconstantvalue
0002D8C8 <AmiBlitz3.ab3@16926>    CLR.l lastconstantvalue
0002D8D0 <AmiBlitz3.ab3@16928>    CMPI.w #$7,regnum
0002D8D4 <AmiBlitz3.ab3@16929>    BCS.w getelement2
0002D8DA <AmiBlitz3.ab3@16931>   MOVE.l #$f2277700,d1                                     ;fmove.d fp6,-(a7)
0002D8DE <AmiBlitz3.ab3@16932>   BSR writelong
0002D8E2 <AmiBlitz3.ab3@16933>   MOVE.w #$2F06,D1                                         ;d6 to stack
0002D8E6 <AmiBlitz3.ab3@16936>   CMP.w #$3,D2
0002D8EA <AmiBlitz3.ab3@16937>    BCS.w 'skip
0002D8EE <AmiBlitz3.ab3@16938>   MOVE.w #$2F06,D1
0002D8F2 <AmiBlitz3.ab3@16941>   BSR.w writeword
0002D8F4 <AmiBlitz3.ab3@16942>   MOVE.w D1,-(A7)
0002D8FA <AmiBlitz3.ab3@16944>   SUBQ.w #1,regnum
0002D8FE <AmiBlitz3.ab3@16945>    BSR.w getelement2
0002D904 <AmiBlitz3.ab3@16946>   ADDQ.w #1,regnum
0002D90A <AmiBlitz3.ab3@16949>   MOVE.l #$f2001b80,d1
0002D90E <AmiBlitz3.ab3@16950>   BSR writelong
0002D912 <AmiBlitz3.ab3@16952>   MOVE.w #$3E06,D1
0002D916 <AmiBlitz3.ab3@16953>   CMP.w #$3,D2
0002D91A <AmiBlitz3.ab3@16954>    BCS.w 'skip2
0002D91E <AmiBlitz3.ab3@16955>   MOVE.w #$2E06,D1
0002D922 <AmiBlitz3.ab3@16958>   BSR.w writeword
0002D924 <AmiBlitz3.ab3@16960>   MOVE.w (A7)+,D1
0002D928 <AmiBlitz3.ab3@16961>   ANDI.w #$F000,D1
0002D92C <AmiBlitz3.ab3@16962>   ORI.w #$C1F,D1
0002D932 <AmiBlitz3.ab3@16963>   JSR writeword
0002D938 <AmiBlitz3.ab3@16965>   MOVE.l #$f21f5700,d1                                     ;fmove.d (a7)+,fp6
0002D93C <AmiBlitz3.ab3@16966> BRA writelong
0002D940 <AmiBlitz3.ab3@16971>   BSR.w getelement2
0002D944 <AmiBlitz3.ab3@16972>   MOVE.w #$4440,D1
0002D948 <AmiBlitz3.ab3@16973>   CMP.w #$3,D2
0002D94C <AmiBlitz3.ab3@16974>    BCS.w 'doneg
0002D950 <AmiBlitz3.ab3@16975>   MOVE.w #$4480,D1
0002D954 <AmiBlitz3.ab3@16976>   CMP.w #$5,D2
0002D958 <AmiBlitz3.ab3@16977>    BCS.w 'doneg
0002D95C <AmiBlitz3.ab3@16978>   CMP.w #$6,D2
0002D960 <AmiBlitz3.ab3@16979>    BCC.w illoperr
0002D964 <AmiBlitz3.ab3@16980>   MOVE.w #$FFC4,D1   ; was -60
0002D968 <AmiBlitz3.ab3@16981>  BRA.w fdo2
0002D96E <AmiBlitz3.ab3@16984>   OR.w regnum,D1                                           ;negate
0002D974 <AmiBlitz3.ab3@16986>   CLR.l imm_addr
0002D978 <AmiBlitz3.ab3@16988> BRA.w writeword
0002D97C <AmiBlitz3.ab3@16992>    BSR.w eval4
0002D980 <AmiBlitz3.ab3@16993>   CMP.w #")",D0
0002D984 <AmiBlitz3.ab3@16994>    BEQ.w 'done
0002D988 <AmiBlitz3.ab3@16995>   CMP.w #"}",D0
0002D98C <AmiBlitz3.ab3@16996>    BNE.w brackets_                                         ;syntax error brackets
0002D990 <AmiBlitz3.ab3@16999> BRA.w get1bytemain
0002D994 <AmiBlitz3.ab3@17005>    BSR.w eval4
0002D998 <AmiBlitz3.ab3@17006>   CMP.w #$5,D2
0002D99C <AmiBlitz3.ab3@17007>    BCC.w illoperr
0002D9A2 <AmiBlitz3.ab3@17008>   MOVE.w regnum,D1
0002D9A6 <AmiBlitz3.ab3@17009>   ORI.w #$4640,D1     ;not.w
0002D9AA <AmiBlitz3.ab3@17010>   CMP.w #$3,D2
0002D9AE <AmiBlitz3.ab3@17011>    BCS.w writeword
0002D9B2 <AmiBlitz3.ab3@17012>   EORI.w #$C0,D1
0002D9B6 <AmiBlitz3.ab3@17013> BRA.w writeword
0002D9B8 <AmiBlitz3.ab3@17017>   MOVEQ.l #$05,D2         ;return Pi.;move.l #x,dnf
0002D9BE <AmiBlitz3.ab3@17019>    TST.b fpu
0002D9C2 <AmiBlitz3.ab3@17020>   BEQ 'old
0002D9C8 <AmiBlitz3.ab3@17021> JMP fpupi
0002D9CE <AmiBlitz3.ab3@17025>   MOVE.w regnum,D1
0002D9D0 <AmiBlitz3.ab3@17026>   LSL.w #8,D1
0002D9D2 <AmiBlitz3.ab3@17027>   LSL.w #1,D1
0002D9D6 <AmiBlitz3.ab3@17028>   ORI.w #$203C,D1
0002D9DA <AmiBlitz3.ab3@17029>    BSR.w writeword      ;move.l #x,dn
0002D9E0 <AmiBlitz3.ab3@17030>   MOVE.l #$C90FDA42,D1
0002D9E4 <AmiBlitz3.ab3@17031>    BSR.w writelong
0002D9E8 <AmiBlitz3.ab3@17032> BRA.w get1bytemain
0002DAE4 <AmiBlitz3.ab3@17040> forthstack:  Ds.l 63                                       ;ds.b  18*32 org source
0002DBE0 <AmiBlitz3.ab3@17041>              Ds.l 63
0002DC28 <AmiBlitz3.ab3@17042>              Ds.l 18
0002DC2C <AmiBlitz3.ab3@17043> forthsp:     Dc.l forthstack
0002DC32 <AmiBlitz3.ab3@17046> JUMP_checkcast     JMP checkcast
0002DC38 <AmiBlitz3.ab3@17047> JUMP_syntaxerropt4 JMP syntaxerropt4
0002DC64 <AmiBlitz3.ab3@17055>    !fget
0002DC68 <AmiBlitz3.ab3@17056>    CMP.b #$7e,d0
0002DC6C <AmiBlitz3.ab3@17057>    BNE 'noc
0002DC6E <AmiBlitz3.ab3@17058>    SUBQ.l #1,a5
0002DC72 <AmiBlitz3.ab3@17059>    BSR get1bytemain
0002DC76 <AmiBlitz3.ab3@17062>    CMP.b #"#",d0
0002DC7A <AmiBlitz3.ab3@17063>    BNE 'ld1
0002DC7E <AmiBlitz3.ab3@17064>    CMP.b #$22,(a5)
0002DC82 <AmiBlitz3.ab3@17065>    BNE 'ld1
0002DC88 <AmiBlitz3.ab3@17066>    JSR addimmi
0002DC8C <AmiBlitz3.ab3@17069>    CMP.b #$22,d0
0002DC90 <AmiBlitz3.ab3@17070>    BNE 'l11
0002DC96 <AmiBlitz3.ab3@17080>    NOT.w instringon
0002DC98 <AmiBlitz3.ab3@17083>    TST.b d0
0002DC9C <AmiBlitz3.ab3@17084>    BPL 'l10
0002DC9E <AmiBlitz3.ab3@17085>    LSL.w #8,d0
0002DCA0 <AmiBlitz3.ab3@17086>    MOVE.b (a5)+,d0                      ; get blitzlib instruction with returnvalue(called in functions/statement)
0002DCA6 <AmiBlitz3.ab3@17087>    MOVE.l d0,lasttoken
0002DCAC <AmiBlitz3.ab3@17088>    MOVE.w d0,lastchar
0002DCB2 <AmiBlitz3.ab3@17089>    CLR.l rightsidetype                  ; blitzlibs do currently no type check
0002DCB8 <AmiBlitz3.ab3@17090>    CLR.w rightsideflagmask
0002DCBC <AmiBlitz3.ab3@17094>   CMP.w #"(",D0
0002DCC0 <AmiBlitz3.ab3@17095>    BEQ.w JUMP_checkcast                 ; was  beq bracket org source
0002DCC4 <AmiBlitz3.ab3@17100>   CMP.w #"{",D0
0002DCC8 <AmiBlitz3.ab3@17101>    BEQ.w bracket
0002DCCC <AmiBlitz3.ab3@17102>   CMP.w #$2D,D0         ;'-'
0002DCD0 <AmiBlitz3.ab3@17103>    BEQ.w negate
0002DCD4 <AmiBlitz3.ab3@17104>   CMP.w #-$7F77,D0      ; was #(opnot-opabcd)/$1c+$8000+fnum,
0002DCD8 <AmiBlitz3.ab3@17105>    BEQ.w notit
0002DCDC <AmiBlitz3.ab3@17107>   MOVEA.l forthsp(PC),A1
0002DCE2 <AmiBlitz3.ab3@17108>   CMPA.l #forthsp,A1
0002DCE6 <AmiBlitz3.ab3@17109>    BCC.w conmemerr
0002DCEC <AmiBlitz3.ab3@17111>   MOVE.l destpointer,(A1)+
0002DCF2 <AmiBlitz3.ab3@17112>   MOVE.l hunkoffsetbase,(A1)+
0002DCF8 <AmiBlitz3.ab3@17113>   MOVE.l lasta6,(A1)+
0002DCFE <AmiBlitz3.ab3@17114>   MOVE.w lasta6,(A1)+
0002DD00 <AmiBlitz3.ab3@17115>   CLR.w (A1)+
0002DD02 <AmiBlitz3.ab3@17117>   CLR.w (A1)+
0002DD08 <AmiBlitz3.ab3@17118>   MOVE.l A1,forthsp
0002DD1A <AmiBlitz3.ab3@17124>    !compare2
0002DD1E <AmiBlitz3.ab3@17126>    BEQ.w fetchnum
0002DD22 <AmiBlitz3.ab3@17127>   CMP.w #".",D0
0002DD26 <AmiBlitz3.ab3@17128>    BEQ.w fetchfrac
0002DD2A <AmiBlitz3.ab3@17129>   CMP.w #"#",D0
0002DD2E <AmiBlitz3.ab3@17130>    BEQ.w get_constant
0002DD32 <AmiBlitz3.ab3@17131>   CMP.w #"$",D0
0002DD36 <AmiBlitz3.ab3@17132>    BEQ.w get_hexconstant
0002DD3A <AmiBlitz3.ab3@17133>   CMP.w #"%",D0
0002DD3E <AmiBlitz3.ab3@17134>    BEQ.w fetchbin
0002DD42 <AmiBlitz3.ab3@17135>   CMP.w #-$7FD1,D0    ; was #$8000+47,
0002DD46 <AmiBlitz3.ab3@17136>    BEQ.w fetchsize
0002DD4A <AmiBlitz3.ab3@17137>   CMP.w #-$7F46,D0    ; was #$8007+tnum,
0002DD4E <AmiBlitz3.ab3@17138>    BEQ.w fetchpi
0002DD52 <AmiBlitz3.ab3@17139>   CMP.w #-$7F3B,D0    ; was #$8000+tnum+18,
0002DD56 <AmiBlitz3.ab3@17140>    BEQ.w fetchon
0002DD5A <AmiBlitz3.ab3@17141>   CMP.w #-$7F3A,D0    ; was #$8000+tnum+19,
0002DD5E <AmiBlitz3.ab3@17142>    BEQ.w fetchoff
0002DD64 <AmiBlitz3.ab3@17144>   MOVE.w constmode,D1
0002DD68 <AmiBlitz3.ab3@17145>    BEQ.w 'noasm
0002DD8A <AmiBlitz3.ab3@17147>    !compare1                                               ;bsr.w tstalpha
0002DD8E <AmiBlitz3.ab3@17149>    BEQ.w fetchasm
0002DD92 <AmiBlitz3.ab3@17150>   CMP.w #$5F,D0     ;'_'
0002DD96 <AmiBlitz3.ab3@17151>    BEQ.w fetchasm
0002DD9A <AmiBlitz3.ab3@17152>   CMP.w #$22,D0     ;'"'
0002DD9E <AmiBlitz3.ab3@17153>    BEQ.w fetchqasm
0002DDA2 <AmiBlitz3.ab3@17155>  BRA.w syntaxerr
0002DDA8 <AmiBlitz3.ab3@17158>   MOVE.w cfetchmode,D1
0002DDAC <AmiBlitz3.ab3@17159>   BEQ.w 'asmok
0002DDB0 <AmiBlitz3.ab3@17160>  BRA.w badconerr       ;we're trying to get a const here! 
0002DDB2 <AmiBlitz3.ab3@17163>   NOT.w -(A1)    ;set forth stack type to non-const
0002DDD4 <AmiBlitz3.ab3@17168>   !compare1                                                ;bsr.w tstalpha
0002DDD8 <AmiBlitz3.ab3@17170>    BEQ.w variable
0002DDDC <AmiBlitz3.ab3@17171>   CMP.w #$2A,D0     ;'*'
0002DDE0 <AmiBlitz3.ab3@17172>    BEQ.w variable
0002DDE4 <AmiBlitz3.ab3@17173>   CMP.w #$5C,D0     ;'\'
0002DDE8 <AmiBlitz3.ab3@17174>    BEQ.w variable
0002DDEC <AmiBlitz3.ab3@17175>   CMP.w #$22,D0     ;'"'
0002DDF0 <AmiBlitz3.ab3@17176>    BEQ.w litstring
0002DDF4 <AmiBlitz3.ab3@17177>   BTST #$F,D0
0002DDF8 <AmiBlitz3.ab3@17178>    BNE.w f_unction
0002DDFC <AmiBlitz3.ab3@17179>   CMP.w #"&",D0
0002DE00 <AmiBlitz3.ab3@17180>    BEQ.w getvaraddr                                          ;jump to & address of var code
0002DE04 <AmiBlitz3.ab3@17181>   CMP.w #"?",D0
0002DE08 <AmiBlitz3.ab3@17182>    BEQ.w qmark
0002DE0C <AmiBlitz3.ab3@17186>   CMP.b #"@",d0
0002DE10 <AmiBlitz3.ab3@17187>    BNE syntaxerr
0002DE16 <AmiBlitz3.ab3@17188>   TST.b newsyntax
0002DE1A <AmiBlitz3.ab3@17189>    BEQ JUMP_syntaxerropt4
0002DE20 <AmiBlitz3.ab3@17190>   MOVE.w regnum,D1
0002DE22 <AmiBlitz3.ab3@17191>   LSL.w #8,D1
0002DE24 <AmiBlitz3.ab3@17192>   LSL.w #1,D1
0002DE28 <AmiBlitz3.ab3@17193>   ORI.w #$203C,D1
0002DE2C <AmiBlitz3.ab3@17194>   BSR.w writeword
0002DE30 <AmiBlitz3.ab3@17195>   CMP.b #$22,(a5)
0002DE34 <AmiBlitz3.ab3@17196>    BNE syntaxerr
0002DE36 <AmiBlitz3.ab3@17197>   ADDQ #1,a5
0002DE38 <AmiBlitz3.ab3@17198>   MOVEQ #0,d0
0002DE3C <AmiBlitz3.ab3@17199>   CMP.b #1,d2
0002DE40 <AmiBlitz3.ab3@17200>    BEQ 'l3b
0002DE44 <AmiBlitz3.ab3@17201>   CMP.b #2,d2
0002DE48 <AmiBlitz3.ab3@17202>    BEQ 'l2b
0002DE4C <AmiBlitz3.ab3@17203>   CMP.b #4,d2
0002DE50 <AmiBlitz3.ab3@17204>    BEQ error_convert_types
0002DE52 <AmiBlitz3.ab3@17205>   MOVE.b (a5)+,d0
0002DE56 <AmiBlitz3.ab3@17206>   BEQ syntaxerr
0002DE5A <AmiBlitz3.ab3@17207>   CMP.b #$22,d0
0002DE5E <AmiBlitz3.ab3@17208>   BNE 'l1
0002DE62 <AmiBlitz3.ab3@17209>     MOVE.b #0,d0
0002DE66 <AmiBlitz3.ab3@17210>  BRA 'do
0002DE68 <AmiBlitz3.ab3@17213>   ASL.l #8,d0
0002DE6A <AmiBlitz3.ab3@17214>   MOVE.b (a5)+,d0
0002DE6E <AmiBlitz3.ab3@17215>   BEQ syntaxerr
0002DE72 <AmiBlitz3.ab3@17216>   CMP.b #$22,d0
0002DE76 <AmiBlitz3.ab3@17217>   BNE 'l2
0002DE7A <AmiBlitz3.ab3@17218>     MOVE.b #0,d0
0002DE7C <AmiBlitz3.ab3@17219>     ASR.l #8,d0
0002DE80 <AmiBlitz3.ab3@17220>  BRA 'do
0002DE82 <AmiBlitz3.ab3@17223>   ASL.l #8,d0
0002DE84 <AmiBlitz3.ab3@17226>   MOVE.b (a5)+,d0
0002DE88 <AmiBlitz3.ab3@17227>    BEQ syntaxerr
0002DE8C <AmiBlitz3.ab3@17228>    CMP.b #$22,d0
0002DE90 <AmiBlitz3.ab3@17229>    BNE 'l3
0002DE94 <AmiBlitz3.ab3@17230>    MOVE.b #0,d0
0002DE96 <AmiBlitz3.ab3@17231>    ASR.l #8,d0
0002DE9A <AmiBlitz3.ab3@17232>  BRA 'do
0002DE9C <AmiBlitz3.ab3@17235>   ASL.l #8,d0
0002DE9E <AmiBlitz3.ab3@17238>   MOVE.b (a5)+,d0
0002DEA2 <AmiBlitz3.ab3@17239>    BEQ syntaxerr
0002DEA6 <AmiBlitz3.ab3@17240>    CMP.b #$22,d0
0002DEAA <AmiBlitz3.ab3@17241>    BNE 'l4
0002DEAE <AmiBlitz3.ab3@17242>    MOVE.b #0,d0
0002DEB0 <AmiBlitz3.ab3@17243>    ASR.l #8,d0
0002DEB4 <AmiBlitz3.ab3@17244>  BRA 'do
0002DEB8 <AmiBlitz3.ab3@17247>    CMP.b #$22,(a5)+
0002DEBC <AmiBlitz3.ab3@17248>    BNE error4char
0002DEBE <AmiBlitz3.ab3@17251>   MOVE.l d0,d1
0002DEC2 <AmiBlitz3.ab3@17252>     BSR writelong
0002DEC6 <AmiBlitz3.ab3@17253>     BSR get1bytemain
0002DEC8 <AmiBlitz3.ab3@17254> RTS
0002DECC <AmiBlitz3.ab3@17259>   BSR.w get1bytemain
0002DED0 <AmiBlitz3.ab3@17260>   CMP.w #$2E,D0     ; '.'
0002DED4 <AmiBlitz3.ab3@17261>    BEQ.b sizeobj
0002DEDE <AmiBlitz3.ab3@17267>   MOVE.w oldqflag,instringon
0002DEE4 <AmiBlitz3.ab3@17268>   MOVEA.l lastsourcepos,A5
0002DEE6 <AmiBlitz3.ab3@17270>   MOVE.w D2,-(A7)
0002DEEA <AmiBlitz3.ab3@17271>    BSR.w getparameter2
0002DEEE <AmiBlitz3.ab3@17272>    BEQ.w syntaxerr
0002DEF4 <AmiBlitz3.ab3@17273>   LEA varbase,A2
0002DEF8 <AmiBlitz3.ab3@17274>    BSR.w findvariable
0002DEFC <AmiBlitz3.ab3@17275>    BNE.w notypeerr         ;!
0002DF00 <AmiBlitz3.ab3@17278>   MOVE.w $4(A2),D3
0002DF02 <AmiBlitz3.ab3@17279>   EXT.l D3
0002DF04 <AmiBlitz3.ab3@17280>   MOVE.w (A7)+,D2
0002DF08 <AmiBlitz3.ab3@17281> BRA.w fetchnum2
0002DF0A <AmiBlitz3.ab3@17285>   MOVE.w D2,-(A7)
0002DF0E <AmiBlitz3.ab3@17286>    BSR.w getparameter2
0002DF12 <AmiBlitz3.ab3@17287>    BEQ.w syntaxerr
0002DF18 <AmiBlitz3.ab3@17288>   LEA newtypebase,A2
0002DF1C <AmiBlitz3.ab3@17289>    BSR.w findtype
0002DF20 <AmiBlitz3.ab3@17290>    BNE.w notypeerr
0002DF22 <AmiBlitz3.ab3@17291>   MOVEQ.l #$00,D3
0002DF26 <AmiBlitz3.ab3@17292>   CMP.w #$5C,D0     ;'\'
0002DF2A <AmiBlitz3.ab3@17293>    BNE.w 'jty
0002DF2E <AmiBlitz3.ab3@17294>    BSR.w getparameter2
0002DF32 <AmiBlitz3.ab3@17295>    BEQ.w syntaxerr
0002DF36 <AmiBlitz3.ab3@17296>   LEA $4(A2),A2
0002DF3A <AmiBlitz3.ab3@17297>    BSR.w findvariable2
0002DF3E <AmiBlitz3.ab3@17298>    BNE.w noofferr
0002DF42 <AmiBlitz3.ab3@17299>   MOVE.w $4(A2),D3
0002DF46 <AmiBlitz3.ab3@17300>  BRA.w 'jty2
0002DF4A <AmiBlitz3.ab3@17303>   MOVE.w $8(A2),D3
0002DF4C <AmiBlitz3.ab3@17306>   MOVE.w (A7)+,D2
0002DF50 <AmiBlitz3.ab3@17307> BRA.w fetchnum2
0002DF52 <AmiBlitz3.ab3@17311>   MOVEQ.l #-$01,D3
0002DF56 <AmiBlitz3.ab3@17312>    BSR.w get1bytemain
0002DF5A <AmiBlitz3.ab3@17313> BRA.w fetchnum2
0002DF5C <AmiBlitz3.ab3@17317>   MOVEQ.l #$00,D3
0002DF60 <AmiBlitz3.ab3@17318>    BSR.w get1bytemain
0002DF64 <AmiBlitz3.ab3@17319> BRA.w fetchnum2
0002DF68 <AmiBlitz3.ab3@17325>   CMP.w #$30,D0     ;'0'
0002DF6C <AmiBlitz3.ab3@17326>    BCS.w 'no
0002DF70 <AmiBlitz3.ab3@17327>   CMP.w #$39,D0     ;'9'
0002DF74 <AmiBlitz3.ab3@17328>    BLS.w 'yes
0002DF78 <AmiBlitz3.ab3@17329>   ANDI.w #$FFDF,D0
0002DF7C <AmiBlitz3.ab3@17330>   CMP.w #$46,D0     ;'F'
0002DF80 <AmiBlitz3.ab3@17331>    BHI.w 'no
0002DF84 <AmiBlitz3.ab3@17332>   CMP.w #$41,D0     ;'A'
0002DF88 <AmiBlitz3.ab3@17333>    BCS.w 'no
0002DF8A <AmiBlitz3.ab3@17336>    CMP.w D0,D0
0002DF8C <AmiBlitz3.ab3@17339> RTS
0002DF90 <AmiBlitz3.ab3@17343>   CMP.w #$31,D0    ;'1'
0002DF94 <AmiBlitz3.ab3@17344>    BEQ.w 'ok
0002DF98 <AmiBlitz3.ab3@17345>   CMP.w #$30,D0    ;'0'
0002DF9A <AmiBlitz3.ab3@17348> RTS
0002DF9C <AmiBlitz3.ab3@17353>    MOVEQ #0,d0
0002DF9E <AmiBlitz3.ab3@17354>    MOVE.b (a5)+,d0
0002DFA0 <AmiBlitz3.ab3@17355>    MOVE.b (a5)+,d0
0002DFA4 <AmiBlitz3.ab3@17356>    BSR ishex
0002DFA8 <AmiBlitz3.ab3@17357>    BNE syntaxerr
0002DFAC <AmiBlitz3.ab3@17358>    SUBI.w #$30,D0
0002DFB0 <AmiBlitz3.ab3@17359>    CMP.w #$9,D0
0002DFB4 <AmiBlitz3.ab3@17360>    BLS.w 'l1
0002DFB6 <AmiBlitz3.ab3@17361>    SUBQ.w #7,D0
0002DFB8 <AmiBlitz3.ab3@17364>    MOVE.l d0,d1
0002DFBA <AmiBlitz3.ab3@17365>    MOVE.b (a5)+,d0
0002DFBE <AmiBlitz3.ab3@17366>      BSR ishex
0002DFC2 <AmiBlitz3.ab3@17367>     BNE syntaxerr
0002DFC4 <AmiBlitz3.ab3@17368>     LSL.l #4,d1
0002DFC8 <AmiBlitz3.ab3@17369>     SUBI.w #$30,D0
0002DFCC <AmiBlitz3.ab3@17370>    CMP.w #$9,D0
0002DFD0 <AmiBlitz3.ab3@17371>    BLS.w 'l2
0002DFD2 <AmiBlitz3.ab3@17372>    SUBQ.w #7,D0
0002DFD4 <AmiBlitz3.ab3@17375>   ADD.l d1,d0
0002DFD6 <AmiBlitz3.ab3@17376> RTS
0002DFDA <AmiBlitz3.ab3@17380>    BSR.w get1bytemain
0002DFDE <AmiBlitz3.ab3@17381>    BSR.w ishex
0002DFE2 <AmiBlitz3.ab3@17382>    BNE.w syntaxerr
0002DFE4 <AmiBlitz3.ab3@17383>   MOVEQ.l #$00,D3
0002DFE8 <AmiBlitz3.ab3@17385>   CMP.w #5,d2
0002DFEC <AmiBlitz3.ab3@17386>   BNE 'loop
0002DFF2 <AmiBlitz3.ab3@17387>   CMP.l #newtype_double,a2
0002DFF6 <AmiBlitz3.ab3@17388>   BEQ 'doit
0002DFFC <AmiBlitz3.ab3@17389>   CMP.l #newtype_float,a2
0002E000 <AmiBlitz3.ab3@17390>   BNE 'loop
0002E008 <AmiBlitz3.ab3@17393>    fmove.s #0,fp0
0002E00E <AmiBlitz3.ab3@17396>   TST.b fpu
0002E012 <AmiBlitz3.ab3@17397>   BEQ 'loop
0002E018 <AmiBlitz3.ab3@17398>   fmove.w #16,fp1
0002E01C <AmiBlitz3.ab3@17399>   fmul.x fp1,fp0
0002E020 <AmiBlitz3.ab3@17400>   SUBI.w #$30,D0
0002E024 <AmiBlitz3.ab3@17401>   CMP.w #$9,D0
0002E028 <AmiBlitz3.ab3@17402>    BLS.w 'skipa
0002E02A <AmiBlitz3.ab3@17403>   SUBQ.w #7,D0
0002E02E <AmiBlitz3.ab3@17406>    fmove.w d0,fp1
0002E032 <AmiBlitz3.ab3@17407>    fadd.x fp1,fp0
0002E036 <AmiBlitz3.ab3@17408>    BSR.w get1bytemain
0002E03A <AmiBlitz3.ab3@17409>    BSR.w ishex
0002E03E <AmiBlitz3.ab3@17410>    BEQ.w 'loopa
0002E042 <AmiBlitz3.ab3@17411>  BRA.w nofpregload
0002E048 <AmiBlitz3.ab3@17415>   CMP.l #$10000000,D3
0002E04C <AmiBlitz3.ab3@17416>    BCC.w overerr
0002E04E <AmiBlitz3.ab3@17417>   LSL.l #4,D3
0002E052 <AmiBlitz3.ab3@17418>   SUBI.w #$30,D0
0002E056 <AmiBlitz3.ab3@17419>   CMP.w #$9,D0
0002E05A <AmiBlitz3.ab3@17420>    BLS.w 'skip
0002E05C <AmiBlitz3.ab3@17421>   SUBQ.w #7,D0
0002E05E <AmiBlitz3.ab3@17424>   OR.w D0,D3
0002E062 <AmiBlitz3.ab3@17425>    BSR.w get1bytemain
0002E066 <AmiBlitz3.ab3@17426>    BSR.w ishex
0002E06A <AmiBlitz3.ab3@17427>    BEQ.w 'loop
0002E06E <AmiBlitz3.ab3@17428> BRA.w fetchnum2
0002E072 <AmiBlitz3.ab3@17432>    BSR.w get1bytemain
0002E076 <AmiBlitz3.ab3@17433>    BSR.w checkbin
0002E07A <AmiBlitz3.ab3@17434>    BNE.w syntaxerr
0002E07C <AmiBlitz3.ab3@17435>    MOVEQ.l #$00,D3
0002E07E <AmiBlitz3.ab3@17438>    LSL.l #1,D3
0002E082 <AmiBlitz3.ab3@17439>    BCS.w overerr
0002E086 <AmiBlitz3.ab3@17440>   SUBI.w #$30,D0
0002E088 <AmiBlitz3.ab3@17441>   OR.w D0,D3
0002E08C <AmiBlitz3.ab3@17442>    BSR.w get1bytemain
0002E090 <AmiBlitz3.ab3@17443>    BSR.w checkbin
0002E094 <AmiBlitz3.ab3@17444>    BEQ.w 'loop
0002E098 <AmiBlitz3.ab3@17445> BRA.w fetchnum2
0002E09A <AmiBlitz3.ab3@17449>    MOVE.w d2,-(A7)
0002E0A2 <AmiBlitz3.ab3@17451>    MOVE.b #0,automode
0002E0A6 <AmiBlitz3.ab3@17452>    CMP.b #"@",(a5)
0002E0AA <AmiBlitz3.ab3@17453>    BNE 'l1
0002E0AC <AmiBlitz3.ab3@17454>    ADDQ.l #1,a5
0002E0B4 <AmiBlitz3.ab3@17455>    MOVE.b #1,automode
0002E0B8 <AmiBlitz3.ab3@17456>    BSR getparameter2
0002E0BC <AmiBlitz3.ab3@17457>    BSR findlabel2
0002E0C0 <AmiBlitz3.ab3@17458>    BNE 'addit
0002E0C4 <AmiBlitz3.ab3@17459>  BRA errormsg_autocount
0002E0C8 <AmiBlitz3.ab3@17462>   BSR.w addlabelhash
0002E0D0 <AmiBlitz3.ab3@17463>   MOVE.l #$1,$4(A2)
0002E0D4 <AmiBlitz3.ab3@17464>   MOVEM.l a2/a5,-(a7)
0002E0DA <AmiBlitz3.ab3@17465>   MOVE.w lastchar,-(a7)
0002E0E0 <AmiBlitz3.ab3@17466>   LEA autostorename,a5
0002E0E4 <AmiBlitz3.ab3@17467>   BSR getparameter2
0002E0E8 <AmiBlitz3.ab3@17468>   BSR findlabel2
0002E0EC <AmiBlitz3.ab3@17469>   BEQ 'found
0002E0F0 <AmiBlitz3.ab3@17470>   BSR.w addlabelhash
0002E0F8 <AmiBlitz3.ab3@17471>   MOVE.l #$1,$4(A2)
0002E100 <AmiBlitz3.ab3@17472>   MOVE.l #0,8(a2)
0002E102 <AmiBlitz3.ab3@17475>    MOVE.w (a7)+,d0
0002E108 <AmiBlitz3.ab3@17476>    MOVE.w d0,lastchar
0002E10C <AmiBlitz3.ab3@17477>   MOVE.l 8(a2),d3
0002E114 <AmiBlitz3.ab3@17478>   ADD.l #1,8(a2)
0002E118 <AmiBlitz3.ab3@17479>   MOVEM.l (a7)+,a2/a5
0002E11C <AmiBlitz3.ab3@17480>   MOVE.l d3,8(a2)
0002E120 <AmiBlitz3.ab3@17481>   MOVE.l $8(A2),D3
0002E124 <AmiBlitz3.ab3@17482>  BRA.l 'l3
0002E128 <AmiBlitz3.ab3@17486>   BSR.w getparameter2
0002E12E <AmiBlitz3.ab3@17488>     TST.b incnif
0002E132 <AmiBlitz3.ab3@17489>     BEQ 'lc1
0002E136 <AmiBlitz3.ab3@17490>     BSR.w findlabel2
0002E13A <AmiBlitz3.ab3@17491>     BNE 'l5
0002E13C <AmiBlitz3.ab3@17492>     MOVEQ #1,d3
0002E13E <AmiBlitz3.ab3@17493>     MOVE.w (A7)+,D2
0002E142 <AmiBlitz3.ab3@17494>  BRA fetchnum2
0002E144 <AmiBlitz3.ab3@17497>   MOVEQ #0,d3
0002E146 <AmiBlitz3.ab3@17498>     MOVE.w (A7)+,D2
0002E14A <AmiBlitz3.ab3@17499>  BRA fetchnum2
0002E14E <AmiBlitz3.ab3@17503>    BSR.w findlabel2
0002E152 <AmiBlitz3.ab3@17504>    BNE.w cnferr
0002E15A <AmiBlitz3.ab3@17507>    CMPI.l #$1,$4(A2)
0002E15E <AmiBlitz3.ab3@17508>    BNE.w cnferr
0002E162 <AmiBlitz3.ab3@17511>    MOVE.l $8(A2),D3
0002E164 <AmiBlitz3.ab3@17512>    MOVE.w (A7)+,D2
0002E168 <AmiBlitz3.ab3@17513> BRA.w fetchnum2     ;to right type.
0002E16E <AmiBlitz3.ab3@17518>   CLR.w vartype
0002E176 <AmiBlitz3.ab3@17519>   MOVE.b #3,peekaddrsize
0002E17A <AmiBlitz3.ab3@17521>   BSR.w ampersand2
0002E180 <AmiBlitz3.ab3@17523>   MOVE.l a2,rightsidetype
0002E18A <AmiBlitz3.ab3@17524>   MOVE.w flagmask,rightsideflagmask
0002E18C <AmiBlitz3.ab3@17526>   MOVEQ.l #$03,D2
0002E18E <AmiBlitz3.ab3@17527> RTS
0002E192 <AmiBlitz3.ab3@17531>    BSR.w get1bytemain
0002E1A4 <AmiBlitz3.ab3@17533>    !compare2
0002E1A8 <AmiBlitz3.ab3@17534>    BEQ andop2
0002E1AC <AmiBlitz3.ab3@17536>    BSR.w getparameter
0002E1B0 <AmiBlitz3.ab3@17537>    BSR.w fetchvars
0002E1B4 <AmiBlitz3.ab3@17538>    BSR.w calcvar
0002E1B8 <AmiBlitz3.ab3@17540>   CMP.b #$7,D2
0002E1BC <AmiBlitz3.ab3@17541>    BNE.w 'notst
0002E1C0 <AmiBlitz3.ab3@17542>   BTST #$F,D2
0002E1C4 <AmiBlitz3.ab3@17543>    BNE.w 'algot2
0002E1CA <AmiBlitz3.ab3@17544>   MOVE.w D3,stamp2+2
0002E1D0 <AmiBlitz3.ab3@17545>   MOVE.l stamp2,D1
0002E1D4 <AmiBlitz3.ab3@17546>    BSR.w pokela5s
0002E1D8 <AmiBlitz3.ab3@17547>  BRA.w 'algot
0002E1DE <AmiBlitz3.ab3@17550>   MOVE.w regnum,D1
0002E1E0 <AmiBlitz3.ab3@17551>   LSL.w #8,D1
0002E1E2 <AmiBlitz3.ab3@17552>   LSL.w #1,D1
0002E1E8 <AmiBlitz3.ab3@17553>   OR.w stamp,D1
0002E1EC <AmiBlitz3.ab3@17554>    BSR.w writeword
0002E1EE <AmiBlitz3.ab3@17555>  RTS
0002E1F2 <AmiBlitz3.ab3@17558>   BTST #$F,D2
0002E1F6 <AmiBlitz3.ab3@17559>    BNE.w 'algot
0002E1FC <AmiBlitz3.ab3@17560>   MOVE.w D3,leaamp+2
0002E202 <AmiBlitz3.ab3@17561>   MOVE.l leaamp,D1
0002E206 <AmiBlitz3.ab3@17562>    BSR.w pokela5s
0002E20C <AmiBlitz3.ab3@17565>   MOVE.w regnum,D1
0002E20E <AmiBlitz3.ab3@17566>   LSL.w #8,D1
0002E210 <AmiBlitz3.ab3@17567>   LSL.w #1,D1
0002E216 <AmiBlitz3.ab3@17568>   OR.w leaamp2,D1
0002E21A <AmiBlitz3.ab3@17569> BRA.w writeword
0002E21E <AmiBlitz3.ab3@17574>   MOVE.w #$D200,D1     ; was #ern,
0002E222 <AmiBlitz3.ab3@17575>    BSR.w Atokejsr
0002E224 <AmiBlitz3.ab3@17576>   MOVEQ.l #$03,D2
0002E226 <AmiBlitz3.ab3@17577> RTS
0002E22A <AmiBlitz3.ab3@17581> addrcode:  Dc.b $20,$6D,$00,$00                            ;MOVEA.L $0000(A5),A0
0002E22C <AmiBlitz3.ab3@17582>            Dc.b $D0,$C0                                    ;ADDA.W  D0,A0
0002E22E <AmiBlitz3.ab3@17583>            Dc.b $20,$08                                    ;MOVE.L  A0,D0
0002E232 <AmiBlitz3.ab3@17589>    BSR.w get1bytemain
0002E234 <AmiBlitz3.ab3@17591>   MOVE.w D0,D1
0002E238 <AmiBlitz3.ab3@17592>    BPL.w syntaxerr
0002E23A <AmiBlitz3.ab3@17593>   MOVE.w D2,-(A7)
0002E23E <AmiBlitz3.ab3@17594>   BCLR #$F,D1
0002E242 <AmiBlitz3.ab3@17595>    BSR.w searchinstr
0002E246 <AmiBlitz3.ab3@17596>   MOVE.l $12(A2),D0
0002E24A <AmiBlitz3.ab3@17597>   TST.w -$2(A2,D0.L)
0002E24E <AmiBlitz3.ab3@17598>    BEQ.w freeerr
0002E250 <AmiBlitz3.ab3@17599>   MOVE.w (A7)+,D2
0002E252 <AmiBlitz3.ab3@17600> RTS
0002E256 <AmiBlitz3.ab3@17604>   MOVE.l $0(A5),D0
0002E25A <AmiBlitz3.ab3@17605>    BNE.b ucodeskip
0002E25C <AmiBlitz3.ab3@17606>   MOVEQ.l #-$01,D0
0002E260 <AmiBlitz3.ab3@17607> BRA.b usedcodef
0002E264 <AmiBlitz3.ab3@17610>   SUB.l $0(A5),D0
0002E266 <AmiBlitz3.ab3@17613>   LSR.w #8,D0
0002E26A <AmiBlitz3.ab3@17618>    MOVE.l $0(A5),D0
0002E26E <AmiBlitz3.ab3@17619>    BNE.b ucodeskip2
0002E270 <AmiBlitz3.ab3@17620>   MOVEQ.l #-$01,D0
0002E274 <AmiBlitz3.ab3@17621> BRA.b usedcode2f
0002E278 <AmiBlitz3.ab3@17624>   SUB.l $0(A5),D0                                          ;usedcode2
0002E27A <AmiBlitz3.ab3@17625>   LSR.w #8,D0
0002E27C <AmiBlitz3.ab3@17628>   LSR.w #8,D0
0002E27E <AmiBlitz3.ab3@17633>   MOVE.l D0,-(A7)
0002E280 <AmiBlitz3.ab3@17636>   MOVE.l (A7)+,D0
0002E282 <AmiBlitz3.ab3@17639>   MOVE.l D0,D0
0002E286 <AmiBlitz3.ab3@17645>   BSR.w fetchit
0002E28A <AmiBlitz3.ab3@17647>   MOVE.w -$2(A2,D0.L),D3
0002E28E <AmiBlitz3.ab3@17648>   CMP.w #$9,D3
0002E292 <AmiBlitz3.ab3@17649>    BCC.w 'skip
0002E296 <AmiBlitz3.ab3@17653>   LEA usedcode(PC),A0
0002E29A <AmiBlitz3.ab3@17654>   LEA usedcodef(PC),A1
0002E2A0 <AmiBlitz3.ab3@17656>   ANDI.w #$F1FF,$E+4(A0)                                   ;and #$f1ff,ucodediv-usedcode(a0) org source
0002E2A4 <AmiBlitz3.ab3@17657>   ANDI.w #$7,D3
0002E2A6 <AmiBlitz3.ab3@17658>   LSL.w #8,D3
0002E2A8 <AmiBlitz3.ab3@17659>   LSL.w #1,D3
0002E2AC <AmiBlitz3.ab3@17660>   OR.w D3,$E+4(A0)                                         ;or  d3,ucodediv-usedcode(a0) org source
0002E2B0 <AmiBlitz3.ab3@17661>  BRA.w 'skip2
0002E2B4 <AmiBlitz3.ab3@17666>   LEA usedcode2(PC),A0
0002E2B8 <AmiBlitz3.ab3@17667>   LEA usedcode2f(PC),A1
0002E2BE <AmiBlitz3.ab3@17669>   ANDI.w #$F1FF,$10+4(A0)                                  ;and #$f1ff,ucodediv2-usedcode2(a0) org source
0002E2C0 <AmiBlitz3.ab3@17670>   SUBQ.w #8,D3
0002E2C2 <AmiBlitz3.ab3@17671>   LSL.w #8,D3
0002E2C4 <AmiBlitz3.ab3@17672>   LSL.w #1,D3
0002E2C8 <AmiBlitz3.ab3@17673>   OR.w D3,$10+4(A0)                                        ;or  d3,ucodediv2-usedcode2(a0) org source
0002E2CC <AmiBlitz3.ab3@17676>   MOVE.w -$6(A2,D0.L),D3
0002E2D0 <AmiBlitz3.ab3@17677>   MOVE.w D3,$C+4(A0)                                       ;move d3,ucodeskip-usedcode+2(a0) org source
0002E2D2 <AmiBlitz3.ab3@17678>   ADDQ.w #4,D3
0002E2D6 <AmiBlitz3.ab3@17679>   MOVE.w D3,$2(A0)
0002E2DC <AmiBlitz3.ab3@17680>   MOVE.w regnum,D1
0002E2E0 <AmiBlitz3.ab3@17681>    BEQ.w 'skip3
0002E2E4 <AmiBlitz3.ab3@17682>   MOVE.w usedprep(PC),D1
0002E2E8 <AmiBlitz3.ab3@17683>    BSR.w writeword
0002E2EC <AmiBlitz3.ab3@17686>   BSR.w pokecode
0002E2F2 <AmiBlitz3.ab3@17687>   MOVE.w regnum,D1
0002E2F6 <AmiBlitz3.ab3@17688>    BEQ.w 'skip4
0002E2F8 <AmiBlitz3.ab3@17689>   LSL.w #8,D1
0002E2FA <AmiBlitz3.ab3@17690>   LSL.w #1,D1
0002E2FE <AmiBlitz3.ab3@17691>   OR.w usedfix(PC),D1
0002E302 <AmiBlitz3.ab3@17692>    BSR.w writeword
0002E306 <AmiBlitz3.ab3@17693>   MOVE.w useddone(PC),D1
0002E30A <AmiBlitz3.ab3@17694>    BSR.w writeword
0002E30C <AmiBlitz3.ab3@17697>    MOVEQ.l #$02,D2
0002E310 <AmiBlitz3.ab3@17698> BRA.w get1bytemain
0002E314 <AmiBlitz3.ab3@17706>    BSR.w fetchit
0002E316 <AmiBlitz3.ab3@17708>   MOVEQ.l #$00,D3
0002E31A <AmiBlitz3.ab3@17709>   MOVE.w -$4(A2,D0.L),D3
0002E31E <AmiBlitz3.ab3@17710>    BSR.w get1bytemain
0002E322 <AmiBlitz3.ab3@17711> BRA.w fetchnum2
0002E326 <AmiBlitz3.ab3@17718>    BSR.w get1bytemain    ;get the token
0002E328 <AmiBlitz3.ab3@17719>   MOVE.w D0,-(A7)
0002E32C <AmiBlitz3.ab3@17720>    BSR.w get1bytemain    ;and the bracket?
0002E330 <AmiBlitz3.ab3@17721>   CMP.w #$28,D0          ;'('
0002E334 <AmiBlitz3.ab3@17722>    BNE.w syntaxerr
0002E336 <AmiBlitz3.ab3@17723>   MOVE.w (A7)+,D0
0002E33A <AmiBlitz3.ab3@17724>    BSR.w getmaxel
0002E33E <AmiBlitz3.ab3@17725>    BSR.w reget
0002E342 <AmiBlitz3.ab3@17726>   CMP.w #$29,D0          ;')'
0002E346 <AmiBlitz3.ab3@17727>    BNE.w syntaxerr
0002E34A <AmiBlitz3.ab3@17731>   LEA addrcode(PC),A0
0002E34E <AmiBlitz3.ab3@17732>   LEA addrcodef(PC),A1
0002E354 <AmiBlitz3.ab3@17733>   MOVE.w -$6(A2),$2(A0) ;x(a5)
0002E358 <AmiBlitz3.ab3@17734>   MOVE.w $4(A0),D1
0002E35C <AmiBlitz3.ab3@17735>   ANDI.w #$FFF8,D1
0002E362 <AmiBlitz3.ab3@17736>   OR.w regnum,D1
0002E366 <AmiBlitz3.ab3@17737>   MOVE.w D1,$4(A0)      ;add Dregat,a0
0002E36A <AmiBlitz3.ab3@17738>   MOVE.w $6(A0),D1
0002E36E <AmiBlitz3.ab3@17739>   ANDI.w #$F1FF,D1
0002E374 <AmiBlitz3.ab3@17740>   MOVE.w regnum,D0
0002E376 <AmiBlitz3.ab3@17741>   LSL.w #8,D0
0002E378 <AmiBlitz3.ab3@17742>   LSL.w #1,D0
0002E37A <AmiBlitz3.ab3@17743>   OR.w D0,D1
0002E37E <AmiBlitz3.ab3@17744>   MOVE.w D1,$6(A0)      ;move.l a0,Dregat
0002E382 <AmiBlitz3.ab3@17745>    BSR.w pokecode
0002E384 <AmiBlitz3.ab3@17746>   MOVEQ.l #$03,D2       ;now a long
0002E388 <AmiBlitz3.ab3@17747> BRA.w get1bytemain
0002E38C <AmiBlitz3.ab3@17753>   CMP.w #-$7F4D,D0     ; was #$8000+tnum,
0002E390 <AmiBlitz3.ab3@17754>    BHI.w 'overasm
0002E394 <AmiBlitz3.ab3@17755>  BRA.w syntaxerr
0002E398 <AmiBlitz3.ab3@17760>   CMP.w #NullTokenID,d0                                ;#$b581 check for lib 107 token 1 "NULL" form elomorsyslib
0002E39C <AmiBlitz3.ab3@17761>    BNE 'nonull
0002E3A2 <AmiBlitz3.ab3@17762>    MOVE.l d0,lastinstruction
0002E3A6 <AmiBlitz3.ab3@17763>    MOVE.w #$7000,d1                                            ;asm instr moveq #0,dx
0002E3AC <AmiBlitz3.ab3@17764>    MOVE.w regnum,d0
0002E3AE <AmiBlitz3.ab3@17765>    ASL.l #7,d0
0002E3B0 <AmiBlitz3.ab3@17766>    ASL.l #2,d0
0002E3B2 <AmiBlitz3.ab3@17767>    OR.l d0,d1
0002E3B6 <AmiBlitz3.ab3@17768>    BSR writeword
0002E3BC <AmiBlitz3.ab3@17769>    JSR get1bytemain
0002E3BE <AmiBlitz3.ab3@17770>   RTS
0002E3C2 <AmiBlitz3.ab3@17773>   CMP.w #$c982,d0
0002E3C6 <AmiBlitz3.ab3@17774>    BNE nonew_
0002E3C8 <AmiBlitz3.ab3@17777>   MOVE.l a5,-(a7)
0002E3CE <AmiBlitz3.ab3@17778>   MOVE.w lastchar,-(a7)
0002E3D4 <AmiBlitz3.ab3@17779>   JSR get1bytemain
0002E3D8 <AmiBlitz3.ab3@17780>   CMP.w #"(",d0                                             ; use oldcode
0002E3DC <AmiBlitz3.ab3@17781>   BNE 'newcode
0002E3E2 <AmiBlitz3.ab3@17782>   JSR get1bytemain
0002E3E6 <AmiBlitz3.ab3@17783>   CMP.w #")",d0
0002E3EA <AmiBlitz3.ab3@17784>   BEQ 'newcode
0002E3F0 <AmiBlitz3.ab3@17785>   MOVE.w (a7)+,lastchar
0002E3F2 <AmiBlitz3.ab3@17786>   MOVE.l (a7)+,a5
0002E3F8 <AmiBlitz3.ab3@17787>   MOVE.w lastchar,d0
0002E3FC <AmiBlitz3.ab3@17788>   BRA nonew_
0002E3FE <AmiBlitz3.ab3@17791>   MOVE.l a0,-(a7)
0002E404 <AmiBlitz3.ab3@17792>   TST.b blitzparloop
0002E408 <AmiBlitz3.ab3@17793>   BNE 'err
0002E40E <AmiBlitz3.ab3@17794>   TST.b funcparloop
0002E412 <AmiBlitz3.ab3@17795>   BNE 'err
0002E416 <AmiBlitz3.ab3@17796>   BRA 'ok
0002E41C <AmiBlitz3.ab3@17799>   JMP errornewnotincalls
0002E422 <AmiBlitz3.ab3@17802>   MOVE.l #$203c0000,d1
0002E426 <AmiBlitz3.ab3@17803>   BSR writelong                                            ; 68k asm move.l #$xx,d0
0002E428 <AmiBlitz3.ab3@17804>   MOVEQ #0,d1
0002E42C <AmiBlitz3.ab3@17805>   MOVE.w 8(a0),d1
0002E430 <AmiBlitz3.ab3@17806>   BSR writeword
0002E434 <AmiBlitz3.ab3@17807>   MOVE.w #$7200,d1                                         ; 68k asm "moveq #0,d1"
0002E438 <AmiBlitz3.ab3@17808>   BSR writeword
0002E43C <AmiBlitz3.ab3@17809>   MOVE.w #$C002,D1                                         ;call function to alloc global mem
0002E440 <AmiBlitz3.ab3@17810>   BSR.w tokejsr2
0002E442 <AmiBlitz3.ab3@17811>   MOVE.l (a7)+,a0
0002E444 <AmiBlitz3.ab3@17812>   ADDQ.l #6,a7                      ; a5 need not restore
0002E448 <AmiBlitz3.ab3@17813>   CMP.w #")",d0
0002E44C <AmiBlitz3.ab3@17814>   BNE 'nobracket
0002E452 <AmiBlitz3.ab3@17815>   JSR get1bytemain
0002E454 <AmiBlitz3.ab3@17818> RTS
0002E458 <AmiBlitz3.ab3@17822>   CMP.w #-$7F4A,D0      ; was #$8003+tnum,
0002E45C <AmiBlitz3.ab3@17823>    BEQ.w doern
0002E460 <AmiBlitz3.ab3@17824>   CMP.w #-$7F48,D0      ; was #$8005+tnum,
0002E464 <AmiBlitz3.ab3@17825>    BEQ.w doaddr
0002E468 <AmiBlitz3.ab3@17826>   CMP.w #-$7F3C,D0      ; was #$8011+tnum,
0002E46C <AmiBlitz3.ab3@17827>    BEQ.w domaximum
0002E470 <AmiBlitz3.ab3@17828>   CMP.w #-$7F2F,D0      ; was #$801e+tnum,
0002E474 <AmiBlitz3.ab3@17829>    BEQ.w doused
0002E476 <AmiBlitz3.ab3@17831>   MOVE.w D2,-(A7)       ;remember old type!
0002E478 <AmiBlitz3.ab3@17832>   MOVE.w D0,D1
0002E47C <AmiBlitz3.ab3@17833>   BCLR #$F,D1
0002E480 <AmiBlitz3.ab3@17837>    BSR.w searchinstr
0002E482 <AmiBlitz3.ab3@17838>   MOVE.w (A3),D1
0002E486 <AmiBlitz3.ab3@17839>   BTST #$1,D1
0002E48A <AmiBlitz3.ab3@17840>    BEQ.w noreturn_                                         ;syntax error noreturn
0002E48E <AmiBlitz3.ab3@17841>   BTST #$2,D1
0002E492 <AmiBlitz3.ab3@17842>    BNE.w amigalib
0002E494 <AmiBlitz3.ab3@17848>   LSR.w #8,D1
0002E49A <AmiBlitz3.ab3@17849>   BTST #$3,$1(A3)
0002E49E <AmiBlitz3.ab3@17850>    BEQ.w 'no0
0002E4A4 <AmiBlitz3.ab3@17852>    JSR sizespec2
0002E4AA <AmiBlitz3.ab3@17856>    CLR.l rightsidetype
0002E4B0 <AmiBlitz3.ab3@17857>    CLR.w rightsideflagmask
0002E4B2 <AmiBlitz3.ab3@17859>    MOVE.w D1,-(A7)                                         ;is library instruction
0002E4B6 <AmiBlitz3.ab3@17860>   CMP.w #$7,D1
0002E4BA <AmiBlitz3.ab3@17861>    BNE.w 'notst0
0002E4BC <AmiBlitz3.ab3@17862>   MOVE.l A2,-(A7)
0002E4C0 <AmiBlitz3.ab3@17863>    BSR.w makesbase
0002E4C2 <AmiBlitz3.ab3@17864>   MOVEA.l (A7)+,A2
0002E4C6 <AmiBlitz3.ab3@17867>     BSR.w savem
0002E4C8 <AmiBlitz3.ab3@17868>   MOVE.w D3,-(A7)        ;the movem regs
0002E4CC <AmiBlitz3.ab3@17870>    BSR.w get1bytemain
0002E4CE <AmiBlitz3.ab3@17871>   MOVEQ.l #$00,D1
0002E4D2 <AmiBlitz3.ab3@17872>   CMP.w #$28,D0          ;'('
0002E4D6 <AmiBlitz3.ab3@17873>    BNE.w 'nopars
0002E4DC <AmiBlitz3.ab3@17874>    JSR countpees
0002E4DE <AmiBlitz3.ab3@17875>   TST.w D1
0002E4E2 <AmiBlitz3.ab3@17876>    BEQ.w syntaxerr
0002E4E6 <AmiBlitz3.ab3@17877>  BRA.w 'skip0
0002E4F0 <AmiBlitz3.ab3@17882>   MOVE.w oldqflag,instringon
0002E4F6 <AmiBlitz3.ab3@17883>   MOVEA.l lastsourcepos,A5
0002E4FC <AmiBlitz3.ab3@17887>    MOVE.w regnum,-(A7)
0002E506 <AmiBlitz3.ab3@17889>    MOVE.w regnum,regnumstore
0002E50C <AmiBlitz3.ab3@17890>    TST.b fpu
0002E510 <AmiBlitz3.ab3@17891>             BEQ 'nofloat
0002E516 <AmiBlitz3.ab3@17892>             CMP.w #$ffff,28(a3)
0002E51A <AmiBlitz3.ab3@17893>             BNE 'nofloat
0002E520 <AmiBlitz3.ab3@17894>             CMP.w #$3c01,34(a3)                            ;val do nofpu stuff
0002E524 <AmiBlitz3.ab3@17895>             BEQ 'nofloat
0002E52A <AmiBlitz3.ab3@17896>             CMP.w #$3c02,34(a3)                            ;int skip
0002E52E <AmiBlitz3.ab3@17897>             BEQ 'quick1
0002E532 <AmiBlitz3.ab3@17898>             CMP.b #5,(a3)
0002E536 <AmiBlitz3.ab3@17899>             BNE 'nofloat
0002E53C <AmiBlitz3.ab3@17902>             CLR.l load_var_addr
0002E540 <AmiBlitz3.ab3@17903>  BRA 'isfpu
0002E546 <AmiBlitz3.ab3@17907>    CLR.w regnum
0002E548 <AmiBlitz3.ab3@17910>    MOVE.w D1,-(A7)
0002E54E <AmiBlitz3.ab3@17911>   BTST #$3,$1(A3)
0002E552 <AmiBlitz3.ab3@17912>    BEQ.w 'no2
0002E556 <AmiBlitz3.ab3@17933>   MOVE.w $6(A7),D1
0002E55C <AmiBlitz3.ab3@17935>   MOVE.w d1,peeksize
0002E560 <AmiBlitz3.ab3@17946>   ORI.w #$7000,D1
0002E564 <AmiBlitz3.ab3@17947>   BSR.w writeword                                          ;write peekmode
0002E56A <AmiBlitz3.ab3@17950>   ADDQ.w #1,regnum
0002E56C <AmiBlitz3.ab3@17951>   MOVE.w (A7),D1
0002E574 <AmiBlitz3.ab3@17955>   MOVE.w 2(a7),tempregnum
0002E57A <AmiBlitz3.ab3@17956>   MOVE.w parnum,-(a7)                                       ;7.2014 parnum need store to allow functioncall in parameter >6
0002E580 <AmiBlitz3.ab3@17957>   CLR.w parnum                                              ;7.2014
0002E586 <AmiBlitz3.ab3@17959>   JSR dolibtoke                                             ;write code of blitzfunc
0002E58C <AmiBlitz3.ab3@17961>   MOVE.w (a7)+,parnum                                       ;7.2014 new restore parnum
0002E58E <AmiBlitz3.ab3@17963>   TST.w (A7)+
0002E592 <AmiBlitz3.ab3@17964>   BEQ.w 'skip
0002E596 <AmiBlitz3.ab3@17965>   CMP.w #")",D0                                             ; check if ) here for correct end of blitzlib function call
0002E59A <AmiBlitz3.ab3@17966>   BNE.w errorbracketmiss                                    ; was syntax error
0002E5A0 <AmiBlitz3.ab3@17968>   CLR.l lasttoken
0002E5A4 <AmiBlitz3.ab3@17970>   BSR.w get1bytemain
0002E5A6 <AmiBlitz3.ab3@17973>    MOVE.w (A7)+,D1
0002E5AC <AmiBlitz3.ab3@17974>    MOVE.w D1,regnum
0002E5B0 <AmiBlitz3.ab3@17975>    BEQ.w 'skip2
0002E5B6 <AmiBlitz3.ab3@17977>    CMP.w #$3c01,24(a2)                                     ;val skipped
0002E5BA <AmiBlitz3.ab3@17978>    BNE 'noval
0002E5C0 <AmiBlitz3.ab3@17979>    TST.b fpu
0002E5C4 <AmiBlitz3.ab3@17980>    BEQ 'noval
0002E5CA <AmiBlitz3.ab3@17981>    CLR.l load_var_addr
0002E5CC <AmiBlitz3.ab3@17982>    MOVEQ #0,d1
0002E5D2 <AmiBlitz3.ab3@17983>    MOVE.w regnum,d1
0002E5D4 <AmiBlitz3.ab3@17984>    LSL.l #7,d1
0002E5DA <AmiBlitz3.ab3@17985>    OR.l #$f2000000,d1
0002E5DE <AmiBlitz3.ab3@17986>    BSR writelong
0002E5E2 <AmiBlitz3.ab3@17987>  BRA 'skip2
0002E5E8 <AmiBlitz3.ab3@17990>    CMP.w #$3c02,24(a2)                                     ;int skipped
0002E5EC <AmiBlitz3.ab3@17991>    BEQ 'quick
0002E5F0 <AmiBlitz3.ab3@17992>    CMP.b #5,d2
0002E5F4 <AmiBlitz3.ab3@17993>    BNE 'nofpu2
0002E5FA <AmiBlitz3.ab3@17994>    TST.b fpu
0002E5FE <AmiBlitz3.ab3@17995>    BEQ 'nofpu2
0002E604 <AmiBlitz3.ab3@18000>    CLR.l load_var_addr
0002E608 <AmiBlitz3.ab3@18001>  BRA 'skip2
0002E60A <AmiBlitz3.ab3@18005>   LSL.w #8,D1
0002E60C <AmiBlitz3.ab3@18006>   LSL.w #1,D1
0002E610 <AmiBlitz3.ab3@18007>   ORI.w #$2000,D1
0002E614 <AmiBlitz3.ab3@18008>   BSR.w writeword      ;move.l d0,regat                                    ;write move.l d0,dx
0002E61A <AmiBlitz3.ab3@18010>   TST.b fpu
0002E61E <AmiBlitz3.ab3@18011>   BEQ 'skip2
0002E620 <AmiBlitz3.ab3@18012>   MOVEQ #0,d1
0002E626 <AmiBlitz3.ab3@18013>   MOVE.w regnum,d1
0002E628 <AmiBlitz3.ab3@18014>   LSL.l #7,d1
0002E62E <AmiBlitz3.ab3@18015>   OR.l #$f2000000,d1
0002E630 <AmiBlitz3.ab3@18020>        MOVE.w (A7)+,D3
0002E634 <AmiBlitz3.ab3@18021>        BEQ.w 'nomovem
0002E63A <AmiBlitz3.ab3@18023>        TST.b fpu
0002E63E <AmiBlitz3.ab3@18024>        BEQ 'nofpu3
0002E640 <AmiBlitz3.ab3@18025>       MOVE.l d0,-(a7)
0002E642 <AmiBlitz3.ab3@18026>        MOVE.l a0,-(a7)
0002E648 <AmiBlitz3.ab3@18027>        MOVE.l stacktrack,d1
0002E64E <AmiBlitz3.ab3@18028>        LEA fpustackbase,a0
0002E656 <AmiBlitz3.ab3@18029>        MOVE.w 0(a0,d1),regmask
0002E658 <AmiBlitz3.ab3@18030>        MOVE.l (a7)+,a0
0002E65C <AmiBlitz3.ab3@18031>       MOVE.w #8,d0
0002E660 <AmiBlitz3.ab3@18034>       BEQ 'ready
0002E666 <AmiBlitz3.ab3@18035>       BTST d0,regmask
0002E66A <AmiBlitz3.ab3@18036>       BEQ 'noa7
0002E66C <AmiBlitz3.ab3@18037>       MOVEQ #0,d1
0002E66E <AmiBlitz3.ab3@18038>       MOVE.w d0,d1
0002E670 <AmiBlitz3.ab3@18039>       SUBQ.w #1,d1
0002E672 <AmiBlitz3.ab3@18040>       ASL #7,d1
0002E678 <AmiBlitz3.ab3@18042>       OR.l #$f21f5400,d1                                   ;fmove.d (a7)+
0002E67C <AmiBlitz3.ab3@18043>       BSR writelong
0002E682 <AmiBlitz3.ab3@18044>       SUBQ.l #2,stacktrack
0002E684 <AmiBlitz3.ab3@18047>       SUBQ.w #1,d0
0002E688 <AmiBlitz3.ab3@18048>       BNE 'loop
0002E68A <AmiBlitz3.ab3@18051>       MOVE.l (a7)+,d0
0002E690 <AmiBlitz3.ab3@18052>       SUBQ.l #2,stacktrack                                 ;int track
0002E694 <AmiBlitz3.ab3@18056>    MOVE.w #$4CDF,D1
0002E698 <AmiBlitz3.ab3@18057>    BSR.w writeword                                         ;write movem.l (a7)+,
0002E69A <AmiBlitz3.ab3@18058>   MOVEQ.l #$00,D1
0002E69C <AmiBlitz3.ab3@18059>   MOVEQ.l #$0F,D4
0002E69E <AmiBlitz3.ab3@18062>     LSL.w #1,D3
0002E6A0 <AmiBlitz3.ab3@18063>     ROXR.w #1,D1
0002E6A4 <AmiBlitz3.ab3@18064>   DBF D4,'loopsw
0002E6A8 <AmiBlitz3.ab3@18065>    BSR.w writeword      ;poke movem (a7)+...
0002E6AE <AmiBlitz3.ab3@18067>    TST.b fast
0002E6B2 <AmiBlitz3.ab3@18068>    BEQ 'nomovem
0002E6B8 <AmiBlitz3.ab3@18069>    TST.w regnum
0002E6BC <AmiBlitz3.ab3@18070>    BEQ 'nomovem
0002E6C2 <AmiBlitz3.ab3@18071>    CMP.w #$3c0e,$1c(a3)                                    ;true
0002E6C6 <AmiBlitz3.ab3@18072>    BNE 'l1b
0002E6CC <AmiBlitz3.ab3@18073>    MOVE.w regnum,d1
0002E6CE <AmiBlitz3.ab3@18074>    ASL.l #8,d1
0002E6D0 <AmiBlitz3.ab3@18075>    ASL.l #1,d1
0002E6D4 <AmiBlitz3.ab3@18076>    OR.w #$70ff,d1
0002E6DE <AmiBlitz3.ab3@18077>    SUB.l #12,destpointer
0002E6E2 <AmiBlitz3.ab3@18078>    BSR writeword
0002E6E8 <AmiBlitz3.ab3@18081>   CMP.w #$3c0f,$1c(a3)                                     ;false
0002E6EC <AmiBlitz3.ab3@18082>    BNE 'l2b
0002E6F2 <AmiBlitz3.ab3@18083>     MOVE.w regnum,d1
0002E6F4 <AmiBlitz3.ab3@18084>     ASL.l #8,d1
0002E6F6 <AmiBlitz3.ab3@18085>     ASL.l #1,d1
0002E6FA <AmiBlitz3.ab3@18086>     OR.w #$7000,d1
0002E704 <AmiBlitz3.ab3@18087>     SUB.l #12,destpointer
0002E708 <AmiBlitz3.ab3@18088>     BSR writeword
0002E70A <AmiBlitz3.ab3@18093>    MOVE.w (A7)+,D2
0002E70E <AmiBlitz3.ab3@18094>   CMP.w #$7,D2                                             ;destination var type
0002E712 <AmiBlitz3.ab3@18095>    BNE.w 'notst
0002E718 <AmiBlitz3.ab3@18096>   MOVE.w putstlen,D1
0002E71E <AmiBlitz3.ab3@18097>   OR.w regnum,D1
0002E722 <AmiBlitz3.ab3@18098>    BSR.w writeword
0002E726 <AmiBlitz3.ab3@18101> BRA.w varcont
0002E72A <AmiBlitz3.ab3@18106>   MOVE.w $6(A3),D1
0002E72E <AmiBlitz3.ab3@18107>    BSR.w uselib           ;get lib for base address
0002E732 <AmiBlitz3.ab3@18108>    BSR.w savereg
0002E734 <AmiBlitz3.ab3@18109>   MOVE.l D4,D1
0002E736 <AmiBlitz3.ab3@18110>   MOVE.l D5,-(A7)
0002E73A <AmiBlitz3.ab3@18111>    BSR.w pokemovem
0002E73E <AmiBlitz3.ab3@18112>   MOVE.w $A(A1),-(A7)     ;libbase reg
0002E740 <AmiBlitz3.ab3@18113>   ADDQ.w #8,A3
0002E742 <AmiBlitz3.ab3@18114>   MOVE.w (A3)+,-(A7)      ;get offset for lib
0002E744 <AmiBlitz3.ab3@18115>   MOVE.l A3,-(A7)
0002E748 <AmiBlitz3.ab3@18116>    BSR.w get1bytemain
0002E74A <AmiBlitz3.ab3@18117>   MOVE.w D0,-(A7)         ;remember first bracket....
0002E74C <AmiBlitz3.ab3@18121>   MOVEQ.l #$00,D3
0002E752 <AmiBlitz3.ab3@18123>   JSR checka4a5
0002E754 <AmiBlitz3.ab3@18127>   MOVE.b (A3)+,D1
0002E758 <AmiBlitz3.ab3@18128>    BMI.w 'done
0002E75A <AmiBlitz3.ab3@18129>   MOVEQ.l #$03,D2
0002E75C <AmiBlitz3.ab3@18130>   ADDQ.w #1,D3
0002E760 <AmiBlitz3.ab3@18131>   MOVEM.l D3/A3,-(A7)
0002E766 <AmiBlitz3.ab3@18133>   MOVE.b funcparloop,-(a7)
0002E76C <AmiBlitz3.ab3@18134>   CLR.b funcparloop
0002E772 <AmiBlitz3.ab3@18135>   MOVE.b blitzparloop,-(a7)
0002E77A <AmiBlitz3.ab3@18136>   MOVE.b #1,blitzparloop
0002E780 <AmiBlitz3.ab3@18137>   MOVE.l lasttoken,-(a7)
0002E786 <AmiBlitz3.ab3@18138>   MOVE.l leftsidetype,-(a7)
0002E78C <AmiBlitz3.ab3@18139>   MOVE.l rightsidetype,-(a7)
0002E790 <AmiBlitz3.ab3@18141>   BSR.w peval
0002E796 <AmiBlitz3.ab3@18143>   MOVE.l (a7)+,rightsidetype
0002E79C <AmiBlitz3.ab3@18144>   MOVE.l (a7)+,leftsidetype
0002E7A2 <AmiBlitz3.ab3@18145>   MOVE.l (a7)+,lasttoken
0002E7A8 <AmiBlitz3.ab3@18146>   MOVE.b (a7)+,blitzparloop
0002E7AE <AmiBlitz3.ab3@18147>   MOVE.b (a7)+,funcparloop
0002E7B4 <AmiBlitz3.ab3@18149>   SUBQ.w #4,a2offset              ;readjust stack! it's coming off later!
0002E7B8 <AmiBlitz3.ab3@18150>   MOVEM.l (A7)+,D3/A3
0002E7BC <AmiBlitz3.ab3@18151>   CMP.w #$2C,D0                   ;','
0002E7C0 <AmiBlitz3.ab3@18152>    BEQ.w 'loop
0002E7C2 <AmiBlitz3.ab3@18153>   TST.b (A3)
0002E7C6 <AmiBlitz3.ab3@18154>    BPL.w syntaxerr
0002E7C8 <AmiBlitz3.ab3@18157>   MOVE.w (A7)+,D1
0002E7CC <AmiBlitz3.ab3@18158>    BSR.w tstbras
0002E7CE <AmiBlitz3.ab3@18159>   MOVEA.l (A7)+,A3
0002E7D0 <AmiBlitz3.ab3@18160>   SUBQ.w #1,D3
0002E7D4 <AmiBlitz3.ab3@18161>    BMI.w 'nopars
0002E7D6 <AmiBlitz3.ab3@18164>   TST.b (A3)+                     ;go to end of params
0002E7DA <AmiBlitz3.ab3@18165>    BPL.w 'toend
0002E7DC <AmiBlitz3.ab3@18166>   SUBQ.w #1,A3
0002E7DE <AmiBlitz3.ab3@18169>     MOVEQ.l #$00,D1
0002E7E0 <AmiBlitz3.ab3@18170>     MOVE.b -(A3),D1
0002E7E4 <AmiBlitz3.ab3@18171>     BTST #$4,D1
0002E7E8 <AmiBlitz3.ab3@18172>      BNE.w 'addreg
0002E7EE <AmiBlitz3.ab3@18173>     CMP.w regnum,D1
0002E7F2 <AmiBlitz3.ab3@18174>      BCC.w 'nomovem
0002E7F4 <AmiBlitz3.ab3@18175>     BSET D1,D5
0002E7F6 <AmiBlitz3.ab3@18176>     MOVEQ.l #$0F,D0
0002E7F8 <AmiBlitz3.ab3@18177>     SUB.w D1,D0
0002E7FA <AmiBlitz3.ab3@18178>     BSET D0,D4
0002E7FC <AmiBlitz3.ab3@18181>     LSL.w #8,D1
0002E7FE <AmiBlitz3.ab3@18182>     LSL.w #1,D1
0002E802 <AmiBlitz3.ab3@18183>     ORI.w #$201F,D1
0002E806 <AmiBlitz3.ab3@18184>    BRA.w 'gotit
0002E80A <AmiBlitz3.ab3@18187>     ANDI.w #$7,D1
0002E80C <AmiBlitz3.ab3@18188>     LSL.w #8,D1
0002E80E <AmiBlitz3.ab3@18189>     LSL.w #1,D1
0002E812 <AmiBlitz3.ab3@18190>     ORI.w #$205F,D1
0002E816 <AmiBlitz3.ab3@18193>      BSR.w writeword
0002E81A <AmiBlitz3.ab3@18194>   DBF D3,'loop2
0002E820 <AmiBlitz3.ab3@18197>   MOVE.w (A7)+,libjsr+2
0002E826 <AmiBlitz3.ab3@18198>   MOVE.w (A7)+,libbase+2
0002E82C <AmiBlitz3.ab3@18199>   MOVE.l libbase,D1
0002E830 <AmiBlitz3.ab3@18200>    BSR.w writelong
0002E836 <AmiBlitz3.ab3@18201>   MOVE.l libjsr,D1
0002E83A <AmiBlitz3.ab3@18202>    BSR.w writelong
0002E840 <AmiBlitz3.ab3@18203>   MOVE.w regnum,D1
0002E844 <AmiBlitz3.ab3@18204>    BEQ.w 'nofin
0002E846 <AmiBlitz3.ab3@18205>   LSL.w #8,D1
0002E848 <AmiBlitz3.ab3@18206>   LSL.w #1,D1
0002E84C <AmiBlitz3.ab3@18207>   ORI.w #$2000,D1
0002E850 <AmiBlitz3.ab3@18208>    BSR.w writeword
0002E852 <AmiBlitz3.ab3@18211>   MOVE.l (A7)+,D1
0002E856 <AmiBlitz3.ab3@18212>    BSR.w pokemovem
0002E85C <AmiBlitz3.ab3@18214>    JSR restorea4a5
0002E85E <AmiBlitz3.ab3@18216>   MOVEQ.l #$03,D2
0002E862 <AmiBlitz3.ab3@18217>    BSR.w reget
0002E866 <AmiBlitz3.ab3@18218> BRA.w varcont
0002E868 <AmiBlitz3.ab3@18227>   TST.w D3
0002E86C <AmiBlitz3.ab3@18228>    BEQ.w 'nopars
0002E870 <AmiBlitz3.ab3@18229>   CMP.w #$28,D1      ;'('
0002E874 <AmiBlitz3.ab3@18230>    BNE.w syntaxerr
0002E878 <AmiBlitz3.ab3@18231>   CMP.w #$29,D0      ;')'
0002E87C <AmiBlitz3.ab3@18232>    BNE.w syntaxerr
0002E880 <AmiBlitz3.ab3@18233>  BRA.w get1bytemain
0002E884 <AmiBlitz3.ab3@18236>   CMP.w #$28,D1       ;'('
0002E888 <AmiBlitz3.ab3@18237>    BNE.w 'skip
0002E88C <AmiBlitz3.ab3@18238>    BSR.w get1bytemain
0002E890 <AmiBlitz3.ab3@18239>   CMP.w #$29,D0       ;')'
0002E894 <AmiBlitz3.ab3@18240>    BNE.w syntaxerr
0002E898 <AmiBlitz3.ab3@18241>  BRA.w get1bytemain
0002E89A <AmiBlitz3.ab3@18244> RTS
0002E89C <AmiBlitz3.ab3@18248>   TST.w D1
0002E8A0 <AmiBlitz3.ab3@18249>    BNE.w writelong
0002E8A2 <AmiBlitz3.ab3@18250> RTS
0002E8A6 <AmiBlitz3.ab3@18255>   MOVE.w #$48E7,D4
0002E8A8 <AmiBlitz3.ab3@18256>   SWAP D4
0002E8AA <AmiBlitz3.ab3@18257>   CLR.w D4
0002E8AE <AmiBlitz3.ab3@18258>   MOVE.w #$4CDF,D5
0002E8B0 <AmiBlitz3.ab3@18259>   SWAP D5
0002E8B2 <AmiBlitz3.ab3@18260>   CLR.w D5
0002E8B8 <AmiBlitz3.ab3@18261>   MOVE.w regnum,D1
0002E8BC <AmiBlitz3.ab3@18262>    BEQ.w 'skip
0002E8C0 <AmiBlitz3.ab3@18263>   BSET #$F,D4
0002E8C4 <AmiBlitz3.ab3@18264>   BSET #$0,D5
0002E8C8 <AmiBlitz3.ab3@18265>   CMP.w #$2,D1
0002E8CC <AmiBlitz3.ab3@18266>    BCS.w 'skip2
0002E8D0 <AmiBlitz3.ab3@18269>   BSET #$E,D4
0002E8D4 <AmiBlitz3.ab3@18270>   BSET #$1,D5
0002E8D6 <AmiBlitz3.ab3@18273>  RTS
0002E8DC <AmiBlitz3.ab3@18276>   TST.w fuckpos
0002E8E0 <AmiBlitz3.ab3@18277>   BNE.w 'skip3
0002E8E2 <AmiBlitz3.ab3@18278> RTS
0002E8E4 <AmiBlitz3.ab3@18281> fuckpos:  Ds.w 1
0002E8EA <AmiBlitz3.ab3@18285>   MOVE.w sbasegot,D1
0002E8EE <AmiBlitz3.ab3@18286>    BEQ.w 'skip
0002E8F2 <AmiBlitz3.ab3@18290>   MOVE.w sbgot(PC),D1
0002E8F6 <AmiBlitz3.ab3@18291>    BNE.w 'skip2
0002E8FE <AmiBlitz3.ab3@18295>   MOVE.w #$0002,sbgot
0002E904 <AmiBlitz3.ab3@18296>   MOVE.w movea3a7,D1
0002E908 <AmiBlitz3.ab3@18297>  BRA.w writeword
0002E90A <AmiBlitz3.ab3@18300>  RTS
0002E912 <AmiBlitz3.ab3@18305>   MOVE.w #$0001,sbgot                                      ;voodoo magic! - Will it work?
0002E918 <AmiBlitz3.ab3@18307>   MOVE.l #$C601,D1                  ; was #workstart,
0002E920 <AmiBlitz3.ab3@18308>   MOVE.w #-1,sbasegot               
0002E926 <AmiBlitz3.ab3@18310>   MOVE.l d1,lastinstruction
0002E92A <AmiBlitz3.ab3@18312>   BSR.w Atokejsr
0002E92C <AmiBlitz3.ab3@18313> RTS
0002E936 <AmiBlitz3.ab3@18318>   MOVE.l data1,litdata1
0002E93C <AmiBlitz3.ab3@18320>   TST.b fast
0002E940 <AmiBlitz3.ab3@18321>   BEQ 'l50                                                 ;optistring  seem impossible to get work
0002E944 <AmiBlitz3.ab3@18325>  BRA 'l50                                                  ;to deactivate
0002E94A <AmiBlitz3.ab3@18331>   TST.b optistring
0002E94E <AmiBlitz3.ab3@18332>   BNE.s 'l21
0002E954 <AmiBlitz3.ab3@18333>   CLR.b string1
0002E95C <AmiBlitz3.ab3@18334>   MOVE.b #1,optistring
0002E962 <AmiBlitz3.ab3@18335>   TST.b nostringopt
0002E966 <AmiBlitz3.ab3@18336>   BNE 'l21
0002E968 <AmiBlitz3.ab3@18337>   MOVE.l a5,a4
0002E96A <AmiBlitz3.ab3@18338>   SUBQ.l #1,a4
0002E96C <AmiBlitz3.ab3@18341>     TST.b (a4)
0002E970 <AmiBlitz3.ab3@18342>     BMI 'l19a
0002E974 <AmiBlitz3.ab3@18343>     BEQ.s 'l20
0002E978 <AmiBlitz3.ab3@18344>     CMP.b #$22,(a4)
0002E97C <AmiBlitz3.ab3@18345>     BEQ.s 'l19
0002E982 <AmiBlitz3.ab3@18348>     TST.w string1
0002E986 <AmiBlitz3.ab3@18349>     BNE 'l11
0002E98A <AmiBlitz3.ab3@18350>     CMP.b #":",(a4)
0002E98E <AmiBlitz3.ab3@18351>     BEQ.s 'l20
0002E992 <AmiBlitz3.ab3@18352>     CMP.b #";",(a4)
0002E996 <AmiBlitz3.ab3@18353>     BEQ.s 'l20
0002E99A <AmiBlitz3.ab3@18354>     CMP.b #"+",(a4)
0002E99E <AmiBlitz3.ab3@18355>     BEQ.s 'l21
0002E9A2 <AmiBlitz3.ab3@18356>     CMP.b #",",(a4)
0002E9A6 <AmiBlitz3.ab3@18357>     BEQ.s 'l20                                             ;was l21
0002E9AA <AmiBlitz3.ab3@18358>     CMP.b #")",(a4)
0002E9AE <AmiBlitz3.ab3@18359>     BEQ.s 'l20                                             ;was l21
0002E9B0 <AmiBlitz3.ab3@18362>     ADDQ.l #1,a4
0002E9B4 <AmiBlitz3.ab3@18363>  BRA.s 'l10
0002E9BC <AmiBlitz3.ab3@18366>   BCHG #0,string1
0002E9C0 <AmiBlitz3.ab3@18367>  BRA 'l18
0002E9C2 <AmiBlitz3.ab3@18370>   ADDQ.l #1,a4
0002E9C4 <AmiBlitz3.ab3@18371>   TST.b (a4)
0002E9C8 <AmiBlitz3.ab3@18372>   BEQ 'l21
0002E9CC <AmiBlitz3.ab3@18373>  BRA 'l11
0002E9CE <AmiBlitz3.ab3@18376>   MOVE.l a5,a4
0002E9D0 <AmiBlitz3.ab3@18377>   SUBQ.l #1,a4
0002E9D4 <AmiBlitz3.ab3@18380>   CMP.b #$20,-(a4)
0002E9D8 <AmiBlitz3.ab3@18381>   BEQ 'll1
0002E9DC <AmiBlitz3.ab3@18382>   CMP.b #"+",(a4)
0002E9E0 <AmiBlitz3.ab3@18383>   BEQ 'l21
0002E9E8 <AmiBlitz3.ab3@18398>   MOVE.b #2,optistring
0002E9F0 <AmiBlitz3.ab3@18401>   CMP.b #2,optistring
0002E9F4 <AmiBlitz3.ab3@18402>   BEQ.s 'l100
0002E9F8 <AmiBlitz3.ab3@18405>   BSR.w makesbase
0002E9FC <AmiBlitz3.ab3@18407>   BSR.w pokedata1                                          ;writestringsizespace
0002EA00 <AmiBlitz3.ab3@18408>   BSR.w pokedata1
0002EA02 <AmiBlitz3.ab3@18411>   MOVEQ.l #$00,D2
0002EA08 <AmiBlitz3.ab3@18415>     MOVE.l a5,lastsourcepos
0002EA0A <AmiBlitz3.ab3@18416>     MOVEQ #0,d0
0002EA0C <AmiBlitz3.ab3@18417>     MOVE.b (a5)+,d0
0002EA0E <AmiBlitz3.ab3@18419>     TST.w D0
0002EA12 <AmiBlitz3.ab3@18420>      BEQ.w notqerr
0002EA16 <AmiBlitz3.ab3@18421>     CMP.w #$22,D0     ; '"'                                     ; --- " ---
0002EA1A <AmiBlitz3.ab3@18422>      BEQ.w 'done
0002EA1E <AmiBlitz3.ab3@18424>     CMP.b #"\",d0
0002EA22 <AmiBlitz3.ab3@18425>      BNE 'l1
0002EA26 <AmiBlitz3.ab3@18426>     CMP.b #"\",(a5)
0002EA2A <AmiBlitz3.ab3@18427>      BNE 'l1
0002EA30 <AmiBlitz3.ab3@18428>     TST.b newsyntax
0002EA34 <AmiBlitz3.ab3@18429>      BEQ 'l1
0002EA3A <AmiBlitz3.ab3@18430>     CMP.w #"\\",1(a5)                                      ; new compiler constants
0002EA3E <AmiBlitz3.ab3@18431>     BNE 'l2
0002EA40 <AmiBlitz3.ab3@18432>     ADDQ #2,a5
0002EA42 <AmiBlitz3.ab3@18435>     ADDQ.w #1,D2
0002EA44 <AmiBlitz3.ab3@18436>     MOVE.w D0,D1
0002EA48 <AmiBlitz3.ab3@18437>     BSR.w pokedata1b                                        ;writestring
0002EA4C <AmiBlitz3.ab3@18438>  BRA.w 'writestring
0002EA52 <AmiBlitz3.ab3@18441>     JSR check_newconstants
0002EA56 <AmiBlitz3.ab3@18442>  BRA 'writestring
0002EA5C <AmiBlitz3.ab3@18447>   NOT instringon
0002EA62 <AmiBlitz3.ab3@18449>   MOVE.w dontwrite_nomemleft,D1
0002EA66 <AmiBlitz3.ab3@18450>   BNE.w 'skip
0002EA6E <AmiBlitz3.ab3@18452>   CMP.b #2,optistring
0002EA72 <AmiBlitz3.ab3@18453>   BEQ 'skip
0002EA78 <AmiBlitz3.ab3@18455>     MOVEA.l litdata1,A0
0002EA7A <AmiBlitz3.ab3@18456>     CLR.w (A0)+                                            ;writesize
0002EA7C <AmiBlitz3.ab3@18457>     MOVE.w D2,(A0)
0002EA80 <AmiBlitz3.ab3@18460>   BSR.w makelit                                          ;writestringconstantcode
0002EA86 <AmiBlitz3.ab3@18461>   ADDQ.l #1,data1
0002EA8E <AmiBlitz3.ab3@18462>   BCLR #$0,data1+3
0002EA90 <AmiBlitz3.ab3@18463>   MOVEQ.l #$07,D2
0002EA94 <AmiBlitz3.ab3@18464> BRA.w get1bytemain
0002EA98 <AmiBlitz3.ab3@18469>   BSR.w makename2
0002EA9C <AmiBlitz3.ab3@18471>   BSR.w findlabel2
0002EAA0 <AmiBlitz3.ab3@18472>   BEQ.w 'found
0002EAA4 <AmiBlitz3.ab3@18474>   BSR.w addlabelhash
0002EAA8 <AmiBlitz3.ab3@18475>   CLR.l $4(A2)           ;no refs
0002EAAC <AmiBlitz3.ab3@18476>   CLR.l $8(A2)           ;not created yet (no PC)
0002EAB4 <AmiBlitz3.ab3@18478>   MOVE.w linenumat+2,$10(A2)  ; was linenumat,    ;context
0002EABA <AmiBlitz3.ab3@18480>   MOVE.w linenumat,d0
0002EABC <AmiBlitz3.ab3@18481>   MOVEQ #0,d1
0002EAC0 <AmiBlitz3.ab3@18482>   MOVE.b -1(a2,d7),d1
0002EAC4 <AmiBlitz3.ab3@18483>   MOVE.w d0,0(a2,d1)
0002EAC8 <AmiBlitz3.ab3@18485>  BRA.w 'makeit
0002EACC <AmiBlitz3.ab3@18488>   TST.l $8(A2)
0002EAD0 <AmiBlitz3.ab3@18489>   BNE.w 'gotit    ;already made
0002EAD6 <AmiBlitz3.ab3@18495>   MOVEA.l _execbase,A6
0002EAD8 <AmiBlitz3.ab3@18496>   MOVEQ.l #$0C+2,D0      ; was 12
0002EADA <AmiBlitz3.ab3@18497>   MOVEQ.l #$01,D1
0002EAE0 <AmiBlitz3.ab3@18499>   MOVE.l mempool,a0
0002EAE4 <AmiBlitz3.ab3@18500>   JSR _AllocPooled(a6)
0002EAE6 <AmiBlitz3.ab3@18503>   MOVEA.l D0,A0
0002EAEA <AmiBlitz3.ab3@18504>   MOVE.l $4(A2),(A0)
0002EAEE <AmiBlitz3.ab3@18505>   MOVE.l A0,$4(A2)
0002EAF6 <AmiBlitz3.ab3@18506>   MOVE.l destpointer,$4(A0)
0002EAFA <AmiBlitz3.ab3@18507>   ADDQ.l #2,$4(A0)
0002EB02 <AmiBlitz3.ab3@18508>   MOVE.w procnum,$8(A0)
0002EB0A <AmiBlitz3.ab3@18509>   MOVE.w linenumat+2,$A(A0)   ; was linenumat,
0002EB12 <AmiBlitz3.ab3@18511>   MOVE.w linenumat,$c(a0)
0002EB14 <AmiBlitz3.ab3@18513>  RTS
0002EB18 <AmiBlitz3.ab3@18516>   MOVE.l $4(A2),D1
0002EB1C <AmiBlitz3.ab3@18517>   BTST #$0,D1
0002EB20 <AmiBlitz3.ab3@18518>    BNE.w illlaberr
0002EB26 <AmiBlitz3.ab3@18519>   MOVE.w procnum,D1
0002EB2A <AmiBlitz3.ab3@18520>   CMP.w $10(A2),D1
0002EB2E <AmiBlitz3.ab3@18521>    BNE.w referr
0002EB30 <AmiBlitz3.ab3@18524> RTS
0002EB32 <AmiBlitz3.ab3@18530>   MOVE.w D0,-(A7)
0002EB3A <AmiBlitz3.ab3@18532>   CMP.b #2,optistring
0002EB3E <AmiBlitz3.ab3@18533>   BEQ 'l10
0002EB44 <AmiBlitz3.ab3@18537>   MOVE.w numtoa0,D1
0002EB48 <AmiBlitz3.ab3@18538>    BSR.w writeword
0002EB4C <AmiBlitz3.ab3@18539>    BSR.w addoff
0002EB52 <AmiBlitz3.ab3@18540>   MOVE.l litdata1,D1
0002EB56 <AmiBlitz3.ab3@18541>    BSR.w writelong
0002EB5C <AmiBlitz3.ab3@18542>   MOVE.w pushlen,D1
0002EB60 <AmiBlitz3.ab3@18543>    BSR.w writeword
0002EB64 <AmiBlitz3.ab3@18544>   MOVE.w #$C600,D1        ; was #copstring
0002EB68 <AmiBlitz3.ab3@18545>    BSR.w Atokejsr
0002EB6A <AmiBlitz3.ab3@18546>   MOVE.w (A7)+,D0
0002EB6C <AmiBlitz3.ab3@18547>  RTS
0002EB6E <AmiBlitz3.ab3@18551>   MOVEQ #0,d1
0002EB72 <AmiBlitz3.ab3@18552>   BSR.w pokedata1b
0002EB78 <AmiBlitz3.ab3@18553>   MOVE.l destpointer,a4
0002EB7C <AmiBlitz3.ab3@18554>   MOVE.w #$203c,d1
0002EB82 <AmiBlitz3.ab3@18555>   TST.w mode
0002EB86 <AmiBlitz3.ab3@18556>   BNE 'lm10
0002EB8C <AmiBlitz3.ab3@18557>    ADDQ.w #4,a2offset
0002EB90 <AmiBlitz3.ab3@18558>   MOVE.w #$2f3c,d1
0002EB96 <AmiBlitz3.ab3@18561>   TST.w mode
0002EB9A <AmiBlitz3.ab3@18562>   BEQ 'lm3
0002EBA0 <AmiBlitz3.ab3@18563>   MOVE.w regnum,D0
0002EBA2 <AmiBlitz3.ab3@18564>   LSL.w #8,D0
0002EBA4 <AmiBlitz3.ab3@18565>   LSL.w #1,D0
0002EBA6 <AmiBlitz3.ab3@18566>   OR.w d0,d1
0002EBAA <AmiBlitz3.ab3@18567>   BSR writeword
0002EBAE <AmiBlitz3.ab3@18568>   BSR.w addoff
0002EBB4 <AmiBlitz3.ab3@18569>   MOVE.l litdata1,D1
0002EBB8 <AmiBlitz3.ab3@18570>   BSR.w writelong
0002EBC0 <AmiBlitz3.ab3@18571>   CMP.w #3,mode
0002EBC4 <AmiBlitz3.ab3@18572>   BEQ 'l30
0002EBCA <AmiBlitz3.ab3@18573>    ADDQ.w #4,a2offset
0002EBCE <AmiBlitz3.ab3@18574>   MOVE.w #$4878,D1
0002EBD2 <AmiBlitz3.ab3@18575>   BSR.w writeword
0002EBD4 <AmiBlitz3.ab3@18576>   MOVE.l d2,d1
0002EBD8 <AmiBlitz3.ab3@18577>   BSR writeword
0002EBDA <AmiBlitz3.ab3@18580>   MOVE.w (A7)+,D0
0002EBDC <AmiBlitz3.ab3@18581>  RTS
0002EBE2 <AmiBlitz3.ab3@18584>   MOVE.l #$3f3c0007,d1
0002EBE6 <AmiBlitz3.ab3@18585>   BSR writelong
0002EBEC <AmiBlitz3.ab3@18586>   MOVE.w regnum,D1
0002EBEE <AmiBlitz3.ab3@18587>   LSL.w #8,D1
0002EBF0 <AmiBlitz3.ab3@18588>   LSL.w #1,D1
0002EBF4 <AmiBlitz3.ab3@18589>   ORI.w #$2f3c,d1
0002EBF8 <AmiBlitz3.ab3@18590>   BSR writeword
0002EBFE <AmiBlitz3.ab3@18591>    ADDQ.w #4,a2offset
0002EC00 <AmiBlitz3.ab3@18592>   MOVE.l d2,d1
0002EC04 <AmiBlitz3.ab3@18593>   BSR writelong
0002EC08 <AmiBlitz3.ab3@18594>   MOVE.w #$2f3c,d1
0002EC0C <AmiBlitz3.ab3@18595>   BSR writeword
0002EC10 <AmiBlitz3.ab3@18596>   BSR.w addoff
0002EC16 <AmiBlitz3.ab3@18597>   MOVE.l litdata1,D1
0002EC1A <AmiBlitz3.ab3@18598>   BSR.w writelong
0002EC1C <AmiBlitz3.ab3@18599>   MOVE.w (A7)+,D0
0002EC1E <AmiBlitz3.ab3@18600> RTS
0002EC22 <AmiBlitz3.ab3@18605>   BSR.w get1bytemain
0002EC26 <AmiBlitz3.ab3@18606>    BSR.w makealab2
0002EC2C <AmiBlitz3.ab3@18608>   MOVE.w regnum,D1
0002EC2E <AmiBlitz3.ab3@18609>   LSL.w #8,D1
0002EC30 <AmiBlitz3.ab3@18610>   LSL.w #1,D1
0002EC34 <AmiBlitz3.ab3@18611>   ORI.w #$203C,D1
0002EC38 <AmiBlitz3.ab3@18612>    BSR.w writeword        ;create move.l #loc,dn
0002EC3C <AmiBlitz3.ab3@18613>    BSR.w addoff
0002EC40 <AmiBlitz3.ab3@18614>   MOVE.l $8(A2),D1
0002EC44 <AmiBlitz3.ab3@18615>    BSR.w writelong
0002EC46 <AmiBlitz3.ab3@18616>   MOVEQ.l #$03,D2
0002EC4C <AmiBlitz3.ab3@18618>   CLR.b peekaddrsize
0002EC50 <AmiBlitz3.ab3@18620> BRA.w reget
0002EC52 <AmiBlitz3.ab3@18624>   MOVEQ.l #$00,D3
0002EC56 <AmiBlitz3.ab3@18627>   BSR.w get1bytemain
0002EC5A <AmiBlitz3.ab3@18628>    BEQ.w syntaxerr
0002EC5E <AmiBlitz3.ab3@18629>   CMP.w #$22,D0         ;'"'
0002EC62 <AmiBlitz3.ab3@18630>    BEQ.w 'done
0002EC64 <AmiBlitz3.ab3@18631>   LSL.l #8,D3
0002EC66 <AmiBlitz3.ab3@18632>   MOVE.b D0,D3
0002EC6A <AmiBlitz3.ab3@18633>  BRA.w 'loop
0002EC6E <AmiBlitz3.ab3@18636>   BSR.w get1bytemain
0002EC72 <AmiBlitz3.ab3@18637> BRA.w fetchnum2
0002EC74 <AmiBlitz3.ab3@18641>   MOVE.w D2,-(A7)                                          ;basicvarsforasm
0002EC78 <AmiBlitz3.ab3@18642>    BSR.w makename2              ;get the things name
0002EC7C <AmiBlitz3.ab3@18643>    BSR.w findlabel2
0002EC80 <AmiBlitz3.ab3@18645>    BEQ.w 'l10
0002EC86 <AmiBlitz3.ab3@18646>    LEA ptr_parameterstore,a0
0002EC8C <AmiBlitz3.ab3@18647>    CMP.b #"@",-1(a0,d2.w)
0002EC90 <AmiBlitz3.ab3@18649>    BNE cnferr
0002EC94 <AmiBlitz3.ab3@18651>    CLR.b -1(a0,d2.w)
0002EC96 <AmiBlitz3.ab3@18652>    SUBQ.l #1,d2
0002EC9C <AmiBlitz3.ab3@18653>    LEA varbase,a2
0002ECA0 <AmiBlitz3.ab3@18654>    BSR findvariable
0002ECA4 <AmiBlitz3.ab3@18655>    BNE cnferr
0002ECA8 <AmiBlitz3.ab3@18656>    CMP.b #"\",d0
0002ECAC <AmiBlitz3.ab3@18657>    BNE 'l6
0002ECB2 <AmiBlitz3.ab3@18658>    ADDQ #1,lastsourcepos
0002ECB6 <AmiBlitz3.ab3@18659>    MOVE.l $a(a2),a2
0002ECB8 <AmiBlitz3.ab3@18660>    ADDQ.l #4,a2
0002ECBC <AmiBlitz3.ab3@18661>    BSR.w makename2
0002ECC0 <AmiBlitz3.ab3@18662>    BSR findvariable2
0002ECC4 <AmiBlitz3.ab3@18663>    BNE cnferr
0002ECC8 <AmiBlitz3.ab3@18664>  BRA.s 'l6                                                  ;???
0002ECCC <AmiBlitz3.ab3@18667>    MOVE.w $4(a2),d3
0002ECCE <AmiBlitz3.ab3@18668>    EXT.l d3
0002ECD2 <AmiBlitz3.ab3@18669>  BRA 'npc
0002ECD6 <AmiBlitz3.ab3@18673>   MOVE.l $8(A2),D3          ;val.
0002ECDE <AmiBlitz3.ab3@18674>   CMPI.l #$1,$4(A2)
0002ECE2 <AmiBlitz3.ab3@18675>    BEQ.w 'npc
0002ECE8 <AmiBlitz3.ab3@18676>   NOT.w asmtype
0002ECEA <AmiBlitz3.ab3@18679>   MOVE.w (A7)+,D2
0002ECEE <AmiBlitz3.ab3@18680> BRA.w fetchnum2
0002ECF0 <AmiBlitz3.ab3@18684>   MOVE.w D2,-(A7)           ;remember old type
0002ECF4 <AmiBlitz3.ab3@18685>    BSR.w getparameter
0002ECF8 <AmiBlitz3.ab3@18686>   CMP.w #"{",D0                                          ;test if var = function{}
0002ECFC <AmiBlitz3.ab3@18687>    BEQ.w isfunction
0002ED00 <AmiBlitz3.ab3@18688>    BSR.w fetchvars
0002ED04 <AmiBlitz3.ab3@18690>    BSR.w calcvar                                         ;getvaroffset+type
0002ED08 <AmiBlitz3.ab3@18691>    BSR.w variable2
0002ED0E <AmiBlitz3.ab3@18693>    MOVE.l a2,rightsidetype
0002ED18 <AmiBlitz3.ab3@18694>    MOVE.w flagmask, rightsideflagmask
0002ED1E <AmiBlitz3.ab3@18706>    TST.b typecheck
0002ED22 <AmiBlitz3.ab3@18707>    BEQ varcont
0002ED2C <AmiBlitz3.ab3@18708>    CMP.l #$da01,lasttoken                                  ;poke
0002ED30 <AmiBlitz3.ab3@18709>    BEQ 'l1
0002ED3A <AmiBlitz3.ab3@18710>    CMP.l #$da02,lasttoken                                  ;peek
0002ED3E <AmiBlitz3.ab3@18711>    BNE 'l2
0002ED46 <AmiBlitz3.ab3@18714>    CMP.w #1,parnum                                         ; is not call when & is used in parameter
0002ED4A <AmiBlitz3.ab3@18715>    BNE varcont
0002ED50 <AmiBlitz3.ab3@18716>    MOVE.b d2,peekaddrsize
0002ED54 <AmiBlitz3.ab3@18717>    BRA varcont
0002ED5A <AmiBlitz3.ab3@18720>   CLR.b peekaddrsize
0002ED5E <AmiBlitz3.ab3@18724>   CMP.w #$1,D2
0002ED62 <AmiBlitz3.ab3@18725>    BNE.w 'notabyte
0002ED68 <AmiBlitz3.ab3@18729>   MOVE.w regnum,D1
0002ED6C <AmiBlitz3.ab3@18730>   ORI.w #$4880,D1      ;ext.w Dn
0002ED70 <AmiBlitz3.ab3@18731>    BSR.w writeword
0002ED72 <AmiBlitz3.ab3@18734>   MOVE.w (A7)+,D3      ;old type
0002ED76 <AmiBlitz3.ab3@18735>    BEQ.w 'done         ;type not set yet...
0002ED7C <AmiBlitz3.ab3@18738>    MOVE.l lastinstructionaddr,a0
0002ED80 <AmiBlitz3.ab3@18740>   CMP.w #$3,D3
0002ED84 <AmiBlitz3.ab3@18741>    BNE.w 'nob
0002ED88 <AmiBlitz3.ab3@18742>   CMP.w #$4,D2
0002ED8C <AmiBlitz3.ab3@18743>    BEQ.w 'conv2
0002ED8E <AmiBlitz3.ab3@18746>   CMP.w D2,D3
0002ED92 <AmiBlitz3.ab3@18747>    BLS.w 'done
0002ED94 <AmiBlitz3.ab3@18750>   EXG.l D2,D3
0002ED96 <AmiBlitz3.ab3@18752>   MOVE.l a0,-(a7)
0002ED9C <AmiBlitz3.ab3@18753>   TST.b typecheck
0002EDA0 <AmiBlitz3.ab3@18754>   BEQ 'ok
0002EDA6 <AmiBlitz3.ab3@18755>   TST.b notypecheck
0002EDAA <AmiBlitz3.ab3@18756>   BNE 'ok
0002EDB0 <AmiBlitz3.ab3@18757>   MOVE.l leftsidetype,a0
0002EDBA <AmiBlitz3.ab3@18758>   CMP.l #0,leftsidetype
0002EDBE <AmiBlitz3.ab3@18759>   BEQ 'ok
0002EDC6 <AmiBlitz3.ab3@18760>   CMP.w #1,leftsideflagmask
0002EDCA <AmiBlitz3.ab3@18761>   BEQ 'isptr
0002EDD2 <AmiBlitz3.ab3@18762>   CMP.l #$100,4(a0)
0002EDD6 <AmiBlitz3.ab3@18763>   BLE 'ok
0002EDDA <AmiBlitz3.ab3@18766>   CMP.b #3,d3
0002EDDE <AmiBlitz3.ab3@18767>   BEQ 'ok
0002EDE2 <AmiBlitz3.ab3@18768>   CMP.b #7,d3
0002EDE6 <AmiBlitz3.ab3@18769>   BEQ 'ok
0002EDEC <AmiBlitz3.ab3@18770>   JMP   error_convert_types      ;for all syntax only long and string allowed to assign to a type
0002EDEE <AmiBlitz3.ab3@18773>   MOVE.l (a7)+,a0
0002EDF2 <AmiBlitz3.ab3@18775>   BSR.w writeconvertcode         ;called from var assign      ;bump up new type to old...
0002EDF6 <AmiBlitz3.ab3@18778> BRA.w reget
0002EDF8 <AmiBlitz3.ab3@18782>   MOVEQ.l #$00,D3
0002EDFE <AmiBlitz3.ab3@18783>   MOVE.w regnum,D1
0002EE02 <AmiBlitz3.ab3@18784>    BEQ.w savem_skip
0002EE04 <AmiBlitz3.ab3@18785>   SUBQ.w #1,D1
0002EE06 <AmiBlitz3.ab3@18788>      LSR.l #1,D3
0002EE0A <AmiBlitz3.ab3@18789>      BSET #$F,D3
0002EE0E <AmiBlitz3.ab3@18790>   DBF D1,'loop
0002EE14 <AmiBlitz3.ab3@18792>    TST.b fpu
0002EE18 <AmiBlitz3.ab3@18793>    BEQ 'l1
0002EE1E <AmiBlitz3.ab3@18794>    ADDQ.l #2,stacktrack                                    ;intern command
0002EE20 <AmiBlitz3.ab3@18795>     MOVE.l a0,-(a7)
0002EE26 <AmiBlitz3.ab3@18796>     MOVE.l stacktrack,d1
0002EE2C <AmiBlitz3.ab3@18797>     LEA fpustackbase,a0
0002EE30 <AmiBlitz3.ab3@18798>     CLR.w 0(a0,d1)
0002EE36 <AmiBlitz3.ab3@18799>     CLR.w regmask
0002EE38 <AmiBlitz3.ab3@18800>     MOVE.l (a7)+,a0
0002EE3C <AmiBlitz3.ab3@18804>   MOVE.w #$48E7,D1
0002EE40 <AmiBlitz3.ab3@18805>    BSR.w writeword                                         ;write movem.l d0/d1,-(a7)
0002EE42 <AmiBlitz3.ab3@18806>   MOVE.w D3,D1
0002EE46 <AmiBlitz3.ab3@18807> BRA.w writeword
0002EE48 <AmiBlitz3.ab3@18812>   MOVEQ.l #$00,D3
0002EE4E <AmiBlitz3.ab3@18813>   MOVE.w regnum,D1
0002EE52 <AmiBlitz3.ab3@18814>    BEQ.w savem_skip
0002EE54 <AmiBlitz3.ab3@18815>   SUBQ.w #1,D1
0002EE56 <AmiBlitz3.ab3@18818>     LSR.l #1,D3
0002EE5A <AmiBlitz3.ab3@18819>     BSET #$F,D3
0002EE5E <AmiBlitz3.ab3@18820>   DBF D1,'loop
0002EE64 <AmiBlitz3.ab3@18822>    TST.b fpu
0002EE68 <AmiBlitz3.ab3@18823>    BEQ 'l1
0002EE6E <AmiBlitz3.ab3@18824>    ADDQ.l #2,stacktrack                                    ;intern command
0002EE70 <AmiBlitz3.ab3@18825>     MOVE.l a0,-(a7)
0002EE76 <AmiBlitz3.ab3@18826>     MOVE.l stacktrack,d1
0002EE7C <AmiBlitz3.ab3@18827>     LEA fpustackbase,a0
0002EE80 <AmiBlitz3.ab3@18828>     CLR.w 0(a0,d1)
0002EE84 <AmiBlitz3.ab3@18829>    CMP.b #5,(a3)                                           ;result float ?
0002EE88 <AmiBlitz3.ab3@18830>     BNE 'nofpu
0002EE92 <AmiBlitz3.ab3@18832>     MOVE.w regnum,regnumfunc
0002EE98 <AmiBlitz3.ab3@18835>   CLR.w regmask
0002EE9A <AmiBlitz3.ab3@18836>     MOVE.l (a7)+,a0
0002EE9E <AmiBlitz3.ab3@18840>   MOVE.w #$48E7,D1
0002EEA2 <AmiBlitz3.ab3@18841>    BSR.w writeword                                         ;write movem.l d0/d1,-(a7)
0002EEA4 <AmiBlitz3.ab3@18842>   MOVE.w D3,D1
0002EEA8 <AmiBlitz3.ab3@18843>  BRA.w writeword
0002EEAA <AmiBlitz3.ab3@18846> RTS
0002EEAC <AmiBlitz3.ab3@18850>   MOVE.l D1,-(A7)
0002EEB0 <AmiBlitz3.ab3@18851>   MOVE.w #$4EB9,D1
0002EEB4 <AmiBlitz3.ab3@18852>    BSR.w writeword
0002EEB8 <AmiBlitz3.ab3@18853>    BSR.w addoff
0002EEBA <AmiBlitz3.ab3@18854>   MOVE.l (A7)+,D1
0002EEBE <AmiBlitz3.ab3@18855> BRA.w writelong
0002EEC2 <AmiBlitz3.ab3@18862>    BSR.w findproc                                          ;write function call
0002EEC6 <AmiBlitz3.ab3@18864>    BEQ 'l1a
0002EECC <AmiBlitz3.ab3@18865>    TST.l unusedfunc
0002EED0 <AmiBlitz3.ab3@18867>    BEQ noprocerr
0002EED6 <AmiBlitz3.ab3@18870>    JSR gotoendsource
0002EEDE <AmiBlitz3.ab3@18873>   MOVE.l funcstruct_returntype(a2),rightsidetype
0002EEE4 <AmiBlitz3.ab3@18874>   TST.l typetocast
0002EEE8 <AmiBlitz3.ab3@18875>   BEQ 'nocast
0002EEF2 <AmiBlitz3.ab3@18876>   MOVE.l typetocast,rightsidetype
0002EEF8 <AmiBlitz3.ab3@18877>   CLR.l typetocast
0002EEFA <AmiBlitz3.ab3@18878>   MOVE.l a1,-(a7)
0002EF00 <AmiBlitz3.ab3@18879>   MOVE.l rightsidetype,a1
0002EF06 <AmiBlitz3.ab3@18880>   CMP.l leftsidetype,a1
0002EF0A <AmiBlitz3.ab3@18881>   BEQ 'ok
0002EF10 <AmiBlitz3.ab3@18882>   JMP errorconvertreturntype2
0002EF12 <AmiBlitz3.ab3@18885>   MOVE.l (a7)+,a1
0002EF14 <AmiBlitz3.ab3@18889>   MOVEQ.l #$00,D1
0002EF18 <AmiBlitz3.ab3@18890>   MOVE.b $5(A2),D1
0002EF1E <AmiBlitz3.ab3@18892>   MOVE.b d1,retmode
0002EF22 <AmiBlitz3.ab3@18894>    BMI.w illprocerr
0002EF28 <AmiBlitz3.ab3@18896>    MOVE.b #1,isfunc(a2)
0002EF2A <AmiBlitz3.ab3@18898>   MOVE.w D1,-(A7)
0002EF2C <AmiBlitz3.ab3@18899>   MOVEQ.l #$00,D1
0002EF30 <AmiBlitz3.ab3@18900>   MOVE.b $4(A2),D1
0002EF32 <AmiBlitz3.ab3@18901>   LSR.w #4,D1
0002EF36 <AmiBlitz3.ab3@18902>    BEQ.w 'skip
0002EF38 <AmiBlitz3.ab3@18903>   LSL.w #2,D1
0002EF3E <AmiBlitz3.ab3@18904>   SUB.w D1,a2offset
0002EF42 <AmiBlitz3.ab3@18907>   CMPI.w #$7,(A7)       ;function type!
0002EF46 <AmiBlitz3.ab3@18908>    BNE.b 'sss
0002EF48 <AmiBlitz3.ab3@18909>   MOVE.l A2,-(A7)
0002EF4C <AmiBlitz3.ab3@18910>    BSR.w makesbase
0002EF4E <AmiBlitz3.ab3@18911>   MOVEA.l (A7)+,A2
0002EF54 <AmiBlitz3.ab3@18914>   MOVE.w sbasegot,-(A7)
0002EF58 <AmiBlitz3.ab3@18915>    BEQ.b 'sssz
0002EF5C <AmiBlitz3.ab3@18916>    BSR.w dopusha3
0002EF60 <AmiBlitz3.ab3@18919>   BSR.w savemfunc
0002EF62 <AmiBlitz3.ab3@18920>   MOVE.w D3,-(A7)             ;the movem regs
0002EF66 <AmiBlitz3.ab3@18922>   MOVE.l $E(A2),D1            ;pc of function call
0002EF6A <AmiBlitz3.ab3@18924>   TST.b $20(a2)                                            ;increase if morepar
0002EF6E <AmiBlitz3.ab3@18925>   BNE 'no0par
0002EF70 <AmiBlitz3.ab3@18926>   MOVE.l a5,a4
0002EF74 <AmiBlitz3.ab3@18929>   CMP.b #$20,(a4)+
0002EF78 <AmiBlitz3.ab3@18930>   BEQ 'l1
0002EF7E <AmiBlitz3.ab3@18931>   CMP.b #"}",-1(a4)
0002EF82 <AmiBlitz3.ab3@18932>   BNE  'no0par
0002EF84 <AmiBlitz3.ab3@18933>   MOVEQ #0,d0
0002EF88 <AmiBlitz3.ab3@18936>   LEA $16(A2),A1
0002EF8A <AmiBlitz3.ab3@18939>   MOVE.l d1,-(a7)
0002EF8C <AmiBlitz3.ab3@18940>   MOVE.b (a1),d2
0002EF8E <AmiBlitz3.ab3@18941>   MOVE.l d0,d1
0002EF92 <AmiBlitz3.ab3@18942>   CMP.w #4,d2
0002EF96 <AmiBlitz3.ab3@18943>   BNE 'l1b
0002EF9C <AmiBlitz3.ab3@18944>   ADD.l #$203c,d1
0002EFA0 <AmiBlitz3.ab3@18945>   BSR writeword
0002EFA6 <AmiBlitz3.ab3@18946>   MOVE.l #$ffff0000,d1
0002EFAA <AmiBlitz3.ab3@18947>   BSR writelong
0002EFAE <AmiBlitz3.ab3@18948>  BRA 'l2b
0002EFB4 <AmiBlitz3.ab3@18951>    TST.b fpu
0002EFB8 <AmiBlitz3.ab3@18952>    BNE 'l1c
0002EFBC <AmiBlitz3.ab3@18953>    CMP.w #5,d2
0002EFC0 <AmiBlitz3.ab3@18954>    BNE 'l1c
0002EFC6 <AmiBlitz3.ab3@18955>    ADD.l #$203c,d1
0002EFCA <AmiBlitz3.ab3@18956>    BSR writeword
0002EFD0 <AmiBlitz3.ab3@18957>    MOVE.l #$800000c1,d1
0002EFD4 <AmiBlitz3.ab3@18958>    BSR writelong
0002EFD8 <AmiBlitz3.ab3@18959>  BRA 'l2b
0002EFDE <AmiBlitz3.ab3@18962>   ADD.l #$70ff,d1
0002EFE2 <AmiBlitz3.ab3@18963>   BSR writeword
0002EFE6 <AmiBlitz3.ab3@18964>   CMP.w #7,d2
0002EFEA <AmiBlitz3.ab3@18965>   BNE 'l1d
0002EFF0 <AmiBlitz3.ab3@18966>   MOVE.l #$2f3c0000,d1      ; write code move.l #0,-(a7)
0002EFF4 <AmiBlitz3.ab3@18967>   BSR writelong
0002EFF6 <AmiBlitz3.ab3@18968>   MOVEQ #0,d1
0002EFFA <AmiBlitz3.ab3@18969>   BSR writeword
0002F000 <AmiBlitz3.ab3@18970>   MOVE.l #$2f3c0000,d1      ; write code move.l #0,-(a7)
0002F004 <AmiBlitz3.ab3@18971>   BSR writelong
0002F006 <AmiBlitz3.ab3@18972>   MOVEQ #0,d1
0002F00A <AmiBlitz3.ab3@18973>   BSR writeword
0002F010 <AmiBlitz3.ab3@18976>   MOVE.l #$f23c5000,d1
0002F012 <AmiBlitz3.ab3@18977>   MOVE.l d0,d2
0002F014 <AmiBlitz3.ab3@18978>   ASR.l #2,d2
0002F016 <AmiBlitz3.ab3@18979>   ADD.l d2,d1
0002F01A <AmiBlitz3.ab3@18980>   BSR writelong
0002F01E <AmiBlitz3.ab3@18981>   MOVE.w #$ffff,d1
0002F022 <AmiBlitz3.ab3@18982>   BSR writeword
0002F024 <AmiBlitz3.ab3@18986>   MOVE.l (a7)+,d1
0002F026 <AmiBlitz3.ab3@18987>      ADDQ.l #1,a1
0002F02C <AmiBlitz3.ab3@18988>      ADD.l #$0200,d0
0002F032 <AmiBlitz3.ab3@18989>      CMP.l #$0e00,d0
0002F036 <AmiBlitz3.ab3@18990>      BEQ syntaxerr
0002F038 <AmiBlitz3.ab3@18991>      TST.b (a1)
0002F03C <AmiBlitz3.ab3@18992>      BNE 'again
0002F040 <AmiBlitz3.ab3@18993>  BRA 'p1
0002F044 <AmiBlitz3.ab3@18997>   TST.b $4(A2)
0002F048 <AmiBlitz3.ab3@18998>    BNE.w 'somepars
0002F04C <AmiBlitz3.ab3@19003>   BSR.w makefjsr
0002F050 <AmiBlitz3.ab3@19004>    BSR.w get1bytemain
0002F054 <AmiBlitz3.ab3@19005>  BRA.w 'nopars
0002F05A <AmiBlitz3.ab3@19010>   MOVE.w parnum,-(a7)                                      ;7.2014 need store so function calls in parameter >6 can work
0002F060 <AmiBlitz3.ab3@19012>   MOVE.w regnum,-(A7)         ;old regat
0002F06A <AmiBlitz3.ab3@19014>   MOVE.w regnum,regnumfunc
0002F06C <AmiBlitz3.ab3@19018>   MOVE.l D1,-(A7)                                          ;write functioncall with pars
0002F074 <AmiBlitz3.ab3@19020>   MOVE.b #1,funccall
0002F076 <AmiBlitz3.ab3@19022>   MOVEQ.l #$00,D0
0002F07A <AmiBlitz3.ab3@19023>   MOVE.b $4(A2),D0
0002F084 <AmiBlitz3.ab3@19025>   MOVE.w a2offset,a2offset2
0002F08C <AmiBlitz3.ab3@19026>   MOVE.b 5(a2),retmode
0002F092 <AmiBlitz3.ab3@19027>   MOVE.l a2,currentfunccall
0002F096 <AmiBlitz3.ab3@19029>   LEA $16(A2),A2              ;pointer to var desc
0002F09C <AmiBlitz3.ab3@19030>   CLR.w regnum
0002F0A2 <AmiBlitz3.ab3@19032>   CLR.w regmask
0002F0A8 <AmiBlitz3.ab3@19033>   MOVE.b isconstantvalue,-(a7)
0002F0AE <AmiBlitz3.ab3@19034>   MOVE.b funcparloop,-(a7)
0002F0B6 <AmiBlitz3.ab3@19035>   MOVE.b #1,funcparloop
0002F0BC <AmiBlitz3.ab3@19036>   MOVE.l rightsidetype,-(a7)
0002F0C2 <AmiBlitz3.ab3@19037>   MOVE.l leftsidetype,-(a7)                               ;store values To stack so it can work recursive
0002F0C8 <AmiBlitz3.ab3@19038>   MOVE.b blitzparloop,-(a7)
0002F0CE <AmiBlitz3.ab3@19039>   CLR.b blitzparloop
0002F0D4 <AmiBlitz3.ab3@19041>   JSR fetchpees2
0002F0DA <AmiBlitz3.ab3@19044>   MOVE.b (a7)+,blitzparloop
0002F0E0 <AmiBlitz3.ab3@19045>   MOVE.l (a7)+,leftsidetype
0002F0E6 <AmiBlitz3.ab3@19046>   MOVE.l (a7)+,rightsidetype
0002F0EC <AmiBlitz3.ab3@19047>   MOVE.b (a7)+,funcparloop
0002F0F2 <AmiBlitz3.ab3@19048>   MOVE.b (a7)+,isconstantvalue
0002F0F8 <AmiBlitz3.ab3@19050>   JSR chkstak
0002F0FA <AmiBlitz3.ab3@19051>   MOVE.l (A7)+,D1
0002F0FE <AmiBlitz3.ab3@19068>    BTST #0,d1
0002F102 <AmiBlitz3.ab3@19069>    BNE intern1
0002F106 <AmiBlitz3.ab3@19071>    BSR.w makefjsr
0002F10C <AmiBlitz3.ab3@19095>   MOVE.w (A7)+,regnum
0002F112 <AmiBlitz3.ab3@19097>   MOVE.w (a7)+,parnum                                     ;07.2014
0002F116 <AmiBlitz3.ab3@19101>   CMP.w #"}",D0
0002F11A <AmiBlitz3.ab3@19102>    BNE.w errorbracketmiss2
0002F11C <AmiBlitz3.ab3@19105>    MOVEQ #0,d1                                            ; end of function call pars
0002F122 <AmiBlitz3.ab3@19107>   MOVE.w regnum,D1
0002F126 <AmiBlitz3.ab3@19108>    BEQ.w 'nopars3
0002F12C <AmiBlitz3.ab3@19110>    TST.b fpu
0002F130 <AmiBlitz3.ab3@19111>    BEQ 'old
0002F138 <AmiBlitz3.ab3@19112>    CMP.b #5,retmode
0002F13C <AmiBlitz3.ab3@19113>    BNE 'old
0002F13E <AmiBlitz3.ab3@19114>    ASL.l #7,d1
0002F144 <AmiBlitz3.ab3@19115>    OR.l #$f2000000,d1
0002F148 <AmiBlitz3.ab3@19116>    BSR writelong
0002F14C <AmiBlitz3.ab3@19117>  BRA 'nopars3
0002F14E <AmiBlitz3.ab3@19121>   LSL.w #8,D1
0002F150 <AmiBlitz3.ab3@19122>   LSL.w #1,D1
0002F154 <AmiBlitz3.ab3@19123>   ORI.w #$2000,D1
0002F158 <AmiBlitz3.ab3@19124>    BSR.w writeword         ;move.l d0,regat
0002F15A <AmiBlitz3.ab3@19127>    MOVE.w (A7)+,D3
0002F15E <AmiBlitz3.ab3@19128>    BEQ.w 'nomovem
0002F164 <AmiBlitz3.ab3@19130>    TST.b fpu
0002F168 <AmiBlitz3.ab3@19131>    BEQ 'old2
0002F16A <AmiBlitz3.ab3@19132>    MOVE.l d0,-(a7)
0002F16E <AmiBlitz3.ab3@19133>    MOVE.w #8,d0
0002F170 <AmiBlitz3.ab3@19134>    MOVE.l a0,-(a7)
0002F176 <AmiBlitz3.ab3@19135>    MOVE.l stacktrack,d1
0002F17C <AmiBlitz3.ab3@19136>    LEA fpustackbase,a0
0002F184 <AmiBlitz3.ab3@19137>    MOVE.w 0(a0,d1),regmask
0002F186 <AmiBlitz3.ab3@19138>    MOVE.l (a7)+,a0
0002F18A <AmiBlitz3.ab3@19141>   BEQ 'ready
0002F190 <AmiBlitz3.ab3@19142>    BTST d0,regmask
0002F194 <AmiBlitz3.ab3@19143>    BEQ 'noa7
0002F196 <AmiBlitz3.ab3@19144>    MOVEQ #0,d1
0002F198 <AmiBlitz3.ab3@19145>    MOVE.w d0,d1
0002F19A <AmiBlitz3.ab3@19146>    SUBQ.w #1,d1
0002F19C <AmiBlitz3.ab3@19147>    ASL #7,d1
0002F1A2 <AmiBlitz3.ab3@19149>    OR.l #$f21f5400,d1                                      ;fmove.d (a7)+
0002F1A6 <AmiBlitz3.ab3@19150>    BSR writelong
0002F1AC <AmiBlitz3.ab3@19151>    SUBQ.l #2,stacktrack
0002F1AE <AmiBlitz3.ab3@19154>    SUBQ.w #1,d0
0002F1B2 <AmiBlitz3.ab3@19155>    BNE 'loop
0002F1B8 <AmiBlitz3.ab3@19158>   SUBQ.l #2,stacktrack                                     ;integer sub
0002F1BA <AmiBlitz3.ab3@19159>   MOVE.l (a7)+,d0
0002F1BE <AmiBlitz3.ab3@19163>   MOVE.w #$4CDF,D1
0002F1C2 <AmiBlitz3.ab3@19164>    BSR.w writeword
0002F1C4 <AmiBlitz3.ab3@19165>   MOVEQ.l #$00,D1
0002F1C6 <AmiBlitz3.ab3@19166>   MOVEQ.l #$0F,D4
0002F1C8 <AmiBlitz3.ab3@19169>     LSL.w #1,D3
0002F1CA <AmiBlitz3.ab3@19170>     ROXR.w #1,D1
0002F1CE <AmiBlitz3.ab3@19171>   DBF D4,'loopsw                                         ;movem.l (a7)+,dx
0002F1D2 <AmiBlitz3.ab3@19173>     BSR.w writeword        ;poke movem (a7)+...
0002F1D8 <AmiBlitz3.ab3@19175>    CLR.w regnumfunc
0002F1DA <AmiBlitz3.ab3@19179>   MOVE.w (A7)+,D1
0002F1DE <AmiBlitz3.ab3@19180>    BEQ.b 'nores
0002F1E2 <AmiBlitz3.ab3@19181>   CMPI.w #$7,(A7)
0002F1E6 <AmiBlitz3.ab3@19182>    BEQ.b 'issb
0002F1EC <AmiBlitz3.ab3@19184>   LEA geta3,A0
0002F1F2 <AmiBlitz3.ab3@19185>   LEA geta3f,A1
0002F1F6 <AmiBlitz3.ab3@19186>    BSR.w pokecode
0002F1FA <AmiBlitz3.ab3@19187>  BRA.b 'nosb
0002F200 <AmiBlitz3.ab3@19191>   MOVE.w deca3,D1
0002F204 <AmiBlitz3.ab3@19192>    BSR.w writeword
0002F208 <AmiBlitz3.ab3@19195>   BSR.w dopulla3          ;fix up string base
0002F20A <AmiBlitz3.ab3@19198>   MOVE.w (A7)+,D2         ;what it returns!
0002F20E <AmiBlitz3.ab3@19199>   CMP.w #$7,D2
0002F212 <AmiBlitz3.ab3@19200>    BNE.w 'notst
0002F218 <AmiBlitz3.ab3@19201>   MOVE.w putstlen,D1
0002F21E <AmiBlitz3.ab3@19202>   OR.w regnum,D1
0002F222 <AmiBlitz3.ab3@19203>    BSR.w writeword
0002F226 <AmiBlitz3.ab3@19206>   BSR.w get1bytemain
0002F22A <AmiBlitz3.ab3@19207> BRA.w varcont
0002F22C <AmiBlitz3.ab3@19211> deca3:   Dc.b $53,$4B                                      ;SUBQ.W  #1,A3
0002F234 <AmiBlitz3.ab3@19219>   CMP.b #2,optistring
0002F238 <AmiBlitz3.ab3@19220>   BEQ 'fs2
0002F23C <AmiBlitz3.ab3@19222>   BSR.w makesbase                                          ;writestringvariable
0002F240 <AmiBlitz3.ab3@19223>   BTST #$F,D2
0002F244 <AmiBlitz3.ab3@19224>    BNE.w 'already
0002F24A <AmiBlitz3.ab3@19225>   MOVE.w D3,leaa5d3a2+2
0002F250 <AmiBlitz3.ab3@19226>   MOVE.l leaa5d3a2,D1
0002F254 <AmiBlitz3.ab3@19227>    BSR.w pokela5s
0002F25A <AmiBlitz3.ab3@19230>   MOVE.w regnum,D1
0002F25C <AmiBlitz3.ab3@19231>   LSL.w #8,D1
0002F25E <AmiBlitz3.ab3@19232>   LSL.w #1,D1
0002F262 <AmiBlitz3.ab3@19233>   ORI.w #$7000,D1
0002F268 <AmiBlitz3.ab3@19234>   LEA stvarget2,A0
0002F26A <AmiBlitz3.ab3@19235>   MOVE.w D1,(A0)
0002F270 <AmiBlitz3.ab3@19236>   MOVE.w regnum,D1
0002F276 <AmiBlitz3.ab3@19237>   ANDI.w #$FFF8,$2(A0)
0002F27A <AmiBlitz3.ab3@19238>   OR.w D1,$2(A0)
0002F280 <AmiBlitz3.ab3@19239>   LEA stvarget2f,A1
0002F284 <AmiBlitz3.ab3@19240>    BSR.w pokecode
0002F288 <AmiBlitz3.ab3@19241>   MOVE.w #$C600,D1     ; was #copstring,
0002F28C <AmiBlitz3.ab3@19242>    BSR.w Atokejsr
0002F28E <AmiBlitz3.ab3@19243>   MOVEQ.l #$07,D2
0002F292 <AmiBlitz3.ab3@19244>  BRA.w reget
0002F298 <AmiBlitz3.ab3@19248>      TST.w stackpar
0002F29C <AmiBlitz3.ab3@19249>      BMI 'l10
0002F2A2 <AmiBlitz3.ab3@19250>      MOVE.l #$3f3c0007,d1
0002F2A8 <AmiBlitz3.ab3@19251>      ADDQ.w #2,a2offset
0002F2AC <AmiBlitz3.ab3@19252>      BSR writelong
0002F2B0 <AmiBlitz3.ab3@19255>   MOVE.w #$4878,d1
0002F2B6 <AmiBlitz3.ab3@19256>      CLR.w stackpar
0002F2BA <AmiBlitz3.ab3@19257>      BSR writeword
0002F2BE <AmiBlitz3.ab3@19258>      MOVE.w #$0,d1
0002F2C2 <AmiBlitz3.ab3@19259>      BSR writeword
0002F2C6 <AmiBlitz3.ab3@19260>      MOVE.w #$246d,d1
0002F2CA <AmiBlitz3.ab3@19261>      BSR writeword
0002F2CC <AmiBlitz3.ab3@19262>      MOVE.w d3,d1
0002F2D0 <AmiBlitz3.ab3@19263>      BSR writeword
0002F2D6 <AmiBlitz3.ab3@19264>      MOVE.l #$4a926704,d1
0002F2DA <AmiBlitz3.ab3@19265>      BSR writelong
0002F2E0 <AmiBlitz3.ab3@19266>      MOVE.l #$2eaafffc,d1
0002F2E4 <AmiBlitz3.ab3@19267>      BSR writelong
0002F2E8 <AmiBlitz3.ab3@19268>      MOVE.w #$2f0a,d1
0002F2EE <AmiBlitz3.ab3@19269>      ADDQ.w #8,a2offset
0002F2F2 <AmiBlitz3.ab3@19270>      BSR writeword
0002F2F6 <AmiBlitz3.ab3@19271> BRA.w reget
0002F2FA <AmiBlitz3.ab3@19276>   CMP.b #$7,D2                                             ;load basic var
0002F2FE <AmiBlitz3.ab3@19277>    BEQ.w stvar
0002F304 <AmiBlitz3.ab3@19279>    TST.b iee
0002F308 <AmiBlitz3.ab3@19280>    BEQ 'noiee
0002F30C <AmiBlitz3.ab3@19281>    CMP.b #5,d2
0002F310 <AmiBlitz3.ab3@19282>    BNE 'noiee
0002F312 <AmiBlitz3.ab3@19283>    MOVE.l d0,-(a7)                                         ;fpu load var
0002F316 <AmiBlitz3.ab3@19284>    BTST #15,d2
0002F31A <AmiBlitz3.ab3@19285>    BEQ 'var
0002F320 <AmiBlitz3.ab3@19286>    CMP.l #$7fff,d3
0002F324 <AmiBlitz3.ab3@19287>    BGT 'longoffset
0002F32A <AmiBlitz3.ab3@19288>    MOVE.l #$f22a4400,d1                                    ;newtype     >32kb
0002F32C <AmiBlitz3.ab3@19289>    TST.w d3                                                ;offset =0
0002F330 <AmiBlitz3.ab3@19290>    BNE 'offset
0002F336 <AmiBlitz3.ab3@19293>   MOVE.l #$f2124400,d1
0002F338 <AmiBlitz3.ab3@19294>    MOVEQ #0,d3
0002F33C <AmiBlitz3.ab3@19295>  BRA 'glob
0002F342 <AmiBlitz3.ab3@19298>   SUBQ.l #4,destpointer
0002F346 <AmiBlitz3.ab3@19299>  BRA 'glob
0002F34C <AmiBlitz3.ab3@19302>   TST.b fast
0002F350 <AmiBlitz3.ab3@19303>    BEQ 'nofastload
0002F356 <AmiBlitz3.ab3@19304>    TST.w regnum
0002F35A <AmiBlitz3.ab3@19305>    BNE 'nofastload
0002F360 <AmiBlitz3.ab3@19306>    CMP.l fp0addr,a4
0002F364 <AmiBlitz3.ab3@19307>    BNE 'nofastload
0002F36A <AmiBlitz3.ab3@19308>    MOVE.l fp0iff,d1
0002F370 <AmiBlitz3.ab3@19309>    CMP.l firstiff,d1
0002F374 <AmiBlitz3.ab3@19310>    BNE 'nofastload
0002F37A <AmiBlitz3.ab3@19311>    MOVE.w varmode,d1
0002F380 <AmiBlitz3.ab3@19312>    CMP.w fp0mode,d1
0002F384 <AmiBlitz3.ab3@19313>    BNE 'nofastload
0002F38A <AmiBlitz3.ab3@19314>    CMP.w fp0var,d3
0002F38E <AmiBlitz3.ab3@19315>    BNE 'nofastload
0002F392 <AmiBlitz3.ab3@19316>    BCLR #16,d2
0002F394 <AmiBlitz3.ab3@19317>    MOVE.l (a7)+,d0
0002F396 <AmiBlitz3.ab3@19318>  RTS
0002F398 <AmiBlitz3.ab3@19321>    MOVEQ #0,d0
0002F39E <AmiBlitz3.ab3@19322>    MOVE.w regnum,d0
0002F3A4 <AmiBlitz3.ab3@19323>    CMP.l maxregs,d0
0002F3A8 <AmiBlitz3.ab3@19324>    BLE 'ok
0002F3AE <AmiBlitz3.ab3@19325>    LEA cmplxerr,a0
0002F3B0 <AmiBlitz3.ab3@19326>   MOVE.l a0,-(a7)
0002F3B6 <AmiBlitz3.ab3@19327>  JMP handle_compileerror
0002F3BC <AmiBlitz3.ab3@19330>    LEA regtable,a4
0002F3BE <AmiBlitz3.ab3@19331>    TST.l (a4)
0002F3C2 <AmiBlitz3.ab3@19332>    BEQ 'noreg
0002F3C6 <AmiBlitz3.ab3@19333>    CMP.w 0+4(a4),d3
0002F3CA <AmiBlitz3.ab3@19334>    BNE 'doreg1
0002F3D0 <AmiBlitz3.ab3@19335>    MOVE.l #$f2001c00,d1
0002F3D6 <AmiBlitz3.ab3@19336>    MOVE.w regnum,d0
0002F3D8 <AmiBlitz3.ab3@19337>    ASL.w #7,d0
0002F3DA <AmiBlitz3.ab3@19338>    OR.w d0,d1
0002F3DE <AmiBlitz3.ab3@19339>    BSR writelong
0002F3E0 <AmiBlitz3.ab3@19340>    MOVE.l (a7)+,d0
0002F3E2 <AmiBlitz3.ab3@19341>  RTS
0002F3E6 <AmiBlitz3.ab3@19344>   CMP.w 8+4(a4),d3
0002F3EA <AmiBlitz3.ab3@19345>    BNE 'doreg2
0002F3F0 <AmiBlitz3.ab3@19346>    MOVE.l #$f2001800,d1
0002F3F6 <AmiBlitz3.ab3@19347>    MOVE.w regnum,d0
0002F3F8 <AmiBlitz3.ab3@19348>    ASL.w #7,d0
0002F3FA <AmiBlitz3.ab3@19349>    OR.w d0,d1
0002F3FE <AmiBlitz3.ab3@19350>    BSR writelong
0002F400 <AmiBlitz3.ab3@19351>    MOVE.l (a7)+,d0
0002F402 <AmiBlitz3.ab3@19352>  RTS
0002F406 <AmiBlitz3.ab3@19355>   CMP.w 16+4(a4),d3
0002F40A <AmiBlitz3.ab3@19356>    BNE 'doreg3
0002F410 <AmiBlitz3.ab3@19357>    MOVE.l #$f2001400,d1
0002F416 <AmiBlitz3.ab3@19358>    MOVE.w regnum,d0
0002F418 <AmiBlitz3.ab3@19359>    ASL.w #7,d0
0002F41A <AmiBlitz3.ab3@19360>    OR.w d0,d1
0002F41E <AmiBlitz3.ab3@19361>    BSR  writelong
0002F420 <AmiBlitz3.ab3@19362>    MOVE.l (a7)+,d0
0002F422 <AmiBlitz3.ab3@19363>  RTS
0002F426 <AmiBlitz3.ab3@19366>   CMP.w 24+4(a4),d3
0002F42A <AmiBlitz3.ab3@19367>    BNE 'doreg4
0002F430 <AmiBlitz3.ab3@19368>    MOVE.l #$f2001000,d1
0002F436 <AmiBlitz3.ab3@19369>    MOVE.w regnum,d0
0002F438 <AmiBlitz3.ab3@19370>    ASL.w #7,d0
0002F43A <AmiBlitz3.ab3@19371>    OR.w d0,d1
0002F43E <AmiBlitz3.ab3@19372>    BSR writelong
0002F440 <AmiBlitz3.ab3@19373>    MOVE.l (a7)+,d0
0002F442 <AmiBlitz3.ab3@19374>  RTS
0002F446 <AmiBlitz3.ab3@19377>    CMP.w 32+4(a4),d3
0002F44A <AmiBlitz3.ab3@19378>    BNE 'noreg
0002F450 <AmiBlitz3.ab3@19379>    MOVE.l #$f2000c00,d1
0002F456 <AmiBlitz3.ab3@19380>    MOVE.w regnum,d0
0002F458 <AmiBlitz3.ab3@19381>    ASL.w #7,d0
0002F45A <AmiBlitz3.ab3@19382>    OR.w d0,d1
0002F45E <AmiBlitz3.ab3@19383>    BSR writelong
0002F460 <AmiBlitz3.ab3@19384>    MOVE.l (a7)+,d0
0002F462 <AmiBlitz3.ab3@19385>  RTS
0002F468 <AmiBlitz3.ab3@19388>    MOVE.l #$f22d4400,d1                                    ;var
0002F46E <AmiBlitz3.ab3@19389>    TST.w varmode
0002F472 <AmiBlitz3.ab3@19390>   BEQ 'glob
0002F476 <AmiBlitz3.ab3@19391>   BCLR #16,d1                                              ;local
0002F478 <AmiBlitz3.ab3@19394>    MOVEQ #0,d0
0002F47E <AmiBlitz3.ab3@19395>    MOVE.w regnum,d0
0002F482 <AmiBlitz3.ab3@19396>    CMP.w #7,d0
0002F486 <AmiBlitz3.ab3@19397>    BLE 'ok2
0002F48C <AmiBlitz3.ab3@19398>    LEA cmplxerr,a0
0002F48E <AmiBlitz3.ab3@19399>   MOVE.l a0,-(a7)
0002F494 <AmiBlitz3.ab3@19400>  JMP handle_compileerror
0002F496 <AmiBlitz3.ab3@19403>      ASL.w #7,d0
0002F498 <AmiBlitz3.ab3@19404>    OR.l d0,d1
0002F4A0 <AmiBlitz3.ab3@19405>    CMP.l #doublecheck,8(a2)
0002F4A4 <AmiBlitz3.ab3@19406>    BNE 'dbl
0002F4AA <AmiBlitz3.ab3@19407>    OR.l #$00001000,d1
0002F4AE <AmiBlitz3.ab3@19410>   BSR writelong
0002F4B0 <AmiBlitz3.ab3@19411>    MOVE.l (a7)+,d0
0002F4B4 <AmiBlitz3.ab3@19412>    AND.w #$ff,d2
0002F4B6 <AmiBlitz3.ab3@19413>    MOVE.w d3,d1
0002F4BA <AmiBlitz3.ab3@19414>    BEQ 'nooffs
0002F4BE <AmiBlitz3.ab3@19415>  BRA writeword
0002F4C0 <AmiBlitz3.ab3@19420>  RTS
0002F4C6 <AmiBlitz3.ab3@19423>   MOVE.w regnum,D1
0002F4CC <AmiBlitz3.ab3@19425>   MOVE.w d1,load_var_reg
0002F4CE <AmiBlitz3.ab3@19427>   LSL.w #8,D1
0002F4D8 <AmiBlitz3.ab3@19429>   MOVE.l destpointer,load_var_addr
0002F4DE <AmiBlitz3.ab3@19430>   MOVE.w d2,load_var_size
0002F4E0 <AmiBlitz3.ab3@19432>   LSL.w #1,D1
0002F4E4 <AmiBlitz3.ab3@19433>   BTST #$E,D2
0002F4E8 <AmiBlitz3.ab3@19434>    BNE.w 'pointer
0002F4EA <AmiBlitz3.ab3@19435>   TST.b D2
0002F4EE <AmiBlitz3.ab3@19436>    BNE.w 'skip2
0002F4F0 <AmiBlitz3.ab3@19437>   MOVEQ.l #$03,D2
0002F4F4 <AmiBlitz3.ab3@19438>   ORI.w #$200A,D1
0002F4F8 <AmiBlitz3.ab3@19439>  BRA.w writeword
0002F4FC <AmiBlitz3.ab3@19442>   MOVE.b #$3,D2
0002F500 <AmiBlitz3.ab3@19445>   BTST #$F,D2
0002F504 <AmiBlitz3.ab3@19446>    BEQ.w 'simpvar                                         ;loadarray
0002F50A <AmiBlitz3.ab3@19448>    TST.b fast                                              ;lea->move xx(a2)
0002F50E <AmiBlitz3.ab3@19449>    BEQ 'la10
0002F514 <AmiBlitz3.ab3@19454>    CLR.l load_var_addr
0002F518 <AmiBlitz3.ab3@19455>  BRA 'la10
0002F520 <AmiBlitz3.ab3@19457>    CMP.w #$2012,movea2dn                                  ;??Looks like dead code??
0002F524 <AmiBlitz3.ab3@19458>    BNE 'la10
0002F52A <AmiBlitz3.ab3@19459>    TST.b optiarray
0002F52E <AmiBlitz3.ab3@19460>    BNE 'la10
0002F534 <AmiBlitz3.ab3@19461>    MOVE.l destpointer,a4
0002F53A <AmiBlitz3.ab3@19462>    SUB.l loada,a4
0002F53E <AmiBlitz3.ab3@19463>    CMP.w #4,a4
0002F542 <AmiBlitz3.ab3@19464>    BEQ 'la100
0002F546 <AmiBlitz3.ab3@19465>    CMP.w #2,a4
0002F54A <AmiBlitz3.ab3@19466>    BNE 'la10
0002F550 <AmiBlitz3.ab3@19467>    MOVE.l destpointer,a4
0002F554 <AmiBlitz3.ab3@19468>    CMP.b #3,d2
0002F558 <AmiBlitz3.ab3@19469>    BCS 'la110
0002F55E <AmiBlitz3.ab3@19470>    MOVE.w #$202a,-2(a4)
0002F562 <AmiBlitz3.ab3@19471>    OR.w d1,-2(a4)
0002F568 <AmiBlitz3.ab3@19472>    MOVE.w arrayoffset,d1
0002F56C <AmiBlitz3.ab3@19473>    BSR writeword
0002F570 <AmiBlitz3.ab3@19474>  BRA 'more
0002F574 <AmiBlitz3.ab3@19477>    CMP.b #2,d2
0002F578 <AmiBlitz3.ab3@19478>    BNE 'la120
0002F57E <AmiBlitz3.ab3@19479>     MOVE.w #$302a,-2(a4)
0002F582 <AmiBlitz3.ab3@19480>    OR.w d1,-2(a4)
0002F588 <AmiBlitz3.ab3@19482>    MOVE.w arrayoffset,d1
0002F58C <AmiBlitz3.ab3@19483>    BSR writeword
0002F590 <AmiBlitz3.ab3@19484>  BRA 'more
0002F594 <AmiBlitz3.ab3@19487>   CMP.b #1,d2
0002F598 <AmiBlitz3.ab3@19488>    BNE.s 'la10
0002F59E <AmiBlitz3.ab3@19489>     MOVE.w #$102a,-2(a4)
0002F5A2 <AmiBlitz3.ab3@19490>    OR.w d1,-2(a4)
0002F5A8 <AmiBlitz3.ab3@19491>    MOVE.w arrayoffset,d1
0002F5AC <AmiBlitz3.ab3@19492>    BSR writeword
0002F5B0 <AmiBlitz3.ab3@19493>  BRA 'more
0002F5B6 <AmiBlitz3.ab3@19496>   MOVE.l destpointer,a4
0002F5BC <AmiBlitz3.ab3@19497>    CMP.w #$45ea,-2(a4)
0002F5C0 <AmiBlitz3.ab3@19498>    BNE 'la10
0002F5C4 <AmiBlitz3.ab3@19499>    CMP.b #3,d2
0002F5C8 <AmiBlitz3.ab3@19500>    BCS 'la11
0002F5CE <AmiBlitz3.ab3@19501>    MOVE.w #$202a,-4(a4)
0002F5D2 <AmiBlitz3.ab3@19502>    OR.w d1,-4(a4)
0002F5D6 <AmiBlitz3.ab3@19503>  BRA 'more
0002F5DA <AmiBlitz3.ab3@19506>    CMP.b #2,d2
0002F5DE <AmiBlitz3.ab3@19507>    BNE 'la12
0002F5E4 <AmiBlitz3.ab3@19508>     MOVE.w #$302a,-4(a4)
0002F5E8 <AmiBlitz3.ab3@19509>    OR.w d1,-4(a4)
0002F5EC <AmiBlitz3.ab3@19510>  BRA 'more
0002F5F0 <AmiBlitz3.ab3@19513>   CMP.b #1,d2
0002F5F4 <AmiBlitz3.ab3@19514>    BNE.s 'la10
0002F5FA <AmiBlitz3.ab3@19515>     MOVE.w #$102a,-4(a4)
0002F5FE <AmiBlitz3.ab3@19516>    OR.w d1,-4(a4)
0002F602 <AmiBlitz3.ab3@19517>  BRA 'more
0002F608 <AmiBlitz3.ab3@19521>    OR.w movea2dn,D1
0002F60C <AmiBlitz3.ab3@19522>    BSR.w 'size
0002F610 <AmiBlitz3.ab3@19523>    BSR.w writeword
0002F614 <AmiBlitz3.ab3@19526>   ANDI.w #$FF,D2
0002F616 <AmiBlitz3.ab3@19527>  RTS
0002F61C <AmiBlitz3.ab3@19531>    MOVE.l destpointer,a4              ; "
0002F624 <AmiBlitz3.ab3@19532>    MOVE.l #$f22a4400,-4(a4)           ; "
0002F62A <AmiBlitz3.ab3@19533>    MOVE.w arrayoffset,d1              ; "
0002F62E <AmiBlitz3.ab3@19534>  BRA writeword
0002F634 <AmiBlitz3.ab3@19538>   OR.w moved3a5dn,D1                                        ;write move.l 0(a5),reg
0002F638 <AmiBlitz3.ab3@19539>    BSR.w 'size
0002F63C <AmiBlitz3.ab3@19540>    BSR.w pokewda5s
0002F63E <AmiBlitz3.ab3@19541>   MOVE.w D3,D1
0002F642 <AmiBlitz3.ab3@19542>    BSR.w writeword
0002F646 <AmiBlitz3.ab3@19543>  BRA.w 'more
0002F64A <AmiBlitz3.ab3@19548>   BTST #$E,D2
0002F64E <AmiBlitz3.ab3@19549>    BNE.w 'long
0002F652 <AmiBlitz3.ab3@19550>   CMP.b #$1,D2
0002F656 <AmiBlitz3.ab3@19551>    BEQ.w 'byte
0002F65A <AmiBlitz3.ab3@19552>   CMP.b #$2,D2
0002F65E <AmiBlitz3.ab3@19553>    BEQ.w 'word
0002F660 <AmiBlitz3.ab3@19556>  RTS
0002F664 <AmiBlitz3.ab3@19559>   EORI.w #$3000,D1
0002F666 <AmiBlitz3.ab3@19560>  RTS
0002F66A <AmiBlitz3.ab3@19563>   ORI.w #$1000,D1
0002F66C <AmiBlitz3.ab3@19564> RTS
0002F674 <AmiBlitz3.ab3@19570>   MOVE.w #$FFFF,dfetch    ; was -1
0002F678 <AmiBlitz3.ab3@19571>   BSR.w get1bytemain
0002F67C <AmiBlitz3.ab3@19572>   CMP.w #$2D,D0           ;'-'
0002F680 <AmiBlitz3.ab3@19573>    BNE.w 'datado
0002F684 <AmiBlitz3.ab3@19574>   BSR.w get1bytemain
0002F688 <AmiBlitz3.ab3@19575>   BSR.w 'datado
0002F68C <AmiBlitz3.ab3@19577>   CMP.w #$5,D2
0002F690 <AmiBlitz3.ab3@19578>    BCC.w 'nfp
0002F692 <AmiBlitz3.ab3@19579>   NEG.l D0
0002F694 <AmiBlitz3.ab3@19580>  RTS
0002F69A <AmiBlitz3.ab3@19584>   TST.b fpu
0002F69E <AmiBlitz3.ab3@19585>   BEQ 'noneg
0002F6A2 <AmiBlitz3.ab3@19586>   fneg.x fp0
0002F6A4 <AmiBlitz3.ab3@19587>  RTS
0002F6A8 <AmiBlitz3.ab3@19592>   BCHG #$7,D0
0002F6AA <AmiBlitz3.ab3@19593>  RTS
0002F6AE <AmiBlitz3.ab3@19597>   CMP.w #$24,D0          ;'$'
0002F6B2 <AmiBlitz3.ab3@19598>    BEQ.w get_hexconstant
0002F6B6 <AmiBlitz3.ab3@19599>   CMP.w #$25,D0          ;'%'
0002F6BA <AmiBlitz3.ab3@19600>    BEQ.w fetchbin
0002F6BE <AmiBlitz3.ab3@19603>   CMP.w #$2E,D0          ;'.'
0002F6C2 <AmiBlitz3.ab3@19604>    BNE.w fetchnum
0002F6C4 <AmiBlitz3.ab3@19608>   MOVEQ.l #$00,D3
0002F6C8 <AmiBlitz3.ab3@19609> BRA.w fetchpoint2
0002F6CA <AmiBlitz3.ab3@19613>   MOVEQ.l #$00,D3                                          ;number
0002F6CE <AmiBlitz3.ab3@19615>    BSR.w atoi
0002F6D2 <AmiBlitz3.ab3@19617>   CMP.w #$2E,D0             ;'.'
0002F6D6 <AmiBlitz3.ab3@19618>    BEQ.w fetchpoint
0002F6DA <AmiBlitz3.ab3@19619>   ORI.w #$20,D0
0002F6DE <AmiBlitz3.ab3@19620>   CMP.w #$65,D0             ;'e'
0002F6E2 <AmiBlitz3.ab3@19621>    BNE.w fetchnum2
0002F6E8 <AmiBlitz3.ab3@19622>   CMP.l #$800000,D3
0002F6EC <AmiBlitz3.ab3@19623>    BCC.w overerr
0002F6EE <AmiBlitz3.ab3@19624>   MOVEQ.l #-$01,D6
0002F6F2 <AmiBlitz3.ab3@19626>   fmove.l d3,fp0
0002F6F4 <AmiBlitz3.ab3@19628>   MOVE.l D3,D0
0002F6FA <AmiBlitz3.ab3@19629>   MOVEA.l _mathffpbase,A6
0002F6FE <AmiBlitz3.ab3@19630>    JSR -$24(A6)             ;int to ffp
0002F700 <AmiBlitz3.ab3@19631>   MOVE.l D0,D3
0002F704 <AmiBlitz3.ab3@19632>    BSR.w dothee
0002F708 <AmiBlitz3.ab3@19633>    BSR.w reget
0002F70C <AmiBlitz3.ab3@19634>    BSR.w consttype2
0002F710 <AmiBlitz3.ab3@19635> BRA.w fetchnum3
0002F714 <AmiBlitz3.ab3@19640>   CMP.b #4,d2
0002F718 <AmiBlitz3.ab3@19641>   BEQ 'l4
0002F71C <AmiBlitz3.ab3@19642>   MOVE.b #5,d2                                             ;nprint 2/0.5 bugfix
0002F722 <AmiBlitz3.ab3@19645>    TST.b fpu
0002F726 <AmiBlitz3.ab3@19646>    BNE 'l1
0002F72C <AmiBlitz3.ab3@19648>    CMP.l #$800000,D3
0002F730 <AmiBlitz3.ab3@19649>    BCC.w overerr
0002F734 <AmiBlitz3.ab3@19651>  BRA fetchpoint2
0002F73A <AmiBlitz3.ab3@19654>   CMP.l #$7fffffff,d3
0002F73E <AmiBlitz3.ab3@19655>     BCC.w overerr
0002F740 <AmiBlitz3.ab3@19660>   MOVEQ.l #-$01,D6         ;now a float.
0002F742 <AmiBlitz3.ab3@19661>   MOVE.l D3,D0
0002F746 <AmiBlitz3.ab3@19663>   fmove.l d3,fp0
0002F74C <AmiBlitz3.ab3@19665>   MOVEA.l _mathffpbase,A6
0002F750 <AmiBlitz3.ab3@19666>    JSR -$24(A6)            ;int to ffp                                       ;integer to ffp
0002F752 <AmiBlitz3.ab3@19667>   MOVE.l D0,-(A7)          ;save whole number
0002F756 <AmiBlitz3.ab3@19668>    BSR.w get1bytemain
0002F75A <AmiBlitz3.ab3@19669>    BSR.w tstnum
0002F75E <AmiBlitz3.ab3@19670>    BNE.w syntaxerr
0002F760 <AmiBlitz3.ab3@19671>   MOVEQ.l #$00,D3
0002F764 <AmiBlitz3.ab3@19672>    BSR.w atoi              ;get int frac
0002F766 <AmiBlitz3.ab3@19673>   TST.l D3
0002F76A <AmiBlitz3.ab3@19674>    BEQ.w 'pskip
0002F770 <AmiBlitz3.ab3@19676>   TST.b fpu
0002F774 <AmiBlitz3.ab3@19677>   BNE 'l1
0002F77A <AmiBlitz3.ab3@19679>   CMP.l #$800000,D3
0002F77E <AmiBlitz3.ab3@19680>    BCC.w overerr
0002F782 <AmiBlitz3.ab3@19682>  BRA 'l2
0002F788 <AmiBlitz3.ab3@19685>   CMP.l #$7fffffff,d3
0002F78C <AmiBlitz3.ab3@19686>   BCC overerr
0002F790 <AmiBlitz3.ab3@19689>   fmove.l d5,fp1
0002F792 <AmiBlitz3.ab3@19691>   MOVE.l D5,D0
0002F796 <AmiBlitz3.ab3@19692>    JSR -$24(A6)        ;divisor to ffp
0002F798 <AmiBlitz3.ab3@19693>   MOVE.l D0,D5
0002F79C <AmiBlitz3.ab3@19695>   fmove.l d3,fp2
0002F79E <AmiBlitz3.ab3@19697>   MOVE.l D3,D0
0002F7A2 <AmiBlitz3.ab3@19698>    JSR -$24(A6)        ;to ffp
0002F7A6 <AmiBlitz3.ab3@19700>   fdiv.x fp1,fp2
0002F7A8 <AmiBlitz3.ab3@19702>   MOVE.l D5,D1
0002F7AC <AmiBlitz3.ab3@19703>    JSR -$54(A6)       ;num/divisor (eg .25=25/100)
0002F7B0 <AmiBlitz3.ab3@19705>   fadd.x fp2,fp0
0002F7B2 <AmiBlitz3.ab3@19707>   MOVE.l (A7)+,D1
0002F7B6 <AmiBlitz3.ab3@19708>    JSR -$42(A6)       ;add 'em
0002F7B8 <AmiBlitz3.ab3@19709>   MOVE.l D0,D3
0002F7BC <AmiBlitz3.ab3@19710>    BSR.w reget
0002F7C0 <AmiBlitz3.ab3@19711>   ORI.w #$20,D0
0002F7C4 <AmiBlitz3.ab3@19712>   CMP.w #$65,D0       ;'e'
0002F7C8 <AmiBlitz3.ab3@19713>    BNE.w 'pskip2
0002F7CC <AmiBlitz3.ab3@19716>    BSR.w dothee
0002F7D0 <AmiBlitz3.ab3@19719>    BSR.w reget
0002F7D4 <AmiBlitz3.ab3@19720>    BSR.w consttype2
0002F7D8 <AmiBlitz3.ab3@19721> BRA.w fetchnum3
0002F7DA <AmiBlitz3.ab3@19724>   MOVE.l (A7)+,D3
0002F7DE <AmiBlitz3.ab3@19725> BRA.w 'pskip2
0002F7E2 <AmiBlitz3.ab3@19730>   BSR.w get1bytemain
0002F7E6 <AmiBlitz3.ab3@19731>   CMP.w #$2B,D0       ;'+'
0002F7EA <AmiBlitz3.ab3@19732>    BEQ.w 'pos
0002F7EE <AmiBlitz3.ab3@19733>   CMP.w #$2D,D0       ;'-'
0002F7F2 <AmiBlitz3.ab3@19734>    BNE.w 'pos2
0002F7F6 <AmiBlitz3.ab3@19736>    BSR.w get1bytemain
0002F7FA <AmiBlitz3.ab3@19737>    BSR.w getsign
0002F7FC <AmiBlitz3.ab3@19741>   MOVE.l D3,D0
0002F800 <AmiBlitz3.ab3@19743>   fdiv.x fp1,fp0
0002F802 <AmiBlitz3.ab3@19745>   MOVE.l D4,D1
0002F806 <AmiBlitz3.ab3@19746>    JSR -$54(A6)
0002F808 <AmiBlitz3.ab3@19747>   MOVE.l D0,D3
0002F80A <AmiBlitz3.ab3@19748> RTS
0002F80E <AmiBlitz3.ab3@19751>   BSR.w get1bytemain
0002F812 <AmiBlitz3.ab3@19754>   BSR.w getsign
0002F816 <AmiBlitz3.ab3@19758>   fmul.x fp1,fp0
0002F818 <AmiBlitz3.ab3@19759>   MOVE.l D3,D0
0002F81A <AmiBlitz3.ab3@19760>   MOVE.l D4,D1
0002F81E <AmiBlitz3.ab3@19761>    JSR -$4E(A6)
0002F820 <AmiBlitz3.ab3@19762>   MOVE.l D0,D3
0002F822 <AmiBlitz3.ab3@19763> RTS
0002F826 <AmiBlitz3.ab3@19767>   BSR.w tstnum
0002F82A <AmiBlitz3.ab3@19768>    BNE.w syntaxerr
0002F82C <AmiBlitz3.ab3@19769>   MOVE.w D0,D4
0002F830 <AmiBlitz3.ab3@19770>   SUBI.w #$30,D4
0002F834 <AmiBlitz3.ab3@19771>    BSR.w get1bytemain
0002F838 <AmiBlitz3.ab3@19772>    BSR.w tstnum
0002F83C <AmiBlitz3.ab3@19773>    BNE.w 'skip
0002F840 <AmiBlitz3.ab3@19774>   MULU #$A,D4
0002F844 <AmiBlitz3.ab3@19775>   SUBI.w #$30,D0
0002F846 <AmiBlitz3.ab3@19776>   ADD.w D0,D4
0002F84A <AmiBlitz3.ab3@19777>    BSR.w get1bytemain
0002F84E <AmiBlitz3.ab3@19781>   CMP.w #$12,D4
0002F852 <AmiBlitz3.ab3@19782>    BHI.w overerr
0002F854 <AmiBlitz3.ab3@19784>   LSL.w #3,D4
0002F85A <AmiBlitz3.ab3@19785>   LEA fputab,a0
0002F85C <AmiBlitz3.ab3@19786>   ADD.l d4,a0
0002F862 <AmiBlitz3.ab3@19787>   fmove.d 0(a0),fp1
0002F864 <AmiBlitz3.ab3@19789>   LSR.w #1,d4               ; was #2
0002F868 <AmiBlitz3.ab3@19790>   MOVE.l facts(PC,D4.W),D4
0002F86A <AmiBlitz3.ab3@19791> RTS
0002F8B2 <AmiBlitz3.ab3@19795>   Dc.d 1,10,100,1000,10000,100000,1000000,10000000,100000000  ;,1000000000,10000000000
0002F8B6 <AmiBlitz3.ab3@19800>   Dc.l $80000041
0002F8BA <AmiBlitz3.ab3@19801>   Dc.l $A0000044
0002F8BE <AmiBlitz3.ab3@19802>   Dc.l $C8000047
0002F8C2 <AmiBlitz3.ab3@19803>   Dc.l $FA00004A
0002F8C6 <AmiBlitz3.ab3@19804>   Dc.l $9C40004E
0002F8CA <AmiBlitz3.ab3@19805>   Dc.l $C3500051
0002F8CE <AmiBlitz3.ab3@19806>   Dc.l $F4240054
0002F8D2 <AmiBlitz3.ab3@19807>   Dc.l $98968058
0002F8D6 <AmiBlitz3.ab3@19808>   Dc.l $BEBC205B
0002F8DA <AmiBlitz3.ab3@19809>   Dc.l $EE6B285E
0002F8DE <AmiBlitz3.ab3@19810>   Dc.l $9502F962
0002F8E2 <AmiBlitz3.ab3@19811>   Dc.l $BA43B765
0002F8E6 <AmiBlitz3.ab3@19812>   Dc.l $E8D4A568
0002F8EA <AmiBlitz3.ab3@19813>   Dc.l $9184E76C
0002F8EE <AmiBlitz3.ab3@19814>   Dc.l $B5E6A96F
0002F8F2 <AmiBlitz3.ab3@19815>   Dc.l $E35F2972
0002F8F6 <AmiBlitz3.ab3@19816>   Dc.l $8E1BCA76
0002F8FA <AmiBlitz3.ab3@19817>   Dc.l $B1A2BD79
0002F8FE <AmiBlitz3.ab3@19818>   Dc.l $DE0B6C7C
0002F900 <AmiBlitz3.ab3@19822>   MOVEQ.l #$01,D5
0002F902 <AmiBlitz3.ab3@19825>   LSL.l #1,D5
0002F904 <AmiBlitz3.ab3@19826>   MOVE.l D5,D1
0002F906 <AmiBlitz3.ab3@19827>   LSL.l #2,D5
0002F908 <AmiBlitz3.ab3@19828>   ADD.l D1,D5                                              ;divisor for frac convert!
0002F90A <AmiBlitz3.ab3@19830>   LSL.l #1,D3
0002F90E <AmiBlitz3.ab3@19831>    BCS.w overerr
0002F910 <AmiBlitz3.ab3@19832>   MOVE.l D3,D1
0002F912 <AmiBlitz3.ab3@19833>   LSL.l #1,D3
0002F916 <AmiBlitz3.ab3@19834>    BCS.w overerr
0002F918 <AmiBlitz3.ab3@19835>   LSL.l #1,D3
0002F91C <AmiBlitz3.ab3@19836>    BCS.w overerr
0002F91E <AmiBlitz3.ab3@19837>   ADD.l D1,D3
0002F922 <AmiBlitz3.ab3@19838>   SUBI.w #$30,D0
0002F924 <AmiBlitz3.ab3@19839>   ADD.l D0,D3
0002F950 <AmiBlitz3.ab3@19841>    !fget                                                   ;bsr.w get1bytemain
0002F954 <AmiBlitz3.ab3@19842>    CMP.b #1,d0
0002F958 <AmiBlitz3.ab3@19843>    BNE 'cm1
0002F95A <AmiBlitz3.ab3@19844>    SUBQ.l #1,a5
0002F95E <AmiBlitz3.ab3@19845>    BSR get1bytemain                                        ;??wy not !fget
0002F962 <AmiBlitz3.ab3@19848>   CMP.b #$7e,d0
0002F966 <AmiBlitz3.ab3@19849>    BNE 'cm2
0002F968 <AmiBlitz3.ab3@19850>    SUBQ.l #1,a5
0002F96C <AmiBlitz3.ab3@19851>    BSR get1bytemain
0002F96E <AmiBlitz3.ab3@19854>   TST.b d0
0002F972 <AmiBlitz3.ab3@19855>    BPL 'l10
0002F974 <AmiBlitz3.ab3@19856>    LSL.w #8,d0
0002F976 <AmiBlitz3.ab3@19857>    MOVE.b (a5)+,d0
0002F97C <AmiBlitz3.ab3@19858>    MOVE.w d0,lastchar
0002F98E <AmiBlitz3.ab3@19861>   !compare2                                                ;bsr.w tstnum ;cmake bug
0002F992 <AmiBlitz3.ab3@19863>    BEQ.w 'loop
0002F994 <AmiBlitz3.ab3@19864> RTS
0002F996 <AmiBlitz3.ab3@19867> dfetch:  Ds.w 1                                            ;fetching data?
0002F99A <AmiBlitz3.ab3@19871>   MOVE.w dfetch(PC),D1
0002F99E <AmiBlitz3.ab3@19872>    BEQ.w 'doit
0002F9A4 <AmiBlitz3.ab3@19873>   CLR.w dfetch
0002F9A6 <AmiBlitz3.ab3@19874>  RTS
0002F9AC <AmiBlitz3.ab3@19878>   MOVE.b d2,isconstantvalue
0002F9B2 <AmiBlitz3.ab3@19879>   MOVE.l d0,lastconstantvalue
0002F9B8 <AmiBlitz3.ab3@19880>   MOVE.w d2,imm_size
0002F9C2 <AmiBlitz3.ab3@19881>   MOVE.w regnum,imm_reg
0002F9CC <AmiBlitz3.ab3@19882>   MOVE.l destpointer,imm_addr                           ; long
0002F9D0 <AmiBlitz3.ab3@19884>   CMP.w #$3,D2          ; order of cmp/beq in org soure is different
0002F9D4 <AmiBlitz3.ab3@19885>   BEQ.w 'long
0002F9D8 <AmiBlitz3.ab3@19886>   CMP.w #$5,D2                                          ;float
0002F9DC <AmiBlitz3.ab3@19887>   BEQ.w 'long
0002F9E0 <AmiBlitz3.ab3@19888>   CMP.w #$1,D2
0002F9E4 <AmiBlitz3.ab3@19889>   BEQ.w 'word
0002F9E8 <AmiBlitz3.ab3@19890>   CMP.w #$2,D2
0002F9EC <AmiBlitz3.ab3@19891>   BEQ.w 'word
0002F9F0 <AmiBlitz3.ab3@19892>   CMP.w #$4,D2
0002F9F4 <AmiBlitz3.ab3@19893>   BEQ.w 'long
0002F9F8 <AmiBlitz3.ab3@19894>  BRA.w mismatcherr
0002F9FE <AmiBlitz3.ab3@19897>   MOVE.w regnum,D1
0002FA00 <AmiBlitz3.ab3@19898>   LSL.w #8,D1
0002FA02 <AmiBlitz3.ab3@19899>   LSL.w #1,D1
0002FA06 <AmiBlitz3.ab3@19900>   ORI.w #$303C,D1
0002FA0A <AmiBlitz3.ab3@19901>    BSR.w writeword
0002FA0C <AmiBlitz3.ab3@19902>   MOVE.w D0,D1
0002FA10 <AmiBlitz3.ab3@19903>    BSR.w writeword
0002FA14 <AmiBlitz3.ab3@19904>  BRA.w reget
0002FA16 <AmiBlitz3.ab3@19908>   MOVEQ #0,d1
0002FA1C <AmiBlitz3.ab3@19910>   MOVE.w regnum,D1
0002FA22 <AmiBlitz3.ab3@19912>   TST.b fpu
0002FA26 <AmiBlitz3.ab3@19913>   BEQ 'f1
0002FA2A <AmiBlitz3.ab3@19914>   CMP.w #5,d2
0002FA2E <AmiBlitz3.ab3@19915>   BEQ 'l10
0002FA32 <AmiBlitz3.ab3@19916>  BRA 'f2
0002FA38 <AmiBlitz3.ab3@19919>   TST.b iee
0002FA3C <AmiBlitz3.ab3@19920>   BNE 'l10
0002FA3E <AmiBlitz3.ab3@19924>   LSL.w #8,D1
0002FA40 <AmiBlitz3.ab3@19925>   LSL.w #1,D1
0002FA44 <AmiBlitz3.ab3@19926>   ORI.w #$203C,D1
0002FA48 <AmiBlitz3.ab3@19927>    BSR.w writeword
0002FA4A <AmiBlitz3.ab3@19928>   MOVE.l D0,D1
0002FA4E <AmiBlitz3.ab3@19929>    BSR.w writelong
0002FA52 <AmiBlitz3.ab3@19930>  BRA.w reget
0002FA54 <AmiBlitz3.ab3@19934>   MOVEQ #5,d2
0002FA56 <AmiBlitz3.ab3@19935>   ASL.l #7,d1
0002FA58 <AmiBlitz3.ab3@19936>   SUBQ.l #8,a7
0002FA5E <AmiBlitz3.ab3@19941>       OR.l #$f23c4400,d1                                   ;fmove.s
0002FA64 <AmiBlitz3.ab3@19942>        fmove.s fp0,0(a7)
0002FA68 <AmiBlitz3.ab3@19944>   BSR writelong
0002FA6A <AmiBlitz3.ab3@19945>   MOVE.l (a7)+,d1
0002FA6E <AmiBlitz3.ab3@19946>   BSR writelong
0002FA70 <AmiBlitz3.ab3@19947>   MOVE.l (a7)+,d1
0002FA74 <AmiBlitz3.ab3@19951> BRA.w reget
0002FA76 <AmiBlitz3.ab3@19958>  MOVE.l D3,D0
0002FA78 <AmiBlitz3.ab3@19959>   TST.w D6
0002FA7C <AmiBlitz3.ab3@19960>    BEQ.w 'skip            ;already integer
0002FA82 <AmiBlitz3.ab3@19961>   MOVEA.l _mathffpbase,A6
0002FA86 <AmiBlitz3.ab3@19962>    JSR -$1E(A6)
0002FA8A <AmiBlitz3.ab3@19963>    BVC.w 'skip
0002FA8C <AmiBlitz3.ab3@19964>   ADDQ.w #4,A7
0002FA90 <AmiBlitz3.ab3@19965>  BRA.w numdofloat
0002FA92 <AmiBlitz3.ab3@19968> RTS
0002FA94 <AmiBlitz3.ab3@19972>   MOVEQ.l #$00,D6          ;no frac
0002FA98 <AmiBlitz3.ab3@19974>    fmove.l d3,fp0
0002FA9C <AmiBlitz3.ab3@19978>   BSR.w consttype2
0002FAA0 <AmiBlitz3.ab3@19979> BRA.w fetchnum3
0002FAA2 <AmiBlitz3.ab3@19987>   MOVE.w D2,-(A7)                       ;
0002FAA6 <AmiBlitz3.ab3@19988>    BSR.w evalconst                      ;  "
0002FAA8 <AmiBlitz3.ab3@19989>   MOVE.w (A7)+,D2
0002FAAA <AmiBlitz3.ab3@19992>   TST.w D2
0002FAAE <AmiBlitz3.ab3@19993>    BNE.w 'something
0002FAB0 <AmiBlitz3.ab3@19997>   TST.w D6
0002FAB4 <AmiBlitz3.ab3@19998>    BEQ.w 'nofrac
0002FAB6 <AmiBlitz3.ab3@19999>   MOVEQ.l #$04,D2
0002FABA <AmiBlitz3.ab3@20000>  BRA.w 'quick2
0002FABC <AmiBlitz3.ab3@20003>   MOVEQ.l #$02,D2
0002FAC0 <AmiBlitz3.ab3@20004>  BRA.w 'byte
0002FAC4 <AmiBlitz3.ab3@20007>   CMP.w #$1,D2
0002FAC8 <AmiBlitz3.ab3@20008>    BEQ.w 'byte
0002FACC <AmiBlitz3.ab3@20009>   CMP.w #$2,D2
0002FAD0 <AmiBlitz3.ab3@20010>    BEQ.w 'word
0002FAD4 <AmiBlitz3.ab3@20011>   CMP.w #$3,D2
0002FAD8 <AmiBlitz3.ab3@20012>    BEQ.w 'long
0002FADC <AmiBlitz3.ab3@20013>   CMP.w #$4,D2
0002FAE0 <AmiBlitz3.ab3@20014>    BEQ.w 'quick
0002FAE4 <AmiBlitz3.ab3@20015>   CMP.w #$5,D2
0002FAE8 <AmiBlitz3.ab3@20016>    BEQ.w 'float
0002FAEC <AmiBlitz3.ab3@20017>  BRA.w mismatcherr
0002FAF0 <AmiBlitz3.ab3@20020>   BSR.w makeint                                          ;bugfix if a.b=$90 bug fix
0002FAF6 <AmiBlitz3.ab3@20021>   CMP.l #$7f,D0             ;127
0002FAFA <AmiBlitz3.ab3@20022>    BGT.w 'over1
0002FB00 <AmiBlitz3.ab3@20023>   CMP.l #$FFFFFF80,D0       ;-128
0002FB04 <AmiBlitz3.ab3@20024>    BGE.w 'dobword
0002FB06 <AmiBlitz3.ab3@20027>   MOVEQ.l #$02,D2                                          ;was 2 before
0002FB0C <AmiBlitz3.ab3@20028>   CMP.l #$7fff,D0           ;32767
0002FB10 <AmiBlitz3.ab3@20029>    BGT.w 'byte2
0002FB16 <AmiBlitz3.ab3@20030>   CMP.l #$FFFF8000,D0       ;32768
0002FB1A <AmiBlitz3.ab3@20031>    BGE.w 'dobword
0002FB1C <AmiBlitz3.ab3@20034>   MOVEQ.l #$03,D2
0002FB20 <AmiBlitz3.ab3@20035>  BRA.w 'dobword
0002FB22 <AmiBlitz3.ab3@20062>   TST.w D6
0002FB26 <AmiBlitz3.ab3@20063>    BNE.w 'quick2
0002FB2A <AmiBlitz3.ab3@20064>    BSR.w makeint
0002FB2E <AmiBlitz3.ab3@20065>  BRA.w 'over1
0002FB32 <AmiBlitz3.ab3@20068>   BSR.w makeint
0002FB34 <AmiBlitz3.ab3@20069>   TST.w D6
0002FB38 <AmiBlitz3.ab3@20070>   BEQ.w 'qint
0002FB3E <AmiBlitz3.ab3@20073>   CMP.l #MaxWordSgnd,D0   ;32767
0002FB42 <AmiBlitz3.ab3@20074>    BGT.w numdofloat
0002FB48 <AmiBlitz3.ab3@20075>   CMP.l #$FFFF8000,D0     ;-32768
0002FB4C <AmiBlitz3.ab3@20076>    BLT.w numdofloat
0002FB4E <AmiBlitz3.ab3@20078>   MOVE.w D0,-(A7)         ;save whole part
0002FB52 <AmiBlitz3.ab3@20079>    JSR -$24(A6)           ;back to ffp
0002FB54 <AmiBlitz3.ab3@20080>   MOVE.l D0,D1
0002FB56 <AmiBlitz3.ab3@20081>   MOVE.l D3,D0
0002FB5A <AmiBlitz3.ab3@20082>    JSR -$48(A6)           ;subtract - d0=fraction!
0002FB60 <AmiBlitz3.ab3@20083>   MOVE.l #$80000051,D1    ;65536
0002FB64 <AmiBlitz3.ab3@20084>    JSR -$4E(A6)           ;*65536
0002FB68 <AmiBlitz3.ab3@20085>    JSR -$1E(A6)           ;back to int
0002FB6C <AmiBlitz3.ab3@20087>    BEQ.w 'knob            ;numdofloat
0002FB72 <AmiBlitz3.ab3@20088>   CMP.l #$10000,D0        ;65536
0002FB76 <AmiBlitz3.ab3@20089>    BCC.w 'knob            ;numdofloat
0002FB78 <AmiBlitz3.ab3@20090>   MOVE.w D0,D1
0002FB7A <AmiBlitz3.ab3@20091>   MOVE.w (A7)+,D0
0002FB7C <AmiBlitz3.ab3@20092>   SWAP D0
0002FB7E <AmiBlitz3.ab3@20093>   MOVE.w D1,D0
0002FB82 <AmiBlitz3.ab3@20094>  BRA.w 'dolong
0002FB84 <AmiBlitz3.ab3@20097>   ADDQ.w #2,A7
0002FB88 <AmiBlitz3.ab3@20098>  BRA.w numdofloat
0002FB8E <AmiBlitz3.ab3@20101>   CMP.l #MaxWordSgnd,D0   ;#32767
0002FB92 <AmiBlitz3.ab3@20102>    BGT.w 'byte2
0002FB98 <AmiBlitz3.ab3@20103>   CMP.l #$FFFF8000,D0     ;#32768
0002FB9C <AmiBlitz3.ab3@20104>    BLT.w 'byte2
0002FB9E <AmiBlitz3.ab3@20105>   SWAP D0
0002FBA2 <AmiBlitz3.ab3@20106>  BRA.w 'dolong
0002FBA4 <AmiBlitz3.ab3@20109>   TST.w D6
0002FBA8 <AmiBlitz3.ab3@20110>   BNE.w numdofloat
0002FBAA <AmiBlitz3.ab3@20111>   MOVE.l D3,D0
0002FBAE <AmiBlitz3.ab3@20112>  BRA.w 'dolong
0002FBB0 <AmiBlitz3.ab3@20115>   TST.w D6
0002FBB4 <AmiBlitz3.ab3@20116>   BNE.w numdofloat
0002FBB6 <AmiBlitz3.ab3@20117>   MOVE.l D3,D0
0002FBBC <AmiBlitz3.ab3@20118>   MOVEA.l _mathffpbase,A6
0002FBC0 <AmiBlitz3.ab3@20119>   JSR -$24(A6)           ;int to float
0002FBC2 <AmiBlitz3.ab3@20120>   MOVE.l D0,D3
0002FBC6 <AmiBlitz3.ab3@20121>  BRA.w numdofloat
0002FBC8 <AmiBlitz3.ab3@20125> RTS
0002FBCA <AmiBlitz3.ab3@20129>   MOVEQ.l #$05,D2
0002FBCC <AmiBlitz3.ab3@20130>   MOVE.l D3,D0
0002FBCE <AmiBlitz3.ab3@20131> RTS
0002FBD2 <AmiBlitz3.ab3@20135>             Ds.l 1                                         ;??Looks like unused data??
0002FBD6 <AmiBlitz3.ab3@20136> pushpc:     Ds.l 1
0002FBDA <AmiBlitz3.ab3@20137> pushoff:    Ds.l 1
0002FBDE <AmiBlitz3.ab3@20138> pushdooff:  Ds.l 1
0002FBE0 <AmiBlitz3.ab3@20139> pushclen:   Ds.w 1
0002FBE4 <AmiBlitz3.ab3@20140> pushat:     Ds.l 1
0002FBEE <AmiBlitz3.ab3@20146>   MOVE.l destpointer,pushpc
0002FBF8 <AmiBlitz3.ab3@20147>   MOVE.l hunkoffsetbase,pushoff
0002FBFA <AmiBlitz3.ab3@20148>  RTS
0002FBFE <AmiBlitz3.ab3@20154>   MOVEM.l D0-D1/A0-A1,-(A7)
0002FC04 <AmiBlitz3.ab3@20156>   MOVE.l destpointer,D0
0002FC08 <AmiBlitz3.ab3@20157>   MOVE.l pushpc(PC),D1
0002FC0E <AmiBlitz3.ab3@20158>   MOVE.l D1,destpointer    ;New PC
0002FC10 <AmiBlitz3.ab3@20159>   SUB.l D1,D0              ;len
0002FC16 <AmiBlitz3.ab3@20160>   MOVE.w D0,pushclen
0002FC1A <AmiBlitz3.ab3@20161>    BEQ.w 'skip
0002FC20 <AmiBlitz3.ab3@20162>   MOVE.w dontwrite_nomemleft,D1
0002FC24 <AmiBlitz3.ab3@20163>    BNE.w 'skip
0002FC2C <AmiBlitz3.ab3@20166>    CMP.w #1000,pushclen
0002FC30 <AmiBlitz3.ab3@20167>    BGE conmemerr
0002FC36 <AmiBlitz3.ab3@20168>    MOVE.l pushat,d0
0002FC3A <AmiBlitz3.ab3@20169>    BNE 'nomem
0002FC40 <AmiBlitz3.ab3@20170>    MOVE.l #1024,d0
0002FC42 <AmiBlitz3.ab3@20172>   MOVEQ.l #$01,D1
0002FC48 <AmiBlitz3.ab3@20173>   MOVEA.l _execbase,A6
0002FC4E <AmiBlitz3.ab3@20175>   MOVE.l mempool,a0
0002FC52 <AmiBlitz3.ab3@20176>   JSR _AllocPooled(a6)
0002FC58 <AmiBlitz3.ab3@20179>   MOVE.l D0,pushat
0002FC5A <AmiBlitz3.ab3@20184>   MOVEA.l D0,A0          ;destination
0002FC60 <AmiBlitz3.ab3@20185>   MOVEA.l pushpc,A1      ;source
0002FC66 <AmiBlitz3.ab3@20186>   MOVE.l A1,destpointer
0002FC6C <AmiBlitz3.ab3@20187>   MOVE.w pushclen,D0
0002FC6E <AmiBlitz3.ab3@20188>   LSR.w #1,D0
0002FC70 <AmiBlitz3.ab3@20189>   SUBQ.w #1,D0           ;to word dbf
0002FC72 <AmiBlitz3.ab3@20192>     MOVE.w (A1)+,(A0)+
0002FC76 <AmiBlitz3.ab3@20193>   DBF D0,'loop
0002FC80 <AmiBlitz3.ab3@20195>    MOVE.l hunkoffsetbase,pushdooff
0002FC84 <AmiBlitz3.ab3@20198>   MOVEM.l (A7)+,D0-D1/A0-A1
0002FC86 <AmiBlitz3.ab3@20199> RTS
0002FC8A <AmiBlitz3.ab3@20205>   MOVEM.l D0-D1/A0-A1,-(A7)
0002FC8C <AmiBlitz3.ab3@20206>   MOVEQ.l #$00,D0
0002FC92 <AmiBlitz3.ab3@20207>   MOVE.w pushclen,D0
0002FC96 <AmiBlitz3.ab3@20208>    BEQ.w 'skip
0002FC9C <AmiBlitz3.ab3@20209>   MOVE.l destpointer,D1     ;pc before put
0002FCA2 <AmiBlitz3.ab3@20210>   ADD.l D0,destpointer
0002FCA8 <AmiBlitz3.ab3@20211>   TST.w dontwrite_nomemleft
0002FCAC <AmiBlitz3.ab3@20212>    BNE.w 'skip
0002FCAE <AmiBlitz3.ab3@20214>   LSR.w #1,D0
0002FCB0 <AmiBlitz3.ab3@20215>   SUBQ.w #1,D0
0002FCB2 <AmiBlitz3.ab3@20217>   MOVEA.l D1,A1
0002FCB8 <AmiBlitz3.ab3@20218>   MOVEA.l pushat,A0
0002FCBE <AmiBlitz3.ab3@20221>     CMPA.l destbufferend,A1
0002FCC2 <AmiBlitz3.ab3@20222>     BCS.w 'ok
0002FCCA <AmiBlitz3.ab3@20224>     MOVE.w #$FFFF,dontwrite_nomemleft    ; was -1
0002FCCE <AmiBlitz3.ab3@20225>   BRA.w 'skip
0002FCD0 <AmiBlitz3.ab3@20228>      MOVE.w (A0)+,(A1)+                                    ;copylibcode
0002FCD4 <AmiBlitz3.ab3@20229>   DBF D0,'loop
0002FCDA <AmiBlitz3.ab3@20234>   SUB.l pushpc,D1
0002FCDE <AmiBlitz3.ab3@20235>   BEQ.w 'skip2
0002FCE4 <AmiBlitz3.ab3@20236>   MOVEA.l pushdooff,A0
0002FCEA <AmiBlitz3.ab3@20239>   CMPA.l pushoff,A0
0002FCEE <AmiBlitz3.ab3@20240>   BEQ.w 'done
0002FCF2 <AmiBlitz3.ab3@20241>   MOVEA.l $4(A0),A1          ;address in prog.
0002FCF8 <AmiBlitz3.ab3@20242>   ADDA.l destbufferstart,A1
0002FCFE <AmiBlitz3.ab3@20243>   CMPA.l destbufferend,A1
0002FD02 <AmiBlitz3.ab3@20244>   BCC.w 'next                ;leave offs >= lib
0002FD06 <AmiBlitz3.ab3@20245>   ADD.l D1,$4(A0)
0002FD08 <AmiBlitz3.ab3@20248>   MOVEA.l (A0),A0
0002FD0C <AmiBlitz3.ab3@20249>  BRA.w 'loop2
0002FD12 <AmiBlitz3.ab3@20253>   MOVEA.l pushat,A1
0002FD14 <AmiBlitz3.ab3@20254>   MOVEQ.l #$00,D0
0002FD1A <AmiBlitz3.ab3@20255>   MOVE.w pushclen,D0
0002FD20 <AmiBlitz3.ab3@20256>   MOVEA.l _execbase,A6
0002FD26 <AmiBlitz3.ab3@20257>   MOVE.l mempool,a0
0002FD2A <AmiBlitz3.ab3@20261>   MOVEM.l (A7)+,D0-D1/A0-A1
0002FD2C <AmiBlitz3.ab3@20262> RTS
0002FD2E <AmiBlitz3.ab3@20268>   MOVE.l D1,-(A7)                                          ;array mul
0002FD30 <AmiBlitz3.ab3@20269>   MOVEQ.l #$00,D2
0002FD32 <AmiBlitz3.ab3@20270>   MOVEQ.l #$0F,D3
0002FD34 <AmiBlitz3.ab3@20273>     LSL.w #1,D1
0002FD38 <AmiBlitz3.ab3@20274>     BCC.w 'shskip
0002FD3A <AmiBlitz3.ab3@20275>     ADDQ.w #1,D2
0002FD3C <AmiBlitz3.ab3@20276>     MOVE.w D3,D4
0002FD40 <AmiBlitz3.ab3@20279>   DBF D3,'shloop
0002FD42 <AmiBlitz3.ab3@20281>   SUBQ.w #1,D2
0002FD46 <AmiBlitz3.ab3@20282>    BNE.w 'domul
0002FD48 <AmiBlitz3.ab3@20283>   ADDQ.w #4,A7           ; was 2
0002FD4A <AmiBlitz3.ab3@20284>   MOVE.w D4,D1
0002FD4E <AmiBlitz3.ab3@20285>    BEQ.w 'done
0002FD52 <AmiBlitz3.ab3@20286>   CMP.w #$8,D1
0002FD56 <AmiBlitz3.ab3@20287>    BCS.w 'once
0002FD5A <AmiBlitz3.ab3@20288>   SUBI.w #$8,D1
0002FD5E <AmiBlitz3.ab3@20289>    BSR.w 'once
0002FD60 <AmiBlitz3.ab3@20290>   MOVEQ.l #$00,D1
0002FD62 <AmiBlitz3.ab3@20293>   LSL.w #8,D1
0002FD64 <AmiBlitz3.ab3@20294>   LSL.w #1,D1
0002FD68 <AmiBlitz3.ab3@20295>   ORI.w #$E188,D1
0002FD6E <AmiBlitz3.ab3@20296>   OR.w regnum,D1
0002FD72 <AmiBlitz3.ab3@20297>  BRA.w writeword
0002FD74 <AmiBlitz3.ab3@20300>  RTS
0002FD76 <AmiBlitz3.ab3@20304>   MOVEQ #0,d1
0002FD7C <AmiBlitz3.ab3@20305>   MOVE.w regnum,D1
0002FD7E <AmiBlitz3.ab3@20307>   LSL.l #8,D1
0002FD80 <AmiBlitz3.ab3@20310>   LSL.l #4,d1
0002FD86 <AmiBlitz3.ab3@20314>   OR.l #$4c3c0000,d1
0002FD8C <AmiBlitz3.ab3@20315>   OR.w regnum,d1
0002FD90 <AmiBlitz3.ab3@20316>   BSR.w writelong          ; was writeword
0002FD92 <AmiBlitz3.ab3@20318>   MOVE.l (A7)+,D1
0002FD96 <AmiBlitz3.ab3@20321> BRA writelong
0002FD9C <AmiBlitz3.ab3@20328>   MOVE.l destpointer,-(A7)
0002FD9E <AmiBlitz3.ab3@20329>   MOVEQ.l #-$01,D7
0002FDA2 <AmiBlitz3.ab3@20332>     BSR.w findhilib
0002FDA6 <AmiBlitz3.ab3@20333>      BEQ.w 'done
0002FDAA <AmiBlitz3.ab3@20334>     TST.w $C(A2)
0002FDAE <AmiBlitz3.ab3@20335>      BPL.w 'loop
0002FDB2 <AmiBlitz3.ab3@20336>     MOVE.l $16(A2),D1
0002FDB6 <AmiBlitz3.ab3@20337>     BEQ.w 'loop
0002FDBA <AmiBlitz3.ab3@20339>     MOVE.w $4(A2),D1                                       ; check state in D1 and do some things
0002FDBE <AmiBlitz3.ab3@20340>     CMP.w #-$2,D1          ; was #allocvars
0002FDC2 <AmiBlitz3.ab3@20341>      BNE.w 'notvar
0002FDC6 <AmiBlitz3.ab3@20342>     BSR.w makevsize
0002FDCA <AmiBlitz3.ab3@20343>  BRA.w 'more
0002FDCE <AmiBlitz3.ab3@20346>     CMP.w #-$5C4,D1       ; was #debuglib
0002FDD2 <AmiBlitz3.ab3@20347>      BNE.w 'notdebuglib
0002FDD6 <AmiBlitz3.ab3@20351>     MOVE.w #$7000,D1      ;moveq #0,d0
0002FDDE <AmiBlitz3.ab3@20352>     BTST #$7,autorun
0002FDE0 <AmiBlitz3.ab3@20353>     SNE D1
0002FDE4 <AmiBlitz3.ab3@20354>     BSR.w writeword
0002FDE8 <AmiBlitz3.ab3@20355>  BRA.w 'more
0002FDEC <AmiBlitz3.ab3@20358>     CMP.w #-$12D,D1       ; was 65235
0002FDF0 <AmiBlitz3.ab3@20359>      BNE.w 'notstring1
0002FDF4 <AmiBlitz3.ab3@20360>     BSR.w makessize
0002FDF8 <AmiBlitz3.ab3@20361>  BRA.w 'more
0002FDFC <AmiBlitz3.ab3@20364>     CMP.w #-$1F5,D1       ; was 65035
0002FE00 <AmiBlitz3.ab3@20365>      BNE.w 'notexit
0002FE04 <AmiBlitz3.ab3@20367>     MOVE.w #$203C,D1
0002FE08 <AmiBlitz3.ab3@20368>     BSR.w writeword
0002FE0C <AmiBlitz3.ab3@20369>     BSR.w addoff
0002FE12 <AmiBlitz3.ab3@20370>     MOVE.l endop,D1
0002FE16 <AmiBlitz3.ab3@20371>     BSR.w writelong
0002FE1A <AmiBlitz3.ab3@20372>  BRA.w 'more
0002FE1E <AmiBlitz3.ab3@20375>     CMP.w #-$3E9,D1       ; was 64535
0002FE22 <AmiBlitz3.ab3@20376>      BNE.w 'notdatalib
0002FE26 <AmiBlitz3.ab3@20377>     MOVE.w #$203C,D1
0002FE2A <AmiBlitz3.ab3@20378>     BSR.w writeword
0002FE2E <AmiBlitz3.ab3@20379>     BSR.w addoff
0002FE34 <AmiBlitz3.ab3@20380>     MOVE.l data2at,D1
0002FE38 <AmiBlitz3.ab3@20381>     BSR.w writelong
0002FE3C <AmiBlitz3.ab3@20382>  BRA.w 'more
0002FE40 <AmiBlitz3.ab3@20385>     CMP.w #$1,D1          ; was #dhandlerlib
0002FE44 <AmiBlitz3.ab3@20386>      BNE.w 'notdhandler
0002FE48 <AmiBlitz3.ab3@20387>     MOVE.w #$203C,D1
0002FE4C <AmiBlitz3.ab3@20388>     BSR.w writeword
0002FE52 <AmiBlitz3.ab3@20389>     MOVE.l ptr_seg_debugger,D1
0002FE56 <AmiBlitz3.ab3@20390>     BSR.w writelong
0002FE5A <AmiBlitz3.ab3@20394>     MOVE.l $16(A2),D1
0002FE62 <AmiBlitz3.ab3@20395>     MOVE.w #$FFFF,lasta6     ; was -1
0002FE66 <AmiBlitz3.ab3@20396>     BSR.w Amakelibsub
0002FE6C <AmiBlitz3.ab3@20397>     CMPI.w #$FFFE,$4(A2)     ; was #allocvars
0002FE70 <AmiBlitz3.ab3@20398>      BNE.w 'notvar2
0002FE76 <AmiBlitz3.ab3@20400>     MOVE.l intdata1,D1
0002FE7A <AmiBlitz3.ab3@20401>      BEQ.w 'notvar2
0002FE80 <AmiBlitz3.ab3@20402>     MOVE.w putidata1,D1
0002FE84 <AmiBlitz3.ab3@20403>     BSR.w writeword
0002FE88 <AmiBlitz3.ab3@20404>     BSR.w addoff
0002FE8E <AmiBlitz3.ab3@20405>     MOVE.l intdata1,D1
0002FE92 <AmiBlitz3.ab3@20406>     BSR.w writelong
0002FE96 <AmiBlitz3.ab3@20409>     MOVE.w #$2B40,D1
0002FE9A <AmiBlitz3.ab3@20410>     TST.w $1A(A2)
0002FE9E <AmiBlitz3.ab3@20411>      BEQ.w 'loop
0002FEA2 <AmiBlitz3.ab3@20412>      BPL.w 'long
0002FEA6 <AmiBlitz3.ab3@20413>     MOVE.w #$3B40,D1
0002FEAA <AmiBlitz3.ab3@20416>     BSR.w writeword
0002FEAE <AmiBlitz3.ab3@20417>     MOVE.w $A(A2),D1
0002FEB2 <AmiBlitz3.ab3@20418>      BSR.w writeword
0002FEB8 <AmiBlitz3.ab3@20419>     CMPI.w #$FFFA,$4(A2)   ; was #65530
0002FEBC <AmiBlitz3.ab3@20420>      BNE.w 'loop
0002FEBE <AmiBlitz3.ab3@20422>     MOVE.w D7,-(A7)
0002FEC4 <AmiBlitz3.ab3@20423>     MOVE.w numstatic,D4
0002FEC8 <AmiBlitz3.ab3@20424>      BEQ.w 'nostats
0002FECE <AmiBlitz3.ab3@20425>     MOVE.l staticdata,D3
0002FED4 <AmiBlitz3.ab3@20426>      JSR datastart
0002FED8 <AmiBlitz3.ab3@20427>     MOVE.w #$C500,D1       ; was #alstat
0002FEDC <AmiBlitz3.ab3@20428>      BSR.w tokejsr2
0002FEE2 <AmiBlitz3.ab3@20431>     MOVE.w maxsused,D4
0002FEE6 <AmiBlitz3.ab3@20432>      BEQ.w 'nomaxs
0002FEEC <AmiBlitz3.ab3@20433>     MOVE.l maxsat,D3
0002FEF2 <AmiBlitz3.ab3@20434>      JSR datastart
0002FEF6 <AmiBlitz3.ab3@20435>     MOVE.w #$CF00,D1      ; was #setmaxs
0002FEFA <AmiBlitz3.ab3@20436>      BSR.w tokejsr2
0002FEFC <AmiBlitz3.ab3@20439>     MOVE.w (A7)+,D7
0002FF00 <AmiBlitz3.ab3@20441>  BRA.w 'loop
0002FF06 <AmiBlitz3.ab3@20447>   MOVE.l destpointer,D1
0002FF08 <AmiBlitz3.ab3@20448>   CMP.l (A7),D1
0002FF0C <AmiBlitz3.ab3@20449>    BNE.w 'yi
0002FF14 <AmiBlitz3.ab3@20450>   MOVE.w #$0008,noinits+2
0002FF18 <AmiBlitz3.ab3@20451>  BRA.w 'yi3
0002FF1E <AmiBlitz3.ab3@20454>   CLR.w noinits+2
0002FF24 <AmiBlitz3.ab3@20455>   MOVE.w dontwrite_nomemleft,D1
0002FF28 <AmiBlitz3.ab3@20456>    BNE.w 'yi2
0002FF2E <AmiBlitz3.ab3@20458>   TST.l newinitaddr
0002FF32 <AmiBlitz3.ab3@20459>    BEQ 'l10
0002FF38 <AmiBlitz3.ab3@20460>   MOVE.l newinitaddr,D2
0002FF3E <AmiBlitz3.ab3@20461>   SUB.l destbufferstart,D2
0002FF40 <AmiBlitz3.ab3@20462>   ADDQ.l #2,d2
0002FF46 <AmiBlitz3.ab3@20464>   MOVEA.l newinitaddr,A0                                   ;write newinitcode
0002FF4A <AmiBlitz3.ab3@20468>   MOVE.w #$4EB9,(A0)+
0002FF4C <AmiBlitz3.ab3@20469>   MOVE.l (A7),(A0)+
0002FF50 <AmiBlitz3.ab3@20472>  BRA 'l20
0002FF56 <AmiBlitz3.ab3@20475>   MOVEA.l destbufferstart,A0                               ;write initcode
0002FF5C <AmiBlitz3.ab3@20476>   TST.b saved0
0002FF60 <AmiBlitz3.ab3@20477>   BEQ 'l1
0002FF64 <AmiBlitz3.ab3@20478>   MOVE.w #$23c0,(a0)+
0002FF66 <AmiBlitz3.ab3@20479>   MOVE.l a0,a1
0002FF68 <AmiBlitz3.ab3@20480>   ADDQ.l #6,a1
0002FF6A <AmiBlitz3.ab3@20481>   MOVE.l a1,(a0)+
0002FF6C <AmiBlitz3.ab3@20483>   MOVEQ.l #$02,D2
0002FF70 <AmiBlitz3.ab3@20484>   BSR.w addhunkoffset
0002FF74 <AmiBlitz3.ab3@20486>   MOVE.w #$6004,(a0)+
0002FF7A <AmiBlitz3.ab3@20487>   MOVE.l #$4e714e71,(a0)+
0002FF7E <AmiBlitz3.ab3@20490>   MOVE.w #$4EB9,(A0)+
0002FF80 <AmiBlitz3.ab3@20491>   MOVE.l (A7),(A0)+
0002FF82 <AmiBlitz3.ab3@20492>   MOVEQ #2,d2
0002FF88 <AmiBlitz3.ab3@20493>   TST.b saved0
0002FF8C <AmiBlitz3.ab3@20494>   BEQ 'l20
0002FF8E <AmiBlitz3.ab3@20495>   MOVEQ.l #14,D2
0002FF92 <AmiBlitz3.ab3@20498>   BSR.w addhunkoffset
0002FF96 <AmiBlitz3.ab3@20499>   MOVE.w #$2039,(a0)+
0002FF98 <AmiBlitz3.ab3@20500>   MOVE.l a1,(a0)+
0002FF9A <AmiBlitz3.ab3@20501>   MOVEQ.l #20,d2
0002FF9E <AmiBlitz3.ab3@20504>   BSR.w addhunkoffset
0002FFA2 <AmiBlitz3.ab3@20508>   MOVE.w #$4E75,D1
0002FFA6 <AmiBlitz3.ab3@20509>   BSR.w writeword
0002FFA8 <AmiBlitz3.ab3@20512>   ADDQ.w #4,A7
0002FFAA <AmiBlitz3.ab3@20513> RTS
0002FFAE <AmiBlitz3.ab3@20518>   Dc.b $22,$2D,$00,$00                                     ;MOVE.L  $0000(A5),D1
0002FFB4 <AmiBlitz3.ab3@20520>   Dc.b $23,$CD,$00,$00,$00,$00                             ;MOVE.L  A5,$00000000
0002FFBA <AmiBlitz3.ab3@20522>   Dc.b $24,$7C,$00,$00,$00,$00                             ;MOVEA.L #$00000000,A2
0002FFC0 <AmiBlitz3.ab3@20527>   MOVE.l stringbuffer,D1
0002FFC4 <AmiBlitz3.ab3@20528> BRA.w makesize
0002FFC6 <AmiBlitz3.ab3@20533>   MOVEQ.l #$00,D1
0002FFCC <AmiBlitz3.ab3@20534>   MOVE.w globalvarpointer,D1
0002FFD0 <AmiBlitz3.ab3@20535>   SUBI.w #$8000,D1
0002FFD4 <AmiBlitz3.ab3@20536>   BNE.w makesize
0002FFD6 <AmiBlitz3.ab3@20537>     MOVEQ.l #$08,D1
0002FFD8 <AmiBlitz3.ab3@20542>   MOVE.l D1,-(A7)
0002FFDC <AmiBlitz3.ab3@20543>   MOVE.w #$203C,D1
0002FFE0 <AmiBlitz3.ab3@20544>   BSR.w writeword
0002FFE2 <AmiBlitz3.ab3@20545>   MOVE.l (A7)+,D1
0002FFE6 <AmiBlitz3.ab3@20546> BRA.w writelong
0002FFE8 <AmiBlitz3.ab3@20554>   MOVEQ.l #$00,D1
0002FFEE <AmiBlitz3.ab3@20555>   MOVEA.l libpointer,A1
0002FFF2 <AmiBlitz3.ab3@20558>     CMPA.w #$0,A1
0002FFF6 <AmiBlitz3.ab3@20559>     BEQ.w 'done
0002FFFA <AmiBlitz3.ab3@20560>       CMP.w $4(A1),D7
0002FFFE <AmiBlitz3.ab3@20561>       BLS.w 'next
00030002 <AmiBlitz3.ab3@20562>         CMP.w $4(A1),D1
00030006 <AmiBlitz3.ab3@20563>         BCC.w 'next
0003000A <AmiBlitz3.ab3@20564>           MOVE.w $4(A1),D1
0003000C <AmiBlitz3.ab3@20565>           MOVEA.l A1,A2
0003000E <AmiBlitz3.ab3@20568>     MOVEA.l (A1),A1
00030012 <AmiBlitz3.ab3@20569>  BRA.w 'loop
00030014 <AmiBlitz3.ab3@20572>   MOVE.w D1,D7
00030016 <AmiBlitz3.ab3@20573> RTS
00030018 <AmiBlitz3.ab3@20581>   MOVEQ.l #-$01,D1
0003001E <AmiBlitz3.ab3@20582>   MOVEA.l libpointer,A1
00030022 <AmiBlitz3.ab3@20585>     CMPA.w #$0,A1
00030026 <AmiBlitz3.ab3@20586>      BEQ.w 'done
0003002A <AmiBlitz3.ab3@20587>     CMP.w $4(A1),D7
0003002E <AmiBlitz3.ab3@20588>      BCC.w 'next
00030032 <AmiBlitz3.ab3@20589>     CMP.w $4(A1),D1
00030036 <AmiBlitz3.ab3@20590>      BLS.w 'next
0003003A <AmiBlitz3.ab3@20591>     MOVE.w $4(A1),D1
0003003C <AmiBlitz3.ab3@20592>     MOVEA.l A1,A2
0003003E <AmiBlitz3.ab3@20595>     MOVEA.l (A1),A1
00030042 <AmiBlitz3.ab3@20596> BRA.w 'loop
00030044 <AmiBlitz3.ab3@20599>   MOVE.w D1,D7
00030048 <AmiBlitz3.ab3@20600>   CMP.w #-$1,D1
0003004A <AmiBlitz3.ab3@20601> RTS
00030050 <AmiBlitz3.ab3@20609>   ADDQ.w #1,globalvarpointer
00030058 <AmiBlitz3.ab3@20610>   BCLR #$0,globalvarpointer+1
0003005A <AmiBlitz3.ab3@20611>   MOVEQ.l #$00,D7
0003005E <AmiBlitz3.ab3@20614>     BSR.w findlolib
00030062 <AmiBlitz3.ab3@20615>     BEQ.w 'azdone
00030066 <AmiBlitz3.ab3@20616>     TST.w $C(A2)
0003006A <AmiBlitz3.ab3@20617>     BPL.w 'loop
0003006C <AmiBlitz3.ab3@20620>     MOVEA.l A2,A1
00030070 <AmiBlitz3.ab3@20621>     ADDA.l $12(A1),A1
00030074 <AmiBlitz3.ab3@20622>     TST.w -$2(A1)
00030078 <AmiBlitz3.ab3@20623>     BEQ.w 'nomax
0003007C <AmiBlitz3.ab3@20627>     MOVE.l -$A(A1),D1
00030080 <AmiBlitz3.ab3@20628>     LEA $6(A2,D1.L),A3
00030082 <AmiBlitz3.ab3@20631>       TST.w (A3)+
00030086 <AmiBlitz3.ab3@20632>       BEQ.w 'plopf
00030088 <AmiBlitz3.ab3@20633>         ADDQ.w #2,A3
0003008C <AmiBlitz3.ab3@20634>  BRA.w 'plop
00030090 <AmiBlitz3.ab3@20637>     TST.l $4(A3)
00030094 <AmiBlitz3.ab3@20638>     BEQ.w 'nomax
00030098 <AmiBlitz3.ab3@20642>       MOVE.w freemax(PC),D1    ;move.w #x,-(a7)
0003009C <AmiBlitz3.ab3@20643>       BSR.w writeword
000300A0 <AmiBlitz3.ab3@20644>       MOVE.w -$4(A1),D1
000300A4 <AmiBlitz3.ab3@20645>       BSR.w writeword          ;x (max)
000300AA <AmiBlitz3.ab3@20646>       MOVE.l free,D1
000300AE <AmiBlitz3.ab3@20647>       MOVE.w -$6(A1),D1
000300B2 <AmiBlitz3.ab3@20648>       BSR.w writelong          ;move.l x(a5),a3
000300B8 <AmiBlitz3.ab3@20650>       MOVE.l destpointer,-(A7)
000300BA <AmiBlitz3.ab3@20651>       MOVEQ.l #$01,D1
000300BE <AmiBlitz3.ab3@20652>       MOVE.w -$2(A1),D2
000300C0 <AmiBlitz3.ab3@20653>       LSL.w D2,D1
000300C2 <AmiBlitz3.ab3@20654>       MOVE.w D1,-(A7)
000300C6 <AmiBlitz3.ab3@20655>       MOVE.l -$A(A1),D1
000300CA <AmiBlitz3.ab3@20656>       BSR.w Amakelibsub
000300CE <AmiBlitz3.ab3@20657>       MOVE.w freemax3(PC),D1
000300D2 <AmiBlitz3.ab3@20658>       BSR.w writeword          ;lea x(a3),a3
000300D4 <AmiBlitz3.ab3@20659>       MOVE.w (A7)+,D1
000300D8 <AmiBlitz3.ab3@20660>       BSR.w writeword
000300DC <AmiBlitz3.ab3@20661>       MOVE.l freemax2(PC),D1
000300E0 <AmiBlitz3.ab3@20662>       BSR.w writelong
000300E2 <AmiBlitz3.ab3@20663>       MOVE.l (A7)+,D1
000300E8 <AmiBlitz3.ab3@20664>       SUB.l destpointer,D1
000300EC <AmiBlitz3.ab3@20665>       BSR.w writeword
000300F0 <AmiBlitz3.ab3@20666>       MOVE.w freemax4(PC),D1
000300F4 <AmiBlitz3.ab3@20667>       BSR.w writeword
000300F8 <AmiBlitz3.ab3@20670>     MOVE.l $1C(A2),D1
000300FC <AmiBlitz3.ab3@20671>     BEQ.w 'loop
00030100 <AmiBlitz3.ab3@20675>     MOVE.w $4(A2),D1
00030104 <AmiBlitz3.ab3@20676>     CMP.w #-$2,D1              ; was #allocvars
00030108 <AmiBlitz3.ab3@20677>     BNE.w 'notvfin
0003010C <AmiBlitz3.ab3@20678>       BSR.w makevsize
00030110 <AmiBlitz3.ab3@20679>  BRA.w 'more
00030114 <AmiBlitz3.ab3@20682>     CMP.w #-$12D,D1            ; was #65235
00030118 <AmiBlitz3.ab3@20683>     BNE.w 'more
0003011C <AmiBlitz3.ab3@20684>       BSR.w makessize
00030120 <AmiBlitz3.ab3@20685>  BRA.w 'more
00030124 <AmiBlitz3.ab3@20689>     MOVE.l $1C(A2),D1
0003012C <AmiBlitz3.ab3@20690>     MOVE.w #$FFFF,lasta6       ; was -1
00030130 <AmiBlitz3.ab3@20691>     BSR.w Amakelibsub
00030134 <AmiBlitz3.ab3@20692>  BRA.w 'loop
00030136 <AmiBlitz3.ab3@20695> RTS
0003013A <AmiBlitz3.ab3@20699> freemax:   Dc.b $3F,$3C,$00,$00                            ;MOVE.W  #$0000,-(A7)
0003013C <AmiBlitz3.ab3@20701> freemax2:  Dc.b $53,$57                                    ;SUBQ.W  #1,(A7)
00030140 <AmiBlitz3.ab3@20702>            Dc.b $66,$00,$FF,$FC                            ;BNE.W freemax2
00030142 <AmiBlitz3.ab3@20703> freemax4:  Dc.b $54,$4F                                    ;ADDQ.W  #2,A7
00030146 <AmiBlitz3.ab3@20704> freemax3:  Dc.b $47,$EB,$00,$00                            ;LEA $0000(A3),A3
0003014C <AmiBlitz3.ab3@20709>   TST.b debugmode
00030150 <AmiBlitz3.ab3@20710>    BEQ.b 'skip
00030156 <AmiBlitz3.ab3@20711>   TST.w debugversion
0003015A <AmiBlitz3.ab3@20712>    BNE.b 'skip
0003015E <AmiBlitz3.ab3@20713>   MOVE.w #$C308,D1
00030162 <AmiBlitz3.ab3@20714>  BRA.w Atokejsr
00030164 <AmiBlitz3.ab3@20717> RTS
0003016C <AmiBlitz3.ab3@20721>   MOVE.w #$FFFF,lasta6
00030170 <AmiBlitz3.ab3@20726>   MOVEM.l D0-d7/A0-a6,-(A7)
00030178 <AmiBlitz3.ab3@20727>   MOVE.b #1,nostringopt
0003017E <AmiBlitz3.ab3@20728>   JSR searchinstr
00030180 <AmiBlitz3.ab3@20729>   MOVE.l A3,D1
00030182 <AmiBlitz3.ab3@20730>   SUB.l A2,D1
00030186 <AmiBlitz3.ab3@20731>   BSR.w Amakelibsub
0003018A <AmiBlitz3.ab3@20732>   MOVEM.l (A7)+,d0-d7/a0-a6
0003018C <AmiBlitz3.ab3@20733> RTS
00030192 <AmiBlitz3.ab3@20740>   MOVE.l libisat,-(A7)                                   ;library write
00030198 <AmiBlitz3.ab3@20741>   MOVE.l A2,libisat
0003019A <AmiBlitz3.ab3@20743>   MOVEA.l A1,A2
0003019C <AmiBlitz3.ab3@20744>   MOVE.w (A2)+,D1
000301A2 <AmiBlitz3.ab3@20745>   MOVE.l a2,lastinstructionaddr
000301A6 <AmiBlitz3.ab3@20746>   ANDI.w #$FF,D1
000301A8 <AmiBlitz3.ab3@20747>   ADDA.w D1,A2
000301AA <AmiBlitz3.ab3@20748>   EXG.l D0,A2
000301AC <AmiBlitz3.ab3@20749>   ADDQ.l #1,D0
000301B0 <AmiBlitz3.ab3@20750>   BCLR #$0,D0
000301B2 <AmiBlitz3.ab3@20751>   EXG.l D0,A2
000301B6 <AmiBlitz3.ab3@20752> BRA.w makelsub2
000301BC <AmiBlitz3.ab3@20756>   MOVE.l libisat,-(A7)
000301C2 <AmiBlitz3.ab3@20757>   MOVE.l A2,libisat
000301C4 <AmiBlitz3.ab3@20758>   MOVEA.l A3,A2
000301C8 <AmiBlitz3.ab3@20759> BRA.w makelsub2
000301CA <AmiBlitz3.ab3@20763>   MOVE.l a1,-(a7)
000301CC <AmiBlitz3.ab3@20766>   MOVE.l d0,a0
000301D0 <AmiBlitz3.ab3@20767>   MOVE.l $a(a0),d0
000301D2 <AmiBlitz3.ab3@20768>   MOVE.l d0,a1
000301DA <AmiBlitz3.ab3@20769>   CMP.l #8,4(a1)
000301DE <AmiBlitz3.ab3@20770>   BLE 'norec
000301E0 <AmiBlitz3.ab3@20771>   MOVE.l a0,-(a7)
000301E6 <AmiBlitz3.ab3@20772>   MOVE.l typebase,-(a7)
000301E8 <AmiBlitz3.ab3@20773>   MOVEQ #0,d0
000301EC <AmiBlitz3.ab3@20774>   MOVE.w 4(a0),d0
000301F2 <AmiBlitz3.ab3@20775>   ADD.l d0,typebase
000301F6 <AmiBlitz3.ab3@20776>   MOVE.l $4(a1),d0
000301FA <AmiBlitz3.ab3@20777>   BSR scantype
00030200 <AmiBlitz3.ab3@20778>   MOVE.l (a7)+,typebase
00030202 <AmiBlitz3.ab3@20779>   MOVE.l (a7)+,a0
00030208 <AmiBlitz3.ab3@20782>   CMP.l #newtype_string,d0
0003020C <AmiBlitz3.ab3@20783>   BNE 'nostring
00030212 <AmiBlitz3.ab3@20784>   ADDQ #2,a2offset
00030218 <AmiBlitz3.ab3@20785>   MOVE.l #$3f3c0000,d1
0003021A <AmiBlitz3.ab3@20786>   MOVEQ #0,d0
0003021E <AmiBlitz3.ab3@20787>   MOVE.w 4(a0),d0
00030224 <AmiBlitz3.ab3@20788>   ADD.l typebase,d0
00030226 <AmiBlitz3.ab3@20789>   MOVE.w d0,d1
0003022A <AmiBlitz3.ab3@20790>   BSR writelong
00030230 <AmiBlitz3.ab3@20791>   TST.b debugmode
00030234 <AmiBlitz3.ab3@20792>   BEQ 'l1a
00030236 <AmiBlitz3.ab3@20793>   MOVE.l d1,-(a7)
0003023C <AmiBlitz3.ab3@20794>   MOVE.l #$c308,d1
00030242 <AmiBlitz3.ab3@20795>   JSR Atokejsr
00030244 <AmiBlitz3.ab3@20796>   MOVE.l (a7)+,d1
00030248 <AmiBlitz3.ab3@20799>   TST.w 8(a0)
0003024C <AmiBlitz3.ab3@20800>   BEQ 'nostring
00030250 <AmiBlitz3.ab3@20801>   MOVEM.l d2/d3,-(a7)
00030252 <AmiBlitz3.ab3@20802>   MOVE.l d1,d2
00030254 <AmiBlitz3.ab3@20803>   MOVEQ #0,d3
00030258 <AmiBlitz3.ab3@20804>   MOVE.w 8(a0),d3
0003025A <AmiBlitz3.ab3@20805>   SUBQ.l #1,d3
0003025E <AmiBlitz3.ab3@20806>   BEQ 'nostring2
00030260 <AmiBlitz3.ab3@20809>   ADDQ.l #4,d2
00030262 <AmiBlitz3.ab3@20810>   MOVE.l d2,d1
00030266 <AmiBlitz3.ab3@20811>   BSR writelong
0003026C <AmiBlitz3.ab3@20812>   TST.b debugmode
00030270 <AmiBlitz3.ab3@20813>   BEQ 'l1
00030276 <AmiBlitz3.ab3@20814>   MOVE.l #$c308,d1
0003027C <AmiBlitz3.ab3@20815>   JSR Atokejsr
00030282 <AmiBlitz3.ab3@20818>   ADDQ #2,a2offset
00030284 <AmiBlitz3.ab3@20819>   SUBQ.l #1,d3
00030288 <AmiBlitz3.ab3@20820>   BNE 'loop
0003028C <AmiBlitz3.ab3@20823>   MOVEM.l (a7)+,d2/d3
0003028E <AmiBlitz3.ab3@20826>   MOVE.l (a0),d0
00030292 <AmiBlitz3.ab3@20827>   BNE 'more
00030294 <AmiBlitz3.ab3@20828>   MOVE.l (a7)+,a1
00030296 <AmiBlitz3.ab3@20829> RTS
0003029A <AmiBlitz3.ab3@20832> libisat:   Ds.l 1
000302A0 <AmiBlitz3.ab3@20838>   MOVE.l libisat,-(A7)                                   
000302A6 <AmiBlitz3.ab3@20839>   MOVE.l A2,libisat
000302AA <AmiBlitz3.ab3@20840>   LEA $6(A2,D1.L),A2
000302B2 <AmiBlitz3.ab3@20845>   CMP.l #$3e19436c,$1c-8(a2)                               ;clear type
000302B6 <AmiBlitz3.ab3@20846>   BEQ 'dowritevar
000302BE <AmiBlitz3.ab3@20847>   CMP.l #$3e18436f,$1c-8(a2)                               ;copy type
000302C2 <AmiBlitz3.ab3@20848>   BEQ 'dowritevar
000302CA <AmiBlitz3.ab3@20849>   CMP.l #$3e175265,$1c(a2)
000302CE <AmiBlitz3.ab3@20850>   BEQ 'dowritevar
000302D6 <AmiBlitz3.ab3@20851>   CMP.l #$3e165772,$1c(a2)
000302DA <AmiBlitz3.ab3@20852>   BNE 'nowritef
000302DE <AmiBlitz3.ab3@20855>   MOVEM.l a0-a2/d2,-(a7)
000302E0 <AmiBlitz3.ab3@20856>   MOVEQ #0,d1
000302EA <AmiBlitz3.ab3@20857>   MOVE.l #0,typebase
000302EE <AmiBlitz3.ab3@20858>   MOVE.l $a(a3),a0
000302F2 <AmiBlitz3.ab3@20859>   MOVE.l $4(a0),d0
000302F8 <AmiBlitz3.ab3@20860>   CMP.l #8,d0
000302FC <AmiBlitz3.ab3@20861>   BLE 'notype
00030300 <AmiBlitz3.ab3@20862>   BSR scantype
00030306 <AmiBlitz3.ab3@20865>   MOVE.l #$3f3c0000,d1
0003030C <AmiBlitz3.ab3@20866>   MOVE.w a2offset,d1
00030310 <AmiBlitz3.ab3@20867>   BSR writelong
00030316 <AmiBlitz3.ab3@20868>   MOVE.l #$3f3c0000,d1
0003031A <AmiBlitz3.ab3@20869>   MOVE.l $a(a3),a0
0003031E <AmiBlitz3.ab3@20870>   MOVE.w 8(a0),d1
00030322 <AmiBlitz3.ab3@20871>   BSR writelong
00030328 <AmiBlitz3.ab3@20872>   MOVE.l #$3f3cab12,d1
0003032C <AmiBlitz3.ab3@20873>   BSR writelong
00030332 <AmiBlitz3.ab3@20874>   ADDQ.w #6,a2offset
00030336 <AmiBlitz3.ab3@20875>   MOVEM.l (a7)+,a0-a2/d2
0003033C <AmiBlitz3.ab3@20878>   TST.b fpu
00030340 <AmiBlitz3.ab3@20879>   BEQ 'nofpu2
00030348 <AmiBlitz3.ab3@20880>   CMP.l #$496e7400,$1a(a2)
0003034C <AmiBlitz3.ab3@20881>   BNE 'noint
0003034E <AmiBlitz3.ab3@20882>   MOVEQ #0,d1
00030354 <AmiBlitz3.ab3@20883>   SUBQ.l #8,destpointer                                    ;fpu int
0003035A <AmiBlitz3.ab3@20884>   CLR.w a2offset
0003035E <AmiBlitz3.ab3@20885>   CMP.b #2,d2
00030362 <AmiBlitz3.ab3@20886>   BGT 'noword
00030366 <AmiBlitz3.ab3@20887>   MOVE.w #$48c0,d1
0003036C <AmiBlitz3.ab3@20888>   OR.w regnumstore,d1
00030370 <AmiBlitz3.ab3@20889>   BSR writeword
00030374 <AmiBlitz3.ab3@20890>  BRA 'exit2
00030378 <AmiBlitz3.ab3@20893>    CMP.b #3,d2
0003037C <AmiBlitz3.ab3@20894>         BNE 'nolong
00030380 <AmiBlitz3.ab3@20895>  BRA 'exit2
00030384 <AmiBlitz3.ab3@20898>    CMP.b #4,d2
00030388 <AmiBlitz3.ab3@20899>         BNE 'noquick
0003038C <AmiBlitz3.ab3@20900>         MOVE.w #$e080,d1
00030392 <AmiBlitz3.ab3@20901>         OR.w regnumstore,d1
00030396 <AmiBlitz3.ab3@20902>         BSR writeword
0003039A <AmiBlitz3.ab3@20903>         MOVE.w #$e080,d1
000303A0 <AmiBlitz3.ab3@20904>         OR.w regnumstore,d1
000303A4 <AmiBlitz3.ab3@20905>         BSR writeword
000303A8 <AmiBlitz3.ab3@20906>  BRA 'exit2
000303AA <AmiBlitz3.ab3@20909>         MOVEQ #0,d0
000303AC <AmiBlitz3.ab3@20910>         MOVEQ #0,d1
000303B2 <AmiBlitz3.ab3@20911>         MOVE.w regnumstore,d0
000303B4 <AmiBlitz3.ab3@20912>         ASL.l #7,d0
000303BA <AmiBlitz3.ab3@20913>         OR.l #$f23c4428,d1                                 ;fsub.s 0.5,fpx
000303BC <AmiBlitz3.ab3@20914>         OR.l d0,d1
000303C2 <AmiBlitz3.ab3@20916>         MOVE.l #$3f000000,d1
000303C4 <AmiBlitz3.ab3@20918>         MOVEQ #0,d0
000303C6 <AmiBlitz3.ab3@20919>         MOVEQ #0,d1
000303CC <AmiBlitz3.ab3@20920>         MOVE.w regnumstore,d0
000303CE <AmiBlitz3.ab3@20921>         ASL.l #7,d0
000303D0 <AmiBlitz3.ab3@20922>         MOVE.l d0,d1
000303D6 <AmiBlitz3.ab3@20923>         OR.l #$f2000003,d1                                 ;fintrz fpx
000303D8 <AmiBlitz3.ab3@20924>         ASL.l #3,d0
000303DA <AmiBlitz3.ab3@20925>         OR.l d0,d1
000303DE <AmiBlitz3.ab3@20926>         BSR writelong
000303E0 <AmiBlitz3.ab3@20927>         MOVEQ #0,d0
000303E6 <AmiBlitz3.ab3@20928>         MOVE.w regnumstore,d0
000303E8 <AmiBlitz3.ab3@20929>         ASL.l #7,d0
000303EE <AmiBlitz3.ab3@20930>         MOVE.l #$f2006000,d1                               ;fmove.l fp0,d0
000303F0 <AmiBlitz3.ab3@20931>         OR.l d0,d1
000303F2 <AmiBlitz3.ab3@20932>         ASL.l #1,d0
000303F4 <AmiBlitz3.ab3@20933>         ASL.l #8,d0
000303F6 <AmiBlitz3.ab3@20934>         OR.l d0,d1
000303FA <AmiBlitz3.ab3@20935>  BRA 'exit
00030400 <AmiBlitz3.ab3@20938>   CMP.w #$3c01,24(a2)
00030404 <AmiBlitz3.ab3@20939>   BNE 'noval
00030406 <AmiBlitz3.ab3@20940>   MOVE.l a2,-(a7)
0003040A <AmiBlitz3.ab3@20941>   BSR.w makelsub3
0003040C <AmiBlitz3.ab3@20942>   MOVE.l (a7)+,a2
00030410 <AmiBlitz3.ab3@20943>  BRA 'exit2
00030418 <AmiBlitz3.ab3@20960>   CMP.l #$41627300,$1a(a2)
0003041C <AmiBlitz3.ab3@20961>   BNE 'noabs
0003041E <AmiBlitz3.ab3@20962>   MOVEQ #0,d1
00030424 <AmiBlitz3.ab3@20963>   MOVE.w regnumstore,d1
00030426 <AmiBlitz3.ab3@20964>   MOVE.w d1,d0
00030428 <AmiBlitz3.ab3@20965>   ASL.w #7,d1
0003042A <AmiBlitz3.ab3@20966>   ASL.w #8,d0
0003042C <AmiBlitz3.ab3@20967>   ASL.w #2,d0
0003042E <AmiBlitz3.ab3@20968>   OR.w d0,d1
00030434 <AmiBlitz3.ab3@20969>   SUBQ.l #8,destpointer                                    ;fpu abs
00030438 <AmiBlitz3.ab3@20970>   MOVEM.l d3/d1,-(a7)
0003043C <AmiBlitz3.ab3@20971>   MOVE.w #5,d3
0003043E <AmiBlitz3.ab3@20972>   EXG d2,d3
00030444 <AmiBlitz3.ab3@20973>   MOVE.w regnum,-(a7)
0003044E <AmiBlitz3.ab3@20974>   MOVE.w regnumstore,regnum
00030452 <AmiBlitz3.ab3@20975>   BSR writeconvertcode
00030458 <AmiBlitz3.ab3@20976>   MOVE.w (a7)+,regnum
0003045A <AmiBlitz3.ab3@20977>   EXG d2,d3
0003045E <AmiBlitz3.ab3@20978>   MOVEM.l (a7)+,d3/d1
00030464 <AmiBlitz3.ab3@20979>   OR.l #$f2000018,d1
0003046A <AmiBlitz3.ab3@20980>   CLR.w a2offset
0003046E <AmiBlitz3.ab3@20981>  BRA 'exit
00030472 <AmiBlitz3.ab3@20984>   CMP.b #5,d2
00030476 <AmiBlitz3.ab3@20985>   BNE 'nofpu2
0003047A <AmiBlitz3.ab3@20986>   MOVE.b 24(a2),d0
0003047E <AmiBlitz3.ab3@20987>   CMP.b #$60,d0                                            ;nolib $edxx
00030482 <AmiBlitz3.ab3@20988>   BNE 'nofpu
00030484 <AmiBlitz3.ab3@20989>   MOVEQ #0,d1
0003048A <AmiBlitz3.ab3@20990>   MOVE.w regnumstore,d1
0003048C <AmiBlitz3.ab3@20991>   MOVE.w d1,d0
0003048E <AmiBlitz3.ab3@20992>   ASL.w #7,d1
00030490 <AmiBlitz3.ab3@20993>   ASL.w #8,d0
00030492 <AmiBlitz3.ab3@20994>   ASL.w #2,d0
00030494 <AmiBlitz3.ab3@20995>   OR.w d0,d1
00030498 <AmiBlitz3.ab3@20996>   MOVE.b 25(a2),d0
0003049C <AmiBlitz3.ab3@20997>   CMP.b #5,d0
000304A0 <AmiBlitz3.ab3@20998>   BNE 'nocos
000304A6 <AmiBlitz3.ab3@20999>   OR.l #$f200001d,d1                                       ;fpu cos
000304AA <AmiBlitz3.ab3@21000>  BRA 'exit
000304AE <AmiBlitz3.ab3@21003>   CMP.b #$c,d0
000304B2 <AmiBlitz3.ab3@21004>   BNE 'nosqr
000304B8 <AmiBlitz3.ab3@21005>   OR.l #$f2000004,d1                                       ;fpu sqr
000304BC <AmiBlitz3.ab3@21006>  BRA 'exit
000304C0 <AmiBlitz3.ab3@21009>   CMP.b #$d,d0
000304C4 <AmiBlitz3.ab3@21010>   BNE 'notan
000304CA <AmiBlitz3.ab3@21011>   OR.l #$f200000f,d1                                       ;fpu tan
000304CE <AmiBlitz3.ab3@21012>  BRA 'exit
000304D2 <AmiBlitz3.ab3@21015>   CMP.b #$a,d0
000304D6 <AmiBlitz3.ab3@21016>   BNE 'nosin
000304DC <AmiBlitz3.ab3@21017>   OR.l #$f200000e,d1                                       ;fpu sin
000304E0 <AmiBlitz3.ab3@21018>  BRA 'exit
000304E4 <AmiBlitz3.ab3@21021>   CMP.b #$3,d0
000304E8 <AmiBlitz3.ab3@21022>   BNE 'noasin
000304EE <AmiBlitz3.ab3@21023>   OR.l #$f200000c,d1                                       ;fpu asin
000304F2 <AmiBlitz3.ab3@21024>  BRA 'exit
000304F6 <AmiBlitz3.ab3@21027>   CMP.b #$2,d0
000304FA <AmiBlitz3.ab3@21028>   BNE 'noacos
00030500 <AmiBlitz3.ab3@21029>   OR.l #$f200001c,d1                                       ;fpu acos
00030504 <AmiBlitz3.ab3@21030>  BRA 'exit
00030508 <AmiBlitz3.ab3@21033>   CMP.b #$4,d0
0003050C <AmiBlitz3.ab3@21034>   BNE 'noatan
00030512 <AmiBlitz3.ab3@21035>   OR.l #$f200000a,d1                                       ;fpu atan
00030516 <AmiBlitz3.ab3@21036>  BRA 'exit
0003051A <AmiBlitz3.ab3@21039>   CMP.b #$e,d0
0003051E <AmiBlitz3.ab3@21040>   BNE 'nohtan
00030524 <AmiBlitz3.ab3@21041>   OR.l #$f2000009,d1                                       ;fpu htan
00030528 <AmiBlitz3.ab3@21042>  BRA 'exit
0003052C <AmiBlitz3.ab3@21045>   CMP.b #$6,d0
00030530 <AmiBlitz3.ab3@21046>   BNE 'nohcos
00030536 <AmiBlitz3.ab3@21047>   OR.l #$f2000019,d1                                       ;fpu hcos
0003053A <AmiBlitz3.ab3@21048>  BRA 'exit
0003053E <AmiBlitz3.ab3@21051>   CMP.b #$b,d0
00030542 <AmiBlitz3.ab3@21052>   BNE 'nohsin
00030548 <AmiBlitz3.ab3@21053>   OR.l #$f2000002,d1                                       ;fpu hsin
0003054C <AmiBlitz3.ab3@21054>  BRA 'exit
00030550 <AmiBlitz3.ab3@21057>   CMP.b #$9,d0
00030554 <AmiBlitz3.ab3@21058>   BNE 'nolog
0003055A <AmiBlitz3.ab3@21059>   OR.l #$f2000014,d1                                       ;fpu log
0003055E <AmiBlitz3.ab3@21060>  BRA 'exit
00030562 <AmiBlitz3.ab3@21063>   CMP.b #$8,d0
00030566 <AmiBlitz3.ab3@21064>   BNE 'nolog10
0003056C <AmiBlitz3.ab3@21065>   OR.l #$f2000015,d1                                       ;fpu log10
00030570 <AmiBlitz3.ab3@21066>  BRA 'exit
00030574 <AmiBlitz3.ab3@21069>   CMP.b #$7,d0
00030578 <AmiBlitz3.ab3@21070>   BNE 'noexp
0003057E <AmiBlitz3.ab3@21071>   OR.l #$f2000010,d1                                       ;fpu exp
00030582 <AmiBlitz3.ab3@21072>  BRA 'exit
00030588 <AmiBlitz3.ab3@21075>   LEA fpuerr,a0
0003058A <AmiBlitz3.ab3@21076>   MOVE.l a0,-(a7)
00030590 <AmiBlitz3.ab3@21077>  JMP handle_compileerror
00030594 <AmiBlitz3.ab3@21081>   CMP.b #$3c,d0
00030598 <AmiBlitz3.ab3@21082>   BNE 'nofpu2
0003059A <AmiBlitz3.ab3@21083>   MOVEQ #0,d1
000305A0 <AmiBlitz3.ab3@21084>       MOVE.w regnumstore,d1
000305A2 <AmiBlitz3.ab3@21085>       MOVE.w d1,d0
000305A4 <AmiBlitz3.ab3@21086>       ASL.w #7,d1
000305A6 <AmiBlitz3.ab3@21087>       ASL.w #8,d0
000305A8 <AmiBlitz3.ab3@21088>       ASL.w #2,d0
000305AA <AmiBlitz3.ab3@21089>       OR.w d0,d1
000305B0 <AmiBlitz3.ab3@21090>       CMP.b #$03,25(a2)
000305B4 <AmiBlitz3.ab3@21091>       BNE 'nosgn
000305BA <AmiBlitz3.ab3@21094>       SUBQ.l #8,destpointer                                ;fpu sgn
000305C0 <AmiBlitz3.ab3@21095>         OR.l #$f200003a,d1
000305C4 <AmiBlitz3.ab3@21096>         BSR writelong
000305CA <AmiBlitz3.ab3@21097>         CLR.w a2offset
000305D0 <AmiBlitz3.ab3@21098>          MOVE.l #$F28E0006,d1
000305D4 <AmiBlitz3.ab3@21099>          BSR writelong
000305DA <AmiBlitz3.ab3@21100>   MOVE.l #$7000600a,d1
000305DE <AmiBlitz3.ab3@21101>   BSR writelong
000305E4 <AmiBlitz3.ab3@21102>   MOVE.l #$70014840,d1
000305E8 <AmiBlitz3.ab3@21103>   BSR writelong
000305EE <AmiBlitz3.ab3@21104>   MOVE.l #$F292,d1
000305F2 <AmiBlitz3.ab3@21105>   BSR writeword
000305F8 <AmiBlitz3.ab3@21106>   MOVE.l #$000470FF,d1
000305FC <AmiBlitz3.ab3@21107>  BRA 'exit
00030604 <AmiBlitz3.ab3@21110>   CMP.l #"Frac",$1a(a2)
00030608 <AmiBlitz3.ab3@21111>   BNE 'nofrac
0003060E <AmiBlitz3.ab3@21112>  JMP notwork
00030612 <AmiBlitz3.ab3@21153>  BRA 'exit
00030616 <AmiBlitz3.ab3@21158>   BSR.w makelsub3                                          ;write lib code
0003061C <AmiBlitz3.ab3@21159>   MOVE.l (A7)+,libisat
0003061E <AmiBlitz3.ab3@21160>  RTS
00030622 <AmiBlitz3.ab3@21164>   BSR writelong
00030628 <AmiBlitz3.ab3@21167>   MOVE.l (A7)+,libisat
0003062A <AmiBlitz3.ab3@21168> RTS
0003062E <AmiBlitz3.ab3@21172>   BSR.w fetchregs
00030634 <AmiBlitz3.ab3@21174>   TST.b debugmode
00030638 <AmiBlitz3.ab3@21175>    BEQ.w 'norerr
0003063A <AmiBlitz3.ab3@21177>   MOVE.l (A2),D1
0003063E <AmiBlitz3.ab3@21178>   OR.l $8(A2),D1
00030642 <AmiBlitz3.ab3@21179>   BCLR #$0,D1
00030644 <AmiBlitz3.ab3@21180>   TST.l D1
00030648 <AmiBlitz3.ab3@21181>    BEQ.w 'norerr
0003064A <AmiBlitz3.ab3@21183>   MOVE.l (A2)+,D1
0003064E <AmiBlitz3.ab3@21184>   BTST #$0,D1
00030652 <AmiBlitz3.ab3@21185>    BEQ.w 'skiptt
00030658 <AmiBlitz3.ab3@21186>   TST.w blitzmode
0003065C <AmiBlitz3.ab3@21187>    BPL.w blitzerr
00030662 <AmiBlitz3.ab3@21188>   TST.b debugmode
00030666 <AmiBlitz3.ab3@21189>    BEQ.w 'skiptt2
00030668 <AmiBlitz3.ab3@21190>   MOVE.l D1,-(A7)
0003066C <AmiBlitz3.ab3@21191>   MOVE.w #$C311,D1   ; was #inblitz,
00030670 <AmiBlitz3.ab3@21192>    BSR.w makebtst
00030672 <AmiBlitz3.ab3@21193>   MOVE.l (A7)+,D1
00030676 <AmiBlitz3.ab3@21196>   BCLR #$0,D1
00030678 <AmiBlitz3.ab3@21199>   TST.l D1
0003067C <AmiBlitz3.ab3@21201>    BSR.w doajsr
0003067E <AmiBlitz3.ab3@21202>   MOVE.l (A2)+,D1
00030682 <AmiBlitz3.ab3@21203>    BSR.w doajsrrout
00030684 <AmiBlitz3.ab3@21204>   MOVE.l (A2)+,D1
00030688 <AmiBlitz3.ab3@21205>    BSR.w doajsr
0003068C <AmiBlitz3.ab3@21206>  BRA.w 'more
00030692 <AmiBlitz3.ab3@21209>   BTST #$0,$3(A2)
00030696 <AmiBlitz3.ab3@21210>    BEQ.w 'penis
0003069A <AmiBlitz3.ab3@21214>   MOVE.w blitzmode(PC),D1
0003069E <AmiBlitz3.ab3@21215>    BPL.w blitzerr
000306A2 <AmiBlitz3.ab3@21218>   MOVE.l $4(A2),D1
000306A6 <AmiBlitz3.ab3@21219>    BSR.w doajsrrout
000306AC <AmiBlitz3.ab3@21222>   MOVEA.l libisat,A2
000306AE <AmiBlitz3.ab3@21223> RTS
000306B2 <AmiBlitz3.ab3@21230>   BTST #$0,D1
000306B6 <AmiBlitz3.ab3@21231>    BEQ.w 'doajsr
000306BC <AmiBlitz3.ab3@21232>   TST.w blitzmode
000306C0 <AmiBlitz3.ab3@21233>    BMI.w amigaerr
000306C6 <AmiBlitz3.ab3@21234>   TST.b debugmode
000306CA <AmiBlitz3.ab3@21235>    BEQ.w 'doajsr2      
000306CC <AmiBlitz3.ab3@21236>   MOVE.l D1,-(A7)
000306D0 <AmiBlitz3.ab3@21237>   MOVE.w #$C312,D1     ; #inamiga,
000306D4 <AmiBlitz3.ab3@21238>    BSR.w makebtst
000306D6 <AmiBlitz3.ab3@21239>   MOVE.l (A7)+,D1
000306DA <AmiBlitz3.ab3@21242>   BCLR #$0,D1
000306DC <AmiBlitz3.ab3@21245>   TST.l D1
000306E0 <AmiBlitz3.ab3@21248>    BEQ.w 'skip
000306E2 <AmiBlitz3.ab3@21249>   MOVE.l A1,-(A7)
000306E6 <AmiBlitz3.ab3@21250>    BSR.w doajsr2
000306E8 <AmiBlitz3.ab3@21251>   MOVEA.l (A7)+,A1
000306EA <AmiBlitz3.ab3@21254> RTS
000306F0 <AmiBlitz3.ab3@21258>   MOVEA.l libisat,A0
000306F6 <AmiBlitz3.ab3@21259>   TST.w cfetchmode
000306FA <AmiBlitz3.ab3@21260>    BEQ.w 'nfetch
000306FC <AmiBlitz3.ab3@21261>   ADD.l A0,D1
000306FE <AmiBlitz3.ab3@21262>   MOVE.l D1,-(A7)
00030702 <AmiBlitz3.ab3@21263>   MOVE.w #$4EB9,D1
00030706 <AmiBlitz3.ab3@21264>    BSR.w writeword
00030708 <AmiBlitz3.ab3@21265>   MOVE.l (A7)+,D1
0003070C <AmiBlitz3.ab3@21266>  BRA.w writelong
00030710 <AmiBlitz3.ab3@21273>   LEA $0(A0,D1.L),A1
00030716 <AmiBlitz3.ab3@21274>   CLR.w inline
0003071A <AmiBlitz3.ab3@21277>   CMPI.b #$A0,(A1)+
0003071E <AmiBlitz3.ab3@21278>    BNE.w 'ugly
00030720 <AmiBlitz3.ab3@21279>   TST.b (A1)+
00030724 <AmiBlitz3.ab3@21280>    BEQ.w 'iszero
0003072A <AmiBlitz3.ab3@21281>   CMPI.b #$1,-$1(A1)
0003072E <AmiBlitz3.ab3@21282>    BEQ.w 'isone
00030734 <AmiBlitz3.ab3@21286>   MOVE.w (A1)+,inline
00030736 <AmiBlitz3.ab3@21287>   ADDQ.l #4,D1
0003073A <AmiBlitz3.ab3@21288>  BRA.w 'cute
00030740 <AmiBlitz3.ab3@21293>   TST.w blitzmode
00030744 <AmiBlitz3.ab3@21294>    BPL.w 'inamiga
0003074A <AmiBlitz3.ab3@21296>   TST.b debugmode
0003074E <AmiBlitz3.ab3@21297>    BEQ.w 'nobrerr
00030752 <AmiBlitz3.ab3@21298>   MOVE.w #$C311,D1       ; was #inblitz,
00030756 <AmiBlitz3.ab3@21299>    BSR.w makebtst
00030758 <AmiBlitz3.ab3@21302>   MOVE.l (A1)+,D1
0003075C <AmiBlitz3.ab3@21303>   LEA $0(A0,D1.L),A1
00030760 <AmiBlitz3.ab3@21304>  BRA.w 'cute
00030766 <AmiBlitz3.ab3@21307>   TST.b debugmode
0003076A <AmiBlitz3.ab3@21308>    BEQ.w 'noarerr        
0003076C <AmiBlitz3.ab3@21309>   MOVE.l D1,-(A7)
00030770 <AmiBlitz3.ab3@21310>   MOVE.w #$C312,D1       ; was #inamiga,
00030774 <AmiBlitz3.ab3@21311>    BSR.w makebtst
00030776 <AmiBlitz3.ab3@21312>   MOVE.l (A7)+,D1
00030778 <AmiBlitz3.ab3@21315>   ADDQ.w #4,A1
0003077A <AmiBlitz3.ab3@21316>   ADDQ.l #6,D1
0003077E <AmiBlitz3.ab3@21317>  BRA.w 'cute
00030784 <AmiBlitz3.ab3@21320>   TST.w inline
00030788 <AmiBlitz3.ab3@21321>    BEQ.w 'notin
0003078A <AmiBlitz3.ab3@21323>   SUBQ.w #1,A1
0003078C <AmiBlitz3.ab3@21324>   MOVEA.l A1,A0
00030790 <AmiBlitz3.ab3@21325>   ADDA.w inline(PC),A1
00030794 <AmiBlitz3.ab3@21326>  BRA.w pokecode2
00030798 <AmiBlitz3.ab3@21329>   MOVEM.l a0/D1,-(A7)          ; was  d1,-(a7)
0003079E <AmiBlitz3.ab3@21331>   TST.w debugversion
000307A2 <AmiBlitz3.ab3@21332>   BEQ 'l11
000307AA <AmiBlitz3.ab3@21333>   BTST #$7,link_debuginfo
000307AE <AmiBlitz3.ab3@21334>   BEQ.w 'l11
000307B4 <AmiBlitz3.ab3@21335>   MOVE.l lastinstruction,d1
000307B8 <AmiBlitz3.ab3@21336>   BEQ 'l11
000307BE <AmiBlitz3.ab3@21337>   CLR.l lastinstruction
000307C4 <AmiBlitz3.ab3@21338>   CMP.l #$e000,d1
000307C8 <AmiBlitz3.ab3@21339>   BGE 'ln99
000307CE <AmiBlitz3.ab3@21340>   LEA notf,a0
000307D4 <AmiBlitz3.ab3@21341>   CMP.l #$c601,d1
000307D8 <AmiBlitz3.ab3@21342>   BNE 'ln1
000307DE <AmiBlitz3.ab3@21343>   LEA strcpy,a0
000307E2 <AmiBlitz3.ab3@21344>  BRA 'ln3
000307E8 <AmiBlitz3.ab3@21347>   CMP.l #$c700,d1
000307EC <AmiBlitz3.ab3@21348>   BNE 'ln2
000307F2 <AmiBlitz3.ab3@21349>   LEA strvar,a0
000307F6 <AmiBlitz3.ab3@21350>  BRA 'ln3
000307FC <AmiBlitz3.ab3@21353>   CMP.l #$ce00,d1
00030800 <AmiBlitz3.ab3@21354>   BNE 'ln4
00030806 <AmiBlitz3.ab3@21355>   LEA strcmp,a0
0003080A <AmiBlitz3.ab3@21356>  BRA 'ln3
00030810 <AmiBlitz3.ab3@21359>   CMP.l #$ca00,d1
00030814 <AmiBlitz3.ab3@21360>   BNE 'ln5
0003081A <AmiBlitz3.ab3@21361>   LEA qmul,a0
0003081E <AmiBlitz3.ab3@21362>  BRA 'ln3
00030824 <AmiBlitz3.ab3@21365>   CMP.l #$d000,d1
00030828 <AmiBlitz3.ab3@21366>      BNE 'ln6
0003082E <AmiBlitz3.ab3@21367>      LEA _MaxLen,a0
00030832 <AmiBlitz3.ab3@21368>  BRA 'ln3
00030838 <AmiBlitz3.ab3@21371>   CMP.l #$cb00,d1
0003083C <AmiBlitz3.ab3@21372>   BNE 'ln3
00030842 <AmiBlitz3.ab3@21373>   LEA qdiv,a0
00030846 <AmiBlitz3.ab3@21374>  BRA 'ln3
00030848 <AmiBlitz3.ab3@21377>   MOVE.l d1,a0
0003084C <AmiBlitz3.ab3@21378>   LEA $8(a0),a0
00030850 <AmiBlitz3.ab3@21381>   CMP.w #$ffff,(a0)+
00030854 <AmiBlitz3.ab3@21382>   BNE 'l1
00030858 <AmiBlitz3.ab3@21383>   LEA 6(a0),a0
0003085C <AmiBlitz3.ab3@21386>   MOVEM.l a1/a2/d7/d2,-(a7)
0003085E <AmiBlitz3.ab3@21387>   MOVEQ #0,d2
00030864 <AmiBlitz3.ab3@21388>   LEA ptr_parameterstore,a1
00030866 <AmiBlitz3.ab3@21391>   ADDQ.l #1,d2
00030868 <AmiBlitz3.ab3@21392>   MOVE.b (a0)+,d0
0003086C <AmiBlitz3.ab3@21393> 
00030870 <AmiBlitz3.ab3@21394>   BNE 'nodollar
00030874 <AmiBlitz3.ab3@21395>   MOVE.b #"S",d0
00030878 <AmiBlitz3.ab3@21398>   CMP.b #"?",d0
0003087C <AmiBlitz3.ab3@21399>   BEQ 'nolabelwrite
0003087E <AmiBlitz3.ab3@21400>   MOVE.b d0,(a1)+
00030882 <AmiBlitz3.ab3@21401>   BNE 'l2
00030888 <AmiBlitz3.ab3@21402>   MOVE.w #"__",-1(a1)
0003088A <AmiBlitz3.ab3@21403>   ADDQ.l #2,d2
0003088E <AmiBlitz3.ab3@21404>   CLR.b 1(a1)
00030894 <AmiBlitz3.ab3@21405>   JSR findlabel2
00030898 <AmiBlitz3.ab3@21406>   BEQ 'l3
0003089E <AmiBlitz3.ab3@21407>   JSR addlabelhash
000308A2 <AmiBlitz3.ab3@21410>   CLR.l 4(a2)
000308A6 <AmiBlitz3.ab3@21411>   MOVE.l $14(a7),a0
000308AA <AmiBlitz3.ab3@21412>   MOVE.l $10(a7),d1
000308AE <AmiBlitz3.ab3@21413>   SUB.l $12(a0),d1
000308B2 <AmiBlitz3.ab3@21414>   ADD.l $28(a0),d1
000308B6 <AmiBlitz3.ab3@21415>   MOVE.l d1,8(a2)
000308BA <AmiBlitz3.ab3@21418>   MOVEM.l (a7)+,a1/a2/d7/d2
000308C0 <AmiBlitz3.ab3@21421>   TST.b typecheck
000308C4 <AmiBlitz3.ab3@21422>   BEQ 'p1
000308CA <AmiBlitz3.ab3@21423>   MOVE.l lasttoken,d1
000308D0 <AmiBlitz3.ab3@21424>   CMP.l #$da01,d1                                          ;poke
000308D4 <AmiBlitz3.ab3@21425>   BEQ 'lp1
000308DA <AmiBlitz3.ab3@21426>   CMP.l #$da02,d1                                          ;peek
000308DE <AmiBlitz3.ab3@21427>   BNE 'p1
000308E4 <AmiBlitz3.ab3@21430>   TST.b peekaddrsize
000308E8 <AmiBlitz3.ab3@21431>   BEQ 'p1
000308F0 <AmiBlitz3.ab3@21432>   CMP.b #3,peekaddrsize
000308F4 <AmiBlitz3.ab3@21433>   BNE errormsg_onlylong
000308FA <AmiBlitz3.ab3@21434>   CLR.b peekaddrsize
00030900 <AmiBlitz3.ab3@21442>    TST.b fpu
00030904 <AmiBlitz3.ab3@21443>   BNE 'optf
0003090A <AmiBlitz3.ab3@21444>   TST.b fast
0003090E <AmiBlitz3.ab3@21445>   BEQ 'l10
00030916 <AmiBlitz3.ab3@21451>   CMP.l #"Poke",20(a2)                                     ;poke
0003091A <AmiBlitz3.ab3@21452>   BNE 'peekopt
0003091E <AmiBlitz3.ab3@21453>   TST.b 24(a2)
00030922 <AmiBlitz3.ab3@21454>   BNE 'peekopt
00030926 <AmiBlitz3.ab3@21455>   CMP.b #3,d2
0003092A <AmiBlitz3.ab3@21456>   BNE 'lw1
00030930 <AmiBlitz3.ab3@21459>   MOVE.l #$21821990,d1
00030934 <AmiBlitz3.ab3@21460>  BRA.s 'exitjsr
00030938 <AmiBlitz3.ab3@21463>   CMP.b #2,d2
0003093C <AmiBlitz3.ab3@21464>   BNE 'lb1
00030942 <AmiBlitz3.ab3@21465>   MOVE.l #$31821990,d1
00030946 <AmiBlitz3.ab3@21466>  BRA.s 'exitjsr
0003094A <AmiBlitz3.ab3@21469>   CMP.b #1,d2
0003094E <AmiBlitz3.ab3@21470>   BNE 'lp3
00030954 <AmiBlitz3.ab3@21471>   MOVE.l #$11821990,d1
00030958 <AmiBlitz3.ab3@21472>  BRA.s 'exitjsr
0003095C <AmiBlitz3.ab3@21475>   CMP.b #5,d2
00030960 <AmiBlitz3.ab3@21476>     BNE 'l10
00030966 <AmiBlitz3.ab3@21477>     TST.b fpu
0003096A <AmiBlitz3.ab3@21478>     BEQ 'll1
00030970 <AmiBlitz3.ab3@21479>      MOVE.l destpointer,a4
00030978 <AmiBlitz3.ab3@21480>     CMP.l #$f22d4500,-6(a4)
0003097C <AmiBlitz3.ab3@21481>     BNE 'noglob
00030982 <AmiBlitz3.ab3@21482>     TST.b doublepeek
00030986 <AmiBlitz3.ab3@21483>     BNE 'noglob
0003098C <AmiBlitz3.ab3@21484>     MOVE.w -2(a4),-4(a4)
00030992 <AmiBlitz3.ab3@21485>     MOVE.w #$21ad,-6(a4)
00030998 <AmiBlitz3.ab3@21486>     MOVE.w #$1990,-2(a4)
000309A0 <AmiBlitz3.ab3@21487>     MOVE.w #9,peeksize
000309A2 <AmiBlitz3.ab3@21488>     ADDQ #8,a7
000309A4 <AmiBlitz3.ab3@21489>  RTS
000309AC <AmiBlitz3.ab3@21492>     CMP.l #$f22c4500,-6(a4)
000309B0 <AmiBlitz3.ab3@21493>     BNE 'nolocal
000309B6 <AmiBlitz3.ab3@21494>     MOVE.w -2(a4),-4(a4)
000309BC <AmiBlitz3.ab3@21495>     TST.b doublepeek                                       ;dont move longfix on double floats
000309C0 <AmiBlitz3.ab3@21496>     BNE 'nolocal
000309C6 <AmiBlitz3.ab3@21497>     MOVE.w #$21ac,-6(a4)
000309CC <AmiBlitz3.ab3@21498>     MOVE.w #$1990,-2(a4)
000309D4 <AmiBlitz3.ab3@21499>     MOVE.w #9,peeksize
000309D6 <AmiBlitz3.ab3@21500>     ADDQ #8,a7
000309D8 <AmiBlitz3.ab3@21501>  RTS
000309DC <AmiBlitz3.ab3@21504>     MOVE.w #$f230,d1
000309E0 <AmiBlitz3.ab3@21505>     BSR writeword
000309E6 <AmiBlitz3.ab3@21506>   MOVE.l #$65001990,d1
000309EC <AmiBlitz3.ab3@21507>   TST.b doublepeek
000309F0 <AmiBlitz3.ab3@21508>   BEQ 'exitjsr
000309F6 <AmiBlitz3.ab3@21509>   OR.l   #$10000000,d1
000309F8 <AmiBlitz3.ab3@21512>   ADDQ #8,a7
00030A00 <AmiBlitz3.ab3@21513>   MOVE.w #9,peeksize
00030A04 <AmiBlitz3.ab3@21514>  BRA writelong
00030A0C <AmiBlitz3.ab3@21517>   CMP.l #"Peek",20(a2)
00030A10 <AmiBlitz3.ab3@21518>   BNE 'l10
00030A14 <AmiBlitz3.ab3@21519>   TST.b 24(a2)
00030A18 <AmiBlitz3.ab3@21520>   BNE 'l10
00030A20 <AmiBlitz3.ab3@21521>   CMP.w #7,peeksize
00030A24 <AmiBlitz3.ab3@21522>   BEQ 'l10
00030A2C <AmiBlitz3.ab3@21523>    CMP.w #3,peeksize
00030A30 <AmiBlitz3.ab3@21524>    BNE.s 'lw1a
00030A36 <AmiBlitz3.ab3@21527>   MOVE.l #$20301990,d1
00030A3A <AmiBlitz3.ab3@21528>  BRA 'exitjsr
00030A42 <AmiBlitz3.ab3@21531>   CMP.w #2,peeksize
00030A46 <AmiBlitz3.ab3@21532>    BNE.s 'lb1a
00030A4C <AmiBlitz3.ab3@21533>    MOVE.l #$30301990,d1
00030A50 <AmiBlitz3.ab3@21534>  BRA 'exitjsr
00030A58 <AmiBlitz3.ab3@21537>   CMP.w #1,peeksize
00030A5C <AmiBlitz3.ab3@21538>    BNE.s 'lf1
00030A62 <AmiBlitz3.ab3@21539>    MOVE.l #$10301990,d1
00030A66 <AmiBlitz3.ab3@21540>  BRA 'exitjsr
00030A6E <AmiBlitz3.ab3@21543>   CMP.w #5,peeksize
00030A72 <AmiBlitz3.ab3@21544>    BNE 'l10
00030A78 <AmiBlitz3.ab3@21545>    TST.b fpu
00030A7C <AmiBlitz3.ab3@21546>    BEQ 'll1a
00030A80 <AmiBlitz3.ab3@21547>    MOVE.w #$f230,d1
00030A84 <AmiBlitz3.ab3@21548>    BSR writeword
00030A86 <AmiBlitz3.ab3@21549>    MOVEQ #0,d1
00030A8C <AmiBlitz3.ab3@21550>    MOVE.w tempregnum,d1
00030A8E <AmiBlitz3.ab3@21551>    ASL.l #7,d1
00030A90 <AmiBlitz3.ab3@21552>    ASL.l #8,d1
00030A92 <AmiBlitz3.ab3@21553>    ASL.l #8,d1
00030A98 <AmiBlitz3.ab3@21554>    ADD.l #$44001990,d1
00030A9E <AmiBlitz3.ab3@21555>     TST.b doublepeek
00030AA2 <AmiBlitz3.ab3@21556>     BEQ 'exitjsr2
00030AA8 <AmiBlitz3.ab3@21557>     OR.l   #$10000000,d1
00030AAC <AmiBlitz3.ab3@21560>  BRA 'exitjsr
00030AB0 <AmiBlitz3.ab3@21564>   MOVE.w #$4EB9,D1
00030AB4 <AmiBlitz3.ab3@21565>    BSR.w writeword                                         ;writesysjsr
00030AB8 <AmiBlitz3.ab3@21566>   MOVEM.l (A7)+,a0/D1        ; was  (a7)+,d1
00030ABE <AmiBlitz3.ab3@21567>    JSR addoff
00030AC2 <AmiBlitz3.ab3@21568>   SUB.l $12(A0),D1
00030AC6 <AmiBlitz3.ab3@21569>   ADD.l $28(A0),D1
00030ACA <AmiBlitz3.ab3@21570> BRA.w writelong
00030ACC <AmiBlitz3.ab3@21575>   MOVE.w D1,-(A7)
00030AD0 <AmiBlitz3.ab3@21576>   MOVE.w tstmode(PC),D1
00030AD4 <AmiBlitz3.ab3@21577>    BSR.w writeword
00030AD8 <AmiBlitz3.ab3@21578>    BSR.w getbbase
00030ADC <AmiBlitz3.ab3@21579>    BSR.w writeword
00030ADE <AmiBlitz3.ab3@21580>   MOVE.w (A7)+,D1
00030AE2 <AmiBlitz3.ab3@21581>   MOVEM.l D0/D3-D7/A0-A2/A4,-(A7)
00030AE6 <AmiBlitz3.ab3@21582>    BSR.w Atokejsr
00030AEA <AmiBlitz3.ab3@21583>   MOVEM.l (A7)+,D0/D3-D7/A0-A2/A4
00030AEC <AmiBlitz3.ab3@21584> RTS
00030AF0 <AmiBlitz3.ab3@21592>   MOVE.w blitzoff(PC),D1
00030AF4 <AmiBlitz3.ab3@21593>   CMP.w #-$1,D1
00030AF8 <AmiBlitz3.ab3@21594>    BNE.w 'done
00030AFE <AmiBlitz3.ab3@21595>   ADDQ.w #1,globalvarpointer
00030B06 <AmiBlitz3.ab3@21596>   BCLR #$0,globalvarpointer+1
00030B0C <AmiBlitz3.ab3@21597>   MOVE.w globalvarpointer,D1
00030B12 <AmiBlitz3.ab3@21598>   MOVE.w D1,blitzoff
00030B18 <AmiBlitz3.ab3@21599>   ADDQ.w #2,globalvarpointer
00030B1A <AmiBlitz3.ab3@21602> RTS
00030B1E <AmiBlitz3.ab3@21606> tstmode:    Dc.b $4A,$6D,$00,$00                           ;TST.W $0000(A5)
00030B20 <AmiBlitz3.ab3@21609> inline:     Ds.w 1
00030B22 <AmiBlitz3.ab3@21610> blitzoff:   Dc.w $FFFF                                   ;-1 org source
00030B24 <AmiBlitz3.ab3@21611> blitzmode:  Ds.w 1                                       ;+=amiga, -=blitz
00030B26 <AmiBlitz3.ab3@21615>   MOVE.w (A2)+,D1
00030B2A <AmiBlitz3.ab3@21616>    BEQ.w 'done
00030B2C <AmiBlitz3.ab3@21617>   MOVE.w (A2)+,D2
00030B30 <AmiBlitz3.ab3@21618>    BSR.w toreg
00030B34 <AmiBlitz3.ab3@21619>  BRA.w fetchregs
00030B36 <AmiBlitz3.ab3@21622> RTS
00030B3A <AmiBlitz3.ab3@21628>   CMP.w #-$100,D2
00030B3E <AmiBlitz3.ab3@21629>    BCC.w 'yeah
00030B42 <AmiBlitz3.ab3@21631>   BCLR #$F,D2
00030B46 <AmiBlitz3.ab3@21632>    BEQ.w 'nobm
00030B4C <AmiBlitz3.ab3@21634>   TST.w blitzmode
00030B50 <AmiBlitz3.ab3@21635>    BMI.w 'yeah
00030B52 <AmiBlitz3.ab3@21636>  RTS
00030B56 <AmiBlitz3.ab3@21639>   BCLR #$E,D2
00030B5A <AmiBlitz3.ab3@21640>    BEQ.w 'yeah
00030B60 <AmiBlitz3.ab3@21642>   TST.w blitzmode
00030B64 <AmiBlitz3.ab3@21643>    BPL.w 'yeah
00030B66 <AmiBlitz3.ab3@21644>  RTS
00030B6C <AmiBlitz3.ab3@21647>   JSR uselib
00030B6E <AmiBlitz3.ab3@21648>   TST.b D2
00030B72 <AmiBlitz3.ab3@21649>    BEQ.w 'norm
00030B76 <AmiBlitz3.ab3@21650>   CMP.b #$4,D2
00030B7A <AmiBlitz3.ab3@21651>    BNE.w 'suv
00030B7E <AmiBlitz3.ab3@21652>   MOVE.w #$0004,-(A7)
00030B84 <AmiBlitz3.ab3@21653>   MOVE.l #$FFFFFFFA,-(A7)                                  ;#-6,-(a7) org source
00030B88 <AmiBlitz3.ab3@21654>  BRA.w 'sendmd
00030B8C <AmiBlitz3.ab3@21657>   CMP.b #$3,D2
00030B90 <AmiBlitz3.ab3@21658>    BNE.w 'notnmax
00030B92 <AmiBlitz3.ab3@21659>   CLR.w -(A7)
00030B98 <AmiBlitz3.ab3@21660>   MOVE.l #$FFFFFFFC,-(A7)                                  ;#-4,-(a7) org source
00030B9A <AmiBlitz3.ab3@21666>   LSR.w #8,D2
00030B9E <AmiBlitz3.ab3@21667>   MOVE.w #$303C,D1                                         ;move.w #x,dn
00030BA2 <AmiBlitz3.ab3@21668>   BTST #$7,D2
00030BA6 <AmiBlitz3.ab3@21669>    BEQ.w 'skipad
00030BAA <AmiBlitz3.ab3@21670>   MOVE.w #$307C,D1                                         ;move.w #x,an
00030BAE <AmiBlitz3.ab3@21671>   CMP.w #$16,D2
00030BB2 <AmiBlitz3.ab3@21672>    BNE.w 'skipad
00030BBA <AmiBlitz3.ab3@21673>   MOVE.w #$FFFF,lasta6                                     ;-1 org source
00030BBE <AmiBlitz3.ab3@21676>   ANDI.w #$7,D2
00030BC0 <AmiBlitz3.ab3@21677>   LSL.w #8,D2
00030BC2 <AmiBlitz3.ab3@21678>   LSL.w #1,D2
00030BC4 <AmiBlitz3.ab3@21679>   OR.w D2,D1
00030BC8 <AmiBlitz3.ab3@21680>    BSR.w writeword
00030BCC <AmiBlitz3.ab3@21681>   MOVE.l $12(A1),D1
00030BCE <AmiBlitz3.ab3@21682>   ADD.l (A7)+,D1
00030BD2 <AmiBlitz3.ab3@21683>   MOVE.w $0(A1,D1.L),D1
00030BD4 <AmiBlitz3.ab3@21684>   ADD.w (A7)+,D1
00030BD8 <AmiBlitz3.ab3@21685>  BRA.w writeword
00030BDA <AmiBlitz3.ab3@21688>   MOVE.w D2,-(A7)
00030BDC <AmiBlitz3.ab3@21689>   LSR.w #8,D2
00030BE0 <AmiBlitz3.ab3@21690>   CMP.w #$16,D2
00030BE4 <AmiBlitz3.ab3@21691>    BNE.w 'isnta6
00030BEC <AmiBlitz3.ab3@21692>   MOVE.w #$FFFF,lasta6                                     ;-1 org source
00030BF0 <AmiBlitz3.ab3@21695>   MOVE.l $12(A1),D1                                        ;objectspace
00030BF4 <AmiBlitz3.ab3@21696>   MOVE.w -$6(A1,D1.L),-(A7)
00030BF8 <AmiBlitz3.ab3@21697>    BSR.w makeregop
00030BFC <AmiBlitz3.ab3@21698>    BSR.w writeword
00030BFE <AmiBlitz3.ab3@21699>   MOVE.w (A7)+,D1
00030C00 <AmiBlitz3.ab3@21700>   MOVE.w (A7)+,D2
00030C02 <AmiBlitz3.ab3@21701>   TST.b D2
00030C06 <AmiBlitz3.ab3@21702>    BPL.w 'skippy1
00030C0A <AmiBlitz3.ab3@21707>    BSR.w writeword                                         ;move.l x(a5),dn
00030C0C <AmiBlitz3.ab3@21708>   MOVE.w D2,-(A7)                                          ;store reg used
00030C10 <AmiBlitz3.ab3@21710>   ADDA.l $12(A1),A1
00030C12 <AmiBlitz3.ab3@21711>   MOVE.b D2,D1
00030C16 <AmiBlitz3.ab3@21712>   ANDI.w #$7,D1
00030C1C <AmiBlitz3.ab3@21714>   TST.b debugmode
00030C20 <AmiBlitz3.ab3@21715>    BEQ.w 'norerr
00030C22 <AmiBlitz3.ab3@21717>   MOVE.w D1,-(A7)
00030C24 <AmiBlitz3.ab3@21718>   LSL.w #8,D1
00030C26 <AmiBlitz3.ab3@21719>   LSL.w #1,D1
00030C2A <AmiBlitz3.ab3@21720>   ORI.w #$B07C,D1                                          ;cmp #x,dn
00030C2E <AmiBlitz3.ab3@21721>    BSR.w writeword
00030C32 <AmiBlitz3.ab3@21722>   MOVE.w -$4(A1),D1
00030C36 <AmiBlitz3.ab3@21723>    BSR.w writeword
00030C3A <AmiBlitz3.ab3@21724>   MOVE.l maxchk(PC),D1                                  ;bcs
00030C3E <AmiBlitz3.ab3@21725>    BSR.w writelong
00030C40 <AmiBlitz3.ab3@21726>   MOVE.l A2,-(A7)
00030C44 <AmiBlitz3.ab3@21727>   MOVE.w #$C30A,D1
00030C48 <AmiBlitz3.ab3@21728>    BSR.w Atokejsr
00030C4A <AmiBlitz3.ab3@21729>   MOVEA.l (A7)+,A2
00030C4C <AmiBlitz3.ab3@21730>   MOVE.w (A7)+,D1
00030C50 <AmiBlitz3.ab3@21733>   MOVE.w -$2(A1),D2                                        ;shift amount
00030C54 <AmiBlitz3.ab3@21736>   CMP.w #$9,D2
00030C58 <AmiBlitz3.ab3@21737>    BCS.w 'simp
00030C5C <AmiBlitz3.ab3@21738>   MOVEM.w D1-D2,-(A7)
00030C5E <AmiBlitz3.ab3@21740>   MOVEQ.l #$00,D2                                          ;!!!!!
00030C60 <AmiBlitz3.ab3@21742>   LSL.w #8,D2
00030C62 <AmiBlitz3.ab3@21743>   LSL.w #1,D2
00030C64 <AmiBlitz3.ab3@21744>   OR.w D2,D1
00030C68 <AmiBlitz3.ab3@21745>   OR.w lsldn(PC),D1
00030C6C <AmiBlitz3.ab3@21746>    BSR.w writeword
00030C70 <AmiBlitz3.ab3@21747>   MOVEM.w (A7)+,D1-D2
00030C72 <AmiBlitz3.ab3@21748>   SUBQ.w #8,D2
00030C76 <AmiBlitz3.ab3@21749>  BRA.w 'shloop
00030C78 <AmiBlitz3.ab3@21752>   MOVE.w D1,-(A7)
00030C7C <AmiBlitz3.ab3@21753>   OR.w #$48c0,d1
00030C80 <AmiBlitz3.ab3@21754>   BSR writeword
00030C82 <AmiBlitz3.ab3@21755>   MOVE.w (a7),d1
00030C84 <AmiBlitz3.ab3@21756>   TST.w D2
00030C88 <AmiBlitz3.ab3@21757>   BEQ.w 'simp2
00030C8C <AmiBlitz3.ab3@21759>   ANDI.w #$7,D2                                            ;?????
00030C8E <AmiBlitz3.ab3@21761>   LSL.w #8,D2
00030C90 <AmiBlitz3.ab3@21762>   LSL.w #1,D2
00030C92 <AmiBlitz3.ab3@21763>   OR.w D2,D1
00030C96 <AmiBlitz3.ab3@21764>   OR.w lsldn(PC),D1
00030C9A <AmiBlitz3.ab3@21765>    BSR.w writeword
00030C9C <AmiBlitz3.ab3@21771>   MOVE.w (A7)+,D1
00030CA0 <AmiBlitz3.ab3@21772>   ANDI.w #$7,D1
00030CA4 <AmiBlitz3.ab3@21773>   OR.w maxdo(PC),D1
00030CA6 <AmiBlitz3.ab3@21774>   MOVE.w (A7)+,D2
00030CA8 <AmiBlitz3.ab3@21775>   LSL.w #1,D2
00030CAC <AmiBlitz3.ab3@21776>   ANDI.w #$E00,D2
00030CAE <AmiBlitz3.ab3@21777>   OR.w D2,D1
00030CB2 <AmiBlitz3.ab3@21778>  BRA.w writeword
00030CB6 <AmiBlitz3.ab3@21781>   CMP.b #$1,D2
00030CBA <AmiBlitz3.ab3@21782>    BEQ.w 'skippy
00030CBC <AmiBlitz3.ab3@21786>   ADDQ.w #4,D1
00030CC2 <AmiBlitz3.ab3@21788>   TST.b debugmode
00030CC6 <AmiBlitz3.ab3@21789>    BEQ.w 'skippy
00030CCA <AmiBlitz3.ab3@21791>    BSR.w writeword
00030CCC <AmiBlitz3.ab3@21792>   SWAP D1
00030CD0 <AmiBlitz3.ab3@21793>   MOVE.w 'theretest(PC),D1
00030CD2 <AmiBlitz3.ab3@21794>   SWAP D1
00030CD6 <AmiBlitz3.ab3@21795>    BSR.w writelong
00030CDA <AmiBlitz3.ab3@21796>   MOVE.l 'theretest+4(PC),D1
00030CDE <AmiBlitz3.ab3@21797>    BSR.w writelong
00030CE2 <AmiBlitz3.ab3@21798>   MOVE.l 'theretest+8(PC),D1
00030CE6 <AmiBlitz3.ab3@21799>  BRA.w writelong
00030CEA <AmiBlitz3.ab3@21802>  BRA.w writeword
00030CEE <AmiBlitz3.ab3@21807>             Dc.b $4A,$AD,$00,$00                           ;TST.L  $0000(A5)
00030CF2 <AmiBlitz3.ab3@21808>             Dc.b $66,$00,$00,$06                           ;BNE.W  'ttskip
00030CF4 <AmiBlitz3.ab3@21809>             Dc.b $70,$01                                   ;MOVEQ  #$01,D0
00030CF6 <AmiBlitz3.ab3@21810>             Dc.b $4E,$40                                   ;TRAP   #00
00030CF8 <AmiBlitz3.ab3@21815>   LSR.w #8,D2
00030CFC <AmiBlitz3.ab3@21816>   CMP.b #$16,D2
00030D00 <AmiBlitz3.ab3@21817>    BNE.w 'nota6
00030D04 <AmiBlitz3.ab3@21818>   MOVE.w $A(A1),D1
00030D0A <AmiBlitz3.ab3@21819>   CMP.w lasta6,D1
00030D0E <AmiBlitz3.ab3@21820>    BEQ.w 'sk
00030D14 <AmiBlitz3.ab3@21821>   MOVE.w D1,lasta6
00030D18 <AmiBlitz3.ab3@21824>    BSR.w makeregop
00030D1C <AmiBlitz3.ab3@21825>   TST.w $1A(A1)
00030D20 <AmiBlitz3.ab3@21826>    BPL.w 'long
00030D24 <AmiBlitz3.ab3@21827>   CMP.w stackop(PC),D1
00030D28 <AmiBlitz3.ab3@21828>    BNE.w 'notst
00030D2E <AmiBlitz3.ab3@21829>   SUBQ.w #2,a2offset
00030D32 <AmiBlitz3.ab3@21832>    ORI.w #$1000,D1
00030D36 <AmiBlitz3.ab3@21835>    BSR.w writeword
00030D3A <AmiBlitz3.ab3@21836>   MOVE.w $A(A1),D1
00030D3E <AmiBlitz3.ab3@21837>    BSR.w writeword
00030D40 <AmiBlitz3.ab3@21840> RTS
00030D42 <AmiBlitz3.ab3@21844> lsldn:      Dc.b $E1,$88                 ;Dc.b $48 ;object long acsess    ;LSL.L   #8,D0
00030D46 <AmiBlitz3.ab3@21845> maxchk:     Dc.b $65,$00,$00,$08                                          ;BCS.W   maxchk_ok
00030D4C <AmiBlitz3.ab3@21846>             Dc.b $4E,$B9,$00,$00,$00,$00                                  ;JSR     $00000000
00030D4E <AmiBlitz3.ab3@21849> 
00030D50 <AmiBlitz3.ab3@21852>             Dc.b $00,$00
00030D54 <AmiBlitz3.ab3@21853> stackop:    Dc.b $2F,$2D,$00,$00                                          ;MOVE.L  $0000(A5),-(A7)
00030D58 <AmiBlitz3.ab3@21860>   CMP.b #$FF,D2
00030D5C <AmiBlitz3.ab3@21861>    BNE.w 'notst
00030D60 <AmiBlitz3.ab3@21862>   MOVE.w stackop(PC),D1
00030D66 <AmiBlitz3.ab3@21863>   ADDQ.w #4,a2offset
00030D68 <AmiBlitz3.ab3@21864>  RTS
00030D6A <AmiBlitz3.ab3@21867>   MOVE.l A3,-(A7)
00030D70 <AmiBlitz3.ab3@21868>   LEA regtransd,A3
00030D74 <AmiBlitz3.ab3@21869>   BTST #$4,D2
00030D78 <AmiBlitz3.ab3@21870>    BEQ.w 'skip
00030D7E <AmiBlitz3.ab3@21871>   LEA regtransa,A3
00030D82 <AmiBlitz3.ab3@21874>   ANDI.w #$7,D2
00030D84 <AmiBlitz3.ab3@21875>   MOVE.w D2,D1
00030D86 <AmiBlitz3.ab3@21876>   LSL.w #8,D1
00030D88 <AmiBlitz3.ab3@21877>   LSL.w #1,D1
00030D8A <AmiBlitz3.ab3@21878>   OR.w (A3),D1
00030D8C <AmiBlitz3.ab3@21879>   MOVEA.l (A7)+,A3
00030D8E <AmiBlitz3.ab3@21880> RTS
00030D92 <AmiBlitz3.ab3@21886>   CMP.w #$3C,D0
00030D96 <AmiBlitz3.ab3@21887>    BCS.w 'no
00030D9A <AmiBlitz3.ab3@21888>   CMP.w #$3E,D0
00030D9E <AmiBlitz3.ab3@21889>    BHI.w 'no
00030DA2 <AmiBlitz3.ab3@21890>   SUBI.w #$3C,D0
00030DA4 <AmiBlitz3.ab3@21891>   CMP.w D0,D0
00030DA6 <AmiBlitz3.ab3@21894> RTS
00030DB0 <AmiBlitz3.ab3@21907>   MOVE.w oldqflag,instringon
00030DB6 <AmiBlitz3.ab3@21908>   MOVEA.l lastsourcepos,A5
00030DBC <AmiBlitz3.ab3@21917>   MOVE.w regnum,-(A7)
00030DC2 <AmiBlitz3.ab3@21918>   CLR.w regnum
00030DC8 <AmiBlitz3.ab3@21919>   MOVE.l destpointer,-(A7)
00030DCE <AmiBlitz3.ab3@21920>   MOVE.l destbufferend,-(A7)
00030DD4 <AmiBlitz3.ab3@21921>   MOVE.w dontwrite_nomemleft,-(A7)
00030DDA <AmiBlitz3.ab3@21922>   MOVE.w lasta6,-(A7)
00030DE0 <AmiBlitz3.ab3@21923>   MOVE.w cfetchmode,-(A7)
00030DE4 <AmiBlitz3.ab3@21924>    BNE.w 'something
00030DEE <AmiBlitz3.ab3@21925>   MOVE.l destbufferend,oldlibat
00030DF4 <AmiBlitz3.ab3@21926>   MOVEA.l constpcat,A0
00030DFA <AmiBlitz3.ab3@21927>   MOVE.l A0,destpointer
00030DFE <AmiBlitz3.ab3@21928>  BRA.w 'some2
00030E04 <AmiBlitz3.ab3@21933>   MOVEA.l destpointer,A0     ;continue in cmode buff
00030E06 <AmiBlitz3.ab3@21936>   MOVE.l A0,-(A7)
00030E10 <AmiBlitz3.ab3@21937>   MOVE.l constlibat,destbufferend      ;for overflow
00030E16 <AmiBlitz3.ab3@21938>   CLR.w dontwrite_nomemleft
00030E1E <AmiBlitz3.ab3@21940>   MOVE.w #$FFFF,lasta6                 ; was -1
00030E26 <AmiBlitz3.ab3@21941>   MOVE.w #$FFFF,cfetchmode             ; was -1
00030E2A <AmiBlitz3.ab3@21945>     BSR.w arreval                      ;!
00030E2C <AmiBlitz3.ab3@21947>    MOVE.l (a7),a0
00030F68 <AmiBlitz3.ab3@21949>  !newcalc
00030F6C <AmiBlitz3.ab3@21950>    BEQ 'l10
00030F6E <AmiBlitz3.ab3@21951>    MOVE.l d0,d3
00030F70 <AmiBlitz3.ab3@21952>    MOVEA.l (A7)+,A0
00030F74 <AmiBlitz3.ab3@21953>  BRA 'bc1
00030F78 <AmiBlitz3.ab3@21957>    MOVE.w #$2600,D1              ;move.l d0,d3
00030F7E <AmiBlitz3.ab3@21958>   OR.w regnum,D1
00030F82 <AmiBlitz3.ab3@21959>    BSR.w writeword
00030F86 <AmiBlitz3.ab3@21960>   MOVE.w #$4E75,D1               ;rts!
00030F8A <AmiBlitz3.ab3@21961>    BSR.w writeword
00030F90 <AmiBlitz3.ab3@21963>   MOVE.w dontwrite_nomemleft,D1
00030F94 <AmiBlitz3.ab3@21964>    BNE.w conmemerr
00030F96 <AmiBlitz3.ab3@21966>   MOVEA.l (A7)+,A0
00030F98 <AmiBlitz3.ab3@21968>   NOP
00030F9E <AmiBlitz3.ab3@21970>    JSR Aclearcache                                         ;simple expression
00030FA0 <AmiBlitz3.ab3@21972>    JSR (A0)                                                ;writeresult
00030FA6 <AmiBlitz3.ab3@21975>   MOVE.w (A7)+,cfetchmode
00030FAC <AmiBlitz3.ab3@21976>   MOVE.w (A7)+,lasta6
00030FB2 <AmiBlitz3.ab3@21977>   MOVE.w (A7)+,dontwrite_nomemleft
00030FB8 <AmiBlitz3.ab3@21978>   MOVE.l (A7)+,destbufferend
00030FBE <AmiBlitz3.ab3@21979>   MOVE.l (A7)+,destpointer
00030FC4 <AmiBlitz3.ab3@21980>   MOVE.w (A7)+,regnum
00030FCA <AmiBlitz3.ab3@21985> JMP reget
00030FCE <AmiBlitz3.ab3@21988> oldlibat:   Ds.l 1
00030FD4 <AmiBlitz3.ab3@21992>   LEA incdir,A0
00030FD8 <AmiBlitz3.ab3@21995>   CMP.w #$22,D0     ;'"'
00030FDC <AmiBlitz3.ab3@21996>    BEQ.w 'skip
00030FDE <AmiBlitz3.ab3@21997>   MOVE.b D0,(A0)+
00030FE0 <AmiBlitz3.ab3@21998>   TST.w D0
00030FE4 <AmiBlitz3.ab3@21999>    BEQ.w 'done
00030FE8 <AmiBlitz3.ab3@22000>    BMI.w syntaxerr
00030FEE <AmiBlitz3.ab3@22003>   JSR get1bytemain                                         ;_long
00030FF2 <AmiBlitz3.ab3@22004>  BRA.w 'loop
00030FF4 <AmiBlitz3.ab3@22007> RTS
00030FFA <AmiBlitz3.ab3@22014>   LEA ptr_parameterstore,A1                                ;getparameter
00031000 <AmiBlitz3.ab3@22015>   LEA incdir,A0
00031002 <AmiBlitz3.ab3@22016>   MOVEQ.l #-$01,D2
00031004 <AmiBlitz3.ab3@22019>     ADDQ.w #1,D2
00031006 <AmiBlitz3.ab3@22020>     MOVE.b (A0)+,(A1)+
0003100A <AmiBlitz3.ab3@22021>   BNE.w 'loop0
0003100C <AmiBlitz3.ab3@22022>   SUBQ.w #1,A1
00031016 <AmiBlitz3.ab3@22025>   MOVE.w oldqflag,instringon
0003101C <AmiBlitz3.ab3@22026>   MOVEA.l lastsourcepos,A5
00031022 <AmiBlitz3.ab3@22030>   JSR get1bytemain
00031024 <AmiBlitz3.ab3@22031>   TST.w D0
00031028 <AmiBlitz3.ab3@22032>    BMI.w syntaxerr
0003102C <AmiBlitz3.ab3@22033>   CMP.b #$22,D0         ;'"'
00031030 <AmiBlitz3.ab3@22034>    BEQ.w 'loop
00031032 <AmiBlitz3.ab3@22035>   MOVE.b D0,(A1)+
00031036 <AmiBlitz3.ab3@22036>    BEQ.w 'done
00031038 <AmiBlitz3.ab3@22037>   ADDQ.w #1,D2
0003103C <AmiBlitz3.ab3@22038>  BRA.w 'loop
0003103E <AmiBlitz3.ab3@22041>   TST.w D2
00031042 <AmiBlitz3.ab3@22042>    BEQ.w syntaxerr
00031044 <AmiBlitz3.ab3@22043> RTS
0003104A <AmiBlitz3.ab3@22050>   MOVEA.l constantbase,A2
0003104E <AmiBlitz3.ab3@22052>   MOVEA.l $E(A2),A5
00031054 <AmiBlitz3.ab3@22054>   MOVE.l a5,includesourceline
0003105A <AmiBlitz3.ab3@22055>   LEA inctab,a0
00031060 <AmiBlitz3.ab3@22056>   MOVE.w ininclude,d0
00031064 <AmiBlitz3.ab3@22057>   MOVE.l $0(a0,d0*4),d0
00031068 <AmiBlitz3.ab3@22059>   MOVEA.l $4(A2),A0
0003106C <AmiBlitz3.ab3@22061>   LEA $0(A0,D0.l),A0   ;end of buffer!
0003106E <AmiBlitz3.ab3@22062>   MOVEA.l A5,A1
00031070 <AmiBlitz3.ab3@22065>     CMPA.l A0,A1
00031074 <AmiBlitz3.ab3@22066>      BCC.w readpend
00031076 <AmiBlitz3.ab3@22067>   TST.b (A1)+
0003107A <AmiBlitz3.ab3@22068>   BNE.w 'loop
0003107E <AmiBlitz3.ab3@22069> BRA.w imakeend
00031082 <AmiBlitz3.ab3@22074>   MOVEA.l $4(A2),A1
00031084 <AmiBlitz3.ab3@22077>   CMPA.l A0,A5
00031088 <AmiBlitz3.ab3@22078>   BCC.w 'skip
0003108A <AmiBlitz3.ab3@22079>   MOVE.b (A5)+,(A1)+
0003108E <AmiBlitz3.ab3@22080>  BRA.w 'loop
00031090 <AmiBlitz3.ab3@22083>   MOVE.l A1,D0
00031094 <AmiBlitz3.ab3@22084>   SUB.l $4(A2),D0
0003109A <AmiBlitz3.ab3@22086>   LEA inctab,a0
0003109C <AmiBlitz3.ab3@22087>   MOVEQ #0,d1
000310A2 <AmiBlitz3.ab3@22088>   MOVE.w ininclude,d1
000310A6 <AmiBlitz3.ab3@22089>   MOVE.l d0,0(a0,d1*4)
000310AC <AmiBlitz3.ab3@22092>   MOVEA.l _dosbase,A6
000310B0 <AmiBlitz3.ab3@22093>   MOVE.l $8(A2),D1
000310B2 <AmiBlitz3.ab3@22094>   MOVE.l A1,D2
000310B8 <AmiBlitz3.ab3@22096>   MOVE.l D2,include_base
000310BE <AmiBlitz3.ab3@22097>   MOVE.l #$10000000,d3                                     ;load whole file
000310C0 <AmiBlitz3.ab3@22100>   SUB.l D0,D3
000310C4 <AmiBlitz3.ab3@22102>    JSR _Read(A6)
000310C6 <AmiBlitz3.ab3@22104>   TST.l D0
000310CA <AmiBlitz3.ab3@22105>    BMI.w error_reading_file
000310CE <AmiBlitz3.ab3@22107>    BEQ.w closeinc
000310D4 <AmiBlitz3.ab3@22108>    MOVE.l D0,include_length
00031116 <AmiBlitz3.ab3@22109>    !ComData_GetL{comPtr_PreProcessor,include_preprocessor}
00031140 <AmiBlitz3.ab3@22110>    !basic
00031150 <AmiBlitz3.ab3@22111>    ilen.l  = Peek.l(?include_length)
00031160 <AmiBlitz3.ab3@22112>    ibase.l = Peek.l(?include_base)
00031170 <AmiBlitz3.ab3@22113>    ido.l   = Peek.l(?include_process)
00031180 <AmiBlitz3.ab3@22114>    *tn.preprocessor = Peek.l(?include_preprocessor)
0003118A <AmiBlitz3.ab3@22115>    If ido
0003119C <AmiBlitz3.ab3@22116>      ioffset.l = SkipXtraHeader{ibase,ilen}
000311C2 <AmiBlitz3.ab3@22117>      nilen.l = preproc_Tokenize{*tn,ibase+ioffset,ibase,ilen-ioffset}
000311D4 <AmiBlitz3.ab3@22118>      If nilen>0
000311E4 <AmiBlitz3.ab3@22122>        Poke.l ?include_length,nilen
00031202 <AmiBlitz3.ab3@22125>    !asm
0003120C <AmiBlitz3.ab3@22126>    MOVE.l #0,include_process
00031212 <AmiBlitz3.ab3@22127>    MOVE.l include_length,D0
00031218 <AmiBlitz3.ab3@22128>    LEA inctab,a0
0003121A <AmiBlitz3.ab3@22129>    MOVEQ #0,d1
00031220 <AmiBlitz3.ab3@22130>    MOVE.w ininclude,d1
00031224 <AmiBlitz3.ab3@22131>    ADD.l d0,0(a0,d1*4)
00031228 <AmiBlitz3.ab3@22135>   MOVEA.l $4(A2),A5
0003122C <AmiBlitz3.ab3@22138>    MOVE.l 0(a0,d1*4),d0
00031230 <AmiBlitz3.ab3@22140>   CLR.b $0(A5,D0.l)
00031232 <AmiBlitz3.ab3@22143>   MOVEA.l A5,A0
00031234 <AmiBlitz3.ab3@22146>     TST.b (A0)+
00031238 <AmiBlitz3.ab3@22147>   BNE.w 'loop2
0003123C <AmiBlitz3.ab3@22148>   MOVE.l A0,$E(A2)
0003123E <AmiBlitz3.ab3@22149> RTS
00031242 <AmiBlitz3.ab3@22152> include_length:        Dc.l 0                              ; for tokenizer!
00031246 <AmiBlitz3.ab3@22153> include_base:          Dc.l 0
0003124A <AmiBlitz3.ab3@22154> include_process:       Dc.l 0
0003124E <AmiBlitz3.ab3@22155> include_preprocessor:  Dc.l 0
00031252 <AmiBlitz3.ab3@22159>   MOVE.l $8(A2),D1
00031258 <AmiBlitz3.ab3@22160>   MOVEA.l _dosbase,A6
0003125C <AmiBlitz3.ab3@22161>   JSR _Close(a6)
00031262 <AmiBlitz3.ab3@22162>   MOVEA.l _execbase,A6
00031266 <AmiBlitz3.ab3@22163>   MOVEA.l $4(A2),A1
0003126C <AmiBlitz3.ab3@22164>   MOVE.l #$400*8,D0         ; #inclen                               ;exit include
00031270 <AmiBlitz3.ab3@22169>   JSR _FreeVec(a6)
00031276 <AmiBlitz3.ab3@22172>   MOVE.l (A2),constantbase
00031278 <AmiBlitz3.ab3@22173>   MOVEA.l A2,A1
0003127A <AmiBlitz3.ab3@22174>   MOVEQ.l #$00,D0
0003127E <AmiBlitz3.ab3@22175>   MOVE.b $12(A2),D0
00031284 <AmiBlitz3.ab3@22176>   MOVEA.l _execbase,A6
0003128A <AmiBlitz3.ab3@22179>   MOVE.l mempool2,a0
0003128E <AmiBlitz3.ab3@22180>   JSR _FreePooled(A6)
00031294 <AmiBlitz3.ab3@22181>   JSR zero_includename
0003129A <AmiBlitz3.ab3@22183>   SUBQ.w #1,ininclude
0003129E <AmiBlitz3.ab3@22184>   BNE.w readinc
000312A4 <AmiBlitz3.ab3@22188>   LEA _include,a0
000312A8 <AmiBlitz3.ab3@22189>   MOVEM.l a0-a6/d0-d7,-(a7)
000312AE <AmiBlitz3.ab3@22190>   LEA ptr_parameterstore,a1
000312B0 <AmiBlitz3.ab3@22193>     MOVE.b (a0)+,(a1)+
000312B4 <AmiBlitz3.ab3@22194>   BNE 'l1b
000312B6 <AmiBlitz3.ab3@22195>   MOVEQ #9,d2
000312BC <AmiBlitz3.ab3@22196>   JSR findlabel2
000312C0 <AmiBlitz3.ab3@22197>   BNE 'd
000312C4 <AmiBlitz3.ab3@22198>   CLR.l 8(a2)
000312C8 <AmiBlitz3.ab3@22201>   MOVEM.l (a7)+,a0-a6/d0-d7
000312CA <AmiBlitz3.ab3@22203> RTS
000312D0 <AmiBlitz3.ab3@22208>   MOVE.l unusedfunc,d0
000312D4 <AmiBlitz3.ab3@22209>   BEQ 'noclear
000312D8 <AmiBlitz3.ab3@22210>   MOVEM.l d0-d2/a0-a1/a6,-(a7)
000312DA <AmiBlitz3.ab3@22213>     MOVE.l d0,a1
000312DE <AmiBlitz3.ab3@22214>     MOVE.l 4(a1),d0
000312E0 <AmiBlitz3.ab3@22215>     MOVE.l (a1),d2
000312E6 <AmiBlitz3.ab3@22216>     MOVE.l _execbase,a6
000312EA <AmiBlitz3.ab3@22217>     JSR _FreeMem(a6)
000312EC <AmiBlitz3.ab3@22218>     MOVE.l d2,d0
000312F0 <AmiBlitz3.ab3@22219>   BNE 'f1
000312F6 <AmiBlitz3.ab3@22220>   CLR.l unusedfunc
000312FA <AmiBlitz3.ab3@22221>   MOVEM.l (a7)+,a0-a1/a6/d0-d2
000312FC <AmiBlitz3.ab3@22224> RTS
00031302 <AmiBlitz3.ab3@22229>   MOVEA.l xinclude_base,A2
00031308 <AmiBlitz3.ab3@22230>   CLR.l xinclude_base
0003130C <AmiBlitz3.ab3@22233>     CMPA.w #$0,A2
00031310 <AmiBlitz3.ab3@22234>      BEQ.w 'done
00031312 <AmiBlitz3.ab3@22235>     MOVEQ.l #$00,D0
00031316 <AmiBlitz3.ab3@22236>     MOVE.b 4+8(A2),D0           ; was 4 org
00031318 <AmiBlitz3.ab3@22237>     MOVEA.l A2,A1
0003131A <AmiBlitz3.ab3@22238>     MOVEA.l (A2),A2
00031320 <AmiBlitz3.ab3@22239>     MOVEA.l _execbase,A6
00031326 <AmiBlitz3.ab3@22242>     MOVE.l mempool2,a0
0003132A <AmiBlitz3.ab3@22243>     JSR _FreePooled(A6)
0003132E <AmiBlitz3.ab3@22245>  BRA.w 'loop
00031330 <AmiBlitz3.ab3@22248> RTS
00031336 <AmiBlitz3.ab3@22252>   MOVEA.l constantbase,A2
0003133C <AmiBlitz3.ab3@22253>   CLR.l constantbase
00031340 <AmiBlitz3.ab3@22256>     CMPA.w #$0,A2
00031344 <AmiBlitz3.ab3@22257>      BEQ.w 'done
00031348 <AmiBlitz3.ab3@22258>     MOVE.l $8(A2),D1
0003134C <AmiBlitz3.ab3@22259>      BEQ.w 'noclose
00031352 <AmiBlitz3.ab3@22260>     MOVEA.l _dosbase,A6
00031356 <AmiBlitz3.ab3@22261>      JSR _Close(A6)
0003135A <AmiBlitz3.ab3@22264>     MOVE.l $4(A2),D0
0003135E <AmiBlitz3.ab3@22265>      BEQ.w 'skip
00031360 <AmiBlitz3.ab3@22266>     MOVEA.l D0,A1
00031366 <AmiBlitz3.ab3@22267>     MOVE.l #$400*8,D0          ; was #inclen
0003136C <AmiBlitz3.ab3@22268>     MOVEA.l _execbase,A6
00031372 <AmiBlitz3.ab3@22271>     MOVE.l mempool,a0
00031376 <AmiBlitz3.ab3@22272>     JSR _FreeVec(a6)
00031378 <AmiBlitz3.ab3@22276>     MOVEQ.l #$00,D0
0003137C <AmiBlitz3.ab3@22277>     MOVE.b $12(A2),D0
0003137E <AmiBlitz3.ab3@22278>     MOVEA.l A2,A1
00031380 <AmiBlitz3.ab3@22279>     MOVEA.l (A2),A2
00031386 <AmiBlitz3.ab3@22280>     MOVEA.l _execbase,A6
0003138C <AmiBlitz3.ab3@22283>     MOVE.l mempool2,a0
00031390 <AmiBlitz3.ab3@22284>     JSR _FreePooled(A6)
00031394 <AmiBlitz3.ab3@22286>  BRA.w 'loop
00031396 <AmiBlitz3.ab3@22289> RTS
00031398 <AmiBlitz3.ab3@22296>   SWAP D0
0003139C <AmiBlitz3.ab3@22297>    BSR.w pokedata2
0003139E <AmiBlitz3.ab3@22298>   SWAP D0
000313A4 <AmiBlitz3.ab3@22303>   MOVEA.l data2,A4
000313AA <AmiBlitz3.ab3@22304>   CMPA.l allat,A4
000313AE <AmiBlitz3.ab3@22305>    BCC.w 'over
000313B0 <AmiBlitz3.ab3@22306>   MOVE.w D0,(A4)+
000313B6 <AmiBlitz3.ab3@22307>   MOVE.l A4,data2
000313B8 <AmiBlitz3.ab3@22308>  RTS
000313C0 <AmiBlitz3.ab3@22311>   MOVE.w #$FFFF,dontwrite_nomemleft        ; was -1
000313C6 <AmiBlitz3.ab3@22312>   ADDQ.l #2,data2
000313C8 <AmiBlitz3.ab3@22313> RTS
000313CE <AmiBlitz3.ab3@22317>   MOVEA.l data2,A4
000313D4 <AmiBlitz3.ab3@22318>   CMPA.l allat,A4
000313D8 <AmiBlitz3.ab3@22319>    BCC.w 'over
000313DA <AmiBlitz3.ab3@22320>   MOVE.b D0,(A4)+
000313E0 <AmiBlitz3.ab3@22321>   MOVE.l A4,data2
000313E2 <AmiBlitz3.ab3@22322>  RTS
000313EA <AmiBlitz3.ab3@22325>   MOVE.w #$FFFF,dontwrite_nomemleft        ; was -1
000313F0 <AmiBlitz3.ab3@22326>   ADDQ.l #1,data2
000313F2 <AmiBlitz3.ab3@22327> RTS
000313F6 <AmiBlitz3.ab3@22333>   CMP.w #$22,D0          ;'"'
000313FA <AmiBlitz3.ab3@22334>    BNE.w syntaxerr
00031400 <AmiBlitz3.ab3@22337>   JSR get1bytemain
00031404 <AmiBlitz3.ab3@22338>   CMP.b #$22,D0
00031408 <AmiBlitz3.ab3@22339>    BEQ.w 'done
0003140A <AmiBlitz3.ab3@22340>   TST.w D0
0003140E <AmiBlitz3.ab3@22341>    BEQ.w syntaxerr
00031410 <AmiBlitz3.ab3@22342>   MOVE.b D0,(A0)+
00031414 <AmiBlitz3.ab3@22343>  BRA.w 'getsp2
00031416 <AmiBlitz3.ab3@22346>   CLR.b (A0)
00031418 <AmiBlitz3.ab3@22347> RTS
0003141A <AmiBlitz3.ab3@22351>   TST.l D3
0003141C <AmiBlitz3.ab3@22352> RTS
00031422 <AmiBlitz3.ab3@22358>   LEA ptr_parameterstore,A0
00031428 <AmiBlitz3.ab3@22359>   LEA namebuff2,A1
0003142A <AmiBlitz3.ab3@22362>     MOVE.b (A0)+,D0
0003142E <AmiBlitz3.ab3@22363>     BEQ.w 'short
00031430 <AmiBlitz3.ab3@22364>   CMP.b (A1)+,D0
00031434 <AmiBlitz3.ab3@22365>   BEQ.w 'loop
00031436 <AmiBlitz3.ab3@22366>  RTS
00031438 <AmiBlitz3.ab3@22369>   TST.b (A1)
0003143C <AmiBlitz3.ab3@22370>   BNE.w 'lt
0003143E <AmiBlitz3.ab3@22371>  RTS
00031442 <AmiBlitz3.ab3@22374>   CMP.w #$1,D0
00031444 <AmiBlitz3.ab3@22375> RTS
00031448 <AmiBlitz3.ab3@22382>   CMP.w #$2E,D0                ;"."                            ;dodeftype
0003144C <AmiBlitz3.ab3@22383>    BNE.w syntaxerr
00031450 <AmiBlitz3.ab3@22384>   BSR.w getparameter2
00031456 <AmiBlitz3.ab3@22385>   LEA newtypebase,A2
0003145A <AmiBlitz3.ab3@22386>   BSR.w findtype
0003145E <AmiBlitz3.ab3@22387>    BNE.w notypeerr
00031464 <AmiBlitz3.ab3@22389>   TST.b declare
00031468 <AmiBlitz3.ab3@22390>    BNE 'l1
0003146E <AmiBlitz3.ab3@22391>   TST.b declare2
00031472 <AmiBlitz3.ab3@22392>    BEQ 'l2
0003147A <AmiBlitz3.ab3@22395>   MOVE.b #2,nowdeclare
00031480 <AmiBlitz3.ab3@22399>   JSR reget
00031484 <AmiBlitz3.ab3@22400>    BNE.w 'more
0003148A <AmiBlitz3.ab3@22401>   MOVE.l A2,defaulttype
0003148C <AmiBlitz3.ab3@22402>  RTS
00031492 <AmiBlitz3.ab3@22408>   MOVE.l defaulttype,-(A7)
00031498 <AmiBlitz3.ab3@22409>   MOVE.l A2,defaulttype
0003149C <AmiBlitz3.ab3@22412>   BSR.w getparameter
000314A0 <AmiBlitz3.ab3@22413>    BSR.w fetchvars
000314A4 <AmiBlitz3.ab3@22414>   CMP.w #$2C,D0            ;","
000314A8 <AmiBlitz3.ab3@22415>    BNE.w 'done
000314AE <AmiBlitz3.ab3@22416>    JSR get1bytemain                                        ; was BSR.w
000314B2 <AmiBlitz3.ab3@22417>  BRA.w 'loopz
000314B8 <AmiBlitz3.ab3@22420>   MOVE.l (A7)+,defaulttype
000314BA <AmiBlitz3.ab3@22421> RTS
000314BE <AmiBlitz3.ab3@22425>   LEA $4(A5),A2                                            ;fehler function
000314C0 <AmiBlitz3.ab3@22428>   MOVE.l A2,D0
000314C4 <AmiBlitz3.ab3@22433>   BSR.w getparameter
000314C8 <AmiBlitz3.ab3@22434>   BSR.w fetchvars
000314CC <AmiBlitz3.ab3@22435>   BSR.w calcvar
000314D0 <AmiBlitz3.ab3@22437>   CMP.b #$7,D2
000314D4 <AmiBlitz3.ab3@22438>    BNE.w mismatcherr
000314D8 <AmiBlitz3.ab3@22439>   MOVE.w varmode(PC),-(A7)
000314DC <AmiBlitz3.ab3@22440>   CMP.w #$3D,D0            ;"="
000314E0 <AmiBlitz3.ab3@22441>    BNE.w syntaxerr
000314E4 <AmiBlitz3.ab3@22442>   BTST #$F,D2
000314E8 <AmiBlitz3.ab3@22443>    BNE.w 'already
000314EC <AmiBlitz3.ab3@22444>   MOVE.w maxprep1(PC),D1
000314F0 <AmiBlitz3.ab3@22445>   BSR.w pokewda5s
000314F2 <AmiBlitz3.ab3@22446>   MOVE.w D3,D1
000314F6 <AmiBlitz3.ab3@22447>   BSR.w writeword
000314FA <AmiBlitz3.ab3@22450>   MOVE.w maxprep2(PC),D1
000314FE <AmiBlitz3.ab3@22451>   BSR.w writeword
00031504 <AmiBlitz3.ab3@22452>   ADDQ.w #1,regnum
00031506 <AmiBlitz3.ab3@22453>   MOVEQ.l #$03,D2
0003150A <AmiBlitz3.ab3@22454>   BSR.w eval
00031510 <AmiBlitz3.ab3@22455>   MOVE.l #$D000,D1              ; was #maxlen
00031516 <AmiBlitz3.ab3@22457>   MOVE.l d1,lastinstruction
00031518 <AmiBlitz3.ab3@22459>   TST.w (A7)+
0003151C <AmiBlitz3.ab3@22460>    BEQ.w Atokejsr
0003151E <AmiBlitz3.ab3@22461>   ADDQ.w #1,D1
00031522 <AmiBlitz3.ab3@22462> BRA.w Atokejsr
00031524 <AmiBlitz3.ab3@22466>   MOVE.w D0,D1
00031528 <AmiBlitz3.ab3@22467>    BPL.w syntaxerr
0003152C <AmiBlitz3.ab3@22468>   BCLR #$F,D1
00031532 <AmiBlitz3.ab3@22469>    JSR searchinstr
00031536 <AmiBlitz3.ab3@22470>   MOVE.l $12(A2),D0
0003153A <AmiBlitz3.ab3@22471>   TST.w -$2(A2,D0.L)
0003153E <AmiBlitz3.ab3@22472>    BEQ.w freeerr
00031540 <AmiBlitz3.ab3@22473>   MOVEQ.l #$02,D2
00031542 <AmiBlitz3.ab3@22474>   MOVE.l A2,-(A7)
00031546 <AmiBlitz3.ab3@22476>    BSR.w eval
00031548 <AmiBlitz3.ab3@22478>   MOVEA.l (A7)+,A2
0003154E <AmiBlitz3.ab3@22479>   MOVE.l A2,mymaxlib
00031552 <AmiBlitz3.ab3@22481>   ADDA.l $12(A2),A2
00031558 <AmiBlitz3.ab3@22482>   TST.b debugmode
0003155C <AmiBlitz3.ab3@22483>    BEQ.w 'pen
00031562 <AmiBlitz3.ab3@22487>   MOVE.w regnum,D1
00031564 <AmiBlitz3.ab3@22488>   LSL.w #8,D1
00031566 <AmiBlitz3.ab3@22489>   LSL.w #1,D1
0003156A <AmiBlitz3.ab3@22490>   ORI.w #$B07C,D1       ;cmp #x,dn
0003156E <AmiBlitz3.ab3@22491>    BSR.w writeword
00031572 <AmiBlitz3.ab3@22492>   MOVE.w -$4(A2),D1
00031576 <AmiBlitz3.ab3@22493>    BSR.w writeword
0003157C <AmiBlitz3.ab3@22494>   MOVE.l maxchk,D1      ;bcs
00031580 <AmiBlitz3.ab3@22495>    BSR.w writelong
00031582 <AmiBlitz3.ab3@22496>   MOVE.l A2,-(A7)
00031586 <AmiBlitz3.ab3@22497>   MOVE.w #$C30A,D1      ; was #maxerr,
0003158A <AmiBlitz3.ab3@22498>    BSR.w Atokejsr
0003158C <AmiBlitz3.ab3@22499>   MOVEA.l (A7)+,A2
00031590 <AmiBlitz3.ab3@22502>   MOVE.w -$2(A2),D2     ;# shifts
00031596 <AmiBlitz3.ab3@22505>   MOVE.w regnum,D1
0003159C <AmiBlitz3.ab3@22506>   OR.w lslimm,D1
000315A0 <AmiBlitz3.ab3@22507>   CMP.w #$8,D2
000315A4 <AmiBlitz3.ab3@22508>    BCS.w 'under
000315A8 <AmiBlitz3.ab3@22509>    BSR.w writeword
000315AA <AmiBlitz3.ab3@22510>   SUBQ.w #8,D2
000315AE <AmiBlitz3.ab3@22511>    BNE.w 'loop
000315B2 <AmiBlitz3.ab3@22512>  BRA.w 'shdone
000315B4 <AmiBlitz3.ab3@22515>   MOVE.w D2,D0
000315B6 <AmiBlitz3.ab3@22516>   LSL.w #8,D0
000315B8 <AmiBlitz3.ab3@22517>   LSL.w #1,D0
000315BA <AmiBlitz3.ab3@22518>   OR.w D0,D1
000315BE <AmiBlitz3.ab3@22519>   BSR.w writeword
000315C0 <AmiBlitz3.ab3@22522> RTS
000315C4 <AmiBlitz3.ab3@22527>   Dc.b $26,$6D,$00,$00                                     ;MOVEA.L $0000(A5),A3
000315C6 <AmiBlitz3.ab3@22528>   Dc.b $D6,$C0                                             ;ADDA.W  D0,A3
000315CA <AmiBlitz3.ab3@22532> mymaxlib:  Ds.l 1
000315CE <AmiBlitz3.ab3@22536>   BSR.w getmaxel
000315D2 <AmiBlitz3.ab3@22538>   LEA free(PC),A0
000315D6 <AmiBlitz3.ab3@22539>   LEA freef(PC),A1
000315DC <AmiBlitz3.ab3@22540>   MOVE.w -$6(A2),$2(A0)
000315E0 <AmiBlitz3.ab3@22541>   BSR.w pokecode
000315E4 <AmiBlitz3.ab3@22543>   MOVE.l -$A(A2),D1
000315E8 <AmiBlitz3.ab3@22546>   BEQ.w nosuperr
000315EC <AmiBlitz3.ab3@22547>   MOVEA.l mymaxlib(PC),A2
000315F0 <AmiBlitz3.ab3@22548> BRA.w Amakelibsub
000315F4 <AmiBlitz3.ab3@22552>   BSR.w getmaxel
000315FA <AmiBlitz3.ab3@22554>   LEA use,A0
00031600 <AmiBlitz3.ab3@22555>   LEA usef,A1
00031606 <AmiBlitz3.ab3@22556>   MOVE.w -$6(A2),$2(A0)
0003160C <AmiBlitz3.ab3@22557>   MOVE.w -$6(A2),-$2(A1)
00031610 <AmiBlitz3.ab3@22558>   ADDQ.w #4,-$2(A1)
00031614 <AmiBlitz3.ab3@22559>   BSR.w pokecode
00031618 <AmiBlitz3.ab3@22561>   MOVE.l -$E(A2),D1
0003161C <AmiBlitz3.ab3@22563> BRA.w maxjsr
00031622 <AmiBlitz3.ab3@22568>   JSR get1bytemain
00031628 <AmiBlitz3.ab3@22571>   MOVE.l firstiff,D0
0003162C <AmiBlitz3.ab3@22572>    BEQ.w noiferr
0003162E <AmiBlitz3.ab3@22573>   MOVEA.l D0,A0
00031634 <AmiBlitz3.ab3@22574>   CMPI.b #$1,$D(A0)
00031638 <AmiBlitz3.ab3@22575>    BEQ.w illelseerr
0003163C <AmiBlitz3.ab3@22576>   MOVE.w #$6000,D1
00031642 <AmiBlitz3.ab3@22579>     TST.b fast
00031646 <AmiBlitz3.ab3@22580>     BEQ 'l1
0003164C <AmiBlitz3.ab3@22581>     OR.l #$ff,d1
00031650 <AmiBlitz3.ab3@22582>     BSR writeword
00031652 <AmiBlitz3.ab3@22587>   SWAP D1
00031656 <AmiBlitz3.ab3@22588>   BSR.w writelong
00031658 <AmiBlitz3.ab3@22589>   MOVEQ.l #$00,D1
0003165C <AmiBlitz3.ab3@22590>   BSR.w doendif2
00031664 <AmiBlitz3.ab3@22591>   MOVE.l destpointer,$8(A0)
00031668 <AmiBlitz3.ab3@22592> BRA.w do_then
0003166E <AmiBlitz3.ab3@22596>   LEA ptr_parameterstore,A0
00031670 <AmiBlitz3.ab3@22597>   MOVE.l A0,-(A7)
00031674 <AmiBlitz3.ab3@22598>   BSR.w getsp
00031678 <AmiBlitz3.ab3@22599> BRA.w handle_compileerror
0003167C <AmiBlitz3.ab3@22603>   BSR.w evalconst
0003167E <AmiBlitz3.ab3@22604>   MOVEQ.l #$05,D1       ;beq
00031688 <AmiBlitz3.ab3@22607>   MOVE.w oldqflag,instringon
0003168E <AmiBlitz3.ab3@22608>   MOVEA.l lastsourcepos,A5
00031694 <AmiBlitz3.ab3@22610>   LEA numcom,A0
00031698 <AmiBlitz3.ab3@22611> BRA.w compare
0003169E <AmiBlitz3.ab3@22615>   LEA ptr_parameterstore,A0
000316A2 <AmiBlitz3.ab3@22616>   BSR.w getsp
000316A8 <AmiBlitz3.ab3@22617>   JSR get1bytemain
000316AC <AmiBlitz3.ab3@22618>   BSR.w collif
000316B2 <AmiBlitz3.ab3@22619>   LEA namebuff2,A0
000316B6 <AmiBlitz3.ab3@22620>   BSR.w getsp
000316BC <AmiBlitz3.ab3@22621>   LEA strcom,A0
000316BE <AmiBlitz3.ab3@22629>   LSL.w #2,D1
000316C4 <AmiBlitz3.ab3@22630>   LEA CIF_branches,A1
000316C8 <AmiBlitz3.ab3@22631>   MOVE.l $0(A1,D1.W),-(A7)
000316CA <AmiBlitz3.ab3@22632>   MOVEQ.l #-$01,D1           ;comp flag
000316CC <AmiBlitz3.ab3@22634>   JSR (A0)
000316CE <AmiBlitz3.ab3@22636>   MOVEA.l (A7)+,A1
000316D0 <AmiBlitz3.ab3@22637> JMP (A1)
000316D4 <AmiBlitz3.ab3@22641>   BEQ.w cifdo
000316D8 <AmiBlitz3.ab3@22642> BRA.w cifdont
000316DC <AmiBlitz3.ab3@22645>   BNE.w cifdo
000316E0 <AmiBlitz3.ab3@22646> BRA.w cifdont
000316E4 <AmiBlitz3.ab3@22649>   BLT.w cifdo
000316E8 <AmiBlitz3.ab3@22650> BRA.w cifdont
000316EC <AmiBlitz3.ab3@22653>   BLE.w cifdo
000316F0 <AmiBlitz3.ab3@22654> BRA.w cifdont
000316F4 <AmiBlitz3.ab3@22657>   BGT.w cifdo
000316F8 <AmiBlitz3.ab3@22658> BRA.w cifdont
000316FC <AmiBlitz3.ab3@22661>   BGE.w cifdo
000316FE <AmiBlitz3.ab3@22664>   MOVEQ.l #$00,D1
00031704 <AmiBlitz3.ab3@22667>   MOVEA.l concomsp,A0
0003170A <AmiBlitz3.ab3@22668>   MOVE.w skipcode,(A0)+
00031710 <AmiBlitz3.ab3@22669>   MOVE.l A0,concomsp
00031716 <AmiBlitz3.ab3@22670>   MOVE.w D1,skipcode
0003171C <AmiBlitz3.ab3@22671>   JSR get1bytemain
00031720 <AmiBlitz3.ab3@22672>    BNE.w syntaxerr
00031726 <AmiBlitz3.ab3@22673> JMP bakup
0003172E <AmiBlitz3.ab3@22677> rescode:   Dc.b $2B,$7c,$00,$00,$00,$00 :   Ds.w 1         ;MOVE.L  #$00000000,$0000(A5)
00031732 <AmiBlitz3.ab3@22678> rescode2:  Dc.b $2B,$40                 :   Ds.w 1         ;MOVE.L  D0,$0000(A5)
00031736 <AmiBlitz3.ab3@22685>   MOVE.w #$FC17,D1
0003173C <AmiBlitz3.ab3@22686>   JSR uselib
00031742 <AmiBlitz3.ab3@22688>   JSR reget
00031746 <AmiBlitz3.ab3@22689>    BEQ.w 'resbeg
0003174A <AmiBlitz3.ab3@22690>   BSR.w makealab2                                          ;get label name!
0003174E <AmiBlitz3.ab3@22691>   MOVE.w rescode(PC),D1
00031752 <AmiBlitz3.ab3@22692>   BSR.w writeword
00031758 <AmiBlitz3.ab3@22693>   JSR addoff                                               ;add offset
0003175C <AmiBlitz3.ab3@22694>   MOVE.l $C(A2),D1
00031760 <AmiBlitz3.ab3@22695>   BSR.w writelong
00031764 <AmiBlitz3.ab3@22696>   MOVE.w rescode+6(PC),D1
00031768 <AmiBlitz3.ab3@22697>   BSR.w writeword
0003176C <AmiBlitz3.ab3@22698>   MOVE.l $4(A2),D1                                         ;is it outstanding?
00031770 <AmiBlitz3.ab3@22699>   BEQ.w 'no
00031772 <AmiBlitz3.ab3@22701>   MOVEA.l D1,A1
00031776 <AmiBlitz3.ab3@22702>   ADDQ.l #1,$4(A1)                                         ;make odd - flag for data reference.
00031778 <AmiBlitz3.ab3@22703>  RTS
0003177A <AmiBlitz3.ab3@22708>  RTS
0003177E <AmiBlitz3.ab3@22711>   MOVE.w #$CD00,D1
00031784 <AmiBlitz3.ab3@22712>   JSR Atokejsr
00031788 <AmiBlitz3.ab3@22713>   MOVE.l rescode2(PC),D1
0003178E <AmiBlitz3.ab3@22714> JMP writelong
00031792 <AmiBlitz3.ab3@22718>   MOVE.w #$FC17,D1
00031798 <AmiBlitz3.ab3@22719>   JSR uselib
0003179E <AmiBlitz3.ab3@22722>   MOVE.l dataget,D1
000317A2 <AmiBlitz3.ab3@22723>   BSR.w writelong
000317A6 <AmiBlitz3.ab3@22724>   BSR.w getparameter
000317AA <AmiBlitz3.ab3@22725>   BSR.w fetchvars
000317AE <AmiBlitz3.ab3@22726>   BSR.w calcvar
000317B2 <AmiBlitz3.ab3@22727>   BTST #$E,D2
000317B6 <AmiBlitz3.ab3@22728>    BEQ.w 'notap
000317BA <AmiBlitz3.ab3@22730>   MOVE.b #$6,D2      ;pointer becomes an address!
000317BC <AmiBlitz3.ab3@22733>   TST.b D2
000317C0 <AmiBlitz3.ab3@22734>    BEQ.w noleterr   ;read in a whole struct....later!
000317C6 <AmiBlitz3.ab3@22735>   TST.b debugmode
000317CA <AmiBlitz3.ab3@22736>    BEQ.w 'norerr
000317CE <AmiBlitz3.ab3@22738>   MOVE.w #$7000,D1
000317D0 <AmiBlitz3.ab3@22739>   MOVE.b D2,D1
000317D4 <AmiBlitz3.ab3@22740>   ANDI.b #$F,D1
000317D8 <AmiBlitz3.ab3@22741>   BSR.w writeword
000317DC <AmiBlitz3.ab3@22742>   MOVE.w #$C310,D1     ; was  #datachk
000317DE <AmiBlitz3.ab3@22743>   MOVE.w D2,-(A7)
000317E2 <AmiBlitz3.ab3@22744>   BSR.w Atokejsr
000317E4 <AmiBlitz3.ab3@22745>   MOVE.w (A7)+,D2
000317E8 <AmiBlitz3.ab3@22748>   CMP.b #$7,D2
000317EC <AmiBlitz3.ab3@22749>    BEQ.w 'string
000317F0 <AmiBlitz3.ab3@22750>   CMP.b #$1,D2
000317F4 <AmiBlitz3.ab3@22751>    BNE.w 'notbyte
000317FA <AmiBlitz3.ab3@22753>   LEA dataletb2,A0
00031800 <AmiBlitz3.ab3@22754>   LEA dataletb2f,A1
00031804 <AmiBlitz3.ab3@22755>   BTST #$F,D2
00031808 <AmiBlitz3.ab3@22756>    BEQ.w 'bimm
0003180C <AmiBlitz3.ab3@22757>   BSR.w pokecode
00031810 <AmiBlitz3.ab3@22758>  BRA.w 'next
00031816 <AmiBlitz3.ab3@22761>   LEA dataletb,A0
0003181C <AmiBlitz3.ab3@22762>   LEA dataletbf,A1
00031822 <AmiBlitz3.ab3@22764>   TST.w varmode
00031826 <AmiBlitz3.ab3@22765>    BEQ.w 'byteglobal
0003182C <AmiBlitz3.ab3@22766>   LEA dataletbl,A0
00031832 <AmiBlitz3.ab3@22767>   LEA dataletblf,A1
00031836 <AmiBlitz3.ab3@22770>   MOVE.w D3,$4(A0)
0003183A <AmiBlitz3.ab3@22771>   BSR.w pokecode
0003183E <AmiBlitz3.ab3@22772>  BRA.w 'next
00031844 <AmiBlitz3.ab3@22775>   LEA dataletw,A0
00031848 <AmiBlitz3.ab3@22776>   CMP.b #$3,D2
0003184C <AmiBlitz3.ab3@22777>    BCS.w 'word
00031852 <AmiBlitz3.ab3@22778>   LEA dataletl,A0
00031856 <AmiBlitz3.ab3@22781>   BTST #$F,D2
0003185A <AmiBlitz3.ab3@22782>    BEQ.w 'imm
0003185E <AmiBlitz3.ab3@22783>   MOVE.w $4(A0),D1
00031862 <AmiBlitz3.ab3@22784>    BSR.w writeword
00031866 <AmiBlitz3.ab3@22785>  BRA.w 'next
0003186C <AmiBlitz3.ab3@22788>   TST.w varmode
00031870 <AmiBlitz3.ab3@22789>    BEQ.w 'wlglobal
00031872 <AmiBlitz3.ab3@22790>   ADDQ.w #6,A0
00031876 <AmiBlitz3.ab3@22793>   MOVE.w D3,$2(A0)
00031878 <AmiBlitz3.ab3@22794>   MOVE.l (A0),D1
0003187C <AmiBlitz3.ab3@22795>   BSR.w writelong
00031882 <AmiBlitz3.ab3@22798>   MOVE.l dataput,D1
00031886 <AmiBlitz3.ab3@22799>    BSR.w writelong
0003188A <AmiBlitz3.ab3@22800>   CMP.w #$2C,D0        ;','
0003188E <AmiBlitz3.ab3@22801>    BEQ.w 'more
00031890 <AmiBlitz3.ab3@22802>  RTS
00031896 <AmiBlitz3.ab3@22805>   JSR get1bytemain
0003189A <AmiBlitz3.ab3@22806>  BRA.w 'loop
000318A0 <AmiBlitz3.ab3@22809>   MOVE.w stlenget,D1
000318A4 <AmiBlitz3.ab3@22810>    BSR.w writeword     ;move.l (a3)+,-(a7)
000318A8 <AmiBlitz3.ab3@22811>   BTST #$F,D2
000318AC <AmiBlitz3.ab3@22812>    BNE.w 'ok
000318B2 <AmiBlitz3.ab3@22814>   TST.w varmode
000318B6 <AmiBlitz3.ab3@22815>    BEQ.w 'sglobal
000318BC <AmiBlitz3.ab3@22816>   MOVE.w D3,leaampl+2
000318C2 <AmiBlitz3.ab3@22817>   MOVE.l leaampl,D1
000318C6 <AmiBlitz3.ab3@22818>  BRA.w 'sskip
000318CC <AmiBlitz3.ab3@22821>   MOVE.w D3,leaamp+2
000318D2 <AmiBlitz3.ab3@22822>   MOVE.l leaamp,D1
000318D6 <AmiBlitz3.ab3@22825>   BSR.w writelong
000318DA <AmiBlitz3.ab3@22828>   MOVE.w #$C701,D1     ;was  #astring
000318E0 <AmiBlitz3.ab3@22829>   MOVE.w varmode,D2
000318E4 <AmiBlitz3.ab3@22830>    BEQ.w 'global
000318E6 <AmiBlitz3.ab3@22831>   SUBQ.w #1,D1
000318EA <AmiBlitz3.ab3@22834>   BSR.w Atokejsr
000318F2 <AmiBlitz3.ab3@22835>   MOVE.w #$FFFF,lasta6    ; was -1
000318F8 <AmiBlitz3.ab3@22836>   LEA stalign,A0
000318FE <AmiBlitz3.ab3@22837>   LEA stalignf,A1
00031902 <AmiBlitz3.ab3@22838>   BSR.w pokecode
00031906 <AmiBlitz3.ab3@22839> BRA.w 'next
0003190A <AmiBlitz3.ab3@22843>   CMP.w #$2E,D0        ;'.'                                    ;definecode 'lb 'lw 'll
0003190E <AmiBlitz3.ab3@22844>    BNE.w 'word
00031914 <AmiBlitz3.ab3@22845>   JSR get1bytemain
00031918 <AmiBlitz3.ab3@22846>   CMP.w #$77,D0        ;'w'
0003191C <AmiBlitz3.ab3@22847>    BEQ.w 'word2
00031920 <AmiBlitz3.ab3@22848>   CMP.w #$62,D0        ;'b'
00031924 <AmiBlitz3.ab3@22849>    BEQ.w 'byte
00031928 <AmiBlitz3.ab3@22851>   CMP.w #"s",d0        ;'s'
0003192C <AmiBlitz3.ab3@22852>   BEQ 'single3         
00031930 <AmiBlitz3.ab3@22853>   CMP.w #"d",d0        ;'d'
00031934 <AmiBlitz3.ab3@22854>   BEQ 'double3
00031938 <AmiBlitz3.ab3@22856>   CMP.w #$6C,D0        ;'l'
0003193C <AmiBlitz3.ab3@22857>    BNE.w syntaxerr
0003193E <AmiBlitz3.ab3@22858>   MOVEQ.l #$02,D1
00031940 <AmiBlitz3.ab3@22859>  RTS
00031948 <AmiBlitz3.ab3@22863>   MOVE.b #1,iee
0003194A <AmiBlitz3.ab3@22864>   MOVEQ.l #$3,d1
0003194C <AmiBlitz3.ab3@22865>  RTS
00031954 <AmiBlitz3.ab3@22868>   MOVE.b #1,iee
00031956 <AmiBlitz3.ab3@22869>   MOVEQ.l #$4,d1
00031958 <AmiBlitz3.ab3@22870>  RTS
0003195A <AmiBlitz3.ab3@22874>   MOVEQ.l #$00,D1
0003195C <AmiBlitz3.ab3@22875>  RTS
0003195E <AmiBlitz3.ab3@22878>   MOVEQ.l #$01,D1
00031960 <AmiBlitz3.ab3@22879>  RTS
00031962 <AmiBlitz3.ab3@22882>   MOVEQ.l #$01,D1
00031968 <AmiBlitz3.ab3@22883> JMP bakup
0003196C <AmiBlitz3.ab3@22887>   BSR.w getsize2
0003196E <AmiBlitz3.ab3@22889>   MOVE.w D1,-(A7)
00031972 <AmiBlitz3.ab3@22890>    BSR.w evalconst2
00031976 <AmiBlitz3.ab3@22891>   CMP.w #$2C,D0        ;','
0003197A <AmiBlitz3.ab3@22892>    BNE.w syntaxerr
0003197C <AmiBlitz3.ab3@22893>   MOVE.l D3,-(A7)
00031980 <AmiBlitz3.ab3@22894>    BSR.w evalconst2
00031982 <AmiBlitz3.ab3@22895>   MOVE.l D3,D1        ;to put in memory
00031984 <AmiBlitz3.ab3@22896>   MOVE.l (A7)+,D3     ;number of times
00031986 <AmiBlitz3.ab3@22897>   MOVE.w (A7)+,D2
0003198A <AmiBlitz3.ab3@22898>    BEQ.w 'byte
0003198E <AmiBlitz3.ab3@22904>   CMP.w #$1,D2
00031992 <AmiBlitz3.ab3@22905>    BEQ.w 'word
00031994 <AmiBlitz3.ab3@22908>   SWAP D1
00031998 <AmiBlitz3.ab3@22909>    BSR.w writeword
0003199A <AmiBlitz3.ab3@22910>   SWAP D1
0003199E <AmiBlitz3.ab3@22911>    BSR.w writeword
000319A0 <AmiBlitz3.ab3@22912>   SUBQ.l #1,D3
000319A4 <AmiBlitz3.ab3@22913>    BNE.w 'long
000319A6 <AmiBlitz3.ab3@22914>  RTS
000319AA <AmiBlitz3.ab3@22917>    BSR.w writeword
000319AC <AmiBlitz3.ab3@22918>   SUBQ.l #1,D3
000319B0 <AmiBlitz3.ab3@22919>    BNE.w 'word
000319B2 <AmiBlitz3.ab3@22920>  RTS
000319B6 <AmiBlitz3.ab3@22923>    BSR.w writebyte
000319B8 <AmiBlitz3.ab3@22924>   SUBQ.l #1,D3
000319BC <AmiBlitz3.ab3@22925>    BNE.w 'byte
000319BE <AmiBlitz3.ab3@22926> RTS
000319C2 <AmiBlitz3.ab3@22930>   BSR.w getsize2                                          ;definestorage
000319C4 <AmiBlitz3.ab3@22931>   MOVE.w D1,-(A7)
000319C8 <AmiBlitz3.ab3@22932>   BSR.w evalconst3
000319CA <AmiBlitz3.ab3@22933>   MOVE.w (A7)+,D1
000319CC <AmiBlitz3.ab3@22934>   LSL.l D1,D3
000319CE <AmiBlitz3.ab3@22936>   MOVE.l d3,d0
000319D2 <AmiBlitz3.ab3@22937>   BEQ 'll5
000319D4 <AmiBlitz3.ab3@22938>   MOVEQ #0,d1
000319DA <AmiBlitz3.ab3@22941>     JSR writebyte
000319DC <AmiBlitz3.ab3@22942>     SUBQ.l #1,d3
000319E0 <AmiBlitz3.ab3@22943>   BNE.s 'll10
000319E2 <AmiBlitz3.ab3@22948> RTS
000319E4 <AmiBlitz3.ab3@22952>   MOVE.w D0,-(A7)
000319EA <AmiBlitz3.ab3@22953>   LEA dummyasm,A0
000319F0 <AmiBlitz3.ab3@22954>   MOVEA.l destpointer,A1
000319FA <AmiBlitz3.ab3@22955>   MOVE.w asmlen2,asmlen
00031A00 <AmiBlitz3.ab3@22956>   JSR insasm
00031A02 <AmiBlitz3.ab3@22957>   MOVE.w (A7)+,D0
00031A04 <AmiBlitz3.ab3@22958> RTS
00031A08 <AmiBlitz3.ab3@22962>   BSR.w getsize2
00031A12 <AmiBlitz3.ab3@22964>   MOVE.l #ptr_parameterstore,asmbuff
00031A14 <AmiBlitz3.ab3@22965>   TST.w D1
00031A18 <AmiBlitz3.ab3@22966>    BEQ.w 'byte
00031A1C <AmiBlitz3.ab3@22967>   CMP.w #$1,D1
00031A20 <AmiBlitz3.ab3@22968>    BEQ.w 'word
00031A24 <AmiBlitz3.ab3@22970>   CMP.w #$2,d1
00031A28 <AmiBlitz3.ab3@22971>    BEQ 'long
00031A2C <AmiBlitz3.ab3@22972>   CMP.w #$3,d1
00031A30 <AmiBlitz3.ab3@22973>    BEQ 'single
00031A32 <AmiBlitz3.ab3@22978>    MOVEQ.l #$0d,D3
00031A38 <AmiBlitz3.ab3@22986>    JSR asmconst
00031A3C <AmiBlitz3.ab3@22987>    BSR.w insasm2
00031A40 <AmiBlitz3.ab3@22988>    BSR.w writelong
00031A44 <AmiBlitz3.ab3@22990>    BSR   writelong
00031A48 <AmiBlitz3.ab3@22992>   CMP.w #$2C,D0    ; ','
00031A4C <AmiBlitz3.ab3@22993>    BEQ.w 'lloop
00031A4E <AmiBlitz3.ab3@22994>  RTS
00031A50 <AmiBlitz3.ab3@22998>   MOVEQ.l #$0B,D3
00031A58 <AmiBlitz3.ab3@23002>   MOVE.b #1,_dcb
00031A5E <AmiBlitz3.ab3@23005>   JSR asmconst
00031A64 <AmiBlitz3.ab3@23006>   CLR.b _dcb
00031A68 <AmiBlitz3.ab3@23007>   BSR.w insasm2
00031A6C <AmiBlitz3.ab3@23008>   BSR writebyte
00031A70 <AmiBlitz3.ab3@23009>   BSR writebyte
00031A74 <AmiBlitz3.ab3@23010>   BSR writebyte                                            ;long
00031A78 <AmiBlitz3.ab3@23011>   BSR writebyte
00031A7C <AmiBlitz3.ab3@23012>   CMP.w #$2C,D0
00031A80 <AmiBlitz3.ab3@23013>    BEQ.w 'lloopb
00031A82 <AmiBlitz3.ab3@23014>  RTS
00031A84 <AmiBlitz3.ab3@23017>   MOVEQ.l #$0c,D3
00031A8C <AmiBlitz3.ab3@23021>   MOVE.b #1,_dcb
00031A92 <AmiBlitz3.ab3@23024>   JSR asmconst
00031A98 <AmiBlitz3.ab3@23025>   CLR.b _dcb
00031A9C <AmiBlitz3.ab3@23026>   BSR.w insasm2
00031AA0 <AmiBlitz3.ab3@23027>   BSR.w writebyte
00031AA4 <AmiBlitz3.ab3@23028>   BSR.w writebyte
00031AA8 <AmiBlitz3.ab3@23029>   BSR.w writebyte
00031AAC <AmiBlitz3.ab3@23030>   BSR.w writebyte
00031AB0 <AmiBlitz3.ab3@23031>   CMP.w #$2C,D0
00031AB4 <AmiBlitz3.ab3@23032>    BEQ.w 'lloopa
00031AB6 <AmiBlitz3.ab3@23033>  RTS
00031AB8 <AmiBlitz3.ab3@23039>   MOVEQ.l #$11,D3
00031ABE <AmiBlitz3.ab3@23042>   JSR get1bytemain
00031AC2 <AmiBlitz3.ab3@23043>   CMP.w #$22,D0     ;'"'
00031AC6 <AmiBlitz3.ab3@23044>    BNE.w 'notq
00031AC8 <AmiBlitz3.ab3@23049>   MOVE.b (a5)+,d0                                          ;bsr.w get1bytemain ascii dc.b
00031ACC <AmiBlitz3.ab3@23051>    BEQ.w syntaxerr
00031AD0 <AmiBlitz3.ab3@23052>   CMP.w #$22,D0   ;'"'
00031AD4 <AmiBlitz3.ab3@23053>    BEQ.w 'qdone
00031AD8 <AmiBlitz3.ab3@23055>   CMP.b #"\",d0
00031ADC <AmiBlitz3.ab3@23056>    BNE 'n1
00031AE0 <AmiBlitz3.ab3@23057>   CMP.b #"\",(a5)
00031AE4 <AmiBlitz3.ab3@23058>    BEQ 'do1
00031AE6 <AmiBlitz3.ab3@23062>   MOVE.w D0,D1
00031AEA <AmiBlitz3.ab3@23063>   BSR.w writebyte
00031AEE <AmiBlitz3.ab3@23064>  BRA.w 'qloop
00031AF6 <AmiBlitz3.ab3@23068>   CMP.l #"__DA",1(a5)
00031AFA <AmiBlitz3.ab3@23069>    BNE 'nodate1
00031B02 <AmiBlitz3.ab3@23070>   CMP.l #"TE__",5(a5)
00031B06 <AmiBlitz3.ab3@23071>    BEQ 'c1
00031B0E <AmiBlitz3.ab3@23072>   CMP.l #"TE_G",5(a5)
00031B12 <AmiBlitz3.ab3@23073>    BNE 'nodate1
00031B1A <AmiBlitz3.ab3@23074>   CMP.l #"ER__",9(a5)
00031B1E <AmiBlitz3.ab3@23075>    BNE 'nodate1
00031B24 <AmiBlitz3.ab3@23076>   JSR compiledatedc_ger
00031B28 <AmiBlitz3.ab3@23077>  BRA 'n1
00031B2E <AmiBlitz3.ab3@23080>   JSR compiledatedc
00031B32 <AmiBlitz3.ab3@23081>  BRA 'n1
00031B3A <AmiBlitz3.ab3@23084>   CMP.l #"__VE",1(a5)
00031B3E <AmiBlitz3.ab3@23085>    BNE 'n1
00031B44 <AmiBlitz3.ab3@23086>   CMP.w #"R_",5(a5)
00031B48 <AmiBlitz3.ab3@23087>    BNE 'n1
00031B4E <AmiBlitz3.ab3@23088>   JSR version_string_dc
00031B52 <AmiBlitz3.ab3@23089>  BRA.w 'qloop
00031B58 <AmiBlitz3.ab3@23093>   CLR.w instringon
00031B5E <AmiBlitz3.ab3@23095>   JSR get1bytemain
00031B62 <AmiBlitz3.ab3@23096>  BRA.w 'bdone
00031B6C <AmiBlitz3.ab3@23101>    MOVE.w oldqflag,instringon
00031B72 <AmiBlitz3.ab3@23102>   MOVEA.l lastsourcepos,A5
00031B78 <AmiBlitz3.ab3@23104>    JSR asmconst
00031B7E <AmiBlitz3.ab3@23105>   SUBQ.l #1,destpointer
00031B82 <AmiBlitz3.ab3@23106>    BSR.w insasm2
00031B88 <AmiBlitz3.ab3@23107>   ADDQ.l #1,destpointer
00031B8C <AmiBlitz3.ab3@23108>    BSR.w writebyte
00031B90 <AmiBlitz3.ab3@23111>   CMP.w #$2C,D0   ;','
00031B94 <AmiBlitz3.ab3@23112>    BEQ.w 'bloop
00031B96 <AmiBlitz3.ab3@23113>  RTS
00031B98 <AmiBlitz3.ab3@23116>   MOVEQ.l #$10,D3
00031BA0 <AmiBlitz3.ab3@23125>   MOVE.b #1,_dcb
00031BA6 <AmiBlitz3.ab3@23127>   JSR asmconst
00031BAC <AmiBlitz3.ab3@23129>   CLR.b _dcb
00031BB0 <AmiBlitz3.ab3@23131>   BSR.w insasm2
00031BB4 <AmiBlitz3.ab3@23134>   BSR.w writebyte
00031BB8 <AmiBlitz3.ab3@23135>   BSR.w writebyte
00031BBC <AmiBlitz3.ab3@23137>   CMP.w #$2C,D0      ;','
00031BC0 <AmiBlitz3.ab3@23138>    BEQ.w 'wloop
00031BC2 <AmiBlitz3.ab3@23139> RTS
00031BC8 <AmiBlitz3.ab3@23143>   ADDQ.l #3,destpointer
00031BD0 <AmiBlitz3.ab3@23144>   ANDI.w #$FFFC,destpointer+2
00031BD2 <AmiBlitz3.ab3@23145> RTS
00031BD8 <AmiBlitz3.ab3@23149>   ADDQ.l #7,destpointer
00031BE0 <AmiBlitz3.ab3@23150>   ANDI.w #$FFF8,destpointer+2
00031BE2 <AmiBlitz3.ab3@23151> RTS
00031BE8 <AmiBlitz3.ab3@23155>   ADDQ.l #1,destpointer                                    ;even
00031BF0 <AmiBlitz3.ab3@23156>   BCLR #$0,destpointer+3
00031BF2 <AmiBlitz3.ab3@23157> RTS
00031BF4 <AmiBlitz3.ab3@23160> datasize: Ds.w 1
00031BFA <AmiBlitz3.ab3@23170>   TST.b debugmode
00031BFE <AmiBlitz3.ab3@23171>   BEQ.w 'skip
00031C02 <AmiBlitz3.ab3@23172>   MOVE.w #$4420,D0                                         ;'D '
00031C06 <AmiBlitz3.ab3@23173>   MOVE.b datasize+1(PC),D0
00031C0A <AmiBlitz3.ab3@23174>  BRA.w pokedata2
00031C0C <AmiBlitz3.ab3@23177> RTS
00031C10 <AmiBlitz3.ab3@23181>   MOVE.w #$FC17,D1           ;#64535
00031C16 <AmiBlitz3.ab3@23182>    JSR uselib
00031C20 <AmiBlitz3.ab3@23185>    MOVE.w oldqflag,instringon
00031C26 <AmiBlitz3.ab3@23186>   MOVEA.l lastsourcepos,A5
00031C2C <AmiBlitz3.ab3@23188>    JSR sizespec2        ;get size of it into d1
00031C32 <AmiBlitz3.ab3@23189>   MOVE.w D1,datasize
00031C36 <AmiBlitz3.ab3@23193>   CMP.w #$7,D1
00031C3A <AmiBlitz3.ab3@23194>    BEQ.w 'string
00031C3C <AmiBlitz3.ab3@23196>   MOVE.w D1,-(A7)
00031C40 <AmiBlitz3.ab3@23199>   BSR.w pdt
00031C42 <AmiBlitz3.ab3@23200>   MOVE.w (A7),D2
00031C46 <AmiBlitz3.ab3@23201>    BSR.w fetchdata
00031C48 <AmiBlitz3.ab3@23202>   CMP.w (A7),D2                                            ;datamode
00031C4C <AmiBlitz3.ab3@23203>    BEQ.w 'dataok
00031C4E <AmiBlitz3.ab3@23205>   MOVE.w D2,D1
00031C50 <AmiBlitz3.ab3@23206>   MOVE.w (A7),D2
00031C54 <AmiBlitz3.ab3@23207>   CMP.w #$2,D2
00031C58 <AmiBlitz3.ab3@23208>    BNE.w 'notw
00031C5C <AmiBlitz3.ab3@23209>   CMP.w #$3,D1
00031C60 <AmiBlitz3.ab3@23210>    BNE.w baddaterr
00031C66 <AmiBlitz3.ab3@23211>   CMP.l #$10000,D3        ; was  #65536
00031C6A <AmiBlitz3.ab3@23212>    BCC.w baddaterr
00031C6E <AmiBlitz3.ab3@23213>  BRA.w 'dataok
00031C72 <AmiBlitz3.ab3@23216>   CMP.w #$1,D2
00031C76 <AmiBlitz3.ab3@23217>    BNE.w 'notb
00031C7A <AmiBlitz3.ab3@23218>   CMP.w #$2,D1
00031C7E <AmiBlitz3.ab3@23219>    BNE.w baddaterr
00031C84 <AmiBlitz3.ab3@23220>   CMP.l #$100,D3
00031C88 <AmiBlitz3.ab3@23221>    BCC.w baddaterr
00031C8C <AmiBlitz3.ab3@23222>  BRA.w 'dataok
00031C90 <AmiBlitz3.ab3@23225>  BRA.w baddaterr
00031C94 <AmiBlitz3.ab3@23228>   CMP.w #$3,D2
00031C98 <AmiBlitz3.ab3@23229>   BCC.w 'notword
00031C9C <AmiBlitz3.ab3@23230>   BSR.w pokedata2
00031CA0 <AmiBlitz3.ab3@23231>  BRA.w 'next
00031CA6 <AmiBlitz3.ab3@23235>   TST.b iee
00031CAA <AmiBlitz3.ab3@23236>   BEQ 'old
00031CAE <AmiBlitz3.ab3@23237>   CMP.b #5,d2
00031CB2 <AmiBlitz3.ab3@23238>   BNE 'old
00031CB6 <AmiBlitz3.ab3@23239>   Dc.l $f2006400                                           ;  fpu data write fmove.s fp0,d0
00031CBA <AmiBlitz3.ab3@23244>   BSR.w pokedata2l                                          ;write data >3
00031CC0 <AmiBlitz3.ab3@23247>   JSR reget
00031CC4 <AmiBlitz3.ab3@23248>   CMP.w #$2C,D0     ;','
00031CC8 <AmiBlitz3.ab3@23249>    BEQ.w 'more
00031CCA <AmiBlitz3.ab3@23250>   ADDQ.w #2,A7
00031CCC <AmiBlitz3.ab3@23251>  RTS
00031CD0 <AmiBlitz3.ab3@23254>    BSR.w pdt
00031CD6 <AmiBlitz3.ab3@23255>   MOVE.l data2,-(A7)
00031CDA <AmiBlitz3.ab3@23256>    BSR.w pokedata2l
00031CDC <AmiBlitz3.ab3@23257>   MOVEQ.l #$00,D1
00031CE2 <AmiBlitz3.ab3@23259>    JSR get1bytemain
00031CE6 <AmiBlitz3.ab3@23260>    BEQ.w 'done
00031CEA <AmiBlitz3.ab3@23261>   CMP.w #$22,D0       ;'"'
00031CEE <AmiBlitz3.ab3@23262>    BEQ.w 'quoted
00031CF2 <AmiBlitz3.ab3@23263>   CMP.w #$2C,D0       ;','
00031CF6 <AmiBlitz3.ab3@23264>    BEQ.w 'done
00031CFA <AmiBlitz3.ab3@23267>    BSR.w pokedata2b
00031CFC <AmiBlitz3.ab3@23268>   ADDQ.w #1,D1
00031D02 <AmiBlitz3.ab3@23269>    JSR getchar
00031D04 <AmiBlitz3.ab3@23270>   TST.w D0
00031D08 <AmiBlitz3.ab3@23271>    BEQ.w 'done
00031D0C <AmiBlitz3.ab3@23272>   CMP.w #$2C,D0
00031D10 <AmiBlitz3.ab3@23273>    BEQ.w 'done       ;','
00031D14 <AmiBlitz3.ab3@23274>  BRA.w 'loop2
00031D16 <AmiBlitz3.ab3@23279>    MOVEQ #0,d0
00031D18 <AmiBlitz3.ab3@23280>    MOVE.b (a5)+,d0
00031D1C <AmiBlitz3.ab3@23282>    BEQ.w notqerr2
00031D20 <AmiBlitz3.ab3@23283>   CMP.w #$22,D0       ;'"'
00031D24 <AmiBlitz3.ab3@23284>    BEQ.w 'done2
00031D28 <AmiBlitz3.ab3@23285>    BSR.w pokedata2b
00031D2A <AmiBlitz3.ab3@23286>   ADDQ.w #1,D1
00031D2E <AmiBlitz3.ab3@23287>  BRA.w 'quoted
00031D34 <AmiBlitz3.ab3@23291>   CLR.w instringon
00031D3A <AmiBlitz3.ab3@23293>   JSR get1bytemain
00031D3C <AmiBlitz3.ab3@23296>   MOVEA.l (A7)+,A0
00031D42 <AmiBlitz3.ab3@23297>   MOVE.w dontwrite_nomemleft,D2
00031D46 <AmiBlitz3.ab3@23298>    BNE.w 'nopoke
00031D48 <AmiBlitz3.ab3@23299>   MOVE.l D1,(A0)
00031D4E <AmiBlitz3.ab3@23302>   ADDQ.l #1,data2
00031D56 <AmiBlitz3.ab3@23303>   BCLR #$0,data2+3
00031D5A <AmiBlitz3.ab3@23304>   CMP.w #$2C,D0      ;','
00031D5E <AmiBlitz3.ab3@23305>    BEQ.w 'string
00031D60 <AmiBlitz3.ab3@23306> RTS
00031D66 <AmiBlitz3.ab3@23310> notqerr2           JMP notqerr
00031D6C <AmiBlitz3.ab3@23311> JUMP_vardeclareerr JMP vardeclareerr
00031D72 <AmiBlitz3.ab3@23319>   MOVE.w proceduremode,D1                                  ;doshared
00031D76 <AmiBlitz3.ab3@23322>   BNE.w 'l1
00031D78 <AmiBlitz3.ab3@23323>   MOVE.w D1,-(A7)
00031D7E <AmiBlitz3.ab3@23324>   CLR.w proceduremode
00031D84 <AmiBlitz3.ab3@23327>   LEA varbase,a2
00031D88 <AmiBlitz3.ab3@23328>   BSR.w getparameter
00031D8A <AmiBlitz3.ab3@23329>   MOVE.w d2,-(a7)
00031D90 <AmiBlitz3.ab3@23330>    JSR findvariable
00031D94 <AmiBlitz3.ab3@23331>    BEQ 'checkdim
00031D9A <AmiBlitz3.ab3@23332>    LEA sharebase,a2
00031D9C <AmiBlitz3.ab3@23333>    MOVEQ #$f+4,d7
00031DA0 <AmiBlitz3.ab3@23334>    BSR.w findlab                                         ;find var
00031DA4 <AmiBlitz3.ab3@23335>    BEQ.b dupsherr
00031DA8 <AmiBlitz3.ab3@23336>    BSR addlabel
00031DAC <AmiBlitz3.ab3@23337>    CMP.b #".",d0
00031DB0 <AmiBlitz3.ab3@23338>    BNE JUMP_vardeclareerr
00031DB2 <AmiBlitz3.ab3@23339>    MOVE.l a2,a3
00031DB8 <AmiBlitz3.ab3@23340>    JSR claptonb       ; jump to a copy of fvaradd 'clapton
00031DBA <AmiBlitz3.ab3@23371>   MOVE.w (a7)+,d2
00031DBE <AmiBlitz3.ab3@23372>    CMP.b #",",d0
00031DC2 <AmiBlitz3.ab3@23373>    BNE 'ret
00031DC8 <AmiBlitz3.ab3@23374>    JSR get1bytemain
00031DCC <AmiBlitz3.ab3@23375>  BRA 'again2
00031DD2 <AmiBlitz3.ab3@23378>   MOVE.w (A7)+,proceduremode
00031DD4 <AmiBlitz3.ab3@23379>  RTS
00031DDA <AmiBlitz3.ab3@23382>    CMP.w #2,6(a2)
00031DDE <AmiBlitz3.ab3@23383>    BEQ 'do
00031DE4 <AmiBlitz3.ab3@23384>    CMP.w #$102,6(a2)
00031DE8 <AmiBlitz3.ab3@23385>    BEQ 'do
00031DEE <AmiBlitz3.ab3@23386>  JMP errormsg_declaredtwice                                 ;was BRA 'errormsg_declaredtwice_
00031DF4 <AmiBlitz3.ab3@23389>   LEA varbase,a0
00031DF6 <AmiBlitz3.ab3@23392>   MOVE.l (A0),D0                                           ;find label
00031DFA <AmiBlitz3.ab3@23393>    BEQ.b 'z1
00031DFC <AmiBlitz3.ab3@23394>    CMP.l d0,a2
00031E00 <AmiBlitz3.ab3@23395>    BEQ 'z1
00031E02 <AmiBlitz3.ab3@23396>    MOVE.l d0,a0
00031E06 <AmiBlitz3.ab3@23397>  BRA 'm1
00031E08 <AmiBlitz3.ab3@23400>   MOVE.l (a2),d1
00031E0A <AmiBlitz3.ab3@23401>     MOVE.l d1,(a0)
00031E0C <AmiBlitz3.ab3@23402>     CLR.l (a2)
00031E12 <AmiBlitz3.ab3@23403>     LEA sharebase,a0
00031E14 <AmiBlitz3.ab3@23404>     MOVE.l (a0),(a2)
00031E16 <AmiBlitz3.ab3@23405>     MOVE.l a2,(a0)
00031E1C <AmiBlitz3.ab3@23406>     JSR get1bytemain
00031E22 <AmiBlitz3.ab3@23407>     JSR get1bytemain
00031E26 <AmiBlitz3.ab3@23408>  BRA 'domore
00031E2E <AmiBlitz3.ab3@23411>   MOVE.b #1,nowdeclare
00031E30 <AmiBlitz3.ab3@23413>   MOVE.w D1,-(A7)
00031E36 <AmiBlitz3.ab3@23414>   CLR.w proceduremode
00031E3A <AmiBlitz3.ab3@23417>    BSR.w getparameter
00031E3C <AmiBlitz3.ab3@23418>   MOVE.w D2,-(A7)
00031E42 <AmiBlitz3.ab3@23420>   LEA firstglob,A2
00031E46 <AmiBlitz3.ab3@23421>    BSR.w findvariable2
00031E4A <AmiBlitz3.ab3@23422>    BNE.b 'notfound
00031E50 <AmiBlitz3.ab3@23425>   MOVE.b flagmask+1,D1
00031E54 <AmiBlitz3.ab3@23426>   MOVE.b $7(A2),D3
00031E56 <AmiBlitz3.ab3@23427>   EOR.b D3,D1
00031E5A <AmiBlitz3.ab3@23428>    BEQ.w dupsherr
00031E5E <AmiBlitz3.ab3@23429>    BSR.w findlab
00031E62 <AmiBlitz3.ab3@23430>    BEQ.b 'try2
00031E66 <AmiBlitz3.ab3@23433>    BSR.w addlabel
00031E68 <AmiBlitz3.ab3@23434>   MOVE.w (A7)+,D2
00031E6A <AmiBlitz3.ab3@23435>   MOVE.l A2,-(A7)   ;new glob
00031E6E <AmiBlitz3.ab3@23436>    BSR.w fetchvars     
00031E70 <AmiBlitz3.ab3@23437>   MOVEA.l (A7)+,A2
00031E72 <AmiBlitz3.ab3@23438>   MOVEQ.l #$04,D1
00031E74 <AmiBlitz3.ab3@23439>   ADDQ.w #4,A2
00031E76 <AmiBlitz3.ab3@23440>   ADDQ.w #4,A3
00031E78 <AmiBlitz3.ab3@23443>     MOVE.w (A3)+,(A2)+
00031E7C <AmiBlitz3.ab3@23444>   DBF D1,'loop
00031E84 <AmiBlitz3.ab3@23446>   BTST #$1,flagmask+1
00031E88 <AmiBlitz3.ab3@23447>    BEQ.w 'done
00031E8E <AmiBlitz3.ab3@23448>    JSR get1bytemain
00031E92 <AmiBlitz3.ab3@23449>   CMP.w #$29,D0         ;')'
00031E96 <AmiBlitz3.ab3@23450>    BNE.w JUMP_syntaxerr
00031E9C <AmiBlitz3.ab3@23451>    JSR get1bytemain
00031EA0 <AmiBlitz3.ab3@23454>    CMP.w #$2C,D0         ;','
00031EA4 <AmiBlitz3.ab3@23455>    BNE.w 'done2
00031EAA <AmiBlitz3.ab3@23456>    JSR get1bytemain
00031EAE <AmiBlitz3.ab3@23457>  BRA.w 'loop2
00031EB4 <AmiBlitz3.ab3@23460>   MOVE.w (A7)+,proceduremode
00031EB6 <AmiBlitz3.ab3@23461> RTS
00031EBA <AmiBlitz3.ab3@23468>    BSR.w makeiname
00031EC0 <AmiBlitz3.ab3@23469>    JSR check_incdir                                        ; ergebnis in d2
00031EC6 <AmiBlitz3.ab3@23471>    LEA ptr_parameterstore,a1
00031EC8 <AmiBlitz3.ab3@23472>    MOVE.l d2,-(a7)
00031ECE <AmiBlitz3.ab3@23473>    LEA includetemp,a0                                      ; filename in includetemp packen
00031ED0 <AmiBlitz3.ab3@23476>      MOVE.b (a1)+,(a0)+
00031ED4 <AmiBlitz3.ab3@23477>    BNE 'l4
00031EDA <AmiBlitz3.ab3@23479>    LEA ptr_parameterstore,a1
00031EDC <AmiBlitz3.ab3@23480>    MOVE.l a1,a0
00031EDE <AmiBlitz3.ab3@23483>     TST.b (a0)+
00031EE2 <AmiBlitz3.ab3@23484>    BNE 'l1
00031EE4 <AmiBlitz3.ab3@23487>      MOVE.b -(a0),d0
00031EE8 <AmiBlitz3.ab3@23488>      CMP.b #":",d0
00031EEC <AmiBlitz3.ab3@23489>       BEQ 'out
00031EF0 <AmiBlitz3.ab3@23490>      CMP.b #"/",d0
00031EF4 <AmiBlitz3.ab3@23491>       BEQ 'out
00031EF6 <AmiBlitz3.ab3@23492>      CMP.l a1,a0
00031EFA <AmiBlitz3.ab3@23493>       BEQ 'out2
00031EFE <AmiBlitz3.ab3@23494>  BRA 'l2
00031F00 <AmiBlitz3.ab3@23497>    ADDQ.l #1,a0                                            ; dateinamen vom pfad extrahiert
00031F02 <AmiBlitz3.ab3@23500>    MOVEQ.l #-$01,D2
00031F04 <AmiBlitz3.ab3@23503>      ADDQ.w #1,D2
00031F06 <AmiBlitz3.ab3@23504>      MOVE.b (a0)+,(a1)+
00031F0A <AmiBlitz3.ab3@23505>    BNE 'l3
00031F0C <AmiBlitz3.ab3@23506>    CLR.b (a1)+
00031F12 <AmiBlitz3.ab3@23508>    LEA ptr_parameterstore,a1
00031F16 <AmiBlitz3.ab3@23509>    BSR.w findxinc                                         ;find include
00031F1A <AmiBlitz3.ab3@23510>     BEQ.w 'outb
00031F1C <AmiBlitz3.ab3@23512>    MOVE.w D2,-(A7)
00031F20 <AmiBlitz3.ab3@23513>    BSR.w addlabel
00031F22 <AmiBlitz3.ab3@23514>    MOVE.w (A7)+,D2
00031F28 <AmiBlitz3.ab3@23516>    LEA ptr_parameterstore,a1
00031F2E <AmiBlitz3.ab3@23517>    LEA includetemp,a0                                      ; namen in includetemp schreiben
00031F30 <AmiBlitz3.ab3@23520>     MOVE.b (a0)+,(a1)+
00031F34 <AmiBlitz3.ab3@23521>    BNE 'l4b
00031F36 <AmiBlitz3.ab3@23523>    MOVE.l (a7)+,d2
00031F3C <AmiBlitz3.ab3@23524>    LEA ptr_parameterstore,a1
00031F40 <AmiBlitz3.ab3@23526>  BRA.w doinc2
00031F46 <AmiBlitz3.ab3@23530>    LEA ptr_parameterstore,a1
00031F4C <AmiBlitz3.ab3@23531>    LEA includetemp,a0
00031F4E <AmiBlitz3.ab3@23534>     MOVE.b (a0)+,(a1)+
00031F52 <AmiBlitz3.ab3@23535>    BNE 'l4b2
00031F54 <AmiBlitz3.ab3@23537>    MOVE.l (a7)+,d2
00031F5A <AmiBlitz3.ab3@23538>    LEA ptr_parameterstore,a1
00031F5C <AmiBlitz3.ab3@23540> RTS
00031F60 <AmiBlitz3.ab3@23544>   BSR.w makeiname                                              ; test and get the parameter (includestring)
00031F66 <AmiBlitz3.ab3@23548>   JSR check_IncBinDir                                          ; to fix the path problem in CLIMode  tomsmart1
00031F6C <AmiBlitz3.ab3@23550>   MOVEA.l _dosbase,A6
00031F6E <AmiBlitz3.ab3@23552>   MOVE.l D0,D7                                                 ; store Lockpointer
00031F72 <AmiBlitz3.ab3@23553>    BEQ.w error_cant_open_include                               ; no pointer => errormessage
00031F74 <AmiBlitz3.ab3@23554>   MOVE.l D7,D1                                                 ; begin get the size of the file to include
00031F7A <AmiBlitz3.ab3@23555>   MOVE.l ptr_macrobuffer_begin,D2
00031F7E <AmiBlitz3.ab3@23556>    JSR _Examine(A6)
00031F84 <AmiBlitz3.ab3@23557>   MOVEA.l ptr_macrobuffer_begin,A0
00031F88 <AmiBlitz3.ab3@23558>   MOVE.l $4(A0),D0
00031F8C <AmiBlitz3.ab3@23559>    BPL.w error_cant_open_include                               ; something went wrong => errormessage
00031F90 <AmiBlitz3.ab3@23560>   MOVE.l $7C(A0),D3      ;length                                       ; store the size of the file to include
00031F92 <AmiBlitz3.ab3@23561>   MOVE.l D7,D1                                                 ; begin unlock the file
00031F96 <AmiBlitz3.ab3@23562>    JSR _UnLock(A6)
00031F9C <AmiBlitz3.ab3@23564>   MOVE.l #ptr_parameterstore,D1                                ; begin Open and Load the file
00031FA2 <AmiBlitz3.ab3@23565>   MOVE.l #HUNK_RELOC_16__MODE_OLDFILE,D2                       
00031FA6 <AmiBlitz3.ab3@23566>    JSR _Open(A6)
00031FA8 <AmiBlitz3.ab3@23567>   MOVE.l D0,D7
00031FAC <AmiBlitz3.ab3@23568>    BEQ.w error_cant_open_include
00031FB2 <AmiBlitz3.ab3@23569>   MOVE.l destpointer,D0
00031FB4 <AmiBlitz3.ab3@23570>   ADD.l D3,D0
00031FBA <AmiBlitz3.ab3@23571>   CMP.l destbufferend,D0
00031FBE <AmiBlitz3.ab3@23572>    BHI.w 'over
00031FC4 <AmiBlitz3.ab3@23573>   MOVE.l destpointer,D2
00031FC6 <AmiBlitz3.ab3@23574>   MOVE.l D7,D1
00031FCA <AmiBlitz3.ab3@23575>    JSR _Read(A6)
00031FD0 <AmiBlitz3.ab3@23576>   CMP.l #$FFFFFFFF,D0              ; was -1
00031FD4 <AmiBlitz3.ab3@23577>    BEQ.w error_reading_file
00031FDA <AmiBlitz3.ab3@23578>   ADD.l D0,destpointer
00031FDE <AmiBlitz3.ab3@23579>  BRA.w 'close
00031FE6 <AmiBlitz3.ab3@23582>   MOVE.w #$FFFF,dontwrite_nomemleft          ; was -1
00031FEC <AmiBlitz3.ab3@23583>   MOVE.l D0,destpointer
00031FEE <AmiBlitz3.ab3@23586>   MOVE.l D7,D1
00031FF2 <AmiBlitz3.ab3@23587> JMP _Close(A6)
00031FF8 <AmiBlitz3.ab3@23590> JUMP_illdirerr JMP illdirerr
00031FFE <AmiBlitz3.ab3@23596>   TST.w dirmode                                            ;include  open
00032002 <AmiBlitz3.ab3@23597>    BNE.w JUMP_illdirerr
00032006 <AmiBlitz3.ab3@23599>   BSR.w makeiname
0003200C <AmiBlitz3.ab3@23601>   JSR check_incdir
00032010 <AmiBlitz3.ab3@23605>   BSR.w findconstant
00032014 <AmiBlitz3.ab3@23606>    BEQ.w alincerr
0003201A <AmiBlitz3.ab3@23608>   LEA constantbase,A2
0003201E <AmiBlitz3.ab3@23609>   BSR.w addhere2
00032022 <AmiBlitz3.ab3@23611>   CLR.w $C(A2)
00032026 <AmiBlitz3.ab3@23612>   CLR.l $4(A2)
0003202C <AmiBlitz3.ab3@23614>   MOVE.l #ptr_parameterstore,D1
0003202E <AmiBlitz3.ab3@23615>   MOVE.l d1,a0
00032034 <AmiBlitz3.ab3@23616>   LEA includetemp2,a1
00032036 <AmiBlitz3.ab3@23619>     MOVE.b (a0)+,(a1)+
0003203A <AmiBlitz3.ab3@23620>   BNE 'l1
00032040 <AmiBlitz3.ab3@23621>   JSR save_includename
0003204A <AmiBlitz3.ab3@23622>   MOVE.l #0,include_process
00032052 <AmiBlitz3.ab3@23624>   CMP.l #$62623200,-4(a0)                                  ;.bb2
00032056 <AmiBlitz3.ab3@23625>   BEQ 'ok
0003205E <AmiBlitz3.ab3@23626>   CMP.l #$61623300,-4(a0)                                  ;.ab3
00032062 <AmiBlitz3.ab3@23627>   BEQ 'ok_tokenize
0003206A <AmiBlitz3.ab3@23628>   CMP.l #$61623200,-4(a0)                                  ;.ab2
0003206E <AmiBlitz3.ab3@23629>   BEQ 'ok_tokenize
00032076 <AmiBlitz3.ab3@23630>   CMP.l #$2e626200,-4(a0)                                  ;.bb files
0003207A <AmiBlitz3.ab3@23631>   BEQ 'ok
00032080 <AmiBlitz3.ab3@23632>  JMP errortoken                                             ;can only include
0003208A <AmiBlitz3.ab3@23635>    MOVE.l #-1,include_process                              ; must tokenize the include
00032090 <AmiBlitz3.ab3@23638>   MOVE.l #HUNK_RELOC_16__MODE_OLDFILE,D2
00032096 <AmiBlitz3.ab3@23639>   MOVEA.l _dosbase,A6
0003209A <AmiBlitz3.ab3@23640>   JSR _Open(A6)
0003209E <AmiBlitz3.ab3@23641>   MOVE.l D0,$8(A2)
000320A2 <AmiBlitz3.ab3@23642>   BEQ.w error_cant_open_include
000320A8 <AmiBlitz3.ab3@23643>   CLR.l includeline
000320AC <AmiBlitz3.ab3@23644>   MOVE.l 8(a2),d1
000320AE <AmiBlitz3.ab3@23645>   MOVE.l d3,-(a7)
000320B0 <AmiBlitz3.ab3@23646>   MOVEQ #0,d2
000320B2 <AmiBlitz3.ab3@23647>   MOVEQ #1,d3
000320B6 <AmiBlitz3.ab3@23648>   JSR _Seek(a6)                                            ; -66
000320BA <AmiBlitz3.ab3@23649>   MOVE.l 8(a2),d1
000320BC <AmiBlitz3.ab3@23650>   MOVEQ #0,d2
000320BE <AmiBlitz3.ab3@23651>   MOVEQ #-1,d3
000320C2 <AmiBlitz3.ab3@23652>   JSR _Seek(a6)                                            ; -66
000320C4 <AmiBlitz3.ab3@23653>   MOVE.l (a7)+,d3
000320C6 <AmiBlitz3.ab3@23654>   ADDQ.l #4,d0
000320CC <AmiBlitz3.ab3@23658>   MOVE.l #$10000,D1
000320D2 <AmiBlitz3.ab3@23660>   MOVEA.l _execbase,A6
000320D6 <AmiBlitz3.ab3@23664>   JSR _AllocVec(a6)
000320DA <AmiBlitz3.ab3@23668>   MOVE.l D0,$4(A2)
000320DE <AmiBlitz3.ab3@23669>   MOVE.l D0,$E(A2)
000320E0 <AmiBlitz3.ab3@23670>   MOVEA.l D0,A5
000320E6 <AmiBlitz3.ab3@23678>   ADDQ.w #1,ininclude                                      ;enter include
000320EC <AmiBlitz3.ab3@23682>   LEA _include,a0
000320F0 <AmiBlitz3.ab3@23683>   MOVEM.l a0-a6/d0-d7,-(a7)
000320F6 <AmiBlitz3.ab3@23684>   LEA ptr_parameterstore,a1
000320F8 <AmiBlitz3.ab3@23687>     MOVE.b (a0)+,(a1)+
000320FC <AmiBlitz3.ab3@23688>   BNE 'l1b
000320FE <AmiBlitz3.ab3@23690>   MOVEQ #9,d2
00032104 <AmiBlitz3.ab3@23691>   JSR findlabel2
00032108 <AmiBlitz3.ab3@23692>   BNE 'd
00032110 <AmiBlitz3.ab3@23693>   MOVE.l #1,8(a2)
00032114 <AmiBlitz3.ab3@23694>   MOVEM.l (a7)+,a0-a6/d0-d7
00032118 <AmiBlitz3.ab3@23695>  BRA 'd2
0003211E <AmiBlitz3.ab3@23698>   JSR addlabelhash
00032126 <AmiBlitz3.ab3@23699>   MOVE.l #$1,$4(A2)
0003212E <AmiBlitz3.ab3@23700>   MOVE.l #1,8(a2)
00032132 <AmiBlitz3.ab3@23701>   MOVEM.l (a7)+,a0-a6/d0-d7
00032138 <AmiBlitz3.ab3@23704>   LEA inctab,a0
0003213A <AmiBlitz3.ab3@23705>   MOVEQ #0,d1
00032140 <AmiBlitz3.ab3@23706>   MOVE.w ininclude,d1
00032144 <AmiBlitz3.ab3@23707>   CLR.l $0(a0,d1*4)
0003214A <AmiBlitz3.ab3@23709>   MOVEA.l passstack,A7
00032150 <AmiBlitz3.ab3@23710> JMP passnxt
00032156 <AmiBlitz3.ab3@23713> JUMP_dupmacerr  JMP dupmacerr
0003215C <AmiBlitz3.ab3@23714> JUMP_macenderr  JMP macenderr
00032162 <AmiBlitz3.ab3@23715> JUMP_macnesterr JMP macnesterr
00032164 <AmiBlitz3.ab3@23718> coolnest:   Ds.w 1
00032168 <AmiBlitz3.ab3@23719> macline:    Ds.l 1
00032172 <AmiBlitz3.ab3@23725>   MOVE.l linenumat,macline
00032176 <AmiBlitz3.ab3@23727>    BSR.w makename2
0003217A <AmiBlitz3.ab3@23728>    BEQ.w JUMP_syntaxerr
00032180 <AmiBlitz3.ab3@23730>    CLR.b thenmode
0003218A <AmiBlitz3.ab3@23734>    MOVE.w oldqflag,instringon
00032190 <AmiBlitz3.ab3@23735>   MOVEA.l lastsourcepos,A5
00032194 <AmiBlitz3.ab3@23737>    BSR.w findmac
00032198 <AmiBlitz3.ab3@23738>    BEQ.w JUMP_dupmacerr
0003219C <AmiBlitz3.ab3@23739>    BSR.w addlabel
000321A0 <AmiBlitz3.ab3@23740>   CLR.w $A(A2)
000321A6 <AmiBlitz3.ab3@23741>   MOVEA.l ptr_macrobuffer_begin,A0
000321A8 <AmiBlitz3.ab3@23742>   MOVEQ.l #$00,D2     ;flag for nothing got yet!
000321AE <AmiBlitz3.ab3@23743>   CLR.w coolnest
000321B0 <AmiBlitz3.ab3@23747>   MOVE.b (a5),d0
000321B4 <AmiBlitz3.ab3@23748>      BEQ 'l3
000321B8 <AmiBlitz3.ab3@23749>      CMP.b #" ",d0
000321BC <AmiBlitz3.ab3@23750>       BNE 'l2                                              ;space macro
000321BE <AmiBlitz3.ab3@23751>       ADDQ.l #1,a5
000321C2 <AmiBlitz3.ab3@23752>  BRA 'l1
000321C6 <AmiBlitz3.ab3@23755>    CMP.b #";",d0
000321CA <AmiBlitz3.ab3@23756>       BNE 'l3
000321CC <AmiBlitz3.ab3@23759>    MOVE.b (a5),d0
000321D0 <AmiBlitz3.ab3@23760>       BEQ 'l5
000321D4 <AmiBlitz3.ab3@23761>       BSR.w macputb                                      ;add comment
000321D6 <AmiBlitz3.ab3@23762>       ADDQ.l #1,a5
000321DA <AmiBlitz3.ab3@23763>  BRA 'l4
000321DE <AmiBlitz3.ab3@23766>    MOVE.b #":",d0
000321E2 <AmiBlitz3.ab3@23767>       BSR.w macputb
000321E6 <AmiBlitz3.ab3@23768>       MOVE.b #"@",d0
000321EA <AmiBlitz3.ab3@23769>       BSR.w macputb
000321F2 <AmiBlitz3.ab3@23772>    MOVE.b #0,temp
000321FA <AmiBlitz3.ab3@23773>       MOVE.b #0,thenmode
00032200 <AmiBlitz3.ab3@23776>   JSR getcharb   ;get next character
00032202 <AmiBlitz3.ab3@23778>   TST.w D0
00032206 <AmiBlitz3.ab3@23779>    BNE.w 'skip
0003220A <AmiBlitz3.ab3@23780>   MOVEM.l D2/A0/A2,-(A7)
00032210 <AmiBlitz3.ab3@23782>   CMP.w #"@@",-3(a5)
00032214 <AmiBlitz3.ab3@23783>   BNE 'l2a
0003221A <AmiBlitz3.ab3@23784>   JSR nextline
0003221E <AmiBlitz3.ab3@23785>   BEQ.w JUMP_macenderr
00032222 <AmiBlitz3.ab3@23786>   MOVEM.l (A7)+,D2/A0/A2
00032226 <AmiBlitz3.ab3@23787>  BRA.w 'gather
0003222C <AmiBlitz3.ab3@23791>    JSR nextline
00032230 <AmiBlitz3.ab3@23792>    BEQ.w JUMP_macenderr
00032234 <AmiBlitz3.ab3@23793>   MOVEM.l (A7)+,D2/A0/A2
00032236 <AmiBlitz3.ab3@23794>   TST.w D2
0003223A <AmiBlitz3.ab3@23795>    BEQ.w 'gather
0003223C <AmiBlitz3.ab3@23799>   MOVE.b (a5),d0
00032240 <AmiBlitz3.ab3@23800>       CMP.b #" ",d0
00032244 <AmiBlitz3.ab3@23801>       BNE 'l1a
00032246 <AmiBlitz3.ab3@23802>       ADDQ.w #1,a5
0003224A <AmiBlitz3.ab3@23803>  BRA 'l2b
00032250 <AmiBlitz3.ab3@23806>   TST.b thenmode
00032254 <AmiBlitz3.ab3@23807>      BEQ 'l3a
00032256 <AmiBlitz3.ab3@23808>      MOVEQ #":",d0
0003225A <AmiBlitz3.ab3@23809>      BSR.w macputb
0003225E <AmiBlitz3.ab3@23810>      MOVE.w #-$7FFE,D0                                     ;write end if
00032262 <AmiBlitz3.ab3@23811>      BSR macputw
00032266 <AmiBlitz3.ab3@23812>      MOVE.w #$800b,d0
0003226A <AmiBlitz3.ab3@23813>      BSR.w macputw
00032270 <AmiBlitz3.ab3@23814>      CLR.b thenmode
00032272 <AmiBlitz3.ab3@23818>    MOVEQ.l #$3A,D0
0003227A <AmiBlitz3.ab3@23820>      MOVE.b #1,temp
0003227E <AmiBlitz3.ab3@23823>  BRA.w 'notend2
00032282 <AmiBlitz3.ab3@23826>   BPL.w 'notend2
00032286 <AmiBlitz3.ab3@23827>   CMP.w #-$7FF3,D0         ; was #$800d                                ;macro ?
0003228A <AmiBlitz3.ab3@23828>    BNE.w 'notamac
00032290 <AmiBlitz3.ab3@23829>   ADDQ.w #1,coolnest
00032294 <AmiBlitz3.ab3@23830>  BRA.w 'notend
00032298 <AmiBlitz3.ab3@23834>   CMP.w #$80d7,d0                                          ;object ?
0003229C <AmiBlitz3.ab3@23835>     BNE 'l1x
000322A2 <AmiBlitz3.ab3@23836>     TST.b objectcount
000322A6 <AmiBlitz3.ab3@23837>     BNE JUMP_macnesterr
000322AA <AmiBlitz3.ab3@23840>   CMP.w #$8021,d0
000322AE <AmiBlitz3.ab3@23841>     BNE 'nothen
000322B6 <AmiBlitz3.ab3@23842>     MOVE.b #1,thenmode
000322BC <AmiBlitz3.ab3@23845>   TST.b thenmode
000322C0 <AmiBlitz3.ab3@23846>         BEQ 'l1c
000322C4 <AmiBlitz3.ab3@23847>    CMP.w #$8002,d0                                         ;end if
000322C8 <AmiBlitz3.ab3@23848>    BNE 'l1c
000322CC <AmiBlitz3.ab3@23849>    MOVEM.l d0/a5,-(a7)
000322D2 <AmiBlitz3.ab3@23850>    JSR get1bytemain
000322D4 <AmiBlitz3.ab3@23851>    MOVE.w d0,d1
000322D8 <AmiBlitz3.ab3@23852>    MOVEM.l (a7)+,a5/d0
000322DC <AmiBlitz3.ab3@23853>    CMP.w #$800b,d1
000322E0 <AmiBlitz3.ab3@23854>    BNE 'l1c
000322E6 <AmiBlitz3.ab3@23855>    CLR.b thenmode
000322EA <AmiBlitz3.ab3@23859>    CMP.w #-$7FFE,D0   ; was #$8002                                     ;end ?
000322EE <AmiBlitz3.ab3@23860>    BNE.w 'notend
000322F0 <AmiBlitz3.ab3@23862>    MOVE.l a5,-(a7)
000322F6 <AmiBlitz3.ab3@23863>    JSR get1bytemain
000322F8 <AmiBlitz3.ab3@23864>    MOVE.l (a7)+,a5
000322FA <AmiBlitz3.ab3@23865>    TST.w d0
000322FE <AmiBlitz3.ab3@23866>    BEQ 'doend
00032302 <AmiBlitz3.ab3@23867>    CMP.w #":",d0
00032306 <AmiBlitz3.ab3@23868>    BEQ 'doend
0003230A <AmiBlitz3.ab3@23869>    CMP.w #";",d0
0003230E <AmiBlitz3.ab3@23870>    BEQ 'doend
00032310 <AmiBlitz3.ab3@23871>    MOVE.l a5,-(a7)
00032316 <AmiBlitz3.ab3@23872>    JSR get1bytemain
0003231A <AmiBlitz3.ab3@23873>    MOVE.l -1(a5),d0
0003231C <AmiBlitz3.ab3@23874>    MOVE.l (a7)+,a5
00032322 <AmiBlitz3.ab3@23875>    CMP.l #"noa7",d0
00032326 <AmiBlitz3.ab3@23876>    BEQ 'doend
0003232A <AmiBlitz3.ab3@23877>  BRA 'morechar
0003232E <AmiBlitz3.ab3@23880>   MOVE.w #$8002,D0
00032332 <AmiBlitz3.ab3@23881>    BSR.w macputw
00032336 <AmiBlitz3.ab3@23882>  BRA 'gather
0003233C <AmiBlitz3.ab3@23886>   JSR get1bytemain
00032340 <AmiBlitz3.ab3@23887>    CMP.w #-$7FF3,D0        ;was #$800d,                                ;end macro
00032344 <AmiBlitz3.ab3@23889>    BEQ.w 'lo1
00032348 <AmiBlitz3.ab3@23890>   CMP.w #$80d7,d0                                          ;end object
0003234C <AmiBlitz3.ab3@23892>   BNE 'notem
00032352 <AmiBlitz3.ab3@23894>   SUBQ.b #1,objectcount
00032358 <AmiBlitz3.ab3@23895>   TST.b developobject
0003235C <AmiBlitz3.ab3@23896>   BEQ 'lo1
00032360 <AmiBlitz3.ab3@23897>   BSR skiprest
00032362 <AmiBlitz3.ab3@23898>  RTS
00032368 <AmiBlitz3.ab3@23902>   SUBQ.w #1,coolnest
0003236C <AmiBlitz3.ab3@23903>    BMI.w 'macdone
0003236E <AmiBlitz3.ab3@23906>   MOVE.w D0,-(A7)
00032372 <AmiBlitz3.ab3@23907>   MOVE.w #$8002,D0
00032376 <AmiBlitz3.ab3@23908>    BSR.w macputw
00032378 <AmiBlitz3.ab3@23909>   MOVE.w (A7)+,D0
0003237C <AmiBlitz3.ab3@23910>  BRA.w 'notend
00032380 <AmiBlitz3.ab3@23913>   BSR.w macputw
00032384 <AmiBlitz3.ab3@23914>  BRA.w 'gather
0003238A <AmiBlitz3.ab3@23918>     CMP.w #"@@",-1(a5)                                     ;merge lines
0003238E <AmiBlitz3.ab3@23919>     BNE 'no
00032392 <AmiBlitz3.ab3@23920>      MOVEM.l D2/A0/A2,-(A7)
00032398 <AmiBlitz3.ab3@23921>    JSR nextline
0003239C <AmiBlitz3.ab3@23922>    BEQ.w JUMP_macenderr
000323A0 <AmiBlitz3.ab3@23923>   MOVEM.l (A7)+,D2/A0/A2
000323A2 <AmiBlitz3.ab3@23924>     TST.w D2
000323A6 <AmiBlitz3.ab3@23925>    BEQ.w 'gather
000323AA <AmiBlitz3.ab3@23926>  BRA 'gather
000323AE <AmiBlitz3.ab3@23930>   BSR.w macputb
000323B2 <AmiBlitz3.ab3@23931>  BRA.w 'gather
000323B4 <AmiBlitz3.ab3@23934>   ADDQ.w #4,A7
000323B6 <AmiBlitz3.ab3@23935>   MOVE.l A0,D0
000323BC <AmiBlitz3.ab3@23936>   SUB.l ptr_macrobuffer_begin,D0
000323C0 <AmiBlitz3.ab3@23942>    BEQ.w 'cdone
000323C4 <AmiBlitz3.ab3@23943>   CMPI.b #":",-(A0)
000323C8 <AmiBlitz3.ab3@23944>    BNE.w 'cdone
000323CC <AmiBlitz3.ab3@23945>   CMP.w #$1,D0
000323D0 <AmiBlitz3.ab3@23946>    BEQ.w 'cdo
000323D4 <AmiBlitz3.ab3@23947>   TST.b -$1(A0)
000323D8 <AmiBlitz3.ab3@23948>    BMI.w 'cdone
000323DA <AmiBlitz3.ab3@23951>   SUBQ.w #1,D0
000323DE <AmiBlitz3.ab3@23952>  BRA.w 'mclean
000323E2 <AmiBlitz3.ab3@23955>   MOVE.w D0,$8(A2)
000323E6 <AmiBlitz3.ab3@23956>    BEQ.w 'skip2
000323E8 <AmiBlitz3.ab3@23957>   MOVEQ.l #$01,D1
000323EE <AmiBlitz3.ab3@23958>   MOVEA.l _execbase,A6
000323F4 <AmiBlitz3.ab3@23960>   MOVE.l mempool,a0
000323F8 <AmiBlitz3.ab3@23961>   JSR _AllocPooled(a6)
000323FA <AmiBlitz3.ab3@23964>   MOVEA.l D0,A0
000323FE <AmiBlitz3.ab3@23965>   MOVE.l A0,$4(A2)
00032402 <AmiBlitz3.ab3@23966>   MOVE.w $8(A2),D1
00032406 <AmiBlitz3.ab3@23967>    BEQ.w 'skip2
00032408 <AmiBlitz3.ab3@23968>   SUBQ.w #1,D1
0003240E <AmiBlitz3.ab3@23969>   MOVEA.l ptr_macrobuffer_begin,A1
00032410 <AmiBlitz3.ab3@23972>     MOVE.b (A1)+,(A0)+
00032414 <AmiBlitz3.ab3@23973>   DBF D1,'lll
0003241A <AmiBlitz3.ab3@23976> JMP get1bytemain
0003241C <AmiBlitz3.ab3@23980>   MOVE.w D0,D1
0003241E <AmiBlitz3.ab3@23981>   LSR.w #8,D1
00032420 <AmiBlitz3.ab3@23982>   MOVE.b D1,(A0)+
00032422 <AmiBlitz3.ab3@23985>   MOVEQ.l #-$01,D2
00032424 <AmiBlitz3.ab3@23986>   MOVE.b D0,(A0)+
0003242A <AmiBlitz3.ab3@23987>   CMPA.l ptr_macrobuffer_end,A0
0003242E <AmiBlitz3.ab3@23988>    BCC.w macbigerr2
00032430 <AmiBlitz3.ab3@23989> RTS
00032436 <AmiBlitz3.ab3@23992> macbigerr2 JMP macbigerr
00032438 <AmiBlitz3.ab3@23996>   MOVE.l d0,-(a7)
0003243A <AmiBlitz3.ab3@23997>   MOVEQ #0,d0
00032440 <AmiBlitz3.ab3@23998>   CLR.b skiptoggle
00032442 <AmiBlitz3.ab3@24001>     MOVE.b (a5),d0
00032446 <AmiBlitz3.ab3@24002>     BEQ 'l3
0003244A <AmiBlitz3.ab3@24003>     CMP.b #";",d0
0003244E <AmiBlitz3.ab3@24004>     BNE 'l2
00032456 <AmiBlitz3.ab3@24005>     MOVE.b #1,skiptoggle
0003245C <AmiBlitz3.ab3@24008>     TST.b skiptoggle
00032460 <AmiBlitz3.ab3@24009>     BNE 'l4
00032464 <AmiBlitz3.ab3@24010>     CMP.b #":",d0
00032468 <AmiBlitz3.ab3@24011>     BEQ 'l3
0003246A <AmiBlitz3.ab3@24014>     ADDQ #1,a5
0003246E <AmiBlitz3.ab3@24015>  BRA 'loop
00032474 <AmiBlitz3.ab3@24018>   MOVE.w d0,lastchar
00032476 <AmiBlitz3.ab3@24019>   MOVE.l (a7)+,d0
00032478 <AmiBlitz3.ab3@24020> RTS
0003247C <AmiBlitz3.ab3@24027>   BSR.w ifchar
00032480 <AmiBlitz3.ab3@24028>    BNE.w JUMP_syntaxerr
00032482 <AmiBlitz3.ab3@24029>   MOVE.w D0,D1
00032488 <AmiBlitz3.ab3@24030>   JSR get1bytemain
0003248C <AmiBlitz3.ab3@24031>   BSR.w ifchar
00032490 <AmiBlitz3.ab3@24032>    BNE.w 'skip
00032492 <AmiBlitz3.ab3@24033>   ADDQ.w #1,D0
00032494 <AmiBlitz3.ab3@24034>   MOVE.w D0,D2
00032496 <AmiBlitz3.ab3@24035>   ADD.w D0,D0
00032498 <AmiBlitz3.ab3@24036>   ADD.w D2,D0
0003249A <AmiBlitz3.ab3@24037>   ADD.w D0,D1
0003249C <AmiBlitz3.ab3@24038>   MOVE.w D1,D0
000324A0 <AmiBlitz3.ab3@24039>   ANDI.w #$3,D0
000324A4 <AmiBlitz3.ab3@24040>   CMP.w #$3,D0
000324A8 <AmiBlitz3.ab3@24041>    BEQ.w JUMP_syntaxerr
000324AE <AmiBlitz3.ab3@24043>   JSR get1bytemain
000324B0 <AmiBlitz3.ab3@24046> RTS
000324B2 <AmiBlitz3.ab3@24049> thetst1:  TST.b D0
000324B4 <AmiBlitz3.ab3@24050> thetst2:  TST.w D0
000324B6 <AmiBlitz3.ab3@24051> thetst3:  TST.l D0
000324B8 <AmiBlitz3.ab3@24052> thetst4:  TST.l (A7)+                                      ;Any Length?
000324BC <AmiBlitz3.ab3@24053> thetst5:  JSR _Reschedule(A6)
000324C0 <AmiBlitz3.ab3@24055> posbr:    BEQ.w posbr
000324C4 <AmiBlitz3.ab3@24056> negbr:    BNE.w negbr
000324C6 <AmiBlitz3.ab3@24060>   MOVEQ.l #-$01,D2
000324CA <AmiBlitz3.ab3@24061> BRA.w doifm
000324D0 <AmiBlitz3.ab3@24065>   CLR.l fp0addr
000324D2 <AmiBlitz3.ab3@24066>   MOVEQ.l #$01,D1                                          ;while flag
000324D4 <AmiBlitz3.ab3@24067>   MOVEQ.l #$00,D2                                          ;negate flag
000324D8 <AmiBlitz3.ab3@24068> BRA.w doif2
000324DE <AmiBlitz3.ab3@24072>   LEA firstrep,A2
000324E0 <AmiBlitz3.ab3@24073>   MOVEQ.l #$08,D2
000324E4 <AmiBlitz3.ab3@24074> BRA.w freeslist
000324E8 <AmiBlitz3.ab3@24078>   LEA firstsel(PC),A2
000324EA <AmiBlitz3.ab3@24079>   MOVEQ.l #$0E,D2
000324EC <AmiBlitz3.ab3@24084>   MOVEQ.l #$00,D3
000324EE <AmiBlitz3.ab3@24092>   MOVE.l (A2),D0
000324F0 <AmiBlitz3.ab3@24093>   CLR.l (A2)
000324F2 <AmiBlitz3.ab3@24094>   MOVEA.l D0,A2
000324F8 <AmiBlitz3.ab3@24095>   MOVEA.l _execbase,A6
000324FC <AmiBlitz3.ab3@24098>     CMPA.w #$0,A2
00032500 <AmiBlitz3.ab3@24099>      BEQ.w 'done
00032502 <AmiBlitz3.ab3@24100>     TST.w D3
00032506 <AmiBlitz3.ab3@24101>      BEQ.w 'skip
0003250A <AmiBlitz3.ab3@24102>     MOVEM.l D2-D3/A2,-(A7)
0003250C <AmiBlitz3.ab3@24103>     ADDA.w D3,A2
0003250E <AmiBlitz3.ab3@24104>     MOVE.l D4,D2
00032512 <AmiBlitz3.ab3@24105>     BSR.w freeslist
00032516 <AmiBlitz3.ab3@24106>     MOVEM.l (A7)+,D2-D3/A2
00032518 <AmiBlitz3.ab3@24109>     MOVEA.l A2,A1
0003251A <AmiBlitz3.ab3@24110>     MOVE.l D2,D0
0003251C <AmiBlitz3.ab3@24111>     MOVEA.l (A2),A2
00032522 <AmiBlitz3.ab3@24112>     MOVE.l mempool,a0
00032526 <AmiBlitz3.ab3@24113>     JSR _FreePooled(A6)
0003252A <AmiBlitz3.ab3@24114>  BRA.w 'loop
0003252C <AmiBlitz3.ab3@24117> RTS
00032532 <AmiBlitz3.ab3@24119> JUMP_eselerr JMP eselerr
00032536 <AmiBlitz3.ab3@24122> firstsel:  Ds.l 1
0003253A <AmiBlitz3.ab3@24125> selpushb:   Dc.b $02,$40,$00,$FF                           ;ANDI.W  #$00FF,D0
0003253C <AmiBlitz3.ab3@24128> selpushw:   MOVE.w D0,-(A7)
0003253E <AmiBlitz3.ab3@24130> selpushl:   MOVE.l D0,-(A7)
00032542 <AmiBlitz3.ab3@24132> selpushs:   LEA $4(A7),A2                                  ;(a7)=len of string!
00032546 <AmiBlitz3.ab3@24135> selcomb:    ANDI.w #$FF,D0
00032548 <AmiBlitz3.ab3@24136> selcomw:    CMP.w (A7),D0
0003254A <AmiBlitz3.ab3@24138> selcoml:    CMP.l (A7),D0
0003254E <AmiBlitz3.ab3@24140> selbne:     BNE.w selbne
00032550 <AmiBlitz3.ab3@24142> endsel:     ADDQ.w #8,A7
00032554 <AmiBlitz3.ab3@24148>   MOVE.l firstsel(PC),D0                                  
00032558 <AmiBlitz3.ab3@24149>    BEQ.w JUMP_eselerr
0003255A <AmiBlitz3.ab3@24150>   MOVEA.l D0,A2
0003255E <AmiBlitz3.ab3@24151>    BSR.w fillbne
00032564 <AmiBlitz3.ab3@24154>   MOVEA.l _execbase,A6
00032568 <AmiBlitz3.ab3@24157>   MOVE.l $4(A2),D0
0003256C <AmiBlitz3.ab3@24158>    BEQ.w 'done
0003256E <AmiBlitz3.ab3@24159>   MOVEA.l D0,A3
00032572 <AmiBlitz3.ab3@24160>   MOVEA.l $4(A3),A0
00032578 <AmiBlitz3.ab3@24161>   MOVE.l destpointer,D1
0003257A <AmiBlitz3.ab3@24162>   SUB.l A0,D1
00032580 <AmiBlitz3.ab3@24164>     TST.b fast
00032584 <AmiBlitz3.ab3@24165>     BEQ 'loop_l1
0003258A <AmiBlitz3.ab3@24166>     MOVE.w dontwrite_nomemleft,D0
0003258E <AmiBlitz3.ab3@24167>     BNE.w 'skip
00032590 <AmiBlitz3.ab3@24168>     ADDQ.l #2,d1
00032594 <AmiBlitz3.ab3@24169>     MOVE.l d1,-2(a0)
00032598 <AmiBlitz3.ab3@24170>   BRA 'skip
0003259E <AmiBlitz3.ab3@24174>   TST.w dontwrite_nomemleft
000325A2 <AmiBlitz3.ab3@24175>      BNE.w 'skip
000325A8 <AmiBlitz3.ab3@24176>   CMP.l #MaxWordSgnd,D1
000325AC <AmiBlitz3.ab3@24177>    BHI.w JUMP_cbraerr
000325AE <AmiBlitz3.ab3@24178>   MOVE.w D1,(A0)
000325B2 <AmiBlitz3.ab3@24181>   MOVE.l (A3),$4(A2)                                       ;next of me is new first
000325B4 <AmiBlitz3.ab3@24182>   MOVEA.l A3,A1
000325B6 <AmiBlitz3.ab3@24183>   MOVEQ.l #$08,D0
000325BC <AmiBlitz3.ab3@24184>   MOVE.l mempool,a0
000325C0 <AmiBlitz3.ab3@24185>    JSR _FreePooled(A6)
000325C4 <AmiBlitz3.ab3@24186>  BRA.w 'loop
000325CA <AmiBlitz3.ab3@24189>   JSR popselect                                            ;fix stack on select
000325CE <AmiBlitz3.ab3@24190>   MOVEA.l firstsel(PC),A1
000325D4 <AmiBlitz3.ab3@24191>   MOVE.l (A1),firstsel
000325D6 <AmiBlitz3.ab3@24192>   MOVEQ.l #$0E,D0
000325DC <AmiBlitz3.ab3@24193>   MOVEA.l _execbase,A6
000325E2 <AmiBlitz3.ab3@24194>   MOVE.l mempool,a0
000325E6 <AmiBlitz3.ab3@24195>   JSR _FreePooled(A6)
000325EC <AmiBlitz3.ab3@24196> JMP get1bytemain
000325EE <AmiBlitz3.ab3@24200>   MOVEA.l (A7)+,A1
000325F0 <AmiBlitz3.ab3@24201>   SUBQ.w #8,A1
000325F2 <AmiBlitz3.ab3@24202>   MOVEQ.l #$09,D0
000325F4 <AmiBlitz3.ab3@24203>   ADD.l (A1),D0
000325F6 <AmiBlitz3.ab3@24206>   ADDQ.w #2,A7                                             ;for runtime errs!
000325FA <AmiBlitz3.ab3@24211>   MOVE.l firstsel(PC),D0
000325FE <AmiBlitz3.ab3@24212>    BEQ.w JUMP_defaerr
00032600 <AmiBlitz3.ab3@24213>   MOVEA.l D0,A2
00032604 <AmiBlitz3.ab3@24214>   BSR.w fillbra
00032608 <AmiBlitz3.ab3@24215>   BSR.w fillbne
0003260C <AmiBlitz3.ab3@24216>   CLR.l $8(A2)
00032610 <AmiBlitz3.ab3@24217>   MOVE.w $C(A2),D2
00032614 <AmiBlitz3.ab3@24218> BRA.w casechk
0003261A <AmiBlitz3.ab3@24220> JUMP_defaerr JMP defaerr
0003261E <AmiBlitz3.ab3@24225>   MOVE.l $8(A2),D0
00032622 <AmiBlitz3.ab3@24226>    BEQ.w 'skip   ;none to do!
00032624 <AmiBlitz3.ab3@24227>   MOVEA.l D0,A0
0003262A <AmiBlitz3.ab3@24228>   MOVE.l destpointer,D1
0003262C <AmiBlitz3.ab3@24229>   SUB.l A0,D1
00032632 <AmiBlitz3.ab3@24232>     TST.b fast
00032636 <AmiBlitz3.ab3@24233>     BEQ 'l1
0003263C <AmiBlitz3.ab3@24234>     TST.w dontwrite_nomemleft
00032640 <AmiBlitz3.ab3@24235>     BNE.w 'skip
00032642 <AmiBlitz3.ab3@24236>     ADDQ.l #2,d1
00032646 <AmiBlitz3.ab3@24237>     MOVE.l D1,-2(A0)
0003264A <AmiBlitz3.ab3@24238>   BRA 'skip
00032650 <AmiBlitz3.ab3@24242>   TST.w dontwrite_nomemleft
00032654 <AmiBlitz3.ab3@24243>      BNE.w 'skip
0003265A <AmiBlitz3.ab3@24245>    CMP.l #MaxWordSgnd,D1
0003265E <AmiBlitz3.ab3@24246>    BHI.w JUMP_cbraerr
00032660 <AmiBlitz3.ab3@24247>   MOVE.w D1,(A0)
00032662 <AmiBlitz3.ab3@24250> RTS
00032668 <AmiBlitz3.ab3@24252> JUMP_cbraerr JMP cbraerr
0003266C <AmiBlitz3.ab3@24258>   MOVE.l $8(A2),D0
00032670 <AmiBlitz3.ab3@24259>    BEQ.w 'skip
00032672 <AmiBlitz3.ab3@24263>   MOVEA.l D0,A3
00032676 <AmiBlitz3.ab3@24264>   MOVE.w #$6000,D1
0003267C <AmiBlitz3.ab3@24267>    TST.b fast
00032680 <AmiBlitz3.ab3@24268>    BEQ 'l1
00032686 <AmiBlitz3.ab3@24269>    OR.l #$ff,d1
0003268A <AmiBlitz3.ab3@24270>    BSR writeword
0003268E <AmiBlitz3.ab3@24275>   BSR.w writeword
00032690 <AmiBlitz3.ab3@24276>   MOVEQ.l #$08,D0
00032692 <AmiBlitz3.ab3@24277>   MOVEQ.l #$01,D1
00032698 <AmiBlitz3.ab3@24278>   MOVEA.l _execbase,A6
0003269E <AmiBlitz3.ab3@24280>   MOVE.l mempool,a0
000326A2 <AmiBlitz3.ab3@24281>   JSR _AllocPooled(a6)
000326A4 <AmiBlitz3.ab3@24284>   MOVEA.l D0,A0
000326A8 <AmiBlitz3.ab3@24285>   MOVE.l $4(A2),(A0)
000326AC <AmiBlitz3.ab3@24286>   MOVE.l A0,$4(A2)
000326B4 <AmiBlitz3.ab3@24287>   MOVE.l destpointer,$4(A0)
000326B8 <AmiBlitz3.ab3@24288>  BRA.w writeword
000326BA <AmiBlitz3.ab3@24291> RTS
000326C0 <AmiBlitz3.ab3@24295>   TST.b debugmode
000326C4 <AmiBlitz3.ab3@24296>    BEQ.w 'norerr
000326C8 <AmiBlitz3.ab3@24297>   MOVE.w #$C313,D1
000326CC <AmiBlitz3.ab3@24298>   CMP.w #$3,D2
000326D0 <AmiBlitz3.ab3@24299>    BCS.w 'dochk
000326D2 <AmiBlitz3.ab3@24300>   ADDQ.w #1,D1
000326D6 <AmiBlitz3.ab3@24303>  BRA.w Atokejsr
000326D8 <AmiBlitz3.ab3@24306> RTS
000326DE <AmiBlitz3.ab3@24309> JUMP_caseerr JMP caseerr
000326E2 <AmiBlitz3.ab3@24316>   MOVE.l firstsel(PC),D0
000326E6 <AmiBlitz3.ab3@24317>    BEQ.w JUMP_caseerr
000326E8 <AmiBlitz3.ab3@24318>   MOVEA.l D0,A2
000326EC <AmiBlitz3.ab3@24319>    BSR.w fillbra
000326F0 <AmiBlitz3.ab3@24320>    BSR.w fillbne
000326F4 <AmiBlitz3.ab3@24322>   MOVE.w $C(A2),D2    ;type to get!
000326F6 <AmiBlitz3.ab3@24323>   MOVE.w D2,-(A7)
000326FA <AmiBlitz3.ab3@24324>    BSR.w casechk
000326FC <AmiBlitz3.ab3@24325>   MOVE.w (A7),D2
00032700 <AmiBlitz3.ab3@24328>    BSR.w bakeval
00032702 <AmiBlitz3.ab3@24329>   MOVE.w (A7)+,D2    ;types to compare
00032706 <AmiBlitz3.ab3@24330>   LEA selcomb(PC),A0
0003270A <AmiBlitz3.ab3@24331>   LEA selcombf(PC),A1
0003270E <AmiBlitz3.ab3@24332>   CMP.w #$1,D2
00032712 <AmiBlitz3.ab3@24333>    BEQ.w 'doit
00032716 <AmiBlitz3.ab3@24334>   LEA selcomw(PC),A0
0003271A <AmiBlitz3.ab3@24335>   CMP.w #$2,D2
0003271E <AmiBlitz3.ab3@24336>    BEQ.w 'doit
00032722 <AmiBlitz3.ab3@24337>   LEA selcoml(PC),A0
00032726 <AmiBlitz3.ab3@24338>   LEA selcomlf(PC),A1
0003272A <AmiBlitz3.ab3@24339>   CMP.w #$7,D2
0003272E <AmiBlitz3.ab3@24340>    BCS.w 'doit
00032732 <AmiBlitz3.ab3@24342>   MOVE.w #$CE01,D1     ; was #casestrcomp
00032736 <AmiBlitz3.ab3@24343>    BSR.w Atokejsr
0003273A <AmiBlitz3.ab3@24344>  BRA.w 'doneit
0003273E <AmiBlitz3.ab3@24347>   BSR.w pokecode
00032742 <AmiBlitz3.ab3@24350>   MOVE.w selbne(PC),D1
00032748 <AmiBlitz3.ab3@24353>     TST.b fast
0003274C <AmiBlitz3.ab3@24354>     BEQ 'l1
00032752 <AmiBlitz3.ab3@24355>     ORI.l #$ff,d1
00032756 <AmiBlitz3.ab3@24356>     BSR writeword
0003275A <AmiBlitz3.ab3@24361>   BSR.w writeword
0003275E <AmiBlitz3.ab3@24362>   MOVEA.l firstsel(PC),A0
00032766 <AmiBlitz3.ab3@24363>   MOVE.l destpointer,$8(A0)
0003276A <AmiBlitz3.ab3@24364> BRA.w writeword
0003276E <AmiBlitz3.ab3@24368> pcchk:      Dc.b $3F,$3C,$73,$45                           ;MOVE.W  #$7345,-(A7)   ;#"sE",-(a7) org source
00032770 <AmiBlitz3.ab3@24369> clrst:      Dc.b $42,$A7                                   ;CLR.L   -(A7)
00032774 <AmiBlitz3.ab3@24372> sellineat:  Ds.l 1
0003277A <AmiBlitz3.ab3@24378>   TST.b debugmode
0003277E <AmiBlitz3.ab3@24379>    BEQ.w 'norerr
00032782 <AmiBlitz3.ab3@24380>   MOVE.l pcchk(PC),D1                                      ;move #"sE",-(a7)
00032786 <AmiBlitz3.ab3@24381>    BSR.w writelong
00032790 <AmiBlitz3.ab3@24384>   MOVE.l linenumat,sellineat
0003279A <AmiBlitz3.ab3@24387>    MOVE.l destpointer,pushpc
000327A4 <AmiBlitz3.ab3@24388>   MOVE.l hunkoffsetbase,pushoff
000327A6 <AmiBlitz3.ab3@24390>   MOVEQ.l #$00,D2
000327AA <AmiBlitz3.ab3@24391>    BSR.w bakevalu                                          ;Evaluate
000327AE <AmiBlitz3.ab3@24392>    BSR.w pushdo
000327B2 <AmiBlitz3.ab3@24393>   CMP.w #$7,D2
000327B6 <AmiBlitz3.ab3@24394>    BNE.w 'nos
000327BA <AmiBlitz3.ab3@24395>   MOVE.w clrst(PC),D1
000327BE <AmiBlitz3.ab3@24396>    BSR.w writeword
000327C2 <AmiBlitz3.ab3@24399>    BSR.w pushput
000327C6 <AmiBlitz3.ab3@24400>   LEA selpushb(PC),A0
000327CA <AmiBlitz3.ab3@24401>   LEA selpushbf(PC),A1
000327CE <AmiBlitz3.ab3@24402>   CMP.w #$1,D2
000327D2 <AmiBlitz3.ab3@24403>    BEQ.w 'doit
000327D6 <AmiBlitz3.ab3@24404>   LEA selpushw(PC),A0
000327DA <AmiBlitz3.ab3@24405>   CMP.w #$2,D2
000327DE <AmiBlitz3.ab3@24406>    BEQ.w 'doit
000327E2 <AmiBlitz3.ab3@24407>   LEA selpushl(PC),A0
000327E6 <AmiBlitz3.ab3@24408>   LEA selpushlf(PC),A1
000327EA <AmiBlitz3.ab3@24409>   CMP.w #$7,D2
000327EE <AmiBlitz3.ab3@24410>    BCS.w 'doit
000327F4 <AmiBlitz3.ab3@24412>   MOVE.w moved0a3,D1                                       ;d0 to a3!
000327F8 <AmiBlitz3.ab3@24413>    BSR.w writeword
000327FC <AmiBlitz3.ab3@24414>   LEA selpushs(PC),A0
00032800 <AmiBlitz3.ab3@24415>   LEA selpushsf(PC),A1
00032804 <AmiBlitz3.ab3@24416>    BSR.w pokecode
00032808 <AmiBlitz3.ab3@24417>   MOVE.w #$C701,D1     ; was #astring
0003280C <AmiBlitz3.ab3@24418>    BSR.w Atokejsr
00032810 <AmiBlitz3.ab3@24419>  BRA.w 'doneit
00032814 <AmiBlitz3.ab3@24422>   BSR.w pokecode
00032816 <AmiBlitz3.ab3@24425>   MOVEQ.l #$0E,D0
00032818 <AmiBlitz3.ab3@24426>   MOVEQ.l #$01,D1
0003281E <AmiBlitz3.ab3@24427>   MOVEA.l _execbase,A6
00032824 <AmiBlitz3.ab3@24430>   MOVE.l mempool,a0
00032828 <AmiBlitz3.ab3@24431>   JSR _AllocPooled(a6)
0003282A <AmiBlitz3.ab3@24433>   MOVEA.l D0,A0
0003282E <AmiBlitz3.ab3@24434>   MOVE.l firstsel(PC),(A0)
00032834 <AmiBlitz3.ab3@24435>   MOVE.l A0,firstsel
00032838 <AmiBlitz3.ab3@24436>   CLR.l $4(A0)
0003283C <AmiBlitz3.ab3@24437>   CLR.l $8(A0)        ;default mode!
00032840 <AmiBlitz3.ab3@24438>   MOVE.w D2,$C(A0)
00032842 <AmiBlitz3.ab3@24439> RTS
00032848 <AmiBlitz3.ab3@24443>   MOVE.l firstrep,D0
0003284C <AmiBlitz3.ab3@24444>    BEQ.w JUMP_unterr1
00032850 <AmiBlitz3.ab3@24445>   MOVE.w #$6000,D1      ;BRA
00032854 <AmiBlitz3.ab3@24446>   BSR.w writeword
00032856 <AmiBlitz3.ab3@24447>   MOVEA.l D0,A0
0003285A <AmiBlitz3.ab3@24448>   MOVE.l $4(A0),D1      ;dest pc
00032860 <AmiBlitz3.ab3@24449>   SUB.l destpointer,D1
00032862 <AmiBlitz3.ab3@24450>   TST.w D1
00032866 <AmiBlitz3.ab3@24451>    BPL.w JUMP_unterr2
0003286A <AmiBlitz3.ab3@24452>   BSR.w writeword
00032870 <AmiBlitz3.ab3@24453>   MOVEA.l _execbase,A6
00032874 <AmiBlitz3.ab3@24454> BRA.w unlinkrep
0003287A <AmiBlitz3.ab3@24456> JUMP_unterr2 JMP unterr2
00032880 <AmiBlitz3.ab3@24457> JUMP_unterr1 JMP unterr1
00032886 <AmiBlitz3.ab3@24461>   MOVE.l firstrep,D0
0003288A <AmiBlitz3.ab3@24462>    BEQ.w JUMP_unterr1    ;no repeat!
0003288E <AmiBlitz3.ab3@24463>   BSR.w do_if            ;do the until
00032894 <AmiBlitz3.ab3@24465>   JSR reget
00032898 <AmiBlitz3.ab3@24466>    BNE.w JUMP_syntaxerr
0003289E <AmiBlitz3.ab3@24468>   MOVE.w dontwrite_nomemleft,D1
000328A2 <AmiBlitz3.ab3@24469>    BNE.w 'skip
000328A8 <AmiBlitz3.ab3@24470>   MOVEA.l firstrep,A0
000328AE <AmiBlitz3.ab3@24471>   MOVEA.l destpointer,A1
000328B4 <AmiBlitz3.ab3@24474>     TST.b fast
000328B8 <AmiBlitz3.ab3@24475>     BEQ 'l1
000328BA <AmiBlitz3.ab3@24476>     SUBQ.w #4,a1
000328BE <AmiBlitz3.ab3@24477>     MOVE.l $4(A0),D2
000328C0 <AmiBlitz3.ab3@24478>     SUB.l A1,D2
000328C2 <AmiBlitz3.ab3@24479>     MOVE.l d2,(a1)
000328C6 <AmiBlitz3.ab3@24480>   BRA 'skip
000328C8 <AmiBlitz3.ab3@24485>   SUBQ.w #2,A1
000328CC <AmiBlitz3.ab3@24486>   MOVE.l $4(A0),D2    ;dest pc.
000328CE <AmiBlitz3.ab3@24487>   SUB.l A1,D2
000328D0 <AmiBlitz3.ab3@24488>   TST.w D2
000328D4 <AmiBlitz3.ab3@24489>    BPL.w JUMP_unterr2
000328D6 <AmiBlitz3.ab3@24490>   MOVE.w D2,(A1)      ;put in pra dest.
000328DC <AmiBlitz3.ab3@24493>   MOVEA.l firstiff,A1
000328E2 <AmiBlitz3.ab3@24494>   MOVE.l (A1),firstiff
000328E4 <AmiBlitz3.ab3@24495>   MOVEQ.l #$0E,D0
000328EA <AmiBlitz3.ab3@24496>   MOVEA.l _execbase,A6
000328F0 <AmiBlitz3.ab3@24499>   MOVE.l mempool,a0
000328F4 <AmiBlitz3.ab3@24500>   JSR _FreePooled(A6)
000328FA <AmiBlitz3.ab3@24504>   MOVEA.l firstrep,A1
00032900 <AmiBlitz3.ab3@24505>   MOVE.l (A1),firstrep
00032902 <AmiBlitz3.ab3@24506>   MOVEQ.l #$08,D0
00032908 <AmiBlitz3.ab3@24509>   MOVE.l mempool,a0
0003290C <AmiBlitz3.ab3@24510> JMP _FreePooled(A6)
00032910 <AmiBlitz3.ab3@24513> iflineat:   Ds.l 1
00032912 <AmiBlitz3.ab3@24517>   MOVEQ.l #$00,D2   ;negate flag
00032918 <AmiBlitz3.ab3@24519>   TST.b fast
0003291C <AmiBlitz3.ab3@24520>   BEQ 'l1
00032924 <AmiBlitz3.ab3@24521>   MOVE.b #1,nostringopt
0003292C <AmiBlitz3.ab3@24522>   MOVE.b #1,iniffcommand
0003292E <AmiBlitz3.ab3@24527>   MOVEQ.l #$00,D1  ;if flag
00032930 <AmiBlitz3.ab3@24533>   MOVE.w D1,-(A7)
00032936 <AmiBlitz3.ab3@24534>   MOVE.l destpointer,-(A7)
00032938 <AmiBlitz3.ab3@24535>   MOVE.w D2,-(A7)
00032942 <AmiBlitz3.ab3@24536>   MOVE.l linenumat,iflineat
00032944 <AmiBlitz3.ab3@24538>   MOVEQ.l #$00,D2
0003294E <AmiBlitz3.ab3@24540>   MOVE.b optistring,optistring2
00032956 <AmiBlitz3.ab3@24541>   MOVE.b #1,optistring
0003295A <AmiBlitz3.ab3@24543>   BSR.w bakevalu       ;Get True/False Expression!
00032964 <AmiBlitz3.ab3@24545>   MOVE.b optistring2,optistring
00032968 <AmiBlitz3.ab3@24547>   CMP.w #$5,D2
0003296C <AmiBlitz3.ab3@24548>    BEQ.w 'float
00032970 <AmiBlitz3.ab3@24549>   MOVE.w thetst1(PC),D1
00032974 <AmiBlitz3.ab3@24550>   CMP.w #$1,D2
00032978 <AmiBlitz3.ab3@24551>    BEQ.w 'writebranchcode
0003297C <AmiBlitz3.ab3@24552>   MOVE.w thetst2(PC),D1
00032980 <AmiBlitz3.ab3@24553>   CMP.w #$2,D2
00032984 <AmiBlitz3.ab3@24554>    BEQ.w 'writebranchcode
00032988 <AmiBlitz3.ab3@24555>   MOVE.w thetst4(PC),D1
0003298C <AmiBlitz3.ab3@24556>   CMP.w #$7,D2
00032990 <AmiBlitz3.ab3@24557>    BEQ.w 'writebranchcode
00032994 <AmiBlitz3.ab3@24558>   MOVE.w thetst3(PC),D1
00032998 <AmiBlitz3.ab3@24559>  BRA.w 'writebranchcode
0003299E <AmiBlitz3.ab3@24563>   TST.b fpu
000329A2 <AmiBlitz3.ab3@24564>   BEQ 'dofpu
000329A8 <AmiBlitz3.ab3@24565>   MOVE.l #$f200003a,d1
000329AC <AmiBlitz3.ab3@24566>   BSR writelong
000329B0 <AmiBlitz3.ab3@24567>   MOVE.w #$f2c1,d1       
000329B4 <AmiBlitz3.ab3@24568>   BSR writeword
000329B8 <AmiBlitz3.ab3@24569>   BSR writelong
000329BA <AmiBlitz3.ab3@24570>   ADDQ.l #2,a7
000329BE <AmiBlitz3.ab3@24571>  BRA.w 'br2
000329C2 <AmiBlitz3.ab3@24575>    MOVE.w #$C900,D1     ;was #getffpbase
000329C6 <AmiBlitz3.ab3@24576>    BSR.w Atokejsr
000329CA <AmiBlitz3.ab3@24577>   MOVE.l thetst5(PC),D1
000329CE <AmiBlitz3.ab3@24578>    BSR.w writelong
000329D2 <AmiBlitz3.ab3@24579>  BRA.w 'gotst2
000329D8 <AmiBlitz3.ab3@24583>          CLR.b iniffcommand
000329DE <AmiBlitz3.ab3@24584>          TST.b fast                                        ;branchcode
000329E2 <AmiBlitz3.ab3@24585>          BEQ 'b6
000329E8 <AmiBlitz3.ab3@24586>          TST.b fpu
000329EC <AmiBlitz3.ab3@24587>          BEQ 'nofpu
000329F2 <AmiBlitz3.ab3@24591>           MOVE.l destpointer,a0
000329F8 <AmiBlitz3.ab3@24592>          SUB.l load_var_addr,a0
000329FE <AmiBlitz3.ab3@24593>          CMP.l #4,a0
00032A02 <AmiBlitz3.ab3@24594>          BEQ 'nofpu
00032A0A <AmiBlitz3.ab3@24595>          CMP.l #$f2400014,-4(a4)                           ;<
00032A0E <AmiBlitz3.ab3@24596>          BNE 'nolt
00032A14 <AmiBlitz3.ab3@24597>          SUBQ.l #2,destpointer
00032A1A <AmiBlitz3.ab3@24598>          MOVE.w #$f293,-4(a4)                              ;
00032A1E <AmiBlitz3.ab3@24599>  BRA 'brf
00032A26 <AmiBlitz3.ab3@24602>   CMP.l #$f2400015,-4(a4)                                  ;<=
00032A2A <AmiBlitz3.ab3@24603>          BNE 'nole
00032A30 <AmiBlitz3.ab3@24604>          SUBQ.l #2,destpointer
00032A36 <AmiBlitz3.ab3@24605>          MOVE.w #$f292,-4(a4)
00032A3A <AmiBlitz3.ab3@24606>  BRA 'brf
00032A42 <AmiBlitz3.ab3@24609>   CMP.l #$f2400013,-4(a4)                                  ;=>
00032A46 <AmiBlitz3.ab3@24610>          BNE 'noge
00032A4C <AmiBlitz3.ab3@24611>          SUBQ.l #2,destpointer
00032A52 <AmiBlitz3.ab3@24612>          MOVE.w #$f294,-4(a4)
00032A56 <AmiBlitz3.ab3@24613>  BRA 'brf
00032A5E <AmiBlitz3.ab3@24616>   CMP.l #$f2400012,-4(a4)                                  ;>
00032A62 <AmiBlitz3.ab3@24617>          BNE 'nogt
00032A68 <AmiBlitz3.ab3@24618>          SUBQ.l #2,destpointer
00032A6E <AmiBlitz3.ab3@24619>          MOVE.w #$f295,-4(a4)
00032A72 <AmiBlitz3.ab3@24620>  BRA 'brf
00032A7A <AmiBlitz3.ab3@24623>   CMP.l #$f2400001,-4(a4)                                  ;=
00032A7E <AmiBlitz3.ab3@24624>          BNE 'noeq
00032A84 <AmiBlitz3.ab3@24625>          SUBQ.l #2,destpointer
00032A8A <AmiBlitz3.ab3@24626>          MOVE.w #$f28e,-4(a4)
00032A8E <AmiBlitz3.ab3@24627>  BRA 'brf
00032A96 <AmiBlitz3.ab3@24630>   CMP.l #$f240000e,-4(a4)                                  ;<>
00032A9A <AmiBlitz3.ab3@24631>          BNE 'none
00032AA0 <AmiBlitz3.ab3@24632>          SUBQ.l #2,destpointer
00032AA6 <AmiBlitz3.ab3@24633>          MOVE.w #$f281,-4(a4)
00032AA8 <AmiBlitz3.ab3@24636>   ADDQ.l #2,a7
00032AAE <AmiBlitz3.ab3@24638>     TST.b fast
00032AB2 <AmiBlitz3.ab3@24639>     BEQ 'l1
00032AB8 <AmiBlitz3.ab3@24640>     OR.b #$40,-3(a4)
00032ABC <AmiBlitz3.ab3@24641>     BSR writeword
00032AC0 <AmiBlitz3.ab3@24645>   BSR writeword
00032AC4 <AmiBlitz3.ab3@24646>  BRA.s 'br2
00032ACA <AmiBlitz3.ab3@24650>   MOVE.l destpointer,a0
00032AD0 <AmiBlitz3.ab3@24651>          SUB.l load_var_addr,a0
00032AD6 <AmiBlitz3.ab3@24652>          CMP.l #4,a0
00032ADA <AmiBlitz3.ab3@24653>          BEQ 'gotst2
00032AE0 <AmiBlitz3.ab3@24654>          CMP.w #$4eb9,-6(a4)
00032AE4 <AmiBlitz3.ab3@24655>          BEQ 'b6
00032AEA <AmiBlitz3.ab3@24656>          CMP.w #$5ec0,-2(a4)                               ;>
00032AEE <AmiBlitz3.ab3@24657>      BNE.s 'lb1
00032AF4 <AmiBlitz3.ab3@24658>          MOVE.w #$6f00,-2(a4)                              ;ble
00032AF8 <AmiBlitz3.ab3@24659>  BRA.s 'br
00032AFE <AmiBlitz3.ab3@24662>   CMP.w #$5dc0,-2(a4)                                       ;<
00032B02 <AmiBlitz3.ab3@24663>   BNE.s 'lb2
00032B08 <AmiBlitz3.ab3@24664>          MOVE.w #$6c00,-2(a4)                              ;bge
00032B0C <AmiBlitz3.ab3@24665>  BRA.s 'br
00032B12 <AmiBlitz3.ab3@24668>   CMP.w #$57c0,-2(a4)                                      ;=
00032B16 <AmiBlitz3.ab3@24669>   BNE.s 'lb3
00032B1C <AmiBlitz3.ab3@24670>          MOVE.w #$6600,-2(a4)                              ;bne
00032B20 <AmiBlitz3.ab3@24671>  BRA.s 'br
00032B26 <AmiBlitz3.ab3@24674>   CMP.w #$56c0,-2(a4)                                      ;<>
00032B2A <AmiBlitz3.ab3@24675>   BNE.s 'lb4
00032B30 <AmiBlitz3.ab3@24676>          MOVE.w #$6700,-2(a4)                              ;beq
00032B34 <AmiBlitz3.ab3@24677>  BRA.s 'br
00032B3A <AmiBlitz3.ab3@24680>   CMP.w #$5cc0,-2(a4)                                      ;>=
00032B3E <AmiBlitz3.ab3@24681>   BNE.s 'lb5
00032B44 <AmiBlitz3.ab3@24682>          MOVE.w #$6d00,-2(a4)                              ;blt
00032B48 <AmiBlitz3.ab3@24683>  BRA.s 'br
00032B4E <AmiBlitz3.ab3@24686>   CMP.w #$5fc0,-2(a4)                                      ;<=
00032B52 <AmiBlitz3.ab3@24687>         BNE.s 'b6
00032B58 <AmiBlitz3.ab3@24688>          MOVE.w #$6e00,-2(a4)                              ;bgt
00032B5A <AmiBlitz3.ab3@24691>   TST.w (a7)+
00032B60 <AmiBlitz3.ab3@24693>         TST.b fast
00032B64 <AmiBlitz3.ab3@24694>         BEQ 'l1a
00032B6A <AmiBlitz3.ab3@24695>         OR.b #$ff,-1(a4)                                   ;long branches
00032B6E <AmiBlitz3.ab3@24696>         BSR writeword
00032B72 <AmiBlitz3.ab3@24700>         BSR writeword
00032B76 <AmiBlitz3.ab3@24701>  BRA.s 'br2
00032B7A <AmiBlitz3.ab3@24705>   BSR.w writeword
00032B7E <AmiBlitz3.ab3@24708>   MOVE.l posbr(PC),D1
00032B80 <AmiBlitz3.ab3@24709>   TST.w (A7)+
00032B84 <AmiBlitz3.ab3@24710>    BEQ.w 'skip
00032B88 <AmiBlitz3.ab3@24711>   MOVE.l negbr(PC),D1
00032B8E <AmiBlitz3.ab3@24715>   TST.b fast
00032B92 <AmiBlitz3.ab3@24716>            BEQ 'l1b
00032B98 <AmiBlitz3.ab3@24717>            OR.l #$00ff0000,d1
00032B9C <AmiBlitz3.ab3@24718>            BSR writelong
00032BA0 <AmiBlitz3.ab3@24719>            BSR writeword
00032BA4 <AmiBlitz3.ab3@24720>  BRA 'br2
00032BA8 <AmiBlitz3.ab3@24723>   BSR.w writelong
00032BAA <AmiBlitz3.ab3@24727>   MOVEQ.l #$0E,D0
00032BAC <AmiBlitz3.ab3@24728>   MOVEQ.l #$01,D1
00032BB2 <AmiBlitz3.ab3@24729>   MOVEA.l _execbase,A6
00032BB8 <AmiBlitz3.ab3@24732>   MOVE.l mempool,a0
00032BBC <AmiBlitz3.ab3@24733>   JSR _AllocPooled(a6)
00032BBE <AmiBlitz3.ab3@24736>   MOVEA.l D0,A0
00032BC4 <AmiBlitz3.ab3@24737>   MOVE.l firstiff,(A0)
00032BCA <AmiBlitz3.ab3@24738>   MOVE.l A0,firstiff
00032BCE <AmiBlitz3.ab3@24739>   MOVE.l (A7)+,$4(A0)
00032BD6 <AmiBlitz3.ab3@24740>   MOVE.l destpointer,$8(A0)
00032BDA <AmiBlitz3.ab3@24741>   MOVE.w (A7)+,$C(A0)
00032BE0 <AmiBlitz3.ab3@24742>    JSR reget
00032BE4 <AmiBlitz3.ab3@24743>    BEQ.w ifdone
00032BEA <AmiBlitz3.ab3@24744>   BSET #$7,$C(A0)    ;one liner
00032BF4 <AmiBlitz3.ab3@24750>   MOVE.w oldqflag,instringon
00032BFA <AmiBlitz3.ab3@24751>   MOVEA.l lastsourcepos,A5
00032C02 <AmiBlitz3.ab3@24753>   MOVE.w #$003A,lastchar      ; ':'
00032C04 <AmiBlitz3.ab3@24756> RTS
00032C08 <AmiBlitz3.ab3@24760>   CMP.w #$1,D0     ;4
00032C0C <AmiBlitz3.ab3@24761>    BLT.w gc1skip   ;4
00032C10 <AmiBlitz3.ab3@24762>   CMP.w #$0,D0     ;2
00032C14 <AmiBlitz3.ab3@24763>    BGT.w gc1skip
00032C16 <AmiBlitz3.ab3@24764>   ADD.w D0,D0
00032C18 <AmiBlitz3.ab3@24765>   ADD.w D0,D0
00032C1C <AmiBlitz3.ab3@24766>   MOVEA.l gc1labs-4(PC,D0.W),A0
00032C1E <AmiBlitz3.ab3@24767>  JMP (A0)
00032C22 <AmiBlitz3.ab3@24770>  BRA.w gc1skip
00032C26 <AmiBlitz3.ab3@24776>   CMP.w #$1,D0     ;4
00032C2A <AmiBlitz3.ab3@24777>    BLT.w gc2skip   ;4
00032C2E <AmiBlitz3.ab3@24778>   CMP.w #$0,D0     ;2
00032C32 <AmiBlitz3.ab3@24779>    BGT.w gc2skip
00032C34 <AmiBlitz3.ab3@24780>   ADD.w D0,D0
00032C36 <AmiBlitz3.ab3@24781>   ADD.w D0,D0
00032C3A <AmiBlitz3.ab3@24782>   MOVEA.l gc2labs-4(PC,D0.W),A0
00032C3C <AmiBlitz3.ab3@24783>   JSR (A0)
00032C40 <AmiBlitz3.ab3@24786>  BRA.w gc2skip
00032C44 <AmiBlitz3.ab3@24792>   CMP.w #$1,D0    ;4
00032C48 <AmiBlitz3.ab3@24793>    BLT.w gc3skip  ;4
00032C4C <AmiBlitz3.ab3@24794>   CMP.w #$0,D0    ;2
00032C50 <AmiBlitz3.ab3@24795>    BGT.w gc3skip
00032C52 <AmiBlitz3.ab3@24796>   ADD.w D0,D0
00032C54 <AmiBlitz3.ab3@24797>   ADD.w D0,D0
00032C58 <AmiBlitz3.ab3@24798>   MOVEA.l gc3labs-4(PC,D0.W),A0
00032C5C <AmiBlitz3.ab3@24801>   MOVE.w #$6753,-(A7)                                      ;#'gS' ;for runtime error checking!
00032C5E <AmiBlitz3.ab3@24802>    JSR (A0)
00032C62 <AmiBlitz3.ab3@24805>  BRA.w gc3skip
00032C64 <AmiBlitz3.ab3@24810> labcnt:   Ds.w 1
00032C66 <AmiBlitz3.ab3@24817>   MOVEQ.l #$02,D2
00032C6A <AmiBlitz3.ab3@24818>    BSR.w bakeval
00032C6E <AmiBlitz3.ab3@24820>   LEA ongotocode(PC),A0
00032C72 <AmiBlitz3.ab3@24821>   LEA ongotocodef(PC),A1
00032C76 <AmiBlitz3.ab3@24822>   MOVE.w #gc1skip-ongotocode,D1      ; is #$001A
00032C7A <AmiBlitz3.ab3@24823>   CMP.w #-$7FFB,D0                   ; was #$8005
00032C7E <AmiBlitz3.ab3@24824>    BEQ.w 'isok
00032C82 <AmiBlitz3.ab3@24825>   CMP.w #-$7FFA,D0                   ; was #$8006
00032C86 <AmiBlitz3.ab3@24826>    BNE.w JUMP_syntaxerr
00032C8A <AmiBlitz3.ab3@24827>   LEA ongosubcode(PC),A0
00032C8E <AmiBlitz3.ab3@24828>   LEA ongosubcodef(PC),A1
00032C92 <AmiBlitz3.ab3@24829>   MOVE.w #gc2skip-ongosubcode,D1     ; is #$001A
00032C98 <AmiBlitz3.ab3@24831>   TST.b debugmode
00032C9C <AmiBlitz3.ab3@24832>    BEQ.b 'isok
00032CA2 <AmiBlitz3.ab3@24834>    JSR chkstak
00032CA6 <AmiBlitz3.ab3@24835>   LEA ongcode(PC),A0
00032CAA <AmiBlitz3.ab3@24836>   LEA ongcodef(PC),A1
00032CAE <AmiBlitz3.ab3@24837>   MOVE.w #gc3skip-ongcode,D1         ; is #$001E
00032CB0 <AmiBlitz3.ab3@24840>   MOVE.w D1,-(A7)
00032CB6 <AmiBlitz3.ab3@24841>   MOVE.l destpointer,-(A7)                                 ;for when we know number of labels!
00032CBA <AmiBlitz3.ab3@24842>    BSR.w pokecode
00032CC0 <AmiBlitz3.ab3@24843>   CLR.w labcnt
00032CC6 <AmiBlitz3.ab3@24849>    JSR get1bytemain
00032CCC <AmiBlitz3.ab3@24850>   SUBQ.l #2,destpointer                                    ;for makealab!
00032CD0 <AmiBlitz3.ab3@24851>    BSR.w makealab2
00032CD6 <AmiBlitz3.ab3@24852>   ADDQ.l #2,destpointer
00032CDC <AmiBlitz3.ab3@24853>    JSR addoff
00032CE0 <AmiBlitz3.ab3@24854>   MOVE.l $8(A2),D1
00032CE4 <AmiBlitz3.ab3@24855>    BSR.w writelong
00032CEA <AmiBlitz3.ab3@24856>   ADDQ.w #1,labcnt
00032CF0 <AmiBlitz3.ab3@24857>    JSR reget
00032CF4 <AmiBlitz3.ab3@24858>   CMP.w #$2C,D0 ; ','
00032CF8 <AmiBlitz3.ab3@24859>    BEQ.w 'loop
00032CFA <AmiBlitz3.ab3@24861>   MOVEA.l (A7)+,A0
00032CFC <AmiBlitz3.ab3@24862>   MOVE.w (A7)+,D2
00032D02 <AmiBlitz3.ab3@24863>   MOVE.w dontwrite_nomemleft,D1
00032D06 <AmiBlitz3.ab3@24864>    BNE.w 'done
00032D0A <AmiBlitz3.ab3@24866>   MOVE.w labcnt(PC),D1
00032D0E <AmiBlitz3.ab3@24867>   MOVE.w D1,$A(A0)       ;for cmp#
00032D10 <AmiBlitz3.ab3@24868>   ADD.w D1,D1
00032D12 <AmiBlitz3.ab3@24869>   ADD.w D1,D1
00032D14 <AmiBlitz3.ab3@24870>   ADDQ.w #2,D1
00032D18 <AmiBlitz3.ab3@24871>   MOVE.w D1,$2(A0,D2.W)  ;for bra!
00032D1A <AmiBlitz3.ab3@24874> RTS
00032D20 <AmiBlitz3.ab3@24878>   TST.b debugmode
00032D24 <AmiBlitz3.ab3@24879>    BEQ.w 'noerr
00032D2A <AmiBlitz3.ab3@24881>    JSR chkstak
00032D30 <AmiBlitz3.ab3@24882>   MOVE.l goset,D1
00032D34 <AmiBlitz3.ab3@24883>    BSR.w writelong
00032D3A <AmiBlitz3.ab3@24886>   MOVE.w gosubcode,D1
00032D3E <AmiBlitz3.ab3@24887> BRA.w dogoto2
00032D44 <AmiBlitz3.ab3@24891>   MOVE.w gotocode,D1
00032D46 <AmiBlitz3.ab3@24894>   MOVE.w D1,-(A7)
00032D4A <AmiBlitz3.ab3@24895>    BSR.w makealab2
00032D4C <AmiBlitz3.ab3@24896>   MOVE.w (A7)+,D1
00032D50 <AmiBlitz3.ab3@24897>    BSR.w writeword
00032D56 <AmiBlitz3.ab3@24898>    JSR addoff
00032D5A <AmiBlitz3.ab3@24899>   MOVE.l $8(A2),D1
00032D5E <AmiBlitz3.ab3@24900> BRA.w writelong
00032D64 <AmiBlitz3.ab3@24904>   MOVE.w proceduremode,D1
00032D68 <AmiBlitz3.ab3@24905>    BEQ.w JUMP_badpenderr
00032D6C <AmiBlitz3.ab3@24907>   MOVE.w #$4EF9,D1
00032D70 <AmiBlitz3.ab3@24908>    BSR.w writeword
00032D76 <AmiBlitz3.ab3@24909>    JSR addoff
00032D7C <AmiBlitz3.ab3@24911>   MOVEA.l _execbase,A6
00032D7E <AmiBlitz3.ab3@24912>   MOVEQ.l #$08,D0
00032D80 <AmiBlitz3.ab3@24913>   MOVEQ.l #$01,D1
00032D86 <AmiBlitz3.ab3@24916>   MOVE.l mempool,a0
00032D8A <AmiBlitz3.ab3@24917>   JSR _AllocPooled(a6)
00032D8C <AmiBlitz3.ab3@24919>   MOVEA.l D0,A0
00032D92 <AmiBlitz3.ab3@24920>   MOVE.l firstpend,(A0)
00032D98 <AmiBlitz3.ab3@24921>   MOVE.l A0,firstpend
00032DA0 <AmiBlitz3.ab3@24922>   MOVE.l destpointer,$4(A0)
00032DA4 <AmiBlitz3.ab3@24924> BRA.w writelong
00032DA8 <AmiBlitz3.ab3@24928>   BSR.w do_AsmExit
00032DAE <AmiBlitz3.ab3@24929> JMP get1bytemain
00032DB6 <AmiBlitz3.ab3@24934>   MOVE.b #1,nostringopt
00032DBA <AmiBlitz3.ab3@24935>   MOVEM.l a0/a1/d1,-(a7)
00032DC0 <AmiBlitz3.ab3@24937>   MOVEA.l currentfunction,A0
00032DC6 <AmiBlitz3.ab3@24939>     CMP.l #0,a0
00032DCA <AmiBlitz3.ab3@24940>     BNE 'l1
00032DD0 <AmiBlitz3.ab3@24941>     JMP errorasmexit
00032DD2 <AmiBlitz3.ab3@24944>   MOVEQ.l #$00,D2
00032DD6 <AmiBlitz3.ab3@24946>   MOVE.b $5(A0),D2      ;type returning!
00032DDA <AmiBlitz3.ab3@24947>   BSR.w eval            ;put return val in d0.
00032DE0 <AmiBlitz3.ab3@24950>   MOVEA.l currentfunction,A0
00032DE4 <AmiBlitz3.ab3@24951>   MOVE.l funcstruct_returntype(a0),a0
00032DEA <AmiBlitz3.ab3@24952>   CMP.l #0,a0
00032DEE <AmiBlitz3.ab3@24953>   BEQ 'isstatement
00032DF6 <AmiBlitz3.ab3@24954>   CMP.l #$100,4(a0)
00032DFA <AmiBlitz3.ab3@24955>   BLT.w 'isvar
00032DFC <AmiBlitz3.ab3@24956>   MOVE.l a2,a1
00032E02 <AmiBlitz3.ab3@24957>   TST.l typetocast
00032E06 <AmiBlitz3.ab3@24958>   BEQ 'nocast
00032E0C <AmiBlitz3.ab3@24959>   MOVE.l typetocast,a1
00032E0E <AmiBlitz3.ab3@24962>   CMP.l a0,a1
00032E12 <AmiBlitz3.ab3@24963>   BEQ 'ok
00032E18 <AmiBlitz3.ab3@24964>   CLR.l typetocast
00032E1E <AmiBlitz3.ab3@24965>   MOVE.l lasttoken,d1
00032E22 <AmiBlitz3.ab3@24966>   CMP.w #NullTokenID,d1                   ;$b581 ok, when token for null
00032E26 <AmiBlitz3.ab3@24967>   BEQ 'isnull
00032E2C <AmiBlitz3.ab3@24970>   JMP errorconvertreturntype
00032E30 <AmiBlitz3.ab3@24979>   MOVEM.l (a7)+,a0/a1/d1
00032E34 <AmiBlitz3.ab3@24982> BRA.w do_AsmExit
00032E3A <AmiBlitz3.ab3@24984> error_convert_types2 JMP error_convert_types
00032E40 <AmiBlitz3.ab3@25000>   TST.b debugmode
00032E44 <AmiBlitz3.ab3@25001>    BEQ.w normret
00032E48 <AmiBlitz3.ab3@25002>   MOVE.w #$C305,D1        ; was #chkret,
00032E4C <AmiBlitz3.ab3@25003> BRA.w Atokejsr
00032E50 <AmiBlitz3.ab3@25010>   MOVE.w #$4E75,D1
00032E54 <AmiBlitz3.ab3@25011> BRA.w writeword
00032E58 <AmiBlitz3.ab3@25014> localslist:  Ds.l 1                                        ;all locals for procs.;??Looks like obsovled data??
00032E5C <AmiBlitz3.ab3@25015> proclocals:  Ds.l 1                                        ;for debugga!
00032E5E <AmiBlitz3.ab3@25016> procnum:     Ds.w 1
00032E60 <AmiBlitz3.ab3@25017> procnum2:    Ds.w 1
00032E64 <AmiBlitz3.ab3@25018> prolineat:   Ds.l 1
00032E6A <AmiBlitz3.ab3@25023>    TST.w proceduremode
00032E6E <AmiBlitz3.ab3@25024>    BGT JUMP_sreterr
00032E72 <AmiBlitz3.ab3@25026>    CMP.w #-$7FF9,D0     ;was #$8007
00032E76 <AmiBlitz3.ab3@25027>    BEQ.w stateret
00032E78 <AmiBlitz3.ab3@25028>    MOVEQ.l #-$01,D1  ;statement flag
00032E7C <AmiBlitz3.ab3@25029> BRA.w do_function2
00032E82 <AmiBlitz3.ab3@25031> JUMP_sreterr JMP sreterr
00032E88 <AmiBlitz3.ab3@25035>   CLR.b skipfunc
00032E8E <AmiBlitz3.ab3@25036>   TST.l unusedfunc
00032E92 <AmiBlitz3.ab3@25037>   BEQ 'ex
00032E96 <AmiBlitz3.ab3@25038>   MOVEM.l d0-d7/a0-a6,-(a7)
00032E9C <AmiBlitz3.ab3@25039>   MOVE.l unusedfunc,d1
00032EA2 <AmiBlitz3.ab3@25040>   LEA ptr_parameterstore,a5
00032EA4 <AmiBlitz3.ab3@25043>   MOVE.l d1,a0
00032EA8 <AmiBlitz3.ab3@25044>   LEA 12(a0),a2
00032EAA <AmiBlitz3.ab3@25045>   MOVE.l a5,a1
00032EAC <AmiBlitz3.ab3@25047>   CMPM.b (a1)+,(a2)+
00032EB0 <AmiBlitz3.ab3@25048>   BNE 'neq
00032EB2 <AmiBlitz3.ab3@25049>   TST.b (a2)
00032EB6 <AmiBlitz3.ab3@25050>   BNE 'ch
00032EB8 <AmiBlitz3.ab3@25051>   TST.b (a1)
00032EBC <AmiBlitz3.ab3@25052>   BNE 'neq
00032EC4 <AmiBlitz3.ab3@25053>   MOVE.b #1,skipfunc
00032EC8 <AmiBlitz3.ab3@25054>  BRA 'out
00032ECA <AmiBlitz3.ab3@25057>   MOVE.l (a0),d1
00032ECE <AmiBlitz3.ab3@25058>   BNE 'ag
00032ED2 <AmiBlitz3.ab3@25061>   MOVEM.l (a7)+,d0-d7/a0-a6
00032ED4 <AmiBlitz3.ab3@25064> RTS
00032EDA <AmiBlitz3.ab3@25067> JUMP_dupprocerr  JMP dupprocerr
00032EE0 <AmiBlitz3.ab3@25068> JUMP_illprocperr JMP illprocperr
00032EE6 <AmiBlitz3.ab3@25069> JUMP_toovarerr   JMP toovarerr
00032EEC <AmiBlitz3.ab3@25070> JUMP_more6pard   JMP more6pard
00032EF4 <AmiBlitz3.ab3@25074>   CMP.w #-1,proceduremode                                  
00032EF8 <AmiBlitz3.ab3@25075>    BEQ JUMP_sreterr
00032EFC <AmiBlitz3.ab3@25076>   CMP.w #-$7FF9,D0      ; was #$8007
00032F00 <AmiBlitz3.ab3@25077>    BEQ.w do_function_return
00032F0A <AmiBlitz3.ab3@25081>   MOVE.w oldqflag,instringon
00032F10 <AmiBlitz3.ab3@25082>   MOVEA.l lastsourcepos,A5
00032F16 <AmiBlitz3.ab3@25084>   JSR getfunctionreturntype
00032F1C <AmiBlitz3.ab3@25085>   JSR get1bytemain
00032F22 <AmiBlitz3.ab3@25091>   TST.b declare
00032F26 <AmiBlitz3.ab3@25092>   BEQ 'l3
00032F2E <AmiBlitz3.ab3@25093>   MOVE.b #1,nowdeclare
00032F34 <AmiBlitz3.ab3@25097>   JSR errchx                                           ;writejumpoverfunction
00032F3A <AmiBlitz3.ab3@25101>   CLR.b fastfunc
00032F44 <AmiBlitz3.ab3@25102>   MOVE.l firstiff,firstiffstore
00032F4C <AmiBlitz3.ab3@25103>   CMP.l #"FAST",-1(a5)
00032F50 <AmiBlitz3.ab3@25104>   BNE 'nofast
00032F56 <AmiBlitz3.ab3@25105>   CMP.b #" ",3(a5)
00032F5A <AmiBlitz3.ab3@25106>   BNE 'nofast
00032F5C <AmiBlitz3.ab3@25107>   ADDQ.l #3,a5
00032F60 <AmiBlitz3.ab3@25110>     CMP.b #" ",(a5)
00032F64 <AmiBlitz3.ab3@25111>      BNE 'x1
00032F66 <AmiBlitz3.ab3@25112>     ADDQ #1,a5
00032F6A <AmiBlitz3.ab3@25113>  BRA 'x2
00032F70 <AmiBlitz3.ab3@25116>   MOVE.l a5,lastsourcepos
00032F78 <AmiBlitz3.ab3@25117>   MOVE.b #1,fastfunc
00032F80 <AmiBlitz3.ab3@25120>   CMP.l #"NOOP",-1(a5)                                     ;compile 3* so its deactivate
00032F84 <AmiBlitz3.ab3@25121>  BRA 'noopt
00032F8A <AmiBlitz3.ab3@25123>   CMP.w #"T ",3(a5)                                        ;??Looks like dead code??
00032F8E <AmiBlitz3.ab3@25124>   BNE 'noopt                                               ;          "
00032F90 <AmiBlitz3.ab3@25125>   ADDQ.l #4,a5                                             ;          "
00032F94 <AmiBlitz3.ab3@25128>     CMP.b #" ",(a5)                                        ;          "
00032F98 <AmiBlitz3.ab3@25129>      BNE 'x1b                                              ;          "
00032F9A <AmiBlitz3.ab3@25130>     ADDQ #1,a5                                             ;          "
00032F9E <AmiBlitz3.ab3@25131>  BRA 'x2b
00032FA4 <AmiBlitz3.ab3@25134>   MOVE.l a5,lastsourcepos                                  ;          "
00032FAA <AmiBlitz3.ab3@25135>   JSR makename2                                            ;          "
00032FAE <AmiBlitz3.ab3@25136>  BRA 'l1                                                   ;          "
00032FB4 <AmiBlitz3.ab3@25139>   JSR makename2
00032FBA <AmiBlitz3.ab3@25140>   JSR checkused
00032FC0 <AmiBlitz3.ab3@25141>   TST.b skipfunc
00032FC4 <AmiBlitz3.ab3@25142>    BEQ 'l1
00032FCA <AmiBlitz3.ab3@25143>   JSR skipme
00032FD0 <AmiBlitz3.ab3@25144>   CLR.b fastfunc
00032FD2 <AmiBlitz3.ab3@25145>  RTS
00032FDC <AmiBlitz3.ab3@25149>   MOVE.l linenumat,prolineat
00032FE2 <AmiBlitz3.ab3@25151>   ADDQ.w #1,procnum2
00032FEA <AmiBlitz3.ab3@25152>   MOVE.w procnum2(PC),procnum
00032FF0 <AmiBlitz3.ab3@25153>   MOVE.w D1,proceduremode
00032FF6 <AmiBlitz3.ab3@25154>   CLR.w locvaroff
00032FFA <AmiBlitz3.ab3@25156>   CMP.w #$7B,D0   ;'{'
00032FFE <AmiBlitz3.ab3@25157>    BNE.w JUMP_syntaxerr
00033006 <AmiBlitz3.ab3@25159>    MOVE.b #1,infunctioncode
0003300C <AmiBlitz3.ab3@25161>   MOVEA.l tempvm,A0
00033014 <AmiBlitz3.ab3@25162>   MOVE.w $C(A0),memlibstat
0003301A <AmiBlitz3.ab3@25163>   BCLR #$7,$C(A0)                                          ;Bit out of range
0003301E <AmiBlitz3.ab3@25164>   MOVE.w #$4EF9,D1  ;make a jump around the proc
00033022 <AmiBlitz3.ab3@25165>    BSR.w writeword
00033028 <AmiBlitz3.ab3@25166>    JSR addoff
0003302C <AmiBlitz3.ab3@25167>    BSR.w writelong
00033032 <AmiBlitz3.ab3@25169>    JSR findproc                                          ;findproc function
00033036 <AmiBlitz3.ab3@25170>    BEQ.w JUMP_dupprocerr
0003303C <AmiBlitz3.ab3@25171>    JSR addlabel
00033042 <AmiBlitz3.ab3@25173>    MOVE.b #31,$20(a2)                                      ;increase if more pars
00033048 <AmiBlitz3.ab3@25174>    MOVE.b #0,isfunc(a2)
00033050 <AmiBlitz3.ab3@25175>    MOVE.l functionreturntype,funcstruct_returntype(a2)
00033058 <AmiBlitz3.ab3@25177>   MOVE.l destpointer,$E(A2)    ;new!
0003305E <AmiBlitz3.ab3@25178>   MOVE.l A2,currentfunction
00033064 <AmiBlitz3.ab3@25180>   LEA nops8,A0
0003306A <AmiBlitz3.ab3@25181>   LEA nopsf,A1
0003306E <AmiBlitz3.ab3@25182>    BSR.w pokecode2
00033074 <AmiBlitz3.ab3@25184>   TST.b debugmode
00033078 <AmiBlitz3.ab3@25185>    BEQ.b 'nodebug
0003307A <AmiBlitz3.ab3@25187>   MOVEQ.l #$04,D1
00033080 <AmiBlitz3.ab3@25188>    JSR writetrap
0003308A <AmiBlitz3.ab3@25189>   MOVE.l destpointer,proclocals
0003308E <AmiBlitz3.ab3@25190>    BSR.w writelong
00033092 <AmiBlitz3.ab3@25191>    BSR.w writelong
00033096 <AmiBlitz3.ab3@25194>    LEA $16(A2),A4
0003309E <AmiBlitz3.ab3@25195>   MOVE.b proceduremode+1,$5(A2)
000330A0 <AmiBlitz3.ab3@25196>   MOVEQ.l #$00,D6
000330A2 <AmiBlitz3.ab3@25197>   MOVEQ.l #$00,D5
000330A8 <AmiBlitz3.ab3@25198>    JSR get1bytemain
000330AC <AmiBlitz3.ab3@25199>   CMP.w #$7D,D0        ; '}'
000330B0 <AmiBlitz3.ab3@25200>    BEQ.w 'done
000330B4 <AmiBlitz3.ab3@25204>    CMP.b #"@",d0
000330B8 <AmiBlitz3.ab3@25205>    BNE 'l2
000330BA <AmiBlitz3.ab3@25206>    MOVE.l a0,-(a7)
000330C0 <AmiBlitz3.ab3@25207>    MOVE.l currentfunction,a0
000330C6 <AmiBlitz3.ab3@25208>    CMP.b #31,$20(a0)                                       ;increase if morepars
000330CA <AmiBlitz3.ab3@25209>    BNE 'l4
000330CE <AmiBlitz3.ab3@25210>    MOVE.b d6,$20(a0)                                       ;increase if morepar
000330D4 <AmiBlitz3.ab3@25213>    JSR get1bytemain
000330D6 <AmiBlitz3.ab3@25214>    MOVE.l (a7)+,a0
000330DA <AmiBlitz3.ab3@25218>    BSR.w getparameter
000330DE <AmiBlitz3.ab3@25219>    BSR.w fetchvars
000330E6 <AmiBlitz3.ab3@25220>   CMPI.l #$7,$4(A2)
000330EA <AmiBlitz3.ab3@25221>    BNE.w 'notst
000330F0 <AmiBlitz3.ab3@25222>   LEA stbuff,A0
000330F2 <AmiBlitz3.ab3@25223>   MOVE.w D5,D1
000330F4 <AmiBlitz3.ab3@25224>   LSL.w #2,D1
000330F8 <AmiBlitz3.ab3@25225>   MOVE.w D6,$0(A0,D1.W)
000330FE <AmiBlitz3.ab3@25226>   MOVE.w $4(A3),$2(A0,D1.W)
00033100 <AmiBlitz3.ab3@25227>   ADDQ.w #1,D5
00033102 <AmiBlitz3.ab3@25228>   MOVEQ.l #$07,D2
00033106 <AmiBlitz3.ab3@25229>  BRA.w 'pgot
0003310A <AmiBlitz3.ab3@25232>   MOVE.w #$2940,D1
0003310C <AmiBlitz3.ab3@25233>   MOVEQ.l #$03,D2
00033114 <AmiBlitz3.ab3@25234>   BTST #$0,flagmask+1
00033118 <AmiBlitz3.ab3@25235>    BNE.w 'sgot
00033120 <AmiBlitz3.ab3@25236>   CMPI.l #$100,$4(A2)
00033124 <AmiBlitz3.ab3@25237>    BCC.w JUMP_illprocperr
00033128 <AmiBlitz3.ab3@25238>   MOVE.w $6(A2),D2
0003312C <AmiBlitz3.ab3@25239>   CMP.w #$2,D2
00033130 <AmiBlitz3.ab3@25240>    BHI.w 'sgot
00033134 <AmiBlitz3.ab3@25241>    BEQ.w 'wgot
00033138 <AmiBlitz3.ab3@25242>   EORI.w #$3000,D1
0003313C <AmiBlitz3.ab3@25243>  BRA.w 'sgot
00033140 <AmiBlitz3.ab3@25246>   ORI.w #$1000,D1
00033142 <AmiBlitz3.ab3@25249>   OR.w D6,D1
00033148 <AmiBlitz3.ab3@25251>   TST.b fpu
0003314C <AmiBlitz3.ab3@25252>   BEQ 'nofpu
00033150 <AmiBlitz3.ab3@25253>   CMP.b #5,d2
00033154 <AmiBlitz3.ab3@25254>   BNE 'nofpu
00033158 <AmiBlitz3.ab3@25255>   CMP.w #6,d6
0003315C <AmiBlitz3.ab3@25256>   BLT 'l10a
00033162 <AmiBlitz3.ab3@25257>   CMP.l #newtype_double,a2
00033166 <AmiBlitz3.ab3@25258>   BEQ JUMP_more6pard
0003316A <AmiBlitz3.ab3@25259>  BRA 'nofpu
00033170 <AmiBlitz3.ab3@25262>   MOVE.l #$f22c6400,d1
00033174 <AmiBlitz3.ab3@25263>   MOVEM.l d0/a4,-(a7)
00033176 <AmiBlitz3.ab3@25264>   MOVE.l d6,d0
00033178 <AmiBlitz3.ab3@25265>   ASL.l #7,d0
0003317A <AmiBlitz3.ab3@25266>   OR.w d0,d1
00033180 <AmiBlitz3.ab3@25267>   CMP.l #newtype_double,a2
00033184 <AmiBlitz3.ab3@25268>   BNE 'l5
0003318A <AmiBlitz3.ab3@25269>   OR.l #$1000,d1
0003318E <AmiBlitz3.ab3@25272>   BSR writelong
00033192 <AmiBlitz3.ab3@25273>   MOVE.w 4(a3),d1
00033196 <AmiBlitz3.ab3@25274>   BSR writeword
0003319A <AmiBlitz3.ab3@25275>   MOVEM.l (a7)+,a4/d0
0003319E <AmiBlitz3.ab3@25276>  BRA 'pgot
000331A0 <AmiBlitz3.ab3@25280>   MOVE.l A4,-(A7)
000331A4 <AmiBlitz3.ab3@25282>    CMP.w #6,d6
000331A8 <AmiBlitz3.ab3@25283>    BLT 'l10
000331AC <AmiBlitz3.ab3@25284>    MOVE.w #$c500-4,d1                                      ;savetemp+regnum
000331AE <AmiBlitz3.ab3@25285>    ADD.w d6,d1
000331B4 <AmiBlitz3.ab3@25286>    JSR Atokejsr
000331BA <AmiBlitz3.ab3@25287>    TST.w dontwrite_nomemleft
000331BE <AmiBlitz3.ab3@25288>    BNE 'l10
000331C4 <AmiBlitz3.ab3@25289>    MOVE.l data1start,d1
000331CA <AmiBlitz3.ab3@25290>    MOVE.l destpointer,a4
000331CE <AmiBlitz3.ab3@25291>    ADD.l d1,-6(a4)
000331D4 <AmiBlitz3.ab3@25292>    MOVE.l destpointer,d1
000331D6 <AmiBlitz3.ab3@25293>    SUBQ.l #6,d1
000331DC <AmiBlitz3.ab3@25294>    SUB.l destbufferstart,d1
000331DE <AmiBlitz3.ab3@25296>    MOVE.l d2,-(a7)
000331E0 <AmiBlitz3.ab3@25297>    MOVE.l d1,d2
000331E6 <AmiBlitz3.ab3@25298>    JSR addhunkoffset                                       ;move.l $0,-x(a4)
000331E8 <AmiBlitz3.ab3@25299>    MOVE.l (a7)+,d2
000331EE <AmiBlitz3.ab3@25300>    MOVE.l destpointer,a4
000331F2 <AmiBlitz3.ab3@25301>    CMP.w #2,d2
000331F6 <AmiBlitz3.ab3@25302>    BNE 'nw1
000331FC <AmiBlitz3.ab3@25304>    MOVE.w #$3979,-8(a4)                                    ;move.w $0,-x(a4)
00033204 <AmiBlitz3.ab3@25305>    ADD.l #2,-6(a4)
00033208 <AmiBlitz3.ab3@25308>    CMP.w #1,d2
0003320C <AmiBlitz3.ab3@25309>    BNE 'nb
00033212 <AmiBlitz3.ab3@25310>    MOVE.w #$1979,-8(a4)                                    ;move.b $0,-x(a4)
0003321A <AmiBlitz3.ab3@25311>    ADD.l #3,-6(a4)
00033220 <AmiBlitz3.ab3@25314>    MOVE.w $4(a3),-2(a4)
00033224 <AmiBlitz3.ab3@25315>  BRA 'ne1
00033228 <AmiBlitz3.ab3@25319>   BSR.w writeword                                          ;write storeparameter
0003322C <AmiBlitz3.ab3@25322>   MOVE.w $4(A3),D1
00033230 <AmiBlitz3.ab3@25323>    BSR.w writeword
00033232 <AmiBlitz3.ab3@25326>   MOVEA.l (A7)+,A4
00033238 <AmiBlitz3.ab3@25330>   CLR.l functionreturntype
0003323A <AmiBlitz3.ab3@25332>   ADDQ.w #1,D6
0003323E <AmiBlitz3.ab3@25333>   CMP.w #11,D6          ; was #7                            ;max function parameters
00033242 <AmiBlitz3.ab3@25334>    BCC.w JUMP_toovarerr
00033248 <AmiBlitz3.ab3@25336>   MOVE.l currentfunction,a0
0003324C <AmiBlitz3.ab3@25337>   MOVE.l a2,funcstruct_parametertype-4(a0,d6*4)             ;-4 because d6 is increment before
0003324E <AmiBlitz3.ab3@25339>   MOVE.b D2,(A4)+
00033252 <AmiBlitz3.ab3@25340>   CMP.w #$2C,D0      ;','
00033256 <AmiBlitz3.ab3@25341>    BNE.w 'nomore
0003325C <AmiBlitz3.ab3@25342>    JSR get1bytemain
00033260 <AmiBlitz3.ab3@25356>  BRA.w 'more
00033264 <AmiBlitz3.ab3@25359>   CMP.w #$7D,D0
00033268 <AmiBlitz3.ab3@25360>    BNE.w JUMP_syntaxerr
0003326E <AmiBlitz3.ab3@25363>   MOVEA.l currentfunction,A2
00033270 <AmiBlitz3.ab3@25364>   LSL.w #4,D5
00033272 <AmiBlitz3.ab3@25365>   OR.w D5,D6
00033276 <AmiBlitz3.ab3@25366>   MOVE.b D6,$4(A2)
00033278 <AmiBlitz3.ab3@25367>   LSR.w #4,D6
0003327C <AmiBlitz3.ab3@25368>    BEQ.w 'nostrings
00033282 <AmiBlitz3.ab3@25369>   LEA stbuff,A0
00033284 <AmiBlitz3.ab3@25370>   SUBQ.w #1,D6
00033286 <AmiBlitz3.ab3@25376>     MOVE.w D6,D1                                           ;function stringpars
00033288 <AmiBlitz3.ab3@25377>     LSL.w #2,D1                                            ;stringsize was 2
0003328A <AmiBlitz3.ab3@25380>       LSL.w #1,d1
0003328C <AmiBlitz3.ab3@25381>       ADDQ.w #4,d1
0003328E <AmiBlitz3.ab3@25384>     ADDQ.w #8,D1
00033294 <AmiBlitz3.ab3@25385>     MOVE.w D1,funcst+2
0003329A <AmiBlitz3.ab3@25386>     MOVE.l funcst,D1
0003329E <AmiBlitz3.ab3@25387>     BSR.w writelong
000332A0 <AmiBlitz3.ab3@25388>     MOVE.w (A0)+,D1
000332A4 <AmiBlitz3.ab3@25390>     CMP.b #5,d1
000332A8 <AmiBlitz3.ab3@25391>     BLE 's1
000332AC <AmiBlitz3.ab3@25392>     MOVE.w #$266c,d1                                       ;native move.l 4(a4),a3
000332B0 <AmiBlitz3.ab3@25393>     BSR writeword    ; was writeinstruction  tomsmart1
000332B2 <AmiBlitz3.ab3@25394>     MOVE.w D6,D1                                           ;function stringpars
000332B4 <AmiBlitz3.ab3@25395>     LSL.w #2,D1                                            ;stringsize was 2
000332B6 <AmiBlitz3.ab3@25397>       LSL.w #1,d1
000332B8 <AmiBlitz3.ab3@25399>     ADDQ.w #8,D1
000332BC <AmiBlitz3.ab3@25400>     BSR writeword
000332C0 <AmiBlitz3.ab3@25401>   BRA 's2
000332C6 <AmiBlitz3.ab3@25405>     OR.w movedna3,D1
000332CA <AmiBlitz3.ab3@25406>      BSR.w writeword
000332D0 <AmiBlitz3.ab3@25409>     MOVE.w (A0)+,least+2
000332D6 <AmiBlitz3.ab3@25410>     MOVE.l least,D1
000332DA <AmiBlitz3.ab3@25411>      BSR.w writelong
000332DC <AmiBlitz3.ab3@25412>     MOVE.l A0,-(A7)
000332E0 <AmiBlitz3.ab3@25413>     MOVE.w #$C700,D1
000332E4 <AmiBlitz3.ab3@25414>      BSR.w Atokejsr
000332E6 <AmiBlitz3.ab3@25415>     MOVEA.l (A7)+,A0
000332EA <AmiBlitz3.ab3@25416>   DBF D6,'stloop
000332F0 <AmiBlitz3.ab3@25419> JMP get1bytemain
000332F6 <AmiBlitz3.ab3@25423>   MOVE.w dontwrite_nomemleft,D1
000332FA <AmiBlitz3.ab3@25424>    BNE.w 'skip
00033300 <AmiBlitz3.ab3@25425>   MOVE.l destpointer,-(A7)
00033306 <AmiBlitz3.ab3@25427>   MOVE.l A0,destpointer
0003330C <AmiBlitz3.ab3@25428>   MOVE.l linksize,D1
00033310 <AmiBlitz3.ab3@25429>    BSR.w writelong                                         ;writefunctions jumppos
00033316 <AmiBlitz3.ab3@25431>    TST.b fastfunc
0003331A <AmiBlitz3.ab3@25432>    BNE 'skip1
0003331E <AmiBlitz3.ab3@25434>   MOVE.w #$CC00,D1      ; was #clrloc
00033322 <AmiBlitz3.ab3@25435>    BSR.w tokejsr2                                          ;write clearvars
00033328 <AmiBlitz3.ab3@25438>   MOVE.l (A7)+,destpointer
0003332A <AmiBlitz3.ab3@25441> RTS
00033330 <AmiBlitz3.ab3@25444> JUMP_errormsg_nofast  JMP errormsg_nofast
00033336 <AmiBlitz3.ab3@25449>   MOVEA.l currentfunction,A2
0003333A <AmiBlitz3.ab3@25450>   MOVEA.l $E(A2),A0          ;pc of proc
0003333E <AmiBlitz3.ab3@25451>   MOVE.w $6(A2),D1
00033342 <AmiBlitz3.ab3@25452>    BEQ.w 'skiplink
00033348 <AmiBlitz3.ab3@25453>   MOVE.w D1,linksize+2
0003334C <AmiBlitz3.ab3@25454>   MOVE.w $8(A2),D1                                         ;check if function memalloc need
00033350 <AmiBlitz3.ab3@25455>    BNE.w 'howdy
00033352 <AmiBlitz3.ab3@25459>   ADDQ.w #6,A0
00033356 <AmiBlitz3.ab3@25460>   MOVE.l A0,$E(A2)
0003335A <AmiBlitz3.ab3@25461>  BRA.w linkput
0003335C <AmiBlitz3.ab3@25466>   MOVE.l A0,-(A7)
00033360 <AmiBlitz3.ab3@25467>    BSR.w linkput
00033362 <AmiBlitz3.ab3@25468>   MOVEA.l (A7)+,A0
00033366 <AmiBlitz3.ab3@25469>   LEA $A(A0),A0
0003336C <AmiBlitz3.ab3@25470>   MOVEA.l currentfunction,A2
00033370 <AmiBlitz3.ab3@25471>  BRA.w 'cont
00033374 <AmiBlitz3.ab3@25474>   MOVE.w $8(A2),D1
00033378 <AmiBlitz3.ab3@25475>    BNE.w 'cont
0003337C <AmiBlitz3.ab3@25476>   LEA $10(A0),A0
00033380 <AmiBlitz3.ab3@25477>   MOVE.l A0,$E(A2)
00033382 <AmiBlitz3.ab3@25478>  RTS
00033388 <AmiBlitz3.ab3@25481>    MOVE.w dontwrite_nomemleft,D1                                     ;writeallocmem for functions (after releasemem called)
0003338C <AmiBlitz3.ab3@25482>    BNE.w 'contskip
00033392 <AmiBlitz3.ab3@25485>    TST.b fastfunc
00033396 <AmiBlitz3.ab3@25486>    BNE JUMP_errormsg_nofast
0003339C <AmiBlitz3.ab3@25488>   MOVE.l destpointer,-(A7)
000333A2 <AmiBlitz3.ab3@25489>   MOVE.l A0,destpointer
000333A6 <AmiBlitz3.ab3@25490>   MOVE.w #$4EB9,D1      ;jsr
000333AA <AmiBlitz3.ab3@25491>    BSR.w writeword
000333B0 <AmiBlitz3.ab3@25492>    JSR addoff
000333B4 <AmiBlitz3.ab3@25493>    BSR.w writelong
000333B6 <AmiBlitz3.ab3@25495>   MOVEA.l (A7)+,A0
000333BC <AmiBlitz3.ab3@25496>   MOVEA.l destpointer,A1
000333BE <AmiBlitz3.ab3@25497>   MOVE.l A0,-(A1)
000333C4 <AmiBlitz3.ab3@25498>   MOVE.l A0,destpointer
000333C8 <AmiBlitz3.ab3@25501>   MOVE.w $8(A2),D4
000333CC <AmiBlitz3.ab3@25502>    BPL.w 'linky
000333D0 <AmiBlitz3.ab3@25503>   MOVE.w #$C004,D1   ; was  #newmem
000333D4 <AmiBlitz3.ab3@25504>    BSR.w tokejsr2
000333DA <AmiBlitz3.ab3@25505>   MOVEA.l currentfunction,A2
000333DE <AmiBlitz3.ab3@25506>   MOVE.w $8(A2),D4
000333E2 <AmiBlitz3.ab3@25507>   ANDI.w #$7FFF,D4        ;#32767,
000333E6 <AmiBlitz3.ab3@25510>    BEQ.w 'skipstat
000333EA <AmiBlitz3.ab3@25514>   MOVE.b $4(A2),D1
000333EE <AmiBlitz3.ab3@25515>   ANDI.w #$F,D1
000333F0 <AmiBlitz3.ab3@25516>   MOVE.w D1,-(A7)
000333F4 <AmiBlitz3.ab3@25517>   CMP.w #$5,D1
000333F8 <AmiBlitz3.ab3@25518>    BCS.w 'npush
000333FC <AmiBlitz3.ab3@25519>   MOVE.w #$2F04,D1
00033400 <AmiBlitz3.ab3@25520>    BSR.w writeword
00033406 <AmiBlitz3.ab3@25523>   MOVE.l locdatast,D3
0003340C <AmiBlitz3.ab3@25524>    JSR datastart
00033410 <AmiBlitz3.ab3@25525>   MOVE.w #$C501,D1    ; was #localstat
00033414 <AmiBlitz3.ab3@25526>    BSR.w tokejsr2
00033416 <AmiBlitz3.ab3@25528>   MOVE.w (A7)+,D1
0003341A <AmiBlitz3.ab3@25529>   CMP.w #$5,D1
0003341E <AmiBlitz3.ab3@25530>    BCS.w 'skipstat
00033422 <AmiBlitz3.ab3@25531>   MOVE.w #$281F,D1
00033426 <AmiBlitz3.ab3@25532>    BSR.w writeword
0003342A <AmiBlitz3.ab3@25535>   MOVE.w #$4E75,D1
0003342E <AmiBlitz3.ab3@25536> BRA.w writeword
00033434 <AmiBlitz3.ab3@25540>   LEA mwait,A0
0003343A <AmiBlitz3.ab3@25541>   LEA mwaitf,A1
0003343E <AmiBlitz3.ab3@25542> BRA.w pokecode
00033444 <AmiBlitz3.ab3@25545> JUMP_laberr    JMP laberr
0003344A <AmiBlitz3.ab3@25546> JUMP_typeerr   JMP typeerr
00033450 <AmiBlitz3.ab3@25547> JUMP_dupofferr JMP dupofferr
00033454 <AmiBlitz3.ab3@25550>   CMP.w #$2E,D0           ;'.'
00033458 <AmiBlitz3.ab3@25551>   BNE.w JUMP_syntaxerr
0003345E <AmiBlitz3.ab3@25552>   JSR getparameter2
00033462 <AmiBlitz3.ab3@25553>   BEQ.w JUMP_laberr
00033468 <AmiBlitz3.ab3@25554>   LEA newtypebase,A2
0003346E <AmiBlitz3.ab3@25555>   JSR findtype
00033472 <AmiBlitz3.ab3@25556>   BNE.w 'ok1
0003347A <AmiBlitz3.ab3@25557>   CMPI.l #MaxByte,$4(A2)    ; was #$FF
0003347E <AmiBlitz3.ab3@25558>   BNE.w JUMP_typeerr
00033482 <AmiBlitz3.ab3@25559>  BRA.w 'ok2
00033488 <AmiBlitz3.ab3@25562>   JSR addlabel
0003348C <AmiBlitz3.ab3@25565>   CLR.l $4(A2)
00033492 <AmiBlitz3.ab3@25566>   MOVE.l A2,thistype
00033498 <AmiBlitz3.ab3@25567>   CLR.l prevtype
0003349E <AmiBlitz3.ab3@25568>   CLR.w typelen
000334A4 <AmiBlitz3.ab3@25569>   CLR.w linemode
000334AA <AmiBlitz3.ab3@25570>   JSR reget
000334AE <AmiBlitz3.ab3@25571>   BNE.w typemode
000334B0 <AmiBlitz3.ab3@25572> RTS
000334B4 <AmiBlitz3.ab3@25576>   CMP.w #-$7FFE,D0      ; was #$8002
000334B8 <AmiBlitz3.ab3@25577>   BEQ.w doend2
000334C2 <AmiBlitz3.ab3@25580>   MOVE.w oldqflag,instringon
000334C8 <AmiBlitz3.ab3@25581>   MOVEA.l lastsourcepos,A5
000334CA <AmiBlitz3.ab3@25583>   MOVEQ.l #$00,D6      ;not pointer
000334CE <AmiBlitz3.ab3@25584>   CMP.w #$2A,D0        ;'*'
000334D2 <AmiBlitz3.ab3@25585>   BNE.w 'skip
000334D4 <AmiBlitz3.ab3@25586>   MOVEQ.l #$01,D6
000334DA <AmiBlitz3.ab3@25587>   JSR get1bytemain
000334DE <AmiBlitz3.ab3@25588>  BRA.w 'skipv
000334E2 <AmiBlitz3.ab3@25591>   CMP.w #$40,D0         ;'@'
000334E6 <AmiBlitz3.ab3@25592>   BNE.w 'skipv
000334E8 <AmiBlitz3.ab3@25593>   MOVEQ.l #$05,D6
000334EE <AmiBlitz3.ab3@25594>   JSR get1bytemain
000334F4 <AmiBlitz3.ab3@25597>   MOVE.w D6,flagmask
000334FA <AmiBlitz3.ab3@25598>   JSR getparameter2
000334FE <AmiBlitz3.ab3@25599>   BEQ.w JUMP_syntaxerr
00033504 <AmiBlitz3.ab3@25600>   MOVEA.l thistype,A2
00033506 <AmiBlitz3.ab3@25601>   ADDQ.w #4,A2
0003350C <AmiBlitz3.ab3@25602>   JSR findvariable2
00033510 <AmiBlitz3.ab3@25603>   BEQ.w JUMP_dupofferr     ;beq    .skip2
00033516 <AmiBlitz3.ab3@25605>   JSR addlabel
00033518 <AmiBlitz3.ab3@25608>   MOVE.l A2,-(A7)
0003351C <AmiBlitz3.ab3@25609>   CMP.w #$2E,D0           ;'.'
00033520 <AmiBlitz3.ab3@25610>    BEQ.w 'skip3
00033524 <AmiBlitz3.ab3@25611>   CMP.w #$24,D0           ;'$'
00033528 <AmiBlitz3.ab3@25612>    BNE.w 'notstring
0003352E <AmiBlitz3.ab3@25613>   MOVE.l #newtype_string,D2
00033534 <AmiBlitz3.ab3@25614>    JSR get1bytemain
00033538 <AmiBlitz3.ab3@25615>  BRA.w 'skip4a
0003353E <AmiBlitz3.ab3@25618>   MOVE.l prevtype,D2
00033542 <AmiBlitz3.ab3@25619>   BEQ.w JUMP_notypeerr2
00033546 <AmiBlitz3.ab3@25620>  BRA.w 'skip4
0003354C <AmiBlitz3.ab3@25623>   JSR getparameter2
00033550 <AmiBlitz3.ab3@25624>    BEQ.w JUMP_syntaxerr
00033556 <AmiBlitz3.ab3@25625>   LEA newtypebase,A2
0003355C <AmiBlitz3.ab3@25626>    JSR findtype
00033560 <AmiBlitz3.ab3@25627>    BEQ.w 'gotit
00033568 <AmiBlitz3.ab3@25628>   BTST #$0,flagmask+1
0003356C <AmiBlitz3.ab3@25629>    BEQ.w JUMP_notypeerr2
00033572 <AmiBlitz3.ab3@25633>   JSR addlabel
0003357A <AmiBlitz3.ab3@25638>   MOVE.w linenumat+2,$8(A2)
00033582 <AmiBlitz3.ab3@25639>   MOVE.l #MaxByte,$4(A2)       ; was $FF  ;set to pointer crap
00033584 <AmiBlitz3.ab3@25642>   MOVE.l A2,D2
0003358A <AmiBlitz3.ab3@25645>   CMP.l #newtype_byte,D2
0003358E <AmiBlitz3.ab3@25646>    BEQ.w 'byte
00033594 <AmiBlitz3.ab3@25649>   ADDQ.w #1,typelen
0003359C <AmiBlitz3.ab3@25650>   BCLR #$0,typelen+1
0003359E <AmiBlitz3.ab3@25653>   MOVEQ.l #$00,D3
000335A0 <AmiBlitz3.ab3@25654>   MOVEA.l D2,A2
000335A6 <AmiBlitz3.ab3@25655>   MOVE.l A2,prevtype
000335AA <AmiBlitz3.ab3@25656>   MOVE.w $8(A2),D3
000335AC <AmiBlitz3.ab3@25657>   MOVEA.l (A7)+,A2
000335B0 <AmiBlitz3.ab3@25658>   MOVE.l D2,$A(A2)
000335B2 <AmiBlitz3.ab3@25659>   MOVEQ.l #$00,D4
000335B8 <AmiBlitz3.ab3@25660>   MOVE.w typelen,D4
000335BC <AmiBlitz3.ab3@25661>   MOVE.w D4,$4(A2)
000335C4 <AmiBlitz3.ab3@25662>   BTST #$0,flagmask+1
000335C8 <AmiBlitz3.ab3@25663>    BEQ.w 'skipz
000335CA <AmiBlitz3.ab3@25664>   MOVEQ.l #$04,D3
000335CE <AmiBlitz3.ab3@25667>   CMP.w #$5B,D0            ;'['
000335D2 <AmiBlitz3.ab3@25668>    BNE.w 'skipzz
000335D6 <AmiBlitz3.ab3@25672>   MOVEM.l D3-D4/A2,-(A7)
000335DA <AmiBlitz3.ab3@25673>    BSR.w evalconst3
000335DE <AmiBlitz3.ab3@25674>   CMP.w #$5D,D0            ;']'
000335E2 <AmiBlitz3.ab3@25675>    BNE.w JUMP_syntaxerr
000335E4 <AmiBlitz3.ab3@25676>   TST.w D6
000335E8 <AmiBlitz3.ab3@25677>    BNE.w JUMP_fpconerr
000335EA <AmiBlitz3.ab3@25678>   MOVE.l D3,D1
000335EE <AmiBlitz3.ab3@25679>   MOVEM.l (A7)+,D3-D4/A2
000335F4 <AmiBlitz3.ab3@25680>    JSR get1bytemain
000335F8 <AmiBlitz3.ab3@25681>   MOVE.w D1,$8(A2)
000335FC <AmiBlitz3.ab3@25682>   MULU.l d1,d3                                             ;>32k fix was mulu.w
00033604 <AmiBlitz3.ab3@25683>   ORI.w #$2,flagmask
00033606 <AmiBlitz3.ab3@25686>   ADD.l D3,D4
0003360C <AmiBlitz3.ab3@25689>     CMP.l #65532,d4
00033610 <AmiBlitz3.ab3@25695>   BCC JUMP_toolongerr
00033618 <AmiBlitz3.ab3@25696>   MOVE.w flagmask,$6(A2)
0003361E <AmiBlitz3.ab3@25697>   MOVE.w D4,typelen
00033620 <AmiBlitz3.ab3@25698> RTS
00033626 <AmiBlitz3.ab3@25701> JUMP_badenderr  JMP badenderr
0003362C <AmiBlitz3.ab3@25702> JUMP_noiferr    JMP noiferr
00033632 <AmiBlitz3.ab3@25703> JUMP_toolongerr JMP toolongerr
00033638 <AmiBlitz3.ab3@25704> JUMP_fpconerr   JMP fpconerr
0003363E <AmiBlitz3.ab3@25708>   MOVE.l firstiff,D0
00033642 <AmiBlitz3.ab3@25709>    BEQ.w JUMP_noiferr
00033644 <AmiBlitz3.ab3@25710>   MOVEA.l D0,A0
00033648 <AmiBlitz3.ab3@25711>   MOVE.w $C(A0),D0
0003364C <AmiBlitz3.ab3@25712>   ANDI.w #$FF,D0
0003364E <AmiBlitz3.ab3@25713>   CMP.w D0,D1
00033652 <AmiBlitz3.ab3@25714>    BNE.w JUMP_badenderr
00033656 <AmiBlitz3.ab3@25717>   CMP.w #$1,D1
0003365A <AmiBlitz3.ab3@25718>   BNE.w 'calcbra
0003365E <AmiBlitz3.ab3@25720>   MOVE.w #$6000,D1
00033664 <AmiBlitz3.ab3@25723>     TST.b fast
00033668 <AmiBlitz3.ab3@25724>     BEQ 'l1
0003366E <AmiBlitz3.ab3@25725>     OR.l #$ff,d1
00033672 <AmiBlitz3.ab3@25730>   BSR.w writeword
00033678 <AmiBlitz3.ab3@25731>   MOVEA.l destpointer,A1
0003367C <AmiBlitz3.ab3@25732>   MOVE.l $4(A0),D1
0003367E <AmiBlitz3.ab3@25733>   SUB.l A1,D1
00033684 <AmiBlitz3.ab3@25736>     TST.b fast
00033688 <AmiBlitz3.ab3@25737>     BEQ 'l2
0003368C <AmiBlitz3.ab3@25738>     BSR writelong
00033690 <AmiBlitz3.ab3@25739>   BRA 'calcbra
00033694 <AmiBlitz3.ab3@25744>   BSR.w writeword
00033698 <AmiBlitz3.ab3@25747>   MOVEA.l $8(A0),A1                                        ;write if branch destination
0003369E <AmiBlitz3.ab3@25748>   MOVE.l destpointer,D1
000336A0 <AmiBlitz3.ab3@25749>   SUB.l A1,D1
000336A6 <AmiBlitz3.ab3@25752>     TST.b fast
000336AA <AmiBlitz3.ab3@25753>     BEQ 'l3
000336AC <AmiBlitz3.ab3@25754>     ADDQ.l #4,D1
000336B2 <AmiBlitz3.ab3@25755>     MOVE.w dontwrite_nomemleft,D0
000336B6 <AmiBlitz3.ab3@25756>     BNE.w 'skip
000336BA <AmiBlitz3.ab3@25757>     MOVE.l d1,-$4(a1)
000336BE <AmiBlitz3.ab3@25758>   BRA 'skip
000336C0 <AmiBlitz3.ab3@25763>   ADDQ.l #2,d1
000336C6 <AmiBlitz3.ab3@25765>   TST.w dontwrite_nomemleft
000336CA <AmiBlitz3.ab3@25767>   BNE 'skip
000336D0 <AmiBlitz3.ab3@25769>   CMP.l #MinWordSgnd,D1
000336D4 <AmiBlitz3.ab3@25770>   BCC.w JUMP_bigiferr
000336D8 <AmiBlitz3.ab3@25772>   MOVE.w D1,-$2(A1)
000336DA <AmiBlitz3.ab3@25775> RTS
000336E0 <AmiBlitz3.ab3@25777> JUMP_bigiferr JMP bigiferr
000336EA <AmiBlitz3.ab3@25782>   MOVE.w oldqflag,instringon
000336F0 <AmiBlitz3.ab3@25783>   MOVEA.l lastsourcepos,A5
000336F2 <AmiBlitz3.ab3@25786>   MOVEQ.l #$01,D1
000336F6 <AmiBlitz3.ab3@25787> BRA.w doendif
00033700 <AmiBlitz3.ab3@25791>   MOVE.w oldqflag,instringon
00033706 <AmiBlitz3.ab3@25792>   MOVEA.l lastsourcepos,A5
00033708 <AmiBlitz3.ab3@25795>   MOVEQ.l #$00,D1
0003370C <AmiBlitz3.ab3@25798>   BSR.w doendif3
00033710 <AmiBlitz3.ab3@25799>   BSR.w freetheifz
00033716 <AmiBlitz3.ab3@25800> JMP get1bytemain
0003371C <AmiBlitz3.ab3@25804>   MOVE.l (A0),firstiff
0003371E <AmiBlitz3.ab3@25805>   MOVEA.l A0,A1
00033720 <AmiBlitz3.ab3@25806>   MOVEQ.l #$0E,D0
00033726 <AmiBlitz3.ab3@25807>   MOVEA.l _execbase,A6
0003372C <AmiBlitz3.ab3@25810>   MOVE.l mempool,a0
00033730 <AmiBlitz3.ab3@25811> JMP _FreePooled(A6)
00033736 <AmiBlitz3.ab3@25815> JUMP_modeerr JMP modeerr
0003373C <AmiBlitz3.ab3@25816> JUMP_interr3 JMP interr3
00033742 <AmiBlitz3.ab3@25817> JUMP_interr JMP interr
00033748 <AmiBlitz3.ab3@25821>   JSR get1bytemain
0003374C <AmiBlitz3.ab3@25824>   BEQ.w 'done
00033754 <AmiBlitz3.ab3@25826>   CMP.l #"noa7",-1(a5)
00033758 <AmiBlitz3.ab3@25827>   BNE 'l1
0003375E <AmiBlitz3.ab3@25828>   JSR get1bytemain
00033764 <AmiBlitz3.ab3@25829>   JSR get1bytemain
0003376A <AmiBlitz3.ab3@25830>   JSR get1bytemain
00033772 <AmiBlitz3.ab3@25831>   MOVE.w #$3a,lastchar
00033776 <AmiBlitz3.ab3@25832>  BRA 'done
0003377C <AmiBlitz3.ab3@25835>   CMP.w #"d0",-1(a5)
00033780 <AmiBlitz3.ab3@25836>   BNE 'l2
00033788 <AmiBlitz3.ab3@25837>   MOVE.b #1,returncode
0003378E <AmiBlitz3.ab3@25838>   CLR.w lastchar
00033792 <AmiBlitz3.ab3@25839>  BRA 'done
00033796 <AmiBlitz3.ab3@25842>   CMP.w #$80d7,d0
0003379A <AmiBlitz3.ab3@25843>   BNE 'loop
000337A0 <AmiBlitz3.ab3@25844>   JSR skiprest
000337A2 <AmiBlitz3.ab3@25845>  RTS
000337A6 <AmiBlitz3.ab3@25849>   BSR.w 'doend3
000337AC <AmiBlitz3.ab3@25850>   JSR reget
000337B0 <AmiBlitz3.ab3@25851>   BNE.w 'loop
000337B2 <AmiBlitz3.ab3@25852>  RTS
000337B6 <AmiBlitz3.ab3@25855>   CMP.w #-$7FFF,D0        ; was #$8001
000337BA <AmiBlitz3.ab3@25856>    BNE.w 'nottype
000337C0 <AmiBlitz3.ab3@25857>   MOVE.w linemode,D1
000337C4 <AmiBlitz3.ab3@25858>    BNE.w JUMP_modeerr
000337CA <AmiBlitz3.ab3@25859>   ADDQ.w #1,typelen
000337D2 <AmiBlitz3.ab3@25860>   BCLR #$0,typelen+1
000337D8 <AmiBlitz3.ab3@25861>   MOVEA.l thistype,A0
000337E0 <AmiBlitz3.ab3@25862>   MOVE.w typelen,$8(A0)
000337E8 <AmiBlitz3.ab3@25863>   MOVE.w #$FFFF,linemode        ; was -1
000337EE <AmiBlitz3.ab3@25864>  JMP get1bytemain
000337F2 <AmiBlitz3.ab3@25867>   CMP.w #-$7FF5,D0    ; was #$800b
000337F6 <AmiBlitz3.ab3@25868>    BEQ.w mydoendif
000337FA <AmiBlitz3.ab3@25871>   CMP.w #-$7FF4,D0    ; was #$800c
000337FE <AmiBlitz3.ab3@25872>    BEQ.w dowend2
00033802 <AmiBlitz3.ab3@25875>   CMP.w #-$7FF8,D0    ; was #$8008
00033806 <AmiBlitz3.ab3@25876>    BNE.w 'notstate
0003380A <AmiBlitz3.ab3@25881>  BRA.w endstate
0003380E <AmiBlitz3.ab3@25884>   CMP.w #-$7FF7,D0        ; was #$8009
00033812 <AmiBlitz3.ab3@25885>    BNE.w 'notfunc
00033818 <AmiBlitz3.ab3@25887>    TST.b fpu
0003381C <AmiBlitz3.ab3@25888>    BEQ 'nof
00033822 <AmiBlitz3.ab3@25889>    MOVEA.l currentfunction,A0
00033828 <AmiBlitz3.ab3@25890>    CMP.l #0,a0
0003382C <AmiBlitz3.ab3@25891>    BEQ 'nof
00033832 <AmiBlitz3.ab3@25892>    CMP.b #5,$5(a0)
00033836 <AmiBlitz3.ab3@25893>     BNE 'nof
0003383C <AmiBlitz3.ab3@25894>    MOVE.l #$f23c5000,d1
00033840 <AmiBlitz3.ab3@25895>    BSR writelong
00033844 <AmiBlitz3.ab3@25896>    MOVE.w #0,d1
00033848 <AmiBlitz3.ab3@25897>    BSR writeword
0003384C <AmiBlitz3.ab3@25901>   MOVE.w #$7000,D1                                         ;end function moveq #0,d0
00033850 <AmiBlitz3.ab3@25902>    BSR.w writeword
00033856 <AmiBlitz3.ab3@25903>   MOVEA.l currentfunction,A0
0003385C <AmiBlitz3.ab3@25905>   CMP.l #0,a0
00033860 <AmiBlitz3.ab3@25906>   BEQ 'state
00033866 <AmiBlitz3.ab3@25907>   MOVE.l destpointer,d1
0003386A <AmiBlitz3.ab3@25908>   SUB.l $e(a0),d1
0003386E <AmiBlitz3.ab3@25909>   MOVE.l d1,isfunc+1(a0)
00033874 <AmiBlitz3.ab3@25911>   CMPI.b #$7,$5(A0)
00033878 <AmiBlitz3.ab3@25912>    BNE.w 'state
0003387E <AmiBlitz3.ab3@25913>   MOVE.w putstlen,D1
00033882 <AmiBlitz3.ab3@25914>    BSR.w writeword
00033886 <AmiBlitz3.ab3@25915>  BRA.w 'state
0003388A <AmiBlitz3.ab3@25918>   CMP.w #-$7FD0,D0         ; was #$8000+48
0003388E <AmiBlitz3.ab3@25919>    BNE.w 'notsetint
00033894 <AmiBlitz3.ab3@25921>   MOVE.w proceduremode,D1
00033898 <AmiBlitz3.ab3@25922>    BNE.w JUMP_interr3
0003389E <AmiBlitz3.ab3@25924>   TST.b debugmode
000338A2 <AmiBlitz3.ab3@25925>    BEQ.w 'norerrf1
000338A4 <AmiBlitz3.ab3@25927>   MOVEQ.l #$03,D1
000338AA <AmiBlitz3.ab3@25928>    JSR writetrap
000338B0 <AmiBlitz3.ab3@25930>   MOVE.w dontwrite_nomemleft,D1
000338B4 <AmiBlitz3.ab3@25931>    BNE.w 'norerrf1
000338BA <AmiBlitz3.ab3@25933>   MOVEA.l intcleanat,A0
000338C0 <AmiBlitz3.ab3@25934>   MOVE.l destpointer,(A0)
000338C4 <AmiBlitz3.ab3@25936>   MOVE.w #$C30C,D1       ; was #gouse
000338C8 <AmiBlitz3.ab3@25937>    BSR.w Atokejsr        ;for runerrlib stack chex
000338CE <AmiBlitz3.ab3@25940>   MOVE.w intstring,D1
000338D2 <AmiBlitz3.ab3@25941>    BEQ.w JUMP_interr
000338D6 <AmiBlitz3.ab3@25942>    BPL.w 'nosp
000338DC <AmiBlitz3.ab3@25944>   MOVE.w intlevel,D1
000338E0 <AmiBlitz3.ab3@25945>   ORI.w #$7200,D1
000338E4 <AmiBlitz3.ab3@25946>    BSR.w writeword       ;moveq #level,d1
000338E8 <AmiBlitz3.ab3@25947>   MOVE.w #$C103,D1       ; was #oldint,
000338EC <AmiBlitz3.ab3@25948>    BSR.w Atokejsr
000338F2 <AmiBlitz3.ab3@25949>   CLR.w intlevel
000338F8 <AmiBlitz3.ab3@25952>   CLR.w intstring
000338FE <AmiBlitz3.ab3@25954>   MOVE.l intfin,D1
00033902 <AmiBlitz3.ab3@25955>    BSR.w writelong
00033908 <AmiBlitz3.ab3@25957>   MOVE.l #$70004E75,D1
0003390C <AmiBlitz3.ab3@25958>    BSR.w writelong
00033912 <AmiBlitz3.ab3@25960>   MOVE.w dontwrite_nomemleft,D1
00033916 <AmiBlitz3.ab3@25961>    BNE.w 'sintdone
0003391C <AmiBlitz3.ab3@25962>   MOVEA.l intjmpat,A0
00033920 <AmiBlitz3.ab3@25963>   MOVE.l destpointer(PC),(A0)
00033926 <AmiBlitz3.ab3@25966>  JMP get1bytemain
0003392A <AmiBlitz3.ab3@25969>   CMP.w #-$7FF2,D0   ; was #$800e     ;end select?
0003392E <AmiBlitz3.ab3@25970>    BEQ.w doendsel
00033932 <AmiBlitz3.ab3@25971>   CMP.w #-$7F4C,D0  ; was #$8001+tnum
00033936 <AmiBlitz3.ab3@25972>    BNE.w 'notseterr
0003393C <AmiBlitz3.ab3@25973>  JMP doendseterr
00033942 <AmiBlitz3.ab3@25977>  JMP syntaxerr
00033948 <AmiBlitz3.ab3@25980>   TST.w dirmode
0003394C <AmiBlitz3.ab3@25981>   BNE.w JUMP_baddirerr
00033950 <AmiBlitz3.ab3@25982>   MOVE.w #$C800,D1      ; #endjmp
00033956 <AmiBlitz3.ab3@25983>   JSR Atokejsr          ; was bra org source                                  ;end
0003395E <AmiBlitz3.ab3@25985>   CMP.l #"noa7",-4(a5)
00033962 <AmiBlitz3.ab3@25986>   BNE 'l10
00033968 <AmiBlitz3.ab3@25987>   TST.w dontwrite_nomemleft
0003396C <AmiBlitz3.ab3@25988>   BNE 'l10
00033972 <AmiBlitz3.ab3@25989>   MOVE.l destpointer,d1
00033974 <AmiBlitz3.ab3@25990>   SUBQ.l #4,d1
00033976 <AmiBlitz3.ab3@25991>   MOVE.l a0,-(a7)
00033978 <AmiBlitz3.ab3@25992>   MOVE.l d1,a0
0003397A <AmiBlitz3.ab3@25993>   MOVE.l (a0),a0
00033980 <AmiBlitz3.ab3@25994>   MOVE.l #$60000002,(a0)+
00033984 <AmiBlitz3.ab3@25995>   MOVE.w #$588f,(a0)
00033986 <AmiBlitz3.ab3@25996>   MOVE.l (a7)+,a0
00033988 <AmiBlitz3.ab3@25999> RTS
0003398E <AmiBlitz3.ab3@26004>   TST.w dirmode                                            ;stop
00033992 <AmiBlitz3.ab3@26005>   BNE.w JUMP_baddirerr
00033994 <AmiBlitz3.ab3@26007>   MOVE.w d0,d1
00033998 <AmiBlitz3.ab3@26008>   BEQ 'l10
0003399C <AmiBlitz3.ab3@26009>   CMP.b #$3a,d0
000339A0 <AmiBlitz3.ab3@26010>   BEQ 'l10
000339A6 <AmiBlitz3.ab3@26011>   JSR get1bytemain
000339AC <AmiBlitz3.ab3@26015>   TST.b debugmode
000339B0 <AmiBlitz3.ab3@26016>   BEQ.w newstop
000339B4 <AmiBlitz3.ab3@26017>   MOVE.w #$D501,D1
000339B8 <AmiBlitz3.ab3@26018> BRA.w Atokejsr
000339BA <AmiBlitz3.ab3@26024>     RTS
000339BC <AmiBlitz3.ab3@26026>   MOVE.w d1,d0
000339C0 <AmiBlitz3.ab3@26027>   BEQ 'l10
000339C4 <AmiBlitz3.ab3@26028>   CMP.b #$3a,d0
000339C8 <AmiBlitz3.ab3@26029>   BEQ 'l10
000339CC <AmiBlitz3.ab3@26030>   SUB.b #$30,d0
000339D0 <AmiBlitz3.ab3@26031>   MOVE.w #$4e40,d1
000339D4 <AmiBlitz3.ab3@26032>  BRA 'l11
000339D8 <AmiBlitz3.ab3@26035>   MOVE.w #$4e4a,d1
000339DC <AmiBlitz3.ab3@26036>  BRA writeword
000339DE <AmiBlitz3.ab3@26039>   ADD.b d0,d1
000339E2 <AmiBlitz3.ab3@26040> BRA writeword
000339E8 <AmiBlitz3.ab3@26044> JMP badconterr        ;cont not currently supported!
000339EC <AmiBlitz3.ab3@26047>   MOVE.w #$4E71,D1
000339F0 <AmiBlitz3.ab3@26048> BRA.w writeword
000339F6 <AmiBlitz3.ab3@26053>   MOVEA.l firstfor,A2
000339FC <AmiBlitz3.ab3@26054>   CLR.l firstfor
00033A02 <AmiBlitz3.ab3@26055>   MOVEA.l _execbase,A6
00033A06 <AmiBlitz3.ab3@26058>   CMPA.w #$0,A2
00033A0A <AmiBlitz3.ab3@26059>   BEQ.w 'done
00033A0C <AmiBlitz3.ab3@26060>   MOVEA.l A2,A1
00033A0E <AmiBlitz3.ab3@26061>   MOVEA.l (A1),A2
00033A10 <AmiBlitz3.ab3@26062>   MOVEQ.l #$00,D0
00033A14 <AmiBlitz3.ab3@26063>   MOVE.b $10(A1),D0
00033A1A <AmiBlitz3.ab3@26066>   MOVE.l mempool2,a0  
00033A1E <AmiBlitz3.ab3@26067>   JSR _FreePooled(A6)                                      ;freememfor_error
00033A22 <AmiBlitz3.ab3@26069>  BRA.w 'loop
00033A24 <AmiBlitz3.ab3@26072> RTS
00033A2A <AmiBlitz3.ab3@26075> JUMP_badpenderr JMP badpenderr
00033A30 <AmiBlitz3.ab3@26076> JUMP_noenderr   JMP noenderr
00033A36 <AmiBlitz3.ab3@26082>   MOVE.w proceduremode,D1
00033A3A <AmiBlitz3.ab3@26083>    BEQ.w JUMP_badpenderr
00033A40 <AmiBlitz3.ab3@26085>   MOVE.w dontwrite_nomemleft,D1
00033A44 <AmiBlitz3.ab3@26086>    BNE.w 'ship
00033A4A <AmiBlitz3.ab3@26087>   MOVEA.l firstpend,A2
00033A4E <AmiBlitz3.ab3@26090>   CMPA.w #$0,A2
00033A52 <AmiBlitz3.ab3@26091>    BEQ.w 'ship
00033A56 <AmiBlitz3.ab3@26092>   MOVEA.l $4(A2),A0
00033A5C <AmiBlitz3.ab3@26093>   MOVE.l destpointer,(A0)
00033A5E <AmiBlitz3.ab3@26094>   MOVEA.l (A2),A2
00033A62 <AmiBlitz3.ab3@26095>  BRA.w 'loop0
00033A68 <AmiBlitz3.ab3@26098>   TST.b debugmode
00033A6C <AmiBlitz3.ab3@26099>    BEQ.b 'ship2
00033A6E <AmiBlitz3.ab3@26101>   MOVEQ.l #$05,D1
00033A74 <AmiBlitz3.ab3@26102>   JSR writetrap
00033A7A <AmiBlitz3.ab3@26105>   MOVEA.l firstlocal,A2                                    ;firstlocal
00033A80 <AmiBlitz3.ab3@26106>   JSR calcstatic2b                                           ;calcstatic
00033A86 <AmiBlitz3.ab3@26107>   MOVEA.l currentfunction,A0
00033A8C <AmiBlitz3.ab3@26109>   MOVE.l destpointer,d1
00033A90 <AmiBlitz3.ab3@26110>   SUB.l $e(a0),d1
00033A94 <AmiBlitz3.ab3@26111>   MOVE.l d1,isfunc+1(a0)                                   ;store function size
00033A98 <AmiBlitz3.ab3@26113>   MOVE.w D4,$8(A0)                                         ;set if memalloc need
00033A9E <AmiBlitz3.ab3@26114>   MOVE.l D3,locdatast
00033AA4 <AmiBlitz3.ab3@26115>   MOVEA.l tempvm,A1
00033AAA <AmiBlitz3.ab3@26117>   CLR.b infunctioncode
00033AB0 <AmiBlitz3.ab3@26118>   MOVE.l firstiffstore,d1
00033AB6 <AmiBlitz3.ab3@26119>   CMP.l firstiff,d1
00033ABA <AmiBlitz3.ab3@26120>   BNE JUMP_noenderr
00033ABE <AmiBlitz3.ab3@26122>   TST.w $C(A1)                                             ;dim
00033AC2 <AmiBlitz3.ab3@26123>    BPL.w 'nolskip
00033AC8 <AmiBlitz3.ab3@26124>  BSET #$7,$8(A0)
00033ACC <AmiBlitz3.ab3@26125>   MOVE.w #$C005,D1      ;#freelast,
00033AD0 <AmiBlitz3.ab3@26126>    BSR.w tokejsr2                                          ;writefreememstatement
00033AD4 <AmiBlitz3.ab3@26127>  BRA.w 'lskip2
00033ADC <AmiBlitz3.ab3@26130>   MOVE.w memlibstat,$C(A1)
00033AE2 <AmiBlitz3.ab3@26133>   MOVEA.l currentfunction,A0
00033AE6 <AmiBlitz3.ab3@26134>   MOVE.l $E(A0),-(A7)
00033AEE <AmiBlitz3.ab3@26135>   MOVE.w locvaroff,$6(A0)
00033AF4 <AmiBlitz3.ab3@26136>   BCLR #$1,$7(A0)
00033AFA <AmiBlitz3.ab3@26137>   BCLR #$0,$7(A0)
00033B00 <AmiBlitz3.ab3@26138>   CMPI.b #$7,$5(A0)
00033B04 <AmiBlitz3.ab3@26139>    BNE.w 'penis
00033B0A <AmiBlitz3.ab3@26140>   MOVE.w getstlen,D1
00033B0E <AmiBlitz3.ab3@26141>    BSR.w writeword
00033B12 <AmiBlitz3.ab3@26144>   TST.w $6(A0)
00033B16 <AmiBlitz3.ab3@26145>    BEQ.w 'nolink
00033B1A <AmiBlitz3.ab3@26146>   MOVE.w #$FC7B,D1   ;#64635
00033B20 <AmiBlitz3.ab3@26147>    JSR uselib
00033B26 <AmiBlitz3.ab3@26148>   MOVE.w unlinka4,D1
00033B2C <AmiBlitz3.ab3@26149>    JSR writeword
00033B32 <AmiBlitz3.ab3@26155>   MOVEA.l currentfunction,A0
00033B34 <AmiBlitz3.ab3@26156>   MOVEQ.l #$00,D1
00033B38 <AmiBlitz3.ab3@26157>   MOVE.b $4(A0),D1
00033B3A <AmiBlitz3.ab3@26158>   LSR.w #4,D1
00033B3E <AmiBlitz3.ab3@26159>    BEQ.w 'nofix
00033B40 <AmiBlitz3.ab3@26162>      LSL.w #1,d1
00033B44 <AmiBlitz3.ab3@26165>   CMP.w #$1,D1
00033B48 <AmiBlitz3.ab3@26166>    BNE.w 'not1
00033B4E <AmiBlitz3.ab3@26167>   MOVE.w fix1,D1
00033B54 <AmiBlitz3.ab3@26168>    JSR writeword
00033B58 <AmiBlitz3.ab3@26169>  BRA.w 'nofix
00033B5A <AmiBlitz3.ab3@26172>   LSL.w #2,D1
00033B5C <AmiBlitz3.ab3@26173>   MOVE.w D1,-(A7)
00033B62 <AmiBlitz3.ab3@26174>   MOVE.w D1,moverts+2
00033B68 <AmiBlitz3.ab3@26175>   MOVE.l moverts,D1
00033B6E <AmiBlitz3.ab3@26176>    JSR writelong
00033B70 <AmiBlitz3.ab3@26177>   MOVE.w (A7)+,D1
00033B74 <AmiBlitz3.ab3@26178>   CMP.w #$8,D1
00033B78 <AmiBlitz3.ab3@26179>    BHI.w 'fix
00033B7C <AmiBlitz3.ab3@26180>   ANDI.w #$7,D1
00033B7E <AmiBlitz3.ab3@26181>   LSL.w #8,D1
00033B80 <AmiBlitz3.ab3@26182>   LSL.w #1,D1
00033B86 <AmiBlitz3.ab3@26183>   OR.w fixq,D1
00033B8C <AmiBlitz3.ab3@26184>    JSR writeword
00033B90 <AmiBlitz3.ab3@26185>  BRA.w 'nofix
00033B96 <AmiBlitz3.ab3@26188>    MOVE.w D1,fixstack+2
00033B9C <AmiBlitz3.ab3@26189>   MOVE.l fixstack,D1
00033BA2 <AmiBlitz3.ab3@26190>    JSR writelong
00033BA6 <AmiBlitz3.ab3@26193>    BSR.w normret
00033BAA <AmiBlitz3.ab3@26197>    BSR.w procfixer
00033BAC <AmiBlitz3.ab3@26199>   MOVEA.l (A7)+,A0
00033BB2 <AmiBlitz3.ab3@26200>   MOVE.w dontwrite_nomemleft,D1
00033BB6 <AmiBlitz3.ab3@26201>    BNE.w 'skipjp
00033BBC <AmiBlitz3.ab3@26202>   MOVE.l destpointer,-(A0)
00033BC2 <AmiBlitz3.ab3@26205>   CLR.w proceduremode
00033BC8 <AmiBlitz3.ab3@26206>   CLR.l currentfunction
00033BCE <AmiBlitz3.ab3@26207>   CLR.w procnum
00033BD2 <AmiBlitz3.ab3@26208>    BSR.w droplocals
00033BD8 <AmiBlitz3.ab3@26209>    JSR freepends
00033BDE <AmiBlitz3.ab3@26210> JMP get1bytemain
00033BE0 <AmiBlitz3.ab3@26214>   MOVEQ.l #$0C,D0
00033BE2 <AmiBlitz3.ab3@26215>   MOVEQ.l #$01,D1
00033BE8 <AmiBlitz3.ab3@26216>   MOVEA.l _execbase,A6
00033BEE <AmiBlitz3.ab3@26219>   MOVE.l mempool,a0
00033BF2 <AmiBlitz3.ab3@26220>   JSR _AllocPooled(a6)
00033BF4 <AmiBlitz3.ab3@26222>   MOVEA.l D0,A0
00033BFA <AmiBlitz3.ab3@26223>   MOVE.l alllocals,(A0)
00033C00 <AmiBlitz3.ab3@26224>   MOVE.l A0,alllocals
00033C06 <AmiBlitz3.ab3@26226>   MOVE.l firstlocal,D0
00033C0C <AmiBlitz3.ab3@26227>   CLR.l firstlocal
00033C10 <AmiBlitz3.ab3@26228>   MOVE.l D0,$4(A0)
00033C16 <AmiBlitz3.ab3@26229>   MOVE.l firstglob,D1
00033C1C <AmiBlitz3.ab3@26230>   CLR.l firstglob
00033C20 <AmiBlitz3.ab3@26231>   MOVE.l D1,$8(A0)
00033C26 <AmiBlitz3.ab3@26233>   TST.b debugmode
00033C2A <AmiBlitz3.ab3@26234>    BEQ.b 'skip
00033C30 <AmiBlitz3.ab3@26235>   TST.w dontwrite_nomemleft
00033C34 <AmiBlitz3.ab3@26236>    BNE.b 'skip
00033C38 <AmiBlitz3.ab3@26238>   MOVEA.l proclocals(PC),A0
00033C3A <AmiBlitz3.ab3@26239>   MOVE.l D0,(A0)+
00033C3C <AmiBlitz3.ab3@26240>   MOVE.l D1,(A0)
00033C3E <AmiBlitz3.ab3@26243> RTS
00033C44 <AmiBlitz3.ab3@26246> JUMP_baddirerr JMP baddirerr
00033C4A <AmiBlitz3.ab3@26247> JUMP_noforerr  JMP noforerr
00033C50 <AmiBlitz3.ab3@26251>   TST.w dirmode
00033C54 <AmiBlitz3.ab3@26252>    BNE.w JUMP_baddirerr
00033C5A <AmiBlitz3.ab3@26253>   MOVE.l firstfor,D1
00033C5E <AmiBlitz3.ab3@26254>    BEQ.w JUMP_noforerr
00033C64 <AmiBlitz3.ab3@26255>   JSR reget
00033C68 <AmiBlitz3.ab3@26256>    BEQ.w 'unknown
00033C6C <AmiBlitz3.ab3@26262>   BSR.w getparameter
00033C70 <AmiBlitz3.ab3@26263>   MOVEA.l firstfor(PC),A2
00033C72 <AmiBlitz3.ab3@26264>   MOVEQ.l #$00,D1
00033C76 <AmiBlitz3.ab3@26265>   MOVE.b $10(A2),D1
00033C7A <AmiBlitz3.ab3@26266>   SUBI.w #$12,D1
00033C7C <AmiBlitz3.ab3@26267>   CMP.w D1,D2
00033C80 <AmiBlitz3.ab3@26268>    BNE.w JUMP_noforerr
00033C84 <AmiBlitz3.ab3@26269>   LEA ptr_parameterstore(PC),A0
00033C88 <AmiBlitz3.ab3@26270>   LEA $11(A2),A1
00033C8A <AmiBlitz3.ab3@26271>   SUBQ.w #1,D2
00033C8C <AmiBlitz3.ab3@26274>     CMPM.b (A0)+,(A1)+
00033C90 <AmiBlitz3.ab3@26275>     BNE.w JUMP_noforerr
00033C94 <AmiBlitz3.ab3@26276>   DBF D2,'chkname
00033C98 <AmiBlitz3.ab3@26278>    BSR.w 'unknown2
00033C9E <AmiBlitz3.ab3@26279>    JSR reget
00033CA2 <AmiBlitz3.ab3@26280>    BEQ.w 'byebye
00033CA6 <AmiBlitz3.ab3@26281>   CMP.w #$2C,D0           ; ','
00033CAA <AmiBlitz3.ab3@26282>    BNE.w JUMP_syntaxerr
00033CB0 <AmiBlitz3.ab3@26283>    JSR get1bytemain
00033CB4 <AmiBlitz3.ab3@26284>  BRA.w 'nextnext
00033CB6 <AmiBlitz3.ab3@26287>  RTS
00033CBA <AmiBlitz3.ab3@26291>   MOVE.l 8(a7),a2
00033CBE <AmiBlitz3.ab3@26292>   Dc.l  $f2124400                                          ;fmove.s (a2),fp0
00033CC2 <AmiBlitz3.ab3@26293>   Dc.l  $F2174422                                          ;fadd.s (a7),fp0
00033CC6 <AmiBlitz3.ab3@26294>   Dc.l  $F2126400                                          ;fmove.s fp0,(a2)
00033CC8 <AmiBlitz3.ab3@26299>   MOVEA.l D1,A2
00033CCE <AmiBlitz3.ab3@26302>   JSR popnext                                           ;error checking for next.
00033CD2 <AmiBlitz3.ab3@26303>   MOVE.w $C(A2),D0
00033CD8 <AmiBlitz3.ab3@26305>   LEA nextb,A0
00033CDE <AmiBlitz3.ab3@26306>   LEA nextbf,A1
00033CE2 <AmiBlitz3.ab3@26307>   CMP.w #$1,D0
00033CE6 <AmiBlitz3.ab3@26308>    BEQ.w 'donext
00033CEC <AmiBlitz3.ab3@26309>   LEA nextw,A0
00033CF2 <AmiBlitz3.ab3@26310>   LEA nextwf,A1
00033CF6 <AmiBlitz3.ab3@26311>   CMP.w #$2,D0
00033CFA <AmiBlitz3.ab3@26312>    BEQ.w 'donext
00033D00 <AmiBlitz3.ab3@26313>   LEA nextl,A0
00033D06 <AmiBlitz3.ab3@26314>   LEA nextlf,A1
00033D0A <AmiBlitz3.ab3@26315>   CMP.w #$5,D0
00033D0E <AmiBlitz3.ab3@26316>    BNE.w 'donext
00033D14 <AmiBlitz3.ab3@26318>    TST.b fpu
00033D18 <AmiBlitz3.ab3@26319>    BEQ 'old
00033D1E <AmiBlitz3.ab3@26320>    LEA 'fpu2dats,a0                                         ;fpu next code
00033D24 <AmiBlitz3.ab3@26321>    LEA 'fpu2date,a1
00033D28 <AmiBlitz3.ab3@26322>  BRA 'donext
00033D2C <AmiBlitz3.ab3@26326>   MOVE.w #$C900,D1     ; #getffpbase
00033D30 <AmiBlitz3.ab3@26327>    BSR.w Atokejsr
00033D36 <AmiBlitz3.ab3@26328>   LEA nextf,A0
00033D3C <AmiBlitz3.ab3@26329>   LEA nextff,A1
00033D42 <AmiBlitz3.ab3@26332>   JSR pokecode
00033D48 <AmiBlitz3.ab3@26334>    TST.b fast                                             ;fast for next deactivate
00033D4C <AmiBlitz3.ab3@26335>  BRA 'l1
00033D52 <AmiBlitz3.ab3@26337>     TST.b onestep
00033D56 <AmiBlitz3.ab3@26338>     BEQ 'l1
00033D5C <AmiBlitz3.ab3@26339>     CLR.b onestep
00033D62 <AmiBlitz3.ab3@26340>     SUBQ.l #4,destpointer
00033D66 <AmiBlitz3.ab3@26341>     MOVE.w #$5292,d1
00033D6C <AmiBlitz3.ab3@26342>     JSR writeword
00033D70 <AmiBlitz3.ab3@26346>   MOVE.l thebra(PC),D1
00033D76 <AmiBlitz3.ab3@26347>    JSR writelong
00033D7C <AmiBlitz3.ab3@26349>   MOVEA.l firstfor,A2
00033D82 <AmiBlitz3.ab3@26350>   MOVE.l (A2),firstfor
00033D86 <AmiBlitz3.ab3@26354>   MOVEA.l $8(A2),A0
00033D8C <AmiBlitz3.ab3@26355>   MOVEA.l destpointer,A1
00033D8E <AmiBlitz3.ab3@26356>   MOVE.l A1,D1
00033D90 <AmiBlitz3.ab3@26357>   SUB.l A0,D1            ;d1=positive bra
00033D92 <AmiBlitz3.ab3@26358>   ADDQ.l #2,D1
00033D98 <AmiBlitz3.ab3@26359>   CMP.l #MinWordSgnd,D1  ; #32768,
00033D9C <AmiBlitz3.ab3@26360>    BCC.w JUMP_bigforerr
00033DA2 <AmiBlitz3.ab3@26361>   TST.w dontwrite_nomemleft
00033DA6 <AmiBlitz3.ab3@26362>    BNE.w 'nopoke1
00033DAA <AmiBlitz3.ab3@26363>   MOVE.w D1,-$2(A0)
00033DAC <AmiBlitz3.ab3@26366>   MOVE.l A1,D1
00033DB0 <AmiBlitz3.ab3@26367>   SUB.l $4(A2),D1
00033DB2 <AmiBlitz3.ab3@26368>   SUBQ.l #6,D1
00033DB8 <AmiBlitz3.ab3@26369>   CMP.l #MinWordSgnd,D1 ;#32768,
00033DBC <AmiBlitz3.ab3@26370>    BCC.w JUMP_bigforerr
00033DC2 <AmiBlitz3.ab3@26371>   TST.w dontwrite_nomemleft
00033DC6 <AmiBlitz3.ab3@26372>    BNE.w 'skip
00033DC8 <AmiBlitz3.ab3@26373>   NEG.w D1
00033DCC <AmiBlitz3.ab3@26374>   MOVE.w D1,-$2(A1)
00033DD2 <AmiBlitz3.ab3@26377>   JSR popnext3                ;fix stack
00033DD8 <AmiBlitz3.ab3@26379>   MOVEA.l _execbase,A6
00033DDA <AmiBlitz3.ab3@26380>   MOVEA.l A2,A1
00033DDC <AmiBlitz3.ab3@26381>   MOVEQ.l #$00,D0
00033DE0 <AmiBlitz3.ab3@26382>   MOVE.b $10(A1),D0
00033DE6 <AmiBlitz3.ab3@26385>   MOVE.l mempool2,a0
00033DEA <AmiBlitz3.ab3@26386>   JSR _FreePooled(A6)
00033DF0 <AmiBlitz3.ab3@26388> JMP reget
00033DF6 <AmiBlitz3.ab3@26391> JUMP_notallowd JMP notallowd
00033DFC <AmiBlitz3.ab3@26392> JUMP_bigforerr JMP bigforerr
00033E00 <AmiBlitz3.ab3@26396>   MOVE.w #$664F,-(A7)          ;#'fO',
00033E04 <AmiBlitz3.ab3@26399>  BRA.w thebra
00033E0A <AmiBlitz3.ab3@26402> JUMP_error_dublicate_for JMP error_dublicate_for
00033E10 <AmiBlitz3.ab3@26403> JUMP_badforerr           JMP badforerr
00033E14 <AmiBlitz3.ab3@26406> forlineat:   Ds.l 1
00033E16 <AmiBlitz3.ab3@26407> fortemp:     Ds.w 1
00033E1C <AmiBlitz3.ab3@26415>   CLR.l fp0addr
00033E22 <AmiBlitz3.ab3@26417>   TST.w dirmode
00033E26 <AmiBlitz3.ab3@26418>    BNE.w JUMP_baddirerr
00033E30 <AmiBlitz3.ab3@26419>   MOVE.l linenumat,forlineat
00033E36 <AmiBlitz3.ab3@26423>   MOVE.l A5,letstart
00033E3A <AmiBlitz3.ab3@26424>   BSR.w getparameter
00033E40 <AmiBlitz3.ab3@26425>   MOVE.w D2,fortemp
00033E46 <AmiBlitz3.ab3@26427>   JSR findfor
00033E4A <AmiBlitz3.ab3@26428>    BEQ.w JUMP_error_dublicate_for
00033E50 <AmiBlitz3.ab3@26429>   LEA firstfor,A2
00033E56 <AmiBlitz3.ab3@26430>   JSR addhere2
00033E58 <AmiBlitz3.ab3@26431>   MOVE.l A2,-(A7)
00033E5E <AmiBlitz3.ab3@26433>   TST.b debugmode
00033E62 <AmiBlitz3.ab3@26434>    BEQ.b 'noerr
00033E68 <AmiBlitz3.ab3@26436>   JSR chkstak
00033E6E <AmiBlitz3.ab3@26437>   MOVE.l forset,D1
00033E74 <AmiBlitz3.ab3@26438>   JSR  writelong
00033E78 <AmiBlitz3.ab3@26441>   MOVE.w fortemp(PC),D2
00033E80 <AmiBlitz3.ab3@26443>   MOVE.b #1,formode
00033E84 <AmiBlitz3.ab3@26445>   BSR.w dolet2                                         ;for get 1. value
00033E8A <AmiBlitz3.ab3@26446>   CLR.b formode
00033E8E <AmiBlitz3.ab3@26447>   CMP.w #-$7FE8,D0       ; was #$8018,
00033E92 <AmiBlitz3.ab3@26448>    BNE.w JUMP_syntaxerr
00033E98 <AmiBlitz3.ab3@26449>   MOVE.w commode,D1
00033E9C <AmiBlitz3.ab3@26450>    BNE.w JUMP_syntaxerr
00033EA0 <AmiBlitz3.ab3@26451>   CMP.b #$6,D2
00033EA4 <AmiBlitz3.ab3@26452>    BCC.w JUMP_badforerr
00033EA8 <AmiBlitz3.ab3@26453>   BTST #$F,D2
00033EAC <AmiBlitz3.ab3@26454>    BNE.w 'skip
00033EB2 <AmiBlitz3.ab3@26455>   MOVE.w leaamp,D1
00033EB8 <AmiBlitz3.ab3@26456>   JSR pokewda5s
00033EBA <AmiBlitz3.ab3@26457>   MOVE.w D3,D1
00033EC0 <AmiBlitz3.ab3@26458>   JSR  writeword
00033EC6 <AmiBlitz3.ab3@26461>   MOVE.w pushindex,D1
00033ECC <AmiBlitz3.ab3@26462>   JSR  writeword         ;index lea on stack
00033ED0 <AmiBlitz3.ab3@26463>   ANDI.w #$FF,D2
00033ED2 <AmiBlitz3.ab3@26465>   MOVEA.l (A7),A1
00033ED6 <AmiBlitz3.ab3@26466>   MOVE.w D2,$C(A1)
00033ED8 <AmiBlitz3.ab3@26468>   MOVE.w D2,-(A7)
00033EDC <AmiBlitz3.ab3@26469>    BSR.w eval             ;get fin
00033EE2 <AmiBlitz3.ab3@26471>    CLR.b onestep
00033EE6 <AmiBlitz3.ab3@26472>    CMP.w #$8019,d0
00033EEA <AmiBlitz3.ab3@26473>    BEQ 'l1
00033EF2 <AmiBlitz3.ab3@26474>    MOVE.b #1,onestep
00033EF4 <AmiBlitz3.ab3@26478>   MOVE.w (A7),D2
00033EFA <AmiBlitz3.ab3@26480>   MOVE.w pushd0l,D1
00033EFE <AmiBlitz3.ab3@26481>   CMP.w #$3,D2
00033F02 <AmiBlitz3.ab3@26482>    BCC.w 'skip1
00033F08 <AmiBlitz3.ab3@26483>   MOVE.w pushd0wd,D1
00033F0A <AmiBlitz3.ab3@26486>    MOVE.w D1,-(A7)
00033F10 <AmiBlitz3.ab3@26488>    TST.b fpu
00033F14 <AmiBlitz3.ab3@26489>    BEQ 'old
00033F18 <AmiBlitz3.ab3@26490>    CMP.b #5,d2
00033F1C <AmiBlitz3.ab3@26491>    BNE 'old
00033F22 <AmiBlitz3.ab3@26492>    MOVE.l #$f2276400,d1
00033F28 <AmiBlitz3.ab3@26494>    JSR writelong
00033F2C <AmiBlitz3.ab3@26495>  BRA 'weit
00033F32 <AmiBlitz3.ab3@26499>    JSR  writeword        ;push fin on stack                                   ;fpu for end value
00033F36 <AmiBlitz3.ab3@26502>   CMP.w #-$7FE7,D0      ; was #$8019,
00033F3A <AmiBlitz3.ab3@26503>    BNE.w 'defstep
00033F3E <AmiBlitz3.ab3@26505>    BSR.w eval           ;get step
00033F44 <AmiBlitz3.ab3@26507>    TST.b fpu
00033F48 <AmiBlitz3.ab3@26508>    BEQ 'pushstep
00033F4C <AmiBlitz3.ab3@26509>    CMP.b #5,d2
00033F50 <AmiBlitz3.ab3@26510>    BNE 'pushstep
00033F56 <AmiBlitz3.ab3@26511>    MOVE.l #$f2276400,d1                                    ;write step <> 1
00033F5C <AmiBlitz3.ab3@26513>   JSR writelong
00033F5E <AmiBlitz3.ab3@26518>    MOVE.w (a7)+,d1
00033F62 <AmiBlitz3.ab3@26519>  BRA 'fpur
00033F66 <AmiBlitz3.ab3@26523>   CMP.w #$4,D2
00033F6A <AmiBlitz3.ab3@26524>    BCC.w 'qup
00033F6E <AmiBlitz3.ab3@26525>   MOVE.w #$7001,D1
00033F74 <AmiBlitz3.ab3@26526>   JSR writeword
00033F78 <AmiBlitz3.ab3@26527>  BRA.w 'pushstep
00033F7C <AmiBlitz3.ab3@26530>   BNE.w 'notq
00033F80 <AmiBlitz3.ab3@26531>   MOVE.w #$7001,D1
00033F86 <AmiBlitz3.ab3@26532>   JSR writeword
00033F8C <AmiBlitz3.ab3@26533>   MOVE.w swapd0,D1
00033F92 <AmiBlitz3.ab3@26534>   JSR writeword
00033F96 <AmiBlitz3.ab3@26535>  BRA.w 'pushstep
00033F9C <AmiBlitz3.ab3@26539>   TST.b fpu
00033FA0 <AmiBlitz3.ab3@26540>    BEQ 'old2
00033FA4 <AmiBlitz3.ab3@26541>   CMP.b #5,d2
00033FA8 <AmiBlitz3.ab3@26542>    BNE 'old2
00033FAE <AmiBlitz3.ab3@26543>   MOVE.l #$f23c5000,d1
00033FB4 <AmiBlitz3.ab3@26544>   JSR writelong
00033FB8 <AmiBlitz3.ab3@26545>   MOVE.w #$1,d1
00033FBE <AmiBlitz3.ab3@26546>   JSR writeword
00033FC4 <AmiBlitz3.ab3@26547>   MOVE.l #$f2276400,d1
00033FCA <AmiBlitz3.ab3@26548>   JSR writelong
00033FCC <AmiBlitz3.ab3@26549>   MOVE.w (a7)+,d1
00033FD0 <AmiBlitz3.ab3@26550>  BRA 'fpur
00033FD4 <AmiBlitz3.ab3@26554>   MOVE.w #$203C,D1                                         ;write step 1
00033FDA <AmiBlitz3.ab3@26555>   JSR writeword
00033FE0 <AmiBlitz3.ab3@26556>   MOVE.l #$80000041,D1     ;ffp '1'                                ;ffp '1'
00033FE6 <AmiBlitz3.ab3@26557>   JSR writelong
00033FE8 <AmiBlitz3.ab3@26560>   MOVE.w (A7)+,D1
00033FEE <AmiBlitz3.ab3@26561>   JSR writeword           ;push step on stack                                 ;push step on stack
00033FF0 <AmiBlitz3.ab3@26566>   MOVE.w (A7)+,D2
00033FF2 <AmiBlitz3.ab3@26567>   MOVEA.l (A7),A1
00033FFA <AmiBlitz3.ab3@26568>   MOVE.l destpointer,$4(A1)
00034000 <AmiBlitz3.ab3@26569>   LEA forcompb,A0
00034006 <AmiBlitz3.ab3@26570>   LEA forcompbf,A1
0003400A <AmiBlitz3.ab3@26571>   CMP.w #$1,D2
0003400E <AmiBlitz3.ab3@26572>    BEQ.w 'docomp
00034014 <AmiBlitz3.ab3@26573>   LEA forcompw,A0
0003401A <AmiBlitz3.ab3@26574>   LEA forcompwf,A1
0003401E <AmiBlitz3.ab3@26575>   CMP.w #$2,D2
00034022 <AmiBlitz3.ab3@26576>    BEQ.w 'docomp
00034028 <AmiBlitz3.ab3@26577>   LEA forcompl,A0
0003402E <AmiBlitz3.ab3@26578>   LEA forcomplf,A1
00034032 <AmiBlitz3.ab3@26579>   CMP.w #$5,D2
00034036 <AmiBlitz3.ab3@26580>    BNE.w 'docomp
0003403C <AmiBlitz3.ab3@26582>   TST.b fpu
00034040 <AmiBlitz3.ab3@26583>    BEQ 'old3
00034046 <AmiBlitz3.ab3@26584>   LEA fpu_start,a0
0003404C <AmiBlitz3.ab3@26585>   LEA fpu_end,a1
00034052 <AmiBlitz3.ab3@26586>   JSR pokecode
00034056 <AmiBlitz3.ab3@26587>  BRA 'fpu3
0003405C <AmiBlitz3.ab3@26591>   LEA forcompf,A0                                         ;
00034062 <AmiBlitz3.ab3@26592>   LEA forcompff,A1
00034068 <AmiBlitz3.ab3@26593>   JSR pokecode
0003406C <AmiBlitz3.ab3@26594>   MOVE.w #$C900,D1       ; #getffpbase,
00034070 <AmiBlitz3.ab3@26595>   BSR.w Atokejsr
00034076 <AmiBlitz3.ab3@26596>   LEA forcompf2,A0
0003407C <AmiBlitz3.ab3@26597>   LEA forcompf2f,A1
00034082 <AmiBlitz3.ab3@26600>   JSR pokecode
00034088 <AmiBlitz3.ab3@26602>   TST.b fast                                               ;fast for next
0003408C <AmiBlitz3.ab3@26603>    BEQ 's1
00034090 <AmiBlitz3.ab3@26604>   CMP.w #3,d2
00034094 <AmiBlitz3.ab3@26605>    BNE 's1
0003409A <AmiBlitz3.ab3@26606>   TST.b onestep
0003409E <AmiBlitz3.ab3@26607>    BEQ 's1
000340A8 <AmiBlitz3.ab3@26608>   SUB.l #10,destpointer
000340AC <AmiBlitz3.ab3@26609>   MOVE.w #$b081,d1
000340B2 <AmiBlitz3.ab3@26610>   JSR writeword
000340B6 <AmiBlitz3.ab3@26615>   MOVE.l thebgt(PC),D1
000340BC <AmiBlitz3.ab3@26616>   JSR writelong
000340BE <AmiBlitz3.ab3@26621>   MOVEA.l (A7)+,A1
000340C6 <AmiBlitz3.ab3@26622>   MOVE.l destpointer,$8(A1)
000340CC <AmiBlitz3.ab3@26623> JMP reget
000340D0 <AmiBlitz3.ab3@26628>   MOVEA.l 8(a7),a2
000340D4 <AmiBlitz3.ab3@26629>   Dc.l $f2124400                                           ;fmove.s (a2),fp0
000340DA <AmiBlitz3.ab3@26630>   fmove.s 4(a7),fp1
000340DE <AmiBlitz3.ab3@26631>   BTST.b #7,(a7)
000340E2 <AmiBlitz3.ab3@26632>   BNE 'negi
000340E6 <AmiBlitz3.ab3@26633>   fcmp.x fp1,fp0
000340EA <AmiBlitz3.ab3@26634>  BRA 'negi2
000340EE <AmiBlitz3.ab3@26637>   fcmp.x fp0,fp1
000340F2 <AmiBlitz3.ab3@26640>   Dc.l $f2920000                                           ;fbgt.w
000340F6 <AmiBlitz3.ab3@26646>   BGT.w thebgt
000340FC <AmiBlitz3.ab3@26649> JUMP_error4char          JMP error4char
00034102 <AmiBlitz3.ab3@26650> JUMP_error_convert_types JMP error_convert_types
00034108 <AmiBlitz3.ab3@26651> JUMP_noleterr            JMP noleterr
0003410E <AmiBlitz3.ab3@26652> JUMP_nocomerr            JMP nocomerr
00034114 <AmiBlitz3.ab3@26653> JUMP_comerr              JMP comerr
0003411A <AmiBlitz3.ab3@26657>   MOVE.l A5,letstart
00034120 <AmiBlitz3.ab3@26658>   JSR getparameter
0003412A <AmiBlitz3.ab3@26665>   MOVE.l destpointer,pushpc
00034134 <AmiBlitz3.ab3@26666>   MOVE.l hunkoffsetbase,pushoff
0003413A <AmiBlitz3.ab3@26667>   CLR.l rightsidetype
00034140 <AmiBlitz3.ab3@26668>   CLR.w rightsideflagmask
00034148 <AmiBlitz3.ab3@26670>   MOVE.w #$0001,regnum            ;don't disturb this reg!
0003414E <AmiBlitz3.ab3@26671>   JSR fetchvars                   ;var in a3, type in a2
00034154 <AmiBlitz3.ab3@26672>   JSR calcvar                     ;get offset stuff
0003415A <AmiBlitz3.ab3@26674>   TST.b formode
0003415E <AmiBlitz3.ab3@26675>   BEQ 'lf1
00034164 <AmiBlitz3.ab3@26676>   CMP.l #newtype_double,A2
00034168 <AmiBlitz3.ab3@26677>   BEQ JUMP_notallowd
0003416E <AmiBlitz3.ab3@26678>   MOVE.l a2,currtype
00034174 <AmiBlitz3.ab3@26681>   CLR.w startoffsetmore
00034178 <AmiBlitz3.ab3@26682>   CMP.w #$3d,d0
0003417C <AmiBlitz3.ab3@26683>   BNE 'l1a
00034180 <AmiBlitz3.ab3@26684>   BTST #15,d2
00034184 <AmiBlitz3.ab3@26685>   BEQ 'l1a
00034188 <AmiBlitz3.ab3@26686>   CMP.b #1,d2
0003418C <AmiBlitz3.ab3@26687>   BNE 'l1a
00034196 <AmiBlitz3.ab3@26688>   MOVE.w leaa0a0+2,startoffsetmore
0003419C <AmiBlitz3.ab3@26692>   CLR.w regnum                     ;don't disturb this reg
000341A0 <AmiBlitz3.ab3@26693>   BSR.w pushdo
000341A6 <AmiBlitz3.ab3@26694>   CLR.w commode
000341AC <AmiBlitz3.ab3@26696>   CLR.w stackcorrect
000341B2 <AmiBlitz3.ab3@26698>   CLR.w pcodd
000341B8 <AmiBlitz3.ab3@26700>   MOVE.w startoffsetmore,d1
000341BC <AmiBlitz3.ab3@26701>   BTST #0,d1
000341C0 <AmiBlitz3.ab3@26702>   BEQ 'l2a
000341C8 <AmiBlitz3.ab3@26703>   MOVE.w #1,pcodd
000341CC <AmiBlitz3.ab3@26708>   CMP.w #$3D,D0              ;'='                              ;=
000341D0 <AmiBlitz3.ab3@26709>   BEQ.w 'nextcom
000341D2 <AmiBlitz3.ab3@26713>   MOVE.b (a5)+,d1
000341D6 <AmiBlitz3.ab3@26714>   BEQ 'l10
000341DA <AmiBlitz3.ab3@26715>   CMP.b #":",d1
000341DE <AmiBlitz3.ab3@26716>   BEQ 'l10
000341E2 <AmiBlitz3.ab3@26717>   CMP.b #";",d1
000341E6 <AmiBlitz3.ab3@26718>   BEQ 'l10
000341EA <AmiBlitz3.ab3@26719>   CMP.b #"0",d1
000341EE <AmiBlitz3.ab3@26720>   BLT 'l11
000341F2 <AmiBlitz3.ab3@26721>   CMP.b #"9",d1
000341F6 <AmiBlitz3.ab3@26722>   BGT 'l11
000341FA <AmiBlitz3.ab3@26723>  BRA.s 'l1
00034202 <AmiBlitz3.ab3@26726>   MOVE.b #1,quickadd
00034208 <AmiBlitz3.ab3@26733>   MOVEA.l letstart,A5
0003420A <AmiBlitz3.ab3@26734>   SUBQ.w #1,A5
0003420E <AmiBlitz3.ab3@26737>   CMP.b #$7,D2
00034212 <AmiBlitz3.ab3@26738>    BNE.w 'notstring
00034216 <AmiBlitz3.ab3@26749>   MOVEM.w D2-D3,-(A7)
0003421C <AmiBlitz3.ab3@26750>   MOVE.l lastoffset_org,-(A7)
00034222 <AmiBlitz3.ab3@26751>   MOVE.w varmode,-(A7)
0003422C <AmiBlitz3.ab3@26754>     MOVE.l #forthstack,forthsp
00034236 <AmiBlitz3.ab3@26755>    MOVE.l #precstack,precsp
0003423C <AmiBlitz3.ab3@26756>    CLR.w regnum
00034242 <AmiBlitz3.ab3@26757>    CLR.w nonew
00034248 <AmiBlitz3.ab3@26758>    CLR.w sbasegot
00034252 <AmiBlitz3.ab3@26759>    MOVE.w varcodelen,oldvcodelen
00034258 <AmiBlitz3.ab3@26760>    CLR.w varcodelen
00034260 <AmiBlitz3.ab3@26761>    MOVE.w #$FFFF,lasta6
00034262 <AmiBlitz3.ab3@26765>   MOVEQ.l #$07,D2
00034266 <AmiBlitz3.ab3@26766>    BSR.w eval
0003426C <AmiBlitz3.ab3@26767>   MOVE.w (A7)+,varmode
00034272 <AmiBlitz3.ab3@26768>   MOVE.l (A7)+,lastoffset_org
00034278 <AmiBlitz3.ab3@26769>   MOVE.w moved0a3,D1
0003427E <AmiBlitz3.ab3@26770>    JSR writeword
00034284 <AmiBlitz3.ab3@26771>   MOVE.w commode,D1
00034288 <AmiBlitz3.ab3@26772>    BEQ.w 'stconti
0003428E <AmiBlitz3.ab3@26773>   LEA pulla2st,A0
00034294 <AmiBlitz3.ab3@26774>   LEA pulla2stf,A1
0003429A <AmiBlitz3.ab3@26775>    JSR pokecode
0003429E <AmiBlitz3.ab3@26776>  BRA.w 'stconti2
000342A2 <AmiBlitz3.ab3@26779>   BSR.w pushput
000342A6 <AmiBlitz3.ab3@26782>   MOVEM.w (A7)+,D2-D3
000342AA <AmiBlitz3.ab3@26783>   BTST #$F,D2
000342AE <AmiBlitz3.ab3@26784>   BNE.w 'already
000342B4 <AmiBlitz3.ab3@26785>     MOVE.w D3,leaa5d3a2+2
000342BA <AmiBlitz3.ab3@26786>     MOVE.l leaa5d3a2,D1
000342C0 <AmiBlitz3.ab3@26787>     JSR pokela5s
000342C4 <AmiBlitz3.ab3@26790>   MOVE.w #$FE6F,D1         ; was #65135,
000342CA <AmiBlitz3.ab3@26791>   JSR uselib
000342D0 <AmiBlitz3.ab3@26792>   MOVE.l #$C700,D1         ; was #lastring,
000342D6 <AmiBlitz3.ab3@26793>   MOVE.l d1,lastinstruction
000342DC <AmiBlitz3.ab3@26794>   MOVE.w varmode,D2
000342E0 <AmiBlitz3.ab3@26795>   BNE.w 'local
000342E2 <AmiBlitz3.ab3@26796>     ADDQ.w #1,D1           ;use global allocmem
000342E6 <AmiBlitz3.ab3@26799>   BSR.w Atokejsr
000342EA <AmiBlitz3.ab3@26800>   CMP.w #$2C,D0           ;','
000342EE <AmiBlitz3.ab3@26801>   BNE.w 'done
000342F4 <AmiBlitz3.ab3@26803>   MOVE.w addq4a2,D1
000342FA <AmiBlitz3.ab3@26804>   JSR writeword
000342FE <AmiBlitz3.ab3@26805>  BRA.w 'nextstr
00034302 <AmiBlitz3.ab3@26808>    BTST #$E,D2             ;pointer, ignore!
00034306 <AmiBlitz3.ab3@26809>    BNE.w 'skip
00034308 <AmiBlitz3.ab3@26810>   TST.b D2
0003430C <AmiBlitz3.ab3@26811>    BEQ.w JUMP_noleterr     ;tried to assign a struct - later!
00034312 <AmiBlitz3.ab3@26813>    TST.b newsyntax
00034316 <AmiBlitz3.ab3@26814>    BEQ 'skip2
0003431A <AmiBlitz3.ab3@26817>    CMP.w #$4022,(a5)
0003431E <AmiBlitz3.ab3@26818>    BNE 'skip2
00034324 <AmiBlitz3.ab3@26819>    CMP.l #3,d2
00034328 <AmiBlitz3.ab3@26820>    BNE  JUMP_error_convert_types
0003432A <AmiBlitz3.ab3@26821>    ADDQ #2,a5
0003432C <AmiBlitz3.ab3@26822>    MOVEQ #0,d0
0003432E <AmiBlitz3.ab3@26823>    MOVE.b (a5)+,d0
00034332 <AmiBlitz3.ab3@26824>    BEQ 'skip2
00034336 <AmiBlitz3.ab3@26825>    CMP.b #$22,d0
0003433A <AmiBlitz3.ab3@26826>    BNE 'l5
0003433E <AmiBlitz3.ab3@26827>    MOVE.b #0,d0
00034342 <AmiBlitz3.ab3@26828>  BRA 'do
00034344 <AmiBlitz3.ab3@26831>   ASL.l #8,d0
00034346 <AmiBlitz3.ab3@26832>    MOVE.b (a5)+,d0
0003434A <AmiBlitz3.ab3@26833>    BEQ 'skip2
0003434E <AmiBlitz3.ab3@26834>    CMP.b #$22,d0
00034352 <AmiBlitz3.ab3@26835>    BNE 'l2
00034356 <AmiBlitz3.ab3@26836>    MOVE.b #0,d0
00034358 <AmiBlitz3.ab3@26837>    ASR.l #8,d0
0003435C <AmiBlitz3.ab3@26838>  BRA 'do
0003435E <AmiBlitz3.ab3@26841>   ASL.l #8,d0
00034360 <AmiBlitz3.ab3@26842>     MOVE.b (a5)+,d0
00034364 <AmiBlitz3.ab3@26843>    BEQ 'skip2
00034368 <AmiBlitz3.ab3@26844>    CMP.b #$22,d0
0003436C <AmiBlitz3.ab3@26845>    BNE 'l3
00034370 <AmiBlitz3.ab3@26846>    MOVE.b #0,d0
00034372 <AmiBlitz3.ab3@26847>    ASR.l #8,d0
00034376 <AmiBlitz3.ab3@26848>  BRA 'do
00034378 <AmiBlitz3.ab3@26851>   ASL.l #8,d0
0003437A <AmiBlitz3.ab3@26852>     MOVE.b (a5)+,d0
0003437E <AmiBlitz3.ab3@26853>    BEQ 'skip2
00034382 <AmiBlitz3.ab3@26854>    CMP.b #$22,d0
00034386 <AmiBlitz3.ab3@26855>    BNE 'l4
0003438A <AmiBlitz3.ab3@26856>    MOVE.b #0,d0
0003438C <AmiBlitz3.ab3@26857>    ASR.l #8,d0
00034390 <AmiBlitz3.ab3@26858>  BRA 'do
00034394 <AmiBlitz3.ab3@26861>    CMP.b #$22,(a5)+
00034398 <AmiBlitz3.ab3@26862>    BNE JUMP_error4char
0003439C <AmiBlitz3.ab3@26865>   MOVE.w #$2b7c,d1
000343A2 <AmiBlitz3.ab3@26866>    TST.w varmode
000343A6 <AmiBlitz3.ab3@26867>    BEQ 'g3
000343AA <AmiBlitz3.ab3@26868>    BCLR #9,d1
000343B0 <AmiBlitz3.ab3@26871>     JSR writeword
000343B2 <AmiBlitz3.ab3@26872>     MOVE.l d0,d1
000343B8 <AmiBlitz3.ab3@26873>     JSR writelong
000343BA <AmiBlitz3.ab3@26874>     MOVE.w d3,d1
000343C0 <AmiBlitz3.ab3@26875>     JSR writeword
000343C6 <AmiBlitz3.ab3@26876>     JSR get1bytemain
000343C8 <AmiBlitz3.ab3@26877>  RTS
000343CE <AmiBlitz3.ab3@26884>   MOVE.w d2,vartype
000343D2 <AmiBlitz3.ab3@26886>   MOVE.b #$3,D2
000343D6 <AmiBlitz3.ab3@26893>   CMP.b #5,d2
000343DA <AmiBlitz3.ab3@26894>   BNE 'l1aa
000343E0 <AmiBlitz3.ab3@26895>   MOVE.l a2,currtype
000343E4 <AmiBlitz3.ab3@26900>   MOVEM.w D2-D3,-(A7)
000343EA <AmiBlitz3.ab3@26901>   MOVE.w varmode,-(A7)
000343F0 <AmiBlitz3.ab3@26903>   MOVE.l a2,leftsidetype
000343FA <AmiBlitz3.ab3@26904>   MOVE.w flagmask,leftsideflagmask
000343FE <AmiBlitz3.ab3@26905>   BTST #$f,d2
00034402 <AmiBlitz3.ab3@26906>   BEQ 'nomultiassign
00034408 <AmiBlitz3.ab3@26907>   CLR.l leftsidetype                        ;its multiassign to type entries so no typecheck need
0003440E <AmiBlitz3.ab3@26908>   CLR.w leftsideflagmask
00034412 <AmiBlitz3.ab3@26912>   ANDI.w #$FF,D2
00034418 <AmiBlitz3.ab3@26913>   MOVE.l lastoffset_org,-(A7)
0003441E <AmiBlitz3.ab3@26914>   JSR eval                                ; calc right side of var assign
00034422 <AmiBlitz3.ab3@26916>   MOVEM.l a0/a1,-(a7)
00034428 <AmiBlitz3.ab3@26917>   MOVE.l leftsidetype,a0
0003442E <AmiBlitz3.ab3@26918>   CMP.l #0,a0
00034432 <AmiBlitz3.ab3@26919>   BEQ 'nocheck
0003443A <AmiBlitz3.ab3@26920>   CMP.w #1,leftsideflagmask
0003443E <AmiBlitz3.ab3@26921>   BEQ 'isptr
00034446 <AmiBlitz3.ab3@26922>   CMP.l #$100,4(a0)
0003444A <AmiBlitz3.ab3@26923>   BLE 'nocheck
00034450 <AmiBlitz3.ab3@26926>   TST.l typetocast
00034454 <AmiBlitz3.ab3@26927>   BEQ 'nocast
0003445A <AmiBlitz3.ab3@26928>   MOVE.l typetocast,a1
0003445E <AmiBlitz3.ab3@26929>   BRA 'typecheck
00034464 <AmiBlitz3.ab3@26932>   TST.l rightsidetype
00034468 <AmiBlitz3.ab3@26933>   BEQ 'nocheck
0003446E <AmiBlitz3.ab3@26934>   MOVE.l rightsidetype,a1
00034476 <AmiBlitz3.ab3@26935>   CMP.w #1,rightsideflagmask
0003447A <AmiBlitz3.ab3@26936>   BEQ 'ok
00034482 <AmiBlitz3.ab3@26937>   CMP.l #$100,4(a1)
00034486 <AmiBlitz3.ab3@26938>   BGE 'typecheck
0003448E <AmiBlitz3.ab3@26939>   CMP.l #$3,4(a1)
00034492 <AmiBlitz3.ab3@26940>   BEQ 'ok                              ;long assign is allow with this codelines
00034496 <AmiBlitz3.ab3@26941>   BRA 'error
0003449C <AmiBlitz3.ab3@26944>   TST.b typecheck
000344A0 <AmiBlitz3.ab3@26945>   BEQ 'nocheck
000344A6 <AmiBlitz3.ab3@26946>   TST.b notypecheck
000344AA <AmiBlitz3.ab3@26947>   BNE 'ok
000344AC <AmiBlitz3.ab3@26948>   CMP.l a0,a1
000344B0 <AmiBlitz3.ab3@26949>   BEQ 'ok
000344B4 <AmiBlitz3.ab3@26951>   MOVE.l 4(a1),a1                   ; load the address of 1. type.
000344B8 <AmiBlitz3.ab3@26952>   CMP.l $a(a1),a0                   ; check if the bigger type contain in first place same type as the function need
000344BC <AmiBlitz3.ab3@26953>   BEQ 'ok
000344C2 <AmiBlitz3.ab3@26956>  JMP   error_convert_types     ;for syntax 4  = typecheck
000344C8 <AmiBlitz3.ab3@26960>    CLR.l typetocast
000344CC <AmiBlitz3.ab3@26961>    MOVEM.l (a7)+, a0/a1
000344D2 <AmiBlitz3.ab3@26963>   MOVE.l (A7)+,lastoffset_org
000344D8 <AmiBlitz3.ab3@26964>   MOVE.w commode,D1
000344DC <AmiBlitz3.ab3@26965>    BNE.w 'conti
000344E0 <AmiBlitz3.ab3@26966>    BSR.w pushput
000344E6 <AmiBlitz3.ab3@26969>   MOVE.w (A7)+,varmode
000344EA <AmiBlitz3.ab3@26970>   MOVEM.w (A7)+,D2-D3
000344EE <AmiBlitz3.ab3@26975>   MOVE.w #$2B40,D1
000344F4 <AmiBlitz3.ab3@26976>   MOVE.w varmode,D4
000344F8 <AmiBlitz3.ab3@26977>    BEQ.w 'skip1
000344FC <AmiBlitz3.ab3@26978>   BCLR #$9,D1
00034500 <AmiBlitz3.ab3@26981>   BTST #$F,D2
00034504 <AmiBlitz3.ab3@26982>    BEQ.w 'code
0003450A <AmiBlitz3.ab3@26985>    TST.b stackcorrect
0003450E <AmiBlitz3.ab3@26986>    BNE 'st1
00034514 <AmiBlitz3.ab3@26988>   MOVE.w commode,D1
00034518 <AmiBlitz3.ab3@26989>    BEQ.w 'skipc1
0003451E <AmiBlitz3.ab3@26994>   MOVE.w pulla2,D1
00034524 <AmiBlitz3.ab3@26995>    JSR writeword
00034528 <AmiBlitz3.ab3@26998>   MOVE.w #$2480,D1               ;move.l d0,(a2)
0003452C <AmiBlitz3.ab3@27001>    MOVEM.l a0/d0,-(a7)
00034532 <AmiBlitz3.ab3@27002>    MOVEA.l lastoffset_org,A0
00034534 <AmiBlitz3.ab3@27003>    MOVE.l A0,D0
00034538 <AmiBlitz3.ab3@27004>    BEQ.w 'skipa
0003453A <AmiBlitz3.ab3@27005>    MOVEA.l D0,A0
00034542 <AmiBlitz3.ab3@27006>    MOVE.l $A(A0),currtype
00034546 <AmiBlitz3.ab3@27009>   MOVEM.l (a7)+,a0/d0
0003454A <AmiBlitz3.ab3@27011>   CMP.w #$2C,D0                ; ','
0003454E <AmiBlitz3.ab3@27012>    BNE.w 'code
00034552 <AmiBlitz3.ab3@27014>     MOVE.w #$24C0,D1           ;move.l d0,(a2)+
00034556 <AmiBlitz3.ab3@27015>    BSR.w 'code                                         ;write store
0003455C <AmiBlitz3.ab3@27018>    MOVE.l lastoffset_org,D0
00034564 <AmiBlitz3.ab3@27024>   MOVE.w #$FFFF,commode    ; -1
0003456A <AmiBlitz3.ab3@27025>   CLR.w varcodelen
00034572 <AmiBlitz3.ab3@27027>   MOVE.b #1,optiarray
00034578 <AmiBlitz3.ab3@27029>   MOVE.w pusha2,D1
0003457E <AmiBlitz3.ab3@27030>    JSR writeword
00034584 <AmiBlitz3.ab3@27032>   TST.l lastoffset_org
00034588 <AmiBlitz3.ab3@27033>   BEQ 'dimmore
0003458E <AmiBlitz3.ab3@27034>   MOVEA.l lastoffset_org,A0
00034590 <AmiBlitz3.ab3@27036>   MOVE.l (A0),D0
00034594 <AmiBlitz3.ab3@27037>    BEQ.w JUMP_comerr          ;comma past end of struct
00034596 <AmiBlitz3.ab3@27038>   MOVEA.l D0,A0
0003459C <AmiBlitz3.ab3@27039>   MOVE.l A0,lastoffset_org
000345A2 <AmiBlitz3.ab3@27040>   BTST #$1,$7(A0)
000345A6 <AmiBlitz3.ab3@27041>    BNE.w JUMP_nocomerr        ;can't use comma on multiple entries
000345AA <AmiBlitz3.ab3@27042>   MOVEA.l $A(A0),A1
000345AE <AmiBlitz3.ab3@27043>   MOVE.l $4(A1),D2
000345B4 <AmiBlitz3.ab3@27047>   BTST #$0,$7(A0)
000345B8 <AmiBlitz3.ab3@27048>    BNE.w 'nextpnt             ;pointer
000345BE <AmiBlitz3.ab3@27049>   CMP.l #$100,D2
000345C2 <AmiBlitz3.ab3@27050>    BCC.l JUMP_nocomerr        ;or on structs
000345C6 <AmiBlitz3.ab3@27051>  BRA.w 'docom                                     ; do do type\x= 10,20,30....
000345CC <AmiBlitz3.ab3@27055>         CLR.b optiarray
000345D0 <AmiBlitz3.ab3@27056>         CMP.w #"@@",(a5)
000345D4 <AmiBlitz3.ab3@27057>         BEQ 'n1
000345D8 <AmiBlitz3.ab3@27058>  BRA 'd1
000345DE <AmiBlitz3.ab3@27061>   JSR nextline
000345E0 <AmiBlitz3.ab3@27062>         MOVE.l a5,-(a7)
000345E2 <AmiBlitz3.ab3@27065>   MOVE.b (a5)+,d0
000345E6 <AmiBlitz3.ab3@27066>         CMP.b #$20,d0
000345EA <AmiBlitz3.ab3@27067>         BEQ 'l6
000345EC <AmiBlitz3.ab3@27068>         MOVE.l (a7)+,a5
000345F0 <AmiBlitz3.ab3@27069>         CMP.b #";",d0
000345F4 <AmiBlitz3.ab3@27070>         BEQ 'n1
000345FA <AmiBlitz3.ab3@27073>         TST.w debugmode
000345FE <AmiBlitz3.ab3@27074>         BEQ 'nextcom
00034600 <AmiBlitz3.ab3@27075>         MOVE.l a0,-(a7)
00034606 <AmiBlitz3.ab3@27076>         MOVE.l pushat,a0
0003460C <AmiBlitz3.ab3@27077>         CMP.l #0,a0
00034610 <AmiBlitz3.ab3@27078>         BNE 'o1
00034614 <AmiBlitz3.ab3@27079>  BRA 'skipb
0003461C <AmiBlitz3.ab3@27082>         ADD.l #1,2(a0)
00034622 <AmiBlitz3.ab3@27085>   CLR.w commode
0003462A <AmiBlitz3.ab3@27086>         MOVE.b #1,stackcorrect
0003462C <AmiBlitz3.ab3@27087>         MOVE.l (a7)+,a0
00034632 <AmiBlitz3.ab3@27088>  JMP 'nextcom
00034638 <AmiBlitz3.ab3@27092>   CMP.l #$100,D2
0003463C <AmiBlitz3.ab3@27093>    BCS.w 'nextpnt2
0003463E <AmiBlitz3.ab3@27094>   MOVEQ.l #$00,D2
00034642 <AmiBlitz3.ab3@27097>   BSET #$E,D2
00034646 <AmiBlitz3.ab3@27100>   BSET #$F,D2
0003464A <AmiBlitz3.ab3@27101>  BRA.w 'nextcom
00034650 <AmiBlitz3.ab3@27105>    MOVE.l destpointer,a4                   ;
00034658 <AmiBlitz3.ab3@27106>    MOVE.l #$f22a6400,-4(a4)                ;
0003465E <AmiBlitz3.ab3@27107>    MOVE.w arrayoffset,d1                   ;
00034664 <AmiBlitz3.ab3@27108>  JMP writeword                             ;
0003466A <AmiBlitz3.ab3@27113>    TST.b fpu
0003466E <AmiBlitz3.ab3@27114>    BEQ 'nofloat
00034672 <AmiBlitz3.ab3@27115>    CMP.b #5,d2
00034676 <AmiBlitz3.ab3@27116>    BNE 'nofloat
0003467C <AmiBlitz3.ab3@27117>    CLR.w fp0var
00034682 <AmiBlitz3.ab3@27118>    LEA regtable,a4
00034684 <AmiBlitz3.ab3@27119>    TST.l (a4)
00034688 <AmiBlitz3.ab3@27120>    BEQ 'noreg
0003468C <AmiBlitz3.ab3@27121>    BTST #15,d2                                             ;regvars
00034690 <AmiBlitz3.ab3@27122>    BNE 'noreg
00034694 <AmiBlitz3.ab3@27123>    CMP.w 0+4(a4),d3
00034698 <AmiBlitz3.ab3@27124>    BNE 'doreg1
0003469E <AmiBlitz3.ab3@27125>    MOVE.l #$f2000380,d1
000346A4 <AmiBlitz3.ab3@27126>    MOVE.w regnum,d0
000346A8 <AmiBlitz3.ab3@27127>    BNE 'noopt
000346AE <AmiBlitz3.ab3@27133>    MOVE.l destpointer,a4
000346B6 <AmiBlitz3.ab3@27134>    CMP.l #$f2001c80,-8(a4)
000346BA <AmiBlitz3.ab3@27135>    BNE 'noopt
000346C2 <AmiBlitz3.ab3@27136>    CMP.l #$f2000422,-4(a4)
000346C6 <AmiBlitz3.ab3@27137>    BNE 'noopt
000346CC <AmiBlitz3.ab3@27138>    MOVE.l #$f20003a2,d1
000346D6 <AmiBlitz3.ab3@27139>    SUB.l #8,destpointer
000346D8 <AmiBlitz3.ab3@27142>    ASL.w #7,d0
000346DA <AmiBlitz3.ab3@27143>    OR.w d0,d1
000346E0 <AmiBlitz3.ab3@27144>    JSR writelong
000346E2 <AmiBlitz3.ab3@27145>  RTS
000346E6 <AmiBlitz3.ab3@27148>   CMP.w 8+4(a4),d3
000346EA <AmiBlitz3.ab3@27149>    BNE 'doreg2
000346F0 <AmiBlitz3.ab3@27150>    MOVE.l #$f2000300,d1
000346F6 <AmiBlitz3.ab3@27151>    MOVE.w regnum,d0
000346F8 <AmiBlitz3.ab3@27152>    ASL.w #7,d0
000346FA <AmiBlitz3.ab3@27153>    OR.w d0,d1
00034700 <AmiBlitz3.ab3@27154>    JSR writelong
00034702 <AmiBlitz3.ab3@27155>  RTS
00034706 <AmiBlitz3.ab3@27158>   CMP.w 16+4(a4),d3
0003470A <AmiBlitz3.ab3@27159>    BNE 'doreg3
00034710 <AmiBlitz3.ab3@27160>    MOVE.l #$f2000280,d1
00034716 <AmiBlitz3.ab3@27161>    MOVE.w regnum,d0
00034718 <AmiBlitz3.ab3@27162>    ASL.w #7,d0
0003471A <AmiBlitz3.ab3@27163>    OR.w d0,d1
00034720 <AmiBlitz3.ab3@27164>    JSR  writelong
00034722 <AmiBlitz3.ab3@27165>  RTS
00034726 <AmiBlitz3.ab3@27168>   CMP.w 24+4(a4),d3
0003472A <AmiBlitz3.ab3@27169>    BNE 'doreg4
00034730 <AmiBlitz3.ab3@27170>    MOVE.l #$f2000200,d1
00034736 <AmiBlitz3.ab3@27171>    MOVE.w regnum,d0
00034738 <AmiBlitz3.ab3@27172>    ASL.w #7,d0
0003473A <AmiBlitz3.ab3@27173>    OR.w d0,d1
00034740 <AmiBlitz3.ab3@27174>    JSR writelong
00034742 <AmiBlitz3.ab3@27175>  RTS
00034746 <AmiBlitz3.ab3@27178>   CMP.w 32+4(a4),d3
0003474A <AmiBlitz3.ab3@27179>    BNE 'noreg
00034750 <AmiBlitz3.ab3@27180>    MOVE.l #$f2000180,d1
00034756 <AmiBlitz3.ab3@27181>    MOVE.w regnum,d0
00034758 <AmiBlitz3.ab3@27182>    ASL.w #7,d0
0003475A <AmiBlitz3.ab3@27183>    OR.w d0,d1
00034760 <AmiBlitz3.ab3@27184>    JSR writelong
00034762 <AmiBlitz3.ab3@27185>  RTS
00034768 <AmiBlitz3.ab3@27188>    TST.w regnum
0003476C <AmiBlitz3.ab3@27189>    BNE 'nofp0
00034772 <AmiBlitz3.ab3@27190>    MOVE.l destpointer ,a4
0003477A <AmiBlitz3.ab3@27191>    CMP.l #$f2304400,-6(a4)
0003477E <AmiBlitz3.ab3@27192>    BNE 'do5
00034784 <AmiBlitz3.ab3@27193>    CMP.w #$1990,-2(a4)
00034788 <AmiBlitz3.ab3@27194>    BNE 'do5
0003478C <AmiBlitz3.ab3@27195>    BTST #15,d2                                             ;types ?
00034790 <AmiBlitz3.ab3@27196>    BNE 'do5
00034796 <AmiBlitz3.ab3@27197>   MOVE.l #$2b701990,d1                                     ;var
0003479C <AmiBlitz3.ab3@27198>   TST.w varmode
000347A0 <AmiBlitz3.ab3@27199>   BEQ 'glob1
000347A4 <AmiBlitz3.ab3@27200>   BCLR #25,d1
000347A8 <AmiBlitz3.ab3@27203>   MOVE.l d1,-6(a4)
000347AC <AmiBlitz3.ab3@27204>   MOVE.w d3,-2(a4)
000347B2 <AmiBlitz3.ab3@27205>   CLR.w fp0var
000347BA <AmiBlitz3.ab3@27206>   MOVE.w #$ffff,fp0mode
000347BC <AmiBlitz3.ab3@27207>  RTS
000347C4 <AmiBlitz3.ab3@27210>    CMP.l #$f22d4400,-6(a4)                                 ;fmove.s (a5),fp0
000347C8 <AmiBlitz3.ab3@27211>    BNE 'do3
000347D2 <AmiBlitz3.ab3@27212>    CMP.l #newtype_double,currtype
000347D6 <AmiBlitz3.ab3@27213>    BEQ 'do4
000347DA <AmiBlitz3.ab3@27216>   MOVE.w #$2b6d,d1
000347E0 <AmiBlitz3.ab3@27217>    TST.w varmode
000347E4 <AmiBlitz3.ab3@27218>    BEQ 'g2
000347E8 <AmiBlitz3.ab3@27219>     BCLR #9,d1
000347EC <AmiBlitz3.ab3@27222>     CMP.w #$2b6d,d1
000347F0 <AmiBlitz3.ab3@27223>     BNE 'd1a
000347F4 <AmiBlitz3.ab3@27224>     CMP.w -2(a4),d3
000347F8 <AmiBlitz3.ab3@27225>     BNE 'd1a
000347FE <AmiBlitz3.ab3@27226>     SUBQ.l #6,destpointer
00034802 <AmiBlitz3.ab3@27227>  BRA 'd12
00034806 <AmiBlitz3.ab3@27230>     MOVE.w d1,-6(a4)                                       ;fmove.s to move.l mem,mem
0003480C <AmiBlitz3.ab3@27231>     MOVE.w -2(a4),-4(a4)
00034810 <AmiBlitz3.ab3@27232>     MOVE.w d3,-2(a4)
00034816 <AmiBlitz3.ab3@27235>   CLR.w fp0var
0003481E <AmiBlitz3.ab3@27236>     MOVE.w #$ffff,fp0mode
00034820 <AmiBlitz3.ab3@27237>  RTS
00034828 <AmiBlitz3.ab3@27240>   CMP.l #$f22c4400,-6(a4)                                  ;fmove.s (a4)
0003482C <AmiBlitz3.ab3@27241>    BNE 'do4
00034830 <AmiBlitz3.ab3@27242>    MOVE.w #$2b6c,d1
00034836 <AmiBlitz3.ab3@27243>       TST.w varmode
0003483A <AmiBlitz3.ab3@27244>    BEQ 'g3a
0003483E <AmiBlitz3.ab3@27245>    BCLR #9,d1
00034842 <AmiBlitz3.ab3@27248>   MOVE.w d1,-6(a4)
00034848 <AmiBlitz3.ab3@27249>     MOVE.w -2(a4),-4(a4)
0003484C <AmiBlitz3.ab3@27250>     MOVE.w d3,-2(a4)
00034852 <AmiBlitz3.ab3@27251>     CLR.w fp0var
0003485A <AmiBlitz3.ab3@27252>     MOVE.w #$ffff,fp0mode
0003485C <AmiBlitz3.ab3@27253>  RTS
00034862 <AmiBlitz3.ab3@27256>   MOVE.w d3,fp0var
0003486C <AmiBlitz3.ab3@27257>    MOVE.w varmode,fp0mode
0003486E <AmiBlitz3.ab3@27258>    ADDQ.l #6,a4
00034874 <AmiBlitz3.ab3@27259>    MOVE.l a4,fp0addr
0003487E <AmiBlitz3.ab3@27260>    MOVE.l firstiff,fp0iff
00034882 <AmiBlitz3.ab3@27263>   MOVEM.l d0/d4,-(a7)
00034884 <AmiBlitz3.ab3@27264>    MOVEQ #0,d0
0003488A <AmiBlitz3.ab3@27265>     MOVE.w regnum,d0
0003488C <AmiBlitz3.ab3@27266>    ASL.w #7,d0                                             ;fpu store var
00034890 <AmiBlitz3.ab3@27267>   BTST #15,d2
00034894 <AmiBlitz3.ab3@27268>    BEQ 'var
00034896 <AmiBlitz3.ab3@27269>    MOVE.w d1,d4
0003489A <AmiBlitz3.ab3@27270>    CMP.w #$24c0,d4
0003489E <AmiBlitz3.ab3@27271>    BNE 'nopl
000348A4 <AmiBlitz3.ab3@27272>    MOVE.l #$f21a6400,d1
000348A6 <AmiBlitz3.ab3@27273>    MOVEQ #0,d3
000348AA <AmiBlitz3.ab3@27274>  BRA 'glob
000348B0 <AmiBlitz3.ab3@27278>   MOVE.l #$f2126400,d1
000348B2 <AmiBlitz3.ab3@27279>    TST.w d3                                                ;offset =0
000348B6 <AmiBlitz3.ab3@27280>    BNE 'offset
000348BC <AmiBlitz3.ab3@27281>    MOVE.l #$f2126400,d1
000348BE <AmiBlitz3.ab3@27289>    MOVEQ #0,d3
000348C2 <AmiBlitz3.ab3@27290>  BRA 'glob
000348C8 <AmiBlitz3.ab3@27293>   MOVE.l #$f22d6400,d1                                     ;var
000348CE <AmiBlitz3.ab3@27294>   TST.w varmode
000348D2 <AmiBlitz3.ab3@27295>   BEQ 'glob
000348D6 <AmiBlitz3.ab3@27296>   BCLR #16,d1
000348D8 <AmiBlitz3.ab3@27297>  'glob OR.l d0,d1
000348E2 <AmiBlitz3.ab3@27300>   CMP.l #newtype_double,currtype
000348E6 <AmiBlitz3.ab3@27301>   BNE 'dbl1
000348EC <AmiBlitz3.ab3@27302>   OR.l #$00001000,d1
000348F2 <AmiBlitz3.ab3@27305>   JSR writelong
000348F8 <AmiBlitz3.ab3@27306>   CLR.l currtype
000348FC <AmiBlitz3.ab3@27307>   MOVEM.l (a7)+,d0/d4
000348FE <AmiBlitz3.ab3@27308>   MOVE.l d3,d1
00034902 <AmiBlitz3.ab3@27309>   BEQ 'nooffs
00034908 <AmiBlitz3.ab3@27310>  JMP writeword
0003490A <AmiBlitz3.ab3@27313>  RTS
00034910 <AmiBlitz3.ab3@27327>     TST.b fast                                             ;write lea->xx(a2)
00034914 <AmiBlitz3.ab3@27328>    BEQ 'la10
0003491A <AmiBlitz3.ab3@27332>    TST.b quickadd
00034920 <AmiBlitz3.ab3@27334>      CLR.b quickadd
00034924 <AmiBlitz3.ab3@27335>    CMP.w #$2480,d1
00034928 <AmiBlitz3.ab3@27336>    BNE 'la10
0003492E <AmiBlitz3.ab3@27337>    TST.b optiarray
00034932 <AmiBlitz3.ab3@27338>    BNE 'la10
00034938 <AmiBlitz3.ab3@27339>    MOVE.l destpointer,a4
0003493E <AmiBlitz3.ab3@27340>    CMP.w #$45ea,-4(a4)
00034942 <AmiBlitz3.ab3@27341>    BNE 'la10
0003494A <AmiBlitz3.ab3@27342>    CMP.w #8,pushclen
0003494E <AmiBlitz3.ab3@27343>    BEQ 'la100
00034956 <AmiBlitz3.ab3@27344>    CMP.w #6,pushclen
0003495A <AmiBlitz3.ab3@27345>    BNE 'la10
0003495E <AmiBlitz3.ab3@27346>    CMP.b #3,d2
00034962 <AmiBlitz3.ab3@27347>    BCS 'la110
00034968 <AmiBlitz3.ab3@27349>    MOVE.w #$2540,-2(a4)
0003496E <AmiBlitz3.ab3@27350>    MOVE.w arrayoffset,d1
00034974 <AmiBlitz3.ab3@27351>  JMP writeword
0003497A <AmiBlitz3.ab3@27354>    CLR.b quickadd
0003497C <AmiBlitz3.ab3@27355>  RTS
00034980 <AmiBlitz3.ab3@27358>    CMP.b #2,d2
00034984 <AmiBlitz3.ab3@27359>    BNE 'la120
0003498A <AmiBlitz3.ab3@27360>     MOVE.w #$3540,-2(a4)
00034990 <AmiBlitz3.ab3@27361>    MOVE.w arrayoffset,d1
00034996 <AmiBlitz3.ab3@27362>  JMP writeword
0003499A <AmiBlitz3.ab3@27365>   CMP.b #1,d2
0003499E <AmiBlitz3.ab3@27366>    BNE.s 'la10
000349A4 <AmiBlitz3.ab3@27367>     MOVE.w #$1540,-2(a4)
000349AA <AmiBlitz3.ab3@27368>    MOVE.w arrayoffset,d1
000349B0 <AmiBlitz3.ab3@27369>  JMP writeword
000349B4 <AmiBlitz3.ab3@27372>    CMP.b #3,d2
000349B8 <AmiBlitz3.ab3@27373>    BCS 'la11
000349BE <AmiBlitz3.ab3@27374>    MOVE.w #$2540,-4(a4)
000349C0 <AmiBlitz3.ab3@27375>  RTS
000349C4 <AmiBlitz3.ab3@27378>    CMP.b #2,d2
000349C8 <AmiBlitz3.ab3@27379>    BNE 'la12
000349CE <AmiBlitz3.ab3@27380>     MOVE.w #$3540,-4(a4)
000349D0 <AmiBlitz3.ab3@27381>  RTS
000349D4 <AmiBlitz3.ab3@27384>    CMP.b #1,d2
000349D8 <AmiBlitz3.ab3@27385>    BNE.s 'la10
000349DE <AmiBlitz3.ab3@27386>     MOVE.w #$1540,-4(a4)
000349E0 <AmiBlitz3.ab3@27387>  RTS
000349E6 <AmiBlitz3.ab3@27390>   CLR.b optiarray
000349EA <AmiBlitz3.ab3@27392>    CMP.b #$1,D2
000349EE <AmiBlitz3.ab3@27393>    BEQ.w 'byte
000349F2 <AmiBlitz3.ab3@27394>    BSR.w varalign
000349F6 <AmiBlitz3.ab3@27395>    CMP.b #$3,D2
000349FA <AmiBlitz3.ab3@27396>    BCC.w 'writevarlong
00034A00 <AmiBlitz3.ab3@27398>    TST.b fast                                              ;optiimmi
00034A04 <AmiBlitz3.ab3@27399>    BEQ 'l10bc
00034A0A <AmiBlitz3.ab3@27404>    MOVE.l destpointer,a0
00034A10 <AmiBlitz3.ab3@27405>    SUB.l imm_addr,a0
00034A16 <AmiBlitz3.ab3@27406>    CMP.l #4,a0
00034A1A <AmiBlitz3.ab3@27407>    BNE 'l10c
00034A20 <AmiBlitz3.ab3@27408>    CLR.l imm_addr
00034A26 <AmiBlitz3.ab3@27409>    MOVE.l destpointer,a4
00034A2A <AmiBlitz3.ab3@27410>    OR.w #$107c,d1
00034A2E <AmiBlitz3.ab3@27411>    MOVE.w d1,-4(a4)
00034A30 <AmiBlitz3.ab3@27412>     MOVE.w D3,D1
00034A36 <AmiBlitz3.ab3@27413>  JMP writeword
00034A3C <AmiBlitz3.ab3@27416>   MOVE.l destpointer,a0
00034A42 <AmiBlitz3.ab3@27417>   SUB.l load_var_addr,a0
00034A48 <AmiBlitz3.ab3@27418>   CMP.l #4,a0
00034A4C <AmiBlitz3.ab3@27419>   BNE 'l10bc
00034A52 <AmiBlitz3.ab3@27420>   CMP.w #$302d,-4(a4)                                      ;check 68k opcode
00034A56 <AmiBlitz3.ab3@27421>   BNE 'l10bc
00034A5C <AmiBlitz3.ab3@27423>   CLR.l load_var_addr
00034A62 <AmiBlitz3.ab3@27424>   MOVE.l destpointer,a4
00034A66 <AmiBlitz3.ab3@27425>   OR.w #$102d,d1
00034A6A <AmiBlitz3.ab3@27426>   MOVE.w d1,-4(a4)
00034A6C <AmiBlitz3.ab3@27427>   MOVE.w d3,d1
00034A72 <AmiBlitz3.ab3@27428>  JMP writeword
00034A76 <AmiBlitz3.ab3@27432>   ORI.w #$1000,D1                                          ;word
00034A7A <AmiBlitz3.ab3@27433>  BRA.w 'writestorevar
00034A80 <AmiBlitz3.ab3@27438>    TST.b fast                                              ;optiimmi
00034A84 <AmiBlitz3.ab3@27439>    BEQ 'l10bb
00034A8A <AmiBlitz3.ab3@27444>    MOVE.l destpointer,a0
00034A90 <AmiBlitz3.ab3@27445>    SUB.l imm_addr,a0
00034A96 <AmiBlitz3.ab3@27446>    CMP.l #4,a0
00034A9A <AmiBlitz3.ab3@27447>    BNE 'l10d
00034AA0 <AmiBlitz3.ab3@27448>    CLR.l imm_addr
00034AA6 <AmiBlitz3.ab3@27449>    MOVE.l destpointer,a4
00034AAA <AmiBlitz3.ab3@27450>    OR.w #$7c,d1
00034AAE <AmiBlitz3.ab3@27451>    EORI #$3000,d1
00034AB2 <AmiBlitz3.ab3@27452>    MOVE.w d1,-4(a4)
00034AB4 <AmiBlitz3.ab3@27453>       MOVE.w D3,D1
00034ABA <AmiBlitz3.ab3@27454>  JMP writeword
00034AC0 <AmiBlitz3.ab3@27457>   MOVE.l destpointer,a0
00034AC6 <AmiBlitz3.ab3@27458>   SUB.l load_var_addr,a0
00034ACC <AmiBlitz3.ab3@27459>   CMP.l #4,a0
00034AD0 <AmiBlitz3.ab3@27460>   BNE 'l10bb
00034AD6 <AmiBlitz3.ab3@27461>   CLR.l load_var_addr
00034ADC <AmiBlitz3.ab3@27462>   MOVE.l destpointer,a4
00034AE2 <AmiBlitz3.ab3@27463>    CMP.w #$1b6d,-4(a4)
00034AE6 <AmiBlitz3.ab3@27464>    BNE 'l10bb
00034AEA <AmiBlitz3.ab3@27465>    OR.w #$2d,d1
00034AEE <AmiBlitz3.ab3@27466>    EORI #$3000,d1
00034AF2 <AmiBlitz3.ab3@27467>    MOVE.w d1,-4(a4)
00034AF4 <AmiBlitz3.ab3@27468>   MOVE.w d3,d1
00034AFA <AmiBlitz3.ab3@27469>  JMP writeword
00034B00 <AmiBlitz3.ab3@27473>   ADDQ.w #1,pcodd                                          ;byte
00034B04 <AmiBlitz3.ab3@27474>   EORI.w #$3000,D1
00034B0A <AmiBlitz3.ab3@27477>   JSR writeword
00034B0E <AmiBlitz3.ab3@27478>   BTST #$7,D1
00034B12 <AmiBlitz3.ab3@27479>    BNE 'done
00034B14 <AmiBlitz3.ab3@27480>   MOVE.w D3,D1
00034B1A <AmiBlitz3.ab3@27481>  JMP writeword
00034B20 <AmiBlitz3.ab3@27484>    TST.b fast                                              ;optiimmi
00034B24 <AmiBlitz3.ab3@27485>    BEQ 'l10ba
00034B2A <AmiBlitz3.ab3@27489>    MOVE.l destpointer,a0
00034B30 <AmiBlitz3.ab3@27490>    SUB.l imm_addr,a0
00034B36 <AmiBlitz3.ab3@27491>    CMP.l #6,a0
00034B3A <AmiBlitz3.ab3@27492>    BNE 'l10e
00034B40 <AmiBlitz3.ab3@27493>    CLR.l imm_addr
00034B46 <AmiBlitz3.ab3@27494>    MOVE.l destpointer,a4
00034B4A <AmiBlitz3.ab3@27495>    OR.w #$7c,d1
00034B4E <AmiBlitz3.ab3@27496>    MOVE.w d1,-6(a4)
00034B50 <AmiBlitz3.ab3@27497>     MOVE.w D3,D1
00034B56 <AmiBlitz3.ab3@27498>  JMP writeword
00034B5C <AmiBlitz3.ab3@27501>   MOVE.l destpointer,a0
00034B62 <AmiBlitz3.ab3@27502>   SUB.l load_var_addr,a0
00034B68 <AmiBlitz3.ab3@27503>   CMP.l #4,a0
00034B6C <AmiBlitz3.ab3@27504>   BNE 'l10ba
00034B72 <AmiBlitz3.ab3@27505>   CLR.l load_var_addr
00034B78 <AmiBlitz3.ab3@27506>   MOVE.l destpointer,a4
00034B7E <AmiBlitz3.ab3@27507>   CMP.w #$245f,-2(a4)
00034B82 <AmiBlitz3.ab3@27508>   BEQ 'l10ba
00034B86 <AmiBlitz3.ab3@27509>   OR.w #$28,d1
00034B8A <AmiBlitz3.ab3@27510>   OR.w d1,-4(a4)
00034B90 <AmiBlitz3.ab3@27511>   CMP.w #$2b6d,-4(a4)
00034B94 <AmiBlitz3.ab3@27512>   BNE 'd1aa
00034B98 <AmiBlitz3.ab3@27513>   CMP.w -2(a4),d3
00034B9C <AmiBlitz3.ab3@27514>   BNE 'd1aa
00034BA2 <AmiBlitz3.ab3@27515>   SUBQ.l #4,destpointer
00034BA4 <AmiBlitz3.ab3@27516>  RTS
00034BA6 <AmiBlitz3.ab3@27519>   MOVE.w d3,d1
00034BAC <AmiBlitz3.ab3@27520>  JMP writeword
00034BB2 <AmiBlitz3.ab3@27524>   JSR writeword
00034BB6 <AmiBlitz3.ab3@27525>   BTST #$7,D1
00034BBA <AmiBlitz3.ab3@27526>    BNE.b 'done
00034BBC <AmiBlitz3.ab3@27527>   MOVE.w D3,D1
00034BC2 <AmiBlitz3.ab3@27528>  JMP writeword
00034BC4 <AmiBlitz3.ab3@27531> RTS
00034BC6 <AmiBlitz3.ab3@27535>   MOVE.w D1,-(A7)
00034BCA <AmiBlitz3.ab3@27536>   MOVE.w pcodd(PC),D1
00034BCC <AmiBlitz3.ab3@27537>   LSR.w #1,D1
00034BD0 <AmiBlitz3.ab3@27538>    BCC.b 'done
00034BD6 <AmiBlitz3.ab3@27539>   CLR.w pcodd
00034BDC <AmiBlitz3.ab3@27540>   MOVE.w add1a2,D1
00034BE2 <AmiBlitz3.ab3@27541>    JSR writeword
00034BE4 <AmiBlitz3.ab3@27544>   MOVE.w (A7)+,D1
00034BE6 <AmiBlitz3.ab3@27545> RTS
00034BE8 <AmiBlitz3.ab3@27549> add1a2:     Dc.b $52,$4A                                   ;ADDQ.W  #1,A2
00034BEA <AmiBlitz3.ab3@27552> pcodd:     Ds.w 1                                          ;add 1 to this for bytes
00034BEC <AmiBlitz3.ab3@27553> listadd:   Ds.w 1                                          ;set to 8 if it's a list
00034BEE <AmiBlitz3.ab3@27554> listsize:  Ds.w 1
00034BF4 <AmiBlitz3.ab3@27560>   ADDQ.w #1,regnum               ;get things into d1
00034BFC <AmiBlitz3.ab3@27562>   MOVE.b #1,nowdeclare
00034C02 <AmiBlitz3.ab3@27563>   CLR.b dimkeep
00034C0A <AmiBlitz3.ab3@27564>    CMP.l #"KEEP",-1(a5)
00034C0E <AmiBlitz3.ab3@27565>   BNE 'nokeep
00034C14 <AmiBlitz3.ab3@27566>   CMP.b #" ",3(a5)
00034C18 <AmiBlitz3.ab3@27567>   BNE 'nokeep
00034C1A <AmiBlitz3.ab3@27568>   ADDQ.l #3,a5
00034C1E <AmiBlitz3.ab3@27571>     CMP.b #" ",(a5)
00034C22 <AmiBlitz3.ab3@27572>     BNE '1
00034C24 <AmiBlitz3.ab3@27573>    ADDQ #1,a5
00034C28 <AmiBlitz3.ab3@27574>  BRA '2
00034C2E <AmiBlitz3.ab3@27577>   MOVE.l a5,lastsourcepos
00034C36 <AmiBlitz3.ab3@27578>   MOVE.b #1,dimkeep
00034C3A <AmiBlitz3.ab3@27587>   MOVE.w #$FF9A,D1           ; is #65434,
00034C40 <AmiBlitz3.ab3@27588>   JSR uselib                 ;arrays lib!
00034C46 <AmiBlitz3.ab3@27591>   CLR.w listadd
00034C4A <AmiBlitz3.ab3@27592>   CMP.w #-$7F4D,D0           ; was #$8000+tnum,d0
00034C4E <AmiBlitz3.ab3@27593>    BNE.w 'notlist
00034C56 <AmiBlitz3.ab3@27594>   MOVE.w #$0008,listadd      ;it's a list
00034C5A <AmiBlitz3.ab3@27595>   MOVE.w #$FFFA,D1           ; is #65530
00034C60 <AmiBlitz3.ab3@27596>    JSR uselib                ;use memlib
00034C66 <AmiBlitz3.ab3@27597>    JSR get1bytemain
00034C6C <AmiBlitz3.ab3@27600>   CLR.w nonew
00034C72 <AmiBlitz3.ab3@27601>    JSR getparameter
00034C78 <AmiBlitz3.ab3@27603>   JSR checkdoubledeclare
00034C80 <AmiBlitz3.ab3@27605>   BTST #$1,flagmask+1
00034C84 <AmiBlitz3.ab3@27606>    BEQ.w JUMP_syntaxerr
00034C8A <AmiBlitz3.ab3@27607>    JSR fetchvars
00034C90 <AmiBlitz3.ab3@27608>   MOVE.w notshared,D1      ; added,
00034C94 <AmiBlitz3.ab3@27609>    BNE.w 'added
00034C9C <AmiBlitz3.ab3@27613>   MOVE.w $8(A3),temp1
00034CA2 <AmiBlitz3.ab3@27614>   MOVE.w proceduremode,D2
00034CA6 <AmiBlitz3.ab3@27615>    BNE.w 'reloc
00034CAC <AmiBlitz3.ab3@27617>   MOVE.w globalvarpointer,-(A7)
00034CB4 <AmiBlitz3.ab3@27618>   MOVE.w $4(A3),globalvarpointer
00034CBA <AmiBlitz3.ab3@27619>   ADDQ.w #4,globalvarpointer
00034CBE <AmiBlitz3.ab3@27620>    BSR.w write_dim_code
00034CC4 <AmiBlitz3.ab3@27621>   MOVE.w (A7)+,globalvarpointer
00034CC8 <AmiBlitz3.ab3@27622>  BRA.w 'next
00034CCE <AmiBlitz3.ab3@27637>   MOVE.w globalvarpointer,-(A7)
00034CD4 <AmiBlitz3.ab3@27638>             MOVE.w proceduremode,-(a7)
00034CDA <AmiBlitz3.ab3@27639>             CLR.w proceduremode
00034CE2 <AmiBlitz3.ab3@27640>   MOVE.w $4(A3),globalvarpointer
00034CE8 <AmiBlitz3.ab3@27641>   ADDQ.w #4,globalvarpointer
00034CEC <AmiBlitz3.ab3@27642>    BSR.w write_dim_code
00034CF2 <AmiBlitz3.ab3@27643>    MOVE.w (a7)+,proceduremode
00034CF8 <AmiBlitz3.ab3@27644>   MOVE.w (A7)+,globalvarpointer
00034CFC <AmiBlitz3.ab3@27646>  BRA.w 'next
00034D04 <AmiBlitz3.ab3@27651>   MOVE.w #$FFFF,temp1                ; was -1  ;no care on # dims
00034D08 <AmiBlitz3.ab3@27652>   MOVE.w listadd(PC),D1
00034D0C <AmiBlitz3.ab3@27653>    BEQ.w 'isok
00034D14 <AmiBlitz3.ab3@27654>   MOVE.w #$4000,temp1                ;yes, we do care - must be 1
00034D1A <AmiBlitz3.ab3@27656>   BSET #$0,$6(A3)                    ;set to list type of array
00034D20 <AmiBlitz3.ab3@27660>         TST.w proceduremode
00034D24 <AmiBlitz3.ab3@27661>        BNE 'l1
00034D2A <AmiBlitz3.ab3@27662>        MOVE.w locvaroff,-(a7)
00034D2E <AmiBlitz3.ab3@27666>   BSR.w write_dim_code
00034D34 <AmiBlitz3.ab3@27668>         TST.w proceduremode
00034D38 <AmiBlitz3.ab3@27669>         BNE 'next
00034D3E <AmiBlitz3.ab3@27670>        MOVE.w (A7)+,locvaroff
00034D44 <AmiBlitz3.ab3@27674>   JSR get1bytemain
00034D48 <AmiBlitz3.ab3@27675>   CMP.w #$2C,D0                ; ","
00034D4C <AmiBlitz3.ab3@27676>    BNE.w 'done
00034D52 <AmiBlitz3.ab3@27677>    JSR get1bytemain
00034D56 <AmiBlitz3.ab3@27678>  BRA.w dodim2
00034D58 <AmiBlitz3.ab3@27681> RTS
00034D5E <AmiBlitz3.ab3@27684> JUMP_syntaxerr JMP syntaxerr
00034D64 <AmiBlitz3.ab3@27685> JUMP_redimerr JMP redimerr
00034D6C <AmiBlitz3.ab3@27689>   MOVE.w #$FFFF,nonew                                      ;#-1,nonew org source
00034D72 <AmiBlitz3.ab3@27690>   MOVE.w beginarr,D1
00034D78 <AmiBlitz3.ab3@27691>    JSR writeword
00034D7A <AmiBlitz3.ab3@27692>   MOVEQ.l #$00,D1
00034D80 <AmiBlitz3.ab3@27693>    JSR writeword
00034D82 <AmiBlitz3.ab3@27694>   MOVEQ.l #$04,D1
00034D8A <AmiBlitz3.ab3@27695>   BTST #$0,flagmask+1
00034D8E <AmiBlitz3.ab3@27696>    BNE.w 'pointer
00034D92 <AmiBlitz3.ab3@27697>   MOVE.w $8(A2),D1
00034D96 <AmiBlitz3.ab3@27700>   ADD.w listadd(PC),D1                                     ;size of one element.
00034D9C <AmiBlitz3.ab3@27701>   MOVE.w D1,listsize
00034DA2 <AmiBlitz3.ab3@27702>    JSR writeword
00034DA8 <AmiBlitz3.ab3@27703>   CLR.w temp2                                              ;# dim's got
00034DAA <AmiBlitz3.ab3@27704>   MOVE.l A3,-(A7)
00034DB0 <AmiBlitz3.ab3@27707>   ADDQ.w #1,temp2
00034DB2 <AmiBlitz3.ab3@27708>   MOVEQ.l #$03,D2                                          ;get word
00034DB8 <AmiBlitz3.ab3@27709>   MOVE.w notshared,-(a7)
00034DBE <AmiBlitz3.ab3@27710>    JSR eval
00034DC4 <AmiBlitz3.ab3@27711>   MOVE.w (a7)+,notshared
00034DCA <AmiBlitz3.ab3@27712>   TST.b debugmode
00034DCE <AmiBlitz3.ab3@27713>    BEQ.w 'norerr0
00034DD2 <AmiBlitz3.ab3@27714>   MOVE.w #$C30F,D1
00034DD6 <AmiBlitz3.ab3@27720>       MOVE.w #$5281,d1
00034DDC <AmiBlitz3.ab3@27721>       JSR writeword
00034DE2 <AmiBlitz3.ab3@27722>       MOVE.l #$4c010800,d1                                 ;dim >65536 fix
00034DE8 <AmiBlitz3.ab3@27723>       JSR writelong
00034DEE <AmiBlitz3.ab3@27724>   MOVE.w proceduremode,D2
00034DF2 <AmiBlitz3.ab3@27725>    BEQ.w 'global
00034DF8 <AmiBlitz3.ab3@27726>   SUBQ.w #4,locvaroff
00034E02 <AmiBlitz3.ab3@27727>   MOVE.w locvaroff,putarr+2
00034E06 <AmiBlitz3.ab3@27728>  BRA.w 'doit
00034E10 <AmiBlitz3.ab3@27731>   MOVE.w globalvarpointer,putarr+2
00034E16 <AmiBlitz3.ab3@27732>   ADDQ.w #4,globalvarpointer
00034E1C <AmiBlitz3.ab3@27735>   TST.b dimkeep
00034E20 <AmiBlitz3.ab3@27736>            BEQ 'doit_l1
00034E22 <AmiBlitz3.ab3@27737>       MOVEQ #0,d1
00034E28 <AmiBlitz3.ab3@27738>       MOVE.w putarr+2,d1
00034E2E <AmiBlitz3.ab3@27739>       OR.l  #$222d0000,d1
00034E34 <AmiBlitz3.ab3@27740>       MOVE.w proceduremode,D2
00034E38 <AmiBlitz3.ab3@27741>       BEQ 'doit_l2
00034E3E <AmiBlitz3.ab3@27742>       TST.w notshared
00034E42 <AmiBlitz3.ab3@27743>       BEQ 'doit_l2
00034E48 <AmiBlitz3.ab3@27744>       SUB.l #$00010000,d1
00034E4E <AmiBlitz3.ab3@27747>   JSR writelong
00034E54 <AmiBlitz3.ab3@27750>   MOVE.l putarr,D1
00034E5A <AmiBlitz3.ab3@27751>       TST.w notshared
00034E5E <AmiBlitz3.ab3@27752>       BNE 'doit_l1a
00034E64 <AmiBlitz3.ab3@27753>       JSR writelong
00034E68 <AmiBlitz3.ab3@27754>  BRA 'doit_l4
00034E6E <AmiBlitz3.ab3@27757>   JSR pokela5d
00034E72 <AmiBlitz3.ab3@27760>   CMP.w #$2C,D0
00034E76 <AmiBlitz3.ab3@27761>    BEQ.w 'loop
00034E7A <AmiBlitz3.ab3@27762>   CMP.w #$29,D0
00034E7E <AmiBlitz3.ab3@27763>    BNE.w JUMP_syntaxerr
00034E80 <AmiBlitz3.ab3@27764>   MOVEA.l (A7)+,A3
00034E86 <AmiBlitz3.ab3@27765>   MOVE.w temp1,D1
00034E8A <AmiBlitz3.ab3@27766>    BMI.w 'nocare
00034E8E <AmiBlitz3.ab3@27770>   BTST #$E,D1
00034E92 <AmiBlitz3.ab3@27771>    BEQ.w 'notl
00034E9A <AmiBlitz3.ab3@27772>   CMPI.w #$1,temp2
00034E9E <AmiBlitz3.ab3@27773>    BNE.w JUMP_redimerr
00034EA2 <AmiBlitz3.ab3@27774>  BRA.w 'nocare
00034EA8 <AmiBlitz3.ab3@27777>   CMP.w temp2,D1
00034EAC <AmiBlitz3.ab3@27778>    BNE.w JUMP_redimerr                                     ;range too long
00034EB2 <AmiBlitz3.ab3@27781>   LEA globalvarpointer,A0
00034EB8 <AmiBlitz3.ab3@27782>   MOVE.w proceduremode,D1
00034EBC <AmiBlitz3.ab3@27783>   BEQ.w 'gskip
00034EC2 <AmiBlitz3.ab3@27784>   LEA locvaroff,A0
00034EC8 <AmiBlitz3.ab3@27787>   MOVE.W  extraword,(A0)
00034ECC <AmiBlitz3.ab3@27788>   BRA.W   'care
00034ED4 <AmiBlitz3.ab3@27791>   MOVE.w temp2,$8(A3)                                      ;set # dim's
00034EDA <AmiBlitz3.ab3@27794>   LEA doarr,A0
00034EE0 <AmiBlitz3.ab3@27795>   MOVE.w $4(A3),$2(A0)
00034EE8 <AmiBlitz3.ab3@27796>   MOVE.w putarr+2,$6(A0)
00034EEA <AmiBlitz3.ab3@27797>   MOVE.l (A0)+,D1
00034EF0 <AmiBlitz3.ab3@27798>    JSR writelong
00034EF2 <AmiBlitz3.ab3@27799>   MOVE.l (A0),D1
00034EF8 <AmiBlitz3.ab3@27800>    JSR writelong
00034EFE <AmiBlitz3.ab3@27801>    TST.b dimkeep
00034F02 <AmiBlitz3.ab3@27802>   BNE 'care_l3
00034F06 <AmiBlitz3.ab3@27805>   MOVE.w #$C400,D1
00034F0A <AmiBlitz3.ab3@27806>  BRA 'care_l2
00034F0E <AmiBlitz3.ab3@27809>   MOVE.w #$C405,d1
00034F14 <AmiBlitz3.ab3@27812>   MOVE.w proceduremode,D2
00034F18 <AmiBlitz3.ab3@27813>    BEQ.w 'isg
00034F1E <AmiBlitz3.ab3@27814>    TST.w notshared
00034F22 <AmiBlitz3.ab3@27815>    BEQ 'isg
00034F24 <AmiBlitz3.ab3@27816>   ADDQ.w #1,D1
00034F28 <AmiBlitz3.ab3@27819>   MOVE.w listadd(PC),D2
00034F2C <AmiBlitz3.ab3@27820>    BEQ.w 'isrg
00034F2E <AmiBlitz3.ab3@27821>   MOVE.w D1,-(A7)
00034F32 <AmiBlitz3.ab3@27822>   MOVE.w setles(PC),D1
00034F38 <AmiBlitz3.ab3@27823>    JSR writeword
00034F3C <AmiBlitz3.ab3@27824>   MOVE.w listsize(PC),D1
00034F42 <AmiBlitz3.ab3@27825>    JSR writeword
00034F44 <AmiBlitz3.ab3@27826>   MOVE.w (A7)+,D1
00034F46 <AmiBlitz3.ab3@27827>   ADDQ.w #3,D1
00034F4A <AmiBlitz3.ab3@27830> BRA.w Atokejsr
00034F4E <AmiBlitz3.ab3@27833> setles:   Dc.b $38,$3C,$00,$00                             ;MOVE.W  #$0000,D4
00034F54 <AmiBlitz3.ab3@27842>     MOVE.l #$f23c4400,d1
00034F5A <AmiBlitz3.ab3@27844>   MOVE.w regnum,d0
00034F5C <AmiBlitz3.ab3@27845>   ASL.w #7,d0
00034F5E <AmiBlitz3.ab3@27846>   OR.w d0,d1
00034F64 <AmiBlitz3.ab3@27847>   JSR writelong
00034F6A <AmiBlitz3.ab3@27853>     MOVE.l #$40490fd9,d1
00034F70 <AmiBlitz3.ab3@27855>   JSR writelong
00034F76 <AmiBlitz3.ab3@27856> JMP get1bytemain
00034F7A <AmiBlitz3.ab3@27863> vbr:                Ds.l 1
00034F7C <AmiBlitz3.ab3@27864> cfetchmode:         Ds.w 1                               ;1=fetching a constant
00034F82 <AmiBlitz3.ab3@27866> constlibs           Dc.w $FDA7,$FCDF,$FD43               ;64935,64735,64835  org source
00034F86 <AmiBlitz3.ab3@27870> constpcat:          Ds.l 1
00034F8A <AmiBlitz3.ab3@27871> constlibat:         Ds.l 1
00034F8E <AmiBlitz3.ab3@27872> constmaxpc:         Dc.l $400
00034F92 <AmiBlitz3.ab3@27874> stacksize:          Dc.l #DEFAULT_STACKSIZE              ;stackfuck org source
00034F96 <AmiBlitz3.ab3@27875> currentlabeladdr:   Dc.l labelbase                       ;lastrescon org source
00034F9A <AmiBlitz3.ab3@27876> currentmacroaddr:   Dc.l macrobase                       ;lastresmac org source
00034F9E <AmiBlitz3.ab3@27877> lastrestype:        Dc.l newtype_string
00034FA0 <AmiBlitz3.ab3@27878> rescnt:             Ds.w 1                               ;# resident
00034FA2 <AmiBlitz3.ab3@27879> state_of_residents: Ds.w 1                               ;reschg org source ;flag for if res's have changed
00034FA6 <AmiBlitz3.ab3@27880> resat:              Dc.l residents_table                 ;??looks like not used anymore??
00034FA8 <AmiBlitz3.ab3@27881> linedone:           Ds.w 1
00034FBE <AmiBlitz3.ab3@27882> directbuffer:       Ds.w 11                              ;dirpcat  dc.w 0 org source
00034FC2 <AmiBlitz3.ab3@27891>   Dc.l 0                                        ; bytetobyte
00034FC6 <AmiBlitz3.ab3@27892>   Dc.l convert_byte_to_word                     ; bytetoword
00034FCA <AmiBlitz3.ab3@27893>   Dc.l convert_byte_to_long                     ; bytetolong
00034FCE <AmiBlitz3.ab3@27894>   Dc.l convert_byte_to_quick                    ; bytetoquick
00034FD2 <AmiBlitz3.ab3@27895>   Dc.l convert_byte_to_float                    ; bytetofloat
00034FD6 <AmiBlitz3.ab3@27896>   Dc.l convert_byte_to_long                     ; bytetolong
00034FDA <AmiBlitz3.ab3@27897>   Dc.l error_convert_types                      ; noconerr
00034FDE <AmiBlitz3.ab3@27900>   Dc.l convert_word_to_byte                     ; wordtobyte
00034FE2 <AmiBlitz3.ab3@27901>   Dc.l 0                                        ; wordtoword
00034FE6 <AmiBlitz3.ab3@27902>   Dc.l convert_word_to_long                     ; wordtolong
00034FEA <AmiBlitz3.ab3@27903>   Dc.l convert_word_to_quick                    ; wordtoquick
00034FEE <AmiBlitz3.ab3@27904>   Dc.l convert_word_to_float                    ; wordtofloat
00034FF2 <AmiBlitz3.ab3@27905>   Dc.l convert_word_to_long                     ; wordtolong
00034FF6 <AmiBlitz3.ab3@27906>   Dc.l error_convert_types                      ; noconerr
00034FFA <AmiBlitz3.ab3@27909>   Dc.l convert_long_to_byte                     ; longtobyte
00034FFE <AmiBlitz3.ab3@27910>   Dc.l convert_long_to_word                     ; longtoword
00035002 <AmiBlitz3.ab3@27911>   Dc.l 0                                        ; longtolong
00035006 <AmiBlitz3.ab3@27912>   Dc.l convert_long_to_quick                    ; longtoquick
0003500A <AmiBlitz3.ab3@27913>   Dc.l convert_long_to_float                    ; longtofloat
0003500E <AmiBlitz3.ab3@27914>   Dc.l 0                                        ; longtolong
00035012 <AmiBlitz3.ab3@27915>   Dc.l error_convert_types                      ; noconerr
00035016 <AmiBlitz3.ab3@27918>   Dc.l convert_quick_to_byte                    ; quicktobyte
0003501A <AmiBlitz3.ab3@27919>   Dc.l convert_quick_to_word                    ; quicktoword
0003501E <AmiBlitz3.ab3@27920>   Dc.l convert_quick_to_long                    ; quicktolong
00035022 <AmiBlitz3.ab3@27921>   Dc.l 0                                        ; quicktoquick
00035026 <AmiBlitz3.ab3@27922>   Dc.l convert_quick_to_float                   ; quicktofloat
0003502A <AmiBlitz3.ab3@27923>   Dc.l convert_quick_to_long                    ; quicktolong
0003502E <AmiBlitz3.ab3@27924>   Dc.l error_convert_types                      ; noconerr
00035032 <AmiBlitz3.ab3@27927>   Dc.l convert_float_to_byte                    ; floattobyte
00035036 <AmiBlitz3.ab3@27928>   Dc.l convert_float_to_word                    ; floattoword
0003503A <AmiBlitz3.ab3@27929>   Dc.l convert_float_to_long                    ; floattolong
0003503E <AmiBlitz3.ab3@27930>   Dc.l convert_float_to_quick                   ; floattoquick
00035042 <AmiBlitz3.ab3@27931>   Dc.l 0                                        ; floattofloat
00035046 <AmiBlitz3.ab3@27932>   Dc.l convert_float_to_long                    ; floattolong
0003504A <AmiBlitz3.ab3@27933>   Dc.l error_convert_types                      ; noconerr
0003504E <AmiBlitz3.ab3@27936>   Dc.l convert_long_to_byte                     ; longtobyte
00035052 <AmiBlitz3.ab3@27937>   Dc.l convert_long_to_word                     ; longtoword
00035056 <AmiBlitz3.ab3@27938>   Dc.l 0                                        ; longtolong
0003505A <AmiBlitz3.ab3@27939>   Dc.l convert_long_to_quick                    ; longtoquick
0003505E <AmiBlitz3.ab3@27940>   Dc.l convert_long_to_float                    ; longtofloat
00035062 <AmiBlitz3.ab3@27941>   Dc.l 0                                        ; longtolong
00035066 <AmiBlitz3.ab3@27942>   Dc.l error_convert_types                      ; noconerr
0003506A <AmiBlitz3.ab3@27945>   Dc.l error_convert_types                      ; noconerr
0003506E <AmiBlitz3.ab3@27946>   Dc.l error_convert_types                      ; noconerr
00035072 <AmiBlitz3.ab3@27947>   Dc.l string_to_long                           ; stringtolong
00035076 <AmiBlitz3.ab3@27948>   Dc.l error_convert_types                      ; noconerr
0003507A <AmiBlitz3.ab3@27949>   Dc.l error_convert_types                      ; noconerr
0003507E <AmiBlitz3.ab3@27950>   Dc.l string_to_long                           ; stringtolong
00035082 <AmiBlitz3.ab3@27951>   Ds.l 1
00035084 <AmiBlitz3.ab3@27957>   Dc.b $00,$2B                                  ;+ ; add
00035088 <AmiBlitz3.ab3@27958>   Dc.l do_plus_byte                             ;doplusb
0003508C <AmiBlitz3.ab3@27959>   Dc.l do_plus_word                             ;doplusw
00035090 <AmiBlitz3.ab3@27960>   Dc.l do_plus_long                             ;doplusl
00035094 <AmiBlitz3.ab3@27961>   Dc.l do_plus_long                             ;doplusl
00035098 <AmiBlitz3.ab3@27962>   Dc.l do_plus_float                            ;doplusf
0003509C <AmiBlitz3.ab3@27963>   Ds.l 1
000350A0 <AmiBlitz3.ab3@27964>   Dc.l add_strings                              ;addstrings
000350A2 <AmiBlitz3.ab3@27965>   Dc.b $0B,$B8
000350A4 <AmiBlitz3.ab3@27967>   Dc.b $00,$2D                                  ;- ; sub
000350A8 <AmiBlitz3.ab3@27968>   Dc.l do_minus_byte                            ;dominusb
000350AC <AmiBlitz3.ab3@27969>   Dc.l do_minus_word                            ;dominusw
000350B0 <AmiBlitz3.ab3@27970>   Dc.l do_minus_long                            ;dominusl
000350B4 <AmiBlitz3.ab3@27971>   Dc.l do_minus_long                            ;dominusl
000350B8 <AmiBlitz3.ab3@27972>   Dc.l do_minus_float                           ;dominusf
000350C0 <AmiBlitz3.ab3@27973>   Ds.l 2
000350C2 <AmiBlitz3.ab3@27974>   Dc.b $0B,$B8
000350C4 <AmiBlitz3.ab3@27976>   Dc.b $00,$2A                                  ;* ; mul
000350C8 <AmiBlitz3.ab3@27977>   Dc.l do_times_byte                            ;dotimesb
000350CC <AmiBlitz3.ab3@27978>   Dc.l do_times_word                            ;dotimesw
000350D0 <AmiBlitz3.ab3@27979>   Dc.l do_times_long                            ;dotimesl
000350D4 <AmiBlitz3.ab3@27980>   Dc.l do_times_quick                           ;dotimesq
000350D8 <AmiBlitz3.ab3@27981>   Dc.l do_times_float                           ;dotimesf
000350E0 <AmiBlitz3.ab3@27982>   Ds.l 2
000350E2 <AmiBlitz3.ab3@27983>   Dc.b $0F,$A0
000350E4 <AmiBlitz3.ab3@27985>   Dc.b $00,$2F                                  ;/ ; div
000350E8 <AmiBlitz3.ab3@27986>   Dc.l do_Div_byte                              ;dodivb
000350EC <AmiBlitz3.ab3@27987>   Dc.l do_Div_word                              ;dodivb
000350F0 <AmiBlitz3.ab3@27988>   Dc.l do_Div_long                              ;dodivl
000350F4 <AmiBlitz3.ab3@27989>   Dc.l do_Div_quick                             ;dodivq
000350F8 <AmiBlitz3.ab3@27990>   Dc.l do_Div_float                             ;dodivf
00035100 <AmiBlitz3.ab3@27991>   Ds.l 2
00035102 <AmiBlitz3.ab3@27992>   Dc.b $0F,$A0
00035104 <AmiBlitz3.ab3@27994>   Dc.b $00,$26                                  ;& ; & int
00035108 <AmiBlitz3.ab3@27995>   Dc.l do_AND_byte                              ;doandb
0003510C <AmiBlitz3.ab3@27996>   Dc.l do_AND_word                              ;doandw
00035110 <AmiBlitz3.ab3@27997>   Dc.l do_AND_long                              ;doandl
00035114 <AmiBlitz3.ab3@27998>   Dc.l do_AND_long                              ;doandl
00035120 <AmiBlitz3.ab3@27999>   Ds.l 3
00035122 <AmiBlitz3.ab3@28000>   Dc.b $13,$88
00035124 <AmiBlitz3.ab3@28002>   Dc.b $00,$7C                                  ;| ;or int ;
00035128 <AmiBlitz3.ab3@28003>   Dc.l do_OR_byte                               ;doorb
0003512C <AmiBlitz3.ab3@28004>   Dc.l do_OR_word                               ;doorw
00035130 <AmiBlitz3.ab3@28005>   Dc.l do_OR_long                               ;doorl
00035134 <AmiBlitz3.ab3@28006>   Dc.l do_OR_long                               ;doorl
00035140 <AmiBlitz3.ab3@28007>   Ds.l 3
00035142 <AmiBlitz3.ab3@28008>   Dc.b $13,$88
00035144 <AmiBlitz3.ab3@28010>   Dc.b $80,$42                                  ; AND int  ;(opand-opabcd)/$1c+$8000+fnum
00035148 <AmiBlitz3.ab3@28011>   Dc.l do_AND_byte                              ;doandb
0003514C <AmiBlitz3.ab3@28012>   Dc.l do_AND_word                              ;doandw
00035150 <AmiBlitz3.ab3@28013>   Dc.l do_AND_long                              ;doandl
00035154 <AmiBlitz3.ab3@28014>   Dc.l do_AND_long                              ;doandl
00035160 <AmiBlitz3.ab3@28015>   Ds.l 3
00035162 <AmiBlitz3.ab3@28016>   Dc.b $03,$E8
00035164 <AmiBlitz3.ab3@28018>   Dc.b $80,$8A                                  ; OR int   ;(opor-opabcd)/$1c+$8000+fnum
00035168 <AmiBlitz3.ab3@28019>   Dc.l do_OR_byte                               ;doorb
0003516C <AmiBlitz3.ab3@28020>   Dc.l do_OR_word                               ;doorw
00035170 <AmiBlitz3.ab3@28021>   Dc.l do_OR_long                               ;doorl
00035174 <AmiBlitz3.ab3@28022>   Dc.l do_OR_long                               ;doorl
00035180 <AmiBlitz3.ab3@28023>   Ds.l 3
00035182 <AmiBlitz3.ab3@28024>   Dc.b $03,$E8
00035184 <AmiBlitz3.ab3@28026>   Dc.b $80,$73                                  ; EOR int  ;(opeor-opabcd)/$1c+$8000+fnum
00035188 <AmiBlitz3.ab3@28027>   Dc.l do_EOR_byte                              ;doeorb
0003518C <AmiBlitz3.ab3@28028>   Dc.l do_EOR_word                              ;doeorw
00035190 <AmiBlitz3.ab3@28029>   Dc.l do_EOR_long                              ;doeorl
00035194 <AmiBlitz3.ab3@28030>   Dc.l do_EOR_long                              ;doeorl
000351A0 <AmiBlitz3.ab3@28031>   Ds.l 3
000351A2 <AmiBlitz3.ab3@28032>   Dc.b $03,$E8
000351A4 <AmiBlitz3.ab3@28034>   Dc.b $80,$7C                                  ; LSL int  ;(oplsl-opabcd)/$1c+$8000+fnum
000351A8 <AmiBlitz3.ab3@28035>   Dc.l do_LSL                                   ;dolslb
000351AC <AmiBlitz3.ab3@28036>   Dc.l do_LSL                                   ;dolslw
000351B0 <AmiBlitz3.ab3@28037>   Dc.l do_LSL                                   ;dolsll
000351B4 <AmiBlitz3.ab3@28038>   Dc.l do_LSL                                   ;dolsll
000351C0 <AmiBlitz3.ab3@28039>   Ds.l 3
000351C2 <AmiBlitz3.ab3@28040>   Dc.b $17,$70
000351C4 <AmiBlitz3.ab3@28042>   Dc.b $80,$44                                  ; ASL int  ;(opasl-opabcd)/$1c+$8000+fnum
000351C8 <AmiBlitz3.ab3@28043>   Dc.l do_LSL                                   ;dolslb
000351CC <AmiBlitz3.ab3@28044>   Dc.l do_LSL                                   ;dolslw
000351D0 <AmiBlitz3.ab3@28045>   Dc.l do_LSL                                   ;dolsll
000351D4 <AmiBlitz3.ab3@28046>   Dc.l do_LSL                                   ;dolsll
000351E0 <AmiBlitz3.ab3@28047>   Ds.l 3
000351E2 <AmiBlitz3.ab3@28048>   Dc.b $17,$70
000351E4 <AmiBlitz3.ab3@28050>   Dc.b $80,$7D                                  ; LSR int  ;(oplsr-opabcd)/$1c+$8000+fnum
000351E8 <AmiBlitz3.ab3@28051>   Dc.l do_LSR                                   ;dolsrb
000351EC <AmiBlitz3.ab3@28052>   Dc.l do_LSR                                   ;dolsrw
000351F0 <AmiBlitz3.ab3@28053>   Dc.l do_LSR                                   ;dolsrl
000351F4 <AmiBlitz3.ab3@28054>   Dc.l do_LSR                                   ;dolsrl
00035200 <AmiBlitz3.ab3@28055>   Ds.l 3
00035202 <AmiBlitz3.ab3@28056>   Dc.b $17,$70
00035204 <AmiBlitz3.ab3@28058>   Dc.b $80,$45                                  ; ASR int  ;(opasr-opabcd)/$1c+$8000+fnum
00035208 <AmiBlitz3.ab3@28059>   Dc.l do_ASR                                   ;doasrb
0003520C <AmiBlitz3.ab3@28060>   Dc.l do_ASR                                   ;doasrw
00035210 <AmiBlitz3.ab3@28061>   Dc.l do_ASR                                   ;doasrl
00035214 <AmiBlitz3.ab3@28062>   Dc.l do_ASR                                   ;doasrl
00035220 <AmiBlitz3.ab3@28063>   Ds.l 3
00035222 <AmiBlitz3.ab3@28064>   Dc.b $17,$70
00035224 <AmiBlitz3.ab3@28066>   Dc.b $80,$B9                                  ;mod       ;$8006+tnum
00035228 <AmiBlitz3.ab3@28067>   Dc.l do_mod_byte                              ;domodb
0003522C <AmiBlitz3.ab3@28068>   Dc.l do_mod_word                              ;domodw
00035230 <AmiBlitz3.ab3@28069>   Dc.l do_mod_long                              ;domodl
00035234 <AmiBlitz3.ab3@28070>   Dc.l do_mod_quick                             ;domodq
00035238 <AmiBlitz3.ab3@28071>   Dc.l do_mod_float                             ;domodf
00035240 <AmiBlitz3.ab3@28072>   Ds.l 2
00035242 <AmiBlitz3.ab3@28073>   Dc.b $13,$88
00035244 <AmiBlitz3.ab3@28076>   Dc.b $00,$5E                                  ;^
00035248 <AmiBlitz3.ab3@28077>   Dc.l do_pow                                   ;dopow
0003524C <AmiBlitz3.ab3@28078>   Dc.l do_pow                                   ;dopow
00035250 <AmiBlitz3.ab3@28079>   Dc.l do_pow                                   ;dopow
00035254 <AmiBlitz3.ab3@28080>   Dc.l do_pow                                   ;dopow
00035258 <AmiBlitz3.ab3@28081>   Dc.l do_pow                                   ;dopow
00035260 <AmiBlitz3.ab3@28082>   Ds.l 2
00035262 <AmiBlitz3.ab3@28083>   Dc.b $1B,$58                                  ;7000
00035264 <AmiBlitz3.ab3@28086>   Dc.b $00,$3D                                  ;=
00035268 <AmiBlitz3.ab3@28087>   Dc.l do_equal_byte                            ;doeqb
0003526C <AmiBlitz3.ab3@28088>   Dc.l do_equal_word                            ;doeqw
00035270 <AmiBlitz3.ab3@28089>   Dc.l do_equal_long                            ;doeql
00035274 <AmiBlitz3.ab3@28090>   Dc.l do_equal_long                            ;doeql
00035278 <AmiBlitz3.ab3@28091>   Dc.l do_equal_float                           ;doeqf
0003527C <AmiBlitz3.ab3@28092>   Dc.l do_equal_long                            ;doeql
00035280 <AmiBlitz3.ab3@28093>   Dc.l do_equal_string                          ;doeqs
00035282 <AmiBlitz3.ab3@28094>   Dc.b $07,$D0                                  ;2000
00035284 <AmiBlitz3.ab3@28097>   Dc.b $3C,$3E                                  ;<>
00035288 <AmiBlitz3.ab3@28098>   Dc.l do_not_equal_byte                        ;doneb
0003528C <AmiBlitz3.ab3@28099>   Dc.l do_not_equal_word                        ;donew
00035290 <AmiBlitz3.ab3@28100>   Dc.l do_not_equal_long                        ;donel
00035294 <AmiBlitz3.ab3@28101>   Dc.l do_not_equal_long                        ;donel
00035298 <AmiBlitz3.ab3@28102>   Dc.l do_not_equal_float                       ;donef
0003529C <AmiBlitz3.ab3@28103>   Dc.l do_not_equal_long                        ;donel
000352A0 <AmiBlitz3.ab3@28104>   Dc.l do_not_equal_string                      ;dones
000352A2 <AmiBlitz3.ab3@28105>   Dc.b $07,$D0                                  ;2000
000352A4 <AmiBlitz3.ab3@28108>   Dc.b $00,$3C                                  ;<
000352A8 <AmiBlitz3.ab3@28109>   Dc.l do_littler_byte                          ;doltb
000352AC <AmiBlitz3.ab3@28110>   Dc.l do_littler_word                          ;doltw
000352B0 <AmiBlitz3.ab3@28111>   Dc.l do_littler_long                          ;doltl
000352B4 <AmiBlitz3.ab3@28112>   Dc.l do_littler_long                          ;doltl
000352B8 <AmiBlitz3.ab3@28113>   Dc.l do_littler_float                         ;doltf
000352BC <AmiBlitz3.ab3@28114>   Dc.l do_littler_long                          ;doltl
000352C0 <AmiBlitz3.ab3@28115>   Dc.l do_littler_string                        ;dolts
000352C2 <AmiBlitz3.ab3@28116>   Dc.b $07,$D0                                  ;2000
000352C4 <AmiBlitz3.ab3@28119>   Dc.b $3C,$3D                                  ;<=
000352C8 <AmiBlitz3.ab3@28120>   Dc.l do_littler_equal_byte                    ;doleb
000352CC <AmiBlitz3.ab3@28121>   Dc.l do_littler_equal_word                    ;doleb
000352D0 <AmiBlitz3.ab3@28122>   Dc.l do_littler_equal_long                    ;dolel
000352D4 <AmiBlitz3.ab3@28123>   Dc.l do_littler_equal_long                    ;dolel
000352D8 <AmiBlitz3.ab3@28124>   Dc.l do_littler_equal_float                   ;dolef
000352DC <AmiBlitz3.ab3@28125>   Dc.l do_littler_equal_long                    ;dolel
000352E0 <AmiBlitz3.ab3@28126>   Dc.l do_littler_equal_string                  ;doles
000352E2 <AmiBlitz3.ab3@28127>   Dc.b $07,$D0                                  ;2000
000352E4 <AmiBlitz3.ab3@28130>   Dc.b $00,$3E                                  ;>
000352E8 <AmiBlitz3.ab3@28131>   Dc.l do_greater_byte                          ;dogtb
000352EC <AmiBlitz3.ab3@28132>   Dc.l do_greater_word                          ;dogtw
000352F0 <AmiBlitz3.ab3@28133>   Dc.l do_greater_long                          ;dogtl
000352F4 <AmiBlitz3.ab3@28134>   Dc.l do_greater_long                          ;dogtl
000352F8 <AmiBlitz3.ab3@28135>   Dc.l do_greater_float                         ;dogtf
000352FC <AmiBlitz3.ab3@28136>   Dc.l do_greater_long                          ;dogtl
00035300 <AmiBlitz3.ab3@28137>   Dc.l do_greater_string                        ;dogts
00035302 <AmiBlitz3.ab3@28138>   Dc.b $07,$D0                                  ;2000
00035304 <AmiBlitz3.ab3@28141>   Dc.b $3E,$3D                                  ;>=
00035308 <AmiBlitz3.ab3@28142>   Dc.l do_greater_equal_byte                    ;dogeb
0003530C <AmiBlitz3.ab3@28143>   Dc.l do_greater_equal_word                    ;dogew
00035310 <AmiBlitz3.ab3@28144>   Dc.l do_greater_equal_long                    ;dogel
00035314 <AmiBlitz3.ab3@28145>   Dc.l do_greater_equal_long                    ;dogel
00035318 <AmiBlitz3.ab3@28146>   Dc.l do_greater_equal_float                   ;dogef
0003531C <AmiBlitz3.ab3@28147>   Dc.l do_greater_equal_long                    ;dogel
00035320 <AmiBlitz3.ab3@28148>   Dc.l do_greater_equal_string                  ;doges
00035322 <AmiBlitz3.ab3@28149>   Dc.b $07,$D0                                  ;2000
00035324 <AmiBlitz3.ab3@28151>   Dc.b $80,$CD                                  ;$8000+26+tnum
00035328 <AmiBlitz3.ab3@28152>   Dc.l _BitTst
0003532C <AmiBlitz3.ab3@28153>   Dc.l _BitTst
00035330 <AmiBlitz3.ab3@28154>   Dc.l _BitTst
00035334 <AmiBlitz3.ab3@28155>   Dc.l _BitTst
00035340 <AmiBlitz3.ab3@28156>   Ds.l 3
00035342 <AmiBlitz3.ab3@28157>   Dc.b $1F,$40                                  ;8000
00035344 <AmiBlitz3.ab3@28159>   Dc.b $80,$CE                                  ;$8000+27+tnum
00035348 <AmiBlitz3.ab3@28160>   Dc.l _BitSet
0003534C <AmiBlitz3.ab3@28161>   Dc.l _BitSet
00035350 <AmiBlitz3.ab3@28162>   Dc.l _BitSet
00035354 <AmiBlitz3.ab3@28163>   Dc.l _BitSet
00035360 <AmiBlitz3.ab3@28164>   Ds.l 3
00035362 <AmiBlitz3.ab3@28165>   Dc.b $1F,$40                                  ;8000
00035364 <AmiBlitz3.ab3@28167>   Dc.b $80,$CF                                  ;$8000+28+tnum
00035368 <AmiBlitz3.ab3@28168>   Dc.l _BitClr
0003536C <AmiBlitz3.ab3@28169>   Dc.l _BitClr
00035370 <AmiBlitz3.ab3@28170>   Dc.l _BitClr
00035374 <AmiBlitz3.ab3@28171>   Dc.l _BitClr
00035380 <AmiBlitz3.ab3@28172>   Ds.l 3
00035382 <AmiBlitz3.ab3@28173>   Dc.b $1F,$40                                  ;8000
00035384 <AmiBlitz3.ab3@28175>   Dc.b $80,$D0                                  ;$8000+29+tnum
00035388 <AmiBlitz3.ab3@28176>   Dc.l _BitChg
0003538C <AmiBlitz3.ab3@28177>   Dc.l _BitChg
00035390 <AmiBlitz3.ab3@28178>   Dc.l _BitChg
00035394 <AmiBlitz3.ab3@28179>   Dc.l _BitChg
000353A0 <AmiBlitz3.ab3@28180>   Ds.l 3
000353A2 <AmiBlitz3.ab3@28181>   Dc.b $1F,$40                                  ;8000
000353A4 <AmiBlitz3.ab3@28183>   Dc.b $00,$00
000353A8 <AmiBlitz3.ab3@28188> modetable:   Dc.l typemode
000353AC <AmiBlitz3.ab3@28191> newtypebase: Dc.l newtype_byte
000353B4 <AmiBlitz3.ab3@28194>   Dc.l newtype_word,$01                                    
000353B6 <AmiBlitz3.ab3@28195>   Dc.w $0001
000353BA <AmiBlitz3.ab3@28196>   Dc.b 13,"b",0,0
000353C2 <AmiBlitz3.ab3@28199>   Dc.l newtype_long,$02
000353C4 <AmiBlitz3.ab3@28200>   Dc.w $0002
000353C8 <AmiBlitz3.ab3@28201>   Dc.b 13,"w",0,0
000353D0 <AmiBlitz3.ab3@28204>   Dc.l newtype_quick,$03                                   
000353D2 <AmiBlitz3.ab3@28205>   Dc.w $0004
000353D6 <AmiBlitz3.ab3@28206>   Dc.b 13,"l",0,0
000353DE <AmiBlitz3.ab3@28209>   Dc.l newtype_float,$04                                   
000353E0 <AmiBlitz3.ab3@28210>   Dc.w $0004
000353E4 <AmiBlitz3.ab3@28211>   Dc.b 13,"q",0,0
000353EC <AmiBlitz3.ab3@28215>   Dc.l newtype_double,$05                                  ;make problems on old residents
000353EE <AmiBlitz3.ab3@28216>   Dc.w $0004
000353F2 <AmiBlitz3.ab3@28217>   Dc.b 13,"f",0,0
000353FA <AmiBlitz3.ab3@28220>   Dc.l newtype_double,$06
000353FC <AmiBlitz3.ab3@28221>   Dc.w $0004
00035400 <AmiBlitz3.ab3@28222>   Dc.b 13,"a",0,0
00035408 <AmiBlitz3.ab3@28225>   Dc.l newtype_string,$05                                  ;?? has to by $06 becous is number 6 not 5
0003540A <AmiBlitz3.ab3@28226>   Dc.w $0008
0003540E <AmiBlitz3.ab3@28227>   Dc.b 13,"d",0,0
00035416 <AmiBlitz3.ab3@28231>   Dc.l $0000000,$07                                        ;stringtype
00035418 <AmiBlitz3.ab3@28232>   Dc.w $0004
0003541C <AmiBlitz3.ab3@28233>   Dc.b 13,"s",0,0
00035424 <AmiBlitz3.ab3@28236>   Dc.l $00,$00
00035426 <AmiBlitz3.ab3@28237>   Dc.w $0000
0003542A <AmiBlitz3.ab3@28238>   Dc.b $01,$00,$00,$00
0003548A <AmiBlitz3.ab3@28241> incdir:               Ds.l 24                              ;dcb.b   96,0    org source
0003548C <AmiBlitz3.ab3@28245> dirmode:              Ds.w 1                               ;shows if directmode is on
00035490 <AmiBlitz3.ab3@28247>                       Ds.l 1                               ;int org source ;intuition!
00035492 <AmiBlitz3.ab3@28248> maxobject_pos:        Ds.w 1                               ;maxat org source ;max at
00035496 <AmiBlitz3.ab3@28249> maxsat:               Ds.l 1                               ;data1 info pos
00035498 <AmiBlitz3.ab3@28250> number_of_objects:    Ds.w 1                               ;nummaxs org source ;number of maximums
0003549A <AmiBlitz3.ab3@28252> maxsused:             Ds.w 1                               ;maximums used in prog
0003549C <AmiBlitz3.ab3@28256> dark:                 Ds.w 1                               ;dark compile?
0003549E <AmiBlitz3.ab3@28257> qlab:                 Ds.w 1                               ;quick lab allocate
000354A2 <AmiBlitz3.ab3@28258> defaulttype:          Dc.l newtype_quick                   ;dc.l quicktype org source
000354A4 <AmiBlitz3.ab3@28263> anyerrs:              Dc.w -1                              ;Any Errors in compile ?
000354A6 <AmiBlitz3.ab3@28264> debugversion:         Ds.w 1                               ;makeexec org source ;make an executable file!
000354AA <AmiBlitz3.ab3@28265> noinits:              Ds.l 1                               ;flag for if we have any init routines!
000354AE <AmiBlitz3.ab3@28267> letstart:             Ds.l 1
000354B0 <AmiBlitz3.ab3@28268> dontwrite_nomemleft:  Ds.w 1                               ;nomemleft org source
00035530 <AmiBlitz3.ab3@28269> lastgloballabel:      Ds.l 32                              ;lastbiglab ds.b 128 org source
00035534 <AmiBlitz3.ab3@28271> locdatast:            Ds.l 1
00035538 <AmiBlitz3.ab3@28272> firstpend:            Ds.l 1
0003553C <AmiBlitz3.ab3@28276> data2at:              Ds.l 1
00035540 <AmiBlitz3.ab3@28277> data2:                Ds.l 1
00035544 <AmiBlitz3.ab3@28278> data1start:           Ds.l 1                               ;data1at org source
00035548 <AmiBlitz3.ab3@28279> data1:                Ds.l 1                               ;pc for initialized data!
0003554C <AmiBlitz3.ab3@28280> destbufferstart:      Ds.l 1                               ;pcat org source
00035550 <AmiBlitz3.ab3@28284> destbufferend:        Ds.l 1                               ;libat org source
00035554 <AmiBlitz3.ab3@28285> libend:               Ds.l 1                               ;lib org source
00035558 <AmiBlitz3.ab3@28286> allat:                Ds.l 1                               ;highest allocmemd location for code
00035562 <AmiBlitz3.ab3@28287> dummyasm:             Dc.w 0,0,0,0,0
00035566 <AmiBlitz3.ab3@28288>                       Dc.l 0
00035568 <AmiBlitz3.ab3@28289>                       Dc.w 0
0003556C <AmiBlitz3.ab3@28293> buff1:                Ds.l 1                               ;buffer for text get
00035570 <AmiBlitz3.ab3@28294> buff2:                Ds.l 1                               ;ditto for dest
00035572 <AmiBlitz3.ab3@28295> constmode:            Ds.w 1                               ;0 for norm, <>0 for assembler
00035574 <AmiBlitz3.ab3@28296> asmtype:              Ds.w 1                               ;0=contains no prog reference
00035576 <AmiBlitz3.ab3@28297> extraword:            Ds.w 1                               ;the extension word for assembler
00035578 <AmiBlitz3.ab3@28298> extraword2:           Ds.w 1                               ;ditto
0003557A <AmiBlitz3.ab3@28299> asmsize:              Ds.w 1
0003557E <AmiBlitz3.ab3@28300> asmbuff:              Ds.l 1
00035580 <AmiBlitz3.ab3@28301> asmlen:               Ds.w 1                               ;first (src) text len
00035582 <AmiBlitz3.ab3@28302> asmlen2:              Ds.w 1                               ;second (dest)
00035586 <AmiBlitz3.ab3@28303> templabel:            Ds.l 1                               ;linked list of expressions to resolve
00035588 <AmiBlitz3.ab3@28306> macnum:               Ds.w 1
0003558C <AmiBlitz3.ab3@28308>                       Dc.l 0                               ;address of next 0 in include fil
00035590 <AmiBlitz3.ab3@28309> titleat:              Ds.l 1                               ;5 longs for compile streaks
0003559A <AmiBlitz3.ab3@28310> progress_per_line:    Ds.w 5                               ;titleadd ds 5 org source ;5 adds for compile streaks
0003559C <AmiBlitz3.ab3@28311> connest:              Ds.w 1                               ;conditional nest level
000355A0 <AmiBlitz3.ab3@28312> firstconst:           Ds.l 1                               ;first constant (#a)
000355A2 <AmiBlitz3.ab3@28313> numarg:               Ds.w 1                               ;number of macro arguements
000355A6 <AmiBlitz3.ab3@28314> myoline:              Ds.l 1                               ;macro done yet?
000355AA <AmiBlitz3.ab3@28315> myline:               Ds.l 1                               ;pointer to some memory to create
000355AE <AmiBlitz3.ab3@28318>                       Ds.l 1
000355EE <AmiBlitz3.ab3@28319> concomstack:          Ds.l 16                              ;32 deep conditional compilation
000355F2 <AmiBlitz3.ab3@28320> concomsp:             Dc.l concomstack                     ;stack pointer
000355F4 <AmiBlitz3.ab3@28321> oldqflag:             Ds.w 1
000355F8 <AmiBlitz3.ab3@28324>                       Ds.l 1
000355FA <AmiBlitz3.ab3@28326>                       Ds.w 1
000355FE <AmiBlitz3.ab3@28327> firstfor:             Ds.l 1                               ;first for
00035600 <AmiBlitz3.ab3@28328> stackpar:             Ds.w 1                               ;pushflag org source ;1 par to stack 0 normal
00035602 <AmiBlitz3.ab3@28329> sbgot:                Ds.w 1                               ;flag for string got 2
00035604 <AmiBlitz3.ab3@28330> convsize:             Ds.w 1                               ;usertype org source
00035606 <AmiBlitz3.ab3@28331> userp:                Ds.w 1
0003560A <AmiBlitz3.ab3@28336> ptr_userlibs_list:    Ds.l 1                               ;libslist org source
0003560C <AmiBlitz3.ab3@28337> a2offset:             Ds.w 1                               ;stackuse org source ;stack used when gathering lib parameters
0003560E <AmiBlitz3.ab3@28338> numreps:              Ds.w 1                               ;number of repeats in a repeatable
00035612 <AmiBlitz3.ab3@28340> locloc:               Ds.l 1
00035614 <AmiBlitz3.ab3@28341> locchar:              Ds.w 1
00035694 <AmiBlitz3.ab3@28342> stbuff:               Ds.l 32                              ;was 8    ;six string varoffs
00035696 <AmiBlitz3.ab3@28343> commode:              Ds.w 1                               ;in comma mode...
0003569A <AmiBlitz3.ab3@28344> lastoffset_org:       Ds.l 1                               ;lastoffset org source ;last offset in calcvar!
0003569E <AmiBlitz3.ab3@28345> linenumat:            Dc.l $FFFFFFFF                       ;linecounter ;dc -1 org source ;line being processed
000356A2 <AmiBlitz3.ab3@28346> compilelinecounter:   Dc.l $FFFFFFFF                       ;menuret dc -1 org source ;menu return code
000356A4 <AmiBlitz3.ab3@28348>                       Ds.w 1                               ;opt reset offset
000357A4 <AmiBlitz3.ab3@28350>                       Ds.l 64                              ;Ds.b vcodelen org source ;code used to generate
000358A4 <AmiBlitz3.ab3@28352>                       Ds.l 64                              ;Ds.b vcodelen org source ;above for let.....
000358A6 <AmiBlitz3.ab3@28353> varcodelen:           Ds.w 1                               ;and length
000358A8 <AmiBlitz3.ab3@28355>                       Ds.w 1
000358AE <AmiBlitz3.ab3@28356> oldvcodelen:          Ds.w 3                               ;old varcodelen
000358B0 <AmiBlitz3.ab3@28359> Even4
000358B4 <AmiBlitz3.ab3@28360> tempvm:               Ds.l 1                               ;memlib org source ;address of memory library
000358B6 <AmiBlitz3.ab3@28361> memlibstat:           Ds.w 1                               ;status of memory library during
000358B8 <AmiBlitz3.ab3@28364>                       Dc.w 0
000358BA <AmiBlitz3.ab3@28366>                       Dc.w 0
000358BC <AmiBlitz3.ab3@28368> varmode:              Ds.w 1                               ;0 a5 pointer to global
000358C0 <AmiBlitz3.ab3@28370> currentfunction:      Ds.l 1                               ;thisproc org source
000358C4 <AmiBlitz3.ab3@28371> firstproc:            Ds.l 1                               ;firstproc org source ;this procedure being 'done'
000358C6 <AmiBlitz3.ab3@28372> 
000358C8 <AmiBlitz3.ab3@28374> skipcode:             Ds.w 1                               ;nocompile ;comflag org source ;0 if no compile
000358CC <AmiBlitz3.ab3@28375> passstack:            Ds.l 1
000358D0 <AmiBlitz3.ab3@28376> zero:                 Ds.l 1                               ;ZERO!
000358D2 <AmiBlitz3.ab3@28377> ininclude:            Ds.w 1                               ;numincs org source ;number of include files
000358D6 <AmiBlitz3.ab3@28379> xinclude_base:        Ds.l 1                               ;firstxinc org source ;first exclusive include.
000358DA <AmiBlitz3.ab3@28380> constantbase:         Ds.l 1                               ;firstinc org source ;first include
000358DC <AmiBlitz3.ab3@28381> lasta6:               Dc.w $FFFF                           ;-1 org source
000358DE <AmiBlitz3.ab3@28382> instringon:           Ds.w 1                               ;quoteflag org source
000358E2 <AmiBlitz3.ab3@28383> ptr_macrobuffer_begin:Ds.l 1                               ;macrobuff org source ;pointer to macro collection buffer ;begin
000358E6 <AmiBlitz3.ab3@28384> ptr_macrobuffer_end:  Ds.l 1                               ;macrobufff org source ;end of above ;end of
000358EA <AmiBlitz3.ab3@28385> macrobase:            Ds.l 1                               ;firstmacro org source ;linked list of macro's ;macrolist
000358EE <AmiBlitz3.ab3@28386> endop:                Ds.l 1                               ;end of program pc - before finishups!
000358F2 <AmiBlitz3.ab3@28387> labelbase:            Ds.l 1                               ;firstlabel org source ;first lib struct
000358F6 <AmiBlitz3.ab3@28388> end_of_tokenlist:     Ds.l 1                               ;lasttoken org source
000358F8 <AmiBlitz3.ab3@28389> numstatic:            Ds.w 1                               ;number of static structs
000358FC <AmiBlitz3.ab3@28390> staticdata:           Ds.l 1                               ;data1 val for statics
00035900 <AmiBlitz3.ab3@28391> libpointer:           Ds.l 1                               ;firstlib org source ;first lib struct
00035902 <AmiBlitz3.ab3@28392> sbasegot:             Ds.w 1                               ;string base got?
00035906 <AmiBlitz3.ab3@28393> litdata1:             Ds.l 1
0003590A <AmiBlitz3.ab3@28397> objlen:               Ds.l 1
0003590E <AmiBlitz3.ab3@28398> hunkoffsetcounter:    Ds.l 1                               ;numoffs org source
00035912 <AmiBlitz3.ab3@28399> hunkoffsetbase:       Ds.l 1                               ;firstoff org source ;pointer to linked list
00035914 <AmiBlitz3.ab3@28401> flagmask:             Ds.w 1                               ;mask for flag of variable when
00035916 <AmiBlitz3.ab3@28403> notshared:            Ds.w 1                               ;added org source ;flag for seeing if variable was added!
00035918 <AmiBlitz3.ab3@28404> nonew:                Ds.w 1                               ;1 to inhibit new variable creation
0003591C <AmiBlitz3.ab3@28405> temp1:                Ds.l 1
00035920 <AmiBlitz3.ab3@28406> temp2:                Ds.l 1
00035924 <AmiBlitz3.ab3@28408> ptr_parameterstore:   Ds.l 1                               ;namebuff ds.b 128 org source
00035928 <AmiBlitz3.ab3@28409> fib_DirEntryType:     Ds.l 1                               ;namebuff+4 org source
0003599C <AmiBlitz3.ab3@28410> fib_FileName:         Ds.l 29                              ;namebuff+8 org source
000359A0 <AmiBlitz3.ab3@28411> fib_Size:             Ds.l 1                               ;namebuff+124 org source
00035A20 <AmiBlitz3.ab3@28413> namebuff2:            Ds.b 128
00035A28 <AmiBlitz3.ab3@28414>                       Ds.b 8                               ;for fileinfoblock
00035A68 <AmiBlitz3.ab3@28417> optstuff:             Ds.b 64                              ;temp opt make buffer
00035A6A <AmiBlitz3.ab3@28434>   Dc.b $00,$01                                             ; 1 byte schreiben ;one byte stuff...
00035A6E <AmiBlitz3.ab3@28435>   Dc.l xtra_versionnumber                                  ; vers org source
00035A72 <AmiBlitz3.ab3@28436>   Dc.l create_iconfile                                     ; create icon for executable
00035A76 <AmiBlitz3.ab3@28437>   Ds.l 1
00035A78 <AmiBlitz3.ab3@28439>   Dc.b $00,$02                                             ; 2 bytes schreiben  ;two byte stuff...
00035A7C <AmiBlitz3.ab3@28442>   Dc.l set_use_debugger
00035A80 <AmiBlitz3.ab3@28443>   Dc.l AL_0_11010                                          ;+obsolet: debugger
00035A84 <AmiBlitz3.ab3@28444>   Dc.l AL_0_1103C                                          ;+obsolet: long arrays
00035A88 <AmiBlitz3.ab3@28445>   Dc.l AL_0_11068                                          ;+obsolet: expand macros
00035A8C <AmiBlitz3.ab3@28446>   Dc.l AL_0_11094                                          ;+obsolet: quoted macros
00035A90 <AmiBlitz3.ab3@28447>   Dc.l set_make_smallestcode
00035A94 <AmiBlitz3.ab3@28448>   Dc.l set_link_debuginfo
00035A98 <AmiBlitz3.ab3@28449>   Dc.l set_autorun
00035A9C <AmiBlitz3.ab3@28450>   Dc.l set_interruptcheck
00035AA0 <AmiBlitz3.ab3@28451>   Dc.l set_assemblercheck
00035AA4 <AmiBlitz3.ab3@28453>   Dc.l set_overflowcheck
00035AA8 <AmiBlitz3.ab3@28454>   Dc.l default_obsolete                                    ;+obsolet: ohne inhalt
00035AAC <AmiBlitz3.ab3@28455>   Dc.l default_interruptcheck                              ;+obsolet: interruptcheck vorgabe
00035AB0 <AmiBlitz3.ab3@28456>   Dc.l default_overflowcheck                               ;+obsolet: overflow vorgabe
00035AB4 <AmiBlitz3.ab3@28459>   Ds.l 1
00035AB6 <AmiBlitz3.ab3@28461>   Dc.b $00,$04                                             ; 4 bytes schreiben..  ;four byte stuff...
00035ABA <AmiBlitz3.ab3@28468>   Dc.l objectbuffer
00035ABE <AmiBlitz3.ab3@28469>   Dc.l libsbuffer
00035AC2 <AmiBlitz3.ab3@28470>   Dc.l systembuffer
00035AC6 <AmiBlitz3.ab3@28471>   Dc.l databuffer
00035ACA <AmiBlitz3.ab3@28472>   Dc.l macrobuffer_size
00035ACE <AmiBlitz3.ab3@28473>   Dc.l stringbuffer
00035AD2 <AmiBlitz3.ab3@28476>   Ds.l 1
00035AD4 <AmiBlitz3.ab3@28480>   Dc.b $02,$20                                             ;dc 68*8; 544 bytes schreiben.
00035ADC <AmiBlitz3.ab3@28481>   Dc.l residents_table,0
00035ADE <AmiBlitz3.ab3@28485>   Dc.b $01,$80                                             ;dc 192*2; 384 bytes schreiben
00035AE6 <AmiBlitz3.ab3@28486>   Dc.l exepath,0                                           ; exepath und exefilename jeweils 192 bytes
00035AE8 <AmiBlitz3.ab3@28487>   Ds.w 1
00035BE4 <AmiBlitz3.ab3@28491>   Ds.l 63
00035CE0 <AmiBlitz3.ab3@28492>   Ds.l 63
00035DDC <AmiBlitz3.ab3@28493>   Ds.l 63
00035EBE <AmiBlitz3.ab3@28494>   Ds.w 113
00035EC0 <AmiBlitz3.ab3@28497> comsettings_message:  Ds.w 1                               ;allchg org source
00035EC2 <AmiBlitz3.ab3@28498> xtra_versionnumber:   Ds.w 1                               ;vers org source
00035EC8 <AmiBlitz3.ab3@28502>   CLR.b exefilename
00035ECA <AmiBlitz3.ab3@28503>   TST.l d0
00035ECE <AmiBlitz3.ab3@28504>   BNE 'l10
00035ED0 <AmiBlitz3.ab3@28505>  RTS
00035ED6 <AmiBlitz3.ab3@28508>   JSR free_residents                                       ;jsr freeres2 org source
00035EDC <AmiBlitz3.ab3@28509> 
00035EE2 <AmiBlitz3.ab3@28510>   LEA ptr_xtradata,A2
00035EE4 <AmiBlitz3.ab3@28511>   MOVEQ.l #$00,D4
00035EE6 <AmiBlitz3.ab3@28514>     MOVE.w (A2)+,D4                                        ; anzahl bytes zum lesen
00035EEA <AmiBlitz3.ab3@28515>     BEQ.b 'done
00035EEC <AmiBlitz3.ab3@28518>     MOVE.l (A2)+,D2
00035EF0 <AmiBlitz3.ab3@28519>   BEQ.b 'loop
00035EF2 <AmiBlitz3.ab3@28521>   MOVE.l D4,D3
00035EF4 <AmiBlitz3.ab3@28522>   MOVE.l D7,D1
00035EF8 <AmiBlitz3.ab3@28523>   JSR _Read(A6)                                            ; d1: file, d2: buffer, d3:length
00035EFA <AmiBlitz3.ab3@28524>   TST.l D0
00035EFE <AmiBlitz3.ab3@28525>   BNE.b 'loop2
00035F02 <AmiBlitz3.ab3@28526>  BRA.w 'done2
00035F08 <AmiBlitz3.ab3@28529>   TST.b xtra_versionnumber
00035F0C <AmiBlitz3.ab3@28530>    BNE.b 'nover0
00035F14 <AmiBlitz3.ab3@28531>   MOVE.w #$0080,set_autorun                                ;auto run on
00035F1E <AmiBlitz3.ab3@28532>   MOVE.w default_interruptcheck,set_interruptcheck         ;interupt checking on
00035F24 <AmiBlitz3.ab3@28533>   CLR.w set_assemblercheck                                 ;assembler checking off
00035F2E <AmiBlitz3.ab3@28534>   MOVE.w default_overflowcheck,set_overflowcheck           ;overflow chex
00035F32 <AmiBlitz3.ab3@28535>  BRA.b 'ver0
00035F34 <AmiBlitz3.ab3@28538>   MOVE.l D7,D1                                             ;load cli arg!
00035F3A <AmiBlitz3.ab3@28539>   MOVE.l #str_cliarguments,D2
00035F40 <AmiBlitz3.ab3@28540>   MOVE.l #116,D3                                           ; vorher 128 , jetzt 8 weniger fuer die Versionsdaten
00035F44 <AmiBlitz3.ab3@28541>   JSR _Read(A6)                                            ; d1: file, d2: buffer, d3:length
00035F4A <AmiBlitz3.ab3@28542>   MOVE.l #str_cliarguments,A0
00035F50 <AmiBlitz3.ab3@28543>   ADDA.l #115,A0
00035F56 <AmiBlitz3.ab3@28544>   MOVE.l #0,(a0) ; terminate it!
00035F58 <AmiBlitz3.ab3@28546>   MOVE.l D7,D1                                             ; I know, I know. Honitos started this horrible thing, see below...
00035F5E <AmiBlitz3.ab3@28547>   MOVE.l #stacksize,D2
00035F64 <AmiBlitz3.ab3@28548>   MOVE.l #4,D3
00035F68 <AmiBlitz3.ab3@28549>   JSR _Read(A6)
00035F72 <AmiBlitz3.ab3@28550>   CMP.l ##MIN_STACKSIZE,stacksize
00035F76 <AmiBlitz3.ab3@28551>   BGE 'stackok
00035F80 <AmiBlitz3.ab3@28552>   MOVE.l ##MIN_STACKSIZE,stacksize
00035F82 <AmiBlitz3.ab3@28555>   MOVE.l D7,D1
00035F88 <AmiBlitz3.ab3@28556>   MOVE.l #versioninformation,D2
00035F8E <AmiBlitz3.ab3@28557>   MOVE.l #4,D3
00035F92 <AmiBlitz3.ab3@28558>   JSR _Read(A6)
00035F94 <AmiBlitz3.ab3@28560>   MOVE.l D7,D1
00035F9A <AmiBlitz3.ab3@28561>   MOVE.l #number_of_builds,D2
00035FA0 <AmiBlitz3.ab3@28562>   MOVE.l #4,D3
00035FA4 <AmiBlitz3.ab3@28563>   JSR _Read(A6)
00035FAA <AmiBlitz3.ab3@28569> 
00035FB0 <AmiBlitz3.ab3@28570>   MOVE.l A7,errstack
00035FBA <AmiBlitz3.ab3@28571>   MOVE.l #'done2,errcont
00035FC2 <AmiBlitz3.ab3@28572>   MOVE.w #$FFFF,ezerr
00035FC8 <AmiBlitz3.ab3@28575>     MOVE.l #temp1,D2                                   ;LOAD maxobjectsvalues
00035FCA <AmiBlitz3.ab3@28576>     MOVEQ.l #$04,D3
00035FCC <AmiBlitz3.ab3@28577>     MOVE.l D7,D1
00035FD0 <AmiBlitz3.ab3@28578>     JSR _Read(A6)
00035FD2 <AmiBlitz3.ab3@28579>     TST.l D0
00035FD6 <AmiBlitz3.ab3@28580>     BEQ.b 'done2
00035FDC <AmiBlitz3.ab3@28581>     MOVE.w temp1,D1
00035FDE <AmiBlitz3.ab3@28582>     TST.w d1                                               ;new
00035FE2 <AmiBlitz3.ab3@28583>     BEQ 'done2                                         ;new
00035FE8 <AmiBlitz3.ab3@28584>      JSR findlibnoerr
00035FEE <AmiBlitz3.ab3@28586>     CMP.l #0,a1
00035FF2 <AmiBlitz3.ab3@28587>     BEQ 'dloop
00035FF6 <AmiBlitz3.ab3@28588>     MOVE.l $12(A1),D0
00035FFE <AmiBlitz3.ab3@28589>     MOVE.w temp1+2,-$4(A1,D0.L)
00036002 <AmiBlitz3.ab3@28590>  BRA.b 'dloop
00036006 <AmiBlitz3.ab3@28596>   LEA residents_table(PC),A0
00036008 <AmiBlitz3.ab3@28597>   MOVEQ.l #$07,D0
0003600C <AmiBlitz3.ab3@28600>     CLR.l $40(A0)
00036010 <AmiBlitz3.ab3@28601>     LEA ResidentEntryStep(A0),A0   ; $44
00036014 <AmiBlitz3.ab3@28602>   DBF D0,'loop3
00036018 <AmiBlitz3.ab3@28604>   MOVEM.l D7/A6,-(A7)
0003601E <AmiBlitz3.ab3@28605>   JSR init_buffers
00036024 <AmiBlitz3.ab3@28606>   JSR reloadresident
00036028 <AmiBlitz3.ab3@28607>   MOVEM.l (A7)+,D7/A6
0003602A <AmiBlitz3.ab3@28608> RTS
00036032 <AmiBlitz3.ab3@28612>   MOVE.b #$1,xtra_versionnumber                            ;.xtra version number...
00036038 <AmiBlitz3.ab3@28621>   LEA ptr_xtradata,A2
0003603A <AmiBlitz3.ab3@28622>   MOVEQ.l #$00,D4
0003603C <AmiBlitz3.ab3@28626>   MOVE.w (A2)+,D4                                          ; anzahl bytes zu schreiben
00036040 <AmiBlitz3.ab3@28627>   BEQ.b 'done
00036042 <AmiBlitz3.ab3@28630>    MOVE.l (A2)+,D2
00036046 <AmiBlitz3.ab3@28631>    BEQ.b 'loop
00036048 <AmiBlitz3.ab3@28633>    MOVE.l D4,D3
0003604A <AmiBlitz3.ab3@28634>    MOVE.l D7,D1                                            ; schreiben der daten in ptr_xtradata
0003604E <AmiBlitz3.ab3@28635>    JSR _Write(A6)                                          ; d1: file, d2: buffer, d3:length
00036052 <AmiBlitz3.ab3@28636>  BRA.b 'loop2
00036054 <AmiBlitz3.ab3@28639>   MOVE.l D7,D1
0003605A <AmiBlitz3.ab3@28640>   MOVE.l #str_cliarguments,D2
00036060 <AmiBlitz3.ab3@28641>   MOVE.l #116,D3
00036064 <AmiBlitz3.ab3@28642>   JSR _Write(A6)                                           ; hier werden 116 bytes an cli_arguments geschrieben !!
00036066 <AmiBlitz3.ab3@28644>   MOVE.l D7,D1
0003606C <AmiBlitz3.ab3@28645>   MOVE.l #stacksize,D2
00036072 <AmiBlitz3.ab3@28646>   MOVE.l #4,D3
00036076 <AmiBlitz3.ab3@28647>   JSR _Write(A6)
00036078 <AmiBlitz3.ab3@28649>   MOVE.l D7,D1
0003607E <AmiBlitz3.ab3@28650>   MOVE.l #versioninformation,D2
00036084 <AmiBlitz3.ab3@28651>   MOVE.l #4,D3
00036088 <AmiBlitz3.ab3@28652>   JSR _Write(A6)
0003608A <AmiBlitz3.ab3@28654>   MOVE.l D7,D1
00036090 <AmiBlitz3.ab3@28655>   MOVE.l #number_of_builds,D2
00036096 <AmiBlitz3.ab3@28656>   MOVE.l #4,D3
0003609A <AmiBlitz3.ab3@28657>   JSR _Write(A6)
000360A0 <AmiBlitz3.ab3@28663>   LEA libpointer,A2
000360A2 <AmiBlitz3.ab3@28666>     MOVE.l (A2),D0
000360A6 <AmiBlitz3.ab3@28667>     BEQ.w 'done2
000360A8 <AmiBlitz3.ab3@28668>     MOVEA.l D0,A2
000360AC <AmiBlitz3.ab3@28669>     MOVE.l $12(A2),D4
000360B0 <AmiBlitz3.ab3@28670>     TST.w -$2(A2,D4.L)
000360B4 <AmiBlitz3.ab3@28671>     BEQ.w 'loop3
000360B8 <AmiBlitz3.ab3@28673>     LEA $4(A2),A0
000360BA <AmiBlitz3.ab3@28674>     MOVE.l A0,D2
000360BC <AmiBlitz3.ab3@28675>     MOVEQ.l #$02,D3
000360BE <AmiBlitz3.ab3@28676>     MOVE.l D7,D1                                           ; schreiben der Libnum mit 2 bytes
000360C2 <AmiBlitz3.ab3@28677>     JSR _Write(A6)                                         ; d1: file, d2: buffer, d3:length
000360C6 <AmiBlitz3.ab3@28679>     LEA -$4(A2,D4.L),A0
000360C8 <AmiBlitz3.ab3@28680>     MOVE.l A0,D2
000360CA <AmiBlitz3.ab3@28681>     MOVEQ.l #$02,D3
000360CC <AmiBlitz3.ab3@28682>     MOVE.l D7,D1                                           ; schreiben der Max Objects mit 2 bytes
000360D0 <AmiBlitz3.ab3@28683>     JSR _Write(A6)                                         ; d1: file, d2: buffer, d3:length
000360D4 <AmiBlitz3.ab3@28684>  BRA.w 'loop3
000360DA <AmiBlitz3.ab3@28689>   LEA XTRAEndPadBytes,A2 ; get the start address off the 4 fill/pad/termination bytes
000360DC <AmiBlitz3.ab3@28690>   MOVE.l A2,D2           ; move the address to d2
000360E2 <AmiBlitz3.ab3@28691>   MOVE.l #4,D3           ; we only need 4 bytes to save
000360E4 <AmiBlitz3.ab3@28692>   MOVE.l D7,D1           ; we set the file handle
000360E8 <AmiBlitz3.ab3@28693>   JSR _Write(A6)         ; and we write it.
000360EA <AmiBlitz3.ab3@28695> RTS
000360F0 <AmiBlitz3.ab3@28700>   LEA optssave,A0                      ; backup address
000360F6 <AmiBlitz3.ab3@28701>   LEA ptr_xtradata,A1                  ; source address
000360F8 <AmiBlitz3.ab3@28704>   MOVE.w (A1)+,D0                                          ;length of data move
000360FC <AmiBlitz3.ab3@28705>   BEQ.b 'backupdone
000360FE <AmiBlitz3.ab3@28706>   SUBQ.w #1,D0
00036100 <AmiBlitz3.ab3@28709>     MOVE.l (A1)+,D1
00036104 <AmiBlitz3.ab3@28710>     BEQ.b 'backuploop
00036106 <AmiBlitz3.ab3@28711>     MOVEA.l D1,A2
00036108 <AmiBlitz3.ab3@28712>     MOVE.w D0,D1
0003610A <AmiBlitz3.ab3@28715>       MOVE.b (A2)+,(A0)+
0003610E <AmiBlitz3.ab3@28716>   DBF D1,'backuploop3
00036112 <AmiBlitz3.ab3@28718>  BRA.w 'backuploop2
00036118 <AmiBlitz3.ab3@28722>   LEA bufferlist,A1
0003611A <AmiBlitz3.ab3@28725>     MOVE.l (A1)+,D2
0003611E <AmiBlitz3.ab3@28726>     BEQ.b 'loop4done
00036120 <AmiBlitz3.ab3@28728>     MOVEA.l D2,A0
00036122 <AmiBlitz3.ab3@28729>     MOVE.l (A0),D2
00036124 <AmiBlitz3.ab3@28730>     ADDQ.w #8,A0
0003612A <AmiBlitz3.ab3@28731>     JSR makelong
0003612E <AmiBlitz3.ab3@28732>  BRA.b 'loop4
00036134 <AmiBlitz3.ab3@28735>   CLR.w state_of_residents                                 ;resident change
0003613A <AmiBlitz3.ab3@28736>   CLR.w comsettings_message                                ;alloc change
00036140 <AmiBlitz3.ab3@28737>   CLR.w maxobject_pos
00036142 <AmiBlitz3.ab3@28738> RTS   ; new tomsmart1
00036148 <AmiBlitz3.ab3@28742>   LEA optssave,A0
0003614E <AmiBlitz3.ab3@28743>   LEA ptr_xtradata,A1
00036150 <AmiBlitz3.ab3@28746>   MOVE.w (A1)+,D0
00036154 <AmiBlitz3.ab3@28747>   BEQ.b 'restoredone
00036156 <AmiBlitz3.ab3@28748>   SUBQ.w #1,D0
00036158 <AmiBlitz3.ab3@28751>     MOVE.l (A1)+,D1
0003615C <AmiBlitz3.ab3@28752>     BEQ.b 'restoreloop1
0003615E <AmiBlitz3.ab3@28753>     MOVEA.l D1,A2
00036160 <AmiBlitz3.ab3@28754>     MOVE.w D0,D1
00036162 <AmiBlitz3.ab3@28757>       MOVE.b (A0)+,(A2)+
00036166 <AmiBlitz3.ab3@28758>   DBF D1,'restoreloop3
0003616A <AmiBlitz3.ab3@28760>  BRA.b 'restoreloop2
0003616C <AmiBlitz3.ab3@28763> RTS
00036172 <AmiBlitz3.ab3@28767>   JSR free_residents                    ; first free the allready loaded residents
00036178 <AmiBlitz3.ab3@28768>   JSR Clear_Residents_table             ; second clear the complete resident table
0003617A <AmiBlitz3.ab3@28769> RTS
00036182 <AmiBlitz3.ab3@28773>   MOVE.w #$FFFF,state_of_residents
00036188 <AmiBlitz3.ab3@28774>   MOVE.w state_of_residents,D0
0003618E <AmiBlitz3.ab3@28775>   JSR reloadresident
00036190 <AmiBlitz3.ab3@28776> RTS
00036192 <AmiBlitz3.ab3@28782>   MOVE.l d0,a1
00036198 <AmiBlitz3.ab3@28784>   MOVEA.l libpointer,A2
0003619C <AmiBlitz3.ab3@28787>     MOVE.l $12(A2),D0
000361A0 <AmiBlitz3.ab3@28788>     TST.w -$2(A2,D0.L)
000361A4 <AmiBlitz3.ab3@28789>      BEQ.w 'next
000361A6 <AmiBlitz3.ab3@28790>     SUBQ.w #1,D1
000361AA <AmiBlitz3.ab3@28791>      BPL.w 'next
000361AE <AmiBlitz3.ab3@28793>     MOVEA.l -$1A(A2,D0.L),A3    ;token offset
000361B0 <AmiBlitz3.ab3@28794>     ADDA.l A2,A3
000361B2 <AmiBlitz3.ab3@28797>       MOVE.b (A3)+,(A1)+
000361B6 <AmiBlitz3.ab3@28798>     BNE.w 'tt1
000361B8 <AmiBlitz3.ab3@28800>     CLR.b -(A1)
000361BC <AmiBlitz3.ab3@28802>     MOVE.w -$4(A2,D0.L),D0
000361C2 <AmiBlitz3.ab3@28804>     AND.l #$ffff,d0
000361C4 <AmiBlitz3.ab3@28805>  RTS
000361C6 <AmiBlitz3.ab3@28809>     MOVEA.l (A2),A2
000361CA <AmiBlitz3.ab3@28810> BRA.w 'loop
000361DA <AmiBlitz3.ab3@28815> str_maxobjects_name:   Dc.b "              ",0 : Even
000361EA <AmiBlitz3.ab3@28816> str_maxobjects_name2:  Dc.b "              ",0 : Even
000361EE <AmiBlitz3.ab3@28817> objectbuffer:          Dc.l #DEFAULT_OBJECTBUFFERSIZE  ; replaced with a constant tomsmart1
000361F2 <AmiBlitz3.ab3@28818>                        Dc.l $00000000
000361FE <AmiBlitz3.ab3@28819> str_objectbuffer:      Dc.b "16384",0,0,0,0,0,0,0      ; string max 12 columns
00036202 <AmiBlitz3.ab3@28821> libsbuffer:            Dc.l #DEFAULT_LIBSBUFFERSIZE    ; replaced with a constant tomsmart1
00036206 <AmiBlitz3.ab3@28822>                        Dc.l $00000000
00036212 <AmiBlitz3.ab3@28823> str_libsbuffer:        Dc.b "32768",0,0,0,0,0,0,0      ;was "16384"; string max 12 columns
00036216 <AmiBlitz3.ab3@28825> systembuffer:          Dc.l #DEFAULT_SYSTEMBUFFERSIZE  ; system buffer  ; replaced with a constant tomsmart1
0003621A <AmiBlitz3.ab3@28826>                        Dc.l $00000000
00036226 <AmiBlitz3.ab3@28827> str_systembuffer:      Dc.b "4096",0,0,0,0,0,0,0,0     ; string max 12 columns
0003622A <AmiBlitz3.ab3@28829> databuffer:            Dc.l #DEFAULT_DATABUFFERSIZE    ; data buffer   ; replaced with a constant tomsmart1
0003622E <AmiBlitz3.ab3@28830>                        Dc.l $00000000
0003623A <AmiBlitz3.ab3@28831> str_databuffer:        Dc.b "4096",0,0,0,0,0,0,0,0     ; string max 12 columns
0003623E <AmiBlitz3.ab3@28833> macrobuffer_size:      Dc.l #DEFAULT_MACROBUFFERSIZE   ; macro buffer ; was $00002000 ; replaced with a constant tomsmart1
00036242 <AmiBlitz3.ab3@28834>                        Dc.l $00000000
0003624E <AmiBlitz3.ab3@28835> str_macrobuffer:       Dc.b "40000",0,0,0,0,0,0,0      ; string max 12 columns
00036252 <AmiBlitz3.ab3@28837> stringbuffer:          Dc.l #DEFAULT_STRINGBUFFERSIZE  ; string buffer ; replaced with a constant tomsmart1
00036256 <AmiBlitz3.ab3@28838>                        Dc.l $00000000
00036262 <AmiBlitz3.ab3@28839> str_stringbuffer:      Dc.b "10240",0,0,0,0,0,0,0      ; string max 12 columns
00036264 <AmiBlitz3.ab3@28841> maxobjects_value:      Dc.w $0064
00036268 <AmiBlitz3.ab3@28842>                        Dc.l $00000000
00036274 <AmiBlitz3.ab3@28843> str_maxobjects_value:  Dc.b "100",0,0,0,0,0,0,0,0,0    ; string max 12 columns
00036276 <AmiBlitz3.ab3@28845> maxobjects_value2:     Dc.w $0014
00036278 <AmiBlitz3.ab3@28846>                        Dc.w $0000
00036284 <AmiBlitz3.ab3@28848> str_maxobjects_value2: Dc.b "20",0,0,0,0,0,0,0,0,0,0   ; string max 12 columns
00036285 <AmiBlitz3.ab3@28852> set_create_iconfile:   Dc.b $00
00036288 <AmiBlitz3.ab3@28853> create_iconfile:       Dc.b $80,$01,$01                    ;create icon
0003628A <AmiBlitz3.ab3@28854>                        Dc.b $00,$01
0003628B <AmiBlitz3.ab3@28856> set_use_debugger:      Dc.b $00                            ; Flags.w
0003628E <AmiBlitz3.ab3@28857> use_debugger:          Dc.b $80,$01,$01                    ; Activation.w
00036290 <AmiBlitz3.ab3@28858>                        Dc.b $00,$01                        ; GadgetType.w
00036294 <AmiBlitz3.ab3@28859> AL_0_11010:            Dc.b $00,$80,$01,$01                ; flags, activation
00036298 <AmiBlitz3.ab3@28860> AL_0_1103C:            Dc.b $00,$80,$01,$01                ; flags, activation
0003629C <AmiBlitz3.ab3@28861> AL_0_11068:            Dc.b $00,$80,$01,$01                ; flags, activation
0003629E <AmiBlitz3.ab3@28862> AL_0_11094:            Ds.w 1
0003629F <AmiBlitz3.ab3@28864> set_make_smallestcode: Ds.b 1
000362A2 <AmiBlitz3.ab3@28865> make_smallestcode:     Dc.b $00,$01,$01                    ;make smallest
000362A4 <AmiBlitz3.ab3@28866>                        Dc.b $00,$01
000362A5 <AmiBlitz3.ab3@28867> set_link_debuginfo:    Ds.b 1
000362A8 <AmiBlitz3.ab3@28868> link_debuginfo:        Dc.b $00,$01,$01                    ;create debuginfo
000362AA <AmiBlitz3.ab3@28869>                        Dc.b $00,$01
000364CA <AmiBlitz3.ab3@28874>   Ds.l 136         ;resident files STEP $44 piece 8
0003654A <AmiBlitz3.ab3@28879> str_calcexpression:        Ds.l 32
0003654E <AmiBlitz3.ab3@28880> destbufferend_backup_calc: Ds.l 1             ; was calclibat
00036558 <AmiBlitz3.ab3@28888>   MOVE.l destbufferend,destbufferend_backup_calc
0003655E <AmiBlitz3.ab3@28890> 
00036564 <AmiBlitz3.ab3@28892>   MOVE.l A7,errstack
0003656E <AmiBlitz3.ab3@28893>   MOVE.l #Calc_Error_Exit,errcont
00036598 <AmiBlitz3.ab3@28901>   !basic         ; get the flage for the conversion form the editor
000365DC <AmiBlitz3.ab3@28902>   !ComData_GetW{comWord_CalculatorButtonBinFlag,D0} : MOVE.w d0,CalculatorButtonBinFlag
00036620 <AmiBlitz3.ab3@28903>   !ComData_GetW{comWord_CalculatorButtonDecFlag,D0} : MOVE.w d0,CalculatorButtonDecFlag
0003663E <AmiBlitz3.ab3@28904>   !asm
00036644 <AmiBlitz3.ab3@28907>   LEA str_calcexpression,A0
0003664A <AmiBlitz3.ab3@28915>   JSR setcvars
00036650 <AmiBlitz3.ab3@28916>   JSR setsvars
00036656 <AmiBlitz3.ab3@28918>   CLR.w connest             ;no idea...
0003665C <AmiBlitz3.ab3@28919>   LEA str_calcexpression,A5
00036662 <AmiBlitz3.ab3@28920>   JSR evalconst3            ;evaluate constant
00036668 <AmiBlitz3.ab3@28922>   LEA str_calcexpression,A0
0003666A <AmiBlitz3.ab3@28923>   TST.l D3
0003666E <AmiBlitz3.ab3@28924>    BPL.w 'ispos
00036672 <AmiBlitz3.ab3@28925>   MOVE.b #$2D,(A0)+         ;'-'
00036674 <AmiBlitz3.ab3@28926>   NEG.l D3
0003667C <AmiBlitz3.ab3@28929>   CMPI.w #$80,CalculatorButtonDecFlag
00036680 <AmiBlitz3.ab3@28930>    BEQ.w 'dec
00036682 <AmiBlitz3.ab3@28931>   MOVEQ.l #$00,D1
0003668A <AmiBlitz3.ab3@28932>   CMPI.w #$80,CalculatorButtonBinFlag
0003668E <AmiBlitz3.ab3@28933>    BNE.w 'hex
00036690 <AmiBlitz3.ab3@28936>   MOVEQ.l #$1F,D0
00036694 <AmiBlitz3.ab3@28937>   MOVE.b #$25,(A0)+      ;'%'
00036696 <AmiBlitz3.ab3@28940>       LSL.l #1,D3
0003669A <AmiBlitz3.ab3@28941>        BCC.w 'bzero
0003669E <AmiBlitz3.ab3@28942>       MOVE.b #"1",(A0)+
000366A0 <AmiBlitz3.ab3@28943>       MOVEQ.l #-$01,D1
000366A4 <AmiBlitz3.ab3@28944>   BRA.w 'bnext
000366A6 <AmiBlitz3.ab3@28947>       TST.w D1
000366AA <AmiBlitz3.ab3@28948>       BEQ.w 'bnext
000366AE <AmiBlitz3.ab3@28949>       MOVE.b #"0",(A0)+
000366B2 <AmiBlitz3.ab3@28952>  DBF D0,'bloop
000366B4 <AmiBlitz3.ab3@28955>   TST.w D1
000366B8 <AmiBlitz3.ab3@28956>   BNE.w 'pc1
000366BC <AmiBlitz3.ab3@28957>   MOVE.b #"0",(A0)+
000366BE <AmiBlitz3.ab3@28960>   CLR.b (A0)
000366C2 <AmiBlitz3.ab3@28961>  BRA.w 'pc
000366C4 <AmiBlitz3.ab3@28964>   MOVEQ.l #$07,D0
000366C8 <AmiBlitz3.ab3@28965>   MOVE.b #$24,(A0)+  ;'$'
000366CA <AmiBlitz3.ab3@28968>     MOVE.l D3,D2
000366CC <AmiBlitz3.ab3@28969>     SWAP D2
000366CE <AmiBlitz3.ab3@28970>     LSR.w #8,D2
000366D0 <AmiBlitz3.ab3@28971>     LSR.w #4,D2
000366D4 <AmiBlitz3.ab3@28972>     ADDI.w #$30,D2
000366D8 <AmiBlitz3.ab3@28973>     CMP.w #$3A,D2
000366DC <AmiBlitz3.ab3@28974>      BCS.w 'hok
000366DE <AmiBlitz3.ab3@28975>     ADDQ.w #7,D2
000366E2 <AmiBlitz3.ab3@28978>     CMP.w #$30,D2
000366E6 <AmiBlitz3.ab3@28979>     BEQ.w 'hzero
000366E8 <AmiBlitz3.ab3@28980>     MOVE.b D2,(A0)+
000366EA <AmiBlitz3.ab3@28981>     MOVEQ.l #-$01,D1
000366EE <AmiBlitz3.ab3@28982>   BRA.w 'hnext
000366F0 <AmiBlitz3.ab3@28985>     TST.w D1
000366F4 <AmiBlitz3.ab3@28986>      BEQ.w 'hnext
000366F6 <AmiBlitz3.ab3@28987>     MOVE.b D2,(A0)+
000366F8 <AmiBlitz3.ab3@28990>     LSL.l #4,D3
000366FC <AmiBlitz3.ab3@28991>  DBF D0,'hloop
00036700 <AmiBlitz3.ab3@28993>  BRA.w 'bdone
00036702 <AmiBlitz3.ab3@28996>   MOVE.l D3,D2
00036708 <AmiBlitz3.ab3@28997>   JSR makelong          ;to long...
00036712 <AmiBlitz3.ab3@29004>   MOVE.l destbufferend_backup_calc,destbufferend
00036714 <AmiBlitz3.ab3@29006> RTS                         ; added tomsmart 2012 03 07 vor Calculator in PED
00036813 <AmiBlitz3.ab3@29010> str_cliarguments: Ds.b 255   ; a command line can acutally be 255 characters long
00036814 <AmiBlitz3.ab3@29012> Even
00036816 <AmiBlitz3.ab3@29030>     MOVE.b (a5)+,d0
0003681A <AmiBlitz3.ab3@29031>     BEQ 'l2
0003681E <AmiBlitz3.ab3@29032>     CMP.b #$80,d0
00036822 <AmiBlitz3.ab3@29033>     BNE 'l1
00036824 <AmiBlitz3.ab3@29034>     MOVE.b (a5)+,d0
00036828 <AmiBlitz3.ab3@29035>     BEQ 'l2
0003682C <AmiBlitz3.ab3@29036>     CMP.b #$02,d0
00036830 <AmiBlitz3.ab3@29037>   BNE 'l1
00036834 <AmiBlitz3.ab3@29040>     CMP.b #$20,(a5)+
00036838 <AmiBlitz3.ab3@29041>   BEQ 'l3
0003683A <AmiBlitz3.ab3@29042>   SUBQ.l #1,a5
0003683C <AmiBlitz3.ab3@29043>   TST.b (a5)
00036840 <AmiBlitz3.ab3@29044>   BEQ 'l2
00036844 <AmiBlitz3.ab3@29045>   CMP.w #$8008,(a5)
00036848 <AmiBlitz3.ab3@29046>   BEQ 'l4
0003684C <AmiBlitz3.ab3@29047>   CMP.w #$8009,(a5)
00036850 <AmiBlitz3.ab3@29048>   BEQ 'l4
00036854 <AmiBlitz3.ab3@29049>  BRA 'l1
00036856 <AmiBlitz3.ab3@29052>   ADDQ.l #2,a5
0003685C <AmiBlitz3.ab3@29053>   JSR skiprest
0003685E <AmiBlitz3.ab3@29054> RTS
00036864 <AmiBlitz3.ab3@29057>   JSR nextline
00036868 <AmiBlitz3.ab3@29058>   BNE 'l1
0003686A <AmiBlitz3.ab3@29059> RTS
00036894 <AmiBlitz3.ab3@29063>   !basic
0003689E <AmiBlitz3.ab3@29064>   DateFormat 1
000368AC <AmiBlitz3.ab3@29065>   i.l=SystemDate
000368D2 <AmiBlitz3.ab3@29066>   a$=Date$ (i)
00036950 <AmiBlitz3.ab3@29067>   a$=Replace$(a$,"/",".")
00036956 <AmiBlitz3.ab3@29068>   GetD0 &a$
00036958 <AmiBlitz3.ab3@29069>   MOVEQ #8,d2
0003695A <AmiBlitz3.ab3@29070>   MOVE.l d0,a0
0003695C <AmiBlitz3.ab3@29073>     MOVE.b (a0)+,d1
00036962 <AmiBlitz3.ab3@29074>     JSR pokedata1b
00036966 <AmiBlitz3.ab3@29075>  DBF d2,'l1
00036968 <AmiBlitz3.ab3@29077>   MOVEQ #0,d0
0003696A <AmiBlitz3.ab3@29078>   MOVE.b (a0)+,d0
00036988 <AmiBlitz3.ab3@29079>   !asm
0003698E <AmiBlitz3.ab3@29080>   ADD.l #9,d2
00036994 <AmiBlitz3.ab3@29081>   ADD.l #9,a5
00036996 <AmiBlitz3.ab3@29082> RTS
000369C0 <AmiBlitz3.ab3@29086>   !basic
000369CA <AmiBlitz3.ab3@29087>   DateFormat 0
000369D8 <AmiBlitz3.ab3@29088>   i.l=SystemDate
000369FE <AmiBlitz3.ab3@29089>   a$=Date$ (i)
00036A7C <AmiBlitz3.ab3@29090>   a$=Replace$(a$,"/",".")
00036A82 <AmiBlitz3.ab3@29091>   GetD0 &a$
00036A84 <AmiBlitz3.ab3@29092>   MOVEQ #8,d2
00036A86 <AmiBlitz3.ab3@29093>   MOVE.l d0,a0
00036A88 <AmiBlitz3.ab3@29096>     MOVE.b (a0)+,d1
00036A8E <AmiBlitz3.ab3@29097>     JSR pokedata1b
00036A92 <AmiBlitz3.ab3@29098>  DBF d2,'l1
00036A94 <AmiBlitz3.ab3@29100>   MOVEQ #0,d0
00036A96 <AmiBlitz3.ab3@29101>   MOVE.b (a0)+,d0
00036AB4 <AmiBlitz3.ab3@29102>   !asm
00036ABA <AmiBlitz3.ab3@29103>   ADD.l #9,d2
00036AC0 <AmiBlitz3.ab3@29104>   ADD.l #13,a5
00036AC2 <AmiBlitz3.ab3@29105> RTS
00036AEC <AmiBlitz3.ab3@29109>   !basic
00036AF6 <AmiBlitz3.ab3@29110>   DateFormat 1
00036B04 <AmiBlitz3.ab3@29111>   i.l = SystemDate
00036B2A <AmiBlitz3.ab3@29112>   a$ = Date$ (i)
00036BA8 <AmiBlitz3.ab3@29113>   a$ = Replace$(a$,"/",".")
00036BAE <AmiBlitz3.ab3@29114>   GetD0 &a$
00036BB0 <AmiBlitz3.ab3@29115>   MOVEQ #8,d2
00036BB2 <AmiBlitz3.ab3@29116>   MOVE.l d0,a0
00036BB4 <AmiBlitz3.ab3@29119>     MOVE.b (a0)+,d1
00036BBA <AmiBlitz3.ab3@29120>     JSR writebyte
00036BBE <AmiBlitz3.ab3@29121>  DBF d2,'l1
00036BC0 <AmiBlitz3.ab3@29123>   MOVEQ #0,d0
00036BC2 <AmiBlitz3.ab3@29124>   MOVE.b (a0)+,d0
00036BE0 <AmiBlitz3.ab3@29125>   !asm
00036BE6 <AmiBlitz3.ab3@29126>   ADD.l #9,a5
00036BE8 <AmiBlitz3.ab3@29127> RTS
00036C12 <AmiBlitz3.ab3@29131>   !basic
00036C1C <AmiBlitz3.ab3@29132>   DateFormat 0
00036C2A <AmiBlitz3.ab3@29133>   i.l=SystemDate
00036C50 <AmiBlitz3.ab3@29134>   a$=Date$ (i)
00036CCE <AmiBlitz3.ab3@29135>   a$=Replace$(a$,"/",".")
00036CD4 <AmiBlitz3.ab3@29136>   GetD0 &a$
00036CD6 <AmiBlitz3.ab3@29137>   MOVEQ #8,d2
00036CD8 <AmiBlitz3.ab3@29138>   MOVE.l d0,a0
00036CDA <AmiBlitz3.ab3@29141>     MOVE.b (a0)+,d1
00036CE0 <AmiBlitz3.ab3@29142>     JSR writebyte
00036CE4 <AmiBlitz3.ab3@29143>  DBF d2,'l1
00036CE6 <AmiBlitz3.ab3@29145>   MOVEQ #0,d0
00036CE8 <AmiBlitz3.ab3@29146>   MOVE.b (a0)+,d0
00036D06 <AmiBlitz3.ab3@29147>   !asm
00036D0C <AmiBlitz3.ab3@29148>   ADD.l #13,a5
00036D0E <AmiBlitz3.ab3@29149> RTS
00036D10 <AmiBlitz3.ab3@29153>   MOVE.l d2,-(a7)                                          ; D2 -> stack
00036D12 <AmiBlitz3.ab3@29154>   MOVE.l a5,d0
00036D3C <AmiBlitz3.ab3@29155>   !basic
00036D40 <AmiBlitz3.ab3@29156>   _myD0.l = PutD0
00036D4A <AmiBlitz3.ab3@29157>   If _myD0
00036D90 <AmiBlitz3.ab3@29158>     verstring$ = Left$(Peek.s(_myD0),9+3)
00036DE2 <AmiBlitz3.ab3@29159>     verstring$ = UnRight$(verstring$,3)                      ; Compilerkonstantenbeginn \__ entfernen
00036DE8 <AmiBlitz3.ab3@29160>   Else
00036E22 <AmiBlitz3.ab3@29161>     error{"INTERNAL: Invalid pointer in version_string!"}
00036E32 <AmiBlitz3.ab3@29166>   actual_version.l = Peek.l(?versioninformation)
00036E42 <AmiBlitz3.ab3@29167>   actual_build.l   = Peek.l(?number_of_builds)
00036E66 <AmiBlitz3.ab3@29169>   Format "00"
00036E9C <AmiBlitz3.ab3@29170>   Select verstring$
00036EC0 <AmiBlitz3.ab3@29172>     Case "VER_MAJOR"
00036EFC <AmiBlitz3.ab3@29173>      put_versionstr$ = Str$(actual_version LSR 24)
00036F26 <AmiBlitz3.ab3@29175>     Case "VER_MINOR"
00036F6A <AmiBlitz3.ab3@29176>      put_versionstr$ = Str$((actual_version LSL 8) LSR 24)
00036F94 <AmiBlitz3.ab3@29178>     Case "VER_PATCH"
00036FD8 <AmiBlitz3.ab3@29179>      put_versionstr$ = Str$((actual_version LSL 16) LSR 24 )
00037002 <AmiBlitz3.ab3@29181>     Case "VER_BUILD"
00037026 <AmiBlitz3.ab3@29182>      Format ""
0003705A <AmiBlitz3.ab3@29183>      put_versionstr$ = Str$(actual_build)
00037060 <AmiBlitz3.ab3@29185>     Default
00037088 <AmiBlitz3.ab3@29186>      put_versionstr$ = "{unknown compilerconstant}"
00037096 <AmiBlitz3.ab3@29189>   End Select
000370BA <AmiBlitz3.ab3@29190>   Format ""
000370CA <AmiBlitz3.ab3@29192>   GetD0 FLen(put_versionstr$)                              ; laenge zielstring -> Stack
000370CC <AmiBlitz3.ab3@29193>   MOVE.l d0,d2
000370CE <AmiBlitz3.ab3@29194>   MOVE.l d2,-(a7)
000370D2 <AmiBlitz3.ab3@29195>   SUB #1,d2
000370D8 <AmiBlitz3.ab3@29197>   GetD0 &put_versionstr$                                   ; kopieren des neuen Strings in den Zielstring
000370DA <AmiBlitz3.ab3@29198>   MOVE.l d0,a0
000370DC <AmiBlitz3.ab3@29201>     MOVE.b (a0)+,d1
000370E2 <AmiBlitz3.ab3@29202>     JSR pokedata1b
000370E6 <AmiBlitz3.ab3@29203>  DBF d2,'l1
000370E8 <AmiBlitz3.ab3@29205>   MOVEQ #0,d0
00037106 <AmiBlitz3.ab3@29206>   !asm
00037108 <AmiBlitz3.ab3@29207>   MOVE.l (a7)+,d0                                          ; laenge Zielstring <- Stack
0003710A <AmiBlitz3.ab3@29208>   MOVE.l (a7)+,d2                                          ; d2 <-Stack
0003710C <AmiBlitz3.ab3@29209>   ADD.l d0,d2
00037112 <AmiBlitz3.ab3@29210>   ADD.l #12,a5                                             ; string_ptr um konstante weitersetzen
00037114 <AmiBlitz3.ab3@29211>   MOVEQ #0,d0
00037116 <AmiBlitz3.ab3@29212> RTS
00037118 <AmiBlitz3.ab3@29216>   MOVE.l a5,d0
00037142 <AmiBlitz3.ab3@29217>   !basic
00037146 <AmiBlitz3.ab3@29218>   _myD0.l = PutD0
00037150 <AmiBlitz3.ab3@29219>   If _myD0
00037196 <AmiBlitz3.ab3@29220>     verstring$ = Left$(Peek.s(_myD0),9+3)
000371E8 <AmiBlitz3.ab3@29221>     verstring$ = UnRight$(verstring$,3)                      ; Compilerkonstantenbeginn \__ entfernen
000371EE <AmiBlitz3.ab3@29222>   Else
00037228 <AmiBlitz3.ab3@29223>     error{"INTERNAL: Invalid pointer in version_string_dc!"}
00037238 <AmiBlitz3.ab3@29228>   actual_version.l = Peek.l(?versioninformation)
00037248 <AmiBlitz3.ab3@29229>   actual_build.l   = Peek.l(?number_of_builds)
0003726C <AmiBlitz3.ab3@29231>   Format ""
000372A2 <AmiBlitz3.ab3@29232>   Select verstring$
000372C6 <AmiBlitz3.ab3@29234>     Case "VER_MAJOR"
00037302 <AmiBlitz3.ab3@29235>      put_versionstr$ = Str$(actual_version LSR 24)
0003732C <AmiBlitz3.ab3@29237>     Case "VER_MINOR"
00037370 <AmiBlitz3.ab3@29238>      put_versionstr$ = Str$((actual_version LSL 8) LSR 24)
0003739A <AmiBlitz3.ab3@29240>     Case "VER_PATCH"
000373DE <AmiBlitz3.ab3@29241>      put_versionstr$ = Str$((actual_version LSL 16) LSR 24 )
00037408 <AmiBlitz3.ab3@29243>     Case "VER_BUILD"
0003742C <AmiBlitz3.ab3@29244>      Format ""
00037460 <AmiBlitz3.ab3@29245>      put_versionstr$ = Str$(actual_build)
00037466 <AmiBlitz3.ab3@29247>     Default
0003748E <AmiBlitz3.ab3@29248>      put_versionstr$ = "{unknown compilerconstant}"
0003749C <AmiBlitz3.ab3@29250>   End Select
000374C0 <AmiBlitz3.ab3@29251>   Format ""
000374D6 <AmiBlitz3.ab3@29253>   GetD0 FLen(put_versionstr$)-1
000374D8 <AmiBlitz3.ab3@29254>   MOVE.l d0,d2
000374DE <AmiBlitz3.ab3@29256>   GetD0 &put_versionstr$                                   ; kopieren des neuen Strings in den Zielstring
000374E0 <AmiBlitz3.ab3@29257>   MOVE.l d0,a0
000374E2 <AmiBlitz3.ab3@29260>     MOVE.b (a0)+,d1
000374E8 <AmiBlitz3.ab3@29261>     JSR writebyte
000374EC <AmiBlitz3.ab3@29262>  DBF d2,'l1
000374EE <AmiBlitz3.ab3@29264>   MOVEQ #0,d0
000374F0 <AmiBlitz3.ab3@29265>   MOVE.b -(a0),d0                                          ; letztes Zeichen in D0
0003750E <AmiBlitz3.ab3@29266>   !asm
00037514 <AmiBlitz3.ab3@29267>   ADD.l #12,a5                                             ; string_ptr um konstante weitersetzen
00037516 <AmiBlitz3.ab3@29268> RTS
00037518 <AmiBlitz3.ab3@29370>   MOVE.l a5,-(a7)
00037544 <AmiBlitz3.ab3@29371>   !fget
00037548 <AmiBlitz3.ab3@29372>   CMP.w #".",d0
0003754C <AmiBlitz3.ab3@29373>   BNE 'skip
00037550 <AmiBlitz3.ab3@29374>   MOVEM.l a2/d2,-(a7)
00037556 <AmiBlitz3.ab3@29375>   LEA newtypebase,a2
0003755C <AmiBlitz3.ab3@29376>   JSR getparameter2
00037560 <AmiBlitz3.ab3@29377>   BEQ.w JUMP_syntaxerr
00037566 <AmiBlitz3.ab3@29378>   JSR findtype
0003756A <AmiBlitz3.ab3@29379>   BNE.w JUMP_notypeerr2
00037570 <AmiBlitz3.ab3@29380>   MOVE.l a2,typetocast
00037574 <AmiBlitz3.ab3@29381>   MOVEM.l (a7)+,a2/d2
00037578 <AmiBlitz3.ab3@29382>   CMP.w #")",d0
0003757C <AmiBlitz3.ab3@29383>   BNE JUMP_errorbracketmiss
0003757E <AmiBlitz3.ab3@29384>   ADDQ.l #4,a7
000375AA <AmiBlitz3.ab3@29385>   !fget
000375B0 <AmiBlitz3.ab3@29386>   JMP nocast
000375B2 <AmiBlitz3.ab3@29389>   MOVE.l (a7)+,a5
000375B8 <AmiBlitz3.ab3@29390> JMP bracket
000375BE <AmiBlitz3.ab3@29393> JUMP_errorbracketmiss JMP errorbracketmiss
000375E8 <AmiBlitz3.ab3@29396> Function.l ab3_GetIncludeLock{filename.s}
00037608 <AmiBlitz3.ab3@29397>   incLock.l  = Lock_ (&filename,#ACCESS_READ)   ; try bla.blub
00037660 <AmiBlitz3.ab3@29398>   ex.s       = dos_GetExt{filename}
00037674 <AmiBlitz3.ab3@29400>   If incLock = False
000376E8 <AmiBlitz3.ab3@29401>     filename = dos_SetExt{filename,"ab3"}
00037708 <AmiBlitz3.ab3@29402>     incLock  = Lock_ (&filename,#ACCESS_READ)   ; try bla.ab3
0003771C <AmiBlitz3.ab3@29405>   If incLock = False
00037790 <AmiBlitz3.ab3@29406>     filename = dos_SetExt{filename,"ab2"}
000377B0 <AmiBlitz3.ab3@29407>     incLock  = Lock_ (&filename,#ACCESS_READ)   ; try bla.ab2
000377C4 <AmiBlitz3.ab3@29410>   If incLock = False
00037838 <AmiBlitz3.ab3@29411>     filename = dos_SetExt{filename,"bb2"}
00037858 <AmiBlitz3.ab3@29412>     incLock  = Lock_ (&filename,#ACCESS_READ)   ; try bla.bb2
0003786C <AmiBlitz3.ab3@29415>   If incLock = False
000378FE <AmiBlitz3.ab3@29416>     filename = dos_SetExt{filename,ex+".ab3"}
0003791E <AmiBlitz3.ab3@29417>     incLock  = Lock_ (&filename,#ACCESS_READ)   ; try bla.blub.ab3
00037932 <AmiBlitz3.ab3@29420>   If incLock = False
000379A6 <AmiBlitz3.ab3@29421>     filename = dos_SetExt{filename,"ab2"}
000379C6 <AmiBlitz3.ab3@29422>     incLock  = Lock_ (&filename,#ACCESS_READ)   ; try bla.blub.ab2
000379DA <AmiBlitz3.ab3@29425>   If incLock = False
00037A4E <AmiBlitz3.ab3@29426>     filename = dos_SetExt{filename,"bb2"}
00037A6E <AmiBlitz3.ab3@29427>     incLock  = Lock_ (&filename,#ACCESS_READ)   ; try bla.blub.bb2
00037A78 <AmiBlitz3.ab3@29430>  Function Return incLock
00037A92 <AmiBlitz3.ab3@29431> End Function
00037ABC <AmiBlitz3.ab3@29435>   !basic
00037AE6 <AmiBlitz3.ab3@29436>   incString.s = Peek$(?ptr_parameterstore)
00037B14 <AmiBlitz3.ab3@29438>   !ComData_LEA{comStr_CurrentDir,D0}                        ; get pointer to current Sourcefiledir
00037B18 <AmiBlitz3.ab3@29439>   incDirP.l   = PutD0                                       ;    "
00037B40 <AmiBlitz3.ab3@29440>   incDir_.s   = Peek.s(incDirP)                             ; get current Sourcefiledir
00037BC0 <AmiBlitz3.ab3@29441>   incFile.s   = dos_AddPart{incDir_,incString}              ; adding Sourcefiledir and Includestring
00037BF2 <AmiBlitz3.ab3@29442>   incLock.l   = ab3_GetIncludeLock{incFile}                 ; check if file exist
00037C06 <AmiBlitz3.ab3@29444>   If incLock = False ; not found => check default Include Directory
00037C16 <AmiBlitz3.ab3@29445>     incDirP.l = Peek.l(?incd)
00037C20 <AmiBlitz3.ab3@29446>     If incDirP
00037C48 <AmiBlitz3.ab3@29447>       incDir_.s = Peek.s(incDirP)
00037C4E <AmiBlitz3.ab3@29448>     Else
00037CB8 <AmiBlitz3.ab3@29449>       incDir_.s = dos_AddPart{Peek.s(?str_blitz3assign),"Sourcecodes/Includes"}
00037D38 <AmiBlitz3.ab3@29451>     incFile.s = dos_AddPart{incDir_,incString}
00037D6A <AmiBlitz3.ab3@29452>     incLock.l = ab3_GetIncludeLock{incFile}
00037D7E <AmiBlitz3.ab3@29455>   If incLock = False ; not found => check relative to current source
00037D96 <AmiBlitz3.ab3@29456>     incDepth.l = Peek.w(?ininclude)-1
00037DBC <AmiBlitz3.ab3@29457>     If incDepth >= 0 AND incDepth < #maxincludes
00037E1C <AmiBlitz3.ab3@29458>       incDir_.s = dos_PathPart{incdim (incDepth)} ;= Peek.s(?includetemp2)
00037E9C <AmiBlitz3.ab3@29459>       incFile.s = dos_AddPart{incDir_,incString}
00037ECE <AmiBlitz3.ab3@29460>       incLock.l = ab3_GetIncludeLock{incFile}
00037EE2 <AmiBlitz3.ab3@29464>   If incLock = False ; still not found => check default Include Directory and name only
00037EF2 <AmiBlitz3.ab3@29465>     incDirP.l = Peek.l(?incd)
00037EFC <AmiBlitz3.ab3@29466>     If incDirP
00037F24 <AmiBlitz3.ab3@29467>       incDir_.s = Peek.s(incDirP)
00037F2A <AmiBlitz3.ab3@29468>     Else
00037F94 <AmiBlitz3.ab3@29469>       incDir_.s = dos_AddPart{Peek.s(?str_blitz3assign),"Sourcecodes/Includes"}
00038042 <AmiBlitz3.ab3@29471>     incFile.s = dos_AddPart{incDir_,dos_FilePart{incString}}
00038074 <AmiBlitz3.ab3@29472>     incLock.l = ab3_GetIncludeLock{incFile}
0003807E <AmiBlitz3.ab3@29475>   If incLock
00038094 <AmiBlitz3.ab3@29476>     MaxLen incFile = 1024
000380B8 <AmiBlitz3.ab3@29477>     NameFromLock_ incLock,&incFile,1024
000380E2 <AmiBlitz3.ab3@29478>     incFile = Peek.s(&incFile)
0003811A <AmiBlitz3.ab3@29479>     Poke$ ?ptr_parameterstore,incFile
0003812E <AmiBlitz3.ab3@29480>     i = FLen(incFile)
0003813A <AmiBlitz3.ab3@29481>     GetReg d0,i
00038140 <AmiBlitz3.ab3@29482>     MOVE.l d0,tempstore
00038150 <AmiBlitz3.ab3@29483>     UnLock_ incLock
0003816E <AmiBlitz3.ab3@29486>   !asm
00038174 <AmiBlitz3.ab3@29487>   TST.l tempstore
00038178 <AmiBlitz3.ab3@29488>    BEQ 'l1
0003817E <AmiBlitz3.ab3@29489>   MOVE.l tempstore,d2
00038180 <AmiBlitz3.ab3@29492> RTS
000381AA <AmiBlitz3.ab3@29496>   !basic
000381D4 <AmiBlitz3.ab3@29497>   incString.s = Peek$(?ptr_parameterstore)                  ; get the string
00038202 <AmiBlitz3.ab3@29498>   !ComData_LEA{comStr_CurrentDir,D0}                        ; get pointer to current Sourcefiledir
00038206 <AmiBlitz3.ab3@29499>   incDirP.l   = PutD0                                       ;    "
0003822E <AmiBlitz3.ab3@29500>   incDir_.s   = Peek.s(incDirP)                             ; get current Sourcefiledir
000382AE <AmiBlitz3.ab3@29501>   incFile.s   = dos_AddPart{incDir_,incString}              ; adding Sourcefiledir and Includestring
000382CE <AmiBlitz3.ab3@29502>   incLock.l   = Lock_(&incFile,#ACCESS_READ)                ; check if file exist
000382E2 <AmiBlitz3.ab3@29504>   If incLock = False                                        ; not found => try orignal string only to find
00038302 <AmiBlitz3.ab3@29505>     incLock.l = Lock_(&incString,#ACCESS_READ)
0003830C <AmiBlitz3.ab3@29508>   If incLock                                                ; found => store full path
00038322 <AmiBlitz3.ab3@29509>     MaxLen incFile = 1024
00038346 <AmiBlitz3.ab3@29510>     NameFromLock_ incLock,&incFile,1024
00038370 <AmiBlitz3.ab3@29511>     incFile = Peek.s(&incFile)
000383A8 <AmiBlitz3.ab3@29512>     Poke$ ?ptr_parameterstore,incFile
000383B4 <AmiBlitz3.ab3@29515> 
000383D2 <AmiBlitz3.ab3@29516>   !asm
000383D4 <AmiBlitz3.ab3@29517> RTS
000383DA <AmiBlitz3.ab3@29528>   JSR Aclearallvars
000383E0 <AmiBlitz3.ab3@29529>   JSR free_unusedfunctions
000383EA <AmiBlitz3.ab3@29544>   MOVE.l #"NORE",reqmode
000383F0 <AmiBlitz3.ab3@29545> JSR handle_compileerror
000383F2 <AmiBlitz3.ab3@29548>   MOVE.l d0,-(a7)
000383F4 <AmiBlitz3.ab3@29549>   MOVE.l a5,d0
000383FE <AmiBlitz3.ab3@29550>   !basica7
00038402 <AmiBlitz3.ab3@29551>   i.l = PutD0
0003840C <AmiBlitz3.ab3@29552>   If i
00038434 <AmiBlitz3.ab3@29553>     a$ = Peek$(i)
00038466 <AmiBlitz3.ab3@29554>     b$ = Peeks$(i-7,7)
0003859E <AmiBlitz3.ab3@29556> 
000385A4 <AmiBlitz3.ab3@29557>     MOVE.l d0,result
000385A8 <AmiBlitz3.ab3@29559>   !asma7
000385AA <AmiBlitz3.ab3@29560>   MOVE.l (a7)+,d0
000385AC <AmiBlitz3.ab3@29561> RTS
000385D6 <AmiBlitz3.ab3@29565>   !basic
00038604 <AmiBlitz3.ab3@29566>   !ComData_LEA{comStr_CurrentDir,D0}
00038608 <AmiBlitz3.ab3@29567>   currentDirP.l = PutD0
00038636 <AmiBlitz3.ab3@29569>   !ComData_LEA{comStr_SourceName,D0}
0003863A <AmiBlitz3.ab3@29570>   fileNameP.l = PutD0
00038662 <AmiBlitz3.ab3@29572>   check_dirname$  = Peek$(currentDirP)
0003868A <AmiBlitz3.ab3@29573>   check_filename$ = Peek$(fileNameP)
00038710 <AmiBlitz3.ab3@29574>   If (olddirname$<>check_dirname$) OR (oldfilename$<>check_filename$)
00038716 <AmiBlitz3.ab3@29575>     JSR free_unusedfunctions
00038760 <AmiBlitz3.ab3@29577>   olddirname$ = Peek$(check_dirname$)
000387AA <AmiBlitz3.ab3@29578>   oldfilename$ = Peek$(check_filename$)
000387D4 <AmiBlitz3.ab3@29579>   For i = 0 To #maxincludes-1
000387E8 <AmiBlitz3.ab3@29580>     incline(i) = 0
000387F8 <AmiBlitz3.ab3@29581>   Next
00038816 <AmiBlitz3.ab3@29582>   !asm
00038818 <AmiBlitz3.ab3@29583> RTS
0003881A <AmiBlitz3.ab3@29587>   MOVEQ #0,d1
0003881C <AmiBlitz3.ab3@29590>   MOVE.b (a5)+,d0
00038820 <AmiBlitz3.ab3@29591>   BEQ 'er1
00038824 <AmiBlitz3.ab3@29592>   CMP.b #$20,d0
00038828 <AmiBlitz3.ab3@29593>   BEQ 'l1
0003882A <AmiBlitz3.ab3@29594>   ADDQ #1,d1
0003882E <AmiBlitz3.ab3@29595>   CMP.b #$22,d0
00038832 <AmiBlitz3.ab3@29596>   BNE 'l1
00038834 <AmiBlitz3.ab3@29597>  RTS
0003883A <AmiBlitz3.ab3@29600> JMP syntaxerr
0003885E <AmiBlitz3.ab3@29604> erro1t   Dc.b "Only one BSS / Chip Segment allowed",0 : Even
0003887C <AmiBlitz3.ab3@29605> nodata   Dc.b "BSS Segment contains Data!!!!",0       : Even
00038882 <AmiBlitz3.ab3@29610>   TST.b exdebug
00038886 <AmiBlitz3.ab3@29611>   BNE 'l10
0003888C <AmiBlitz3.ab3@29612>   MOVE.l #$4e71,d1
00038892 <AmiBlitz3.ab3@29613>   JSR writeword
00038898 <AmiBlitz3.ab3@29614>   MOVE.l destpointer,d0
0003889A <AmiBlitz3.ab3@29615>   MOVE.l d0,d1
0003889C <AmiBlitz3.ab3@29616>   ADDQ.l #3,d1
000388A2 <AmiBlitz3.ab3@29617>   AND.l #$fffffffc,d1
000388A8 <AmiBlitz3.ab3@29618>   MOVE.l d1,destpointer
000388AE <AmiBlitz3.ab3@29619>   SUB.l destpointer,d0
000388B2 <AmiBlitz3.ab3@29620>   BEQ 'lnf1
000388BC <AmiBlitz3.ab3@29621>   CMP.l #-1,bssstart
000388C0 <AmiBlitz3.ab3@29622>   BNE 'lnf1
000388CA <AmiBlitz3.ab3@29623>   CMP.l #-1,chipstart
000388CE <AmiBlitz3.ab3@29624>   BNE 'lnf1
000388D4 <AmiBlitz3.ab3@29625>   MOVE.l destpointer,a4
000388DA <AmiBlitz3.ab3@29626>   TST.w dontwrite_nomemleft
000388DE <AmiBlitz3.ab3@29627>   BNE 'lnf1
000388E4 <AmiBlitz3.ab3@29628>   MOVE.w #$4e71,-2(a4)
000388EE <AmiBlitz3.ab3@29631>   CMP.l #-1,bssstart
000388F2 <AmiBlitz3.ab3@29632>   BEQ 'l11
000388F8 <AmiBlitz3.ab3@29633>   MOVE.l #erro1t,-(a7)
000388FE <AmiBlitz3.ab3@29634>  JMP handle_compileerror
00038908 <AmiBlitz3.ab3@29637>   MOVE.l destpointer,bssstart
00038910 <AmiBlitz3.ab3@29638>   MOVE.b #1,bssmode
00038916 <AmiBlitz3.ab3@29641>   TST.b chipmode
0003891A <AmiBlitz3.ab3@29642>   BEQ 'l10
00038924 <AmiBlitz3.ab3@29643>   MOVE.l destpointer,chipend
0003892A <AmiBlitz3.ab3@29644>   CLR.b chipmode
00038930 <AmiBlitz3.ab3@29647>   JSR get1bytemain
00038932 <AmiBlitz3.ab3@29648> RTS
00038938 <AmiBlitz3.ab3@29652>    TST.b exdebug
0003893C <AmiBlitz3.ab3@29653>   BNE 'x1
00038942 <AmiBlitz3.ab3@29654>   MOVE.l destpointer,d0
00038948 <AmiBlitz3.ab3@29655>   MOVE.l d0,realbssend
0003894E <AmiBlitz3.ab3@29656>   MOVE.l #$4e71,d1
00038954 <AmiBlitz3.ab3@29657>   JSR writeword
0003895A <AmiBlitz3.ab3@29658>   MOVE.l destpointer,d0
0003895C <AmiBlitz3.ab3@29659>   MOVE.l d0,d1
0003895E <AmiBlitz3.ab3@29660>   ADDQ.l #3,d1
00038964 <AmiBlitz3.ab3@29661>   AND.l #$fffffffc,d1
0003896A <AmiBlitz3.ab3@29662>   MOVE.l d1,destpointer
00038970 <AmiBlitz3.ab3@29663>   SUB.l destpointer,d0
00038974 <AmiBlitz3.ab3@29664>   BEQ 'lnf1
0003897A <AmiBlitz3.ab3@29665>   MOVE.l destpointer,a4
00038984 <AmiBlitz3.ab3@29666>   CMP.l #-1,bssstart
00038988 <AmiBlitz3.ab3@29667>   BNE 'lnf1
00038992 <AmiBlitz3.ab3@29668>   CMP.l #-1,chipstart
00038996 <AmiBlitz3.ab3@29669>   BNE 'lnf1
0003899C <AmiBlitz3.ab3@29670>   TST.w dontwrite_nomemleft
000389A0 <AmiBlitz3.ab3@29671>   BNE 'lnf1
000389A6 <AmiBlitz3.ab3@29672>   MOVE.w #$4e71,-2(a4)
000389AC <AmiBlitz3.ab3@29675>   TST.b bssmode
000389B0 <AmiBlitz3.ab3@29676>   BEQ 'l10
000389BA <AmiBlitz3.ab3@29677>   MOVE.l destpointer,bssend
000389C0 <AmiBlitz3.ab3@29678>   CLR.b bssmode
000389CA <AmiBlitz3.ab3@29683>   CMP.l #-1,chipstart
000389CE <AmiBlitz3.ab3@29684>   BEQ 'l11
000389D4 <AmiBlitz3.ab3@29685>   MOVE.l #erro1t,-(a7)
000389DA <AmiBlitz3.ab3@29686>  JMP handle_compileerror
000389E4 <AmiBlitz3.ab3@29689>   MOVE.l destpointer,chipstart
000389EC <AmiBlitz3.ab3@29690>   MOVE.b #1,chipmode
000389F2 <AmiBlitz3.ab3@29693>   JSR get1bytemain
000389F4 <AmiBlitz3.ab3@29694> RTS
00038A1E <AmiBlitz3.ab3@29698>   !basic
00038A30 <AmiBlitz3.ab3@29708>   i.l = Peek.w(?ininclude)
00038A56 <AmiBlitz3.ab3@29709>   If i>=0 AND i<#maxincludes
00038A88 <AmiBlitz3.ab3@29710>     incdim (i) = Peek.s(?includetemp2)
00038AA2 <AmiBlitz3.ab3@29711>     incline(i) = Peek.l(?includeline)
00038AAC <AmiBlitz3.ab3@29713>     If CLIMode
00038B5A <AmiBlitz3.ab3@29714>       If cli_verbose>=2 Then NPrint "Include \\22",incdim(i),"\\22..."
00038B78 <AmiBlitz3.ab3@29718>   !asm
00038B7A <AmiBlitz3.ab3@29719> RTS
00038BA4 <AmiBlitz3.ab3@29723>   !basic
00038BB6 <AmiBlitz3.ab3@29724>   i.l = Peek.w(?ininclude)
00038BDC <AmiBlitz3.ab3@29725>   If i>=0 AND i<#maxincludes
00038C0C <AmiBlitz3.ab3@29726>     incdim (i) = ""
00038C20 <AmiBlitz3.ab3@29727>     incline(i) = 0
00038C58 <AmiBlitz3.ab3@29728>     If i>0 Then Poke.l (?includeline),incline(i-1)+1
00038C76 <AmiBlitz3.ab3@29730>   !asm
00038C78 <AmiBlitz3.ab3@29731> RTS
00038C7E <AmiBlitz3.ab3@29735>   LEA replacedat,a0
00038C82 <AmiBlitz3.ab3@29736>   Dc.w $3181,$0A00                                         ;MOVE.w d1,0(a0,d0.l*2)
00038C84 <AmiBlitz3.ab3@29737> RTS
00038C8A <AmiBlitz3.ab3@29741>   TST.b fpu
00038C8E <AmiBlitz3.ab3@29742>   BEQ 'l1
00038C98 <AmiBlitz3.ab3@29745>   MOVE.l destpointer,newinitaddr
00038C9E <AmiBlitz3.ab3@29746>   JSR writeword
00038CA4 <AmiBlitz3.ab3@29747>   JSR writelong
00038CA6 <AmiBlitz3.ab3@29748> RTS
00038CA8 <AmiBlitz3.ab3@29753>   TST.b (a5)
00038CAC <AmiBlitz3.ab3@29754>    BEQ.s 'll20
00038CB0 <AmiBlitz3.ab3@29755>   CMP.b #$20,(a5)
00038CB4 <AmiBlitz3.ab3@29756>    BNE.s 'll10
00038CB6 <AmiBlitz3.ab3@29757>   ADDQ.l #1,a5
00038CBA <AmiBlitz3.ab3@29758>  BRA.s 'll21
00038CBE <AmiBlitz3.ab3@29761>   CMP.b #";",(a5)
00038CC2 <AmiBlitz3.ab3@29762>   BNE.s 'll20
00038CC4 <AmiBlitz3.ab3@29765>   TST.b (a5)+
00038CC8 <AmiBlitz3.ab3@29766>   BEQ.s 'll23
00038CCC <AmiBlitz3.ab3@29767>  BRA.s 'll25
00038CCE <AmiBlitz3.ab3@29770>   SUBQ.l #1,a5
00038CD0 <AmiBlitz3.ab3@29773> RTS
00038CD4 <AmiBlitz3.ab3@29777>   MOVEM.l a2/d2,-(a7)
00038CD6 <AmiBlitz3.ab3@29778>   MOVEQ #0,d2
00038CDC <AmiBlitz3.ab3@29779>   LEA ptr_parameterstore,a0
00038CE2 <AmiBlitz3.ab3@29780>   LEA chartab,a2
00038CE4 <AmiBlitz3.ab3@29783>   MOVE.b (a5),d0
00038CE8 <AmiBlitz3.ab3@29784>   TST.b 0(a2,d0)
00038CEC <AmiBlitz3.ab3@29785>   BNE 'l10
00038CEE <AmiBlitz3.ab3@29786>   ADDQ.l #1,a5
00038CF0 <AmiBlitz3.ab3@29787>   MOVE.b d0,(a0)+
00038CF2 <AmiBlitz3.ab3@29788>   ADDQ.l #1,d2
00038CF6 <AmiBlitz3.ab3@29789>  BRA fc2
00038CF8 <AmiBlitz3.ab3@29792>   CLR.b (a0)+
00038CFE <AmiBlitz3.ab3@29793>   JSR findlabel2
00038D00 <AmiBlitz3.ab3@29794>   MOVE.l a2,a0
00038D04 <AmiBlitz3.ab3@29795>   MOVEM.l (a7)+,a2/d2
00038D06 <AmiBlitz3.ab3@29796> RTS
00038D08 <AmiBlitz3.ab3@29800>   TST.l d0
00038D0C <AmiBlitz3.ab3@29801>   BNE 'l10
00038D12 <AmiBlitz3.ab3@29802>     MOVE.l #syntax_,-(a7)
00038D18 <AmiBlitz3.ab3@29803>  JMP handle_compileerror
00038D1E <AmiBlitz3.ab3@29806>   CMP.l #1,d0
00038D22 <AmiBlitz3.ab3@29807>   BNE 'l20
00038D28 <AmiBlitz3.ab3@29808>     MOVE.l #overflow,-(a7)
00038D2E <AmiBlitz3.ab3@29809>  JMP handle_compileerror
00038D30 <AmiBlitz3.ab3@29812>   ADD.l a2,d0
00038D32 <AmiBlitz3.ab3@29813>   MOVE.l d0,-(a7)
00038D38 <AmiBlitz3.ab3@29814> JMP handle_compileerror
00038D3E <AmiBlitz3.ab3@29818>   JMP _return
00038D44 <AmiBlitz3.ab3@29819>   JMP _return
00038D4A <AmiBlitz3.ab3@29820>   JMP _return
00038D50 <AmiBlitz3.ab3@29821>   JMP _return
00038D56 <AmiBlitz3.ab3@29822>   JMP _return
00038D5C <AmiBlitz3.ab3@29823>   JMP _return
00038D62 <AmiBlitz3.ab3@29824>   JMP _return
00038D68 <AmiBlitz3.ab3@29825>   JMP _return
00038D6E <AmiBlitz3.ab3@29826>   JMP _return
00038D74 <AmiBlitz3.ab3@29827>   JMP _return
00038D7A <AmiBlitz3.ab3@29828>   JMP Atokejsr
00038D80 <AmiBlitz3.ab3@29829>   JMP writeinit
00038D86 <AmiBlitz3.ab3@29830>   JMP macroexecute
00038D8C <AmiBlitz3.ab3@29831>   JMP findnext
00038D92 <AmiBlitz3.ab3@29832>   JMP replacelib
00038D98 <AmiBlitz3.ab3@29833>   JMP findconstant2
00038D9E <AmiBlitz3.ab3@29834>   JMP findchar                                             ;char in d1
00038DA4 <AmiBlitz3.ab3@29835>   JMP stripspaces
00038DAA <AmiBlitz3.ab3@29836>   JMP calc                                                 ;d0 varmode
00038DB0 <AmiBlitz3.ab3@29837>   JMP error
00038DB6 <AmiBlitz3.ab3@29838>   JMP writelong                                            ;d1 value
00038DBC <AmiBlitz3.ab3@29839>   JMP writeword                                            ;d1 value
00038DC2 <AmiBlitz3.ab3@29840>   JMP writebyte                                            ;d1 value
00038DC8 <AmiBlitz3.ab3@29841> JMP exit
00038DCC <AmiBlitz3.ab3@29845>   destpointer:    Ds.l 1                                ;pc org source      ;Ds.w 1
00038DCE <AmiBlitz3.ab3@29848>   fast            Dc.w 0
00038DD0 <AmiBlitz3.ab3@29849>   fpu             Dc.w 0
00038DD2 <AmiBlitz3.ab3@29850>   newsyntax       Dc.w 0
00038DD3 <AmiBlitz3.ab3@29852>   optistring      Dc.b 0
00038DD4 <AmiBlitz3.ab3@29853>   optistring2     Dc.b 0
00038DD5 <AmiBlitz3.ab3@29854>   optiarray       Dc.b 0
00038DD6 <AmiBlitz3.ab3@29855>   quickadd        Dc.b 0
00038DD8 <AmiBlitz3.ab3@29856>   newmode         Dc.w 0
00038DDA <AmiBlitz3.ab3@29857>   mode            Dc.w 0
00038DDC <AmiBlitz3.ab3@29858>   string1         Dc.w 0
00038DDE <AmiBlitz3.ab3@29859>   load_var_size   Dc.w 0
00038DE0 <AmiBlitz3.ab3@29860>   load_var_reg    Dc.w 0
00038DE4 <AmiBlitz3.ab3@29861>   load_var_addr   Dc.l 0
00038DE6 <AmiBlitz3.ab3@29862>   imm_size        Dc.w 0
00038DE8 <AmiBlitz3.ab3@29863>   imm_reg         Dc.w 0
00038DEC <AmiBlitz3.ab3@29864>   imm_addr        Dc.l 0
00038DED <AmiBlitz3.ab3@29865>   iee             Dc.b 0
00038DEE <AmiBlitz3.ab3@29866>   _dcb            Dc.b 0
00038DF2 <AmiBlitz3.ab3@29867>   nohunkoffset    Dc.l 0
00038DF6 <AmiBlitz3.ab3@29870> teddata:        Dc.l tokens
00038DFA <AmiBlitz3.ab3@29871>                 Dc.l 0 ;compilermenu_entries               ; NOT used anymore
00038DFE <AmiBlitz3.ab3@29872>                 Dc.l read_xtrafile
00038E02 <AmiBlitz3.ab3@29873>                 Dc.l write_xtrafile
00038E06 <AmiBlitz3.ab3@29874>                 Dc.l call_menuentry                        ; compile AND RUN ?
00038E0A <AmiBlitz3.ab3@29875>                 Dc.l 0
00038E0E <AmiBlitz3.ab3@29876>                 Dc.b ":",34,".;"
00038E12 <AmiBlitz3.ab3@29877>                 Dc.l "NEW1"
00038E16 <AmiBlitz3.ab3@29878>                 Dc.l newtypebase
00038E1A <AmiBlitz3.ab3@29879> realconstbase:  Dc.l labelbase
00038E1E <AmiBlitz3.ab3@29880> deflib          Dc.l 0
00038E22 <AmiBlitz3.ab3@29881> incd            Dc.l 0
00038E26 <AmiBlitz3.ab3@29882>                 Dc.l 0
00038E2A <AmiBlitz3.ab3@29883>                 Dc.l 0
00038E2E <AmiBlitz3.ab3@29884>                 Dc.l 0
00038E30 <AmiBlitz3.ab3@29885> _return         RTS
00038E31 <AmiBlitz3.ab3@29886>                 Dc.b 0
00039231 <AmiBlitz3.ab3@29887> chartab2        Ds.l 256
00039235 <AmiBlitz3.ab3@29888> codeend         Dc.l 0
00039239 <AmiBlitz3.ab3@29889> hunkoffsetnum   Dc.l 0
0003923D <AmiBlitz3.ab3@29890> chipsize        Dc.l 0
00039241 <AmiBlitz3.ab3@29891> bsssize         Dc.l 0
00039245 <AmiBlitz3.ab3@29892> bssstart        Dc.l -1
00039249 <AmiBlitz3.ab3@29893> bssend          Dc.l -1
0003924D <AmiBlitz3.ab3@29894> chipstart       Dc.l -1
00039251 <AmiBlitz3.ab3@29895> chipend         Dc.l -1
00039252 <AmiBlitz3.ab3@29896> bssmode         Dc.b 0
00039253 <AmiBlitz3.ab3@29897> chipmode        Dc.b 0
00039254 <AmiBlitz3.ab3@29898> newhunk         Dc.b 0
00039258 <AmiBlitz3.ab3@29899> bssnum          Dc.l 0
0003925C <AmiBlitz3.ab3@29900> chipnum         Dc.l 0
00039260 <AmiBlitz3.ab3@29901> lastinstruction Dc.l 0
00039264 <AmiBlitz3.ab3@29902> lastinstructionaddr Dc.l 0
00039278 <AmiBlitz3.ab3@29903> hunkbegin       Dc.l $03F3,$00,$02,$00,$01
0003927C <AmiBlitz3.ab3@29904> tstsize1b:      Ds.l 1
00039280 <AmiBlitz3.ab3@29905> bsssize2        Dc.l 1
00039284 <AmiBlitz3.ab3@29906>                 Dc.l $03E9
00039288 <AmiBlitz3.ab3@29907> tstsize2b:      Dc.l $100
0003929C <AmiBlitz3.ab3@29908> hunkbegin2      Dc.l $03F3,$00,$03,$00,$02
000392A0 <AmiBlitz3.ab3@29909> tstsize1c:      Ds.l 1
000392A4 <AmiBlitz3.ab3@29910> bsssize3        Dc.l 1
000392A8 <AmiBlitz3.ab3@29911> chipsize2       Dc.l 1
000392AC <AmiBlitz3.ab3@29912>                 Dc.l $3e9
000392B0 <AmiBlitz3.ab3@29913> tstsize2c       Dc.l 0
000392C0 <AmiBlitz3.ab3@29914> hunkend         Dc.l $3f2,$3eb,0,$3f2
000392D0 <AmiBlitz3.ab3@29915> hunkend2        Dc.l $3f2,$3ea,0,$3f2
000392D7 <AmiBlitz3.ab3@29916> strcpy          Dc.b "strcpy",0
000392DE <AmiBlitz3.ab3@29917> strcmp          Dc.b "strcmp",0
000392E5 <AmiBlitz3.ab3@29918> strvar          Dc.b "strvar",0
000392EA <AmiBlitz3.ab3@29919> qmul            Dc.b "qmul",0
000392EF <AmiBlitz3.ab3@29920> qdiv            Dc.b "qdiv",0
000392F6 <AmiBlitz3.ab3@29921> _MaxLen         Dc.b "maxlen",0
000392FB <AmiBlitz3.ab3@29922> notf            Dc.b "????",0
0003931E <AmiBlitz3.ab3@29924> errtext         Dc.b "only reg addressing Mode supported",0
00039348 <AmiBlitz3.ab3@29925> fpuerr          Dc.b "Instruction not yet supported by 68K FPU ",0
0003938A <AmiBlitz3.ab3@29926> cmplxerr        Dc.b "Formula too complex for 68K FPU or too much regload register used",0 : Even
0003938C <AmiBlitz3.ab3@29927> peeksize        Dc.w 0
00039390 <AmiBlitz3.ab3@29929> mainstart       Dc.l 0
00039391 <AmiBlitz3.ab3@29931> infunctioncode  Dc.b 0
00039393 <AmiBlitz3.ab3@29932> regnumstore     Dc.w 0
000393C0 <AmiBlitz3.ab3@29933>                 Dc.b "$VER: AmiBlitz3 \\__VER_MAJOR.\\__VER_MINOR (\\__DATE_GER__) Build \\__VER_PATCH.\\__VER_BUILD",0 : Even
000393C8 <AmiBlitz3.ab3@29934> testcode        Dc.b "print i",0
0003942C <AmiBlitz3.ab3@29935>                 Ds.b 100
0003943A <AmiBlitz3.ab3@29936> devo            Dc.b "developobject",0 : Even
0003944C <AmiBlitz3.ab3@29937> autostorename   Dc.b "__autoconstantnum",0
00039456 <AmiBlitz3.ab3@29938> _include        Dc.b "__include",0
0003945E <AmiBlitz3.ab3@29939> _debug          Dc.b "__debug",0
00039462 <AmiBlitz3.ab3@29940> unusedfunc      Dc.l 0
00039464 <AmiBlitz3.ab3@29944>   MOVE.l a0,d0
0003948E <AmiBlitz3.ab3@29945>   !basic
00039492 <AmiBlitz3.ab3@29946>   *olderror.l= PutD0
000394EC <AmiBlitz3.ab3@29947> 
00039520 <AmiBlitz3.ab3@29948>   error_type$ = error$
000395BC <AmiBlitz3.ab3@29949> 
000395D0 <AmiBlitz3.ab3@29950>   If Peek.l (?beforeparameterfetch)
000395E6 <AmiBlitz3.ab3@29951>     MaxLen detokenline.s = #MAX_Columns+1        ; was 65536  changed it to the max size of a sourceline  tomsmart1
00039628 <AmiBlitz3.ab3@29952>    !ComData_GetL{comPtr_PreProcessor,include_preprocessor}
00039638 <AmiBlitz3.ab3@29953>    *tn.preprocessor = Peek.l(?include_preprocessor)
00039662 <AmiBlitz3.ab3@29954>     written.l = preproc_DetokenizeLine{*tn,Peek.l (?beforeparameterfetch),&detokenline}
0003968A <AmiBlitz3.ab3@29955>     If written>0 Then Poke.b &detokenline+written,0
000396CE <AmiBlitz3.ab3@29956>     If written>40 Then Poke.s &detokenline+36,"..."   ; added to limit the wide of the error requester  tomsmart1
000396F8 <AmiBlitz3.ab3@29957>     sourceLineText.s = Peek.s(&detokenline)
000396FE <AmiBlitz3.ab3@29958>   Else
00039726 <AmiBlitz3.ab3@29959>     sourceLineText = "NULL"
0003975A <AmiBlitz3.ab3@29961>   error_source$ = sourceLineText
000397AC <AmiBlitz3.ab3@29962>   error$ + sourceLineText
000397B2 <AmiBlitz3.ab3@29963>   GetD0 &error$
000397D0 <AmiBlitz3.ab3@29964>   !asm
000397D2 <AmiBlitz3.ab3@29965>   MOVE.l d0,a0
000397D4 <AmiBlitz3.ab3@29966> RTS
000397D6 <AmiBlitz3.ab3@29970>   MOVE.l a0,-(a7)
000397D8 <AmiBlitz3.ab3@29971>   MOVE.l a0,d0
000397DA <AmiBlitz3.ab3@29972>   MOVE.l a5,a0                                             ;macro title
00039804 <AmiBlitz3.ab3@29973>   !basic
00039808 <AmiBlitz3.ab3@29974>   i = PutD0
0003980A <AmiBlitz3.ab3@29975>   MOVEQ #20,d0
0003980C <AmiBlitz3.ab3@29978>     MOVE.b -(a0),d1
00039810 <AmiBlitz3.ab3@29979>     BEQ 'l1
00039814 <AmiBlitz3.ab3@29980>     CMP.b #":",d1
00039818 <AmiBlitz3.ab3@29981>     BEQ 'l1
0003981A <AmiBlitz3.ab3@29982>     SUBQ.l #1,d0
0003981E <AmiBlitz3.ab3@29983>     BNE 'l2
00039820 <AmiBlitz3.ab3@29986>   ADDQ #1,a0
00039822 <AmiBlitz3.ab3@29987>   MOVE.l a0,d0
00039826 <AmiBlitz3.ab3@29988>   i2.l = PutD0
00039842 <AmiBlitz3.ab3@29989>   If Peek.w (?ininclude)>0
0003989C <AmiBlitz3.ab3@29990>     Poke.s (?includetemp2),incdim(Peek.w(?ininclude)-1)
000398AC <AmiBlitz3.ab3@29991>     errorline.l = Peek.l(?includeline);-1
000398D4 <AmiBlitz3.ab3@29992>     Poke.l ?compilelinecounter,Peek.l(?includeline) - 1
000398FE <AmiBlitz3.ab3@29993>     errorfile.s = Peek.s(?includetemp2)
00039904 <AmiBlitz3.ab3@29994>   Else
0003993C <AmiBlitz3.ab3@29995>     Poke.s (?includetemp2),Peek.s(?ptr_parameterstore)
00039952 <AmiBlitz3.ab3@29996>     errorline.l = Peek.l(?compilelinecounter) + 1
00039986 <AmiBlitz3.ab3@29997>     errorfile.s = cli_sourcefile
00039990 <AmiBlitz3.ab3@30000>   If i
00039A34 <AmiBlitz3.ab3@30001>     errortext.s = !TRANS{Replace$(Peek.s(i),"\\0a","\n")}
00039AB2 <AmiBlitz3.ab3@30002>     errortext.s = Replace$(errortext,"\n","\\0a")
00039AB8 <AmiBlitz3.ab3@30003>   Else
00039AE0 <AmiBlitz3.ab3@30004>     errortext.s = "???"
00039C58 <AmiBlitz3.ab3@30007>   NPrint "\\1b[1m",!TRANS{"Compiler Error"}," #",Peek.l(?errorcounter)," <",errorfile,"@",errorline,">\\1b[0m "
00039D20 <AmiBlitz3.ab3@30008>   NPrint "  ",error_type$,"\\n  ",error_source$
00039D3E <AmiBlitz3.ab3@30012>   !asm
00039D40 <AmiBlitz3.ab3@30013>   MOVE.l (a7)+,a0
00039D42 <AmiBlitz3.ab3@30014> RTS
00039D44 <AmiBlitz3.ab3@30018>   MOVE.l a0,-(a7)
00039D46 <AmiBlitz3.ab3@30019>   MOVE.l a0,d0
00039D48 <AmiBlitz3.ab3@30020>   MOVE.l a5,a0                                             ;macro title
00039D72 <AmiBlitz3.ab3@30021>   !basic
00039D76 <AmiBlitz3.ab3@30022>   i = PutD0
00039D78 <AmiBlitz3.ab3@30023>   MOVEQ #20,d0
00039D7A <AmiBlitz3.ab3@30026>     MOVE.b -(a0),d1
00039D7E <AmiBlitz3.ab3@30027>     BEQ 'l1
00039D82 <AmiBlitz3.ab3@30028>     CMP.b #":",d1
00039D86 <AmiBlitz3.ab3@30029>     BEQ 'l1
00039D88 <AmiBlitz3.ab3@30030>     SUBQ.l #1,d0
00039D8C <AmiBlitz3.ab3@30031>     BNE 'l2
00039D8E <AmiBlitz3.ab3@30034>   ADDQ #1,a0
00039D90 <AmiBlitz3.ab3@30035>   MOVE.l a0,d0
00039D94 <AmiBlitz3.ab3@30036>   i2.l = PutD0
00039E18 <AmiBlitz3.ab3@30037>   fid.l = file_Open{dos_AddPart{my_systemdir$,"ab_compileerror.txt"},#file_forcewrite}
00039E2C <AmiBlitz3.ab3@30038>   If fid <> -1
00039E48 <AmiBlitz3.ab3@30039>     If Peek.w (?ininclude)>0
00039EA2 <AmiBlitz3.ab3@30040>       Poke$(?includetemp2),incdim(Peek.w(?ininclude)-1)
00039EA8 <AmiBlitz3.ab3@30041>     Else
00039ED4 <AmiBlitz3.ab3@30042>       Poke$(?includetemp2),""
00039EFE <AmiBlitz3.ab3@30044>     a$ = Peek$(?includetemp2)
00039F70 <AmiBlitz3.ab3@30045>     x$ = Replace$(Peek$(i),"\\0a","\n")
00039FA2 <AmiBlitz3.ab3@30046>     file_WriteLine{fid,x$}
00039FEC <AmiBlitz3.ab3@30047>     file_WriteLine{fid,Str$(Peek.l(?compilelinecounter) + 1)}
0003A018 <AmiBlitz3.ab3@30048>     If a$
0003A04A <AmiBlitz3.ab3@30049>       file_WriteLine{fid,a$}
0003A094 <AmiBlitz3.ab3@30050>       file_WriteLine{fid,Str$(Peek.l(?includeline)-1)}
0003A0BC <AmiBlitz3.ab3@30051>       Poke.l ?compilelinecounter,Peek.l(?includeline) - 1
0003A0C2 <AmiBlitz3.ab3@30052>     Else
0003A0E8 <AmiBlitz3.ab3@30053>       file_WriteLine{fid,"none"}
0003A118 <AmiBlitz3.ab3@30055>     file_WriteLine{fid,Peek$(i2)}
0003A16E <AmiBlitz3.ab3@30056>     file_WriteLine{fid,Str$(Peek.l(?globallinecount))+" line(s) compiled"}
0003A1B8 <AmiBlitz3.ab3@30057>     file_WriteLine{fid,Hex$(Peek.w(?globalvarpointer))+" global var base"}
0003A1C2 <AmiBlitz3.ab3@30058>     file_Close{fid}
0003A1E0 <AmiBlitz3.ab3@30060>   !asm
0003A1E2 <AmiBlitz3.ab3@30061>   MOVE.l (a7)+,a0
0003A1E4 <AmiBlitz3.ab3@30062> RTS
0003A20E <AmiBlitz3.ab3@30066>   !basic
0003A212 <AmiBlitz3.ab3@30067>   progress.l     = PutD0
0003A224 <AmiBlitz3.ab3@30068>   total.l        = Peek.w(?progressbar_width)
0003A242 <AmiBlitz3.ab3@30069>   calcpro        = (progress * 100) / total +1
0003A25A <AmiBlitz3.ab3@30070>   pass.l         = Peek.w(?pass) + 1           ; added +1 so the shown status info begin with 1 instead of 0  tomsmart1
0003A26C <AmiBlitz3.ab3@30071>   typ.l          = Peek.w(?compiler_job)
0003A28A <AmiBlitz3.ab3@30074>   If (pass><pass_old) OR (typ><typ_old)
0003A298 <AmiBlitz3.ab3@30076>     If pass_old><pass
0003A334 <AmiBlitz3.ab3@30077>       passtatusstr.s = !TRANS{"Pass"}+" "+Str$(pass)+"..."
0003A38A <AmiBlitz3.ab3@30078>       If cli_verbose>=1 Then NPrint passtatusstr        ; changed form 2 to get compilepass number in verbose mode 1  tomsmart1
0003A390 <AmiBlitz3.ab3@30081>     pass_old = pass
0003A396 <AmiBlitz3.ab3@30082>     typ_old  = typ
0003A39C <AmiBlitz3.ab3@30083>     update_comstatus_gui = True
0003A3AE <AmiBlitz3.ab3@30084>     If typ=0
0003A48E <AmiBlitz3.ab3@30085>       comstatusstr = !TRANS{"Pass"}+" "+Str$(pass)+": "+!TRANS{"Compiling Sources..."}
0003A496 <AmiBlitz3.ab3@30086>       calcpro = 0  ; set gauge to 0
0003A4A8 <AmiBlitz3.ab3@30088>     If typ=1
0003A588 <AmiBlitz3.ab3@30089>       comstatusstr = !TRANS{"Pass"}+" "+Str$(pass)+": "+!TRANS{"Building Executable..."}
0003A590 <AmiBlitz3.ab3@30090>       calcpro = 0  ; set gauge to 0
0003A5E6 <AmiBlitz3.ab3@30093>     If cli_verbose>=3 Then NPrint comstatusstr
0003A5F4 <AmiBlitz3.ab3@30096>   If (calcpro >< calcpro_old)
0003A648 <AmiBlitz3.ab3@30097>     If cli_verbose>=4 Then NPrint calcpro,"% compiled..."
0003A64E <AmiBlitz3.ab3@30098>     calcpro_old = calcpro
0003A654 <AmiBlitz3.ab3@30099>     update_comstatus_gui = True
0003A66E <AmiBlitz3.ab3@30102>   If update_comstatus_gui = True                                     ; check if a update of the gui nessecary
0003A68C <AmiBlitz3.ab3@30103>     !asm
0003A6BE <AmiBlitz3.ab3@30104> 
0003A6E8 <AmiBlitz3.ab3@30105>     !basic
0003A6EE <AmiBlitz3.ab3@30106>     update_comstatus_gui  = False ; because we update the gui
0003A70C <AmiBlitz3.ab3@30108>   !asm
0003A70E <AmiBlitz3.ab3@30109> RTS
0003A714 <AmiBlitz3.ab3@30114>   MOVE.w maxobject_pos,D5                                  ;max objects 1. visible
0003A71A <AmiBlitz3.ab3@30115>   LEA maxobjects_value,A3                                  ;current value
0003A720 <AmiBlitz3.ab3@30116>   MOVEA.l libpointer,A2
0003A724 <AmiBlitz3.ab3@30119>   CMPA.w #$0,A2
0003A728 <AmiBlitz3.ab3@30120>   BEQ.w 'igot
0003A72A <AmiBlitz3.ab3@30121>   MOVEA.l A2,A1
0003A72E <AmiBlitz3.ab3@30122>   ADDA.l $12(A1),A1
0003A732 <AmiBlitz3.ab3@30123>   TST.w -$2(A1)
0003A736 <AmiBlitz3.ab3@30124>   BEQ.w 'ugwl2
0003A738 <AmiBlitz3.ab3@30125>   SUBQ.w #1,D5
0003A73C <AmiBlitz3.ab3@30126>   BMI.w 'ugw2
0003A73E <AmiBlitz3.ab3@30129>   MOVEA.l (A2),A2
0003A742 <AmiBlitz3.ab3@30130>  BRA.w 'ugwl
0003A746 <AmiBlitz3.ab3@30133>   MOVE.w (A3),-$4(A1)
0003A748 <AmiBlitz3.ab3@30136> RTS
0003A74E <AmiBlitz3.ab3@30140>   MOVE.w debugnest,d0
0003A754 <AmiBlitz3.ab3@30141>   LEA storedebugmode, a0
0003A75C <AmiBlitz3.ab3@30142>   MOVE.b 0(a0,d0.w),debugmode
0003A762 <AmiBlitz3.ab3@30143>   TST.w debugnest
0003A766 <AmiBlitz3.ab3@30144>   BEQ JUMP_unpairrunerrs
0003A76C <AmiBlitz3.ab3@30145>   SUBQ.w #1,debugnest
0003A76E <AmiBlitz3.ab3@30146> RTS
0003A774 <AmiBlitz3.ab3@30148> JUMP_runerrsoverflow JMP runerrsoverflow
0003A77A <AmiBlitz3.ab3@30149> JUMP_unpairrunerrs   JMP unpairrunerrs
0003A782 <AmiBlitz3.ab3@30153>   BCHG #$7,use_debugger
0003A78A <AmiBlitz3.ab3@30155>   BTST #$7,use_debugger
0003A78E <AmiBlitz3.ab3@30156>   BNE 'debugon
0003A794 <AmiBlitz3.ab3@30157>   CLR.w debugmode
0003A798 <AmiBlitz3.ab3@30158>  BRA.b 'debugoff
0003A79E <AmiBlitz3.ab3@30161>   SNE debugmode
0003A7A0 <AmiBlitz3.ab3@30164>   MOVE.l a0,-(a7)
0003A7D8 <AmiBlitz3.ab3@30167>   !ComData_SetB{comByte_DebugMode,debugmode}
0003A7DA <AmiBlitz3.ab3@30172>   MOVE.l (a7)+,a0
0003A7DC <AmiBlitz3.ab3@30173> RTS
0003A7E4 <AmiBlitz3.ab3@30178>   BTST #$7,use_debugger
0003A7E8 <AmiBlitz3.ab3@30180>   BNE 'debugon
0003A7EE <AmiBlitz3.ab3@30181>   CLR.w debugmode
0003A7F2 <AmiBlitz3.ab3@30182>  BRA.b 'debugoff
0003A7F8 <AmiBlitz3.ab3@30186>   SNE debugmode
0003A7FA <AmiBlitz3.ab3@30189> RTS
0003A800 <AmiBlitz3.ab3@30194>   ADDQ.w #1,debugnest
0003A806 <AmiBlitz3.ab3@30195>   MOVE.w debugnest,d0
0003A80A <AmiBlitz3.ab3@30196>   CMP.w #18,d0
0003A80E <AmiBlitz3.ab3@30197>    BGE JUMP_runerrsoverflow
0003A814 <AmiBlitz3.ab3@30198>   LEA storedebugmode, a0
0003A81C <AmiBlitz3.ab3@30199>   MOVE.b debugmode,0( a0,d0.w)
0003A822 <AmiBlitz3.ab3@30203>   SF debugmode
0003A824 <AmiBlitz3.ab3@30204> RTS
0003A8A4 <AmiBlitz3.ab3@30207> usedpath:  Ds.l 32
0003A8A8 <AmiBlitz3.ab3@30211>   BEQ.w JUMP_syntaxerr
0003A8AE <AmiBlitz3.ab3@30212>   LEA lastpath,A0
0003A8B2 <AmiBlitz3.ab3@30214>   MOVEM.l a0-a1/d0,-(a7)
0003A8B8 <AmiBlitz3.ab3@30215>   LEA lastpath2,a1
0003A8BA <AmiBlitz3.ab3@30218>     MOVE.b (a0)+,(a1)+
0003A8BE <AmiBlitz3.ab3@30219>   BNE 'l2
0003A8C2 <AmiBlitz3.ab3@30220>   MOVEM.l (a7)+,a0-a1/d0
0003A8C6 <AmiBlitz3.ab3@30221>   LEA usedpath(PC),A0
0003A8CA <AmiBlitz3.ab3@30222>   MOVEM.l a0-a1/d0,-(a7)
0003A8D0 <AmiBlitz3.ab3@30223>   LEA lastpath,a1
0003A8D2 <AmiBlitz3.ab3@30226>     MOVE.b (a0)+,(a1)+
0003A8D6 <AmiBlitz3.ab3@30227>   BNE 'l1
0003A8DA <AmiBlitz3.ab3@30228>   MOVEM.l (a7)+,a0-a1/d0
0003A8DC <AmiBlitz3.ab3@30232>   TST.w D0
0003A8E0 <AmiBlitz3.ab3@30233>    BMI.w JUMP_syntaxerr
0003A8E2 <AmiBlitz3.ab3@30234>   MOVE.b D0,(A0)+
0003A8E6 <AmiBlitz3.ab3@30235>   BSR.w JUMP_get1bytemain
0003A8EA <AmiBlitz3.ab3@30236>    BNE.w 'loop
0003A8EE <AmiBlitz3.ab3@30239>   MOVE.b #$2,(A0)
0003A8F0 <AmiBlitz3.ab3@30240> RTS
0003A8F4 <AmiBlitz3.ab3@30244>   BEQ.w JUMP_syntaxerr
0003A8FA <AmiBlitz3.ab3@30245>   LEA path2,A0
0003A8FC <AmiBlitz3.ab3@30257>   TST.w D0
0003A900 <AmiBlitz3.ab3@30258>    BMI.w JUMP_syntaxerr
0003A902 <AmiBlitz3.ab3@30259>   MOVE.b D0,(A0)+
0003A906 <AmiBlitz3.ab3@30260>   BSR.w JUMP_get1bytemain
0003A90A <AmiBlitz3.ab3@30261>    BNE.w 'loop
0003A90E <AmiBlitz3.ab3@30264>   MOVE.b #$2,(A0)
0003A910 <AmiBlitz3.ab3@30265> RTS
0003A916 <AmiBlitz3.ab3@30268> JUMP_errormsg_reg JMP errormsg_reg
0003A920 <AmiBlitz3.ab3@30272>   MOVE.l #$f22d6780,fpucodeglobal
0003A92A <AmiBlitz3.ab3@30273>   MOVE.l #$f22c6780,fpucodelocal
0003A930 <AmiBlitz3.ab3@30274>   LEA regtable,a0
0003A93A <AmiBlitz3.ab3@30275>   MOVE.l #7,maxregs
0003A93C <AmiBlitz3.ab3@30278>   MOVE.l (a0),d0
0003A940 <AmiBlitz3.ab3@30279>   BEQ 'e1
0003A942 <AmiBlitz3.ab3@30280>   CLR.l (a0)
0003A946 <AmiBlitz3.ab3@30281>   MOVE.w 4(a0),d0
0003A950 <AmiBlitz3.ab3@30282>   MOVE.l fpucodeglobal,fpucode
0003A954 <AmiBlitz3.ab3@30283>   TST.w 6(a0)
0003A958 <AmiBlitz3.ab3@30284>   BEQ 'glob
0003A962 <AmiBlitz3.ab3@30285>   MOVE.l fpucodelocal,fpucode
0003A968 <AmiBlitz3.ab3@30288>   MOVE.l fpucode,d1
0003A96E <AmiBlitz3.ab3@30289>   JSR writelong
0003A978 <AmiBlitz3.ab3@30290>   SUB.l #$80,fpucodelocal
0003A982 <AmiBlitz3.ab3@30291>   SUB.l #$80,fpucodeglobal
0003A984 <AmiBlitz3.ab3@30292>   MOVE.w d0,d1
0003A98A <AmiBlitz3.ab3@30293>   JSR writeword
0003A98C <AmiBlitz3.ab3@30294>   ADDQ #8,a0
0003A990 <AmiBlitz3.ab3@30295>  BRA 'again
0003A992 <AmiBlitz3.ab3@30298> RTS
0003A998 <AmiBlitz3.ab3@30301> JUMP_notypeerr2 JMP notypeerr
0003A99E <AmiBlitz3.ab3@30302> JUMP_illtypeerr JMP illtypeerr
0003A9A8 <AmiBlitz3.ab3@30305>   MOVE.l #$f22d4780,fpucodeglobal
0003A9B2 <AmiBlitz3.ab3@30306>   MOVE.l #$f22c4780,fpucodelocal
0003A9B8 <AmiBlitz3.ab3@30307>   LEA regtable,a0
0003A9BA <AmiBlitz3.ab3@30308>   TST.l (a0)
0003A9BE <AmiBlitz3.ab3@30309>    BNE JUMP_errormsg_reg
0003A9C0 <AmiBlitz3.ab3@30310>   MOVE.l d7,-(a7)
0003A9C2 <AmiBlitz3.ab3@30311>   SUBQ.l #1,a5
0003A9C8 <AmiBlitz3.ab3@30314>   JSR getparameter2
0003A9CC <AmiBlitz3.ab3@30315>   BEQ.w 'nopar
0003A9D2 <AmiBlitz3.ab3@30316>   MOVE.w d0,lastchar
0003A9D8 <AmiBlitz3.ab3@30317>   JSR findvariable
0003A9DC <AmiBlitz3.ab3@30318>   BNE 'islocal
0003A9E6 <AmiBlitz3.ab3@30319>   MOVE.l fpucodeglobal,fpucode
0003A9F0 <AmiBlitz3.ab3@30320>   MOVE.l #3,maxregs
0003A9F2 <AmiBlitz3.ab3@30321>   MOVEQ #0,d7
0003A9FA <AmiBlitz3.ab3@30324>   CMP.l #newtype_float,$a(a2)                              ;is float type
0003A9FE <AmiBlitz3.ab3@30325>    BEQ 'doit
0003AA06 <AmiBlitz3.ab3@30326>   CMP.l #newtype_double,$a(a2)
0003AA0A <AmiBlitz3.ab3@30327>    BNE JUMP_illtypeerr
0003AA10 <AmiBlitz3.ab3@30330>   LEA regtable,a0
0003AA12 <AmiBlitz3.ab3@30331>   MOVEQ #0,d0
0003AA14 <AmiBlitz3.ab3@30334>   TST.l (a0)
0003AA18 <AmiBlitz3.ab3@30335>    BEQ 'store
0003AA1A <AmiBlitz3.ab3@30336>   ADDQ.l #4,d0
0003AA1C <AmiBlitz3.ab3@30337>   ADDQ.l #8,a0
0003AA22 <AmiBlitz3.ab3@30338>   CMP.l #16,d0
0003AA26 <AmiBlitz3.ab3@30339>    BCS 'loop
0003AA30 <AmiBlitz3.ab3@30340>   MOVE.l #2,maxregs
0003AA36 <AmiBlitz3.ab3@30341>   CMP.l #20,d0
0003AA3A <AmiBlitz3.ab3@30342>    BCS 'loop
0003AA44 <AmiBlitz3.ab3@30343>   MOVE.l #1,maxregs
0003AA4A <AmiBlitz3.ab3@30344>   CMP.l #24,d0
0003AA4E <AmiBlitz3.ab3@30345>    BCS 'loop
0003AA54 <AmiBlitz3.ab3@30346>  JMP toovarerr
0003AA5A <AmiBlitz3.ab3@30349>   TST.b fpu
0003AA5E <AmiBlitz3.ab3@30350>    BEQ 'nofpu
0003AA60 <AmiBlitz3.ab3@30351>   MOVE.l a2,(a0)
0003AA66 <AmiBlitz3.ab3@30352>   MOVE.w 4(a2),4(a0)
0003AA6A <AmiBlitz3.ab3@30353>   MOVE.w d7,6(a0)
0003AA70 <AmiBlitz3.ab3@30354>   MOVE.l fpucode,d1
0003AA7A <AmiBlitz3.ab3@30355>   SUB.l #$80,fpucodeglobal
0003AA84 <AmiBlitz3.ab3@30356>   SUB.l #$80,fpucodelocal
0003AA8A <AmiBlitz3.ab3@30357>   JSR writelong
0003AA8E <AmiBlitz3.ab3@30358>   MOVE.w 4(a2),d1
0003AA94 <AmiBlitz3.ab3@30359>   JSR writeword
0003AA9A <AmiBlitz3.ab3@30362>   MOVE.w lastchar,d0
0003AA9E <AmiBlitz3.ab3@30363>   CMP.w #":",d0
0003AAA2 <AmiBlitz3.ab3@30364>    BEQ 'nopar
0003AAA4 <AmiBlitz3.ab3@30365>   TST.w d0
0003AAA8 <AmiBlitz3.ab3@30366>    BEQ 'nopar
0003AAAC <AmiBlitz3.ab3@30367>   CMP.w #",",d0
0003AAB0 <AmiBlitz3.ab3@30368>   BNE JUMP_syntaxerr
0003AAB4 <AmiBlitz3.ab3@30369>  BRA 'l2
0003AAB6 <AmiBlitz3.ab3@30372>    MOVE.l (a7)+,d7
0003AAB8 <AmiBlitz3.ab3@30373>  RTS
0003AABA <AmiBlitz3.ab3@30376>   MOVEQ #1,d7
0003AAC2 <AmiBlitz3.ab3@30377>   MOVE.b #1,newvariable
0003AAC8 <AmiBlitz3.ab3@30378>   LEA firstlocal,a2
0003AACE <AmiBlitz3.ab3@30379>   JSR findvariable
0003AAD4 <AmiBlitz3.ab3@30380>   CLR.b newvariable
0003AADA <AmiBlitz3.ab3@30381>   CMP.l #-1,d0
0003AADE <AmiBlitz3.ab3@30382>   BEQ.w JUMP_notypeerr2
0003AAE8 <AmiBlitz3.ab3@30383>   MOVE.l fpucodelocal,fpucode
0003AAEC <AmiBlitz3.ab3@30384>  BRA 'go
0003AAF0 <AmiBlitz3.ab3@30387>   CMP.b #".",d0
0003AAF4 <AmiBlitz3.ab3@30388>    BNE 'l1
0003AAF8 <AmiBlitz3.ab3@30389>   BSR JUMP_get1bytemain
0003AAFC <AmiBlitz3.ab3@30390>   BSR JUMP_get1bytemain
0003AB00 <AmiBlitz3.ab3@30393>   ORI .b #$20,d0
0003AB04 <AmiBlitz3.ab3@30394>   CMP.b #"d",d0
0003AB08 <AmiBlitz3.ab3@30395>    BNE JUMP_illeaerr
0003AB0C <AmiBlitz3.ab3@30396>   BSR JUMP_get1bytemain
0003AB10 <AmiBlitz3.ab3@30397>   SUB.b #$30,d0
0003AB14 <AmiBlitz3.ab3@30398>   CMP.b #$7,d0
0003AB18 <AmiBlitz3.ab3@30399>    BGT JUMP_syntaxerr
0003AB1C <AmiBlitz3.ab3@30400>   MOVE.w #$49c0,d1
0003AB1E <AmiBlitz3.ab3@30401>   ADD.b d0,d1
0003AB24 <AmiBlitz3.ab3@30402>   JSR writeword
0003AB28 <AmiBlitz3.ab3@30403>   BSR JUMP_get1bytemain
0003AB2A <AmiBlitz3.ab3@30404> RTS
0003AB30 <AmiBlitz3.ab3@30408>   LEA lastpath,a0
0003AB34 <AmiBlitz3.ab3@30409>   LEA usedpath(PC),A1
0003AB36 <AmiBlitz3.ab3@30412>     MOVE.b (a0)+,(a1)+
0003AB3A <AmiBlitz3.ab3@30413>   BNE 'l1
0003AB40 <AmiBlitz3.ab3@30415>   LEA lastpath2,a0
0003AB46 <AmiBlitz3.ab3@30416>   LEA lastpath,A1
0003AB48 <AmiBlitz3.ab3@30419>     MOVE.b (a0)+,(a1)+
0003AB4C <AmiBlitz3.ab3@30420>   BNE 'l2
0003AB4E <AmiBlitz3.ab3@30421> RTS
0003AB54 <AmiBlitz3.ab3@30425>   TST.b objectcount
0003AB58 <AmiBlitz3.ab3@30426>   BEQ 'l2a
0003AB5E <AmiBlitz3.ab3@30427>  JMP macnesterr
0003AB64 <AmiBlitz3.ab3@30430>   LEA devo,a0
0003AB6A <AmiBlitz3.ab3@30431>   ADDQ.b #1,objectcount
0003AB6E <AmiBlitz3.ab3@30432>   MOVEM.l a1/d2,-(a7)
0003AB74 <AmiBlitz3.ab3@30433>   LEA ptr_parameterstore,a1
0003AB76 <AmiBlitz3.ab3@30436>     MOVE.b (a0)+,(a1)+
0003AB7A <AmiBlitz3.ab3@30437>   BNE 'l1
0003AB7C <AmiBlitz3.ab3@30439>   MOVEQ #13,d2
0003AB82 <AmiBlitz3.ab3@30440>   JSR findlabel2
0003AB86 <AmiBlitz3.ab3@30441>   BNE 'd
0003AB8A <AmiBlitz3.ab3@30442>   TST.l 8(a2)
0003AB8E <AmiBlitz3.ab3@30443>   BEQ 'd
0003AB94 <AmiBlitz3.ab3@30444>   SUBQ.b #1,objectcount
0003AB98 <AmiBlitz3.ab3@30445>   MOVEM.l (a7)+,a1/d2
0003AB9E <AmiBlitz3.ab3@30446>   JSR skiprest
0003ABA6 <AmiBlitz3.ab3@30447>   MOVE.b #1,developobject
0003ABA8 <AmiBlitz3.ab3@30448>  RTS
0003ABAC <AmiBlitz3.ab3@30451>   MOVEM.l (a7)+,a1/d2
0003ABB4 <AmiBlitz3.ab3@30452>   MOVE.b #1,resdisable
0003ABBA <AmiBlitz3.ab3@30455>   CLR.b developobject
0003ABC0 <AmiBlitz3.ab3@30456> JMP do_Macro
0003ABC6 <AmiBlitz3.ab3@30459> JUMP_illeaerr JMP illeaerr
0003ABCC <AmiBlitz3.ab3@30463>   CLR.b typecheck
0003ABD2 <AmiBlitz3.ab3@30464>   CLR.b declare
0003ABD8 <AmiBlitz3.ab3@30465>   CLR.b declare2
0003ABDC <AmiBlitz3.ab3@30466>   SUB.b #$30,d0
0003ABE0 <AmiBlitz3.ab3@30467>   BTST #0,d0
0003ABE4 <AmiBlitz3.ab3@30468>   BEQ 'l1
0003ABEC <AmiBlitz3.ab3@30469>   MOVE.b #1,declare
0003ABF0 <AmiBlitz3.ab3@30472>   BTST #1,d0
0003ABF4 <AmiBlitz3.ab3@30473>   BEQ 'l2
0003ABFC <AmiBlitz3.ab3@30474>   MOVE.b #1,declare2
0003AC00 <AmiBlitz3.ab3@30477>   BTST #2,d0
0003AC04 <AmiBlitz3.ab3@30478>   BEQ 'l3
0003AC0C <AmiBlitz3.ab3@30479>   MOVE.b #1,typecheck
0003AC10 <AmiBlitz3.ab3@30482>   BSR.w JUMP_get1bytemain
0003AC12 <AmiBlitz3.ab3@30483> RTS
0003AC18 <AmiBlitz3.ab3@30485> JUMP_get1bytemain JMP get1bytemain
0003AC42 <AmiBlitz3.ab3@30489>   !basic
0003AC62 <AmiBlitz3.ab3@30491>   FillMem ?residents_table,?residents_table_end-?residents_table,0
0003AC80 <AmiBlitz3.ab3@30492>   !asm
0003AC82 <AmiBlitz3.ab3@30493> Return
0003AC84 <AmiBlitz3.ab3@30498>   MOVE.l d2,-(a7)                                          ; D2 -> stack
0003AC86 <AmiBlitz3.ab3@30499>   ADDQ #1,a5
0003AC88 <AmiBlitz3.ab3@30500>   MOVE.l a5,-(a7)
0003ACB2 <AmiBlitz3.ab3@30501>   !basic
0003ACB8 <AmiBlitz3.ab3@30502>   MOVE.l (a7)+,d0 : _myD0.l = PutD0
0003ACC2 <AmiBlitz3.ab3@30503>   If _myD0
0003AD02 <AmiBlitz3.ab3@30504>     newconst$ = UCase$(Peek.s(_myD0))
0003AD08 <AmiBlitz3.ab3@30505>   Else
0003AD42 <AmiBlitz3.ab3@30506>     error{"INTERNAL: invalid pointer in check_newconstants!"}
0003AD6A <AmiBlitz3.ab3@30507>     nwconst$="xxx"
0003AD92 <AmiBlitz3.ab3@30509>   condata$ =""
0003ADA2 <AmiBlitz3.ab3@30510>   Poke.b ?skip_bytes,0
0003ADFE <AmiBlitz3.ab3@30511>   If Left$(newconst$,2) = "__"
0003AE58 <AmiBlitz3.ab3@30512>     Select Mid$(newconst$,3,4)
0003AE7C <AmiBlitz3.ab3@30514>      Case "DATE"
0003AED6 <AmiBlitz3.ab3@30515>       Select Mid$(newconst$,3,6)
0003AF14 <AmiBlitz3.ab3@30516>       Case "DATE__" : DateFormat 1 : Poke.b ?skip_bytes,8
0003AF58 <AmiBlitz3.ab3@30517>       Case "DATE_G" : DateFormat 0 : Poke.b ?skip_bytes,12
0003AF66 <AmiBlitz3.ab3@30518>       End Select
0003AF74 <AmiBlitz3.ab3@30519>       i.l=SystemDate
0003AF9A <AmiBlitz3.ab3@30520>       condata$ = Date$ (i)
0003B018 <AmiBlitz3.ab3@30521>       condata$ = Replace$(condata$,"/",".")
0003B042 <AmiBlitz3.ab3@30523>      Case "VER_"
0003B052 <AmiBlitz3.ab3@30526>       actual_version.l = Peek.l(?versioninformation)
0003B062 <AmiBlitz3.ab3@30527>       actual_build.l   = Peek.l(?number_of_builds)
0003B086 <AmiBlitz3.ab3@30529>       Format ""
0003B0E0 <AmiBlitz3.ab3@30530>       Select Mid$(newconst$,3,9)
0003B104 <AmiBlitz3.ab3@30532>        Case "VER_MAJOR"
0003B140 <AmiBlitz3.ab3@30533>         condata$ = Str$(actual_version LSR 24)
0003B16A <AmiBlitz3.ab3@30535>        Case "VER_MINOR"
0003B1AE <AmiBlitz3.ab3@30536>         condata$ = Str$((actual_version LSL 8) LSR 24)
0003B1D8 <AmiBlitz3.ab3@30538>        Case "VER_PATCH"
0003B21C <AmiBlitz3.ab3@30539>         condata$ = Str$((actual_version LSL 16) LSR 24 )
0003B246 <AmiBlitz3.ab3@30541>        Case "VER_BUILD"
0003B26A <AmiBlitz3.ab3@30542>         Format ""
0003B29E <AmiBlitz3.ab3@30543>         condata$ = Str$(actual_build)
0003B2A4 <AmiBlitz3.ab3@30545>        Default
0003B2CC <AmiBlitz3.ab3@30546>         condata$ = "{unknown compiler constant}"
0003B2DA <AmiBlitz3.ab3@30548>       End Select
0003B2FE <AmiBlitz3.ab3@30549>       Format ""
0003B30E <AmiBlitz3.ab3@30550>       Poke.b ?skip_bytes,11
0003B338 <AmiBlitz3.ab3@30552>      Case "THIS"
0003B392 <AmiBlitz3.ab3@30553>       Select Mid$(newconst$,3,9)
0003B3B6 <AmiBlitz3.ab3@30555>        Case "THIS_FUNC"
0003B3C6 <AmiBlitz3.ab3@30556>         Poke.b ?skip_bytes,15
0003B3E6 <AmiBlitz3.ab3@30557>         If Peek.l(?currentfunction)<>0
0003B432 <AmiBlitz3.ab3@30558>           condata$ = Peek.s(Peek.l(?currentfunction) + 32 + #funcentry_extend + 1)
0003B438 <AmiBlitz3.ab3@30559>         Else
0003B460 <AmiBlitz3.ab3@30560>           condata$ = "GLOBAL"
0003B48A <AmiBlitz3.ab3@30563>        Case "THIS_INCL"
0003B49A <AmiBlitz3.ab3@30564>         Poke.b ?skip_bytes,14
0003B4BA <AmiBlitz3.ab3@30565>         If Peek.l(?includetemp2)<>0
0003B508 <AmiBlitz3.ab3@30566>           condata$ = dos_FilePart{Peek$(?includetemp2)}
0003B532 <AmiBlitz3.ab3@30569>        Case "THIS_POIN"
0003B542 <AmiBlitz3.ab3@30570>         Poke.b ?skip_bytes,14
0003B562 <AmiBlitz3.ab3@30571>         If Peek.l(?currentfunction)<>0
0003B590 <AmiBlitz3.ab3@30572>           condata$ = Hex$(Peek.l(?currentfunction))
0003B59E <AmiBlitz3.ab3@30575>       End Select
0003B5C8 <AmiBlitz3.ab3@30577>      Case "CODE"
0003B5D8 <AmiBlitz3.ab3@30578>       Poke.b ?skip_bytes,10
0003B63A <AmiBlitz3.ab3@30579>       If Mid$(newconst$,3,8) = "CODELINE"
0003B676 <AmiBlitz3.ab3@30580>         condata$ = Str$(Peek.l(?globallinecount))
0003B684 <AmiBlitz3.ab3@30583>     End Select
0003B68A <AmiBlitz3.ab3@30585>   Else
0003B6DE <AmiBlitz3.ab3@30586>     Select Left$(newconst$,1)
0003B702 <AmiBlitz3.ab3@30588>      Case "R"
0003B712 <AmiBlitz3.ab3@30589>       Poke.b ?skip_bytes,3
0003B78A <AmiBlitz3.ab3@30590>       For i = 1 To Vallong(Mid$(newconst$,2,2))
0003B80A <AmiBlitz3.ab3@30591>         condata$ = condata$ + Mid$(newconst$,4,1)
0003B81A <AmiBlitz3.ab3@30592>       Next
0003B844 <AmiBlitz3.ab3@30594>      Case "N"
0003B854 <AmiBlitz3.ab3@30595>       Poke.b ?skip_bytes,1
0003B878 <AmiBlitz3.ab3@30596>       condata$ = Chr$(10)
0003B87E <AmiBlitz3.ab3@30598>      Default
0003B890 <AmiBlitz3.ab3@30599>       char1.b = Peek.b(&newconst$)
0003B8A8 <AmiBlitz3.ab3@30600>       char2.b = Peek.b(&newconst$+1)
0003B8B4 <AmiBlitz3.ab3@30601>       nibble1.l = -1
0003B8C0 <AmiBlitz3.ab3@30602>       nibble2.l = -1
0003B8FE <AmiBlitz3.ab3@30604>       If (char1>=@"0" AND char1<=@"9") Then nibble1 = char1-@"0"
0003B93C <AmiBlitz3.ab3@30605>       If (char2>=@"0" AND char2<=@"9") Then nibble2 = char2-@"0"
0003B980 <AmiBlitz3.ab3@30607>       If (char1>=@"a" AND char1<=@"f") Then nibble1 = char1-@"a" + 10
0003B9C4 <AmiBlitz3.ab3@30608>       If (char2>=@"a" AND char2<=@"f") Then nibble2 = char2-@"a" + 10
0003BA08 <AmiBlitz3.ab3@30610>       If (char1>=@"A" AND char1<=@"F") Then nibble1 = char1-@"A" + 10
0003BA4C <AmiBlitz3.ab3@30611>       If (char2>=@"A" AND char2<=@"F") Then nibble2 = char2-@"A" + 10
0003BA72 <AmiBlitz3.ab3@30613>       If nibble1>=0 AND nibble2>=0
0003BA88 <AmiBlitz3.ab3@30614>         newchar.l = (nibble1 LSL 4) + (nibble2)
0003BAAC <AmiBlitz3.ab3@30615>         condata$ = Chr$(newchar)
0003BABC <AmiBlitz3.ab3@30616>         Poke.b ?skip_bytes,2
0003BACA <AmiBlitz3.ab3@30619>     End Select
0003BB2A <AmiBlitz3.ab3@30621>   If condata$ = "" AND Peek.b(?skip_bytes)=0
0003BC50 <AmiBlitz3.ab3@30622>     !cout{"detected unknown const: " + newconst$}
0003BC84 <AmiBlitz3.ab3@30623>     condata$ = newconst$
0003BC9A <AmiBlitz3.ab3@30626>   GetD0 FLen(condata$)-1                                    ; laenge zielstring -> Stack
0003BC9C <AmiBlitz3.ab3@30627>   MOVE.l d0,d2
0003BC9E <AmiBlitz3.ab3@30628>   MOVE.l d2,-(a7)
0003BCA4 <AmiBlitz3.ab3@30630>   GetD0 &condata$                                          ; kopieren des neuen Strings in den Zielstring
0003BCA6 <AmiBlitz3.ab3@30631>   MOVE.l d0,a0
0003BCA8 <AmiBlitz3.ab3@30634>     MOVE.b (a0)+,d1
0003BCAE <AmiBlitz3.ab3@30635>     JSR pokedata1b
0003BCB2 <AmiBlitz3.ab3@30636>  DBF d2,'l1
0003BCD0 <AmiBlitz3.ab3@30638>   !asm
0003BCD2 <AmiBlitz3.ab3@30639>   MOVE.l (a7)+,d0                                          ; laenge Zielstring <- Stack
0003BCD4 <AmiBlitz3.ab3@30640>   MOVE.l (a7)+,d2                                          ; d2 <-Stack
0003BCD6 <AmiBlitz3.ab3@30641>   ADD.l d0,d2                                              ; eingefuegte chars zu D2 dazu
0003BCDC <AmiBlitz3.ab3@30642>   ADD.l #1,d2
0003BCE2 <AmiBlitz3.ab3@30644>   MOVE.l #0,d0                                             ; a5 um konstantennamen weiterschieben
0003BCE8 <AmiBlitz3.ab3@30645>   MOVE.b skip_bytes,D0
0003BCEA <AmiBlitz3.ab3@30646>   ADD.l D0,a5
0003BCEC <AmiBlitz3.ab3@30647> RTS
0003BCF0 <AmiBlitz3.ab3@30723>   MOVEM.l d0-d2/a0-a5,-(a7)
0003BCF6 <AmiBlitz3.ab3@30724>   TST.w proceduremode                                     ;1 in function
0003BCFA <AmiBlitz3.ab3@30725>   BEQ 'global
0003BD00 <AmiBlitz3.ab3@30726>   LEA firstglob,a2
0003BD06 <AmiBlitz3.ab3@30727>   JSR findvariable2
0003BD0A <AmiBlitz3.ab3@30728>   BEQ 'isused
0003BD12 <AmiBlitz3.ab3@30729>   MOVE.b #1,newvariable
0003BD18 <AmiBlitz3.ab3@30730>   LEA firstlocal,a2
0003BD1E <AmiBlitz3.ab3@30731>   JSR findvariable
0003BD22 <AmiBlitz3.ab3@30732>   BEQ 'isused
0003BD28 <AmiBlitz3.ab3@30733>   CLR.b newvariable
0003BD2C <AmiBlitz3.ab3@30734>   MOVEM.l (a7)+,d0-d2/a0-a5
0003BD2E <AmiBlitz3.ab3@30735>   RTS
0003BD34 <AmiBlitz3.ab3@30738>   JSR findvariable
0003BD38 <AmiBlitz3.ab3@30739>   BNE 'isunused
0003BD3E <AmiBlitz3.ab3@30742>    MOVE.w lastchar,-(a7)                                  ;get the typename from source
0003BD44 <AmiBlitz3.ab3@30743>    JSR getparameter2
0003BD4A <AmiBlitz3.ab3@30744>    MOVE.w (a7)+,lastchar
0003BD4E <AmiBlitz3.ab3@30745>    MOVE.l $a(a2),a0                                       ; get the name of the type
0003BD52 <AmiBlitz3.ab3@30746>    LEA $b(a0),a0
0003BD58 <AmiBlitz3.ab3@30747>    LEA ptr_parameterstore,a1
0003BD5A <AmiBlitz3.ab3@30750>    CMPM.b (a0)+,(a1)+                                     ; compare name
0003BD5E <AmiBlitz3.ab3@30751>    BNE'error
0003BD60 <AmiBlitz3.ab3@30752>    TST.b (a1)
0003BD64 <AmiBlitz3.ab3@30753> 
0003BD66 <AmiBlitz3.ab3@30754>    TST.b (a0)
0003BD6A <AmiBlitz3.ab3@30755>    BNE 'error
0003BD6E <AmiBlitz3.ab3@30758>   MOVEM.l (a7)+,d0-d2/a0-a5
0003BD70 <AmiBlitz3.ab3@30759>  RTS
0003BD76 <AmiBlitz3.ab3@30762> JMP errormsg_declaredtwice
0003BD7A <AmiBlitz3.ab3@30766>   MOVEM.l a3/d1,-(a7)
0003BD80 <AmiBlitz3.ab3@30768>   CLR.b a4a5store
0003BD82 <AmiBlitz3.ab3@30771>   MOVE.b (a3)+,d1
0003BD86 <AmiBlitz3.ab3@30772>   CMP.b #$15,d1
0003BD8A <AmiBlitz3.ab3@30773>   BEQ 'find
0003BD8E <AmiBlitz3.ab3@30774>   CMP.b #$14,d1
0003BD92 <AmiBlitz3.ab3@30775>   BEQ 'find
0003BD96 <AmiBlitz3.ab3@30776>   CMP.b #$ff,d1
0003BD9A <AmiBlitz3.ab3@30777>   BNE 'continue
0003BD9E <AmiBlitz3.ab3@30778>   BRA 'notfind
0003BDA4 <AmiBlitz3.ab3@30781>   MOVE.l #$48e7000c,d1                  ; write 68k movem.l a4/a5,-(a7)
0003BDAA <AmiBlitz3.ab3@30782>   JSR writelong
0003BDB2 <AmiBlitz3.ab3@30783>   MOVE.b #1,a4a5store
0003BDB6 <AmiBlitz3.ab3@30786>   MOVEM.l (a7)+,a3/d1
0003BDB8 <AmiBlitz3.ab3@30787> RTS
0003BDBE <AmiBlitz3.ab3@30791>   TST.b a4a5store
0003BDC2 <AmiBlitz3.ab3@30792>   BEQ 'no
0003BDC8 <AmiBlitz3.ab3@30793>   MOVE.l #$4cdf3000,d1                  ; write 68k movem.l (a7)+,a4/a5
0003BDCE <AmiBlitz3.ab3@30794>   JSR writelong
0003BDD4 <AmiBlitz3.ab3@30795>   CLR.b a4a5store
0003BDD6 <AmiBlitz3.ab3@30798> RTS
0003BDD6 <internal_commands.ab3@1> INCLUDE "internal_commands.ab3"
0003BDDA <internal_commands.ab3@13> INCLUDE "internal_commands.ab3"
0003BDDC <internal_commands.ab3@15> INCLUDE "internal_commands.ab3"
0003BDE4 <internal_commands.ab3@16> INCLUDE "internal_commands.ab3"
0003BDF0 <internal_commands.ab3@17> INCLUDE "internal_commands.ab3"
0003BDF4 <internal_commands.ab3@21> INCLUDE "internal_commands.ab3"
0003BDF6 <internal_commands.ab3@22> INCLUDE "internal_commands.ab3"
0003BDFA <internal_commands.ab3@23> INCLUDE "internal_commands.ab3"
0003BE43 <internal_commands.ab3@24> INCLUDE "internal_commands.ab3"
0003BE44 <internal_commands.ab3@25> INCLUDE "internal_commands.ab3"
0003BE48 <internal_commands.ab3@28> INCLUDE "internal_commands.ab3"
0003BE4A <internal_commands.ab3@29> INCLUDE "internal_commands.ab3"
0003BE4E <internal_commands.ab3@30> INCLUDE "internal_commands.ab3"
0003BE6A <internal_commands.ab3@31> INCLUDE "internal_commands.ab3"
0003BE6E <internal_commands.ab3@35> INCLUDE "internal_commands.ab3"
0003BE70 <internal_commands.ab3@36> INCLUDE "internal_commands.ab3"
0003BE74 <internal_commands.ab3@37> INCLUDE "internal_commands.ab3"
0003BED1 <internal_commands.ab3@38> INCLUDE "internal_commands.ab3"
0003BED2 <internal_commands.ab3@39> INCLUDE "internal_commands.ab3"
0003BED6 <internal_commands.ab3@42> INCLUDE "internal_commands.ab3"
0003BED8 <internal_commands.ab3@43> INCLUDE "internal_commands.ab3"
0003BEDD <internal_commands.ab3@44> INCLUDE "internal_commands.ab3"
0003BEED <internal_commands.ab3@45> INCLUDE "internal_commands.ab3"
0003BEEE <internal_commands.ab3@46> INCLUDE "internal_commands.ab3"
0003BEF2 <internal_commands.ab3@49> INCLUDE "internal_commands.ab3"
0003BEF4 <internal_commands.ab3@50> INCLUDE "internal_commands.ab3"
0003BEFA <internal_commands.ab3@51> INCLUDE "internal_commands.ab3"
0003BF0A <internal_commands.ab3@52> INCLUDE "internal_commands.ab3"
0003BF0E <internal_commands.ab3@56> INCLUDE "internal_commands.ab3"
0003BF10 <internal_commands.ab3@57> INCLUDE "internal_commands.ab3"
0003BF17 <internal_commands.ab3@58> INCLUDE "internal_commands.ab3"
0003BF18 <internal_commands.ab3@59> INCLUDE "internal_commands.ab3"
0003BF1C <internal_commands.ab3@63> INCLUDE "internal_commands.ab3"
0003BF1E <internal_commands.ab3@64> INCLUDE "internal_commands.ab3"
0003BF28 <internal_commands.ab3@65> INCLUDE "internal_commands.ab3"
0003BF5B <internal_commands.ab3@66> INCLUDE "internal_commands.ab3"
0003BF5C <internal_commands.ab3@67> INCLUDE "internal_commands.ab3"
0003BF60 <internal_commands.ab3@70> INCLUDE "internal_commands.ab3"
0003BF62 <internal_commands.ab3@71> INCLUDE "internal_commands.ab3"
0003BF6B <internal_commands.ab3@72> INCLUDE "internal_commands.ab3"
0003BFA6 <internal_commands.ab3@73> INCLUDE "internal_commands.ab3"
0003BFAA <internal_commands.ab3@77> INCLUDE "internal_commands.ab3"
0003BFAC <internal_commands.ab3@78> INCLUDE "internal_commands.ab3"
0003BFB6 <internal_commands.ab3@79> INCLUDE "internal_commands.ab3"
0003BFB7 <internal_commands.ab3@80> INCLUDE "internal_commands.ab3"
0003BFB8 <internal_commands.ab3@81> INCLUDE "internal_commands.ab3"
0003BFBC <internal_commands.ab3@84> INCLUDE "internal_commands.ab3"
0003BFBE <internal_commands.ab3@85> INCLUDE "internal_commands.ab3"
0003BFC1 <internal_commands.ab3@86> INCLUDE "internal_commands.ab3"
0003BFD8 <internal_commands.ab3@87> INCLUDE "internal_commands.ab3"
0003BFDC <internal_commands.ab3@91> INCLUDE "internal_commands.ab3"
0003BFDE <internal_commands.ab3@92> INCLUDE "internal_commands.ab3"
0003BFE4 <internal_commands.ab3@93> INCLUDE "internal_commands.ab3"
0003BFF1 <internal_commands.ab3@94> INCLUDE "internal_commands.ab3"
0003BFF2 <internal_commands.ab3@95> INCLUDE "internal_commands.ab3"
0003BFF6 <internal_commands.ab3@98> INCLUDE "internal_commands.ab3"
0003BFF8 <internal_commands.ab3@99> INCLUDE "internal_commands.ab3"
0003BFFE <internal_commands.ab3@100> INCLUDE "internal_commands.ab3"
0003C00A <internal_commands.ab3@101> INCLUDE "internal_commands.ab3"
0003C00E <internal_commands.ab3@105> INCLUDE "internal_commands.ab3"
0003C010 <internal_commands.ab3@106> INCLUDE "internal_commands.ab3"
0003C017 <internal_commands.ab3@107> INCLUDE "internal_commands.ab3"
0003C024 <internal_commands.ab3@108> INCLUDE "internal_commands.ab3"
0003C028 <internal_commands.ab3@112> INCLUDE "internal_commands.ab3"
0003C02A <internal_commands.ab3@113> INCLUDE "internal_commands.ab3"
0003C02F <internal_commands.ab3@114> INCLUDE "internal_commands.ab3"
0003C03C <internal_commands.ab3@115> INCLUDE "internal_commands.ab3"
0003C040 <internal_commands.ab3@119> INCLUDE "internal_commands.ab3"
0003C042 <internal_commands.ab3@120> INCLUDE "internal_commands.ab3"
0003C04A <internal_commands.ab3@121> INCLUDE "internal_commands.ab3"
0003C04B <internal_commands.ab3@122> INCLUDE "internal_commands.ab3"
0003C04C <internal_commands.ab3@123> INCLUDE "internal_commands.ab3"
0003C050 <internal_commands.ab3@126> INCLUDE "internal_commands.ab3"
0003C052 <internal_commands.ab3@127> INCLUDE "internal_commands.ab3"
0003C05A <internal_commands.ab3@128> INCLUDE "internal_commands.ab3"
0003C05B <internal_commands.ab3@129> INCLUDE "internal_commands.ab3"
0003C05C <internal_commands.ab3@130> INCLUDE "internal_commands.ab3"
0003C060 <internal_commands.ab3@133> INCLUDE "internal_commands.ab3"
0003C062 <internal_commands.ab3@134> INCLUDE "internal_commands.ab3"
0003C06B <internal_commands.ab3@135> INCLUDE "internal_commands.ab3"
0003C076 <internal_commands.ab3@136> INCLUDE "internal_commands.ab3"
0003C07A <internal_commands.ab3@140> INCLUDE "internal_commands.ab3"
0003C07C <internal_commands.ab3@141> INCLUDE "internal_commands.ab3"
0003C084 <internal_commands.ab3@142> INCLUDE "internal_commands.ab3"
0003C08F <internal_commands.ab3@143> INCLUDE "internal_commands.ab3"
0003C090 <internal_commands.ab3@144> INCLUDE "internal_commands.ab3"
0003C094 <internal_commands.ab3@147> INCLUDE "internal_commands.ab3"
0003C096 <internal_commands.ab3@148> INCLUDE "internal_commands.ab3"
0003C09D <internal_commands.ab3@149> INCLUDE "internal_commands.ab3"
0003C0FF <internal_commands.ab3@150> INCLUDE "internal_commands.ab3"
0003C100 <internal_commands.ab3@151> INCLUDE "internal_commands.ab3"
0003C104 <internal_commands.ab3@154> INCLUDE "internal_commands.ab3"
0003C106 <internal_commands.ab3@155> INCLUDE "internal_commands.ab3"
0003C10D <internal_commands.ab3@156> INCLUDE "internal_commands.ab3"
0003C11C <internal_commands.ab3@157> INCLUDE "internal_commands.ab3"
0003C120 <internal_commands.ab3@161> INCLUDE "internal_commands.ab3"
0003C122 <internal_commands.ab3@162> INCLUDE "internal_commands.ab3"
0003C126 <internal_commands.ab3@163> INCLUDE "internal_commands.ab3"
0003C15C <internal_commands.ab3@164> INCLUDE "internal_commands.ab3"
0003C160 <internal_commands.ab3@168> INCLUDE "internal_commands.ab3"
0003C162 <internal_commands.ab3@169> INCLUDE "internal_commands.ab3"
0003C167 <internal_commands.ab3@170> INCLUDE "internal_commands.ab3"
0003C176 <internal_commands.ab3@171> INCLUDE "internal_commands.ab3"
0003C17A <internal_commands.ab3@175> INCLUDE "internal_commands.ab3"
0003C17C <internal_commands.ab3@176> INCLUDE "internal_commands.ab3"
0003C17F <internal_commands.ab3@177> INCLUDE "internal_commands.ab3"
0003C1A0 <internal_commands.ab3@178> INCLUDE "internal_commands.ab3"
0003C1A4 <internal_commands.ab3@182> INCLUDE "internal_commands.ab3"
0003C1A6 <internal_commands.ab3@183> INCLUDE "internal_commands.ab3"
0003C1AB <internal_commands.ab3@184> INCLUDE "internal_commands.ab3"
0003C1B7 <internal_commands.ab3@185> INCLUDE "internal_commands.ab3"
0003C1B8 <internal_commands.ab3@186> INCLUDE "internal_commands.ab3"
0003C1BC <internal_commands.ab3@189> INCLUDE "internal_commands.ab3"
0003C1BE <internal_commands.ab3@190> INCLUDE "internal_commands.ab3"
0003C1C3 <internal_commands.ab3@191> INCLUDE "internal_commands.ab3"
0003C1DA <internal_commands.ab3@192> INCLUDE "internal_commands.ab3"
0003C1DE <internal_commands.ab3@196> INCLUDE "internal_commands.ab3"
0003C1E0 <internal_commands.ab3@197> INCLUDE "internal_commands.ab3"
0003C1E5 <internal_commands.ab3@198> INCLUDE "internal_commands.ab3"
0003C1F4 <internal_commands.ab3@199> INCLUDE "internal_commands.ab3"
0003C1F8 <internal_commands.ab3@203> INCLUDE "internal_commands.ab3"
0003C1FA <internal_commands.ab3@204> INCLUDE "internal_commands.ab3"
0003C1FF <internal_commands.ab3@205> INCLUDE "internal_commands.ab3"
0003C21E <internal_commands.ab3@206> INCLUDE "internal_commands.ab3"
0003C222 <internal_commands.ab3@210> INCLUDE "internal_commands.ab3"
0003C224 <internal_commands.ab3@211> INCLUDE "internal_commands.ab3"
0003C229 <internal_commands.ab3@212> INCLUDE "internal_commands.ab3"
0003C248 <internal_commands.ab3@213> INCLUDE "internal_commands.ab3"
0003C24C <internal_commands.ab3@217> INCLUDE "internal_commands.ab3"
0003C24E <internal_commands.ab3@218> INCLUDE "internal_commands.ab3"
0003C254 <internal_commands.ab3@219> INCLUDE "internal_commands.ab3"
0003C255 <internal_commands.ab3@220> INCLUDE "internal_commands.ab3"
0003C256 <internal_commands.ab3@221> INCLUDE "internal_commands.ab3"
0003C25A <internal_commands.ab3@224> INCLUDE "internal_commands.ab3"
0003C25C <internal_commands.ab3@225> INCLUDE "internal_commands.ab3"
0003C261 <internal_commands.ab3@226> INCLUDE "internal_commands.ab3"
0003C262 <internal_commands.ab3@227> INCLUDE "internal_commands.ab3"
0003C266 <internal_commands.ab3@231> INCLUDE "internal_commands.ab3"
0003C268 <internal_commands.ab3@232> INCLUDE "internal_commands.ab3"
0003C26D <internal_commands.ab3@233> INCLUDE "internal_commands.ab3"
0003C27A <internal_commands.ab3@234> INCLUDE "internal_commands.ab3"
0003C27E <internal_commands.ab3@238> INCLUDE "internal_commands.ab3"
0003C280 <internal_commands.ab3@239> INCLUDE "internal_commands.ab3"
0003C285 <internal_commands.ab3@240> INCLUDE "internal_commands.ab3"
0003C294 <internal_commands.ab3@241> INCLUDE "internal_commands.ab3"
0003C298 <internal_commands.ab3@245> INCLUDE "internal_commands.ab3"
0003C29A <internal_commands.ab3@246> INCLUDE "internal_commands.ab3"
0003C29F <internal_commands.ab3@247> INCLUDE "internal_commands.ab3"
0003C2AE <internal_commands.ab3@248> INCLUDE "internal_commands.ab3"
0003C2B2 <internal_commands.ab3@254> INCLUDE "internal_commands.ab3"
0003C2B4 <internal_commands.ab3@255> INCLUDE "internal_commands.ab3"
0003C2BA <internal_commands.ab3@256> INCLUDE "internal_commands.ab3"
0003C2D7 <internal_commands.ab3@257> INCLUDE "internal_commands.ab3"
0003C2D8 <internal_commands.ab3@258> INCLUDE "internal_commands.ab3"
0003C2DC <internal_commands.ab3@261> INCLUDE "internal_commands.ab3"
0003C2DE <internal_commands.ab3@262> INCLUDE "internal_commands.ab3"
0003C2E4 <internal_commands.ab3@263> INCLUDE "internal_commands.ab3"
0003C301 <internal_commands.ab3@264> INCLUDE "internal_commands.ab3"
0003C302 <internal_commands.ab3@265> INCLUDE "internal_commands.ab3"
0003C306 <internal_commands.ab3@268> INCLUDE "internal_commands.ab3"
0003C308 <internal_commands.ab3@269> INCLUDE "internal_commands.ab3"
0003C30B <internal_commands.ab3@270> INCLUDE "internal_commands.ab3"
0003C322 <internal_commands.ab3@271> INCLUDE "internal_commands.ab3"
0003C326 <internal_commands.ab3@275> INCLUDE "internal_commands.ab3"
0003C328 <internal_commands.ab3@276> INCLUDE "internal_commands.ab3"
0003C32B <internal_commands.ab3@277> INCLUDE "internal_commands.ab3"
0003C33A <internal_commands.ab3@278> INCLUDE "internal_commands.ab3"
0003C33E <internal_commands.ab3@282> INCLUDE "internal_commands.ab3"
0003C340 <internal_commands.ab3@283> INCLUDE "internal_commands.ab3"
0003C345 <internal_commands.ab3@284> INCLUDE "internal_commands.ab3"
0003C346 <internal_commands.ab3@285> INCLUDE "internal_commands.ab3"
0003C34A <internal_commands.ab3@289> INCLUDE "internal_commands.ab3"
0003C34C <internal_commands.ab3@290> INCLUDE "internal_commands.ab3"
0003C350 <internal_commands.ab3@291> INCLUDE "internal_commands.ab3"
0003C365 <internal_commands.ab3@292> INCLUDE "internal_commands.ab3"
0003C366 <internal_commands.ab3@293> INCLUDE "internal_commands.ab3"
0003C36A <internal_commands.ab3@296> INCLUDE "internal_commands.ab3"
0003C36C <internal_commands.ab3@297> INCLUDE "internal_commands.ab3"
0003C373 <internal_commands.ab3@298> INCLUDE "internal_commands.ab3"
0003C38C <internal_commands.ab3@299> INCLUDE "internal_commands.ab3"
0003C390 <internal_commands.ab3@303> INCLUDE "internal_commands.ab3"
0003C392 <internal_commands.ab3@304> INCLUDE "internal_commands.ab3"
0003C399 <internal_commands.ab3@305> INCLUDE "internal_commands.ab3"
0003C3A4 <internal_commands.ab3@306> INCLUDE "internal_commands.ab3"
0003C3A8 <internal_commands.ab3@312> INCLUDE "internal_commands.ab3"
0003C3AA <internal_commands.ab3@313> INCLUDE "internal_commands.ab3"
0003C3AF <internal_commands.ab3@314> INCLUDE "internal_commands.ab3"
0003C3C6 <internal_commands.ab3@315> INCLUDE "internal_commands.ab3"
0003C3CA <internal_commands.ab3@319> INCLUDE "internal_commands.ab3"
0003C3CC <internal_commands.ab3@320> INCLUDE "internal_commands.ab3"
0003C3D0 <internal_commands.ab3@321> INCLUDE "internal_commands.ab3"
0003C3E7 <internal_commands.ab3@322> INCLUDE "internal_commands.ab3"
0003C3E8 <internal_commands.ab3@323> INCLUDE "internal_commands.ab3"
0003C3EC <internal_commands.ab3@326> INCLUDE "internal_commands.ab3"
0003C3EE <internal_commands.ab3@327> INCLUDE "internal_commands.ab3"
0003C3F3 <internal_commands.ab3@328> INCLUDE "internal_commands.ab3"
0003C3F4 <internal_commands.ab3@329> INCLUDE "internal_commands.ab3"
0003C3F8 <internal_commands.ab3@333> INCLUDE "internal_commands.ab3"
0003C3FA <internal_commands.ab3@334> INCLUDE "internal_commands.ab3"
0003C3FF <internal_commands.ab3@335> INCLUDE "internal_commands.ab3"
0003C403 <internal_commands.ab3@336> INCLUDE "internal_commands.ab3"
0003C404 <internal_commands.ab3@337> INCLUDE "internal_commands.ab3"
0003C408 <internal_commands.ab3@340> INCLUDE "internal_commands.ab3"
0003C40A <internal_commands.ab3@341> INCLUDE "internal_commands.ab3"
0003C411 <internal_commands.ab3@342> INCLUDE "internal_commands.ab3"
0003C429 <internal_commands.ab3@343> INCLUDE "internal_commands.ab3"
0003C42A <internal_commands.ab3@344> INCLUDE "internal_commands.ab3"
0003C42E <internal_commands.ab3@347> INCLUDE "internal_commands.ab3"
0003C430 <internal_commands.ab3@348> INCLUDE "internal_commands.ab3"
0003C437 <internal_commands.ab3@349> INCLUDE "internal_commands.ab3"
0003C43C <internal_commands.ab3@350> INCLUDE "internal_commands.ab3"
0003C440 <internal_commands.ab3@354> INCLUDE "internal_commands.ab3"
0003C442 <internal_commands.ab3@355> INCLUDE "internal_commands.ab3"
0003C449 <internal_commands.ab3@356> INCLUDE "internal_commands.ab3"
0003C44E <internal_commands.ab3@357> INCLUDE "internal_commands.ab3"
0003C452 <internal_commands.ab3@361> INCLUDE "internal_commands.ab3"
0003C454 <internal_commands.ab3@362> INCLUDE "internal_commands.ab3"
0003C45B <internal_commands.ab3@363> INCLUDE "internal_commands.ab3"
0003C476 <internal_commands.ab3@364> INCLUDE "internal_commands.ab3"
0003C47A <internal_commands.ab3@368> INCLUDE "internal_commands.ab3"
0003C47C <internal_commands.ab3@369> INCLUDE "internal_commands.ab3"
0003C484 <internal_commands.ab3@370> INCLUDE "internal_commands.ab3"
0003C49D <internal_commands.ab3@371> INCLUDE "internal_commands.ab3"
0003C49E <internal_commands.ab3@372> INCLUDE "internal_commands.ab3"
0003C4A2 <internal_commands.ab3@375> INCLUDE "internal_commands.ab3"
0003C4A4 <internal_commands.ab3@376> INCLUDE "internal_commands.ab3"
0003C4AA <internal_commands.ab3@377> INCLUDE "internal_commands.ab3"
0003C4AB <internal_commands.ab3@378> INCLUDE "internal_commands.ab3"
0003C4AC <internal_commands.ab3@379> INCLUDE "internal_commands.ab3"
0003C4B0 <internal_commands.ab3@382> INCLUDE "internal_commands.ab3"
0003C4B2 <internal_commands.ab3@383> INCLUDE "internal_commands.ab3"
0003C4B8 <internal_commands.ab3@384> INCLUDE "internal_commands.ab3"
0003C4B9 <internal_commands.ab3@385> INCLUDE "internal_commands.ab3"
0003C4BA <internal_commands.ab3@386> INCLUDE "internal_commands.ab3"
0003C4BE <internal_commands.ab3@389> INCLUDE "internal_commands.ab3"
0003C4C0 <internal_commands.ab3@390> INCLUDE "internal_commands.ab3"
0003C4C7 <internal_commands.ab3@391> INCLUDE "internal_commands.ab3"
0003C4C8 <internal_commands.ab3@392> INCLUDE "internal_commands.ab3"
0003C4CC <internal_commands.ab3@396> INCLUDE "internal_commands.ab3"
0003C4CE <internal_commands.ab3@397> INCLUDE "internal_commands.ab3"
0003C4D4 <internal_commands.ab3@398> INCLUDE "internal_commands.ab3"
0003C4DD <internal_commands.ab3@399> INCLUDE "internal_commands.ab3"
0003C4DE <internal_commands.ab3@400> INCLUDE "internal_commands.ab3"
0003C4E2 <internal_commands.ab3@403> INCLUDE "internal_commands.ab3"
0003C4E4 <internal_commands.ab3@404> INCLUDE "internal_commands.ab3"
0003C4EC <internal_commands.ab3@405> INCLUDE "internal_commands.ab3"
0003C4F9 <internal_commands.ab3@406> INCLUDE "internal_commands.ab3"
0003C4FA <internal_commands.ab3@407> INCLUDE "internal_commands.ab3"
0003C4FE <internal_commands.ab3@410> INCLUDE "internal_commands.ab3"
0003C500 <internal_commands.ab3@411> INCLUDE "internal_commands.ab3"
0003C508 <internal_commands.ab3@412> INCLUDE "internal_commands.ab3"
0003C515 <internal_commands.ab3@413> INCLUDE "internal_commands.ab3"
0003C516 <internal_commands.ab3@414> INCLUDE "internal_commands.ab3"
0003C51A <internal_commands.ab3@417> INCLUDE "internal_commands.ab3"
0003C51C <internal_commands.ab3@418> INCLUDE "internal_commands.ab3"
0003C524 <internal_commands.ab3@419> INCLUDE "internal_commands.ab3"
0003C531 <internal_commands.ab3@420> INCLUDE "internal_commands.ab3"
0003C532 <internal_commands.ab3@421> INCLUDE "internal_commands.ab3"
0003C536 <internal_commands.ab3@424> INCLUDE "internal_commands.ab3"
0003C538 <internal_commands.ab3@425> INCLUDE "internal_commands.ab3"
0003C53D <internal_commands.ab3@426> INCLUDE "internal_commands.ab3"
0003C53E <internal_commands.ab3@427> INCLUDE "internal_commands.ab3"
0003C542 <internal_commands.ab3@517> INCLUDE "internal_commands.ab3"
0003C544 <internal_commands.ab3@518> INCLUDE "internal_commands.ab3"
0003C549 <internal_commands.ab3@519> INCLUDE "internal_commands.ab3"
0003C54A <internal_commands.ab3@520> INCLUDE "internal_commands.ab3"
0003C54C <internal_commands.ab3@523> INCLUDE "internal_commands.ab3"
0003C550 <internal_commands.ab3@524> INCLUDE "internal_commands.ab3"
0003C552 <internal_commands.ab3@525> INCLUDE "internal_commands.ab3"
0003C554 <internal_commands.ab3@526> INCLUDE "internal_commands.ab3"
0003C558 <internal_commands.ab3@527> INCLUDE "internal_commands.ab3"
0003C55A <internal_commands.ab3@528> INCLUDE "internal_commands.ab3"
0003C55E <internal_commands.ab3@532> INCLUDE "internal_commands.ab3"
0003C560 <internal_commands.ab3@533> INCLUDE "internal_commands.ab3"
0003C564 <internal_commands.ab3@534> INCLUDE "internal_commands.ab3"
0003C565 <internal_commands.ab3@535> INCLUDE "internal_commands.ab3"
0003C566 <internal_commands.ab3@536> INCLUDE "internal_commands.ab3"
0003C568 <internal_commands.ab3@538> INCLUDE "internal_commands.ab3"
0003C56C <internal_commands.ab3@539> INCLUDE "internal_commands.ab3"
0003C56E <internal_commands.ab3@540> INCLUDE "internal_commands.ab3"
0003C570 <internal_commands.ab3@541> INCLUDE "internal_commands.ab3"
0003C574 <internal_commands.ab3@542> INCLUDE "internal_commands.ab3"
0003C576 <internal_commands.ab3@543> INCLUDE "internal_commands.ab3"
0003C57A <internal_commands.ab3@547> INCLUDE "internal_commands.ab3"
0003C57C <internal_commands.ab3@548> INCLUDE "internal_commands.ab3"
0003C581 <internal_commands.ab3@549> INCLUDE "internal_commands.ab3"
0003C582 <internal_commands.ab3@550> INCLUDE "internal_commands.ab3"
0003C584 <internal_commands.ab3@553> INCLUDE "internal_commands.ab3"
0003C588 <internal_commands.ab3@554> INCLUDE "internal_commands.ab3"
0003C58A <internal_commands.ab3@555> INCLUDE "internal_commands.ab3"
0003C58C <internal_commands.ab3@556> INCLUDE "internal_commands.ab3"
0003C590 <internal_commands.ab3@557> INCLUDE "internal_commands.ab3"
0003C592 <internal_commands.ab3@558> INCLUDE "internal_commands.ab3"
0003C596 <internal_commands.ab3@562> INCLUDE "internal_commands.ab3"
0003C598 <internal_commands.ab3@563> INCLUDE "internal_commands.ab3"
0003C59D <internal_commands.ab3@564> INCLUDE "internal_commands.ab3"
0003C59E <internal_commands.ab3@565> INCLUDE "internal_commands.ab3"
0003C5A0 <internal_commands.ab3@568> INCLUDE "internal_commands.ab3"
0003C5A4 <internal_commands.ab3@569> INCLUDE "internal_commands.ab3"
0003C5A6 <internal_commands.ab3@570> INCLUDE "internal_commands.ab3"
0003C5A8 <internal_commands.ab3@571> INCLUDE "internal_commands.ab3"
0003C5AC <internal_commands.ab3@572> INCLUDE "internal_commands.ab3"
0003C5AE <internal_commands.ab3@573> INCLUDE "internal_commands.ab3"
0003C5B2 <internal_commands.ab3@577> INCLUDE "internal_commands.ab3"
0003C5B4 <internal_commands.ab3@578> INCLUDE "internal_commands.ab3"
0003C5B9 <internal_commands.ab3@579> INCLUDE "internal_commands.ab3"
0003C5BA <internal_commands.ab3@580> INCLUDE "internal_commands.ab3"
0003C5BC <internal_commands.ab3@583> INCLUDE "internal_commands.ab3"
0003C5C0 <internal_commands.ab3@584> INCLUDE "internal_commands.ab3"
0003C5C2 <internal_commands.ab3@585> INCLUDE "internal_commands.ab3"
0003C5C4 <internal_commands.ab3@586> INCLUDE "internal_commands.ab3"
0003C5C8 <internal_commands.ab3@587> INCLUDE "internal_commands.ab3"
0003C5CA <internal_commands.ab3@588> INCLUDE "internal_commands.ab3"
0003C5CE <internal_commands.ab3@592> INCLUDE "internal_commands.ab3"
0003C5D0 <internal_commands.ab3@593> INCLUDE "internal_commands.ab3"
0003C5D5 <internal_commands.ab3@594> INCLUDE "internal_commands.ab3"
0003C5D6 <internal_commands.ab3@595> INCLUDE "internal_commands.ab3"
0003C5D8 <internal_commands.ab3@598> INCLUDE "internal_commands.ab3"
0003C5DC <internal_commands.ab3@599> INCLUDE "internal_commands.ab3"
0003C5DE <internal_commands.ab3@600> INCLUDE "internal_commands.ab3"
0003C5E0 <internal_commands.ab3@601> INCLUDE "internal_commands.ab3"
0003C5E4 <internal_commands.ab3@602> INCLUDE "internal_commands.ab3"
0003C5E6 <internal_commands.ab3@603> INCLUDE "internal_commands.ab3"
0003C5EA <internal_commands.ab3@607> INCLUDE "internal_commands.ab3"
0003C5EC <internal_commands.ab3@608> INCLUDE "internal_commands.ab3"
0003C5F0 <internal_commands.ab3@609> INCLUDE "internal_commands.ab3"
0003C5F1 <internal_commands.ab3@610> INCLUDE "internal_commands.ab3"
0003C5F2 <internal_commands.ab3@611> INCLUDE "internal_commands.ab3"
0003C5F4 <internal_commands.ab3@613> INCLUDE "internal_commands.ab3"
0003C5F8 <internal_commands.ab3@614> INCLUDE "internal_commands.ab3"
0003C5FA <internal_commands.ab3@615> INCLUDE "internal_commands.ab3"
0003C5FC <internal_commands.ab3@616> INCLUDE "internal_commands.ab3"
0003C600 <internal_commands.ab3@617> INCLUDE "internal_commands.ab3"
0003C602 <internal_commands.ab3@618> INCLUDE "internal_commands.ab3"
0003C606 <internal_commands.ab3@622> INCLUDE "internal_commands.ab3"
0003C608 <internal_commands.ab3@623> INCLUDE "internal_commands.ab3"
0003C60D <internal_commands.ab3@624> INCLUDE "internal_commands.ab3"
0003C60E <internal_commands.ab3@625> INCLUDE "internal_commands.ab3"
0003C610 <internal_commands.ab3@628> INCLUDE "internal_commands.ab3"
0003C614 <internal_commands.ab3@629> INCLUDE "internal_commands.ab3"
0003C616 <internal_commands.ab3@630> INCLUDE "internal_commands.ab3"
0003C618 <internal_commands.ab3@631> INCLUDE "internal_commands.ab3"
0003C61C <internal_commands.ab3@632> INCLUDE "internal_commands.ab3"
0003C61E <internal_commands.ab3@633> INCLUDE "internal_commands.ab3"
0003C622 <internal_commands.ab3@637> INCLUDE "internal_commands.ab3"
0003C624 <internal_commands.ab3@638> INCLUDE "internal_commands.ab3"
0003C628 <internal_commands.ab3@639> INCLUDE "internal_commands.ab3"
0003C629 <internal_commands.ab3@640> INCLUDE "internal_commands.ab3"
0003C62A <internal_commands.ab3@641> INCLUDE "internal_commands.ab3"
0003C62C <internal_commands.ab3@643> INCLUDE "internal_commands.ab3"
0003C630 <internal_commands.ab3@644> INCLUDE "internal_commands.ab3"
0003C632 <internal_commands.ab3@645> INCLUDE "internal_commands.ab3"
0003C634 <internal_commands.ab3@646> INCLUDE "internal_commands.ab3"
0003C638 <internal_commands.ab3@647> INCLUDE "internal_commands.ab3"
0003C63A <internal_commands.ab3@648> INCLUDE "internal_commands.ab3"
0003C63E <internal_commands.ab3@652> INCLUDE "internal_commands.ab3"
0003C640 <internal_commands.ab3@653> INCLUDE "internal_commands.ab3"
0003C644 <internal_commands.ab3@654> INCLUDE "internal_commands.ab3"
0003C645 <internal_commands.ab3@655> INCLUDE "internal_commands.ab3"
0003C646 <internal_commands.ab3@656> INCLUDE "internal_commands.ab3"
0003C648 <internal_commands.ab3@658> INCLUDE "internal_commands.ab3"
0003C64C <internal_commands.ab3@659> INCLUDE "internal_commands.ab3"
0003C64E <internal_commands.ab3@660> INCLUDE "internal_commands.ab3"
0003C650 <internal_commands.ab3@661> INCLUDE "internal_commands.ab3"
0003C654 <internal_commands.ab3@662> INCLUDE "internal_commands.ab3"
0003C656 <internal_commands.ab3@663> INCLUDE "internal_commands.ab3"
0003C65A <internal_commands.ab3@667> INCLUDE "internal_commands.ab3"
0003C65C <internal_commands.ab3@668> INCLUDE "internal_commands.ab3"
0003C660 <internal_commands.ab3@669> INCLUDE "internal_commands.ab3"
0003C661 <internal_commands.ab3@670> INCLUDE "internal_commands.ab3"
0003C662 <internal_commands.ab3@671> INCLUDE "internal_commands.ab3"
0003C664 <internal_commands.ab3@673> INCLUDE "internal_commands.ab3"
0003C668 <internal_commands.ab3@674> INCLUDE "internal_commands.ab3"
0003C66A <internal_commands.ab3@675> INCLUDE "internal_commands.ab3"
0003C66C <internal_commands.ab3@676> INCLUDE "internal_commands.ab3"
0003C670 <internal_commands.ab3@677> INCLUDE "internal_commands.ab3"
0003C672 <internal_commands.ab3@678> INCLUDE "internal_commands.ab3"
0003C676 <internal_commands.ab3@682> INCLUDE "internal_commands.ab3"
0003C678 <internal_commands.ab3@683> INCLUDE "internal_commands.ab3"
0003C67C <internal_commands.ab3@684> INCLUDE "internal_commands.ab3"
0003C67D <internal_commands.ab3@685> INCLUDE "internal_commands.ab3"
0003C67E <internal_commands.ab3@686> INCLUDE "internal_commands.ab3"
0003C680 <internal_commands.ab3@688> INCLUDE "internal_commands.ab3"
0003C684 <internal_commands.ab3@689> INCLUDE "internal_commands.ab3"
0003C686 <internal_commands.ab3@690> INCLUDE "internal_commands.ab3"
0003C688 <internal_commands.ab3@691> INCLUDE "internal_commands.ab3"
0003C68C <internal_commands.ab3@692> INCLUDE "internal_commands.ab3"
0003C68E <internal_commands.ab3@693> INCLUDE "internal_commands.ab3"
0003C692 <internal_commands.ab3@697> INCLUDE "internal_commands.ab3"
0003C694 <internal_commands.ab3@698> INCLUDE "internal_commands.ab3"
0003C698 <internal_commands.ab3@699> INCLUDE "internal_commands.ab3"
0003C699 <internal_commands.ab3@700> INCLUDE "internal_commands.ab3"
0003C69A <internal_commands.ab3@701> INCLUDE "internal_commands.ab3"
0003C69C <internal_commands.ab3@703> INCLUDE "internal_commands.ab3"
0003C6A0 <internal_commands.ab3@704> INCLUDE "internal_commands.ab3"
0003C6A2 <internal_commands.ab3@705> INCLUDE "internal_commands.ab3"
0003C6A4 <internal_commands.ab3@706> INCLUDE "internal_commands.ab3"
0003C6A8 <internal_commands.ab3@707> INCLUDE "internal_commands.ab3"
0003C6AA <internal_commands.ab3@708> INCLUDE "internal_commands.ab3"
0003C6AE <internal_commands.ab3@712> INCLUDE "internal_commands.ab3"
0003C6B0 <internal_commands.ab3@713> INCLUDE "internal_commands.ab3"
0003C6B4 <internal_commands.ab3@714> INCLUDE "internal_commands.ab3"
0003C6B5 <internal_commands.ab3@715> INCLUDE "internal_commands.ab3"
0003C6B6 <internal_commands.ab3@716> INCLUDE "internal_commands.ab3"
0003C6B8 <internal_commands.ab3@718> INCLUDE "internal_commands.ab3"
0003C6BC <internal_commands.ab3@719> INCLUDE "internal_commands.ab3"
0003C6BE <internal_commands.ab3@720> INCLUDE "internal_commands.ab3"
0003C6C0 <internal_commands.ab3@721> INCLUDE "internal_commands.ab3"
0003C6C4 <internal_commands.ab3@722> INCLUDE "internal_commands.ab3"
0003C6C6 <internal_commands.ab3@723> INCLUDE "internal_commands.ab3"
0003C6CA <internal_commands.ab3@727> INCLUDE "internal_commands.ab3"
0003C6CC <internal_commands.ab3@728> INCLUDE "internal_commands.ab3"
0003C6D0 <internal_commands.ab3@729> INCLUDE "internal_commands.ab3"
0003C6D1 <internal_commands.ab3@730> INCLUDE "internal_commands.ab3"
0003C6D2 <internal_commands.ab3@731> INCLUDE "internal_commands.ab3"
0003C6D4 <internal_commands.ab3@733> INCLUDE "internal_commands.ab3"
0003C6D8 <internal_commands.ab3@734> INCLUDE "internal_commands.ab3"
0003C6DA <internal_commands.ab3@735> INCLUDE "internal_commands.ab3"
0003C6DC <internal_commands.ab3@736> INCLUDE "internal_commands.ab3"
0003C6E0 <internal_commands.ab3@737> INCLUDE "internal_commands.ab3"
0003C6E2 <internal_commands.ab3@738> INCLUDE "internal_commands.ab3"
0003C6E6 <internal_commands.ab3@742> INCLUDE "internal_commands.ab3"
0003C6E8 <internal_commands.ab3@743> INCLUDE "internal_commands.ab3"
0003C6EC <internal_commands.ab3@744> INCLUDE "internal_commands.ab3"
0003C6ED <internal_commands.ab3@745> INCLUDE "internal_commands.ab3"
0003C6EE <internal_commands.ab3@746> INCLUDE "internal_commands.ab3"
0003C6F0 <internal_commands.ab3@748> INCLUDE "internal_commands.ab3"
0003C6F4 <internal_commands.ab3@749> INCLUDE "internal_commands.ab3"
0003C6F6 <internal_commands.ab3@750> INCLUDE "internal_commands.ab3"
0003C6F8 <internal_commands.ab3@751> INCLUDE "internal_commands.ab3"
0003C6FC <internal_commands.ab3@752> INCLUDE "internal_commands.ab3"
0003C6FE <internal_commands.ab3@753> INCLUDE "internal_commands.ab3"
0003C702 <internal_commands.ab3@757> INCLUDE "internal_commands.ab3"
0003C704 <internal_commands.ab3@758> INCLUDE "internal_commands.ab3"
0003C708 <internal_commands.ab3@759> INCLUDE "internal_commands.ab3"
0003C709 <internal_commands.ab3@760> INCLUDE "internal_commands.ab3"
0003C70A <internal_commands.ab3@761> INCLUDE "internal_commands.ab3"
0003C70C <internal_commands.ab3@763> INCLUDE "internal_commands.ab3"
0003C710 <internal_commands.ab3@764> INCLUDE "internal_commands.ab3"
0003C712 <internal_commands.ab3@765> INCLUDE "internal_commands.ab3"
0003C714 <internal_commands.ab3@766> INCLUDE "internal_commands.ab3"
0003C718 <internal_commands.ab3@767> INCLUDE "internal_commands.ab3"
0003C71A <internal_commands.ab3@768> INCLUDE "internal_commands.ab3"
0003C71E <internal_commands.ab3@772> INCLUDE "internal_commands.ab3"
0003C720 <internal_commands.ab3@773> INCLUDE "internal_commands.ab3"
0003C724 <internal_commands.ab3@774> INCLUDE "internal_commands.ab3"
0003C725 <internal_commands.ab3@775> INCLUDE "internal_commands.ab3"
0003C726 <internal_commands.ab3@776> INCLUDE "internal_commands.ab3"
0003C728 <internal_commands.ab3@778> INCLUDE "internal_commands.ab3"
0003C72C <internal_commands.ab3@779> INCLUDE "internal_commands.ab3"
0003C72E <internal_commands.ab3@780> INCLUDE "internal_commands.ab3"
0003C730 <internal_commands.ab3@781> INCLUDE "internal_commands.ab3"
0003C734 <internal_commands.ab3@782> INCLUDE "internal_commands.ab3"
0003C736 <internal_commands.ab3@783> INCLUDE "internal_commands.ab3"
0003C73A <internal_commands.ab3@787> INCLUDE "internal_commands.ab3"
0003C73C <internal_commands.ab3@788> INCLUDE "internal_commands.ab3"
0003C740 <internal_commands.ab3@789> INCLUDE "internal_commands.ab3"
0003C741 <internal_commands.ab3@790> INCLUDE "internal_commands.ab3"
0003C742 <internal_commands.ab3@791> INCLUDE "internal_commands.ab3"
0003C744 <internal_commands.ab3@793> INCLUDE "internal_commands.ab3"
0003C748 <internal_commands.ab3@794> INCLUDE "internal_commands.ab3"
0003C74A <internal_commands.ab3@795> INCLUDE "internal_commands.ab3"
0003C74C <internal_commands.ab3@796> INCLUDE "internal_commands.ab3"
0003C750 <internal_commands.ab3@797> INCLUDE "internal_commands.ab3"
0003C752 <internal_commands.ab3@798> INCLUDE "internal_commands.ab3"
0003C756 <internal_commands.ab3@802> INCLUDE "internal_commands.ab3"
0003C758 <internal_commands.ab3@803> INCLUDE "internal_commands.ab3"
0003C75C <internal_commands.ab3@804> INCLUDE "internal_commands.ab3"
0003C75D <internal_commands.ab3@805> INCLUDE "internal_commands.ab3"
0003C75E <internal_commands.ab3@806> INCLUDE "internal_commands.ab3"
0003C760 <internal_commands.ab3@808> INCLUDE "internal_commands.ab3"
0003C764 <internal_commands.ab3@809> INCLUDE "internal_commands.ab3"
0003C766 <internal_commands.ab3@810> INCLUDE "internal_commands.ab3"
0003C768 <internal_commands.ab3@811> INCLUDE "internal_commands.ab3"
0003C76C <internal_commands.ab3@812> INCLUDE "internal_commands.ab3"
0003C76E <internal_commands.ab3@813> INCLUDE "internal_commands.ab3"
0003C772 <internal_commands.ab3@817> INCLUDE "internal_commands.ab3"
0003C774 <internal_commands.ab3@818> INCLUDE "internal_commands.ab3"
0003C778 <internal_commands.ab3@819> INCLUDE "internal_commands.ab3"
0003C779 <internal_commands.ab3@820> INCLUDE "internal_commands.ab3"
0003C77A <internal_commands.ab3@821> INCLUDE "internal_commands.ab3"
0003C77C <internal_commands.ab3@823> INCLUDE "internal_commands.ab3"
0003C780 <internal_commands.ab3@824> INCLUDE "internal_commands.ab3"
0003C782 <internal_commands.ab3@825> INCLUDE "internal_commands.ab3"
0003C784 <internal_commands.ab3@826> INCLUDE "internal_commands.ab3"
0003C788 <internal_commands.ab3@827> INCLUDE "internal_commands.ab3"
0003C78A <internal_commands.ab3@828> INCLUDE "internal_commands.ab3"
0003C78E <internal_commands.ab3@832> INCLUDE "internal_commands.ab3"
0003C790 <internal_commands.ab3@833> INCLUDE "internal_commands.ab3"
0003C794 <internal_commands.ab3@834> INCLUDE "internal_commands.ab3"
0003C795 <internal_commands.ab3@835> INCLUDE "internal_commands.ab3"
0003C796 <internal_commands.ab3@836> INCLUDE "internal_commands.ab3"
0003C798 <internal_commands.ab3@838> INCLUDE "internal_commands.ab3"
0003C79C <internal_commands.ab3@839> INCLUDE "internal_commands.ab3"
0003C79E <internal_commands.ab3@840> INCLUDE "internal_commands.ab3"
0003C7A0 <internal_commands.ab3@841> INCLUDE "internal_commands.ab3"
0003C7A4 <internal_commands.ab3@842> INCLUDE "internal_commands.ab3"
0003C7A6 <internal_commands.ab3@843> INCLUDE "internal_commands.ab3"
0003C7AA <internal_commands.ab3@847> INCLUDE "internal_commands.ab3"
0003C7AC <internal_commands.ab3@848> INCLUDE "internal_commands.ab3"
0003C7B0 <internal_commands.ab3@849> INCLUDE "internal_commands.ab3"
0003C7B1 <internal_commands.ab3@850> INCLUDE "internal_commands.ab3"
0003C7B2 <internal_commands.ab3@851> INCLUDE "internal_commands.ab3"
0003C7B4 <internal_commands.ab3@853> INCLUDE "internal_commands.ab3"
0003C7B8 <internal_commands.ab3@854> INCLUDE "internal_commands.ab3"
0003C7BA <internal_commands.ab3@855> INCLUDE "internal_commands.ab3"
0003C7BC <internal_commands.ab3@856> INCLUDE "internal_commands.ab3"
0003C7C0 <internal_commands.ab3@857> INCLUDE "internal_commands.ab3"
0003C7C2 <internal_commands.ab3@858> INCLUDE "internal_commands.ab3"
0003C7C6 <internal_commands.ab3@862> INCLUDE "internal_commands.ab3"
0003C7C8 <internal_commands.ab3@863> INCLUDE "internal_commands.ab3"
0003C7CC <internal_commands.ab3@864> INCLUDE "internal_commands.ab3"
0003C7CD <internal_commands.ab3@865> INCLUDE "internal_commands.ab3"
0003C7CE <internal_commands.ab3@866> INCLUDE "internal_commands.ab3"
0003C7D0 <internal_commands.ab3@868> INCLUDE "internal_commands.ab3"
0003C7D4 <internal_commands.ab3@869> INCLUDE "internal_commands.ab3"
0003C7D6 <internal_commands.ab3@870> INCLUDE "internal_commands.ab3"
0003C7D8 <internal_commands.ab3@871> INCLUDE "internal_commands.ab3"
0003C7DC <internal_commands.ab3@872> INCLUDE "internal_commands.ab3"
0003C7DE <internal_commands.ab3@873> INCLUDE "internal_commands.ab3"
0003C7E2 <internal_commands.ab3@877> INCLUDE "internal_commands.ab3"
0003C7E4 <internal_commands.ab3@878> INCLUDE "internal_commands.ab3"
0003C7E9 <internal_commands.ab3@879> INCLUDE "internal_commands.ab3"
0003C7EA <internal_commands.ab3@880> INCLUDE "internal_commands.ab3"
0003C7EC <internal_commands.ab3@883> INCLUDE "internal_commands.ab3"
0003C7F0 <internal_commands.ab3@884> INCLUDE "internal_commands.ab3"
0003C7F2 <internal_commands.ab3@885> INCLUDE "internal_commands.ab3"
0003C7F4 <internal_commands.ab3@886> INCLUDE "internal_commands.ab3"
0003C7F8 <internal_commands.ab3@887> INCLUDE "internal_commands.ab3"
0003C7FA <internal_commands.ab3@888> INCLUDE "internal_commands.ab3"
0003C7FE <internal_commands.ab3@892> INCLUDE "internal_commands.ab3"
0003C800 <internal_commands.ab3@893> INCLUDE "internal_commands.ab3"
0003C805 <internal_commands.ab3@894> INCLUDE "internal_commands.ab3"
0003C806 <internal_commands.ab3@895> INCLUDE "internal_commands.ab3"
0003C808 <internal_commands.ab3@898> INCLUDE "internal_commands.ab3"
0003C80C <internal_commands.ab3@899> INCLUDE "internal_commands.ab3"
0003C80E <internal_commands.ab3@900> INCLUDE "internal_commands.ab3"
0003C810 <internal_commands.ab3@901> INCLUDE "internal_commands.ab3"
0003C814 <internal_commands.ab3@902> INCLUDE "internal_commands.ab3"
0003C816 <internal_commands.ab3@903> INCLUDE "internal_commands.ab3"
0003C81A <internal_commands.ab3@907> INCLUDE "internal_commands.ab3"
0003C81C <internal_commands.ab3@908> INCLUDE "internal_commands.ab3"
0003C821 <internal_commands.ab3@909> INCLUDE "internal_commands.ab3"
0003C822 <internal_commands.ab3@910> INCLUDE "internal_commands.ab3"
0003C824 <internal_commands.ab3@913> INCLUDE "internal_commands.ab3"
0003C828 <internal_commands.ab3@914> INCLUDE "internal_commands.ab3"
0003C82A <internal_commands.ab3@915> INCLUDE "internal_commands.ab3"
0003C82C <internal_commands.ab3@916> INCLUDE "internal_commands.ab3"
0003C830 <internal_commands.ab3@917> INCLUDE "internal_commands.ab3"
0003C832 <internal_commands.ab3@918> INCLUDE "internal_commands.ab3"
0003C836 <internal_commands.ab3@922> INCLUDE "internal_commands.ab3"
0003C838 <internal_commands.ab3@923> INCLUDE "internal_commands.ab3"
0003C83D <internal_commands.ab3@924> INCLUDE "internal_commands.ab3"
0003C83E <internal_commands.ab3@925> INCLUDE "internal_commands.ab3"
0003C840 <internal_commands.ab3@928> INCLUDE "internal_commands.ab3"
0003C844 <internal_commands.ab3@929> INCLUDE "internal_commands.ab3"
0003C846 <internal_commands.ab3@930> INCLUDE "internal_commands.ab3"
0003C848 <internal_commands.ab3@931> INCLUDE "internal_commands.ab3"
0003C84C <internal_commands.ab3@932> INCLUDE "internal_commands.ab3"
0003C84E <internal_commands.ab3@933> INCLUDE "internal_commands.ab3"
0003C852 <internal_commands.ab3@937> INCLUDE "internal_commands.ab3"
0003C854 <internal_commands.ab3@938> INCLUDE "internal_commands.ab3"
0003C858 <internal_commands.ab3@939> INCLUDE "internal_commands.ab3"
0003C859 <internal_commands.ab3@940> INCLUDE "internal_commands.ab3"
0003C85A <internal_commands.ab3@941> INCLUDE "internal_commands.ab3"
0003C85C <internal_commands.ab3@943> INCLUDE "internal_commands.ab3"
0003C860 <internal_commands.ab3@944> INCLUDE "internal_commands.ab3"
0003C862 <internal_commands.ab3@945> INCLUDE "internal_commands.ab3"
0003C864 <internal_commands.ab3@946> INCLUDE "internal_commands.ab3"
0003C868 <internal_commands.ab3@947> INCLUDE "internal_commands.ab3"
0003C86A <internal_commands.ab3@948> INCLUDE "internal_commands.ab3"
0003C86E <internal_commands.ab3@952> INCLUDE "internal_commands.ab3"
0003C870 <internal_commands.ab3@953> INCLUDE "internal_commands.ab3"
0003C874 <internal_commands.ab3@954> INCLUDE "internal_commands.ab3"
0003C875 <internal_commands.ab3@955> INCLUDE "internal_commands.ab3"
0003C876 <internal_commands.ab3@956> INCLUDE "internal_commands.ab3"
0003C878 <internal_commands.ab3@958> INCLUDE "internal_commands.ab3"
0003C87C <internal_commands.ab3@959> INCLUDE "internal_commands.ab3"
0003C87E <internal_commands.ab3@960> INCLUDE "internal_commands.ab3"
0003C880 <internal_commands.ab3@961> INCLUDE "internal_commands.ab3"
0003C884 <internal_commands.ab3@962> INCLUDE "internal_commands.ab3"
0003C886 <internal_commands.ab3@963> INCLUDE "internal_commands.ab3"
0003C88A <internal_commands.ab3@967> INCLUDE "internal_commands.ab3"
0003C88C <internal_commands.ab3@968> INCLUDE "internal_commands.ab3"
0003C890 <internal_commands.ab3@969> INCLUDE "internal_commands.ab3"
0003C891 <internal_commands.ab3@970> INCLUDE "internal_commands.ab3"
0003C892 <internal_commands.ab3@971> INCLUDE "internal_commands.ab3"
0003C894 <internal_commands.ab3@973> INCLUDE "internal_commands.ab3"
0003C898 <internal_commands.ab3@974> INCLUDE "internal_commands.ab3"
0003C89A <internal_commands.ab3@975> INCLUDE "internal_commands.ab3"
0003C89C <internal_commands.ab3@976> INCLUDE "internal_commands.ab3"
0003C8A0 <internal_commands.ab3@977> INCLUDE "internal_commands.ab3"
0003C8A2 <internal_commands.ab3@978> INCLUDE "internal_commands.ab3"
0003C8A6 <internal_commands.ab3@982> INCLUDE "internal_commands.ab3"
0003C8A8 <internal_commands.ab3@983> INCLUDE "internal_commands.ab3"
0003C8AC <internal_commands.ab3@984> INCLUDE "internal_commands.ab3"
0003C8AD <internal_commands.ab3@985> INCLUDE "internal_commands.ab3"
0003C8AE <internal_commands.ab3@986> INCLUDE "internal_commands.ab3"
0003C8B0 <internal_commands.ab3@988> INCLUDE "internal_commands.ab3"
0003C8B4 <internal_commands.ab3@989> INCLUDE "internal_commands.ab3"
0003C8B6 <internal_commands.ab3@990> INCLUDE "internal_commands.ab3"
0003C8B8 <internal_commands.ab3@991> INCLUDE "internal_commands.ab3"
0003C8BC <internal_commands.ab3@992> INCLUDE "internal_commands.ab3"
0003C8BE <internal_commands.ab3@993> INCLUDE "internal_commands.ab3"
0003C8C2 <internal_commands.ab3@997> INCLUDE "internal_commands.ab3"
0003C8C4 <internal_commands.ab3@998> INCLUDE "internal_commands.ab3"
0003C8C8 <internal_commands.ab3@999> INCLUDE "internal_commands.ab3"
0003C8C9 <internal_commands.ab3@1000> INCLUDE "internal_commands.ab3"
0003C8CA <internal_commands.ab3@1001> INCLUDE "internal_commands.ab3"
0003C8CC <internal_commands.ab3@1003> INCLUDE "internal_commands.ab3"
0003C8D0 <internal_commands.ab3@1004> INCLUDE "internal_commands.ab3"
0003C8D2 <internal_commands.ab3@1005> INCLUDE "internal_commands.ab3"
0003C8D4 <internal_commands.ab3@1006> INCLUDE "internal_commands.ab3"
0003C8D8 <internal_commands.ab3@1007> INCLUDE "internal_commands.ab3"
0003C8DA <internal_commands.ab3@1008> INCLUDE "internal_commands.ab3"
0003C8DE <internal_commands.ab3@1012> INCLUDE "internal_commands.ab3"
0003C8E0 <internal_commands.ab3@1013> INCLUDE "internal_commands.ab3"
0003C8E5 <internal_commands.ab3@1014> INCLUDE "internal_commands.ab3"
0003C8E6 <internal_commands.ab3@1015> INCLUDE "internal_commands.ab3"
0003C8E8 <internal_commands.ab3@1018> INCLUDE "internal_commands.ab3"
0003C8EC <internal_commands.ab3@1019> INCLUDE "internal_commands.ab3"
0003C8EE <internal_commands.ab3@1020> INCLUDE "internal_commands.ab3"
0003C8F0 <internal_commands.ab3@1021> INCLUDE "internal_commands.ab3"
0003C8F4 <internal_commands.ab3@1022> INCLUDE "internal_commands.ab3"
0003C8F6 <internal_commands.ab3@1023> INCLUDE "internal_commands.ab3"
0003C8FA <internal_commands.ab3@1027> INCLUDE "internal_commands.ab3"
0003C8FC <internal_commands.ab3@1028> INCLUDE "internal_commands.ab3"
0003C901 <internal_commands.ab3@1029> INCLUDE "internal_commands.ab3"
0003C902 <internal_commands.ab3@1030> INCLUDE "internal_commands.ab3"
0003C904 <internal_commands.ab3@1033> INCLUDE "internal_commands.ab3"
0003C908 <internal_commands.ab3@1034> INCLUDE "internal_commands.ab3"
0003C90A <internal_commands.ab3@1035> INCLUDE "internal_commands.ab3"
0003C90C <internal_commands.ab3@1036> INCLUDE "internal_commands.ab3"
0003C910 <internal_commands.ab3@1037> INCLUDE "internal_commands.ab3"
0003C912 <internal_commands.ab3@1038> INCLUDE "internal_commands.ab3"
0003C916 <internal_commands.ab3@1042> INCLUDE "internal_commands.ab3"
0003C918 <internal_commands.ab3@1043> INCLUDE "internal_commands.ab3"
0003C91D <internal_commands.ab3@1044> INCLUDE "internal_commands.ab3"
0003C91E <internal_commands.ab3@1045> INCLUDE "internal_commands.ab3"
0003C920 <internal_commands.ab3@1048> INCLUDE "internal_commands.ab3"
0003C924 <internal_commands.ab3@1049> INCLUDE "internal_commands.ab3"
0003C926 <internal_commands.ab3@1050> INCLUDE "internal_commands.ab3"
0003C928 <internal_commands.ab3@1051> INCLUDE "internal_commands.ab3"
0003C92C <internal_commands.ab3@1052> INCLUDE "internal_commands.ab3"
0003C92E <internal_commands.ab3@1053> INCLUDE "internal_commands.ab3"
0003C932 <internal_commands.ab3@1057> INCLUDE "internal_commands.ab3"
0003C934 <internal_commands.ab3@1058> INCLUDE "internal_commands.ab3"
0003C939 <internal_commands.ab3@1059> INCLUDE "internal_commands.ab3"
0003C93A <internal_commands.ab3@1060> INCLUDE "internal_commands.ab3"
0003C93C <internal_commands.ab3@1063> INCLUDE "internal_commands.ab3"
0003C940 <internal_commands.ab3@1064> INCLUDE "internal_commands.ab3"
0003C942 <internal_commands.ab3@1065> INCLUDE "internal_commands.ab3"
0003C944 <internal_commands.ab3@1066> INCLUDE "internal_commands.ab3"
0003C948 <internal_commands.ab3@1067> INCLUDE "internal_commands.ab3"
0003C94A <internal_commands.ab3@1068> INCLUDE "internal_commands.ab3"
0003C94E <internal_commands.ab3@1072> INCLUDE "internal_commands.ab3"
0003C950 <internal_commands.ab3@1073> INCLUDE "internal_commands.ab3"
0003C955 <internal_commands.ab3@1074> INCLUDE "internal_commands.ab3"
0003C956 <internal_commands.ab3@1075> INCLUDE "internal_commands.ab3"
0003C958 <internal_commands.ab3@1078> INCLUDE "internal_commands.ab3"
0003C95C <internal_commands.ab3@1079> INCLUDE "internal_commands.ab3"
0003C95E <internal_commands.ab3@1080> INCLUDE "internal_commands.ab3"
0003C960 <internal_commands.ab3@1081> INCLUDE "internal_commands.ab3"
0003C964 <internal_commands.ab3@1082> INCLUDE "internal_commands.ab3"
0003C966 <internal_commands.ab3@1083> INCLUDE "internal_commands.ab3"
0003C96A <internal_commands.ab3@1087> INCLUDE "internal_commands.ab3"
0003C96C <internal_commands.ab3@1088> INCLUDE "internal_commands.ab3"
0003C971 <internal_commands.ab3@1089> INCLUDE "internal_commands.ab3"
0003C972 <internal_commands.ab3@1090> INCLUDE "internal_commands.ab3"
0003C974 <internal_commands.ab3@1093> INCLUDE "internal_commands.ab3"
0003C978 <internal_commands.ab3@1094> INCLUDE "internal_commands.ab3"
0003C97A <internal_commands.ab3@1095> INCLUDE "internal_commands.ab3"
0003C97C <internal_commands.ab3@1096> INCLUDE "internal_commands.ab3"
0003C980 <internal_commands.ab3@1097> INCLUDE "internal_commands.ab3"
0003C982 <internal_commands.ab3@1098> INCLUDE "internal_commands.ab3"
0003C986 <internal_commands.ab3@1102> INCLUDE "internal_commands.ab3"
0003C988 <internal_commands.ab3@1103> INCLUDE "internal_commands.ab3"
0003C98D <internal_commands.ab3@1104> INCLUDE "internal_commands.ab3"
0003C98E <internal_commands.ab3@1105> INCLUDE "internal_commands.ab3"
0003C990 <internal_commands.ab3@1108> INCLUDE "internal_commands.ab3"
0003C994 <internal_commands.ab3@1109> INCLUDE "internal_commands.ab3"
0003C996 <internal_commands.ab3@1110> INCLUDE "internal_commands.ab3"
0003C998 <internal_commands.ab3@1111> INCLUDE "internal_commands.ab3"
0003C99C <internal_commands.ab3@1112> INCLUDE "internal_commands.ab3"
0003C99E <internal_commands.ab3@1113> INCLUDE "internal_commands.ab3"
0003C9A2 <internal_commands.ab3@1117> INCLUDE "internal_commands.ab3"
0003C9A4 <internal_commands.ab3@1118> INCLUDE "internal_commands.ab3"
0003C9A9 <internal_commands.ab3@1119> INCLUDE "internal_commands.ab3"
0003C9AA <internal_commands.ab3@1120> INCLUDE "internal_commands.ab3"
0003C9AC <internal_commands.ab3@1123> INCLUDE "internal_commands.ab3"
0003C9B0 <internal_commands.ab3@1124> INCLUDE "internal_commands.ab3"
0003C9B2 <internal_commands.ab3@1125> INCLUDE "internal_commands.ab3"
0003C9B4 <internal_commands.ab3@1126> INCLUDE "internal_commands.ab3"
0003C9B8 <internal_commands.ab3@1127> INCLUDE "internal_commands.ab3"
0003C9BA <internal_commands.ab3@1128> INCLUDE "internal_commands.ab3"
0003C9BE <internal_commands.ab3@1132> INCLUDE "internal_commands.ab3"
0003C9C0 <internal_commands.ab3@1133> INCLUDE "internal_commands.ab3"
0003C9C5 <internal_commands.ab3@1134> INCLUDE "internal_commands.ab3"
0003C9C6 <internal_commands.ab3@1135> INCLUDE "internal_commands.ab3"
0003C9C8 <internal_commands.ab3@1138> INCLUDE "internal_commands.ab3"
0003C9CC <internal_commands.ab3@1139> INCLUDE "internal_commands.ab3"
0003C9CE <internal_commands.ab3@1140> INCLUDE "internal_commands.ab3"
0003C9D0 <internal_commands.ab3@1141> INCLUDE "internal_commands.ab3"
0003C9D4 <internal_commands.ab3@1142> INCLUDE "internal_commands.ab3"
0003C9D6 <internal_commands.ab3@1143> INCLUDE "internal_commands.ab3"
0003C9DA <internal_commands.ab3@1147> INCLUDE "internal_commands.ab3"
0003C9DC <internal_commands.ab3@1148> INCLUDE "internal_commands.ab3"
0003C9E1 <internal_commands.ab3@1149> INCLUDE "internal_commands.ab3"
0003C9E2 <internal_commands.ab3@1150> INCLUDE "internal_commands.ab3"
0003C9E4 <internal_commands.ab3@1153> INCLUDE "internal_commands.ab3"
0003C9E8 <internal_commands.ab3@1154> INCLUDE "internal_commands.ab3"
0003C9EA <internal_commands.ab3@1155> INCLUDE "internal_commands.ab3"
0003C9EC <internal_commands.ab3@1156> INCLUDE "internal_commands.ab3"
0003C9F0 <internal_commands.ab3@1157> INCLUDE "internal_commands.ab3"
0003C9F2 <internal_commands.ab3@1158> INCLUDE "internal_commands.ab3"
0003C9F6 <internal_commands.ab3@1162> INCLUDE "internal_commands.ab3"
0003C9F8 <internal_commands.ab3@1163> INCLUDE "internal_commands.ab3"
0003C9FD <internal_commands.ab3@1164> INCLUDE "internal_commands.ab3"
0003C9FE <internal_commands.ab3@1165> INCLUDE "internal_commands.ab3"
0003CA00 <internal_commands.ab3@1168> INCLUDE "internal_commands.ab3"
0003CA04 <internal_commands.ab3@1169> INCLUDE "internal_commands.ab3"
0003CA06 <internal_commands.ab3@1170> INCLUDE "internal_commands.ab3"
0003CA08 <internal_commands.ab3@1171> INCLUDE "internal_commands.ab3"
0003CA0C <internal_commands.ab3@1172> INCLUDE "internal_commands.ab3"
0003CA0E <internal_commands.ab3@1173> INCLUDE "internal_commands.ab3"
0003CA12 <internal_commands.ab3@1177> INCLUDE "internal_commands.ab3"
0003CA14 <internal_commands.ab3@1178> INCLUDE "internal_commands.ab3"
0003CA19 <internal_commands.ab3@1179> INCLUDE "internal_commands.ab3"
0003CA1A <internal_commands.ab3@1180> INCLUDE "internal_commands.ab3"
0003CA1C <internal_commands.ab3@1183> INCLUDE "internal_commands.ab3"
0003CA20 <internal_commands.ab3@1184> INCLUDE "internal_commands.ab3"
0003CA22 <internal_commands.ab3@1185> INCLUDE "internal_commands.ab3"
0003CA24 <internal_commands.ab3@1186> INCLUDE "internal_commands.ab3"
0003CA28 <internal_commands.ab3@1187> INCLUDE "internal_commands.ab3"
0003CA2A <internal_commands.ab3@1188> INCLUDE "internal_commands.ab3"
0003CA2E <internal_commands.ab3@1192> INCLUDE "internal_commands.ab3"
0003CA30 <internal_commands.ab3@1193> INCLUDE "internal_commands.ab3"
0003CA35 <internal_commands.ab3@1194> INCLUDE "internal_commands.ab3"
0003CA36 <internal_commands.ab3@1195> INCLUDE "internal_commands.ab3"
0003CA38 <internal_commands.ab3@1198> INCLUDE "internal_commands.ab3"
0003CA3C <internal_commands.ab3@1199> INCLUDE "internal_commands.ab3"
0003CA3E <internal_commands.ab3@1200> INCLUDE "internal_commands.ab3"
0003CA40 <internal_commands.ab3@1201> INCLUDE "internal_commands.ab3"
0003CA44 <internal_commands.ab3@1202> INCLUDE "internal_commands.ab3"
0003CA46 <internal_commands.ab3@1203> INCLUDE "internal_commands.ab3"
0003CA4A <internal_commands.ab3@1207> INCLUDE "internal_commands.ab3"
0003CA4C <internal_commands.ab3@1208> INCLUDE "internal_commands.ab3"
0003CA51 <internal_commands.ab3@1209> INCLUDE "internal_commands.ab3"
0003CA52 <internal_commands.ab3@1210> INCLUDE "internal_commands.ab3"
0003CA54 <internal_commands.ab3@1213> INCLUDE "internal_commands.ab3"
0003CA58 <internal_commands.ab3@1214> INCLUDE "internal_commands.ab3"
0003CA5A <internal_commands.ab3@1215> INCLUDE "internal_commands.ab3"
0003CA5C <internal_commands.ab3@1216> INCLUDE "internal_commands.ab3"
0003CA60 <internal_commands.ab3@1217> INCLUDE "internal_commands.ab3"
0003CA62 <internal_commands.ab3@1218> INCLUDE "internal_commands.ab3"
0003CA66 <internal_commands.ab3@1222> INCLUDE "internal_commands.ab3"
0003CA68 <internal_commands.ab3@1223> INCLUDE "internal_commands.ab3"
0003CA6D <internal_commands.ab3@1224> INCLUDE "internal_commands.ab3"
0003CA6E <internal_commands.ab3@1225> INCLUDE "internal_commands.ab3"
0003CA70 <internal_commands.ab3@1228> INCLUDE "internal_commands.ab3"
0003CA74 <internal_commands.ab3@1229> INCLUDE "internal_commands.ab3"
0003CA76 <internal_commands.ab3@1230> INCLUDE "internal_commands.ab3"
0003CA78 <internal_commands.ab3@1231> INCLUDE "internal_commands.ab3"
0003CA7C <internal_commands.ab3@1232> INCLUDE "internal_commands.ab3"
0003CA7E <internal_commands.ab3@1233> INCLUDE "internal_commands.ab3"
0003CA82 <internal_commands.ab3@1237> INCLUDE "internal_commands.ab3"
0003CA84 <internal_commands.ab3@1238> INCLUDE "internal_commands.ab3"
0003CA89 <internal_commands.ab3@1239> INCLUDE "internal_commands.ab3"
0003CA8A <internal_commands.ab3@1240> INCLUDE "internal_commands.ab3"
0003CA8C <internal_commands.ab3@1243> INCLUDE "internal_commands.ab3"
0003CA90 <internal_commands.ab3@1244> INCLUDE "internal_commands.ab3"
0003CA92 <internal_commands.ab3@1245> INCLUDE "internal_commands.ab3"
0003CA94 <internal_commands.ab3@1246> INCLUDE "internal_commands.ab3"
0003CA98 <internal_commands.ab3@1247> INCLUDE "internal_commands.ab3"
0003CA9A <internal_commands.ab3@1248> INCLUDE "internal_commands.ab3"
0003CA9E <internal_commands.ab3@1252> INCLUDE "internal_commands.ab3"
0003CAA0 <internal_commands.ab3@1253> INCLUDE "internal_commands.ab3"
0003CAA5 <internal_commands.ab3@1254> INCLUDE "internal_commands.ab3"
0003CAA6 <internal_commands.ab3@1255> INCLUDE "internal_commands.ab3"
0003CAA8 <internal_commands.ab3@1258> INCLUDE "internal_commands.ab3"
0003CAAC <internal_commands.ab3@1259> INCLUDE "internal_commands.ab3"
0003CAAE <internal_commands.ab3@1260> INCLUDE "internal_commands.ab3"
0003CAB0 <internal_commands.ab3@1261> INCLUDE "internal_commands.ab3"
0003CAB4 <internal_commands.ab3@1262> INCLUDE "internal_commands.ab3"
0003CAB6 <internal_commands.ab3@1263> INCLUDE "internal_commands.ab3"
0003CABA <internal_commands.ab3@1266> INCLUDE "internal_commands.ab3"
0003CABC <internal_commands.ab3@1267> INCLUDE "internal_commands.ab3"
0003CAC0 <internal_commands.ab3@1268> INCLUDE "internal_commands.ab3"
0003CAC1 <internal_commands.ab3@1269> INCLUDE "internal_commands.ab3"
0003CAC2 <internal_commands.ab3@1270> INCLUDE "internal_commands.ab3"
0003CAC4 <internal_commands.ab3@1272> INCLUDE "internal_commands.ab3"
0003CAC8 <internal_commands.ab3@1273> INCLUDE "internal_commands.ab3"
0003CACA <internal_commands.ab3@1274> INCLUDE "internal_commands.ab3"
0003CACC <internal_commands.ab3@1275> INCLUDE "internal_commands.ab3"
0003CAD0 <internal_commands.ab3@1276> INCLUDE "internal_commands.ab3"
0003CAD2 <internal_commands.ab3@1277> INCLUDE "internal_commands.ab3"
0003CAD6 <internal_commands.ab3@1281> INCLUDE "internal_commands.ab3"
0003CAD8 <internal_commands.ab3@1282> INCLUDE "internal_commands.ab3"
0003CADD <internal_commands.ab3@1283> INCLUDE "internal_commands.ab3"
0003CADE <internal_commands.ab3@1284> INCLUDE "internal_commands.ab3"
0003CAE0 <internal_commands.ab3@1287> INCLUDE "internal_commands.ab3"
0003CAE4 <internal_commands.ab3@1288> INCLUDE "internal_commands.ab3"
0003CAE6 <internal_commands.ab3@1289> INCLUDE "internal_commands.ab3"
0003CAE8 <internal_commands.ab3@1290> INCLUDE "internal_commands.ab3"
0003CAEC <internal_commands.ab3@1291> INCLUDE "internal_commands.ab3"
0003CAEE <internal_commands.ab3@1292> INCLUDE "internal_commands.ab3"
0003CAF2 <internal_commands.ab3@1296> INCLUDE "internal_commands.ab3"
0003CAF4 <internal_commands.ab3@1297> INCLUDE "internal_commands.ab3"
0003CAF8 <internal_commands.ab3@1298> INCLUDE "internal_commands.ab3"
0003CAF9 <internal_commands.ab3@1299> INCLUDE "internal_commands.ab3"
0003CAFA <internal_commands.ab3@1300> INCLUDE "internal_commands.ab3"
0003CAFC <internal_commands.ab3@1302> INCLUDE "internal_commands.ab3"
0003CB00 <internal_commands.ab3@1303> INCLUDE "internal_commands.ab3"
0003CB02 <internal_commands.ab3@1304> INCLUDE "internal_commands.ab3"
0003CB04 <internal_commands.ab3@1305> INCLUDE "internal_commands.ab3"
0003CB08 <internal_commands.ab3@1306> INCLUDE "internal_commands.ab3"
0003CB0A <internal_commands.ab3@1307> INCLUDE "internal_commands.ab3"
0003CB0E <internal_commands.ab3@1311> INCLUDE "internal_commands.ab3"
0003CB10 <internal_commands.ab3@1312> INCLUDE "internal_commands.ab3"
0003CB15 <internal_commands.ab3@1313> INCLUDE "internal_commands.ab3"
0003CB16 <internal_commands.ab3@1314> INCLUDE "internal_commands.ab3"
0003CB18 <internal_commands.ab3@1317> INCLUDE "internal_commands.ab3"
0003CB1C <internal_commands.ab3@1318> INCLUDE "internal_commands.ab3"
0003CB1E <internal_commands.ab3@1319> INCLUDE "internal_commands.ab3"
0003CB20 <internal_commands.ab3@1320> INCLUDE "internal_commands.ab3"
0003CB24 <internal_commands.ab3@1321> INCLUDE "internal_commands.ab3"
0003CB26 <internal_commands.ab3@1322> INCLUDE "internal_commands.ab3"
0003CB2A <internal_commands.ab3@1326> INCLUDE "internal_commands.ab3"
0003CB2C <internal_commands.ab3@1327> INCLUDE "internal_commands.ab3"
0003CB31 <internal_commands.ab3@1328> INCLUDE "internal_commands.ab3"
0003CB32 <internal_commands.ab3@1329> INCLUDE "internal_commands.ab3"
0003CB34 <internal_commands.ab3@1332> INCLUDE "internal_commands.ab3"
0003CB38 <internal_commands.ab3@1333> INCLUDE "internal_commands.ab3"
0003CB3A <internal_commands.ab3@1334> INCLUDE "internal_commands.ab3"
0003CB3C <internal_commands.ab3@1335> INCLUDE "internal_commands.ab3"
0003CB40 <internal_commands.ab3@1336> INCLUDE "internal_commands.ab3"
0003CB42 <internal_commands.ab3@1337> INCLUDE "internal_commands.ab3"
0003CB46 <internal_commands.ab3@1341> INCLUDE "internal_commands.ab3"
0003CB48 <internal_commands.ab3@1342> INCLUDE "internal_commands.ab3"
0003CB4C <internal_commands.ab3@1343> INCLUDE "internal_commands.ab3"
0003CB4D <internal_commands.ab3@1344> INCLUDE "internal_commands.ab3"
0003CB4E <internal_commands.ab3@1345> INCLUDE "internal_commands.ab3"
0003CB50 <internal_commands.ab3@1347> INCLUDE "internal_commands.ab3"
0003CB54 <internal_commands.ab3@1348> INCLUDE "internal_commands.ab3"
0003CB56 <internal_commands.ab3@1349> INCLUDE "internal_commands.ab3"
0003CB58 <internal_commands.ab3@1350> INCLUDE "internal_commands.ab3"
0003CB5C <internal_commands.ab3@1351> INCLUDE "internal_commands.ab3"
0003CB5E <internal_commands.ab3@1352> INCLUDE "internal_commands.ab3"
0003CB62 <internal_commands.ab3@1356> INCLUDE "internal_commands.ab3"
0003CB64 <internal_commands.ab3@1357> INCLUDE "internal_commands.ab3"
0003CB69 <internal_commands.ab3@1358> INCLUDE "internal_commands.ab3"
0003CB6A <internal_commands.ab3@1359> INCLUDE "internal_commands.ab3"
0003CB6C <internal_commands.ab3@1362> INCLUDE "internal_commands.ab3"
0003CB70 <internal_commands.ab3@1363> INCLUDE "internal_commands.ab3"
0003CB72 <internal_commands.ab3@1364> INCLUDE "internal_commands.ab3"
0003CB74 <internal_commands.ab3@1365> INCLUDE "internal_commands.ab3"
0003CB78 <internal_commands.ab3@1366> INCLUDE "internal_commands.ab3"
0003CB7A <internal_commands.ab3@1367> INCLUDE "internal_commands.ab3"
0003CB7E <internal_commands.ab3@1371> INCLUDE "internal_commands.ab3"
0003CB80 <internal_commands.ab3@1372> INCLUDE "internal_commands.ab3"
0003CB84 <internal_commands.ab3@1373> INCLUDE "internal_commands.ab3"
0003CB85 <internal_commands.ab3@1374> INCLUDE "internal_commands.ab3"
0003CB86 <internal_commands.ab3@1375> INCLUDE "internal_commands.ab3"
0003CB88 <internal_commands.ab3@1377> INCLUDE "internal_commands.ab3"
0003CB8C <internal_commands.ab3@1378> INCLUDE "internal_commands.ab3"
0003CB8E <internal_commands.ab3@1379> INCLUDE "internal_commands.ab3"
0003CB90 <internal_commands.ab3@1380> INCLUDE "internal_commands.ab3"
0003CB94 <internal_commands.ab3@1381> INCLUDE "internal_commands.ab3"
0003CB96 <internal_commands.ab3@1382> INCLUDE "internal_commands.ab3"
0003CB9A <internal_commands.ab3@1386> INCLUDE "internal_commands.ab3"
0003CB9C <internal_commands.ab3@1387> INCLUDE "internal_commands.ab3"
0003CBA0 <internal_commands.ab3@1388> INCLUDE "internal_commands.ab3"
0003CBA1 <internal_commands.ab3@1389> INCLUDE "internal_commands.ab3"
0003CBA2 <internal_commands.ab3@1390> INCLUDE "internal_commands.ab3"
0003CBA4 <internal_commands.ab3@1392> INCLUDE "internal_commands.ab3"
0003CBA8 <internal_commands.ab3@1393> INCLUDE "internal_commands.ab3"
0003CBAA <internal_commands.ab3@1394> INCLUDE "internal_commands.ab3"
0003CBAC <internal_commands.ab3@1395> INCLUDE "internal_commands.ab3"
0003CBB0 <internal_commands.ab3@1396> INCLUDE "internal_commands.ab3"
0003CBB2 <internal_commands.ab3@1397> INCLUDE "internal_commands.ab3"
0003CBB6 <internal_commands.ab3@1401> INCLUDE "internal_commands.ab3"
0003CBB8 <internal_commands.ab3@1402> INCLUDE "internal_commands.ab3"
0003CBC0 <internal_commands.ab3@1403> INCLUDE "internal_commands.ab3"
0003CBC1 <internal_commands.ab3@1404> INCLUDE "internal_commands.ab3"
0003CBC2 <internal_commands.ab3@1405> INCLUDE "internal_commands.ab3"
0003CBC4 <internal_commands.ab3@1407> INCLUDE "internal_commands.ab3"
0003CBC8 <internal_commands.ab3@1408> INCLUDE "internal_commands.ab3"
0003CBCA <internal_commands.ab3@1409> INCLUDE "internal_commands.ab3"
0003CBCC <internal_commands.ab3@1410> INCLUDE "internal_commands.ab3"
0003CBD0 <internal_commands.ab3@1411> INCLUDE "internal_commands.ab3"
0003CBD2 <internal_commands.ab3@1412> INCLUDE "internal_commands.ab3"
0003CBD6 <internal_commands.ab3@1416> INCLUDE "internal_commands.ab3"
0003CBD8 <internal_commands.ab3@1417> INCLUDE "internal_commands.ab3"
0003CBDC <internal_commands.ab3@1418> INCLUDE "internal_commands.ab3"
0003CBDD <internal_commands.ab3@1419> INCLUDE "internal_commands.ab3"
0003CBDE <internal_commands.ab3@1420> INCLUDE "internal_commands.ab3"
0003CBE0 <internal_commands.ab3@1422> INCLUDE "internal_commands.ab3"
0003CBE4 <internal_commands.ab3@1423> INCLUDE "internal_commands.ab3"
0003CBE6 <internal_commands.ab3@1424> INCLUDE "internal_commands.ab3"
0003CBE8 <internal_commands.ab3@1425> INCLUDE "internal_commands.ab3"
0003CBEC <internal_commands.ab3@1426> INCLUDE "internal_commands.ab3"
0003CBEE <internal_commands.ab3@1427> INCLUDE "internal_commands.ab3"
0003CBF2 <internal_commands.ab3@1431> INCLUDE "internal_commands.ab3"
0003CBF4 <internal_commands.ab3@1432> INCLUDE "internal_commands.ab3"
0003CBF8 <internal_commands.ab3@1433> INCLUDE "internal_commands.ab3"
0003CBF9 <internal_commands.ab3@1434> INCLUDE "internal_commands.ab3"
0003CBFA <internal_commands.ab3@1435> INCLUDE "internal_commands.ab3"
0003CBFC <internal_commands.ab3@1437> INCLUDE "internal_commands.ab3"
0003CC00 <internal_commands.ab3@1438> INCLUDE "internal_commands.ab3"
0003CC02 <internal_commands.ab3@1439> INCLUDE "internal_commands.ab3"
0003CC04 <internal_commands.ab3@1440> INCLUDE "internal_commands.ab3"
0003CC08 <internal_commands.ab3@1441> INCLUDE "internal_commands.ab3"
0003CC0A <internal_commands.ab3@1442> INCLUDE "internal_commands.ab3"
0003CC0E <internal_commands.ab3@1446> INCLUDE "internal_commands.ab3"
0003CC10 <internal_commands.ab3@1447> INCLUDE "internal_commands.ab3"
0003CC14 <internal_commands.ab3@1448> INCLUDE "internal_commands.ab3"
0003CC15 <internal_commands.ab3@1449> INCLUDE "internal_commands.ab3"
0003CC16 <internal_commands.ab3@1450> INCLUDE "internal_commands.ab3"
0003CC18 <internal_commands.ab3@1452> INCLUDE "internal_commands.ab3"
0003CC1C <internal_commands.ab3@1453> INCLUDE "internal_commands.ab3"
0003CC1E <internal_commands.ab3@1454> INCLUDE "internal_commands.ab3"
0003CC20 <internal_commands.ab3@1455> INCLUDE "internal_commands.ab3"
0003CC24 <internal_commands.ab3@1456> INCLUDE "internal_commands.ab3"
0003CC26 <internal_commands.ab3@1457> INCLUDE "internal_commands.ab3"
0003CC2A <internal_commands.ab3@1461> INCLUDE "internal_commands.ab3"
0003CC2C <internal_commands.ab3@1462> INCLUDE "internal_commands.ab3"
0003CC31 <internal_commands.ab3@1463> INCLUDE "internal_commands.ab3"
0003CC32 <internal_commands.ab3@1464> INCLUDE "internal_commands.ab3"
0003CC34 <internal_commands.ab3@1467> INCLUDE "internal_commands.ab3"
0003CC38 <internal_commands.ab3@1468> INCLUDE "internal_commands.ab3"
0003CC3A <internal_commands.ab3@1469> INCLUDE "internal_commands.ab3"
0003CC3C <internal_commands.ab3@1470> INCLUDE "internal_commands.ab3"
0003CC40 <internal_commands.ab3@1471> INCLUDE "internal_commands.ab3"
0003CC42 <internal_commands.ab3@1472> INCLUDE "internal_commands.ab3"
0003CC46 <internal_commands.ab3@1476> INCLUDE "internal_commands.ab3"
0003CC48 <internal_commands.ab3@1477> INCLUDE "internal_commands.ab3"
0003CC4C <internal_commands.ab3@1478> INCLUDE "internal_commands.ab3"
0003CC4D <internal_commands.ab3@1479> INCLUDE "internal_commands.ab3"
0003CC4E <internal_commands.ab3@1480> INCLUDE "internal_commands.ab3"
0003CC50 <internal_commands.ab3@1482> INCLUDE "internal_commands.ab3"
0003CC54 <internal_commands.ab3@1483> INCLUDE "internal_commands.ab3"
0003CC56 <internal_commands.ab3@1484> INCLUDE "internal_commands.ab3"
0003CC58 <internal_commands.ab3@1485> INCLUDE "internal_commands.ab3"
0003CC5C <internal_commands.ab3@1486> INCLUDE "internal_commands.ab3"
0003CC5E <internal_commands.ab3@1487> INCLUDE "internal_commands.ab3"
0003CC62 <internal_commands.ab3@1491> INCLUDE "internal_commands.ab3"
0003CC64 <internal_commands.ab3@1492> INCLUDE "internal_commands.ab3"
0003CC68 <internal_commands.ab3@1493> INCLUDE "internal_commands.ab3"
0003CC69 <internal_commands.ab3@1494> INCLUDE "internal_commands.ab3"
0003CC6A <internal_commands.ab3@1495> INCLUDE "internal_commands.ab3"
0003CC6C <internal_commands.ab3@1497> INCLUDE "internal_commands.ab3"
0003CC70 <internal_commands.ab3@1498> INCLUDE "internal_commands.ab3"
0003CC72 <internal_commands.ab3@1499> INCLUDE "internal_commands.ab3"
0003CC74 <internal_commands.ab3@1500> INCLUDE "internal_commands.ab3"
0003CC78 <internal_commands.ab3@1501> INCLUDE "internal_commands.ab3"
0003CC7A <internal_commands.ab3@1502> INCLUDE "internal_commands.ab3"
0003CC7E <internal_commands.ab3@1506> INCLUDE "internal_commands.ab3"
0003CC80 <internal_commands.ab3@1507> INCLUDE "internal_commands.ab3"
0003CC85 <internal_commands.ab3@1508> INCLUDE "internal_commands.ab3"
0003CC86 <internal_commands.ab3@1509> INCLUDE "internal_commands.ab3"
0003CC88 <internal_commands.ab3@1512> INCLUDE "internal_commands.ab3"
0003CC8C <internal_commands.ab3@1513> INCLUDE "internal_commands.ab3"
0003CC8E <internal_commands.ab3@1514> INCLUDE "internal_commands.ab3"
0003CC90 <internal_commands.ab3@1515> INCLUDE "internal_commands.ab3"
0003CC94 <internal_commands.ab3@1516> INCLUDE "internal_commands.ab3"
0003CC96 <internal_commands.ab3@1517> INCLUDE "internal_commands.ab3"
0003CC9A <internal_commands.ab3@1521> INCLUDE "internal_commands.ab3"
0003CC9C <internal_commands.ab3@1522> INCLUDE "internal_commands.ab3"
0003CCA1 <internal_commands.ab3@1523> INCLUDE "internal_commands.ab3"
0003CCA2 <internal_commands.ab3@1524> INCLUDE "internal_commands.ab3"
0003CCA4 <internal_commands.ab3@1527> INCLUDE "internal_commands.ab3"
0003CCA8 <internal_commands.ab3@1528> INCLUDE "internal_commands.ab3"
0003CCAA <internal_commands.ab3@1529> INCLUDE "internal_commands.ab3"
0003CCAC <internal_commands.ab3@1530> INCLUDE "internal_commands.ab3"
0003CCB0 <internal_commands.ab3@1531> INCLUDE "internal_commands.ab3"
0003CCB2 <internal_commands.ab3@1532> INCLUDE "internal_commands.ab3"
0003CCB6 <internal_commands.ab3@1537> INCLUDE "internal_commands.ab3"
0003CCB8 <internal_commands.ab3@1538> INCLUDE "internal_commands.ab3"
0003CCBE <internal_commands.ab3@1539> INCLUDE "internal_commands.ab3"
0003CCBF <internal_commands.ab3@1540> INCLUDE "internal_commands.ab3"
0003CCC0 <internal_commands.ab3@1541> INCLUDE "internal_commands.ab3"
0003CCC2 <internal_commands.ab3@1543> INCLUDE "internal_commands.ab3"
0003CCC6 <internal_commands.ab3@1544> INCLUDE "internal_commands.ab3"
0003CCC8 <internal_commands.ab3@1545> INCLUDE "internal_commands.ab3"
0003CCCA <internal_commands.ab3@1546> INCLUDE "internal_commands.ab3"
0003CCCE <internal_commands.ab3@1547> INCLUDE "internal_commands.ab3"
0003CCD0 <internal_commands.ab3@1548> INCLUDE "internal_commands.ab3"
0003CCD4 <internal_commands.ab3@1552> INCLUDE "internal_commands.ab3"
0003CCD6 <internal_commands.ab3@1553> INCLUDE "internal_commands.ab3"
0003CCDC <internal_commands.ab3@1554> INCLUDE "internal_commands.ab3"
0003CCDD <internal_commands.ab3@1555> INCLUDE "internal_commands.ab3"
0003CCDE <internal_commands.ab3@1556> INCLUDE "internal_commands.ab3"
0003CCE0 <internal_commands.ab3@1558> INCLUDE "internal_commands.ab3"
0003CCE4 <internal_commands.ab3@1559> INCLUDE "internal_commands.ab3"
0003CCE6 <internal_commands.ab3@1560> INCLUDE "internal_commands.ab3"
0003CCE8 <internal_commands.ab3@1561> INCLUDE "internal_commands.ab3"
0003CCEC <internal_commands.ab3@1562> INCLUDE "internal_commands.ab3"
0003CCEE <internal_commands.ab3@1563> INCLUDE "internal_commands.ab3"
0003CCF2 <internal_commands.ab3@1567> INCLUDE "internal_commands.ab3"
0003CCF4 <internal_commands.ab3@1568> INCLUDE "internal_commands.ab3"
0003CCFA <internal_commands.ab3@1569> INCLUDE "internal_commands.ab3"
0003CCFB <internal_commands.ab3@1570> INCLUDE "internal_commands.ab3"
0003CCFC <internal_commands.ab3@1571> INCLUDE "internal_commands.ab3"
0003CCFE <internal_commands.ab3@1573> INCLUDE "internal_commands.ab3"
0003CD02 <internal_commands.ab3@1574> INCLUDE "internal_commands.ab3"
0003CD04 <internal_commands.ab3@1575> INCLUDE "internal_commands.ab3"
0003CD06 <internal_commands.ab3@1576> INCLUDE "internal_commands.ab3"
0003CD0A <internal_commands.ab3@1577> INCLUDE "internal_commands.ab3"
0003CD0C <internal_commands.ab3@1578> INCLUDE "internal_commands.ab3"
0003CD10 <internal_commands.ab3@1582> INCLUDE "internal_commands.ab3"
0003CD12 <internal_commands.ab3@1583> INCLUDE "internal_commands.ab3"
0003CD17 <internal_commands.ab3@1584> INCLUDE "internal_commands.ab3"
0003CD18 <internal_commands.ab3@1585> INCLUDE "internal_commands.ab3"
0003CD1A <internal_commands.ab3@1588> INCLUDE "internal_commands.ab3"
0003CD1E <internal_commands.ab3@1589> INCLUDE "internal_commands.ab3"
0003CD20 <internal_commands.ab3@1590> INCLUDE "internal_commands.ab3"
0003CD22 <internal_commands.ab3@1591> INCLUDE "internal_commands.ab3"
0003CD26 <internal_commands.ab3@1592> INCLUDE "internal_commands.ab3"
0003CD28 <internal_commands.ab3@1593> INCLUDE "internal_commands.ab3"
0003CD2C <internal_commands.ab3@1597> INCLUDE "internal_commands.ab3"
0003CD2E <internal_commands.ab3@1598> INCLUDE "internal_commands.ab3"
0003CD33 <internal_commands.ab3@1599> INCLUDE "internal_commands.ab3"
0003CD34 <internal_commands.ab3@1600> INCLUDE "internal_commands.ab3"
0003CD36 <internal_commands.ab3@1603> INCLUDE "internal_commands.ab3"
0003CD3A <internal_commands.ab3@1604> INCLUDE "internal_commands.ab3"
0003CD3C <internal_commands.ab3@1605> INCLUDE "internal_commands.ab3"
0003CD3E <internal_commands.ab3@1606> INCLUDE "internal_commands.ab3"
0003CD42 <internal_commands.ab3@1607> INCLUDE "internal_commands.ab3"
0003CD44 <internal_commands.ab3@1608> INCLUDE "internal_commands.ab3"
0003CD48 <internal_commands.ab3@1612> INCLUDE "internal_commands.ab3"
0003CD4A <internal_commands.ab3@1613> INCLUDE "internal_commands.ab3"
0003CD4F <internal_commands.ab3@1614> INCLUDE "internal_commands.ab3"
0003CD50 <internal_commands.ab3@1615> INCLUDE "internal_commands.ab3"
0003CD52 <internal_commands.ab3@1618> INCLUDE "internal_commands.ab3"
0003CD56 <internal_commands.ab3@1619> INCLUDE "internal_commands.ab3"
0003CD58 <internal_commands.ab3@1620> INCLUDE "internal_commands.ab3"
0003CD5A <internal_commands.ab3@1621> INCLUDE "internal_commands.ab3"
0003CD5E <internal_commands.ab3@1622> INCLUDE "internal_commands.ab3"
0003CD60 <internal_commands.ab3@1623> INCLUDE "internal_commands.ab3"
0003CD64 <internal_commands.ab3@1627> INCLUDE "internal_commands.ab3"
0003CD66 <internal_commands.ab3@1628> INCLUDE "internal_commands.ab3"
0003CD6A <internal_commands.ab3@1629> INCLUDE "internal_commands.ab3"
0003CD6B <internal_commands.ab3@1630> INCLUDE "internal_commands.ab3"
0003CD6C <internal_commands.ab3@1631> INCLUDE "internal_commands.ab3"
0003CD6E <internal_commands.ab3@1633> INCLUDE "internal_commands.ab3"
0003CD72 <internal_commands.ab3@1634> INCLUDE "internal_commands.ab3"
0003CD74 <internal_commands.ab3@1635> INCLUDE "internal_commands.ab3"
0003CD76 <internal_commands.ab3@1636> INCLUDE "internal_commands.ab3"
0003CD7A <internal_commands.ab3@1637> INCLUDE "internal_commands.ab3"
0003CD7C <internal_commands.ab3@1638> INCLUDE "internal_commands.ab3"
0003CD80 <internal_commands.ab3@1642> INCLUDE "internal_commands.ab3"
0003CD82 <internal_commands.ab3@1643> INCLUDE "internal_commands.ab3"
0003CD87 <internal_commands.ab3@1644> INCLUDE "internal_commands.ab3"
0003CD88 <internal_commands.ab3@1645> INCLUDE "internal_commands.ab3"
0003CD8A <internal_commands.ab3@1648> INCLUDE "internal_commands.ab3"
0003CD8E <internal_commands.ab3@1649> INCLUDE "internal_commands.ab3"
0003CD90 <internal_commands.ab3@1650> INCLUDE "internal_commands.ab3"
0003CD92 <internal_commands.ab3@1651> INCLUDE "internal_commands.ab3"
0003CD96 <internal_commands.ab3@1652> INCLUDE "internal_commands.ab3"
0003CD98 <internal_commands.ab3@1653> INCLUDE "internal_commands.ab3"
0003CD9C <internal_commands.ab3@1657> INCLUDE "internal_commands.ab3"
0003CD9E <internal_commands.ab3@1658> INCLUDE "internal_commands.ab3"
0003CDA2 <internal_commands.ab3@1659> INCLUDE "internal_commands.ab3"
0003CDA3 <internal_commands.ab3@1660> INCLUDE "internal_commands.ab3"
0003CDA4 <internal_commands.ab3@1661> INCLUDE "internal_commands.ab3"
0003CDA6 <internal_commands.ab3@1663> INCLUDE "internal_commands.ab3"
0003CDAA <internal_commands.ab3@1664> INCLUDE "internal_commands.ab3"
0003CDAC <internal_commands.ab3@1665> INCLUDE "internal_commands.ab3"
0003CDAE <internal_commands.ab3@1666> INCLUDE "internal_commands.ab3"
0003CDB2 <internal_commands.ab3@1667> INCLUDE "internal_commands.ab3"
0003CDB4 <internal_commands.ab3@1668> INCLUDE "internal_commands.ab3"
0003CDB8 <internal_commands.ab3@1672> INCLUDE "internal_commands.ab3"
0003CDBA <internal_commands.ab3@1673> INCLUDE "internal_commands.ab3"
0003CDBE <internal_commands.ab3@1674> INCLUDE "internal_commands.ab3"
0003CDBF <internal_commands.ab3@1675> INCLUDE "internal_commands.ab3"
0003CDC0 <internal_commands.ab3@1676> INCLUDE "internal_commands.ab3"
0003CDC2 <internal_commands.ab3@1678> INCLUDE "internal_commands.ab3"
0003CDC6 <internal_commands.ab3@1679> INCLUDE "internal_commands.ab3"
0003CDC8 <internal_commands.ab3@1680> INCLUDE "internal_commands.ab3"
0003CDCA <internal_commands.ab3@1681> INCLUDE "internal_commands.ab3"
0003CDCE <internal_commands.ab3@1682> INCLUDE "internal_commands.ab3"
0003CDD0 <internal_commands.ab3@1683> INCLUDE "internal_commands.ab3"
0003CDD4 <internal_commands.ab3@1687> INCLUDE "internal_commands.ab3"
0003CDD6 <internal_commands.ab3@1688> INCLUDE "internal_commands.ab3"
0003CDD9 <internal_commands.ab3@1689> INCLUDE "internal_commands.ab3"
0003CDDA <internal_commands.ab3@1690> INCLUDE "internal_commands.ab3"
0003CDDC <internal_commands.ab3@1693> INCLUDE "internal_commands.ab3"
0003CDE0 <internal_commands.ab3@1694> INCLUDE "internal_commands.ab3"
0003CDE2 <internal_commands.ab3@1695> INCLUDE "internal_commands.ab3"
0003CDE4 <internal_commands.ab3@1696> INCLUDE "internal_commands.ab3"
0003CDE8 <internal_commands.ab3@1697> INCLUDE "internal_commands.ab3"
0003CDEA <internal_commands.ab3@1698> INCLUDE "internal_commands.ab3"
0003CDEE <internal_commands.ab3@1702> INCLUDE "internal_commands.ab3"
0003CDF0 <internal_commands.ab3@1703> INCLUDE "internal_commands.ab3"
0003CDF4 <internal_commands.ab3@1704> INCLUDE "internal_commands.ab3"
0003CDF5 <internal_commands.ab3@1705> INCLUDE "internal_commands.ab3"
0003CDF6 <internal_commands.ab3@1706> INCLUDE "internal_commands.ab3"
0003CDF8 <internal_commands.ab3@1708> INCLUDE "internal_commands.ab3"
0003CDFC <internal_commands.ab3@1709> INCLUDE "internal_commands.ab3"
0003CDFE <internal_commands.ab3@1710> INCLUDE "internal_commands.ab3"
0003CE00 <internal_commands.ab3@1711> INCLUDE "internal_commands.ab3"
0003CE04 <internal_commands.ab3@1712> INCLUDE "internal_commands.ab3"
0003CE06 <internal_commands.ab3@1713> INCLUDE "internal_commands.ab3"
0003CE0A <internal_commands.ab3@1717> INCLUDE "internal_commands.ab3"
0003CE0C <internal_commands.ab3@1718> INCLUDE "internal_commands.ab3"
0003CE10 <internal_commands.ab3@1719> INCLUDE "internal_commands.ab3"
0003CE11 <internal_commands.ab3@1720> INCLUDE "internal_commands.ab3"
0003CE12 <internal_commands.ab3@1721> INCLUDE "internal_commands.ab3"
0003CE14 <internal_commands.ab3@1723> INCLUDE "internal_commands.ab3"
0003CE18 <internal_commands.ab3@1724> INCLUDE "internal_commands.ab3"
0003CE1A <internal_commands.ab3@1725> INCLUDE "internal_commands.ab3"
0003CE1C <internal_commands.ab3@1726> INCLUDE "internal_commands.ab3"
0003CE20 <internal_commands.ab3@1727> INCLUDE "internal_commands.ab3"
0003CE22 <internal_commands.ab3@1728> INCLUDE "internal_commands.ab3"
0003CE26 <internal_commands.ab3@1732> INCLUDE "internal_commands.ab3"
0003CE28 <internal_commands.ab3@1733> INCLUDE "internal_commands.ab3"
0003CE2E <internal_commands.ab3@1734> INCLUDE "internal_commands.ab3"
0003CE2F <internal_commands.ab3@1735> INCLUDE "internal_commands.ab3"
0003CE30 <internal_commands.ab3@1736> INCLUDE "internal_commands.ab3"
0003CE32 <internal_commands.ab3@1738> INCLUDE "internal_commands.ab3"
0003CE36 <internal_commands.ab3@1739> INCLUDE "internal_commands.ab3"
0003CE38 <internal_commands.ab3@1740> INCLUDE "internal_commands.ab3"
0003CE3A <internal_commands.ab3@1741> INCLUDE "internal_commands.ab3"
0003CE3E <internal_commands.ab3@1742> INCLUDE "internal_commands.ab3"
0003CE40 <internal_commands.ab3@1743> INCLUDE "internal_commands.ab3"
0003CE44 <internal_commands.ab3@1747> INCLUDE "internal_commands.ab3"
0003CE46 <internal_commands.ab3@1748> INCLUDE "internal_commands.ab3"
0003CE4A <internal_commands.ab3@1749> INCLUDE "internal_commands.ab3"
0003CE4B <internal_commands.ab3@1750> INCLUDE "internal_commands.ab3"
0003CE4C <internal_commands.ab3@1751> INCLUDE "internal_commands.ab3"
0003CE4E <internal_commands.ab3@1753> INCLUDE "internal_commands.ab3"
0003CE52 <internal_commands.ab3@1754> INCLUDE "internal_commands.ab3"
0003CE54 <internal_commands.ab3@1755> INCLUDE "internal_commands.ab3"
0003CE56 <internal_commands.ab3@1756> INCLUDE "internal_commands.ab3"
0003CE5A <internal_commands.ab3@1757> INCLUDE "internal_commands.ab3"
0003CE5C <internal_commands.ab3@1758> INCLUDE "internal_commands.ab3"
0003CE60 <internal_commands.ab3@1762> INCLUDE "internal_commands.ab3"
0003CE62 <internal_commands.ab3@1763> INCLUDE "internal_commands.ab3"
0003CE66 <internal_commands.ab3@1764> INCLUDE "internal_commands.ab3"
0003CE67 <internal_commands.ab3@1765> INCLUDE "internal_commands.ab3"
0003CE68 <internal_commands.ab3@1766> INCLUDE "internal_commands.ab3"
0003CE6A <internal_commands.ab3@1768> INCLUDE "internal_commands.ab3"
0003CE6E <internal_commands.ab3@1769> INCLUDE "internal_commands.ab3"
0003CE70 <internal_commands.ab3@1770> INCLUDE "internal_commands.ab3"
0003CE72 <internal_commands.ab3@1771> INCLUDE "internal_commands.ab3"
0003CE76 <internal_commands.ab3@1772> INCLUDE "internal_commands.ab3"
0003CE78 <internal_commands.ab3@1773> INCLUDE "internal_commands.ab3"
0003CE7C <internal_commands.ab3@1777> INCLUDE "internal_commands.ab3"
0003CE7E <internal_commands.ab3@1778> INCLUDE "internal_commands.ab3"
0003CE83 <internal_commands.ab3@1779> INCLUDE "internal_commands.ab3"
0003CE84 <internal_commands.ab3@1780> INCLUDE "internal_commands.ab3"
0003CE86 <internal_commands.ab3@1783> INCLUDE "internal_commands.ab3"
0003CE8A <internal_commands.ab3@1784> INCLUDE "internal_commands.ab3"
0003CE8C <internal_commands.ab3@1785> INCLUDE "internal_commands.ab3"
0003CE8E <internal_commands.ab3@1786> INCLUDE "internal_commands.ab3"
0003CE92 <internal_commands.ab3@1787> INCLUDE "internal_commands.ab3"
0003CE94 <internal_commands.ab3@1788> INCLUDE "internal_commands.ab3"
0003CE98 <internal_commands.ab3@1792> INCLUDE "internal_commands.ab3"
0003CE9A <internal_commands.ab3@1793> INCLUDE "internal_commands.ab3"
0003CE9F <internal_commands.ab3@1794> INCLUDE "internal_commands.ab3"
0003CEA0 <internal_commands.ab3@1795> INCLUDE "internal_commands.ab3"
0003CEA2 <internal_commands.ab3@1798> INCLUDE "internal_commands.ab3"
0003CEA6 <internal_commands.ab3@1799> INCLUDE "internal_commands.ab3"
0003CEA8 <internal_commands.ab3@1800> INCLUDE "internal_commands.ab3"
0003CEAA <internal_commands.ab3@1801> INCLUDE "internal_commands.ab3"
0003CEAE <internal_commands.ab3@1802> INCLUDE "internal_commands.ab3"
0003CEB0 <internal_commands.ab3@1803> INCLUDE "internal_commands.ab3"
0003CEB4 <internal_commands.ab3@1807> INCLUDE "internal_commands.ab3"
0003CEB6 <internal_commands.ab3@1808> INCLUDE "internal_commands.ab3"
0003CEBA <internal_commands.ab3@1809> INCLUDE "internal_commands.ab3"
0003CEBB <internal_commands.ab3@1810> INCLUDE "internal_commands.ab3"
0003CEBC <internal_commands.ab3@1811> INCLUDE "internal_commands.ab3"
0003CEBE <internal_commands.ab3@1813> INCLUDE "internal_commands.ab3"
0003CEC2 <internal_commands.ab3@1814> INCLUDE "internal_commands.ab3"
0003CEC4 <internal_commands.ab3@1815> INCLUDE "internal_commands.ab3"
0003CEC6 <internal_commands.ab3@1816> INCLUDE "internal_commands.ab3"
0003CECA <internal_commands.ab3@1817> INCLUDE "internal_commands.ab3"
0003CECC <internal_commands.ab3@1818> INCLUDE "internal_commands.ab3"
0003CED0 <internal_commands.ab3@1822> INCLUDE "internal_commands.ab3"
0003CED2 <internal_commands.ab3@1823> INCLUDE "internal_commands.ab3"
0003CED6 <internal_commands.ab3@1824> INCLUDE "internal_commands.ab3"
0003CED7 <internal_commands.ab3@1825> INCLUDE "internal_commands.ab3"
0003CED8 <internal_commands.ab3@1826> INCLUDE "internal_commands.ab3"
0003CEDA <internal_commands.ab3@1828> INCLUDE "internal_commands.ab3"
0003CEDE <internal_commands.ab3@1829> INCLUDE "internal_commands.ab3"
0003CEE0 <internal_commands.ab3@1830> INCLUDE "internal_commands.ab3"
0003CEE2 <internal_commands.ab3@1831> INCLUDE "internal_commands.ab3"
0003CEE6 <internal_commands.ab3@1832> INCLUDE "internal_commands.ab3"
0003CEE8 <internal_commands.ab3@1833> INCLUDE "internal_commands.ab3"
0003CEEC <internal_commands.ab3@1837> INCLUDE "internal_commands.ab3"
0003CEEE <internal_commands.ab3@1838> INCLUDE "internal_commands.ab3"
0003CEF2 <internal_commands.ab3@1839> INCLUDE "internal_commands.ab3"
0003CEF3 <internal_commands.ab3@1840> INCLUDE "internal_commands.ab3"
0003CEF4 <internal_commands.ab3@1841> INCLUDE "internal_commands.ab3"
0003CEF6 <internal_commands.ab3@1843> INCLUDE "internal_commands.ab3"
0003CEFA <internal_commands.ab3@1844> INCLUDE "internal_commands.ab3"
0003CEFC <internal_commands.ab3@1845> INCLUDE "internal_commands.ab3"
0003CEFE <internal_commands.ab3@1846> INCLUDE "internal_commands.ab3"
0003CF02 <internal_commands.ab3@1847> INCLUDE "internal_commands.ab3"
0003CF04 <internal_commands.ab3@1848> INCLUDE "internal_commands.ab3"
0003CF08 <internal_commands.ab3@1852> INCLUDE "internal_commands.ab3"
0003CF0A <internal_commands.ab3@1853> INCLUDE "internal_commands.ab3"
0003CF0F <internal_commands.ab3@1854> INCLUDE "internal_commands.ab3"
0003CF10 <internal_commands.ab3@1855> INCLUDE "internal_commands.ab3"
0003CF12 <internal_commands.ab3@1858> INCLUDE "internal_commands.ab3"
0003CF16 <internal_commands.ab3@1859> INCLUDE "internal_commands.ab3"
0003CF18 <internal_commands.ab3@1860> INCLUDE "internal_commands.ab3"
0003CF1A <internal_commands.ab3@1861> INCLUDE "internal_commands.ab3"
0003CF1E <internal_commands.ab3@1862> INCLUDE "internal_commands.ab3"
0003CF20 <internal_commands.ab3@1863> INCLUDE "internal_commands.ab3"
0003CF24 <internal_commands.ab3@1867> INCLUDE "internal_commands.ab3"
0003CF26 <internal_commands.ab3@1868> INCLUDE "internal_commands.ab3"
0003CF2A <internal_commands.ab3@1869> INCLUDE "internal_commands.ab3"
0003CF2B <internal_commands.ab3@1870> INCLUDE "internal_commands.ab3"
0003CF2C <internal_commands.ab3@1871> INCLUDE "internal_commands.ab3"
0003CF2E <internal_commands.ab3@1873> INCLUDE "internal_commands.ab3"
0003CF32 <internal_commands.ab3@1874> INCLUDE "internal_commands.ab3"
0003CF34 <internal_commands.ab3@1875> INCLUDE "internal_commands.ab3"
0003CF36 <internal_commands.ab3@1876> INCLUDE "internal_commands.ab3"
0003CF3A <internal_commands.ab3@1877> INCLUDE "internal_commands.ab3"
0003CF3C <internal_commands.ab3@1878> INCLUDE "internal_commands.ab3"
0003CF40 <internal_commands.ab3@1882> INCLUDE "internal_commands.ab3"
0003CF42 <internal_commands.ab3@1883> INCLUDE "internal_commands.ab3"
0003CF46 <internal_commands.ab3@1884> INCLUDE "internal_commands.ab3"
0003CF47 <internal_commands.ab3@1885> INCLUDE "internal_commands.ab3"
0003CF48 <internal_commands.ab3@1886> INCLUDE "internal_commands.ab3"
0003CF4A <internal_commands.ab3@1888> INCLUDE "internal_commands.ab3"
0003CF4E <internal_commands.ab3@1889> INCLUDE "internal_commands.ab3"
0003CF50 <internal_commands.ab3@1890> INCLUDE "internal_commands.ab3"
0003CF52 <internal_commands.ab3@1891> INCLUDE "internal_commands.ab3"
0003CF56 <internal_commands.ab3@1892> INCLUDE "internal_commands.ab3"
0003CF58 <internal_commands.ab3@1893> INCLUDE "internal_commands.ab3"
0003CF5C <internal_commands.ab3@1897> INCLUDE "internal_commands.ab3"
0003CF5E <internal_commands.ab3@1898> INCLUDE "internal_commands.ab3"
0003CF62 <internal_commands.ab3@1899> INCLUDE "internal_commands.ab3"
0003CF63 <internal_commands.ab3@1900> INCLUDE "internal_commands.ab3"
0003CF64 <internal_commands.ab3@1901> INCLUDE "internal_commands.ab3"
0003CF66 <internal_commands.ab3@1903> INCLUDE "internal_commands.ab3"
0003CF6A <internal_commands.ab3@1904> INCLUDE "internal_commands.ab3"
0003CF6C <internal_commands.ab3@1905> INCLUDE "internal_commands.ab3"
0003CF6E <internal_commands.ab3@1906> INCLUDE "internal_commands.ab3"
0003CF72 <internal_commands.ab3@1907> INCLUDE "internal_commands.ab3"
0003CF74 <internal_commands.ab3@1908> INCLUDE "internal_commands.ab3"
0003CF78 <internal_commands.ab3@1912> INCLUDE "internal_commands.ab3"
0003CF7A <internal_commands.ab3@1913> INCLUDE "internal_commands.ab3"
0003CF7E <internal_commands.ab3@1914> INCLUDE "internal_commands.ab3"
0003CF7F <internal_commands.ab3@1915> INCLUDE "internal_commands.ab3"
0003CF80 <internal_commands.ab3@1916> INCLUDE "internal_commands.ab3"
0003CF82 <internal_commands.ab3@1918> INCLUDE "internal_commands.ab3"
0003CF86 <internal_commands.ab3@1919> INCLUDE "internal_commands.ab3"
0003CF88 <internal_commands.ab3@1920> INCLUDE "internal_commands.ab3"
0003CF8A <internal_commands.ab3@1921> INCLUDE "internal_commands.ab3"
0003CF8E <internal_commands.ab3@1922> INCLUDE "internal_commands.ab3"
0003CF90 <internal_commands.ab3@1923> INCLUDE "internal_commands.ab3"
0003CF94 <internal_commands.ab3@1927> INCLUDE "internal_commands.ab3"
0003CF96 <internal_commands.ab3@1928> INCLUDE "internal_commands.ab3"
0003CF9A <internal_commands.ab3@1929> INCLUDE "internal_commands.ab3"
0003CF9B <internal_commands.ab3@1930> INCLUDE "internal_commands.ab3"
0003CF9C <internal_commands.ab3@1931> INCLUDE "internal_commands.ab3"
0003CF9E <internal_commands.ab3@1933> INCLUDE "internal_commands.ab3"
0003CFA2 <internal_commands.ab3@1934> INCLUDE "internal_commands.ab3"
0003CFA4 <internal_commands.ab3@1935> INCLUDE "internal_commands.ab3"
0003CFA6 <internal_commands.ab3@1936> INCLUDE "internal_commands.ab3"
0003CFAA <internal_commands.ab3@1937> INCLUDE "internal_commands.ab3"
0003CFAC <internal_commands.ab3@1938> INCLUDE "internal_commands.ab3"
0003CFB0 <internal_commands.ab3@1942> INCLUDE "internal_commands.ab3"
0003CFB2 <internal_commands.ab3@1943> INCLUDE "internal_commands.ab3"
0003CFB6 <internal_commands.ab3@1944> INCLUDE "internal_commands.ab3"
0003CFB7 <internal_commands.ab3@1945> INCLUDE "internal_commands.ab3"
0003CFB8 <internal_commands.ab3@1946> INCLUDE "internal_commands.ab3"
0003CFBA <internal_commands.ab3@1948> INCLUDE "internal_commands.ab3"
0003CFBE <internal_commands.ab3@1949> INCLUDE "internal_commands.ab3"
0003CFC0 <internal_commands.ab3@1950> INCLUDE "internal_commands.ab3"
0003CFC2 <internal_commands.ab3@1951> INCLUDE "internal_commands.ab3"
0003CFC6 <internal_commands.ab3@1952> INCLUDE "internal_commands.ab3"
0003CFC8 <internal_commands.ab3@1953> INCLUDE "internal_commands.ab3"
0003CFCC <internal_commands.ab3@1957> INCLUDE "internal_commands.ab3"
0003CFCE <internal_commands.ab3@1958> INCLUDE "internal_commands.ab3"
0003CFD2 <internal_commands.ab3@1959> INCLUDE "internal_commands.ab3"
0003CFD3 <internal_commands.ab3@1960> INCLUDE "internal_commands.ab3"
0003CFD4 <internal_commands.ab3@1961> INCLUDE "internal_commands.ab3"
0003CFD6 <internal_commands.ab3@1963> INCLUDE "internal_commands.ab3"
0003CFDA <internal_commands.ab3@1964> INCLUDE "internal_commands.ab3"
0003CFDC <internal_commands.ab3@1965> INCLUDE "internal_commands.ab3"
0003CFDE <internal_commands.ab3@1966> INCLUDE "internal_commands.ab3"
0003CFE2 <internal_commands.ab3@1967> INCLUDE "internal_commands.ab3"
0003CFE4 <internal_commands.ab3@1968> INCLUDE "internal_commands.ab3"
0003CFE8 <internal_commands.ab3@1972> INCLUDE "internal_commands.ab3"
0003CFEA <internal_commands.ab3@1973> INCLUDE "internal_commands.ab3"
0003CFEE <internal_commands.ab3@1974> INCLUDE "internal_commands.ab3"
0003CFEF <internal_commands.ab3@1975> INCLUDE "internal_commands.ab3"
0003CFF0 <internal_commands.ab3@1976> INCLUDE "internal_commands.ab3"
0003CFF2 <internal_commands.ab3@1978> INCLUDE "internal_commands.ab3"
0003CFF6 <internal_commands.ab3@1979> INCLUDE "internal_commands.ab3"
0003CFF8 <internal_commands.ab3@1980> INCLUDE "internal_commands.ab3"
0003CFFA <internal_commands.ab3@1981> INCLUDE "internal_commands.ab3"
0003CFFE <internal_commands.ab3@1982> INCLUDE "internal_commands.ab3"
0003D000 <internal_commands.ab3@1983> INCLUDE "internal_commands.ab3"
0003D004 <internal_commands.ab3@1987> INCLUDE "internal_commands.ab3"
0003D006 <internal_commands.ab3@1988> INCLUDE "internal_commands.ab3"
0003D00A <internal_commands.ab3@1989> INCLUDE "internal_commands.ab3"
0003D00B <internal_commands.ab3@1990> INCLUDE "internal_commands.ab3"
0003D00C <internal_commands.ab3@1991> INCLUDE "internal_commands.ab3"
0003D00E <internal_commands.ab3@1993> INCLUDE "internal_commands.ab3"
0003D012 <internal_commands.ab3@1994> INCLUDE "internal_commands.ab3"
0003D014 <internal_commands.ab3@1995> INCLUDE "internal_commands.ab3"
0003D016 <internal_commands.ab3@1996> INCLUDE "internal_commands.ab3"
0003D01A <internal_commands.ab3@1997> INCLUDE "internal_commands.ab3"
0003D01C <internal_commands.ab3@1998> INCLUDE "internal_commands.ab3"
0003D020 <internal_commands.ab3@2002> INCLUDE "internal_commands.ab3"
0003D022 <internal_commands.ab3@2003> INCLUDE "internal_commands.ab3"
0003D026 <internal_commands.ab3@2004> INCLUDE "internal_commands.ab3"
0003D027 <internal_commands.ab3@2005> INCLUDE "internal_commands.ab3"
0003D028 <internal_commands.ab3@2006> INCLUDE "internal_commands.ab3"
0003D02A <internal_commands.ab3@2008> INCLUDE "internal_commands.ab3"
0003D02E <internal_commands.ab3@2009> INCLUDE "internal_commands.ab3"
0003D030 <internal_commands.ab3@2010> INCLUDE "internal_commands.ab3"
0003D032 <internal_commands.ab3@2011> INCLUDE "internal_commands.ab3"
0003D036 <internal_commands.ab3@2012> INCLUDE "internal_commands.ab3"
0003D038 <internal_commands.ab3@2013> INCLUDE "internal_commands.ab3"
0003D03C <internal_commands.ab3@2017> INCLUDE "internal_commands.ab3"
0003D03E <internal_commands.ab3@2018> INCLUDE "internal_commands.ab3"
0003D042 <internal_commands.ab3@2019> INCLUDE "internal_commands.ab3"
0003D043 <internal_commands.ab3@2020> INCLUDE "internal_commands.ab3"
0003D044 <internal_commands.ab3@2021> INCLUDE "internal_commands.ab3"
0003D046 <internal_commands.ab3@2023> INCLUDE "internal_commands.ab3"
0003D04A <internal_commands.ab3@2024> INCLUDE "internal_commands.ab3"
0003D04C <internal_commands.ab3@2025> INCLUDE "internal_commands.ab3"
0003D04E <internal_commands.ab3@2026> INCLUDE "internal_commands.ab3"
0003D052 <internal_commands.ab3@2027> INCLUDE "internal_commands.ab3"
0003D054 <internal_commands.ab3@2028> INCLUDE "internal_commands.ab3"
0003D058 <internal_commands.ab3@2032> INCLUDE "internal_commands.ab3"
0003D05A <internal_commands.ab3@2033> INCLUDE "internal_commands.ab3"
0003D05E <internal_commands.ab3@2034> INCLUDE "internal_commands.ab3"
0003D05F <internal_commands.ab3@2035> INCLUDE "internal_commands.ab3"
0003D060 <internal_commands.ab3@2036> INCLUDE "internal_commands.ab3"
0003D062 <internal_commands.ab3@2038> INCLUDE "internal_commands.ab3"
0003D066 <internal_commands.ab3@2039> INCLUDE "internal_commands.ab3"
0003D068 <internal_commands.ab3@2040> INCLUDE "internal_commands.ab3"
0003D06A <internal_commands.ab3@2041> INCLUDE "internal_commands.ab3"
0003D06E <internal_commands.ab3@2042> INCLUDE "internal_commands.ab3"
0003D070 <internal_commands.ab3@2043> INCLUDE "internal_commands.ab3"
0003D074 <internal_commands.ab3@2047> INCLUDE "internal_commands.ab3"
0003D076 <internal_commands.ab3@2048> INCLUDE "internal_commands.ab3"
0003D07A <internal_commands.ab3@2049> INCLUDE "internal_commands.ab3"
0003D07B <internal_commands.ab3@2050> INCLUDE "internal_commands.ab3"
0003D07C <internal_commands.ab3@2051> INCLUDE "internal_commands.ab3"
0003D07E <internal_commands.ab3@2053> INCLUDE "internal_commands.ab3"
0003D082 <internal_commands.ab3@2054> INCLUDE "internal_commands.ab3"
0003D084 <internal_commands.ab3@2055> INCLUDE "internal_commands.ab3"
0003D086 <internal_commands.ab3@2056> INCLUDE "internal_commands.ab3"
0003D08A <internal_commands.ab3@2057> INCLUDE "internal_commands.ab3"
0003D08C <internal_commands.ab3@2058> INCLUDE "internal_commands.ab3"
0003D090 <internal_commands.ab3@2062> INCLUDE "internal_commands.ab3"
0003D092 <internal_commands.ab3@2063> INCLUDE "internal_commands.ab3"
0003D096 <internal_commands.ab3@2064> INCLUDE "internal_commands.ab3"
0003D097 <internal_commands.ab3@2065> INCLUDE "internal_commands.ab3"
0003D098 <internal_commands.ab3@2066> INCLUDE "internal_commands.ab3"
0003D09A <internal_commands.ab3@2068> INCLUDE "internal_commands.ab3"
0003D09E <internal_commands.ab3@2069> INCLUDE "internal_commands.ab3"
0003D0A0 <internal_commands.ab3@2070> INCLUDE "internal_commands.ab3"
0003D0A2 <internal_commands.ab3@2071> INCLUDE "internal_commands.ab3"
0003D0A6 <internal_commands.ab3@2072> INCLUDE "internal_commands.ab3"
0003D0A8 <internal_commands.ab3@2073> INCLUDE "internal_commands.ab3"
0003D0AC <internal_commands.ab3@2077> INCLUDE "internal_commands.ab3"
0003D0AE <internal_commands.ab3@2078> INCLUDE "internal_commands.ab3"
0003D0B1 <internal_commands.ab3@2079> INCLUDE "internal_commands.ab3"
0003D0B2 <internal_commands.ab3@2080> INCLUDE "internal_commands.ab3"
0003D0B4 <internal_commands.ab3@2083> INCLUDE "internal_commands.ab3"
0003D0B8 <internal_commands.ab3@2084> INCLUDE "internal_commands.ab3"
0003D0BA <internal_commands.ab3@2085> INCLUDE "internal_commands.ab3"
0003D0BC <internal_commands.ab3@2086> INCLUDE "internal_commands.ab3"
0003D0C0 <internal_commands.ab3@2087> INCLUDE "internal_commands.ab3"
0003D0C2 <internal_commands.ab3@2088> INCLUDE "internal_commands.ab3"
0003D0C6 <internal_commands.ab3@2092> INCLUDE "internal_commands.ab3"
0003D0C8 <internal_commands.ab3@2093> INCLUDE "internal_commands.ab3"
0003D0CB <internal_commands.ab3@2094> INCLUDE "internal_commands.ab3"
0003D0CC <internal_commands.ab3@2095> INCLUDE "internal_commands.ab3"
0003D0CE <internal_commands.ab3@2098> INCLUDE "internal_commands.ab3"
0003D0D2 <internal_commands.ab3@2099> INCLUDE "internal_commands.ab3"
0003D0D4 <internal_commands.ab3@2100> INCLUDE "internal_commands.ab3"
0003D0D6 <internal_commands.ab3@2101> INCLUDE "internal_commands.ab3"
0003D0DA <internal_commands.ab3@2102> INCLUDE "internal_commands.ab3"
0003D0DC <internal_commands.ab3@2103> INCLUDE "internal_commands.ab3"
0003D0E0 <internal_commands.ab3@2107> INCLUDE "internal_commands.ab3"
0003D0E2 <internal_commands.ab3@2108> INCLUDE "internal_commands.ab3"
0003D0E7 <internal_commands.ab3@2109> INCLUDE "internal_commands.ab3"
0003D0E8 <internal_commands.ab3@2110> INCLUDE "internal_commands.ab3"
0003D0EA <internal_commands.ab3@2113> INCLUDE "internal_commands.ab3"
0003D0EE <internal_commands.ab3@2114> INCLUDE "internal_commands.ab3"
0003D0F0 <internal_commands.ab3@2115> INCLUDE "internal_commands.ab3"
0003D0F2 <internal_commands.ab3@2116> INCLUDE "internal_commands.ab3"
0003D0F6 <internal_commands.ab3@2117> INCLUDE "internal_commands.ab3"
0003D0F8 <internal_commands.ab3@2118> INCLUDE "internal_commands.ab3"
0003D0FC <internal_commands.ab3@2122> INCLUDE "internal_commands.ab3"
0003D0FE <internal_commands.ab3@2123> INCLUDE "internal_commands.ab3"
0003D102 <internal_commands.ab3@2124> INCLUDE "internal_commands.ab3"
0003D103 <internal_commands.ab3@2125> INCLUDE "internal_commands.ab3"
0003D104 <internal_commands.ab3@2126> INCLUDE "internal_commands.ab3"
0003D106 <internal_commands.ab3@2128> INCLUDE "internal_commands.ab3"
0003D10A <internal_commands.ab3@2129> INCLUDE "internal_commands.ab3"
0003D10C <internal_commands.ab3@2130> INCLUDE "internal_commands.ab3"
0003D10E <internal_commands.ab3@2131> INCLUDE "internal_commands.ab3"
0003D112 <internal_commands.ab3@2132> INCLUDE "internal_commands.ab3"
0003D114 <internal_commands.ab3@2133> INCLUDE "internal_commands.ab3"
0003D118 <internal_commands.ab3@2137> INCLUDE "internal_commands.ab3"
0003D11A <internal_commands.ab3@2138> INCLUDE "internal_commands.ab3"
0003D11F <internal_commands.ab3@2139> INCLUDE "internal_commands.ab3"
0003D120 <internal_commands.ab3@2140> INCLUDE "internal_commands.ab3"
0003D122 <internal_commands.ab3@2143> INCLUDE "internal_commands.ab3"
0003D126 <internal_commands.ab3@2144> INCLUDE "internal_commands.ab3"
0003D128 <internal_commands.ab3@2145> INCLUDE "internal_commands.ab3"
0003D12A <internal_commands.ab3@2146> INCLUDE "internal_commands.ab3"
0003D12E <internal_commands.ab3@2147> INCLUDE "internal_commands.ab3"
0003D130 <internal_commands.ab3@2148> INCLUDE "internal_commands.ab3"
0003D134 <internal_commands.ab3@2152> INCLUDE "internal_commands.ab3"
0003D136 <internal_commands.ab3@2153> INCLUDE "internal_commands.ab3"
0003D13B <internal_commands.ab3@2154> INCLUDE "internal_commands.ab3"
0003D13C <internal_commands.ab3@2155> INCLUDE "internal_commands.ab3"
0003D13E <internal_commands.ab3@2158> INCLUDE "internal_commands.ab3"
0003D142 <internal_commands.ab3@2159> INCLUDE "internal_commands.ab3"
0003D144 <internal_commands.ab3@2160> INCLUDE "internal_commands.ab3"
0003D146 <internal_commands.ab3@2161> INCLUDE "internal_commands.ab3"
0003D14A <internal_commands.ab3@2162> INCLUDE "internal_commands.ab3"
0003D14C <internal_commands.ab3@2163> INCLUDE "internal_commands.ab3"
0003D150 <internal_commands.ab3@2167> INCLUDE "internal_commands.ab3"
0003D152 <internal_commands.ab3@2168> INCLUDE "internal_commands.ab3"
0003D157 <internal_commands.ab3@2169> INCLUDE "internal_commands.ab3"
0003D158 <internal_commands.ab3@2170> INCLUDE "internal_commands.ab3"
0003D15A <internal_commands.ab3@2173> INCLUDE "internal_commands.ab3"
0003D15E <internal_commands.ab3@2174> INCLUDE "internal_commands.ab3"
0003D160 <internal_commands.ab3@2175> INCLUDE "internal_commands.ab3"
0003D162 <internal_commands.ab3@2176> INCLUDE "internal_commands.ab3"
0003D166 <internal_commands.ab3@2177> INCLUDE "internal_commands.ab3"
0003D168 <internal_commands.ab3@2178> INCLUDE "internal_commands.ab3"
0003D16C <internal_commands.ab3@2182> INCLUDE "internal_commands.ab3"
0003D16E <internal_commands.ab3@2183> INCLUDE "internal_commands.ab3"
0003D173 <internal_commands.ab3@2184> INCLUDE "internal_commands.ab3"
0003D174 <internal_commands.ab3@2185> INCLUDE "internal_commands.ab3"
0003D176 <internal_commands.ab3@2188> INCLUDE "internal_commands.ab3"
0003D17A <internal_commands.ab3@2189> INCLUDE "internal_commands.ab3"
0003D17C <internal_commands.ab3@2190> INCLUDE "internal_commands.ab3"
0003D17E <internal_commands.ab3@2191> INCLUDE "internal_commands.ab3"
0003D182 <internal_commands.ab3@2192> INCLUDE "internal_commands.ab3"
0003D184 <internal_commands.ab3@2193> INCLUDE "internal_commands.ab3"
0003D188 <internal_commands.ab3@2197> INCLUDE "internal_commands.ab3"
0003D18A <internal_commands.ab3@2198> INCLUDE "internal_commands.ab3"
0003D18F <internal_commands.ab3@2199> INCLUDE "internal_commands.ab3"
0003D190 <internal_commands.ab3@2200> INCLUDE "internal_commands.ab3"
0003D192 <internal_commands.ab3@2203> INCLUDE "internal_commands.ab3"
0003D196 <internal_commands.ab3@2204> INCLUDE "internal_commands.ab3"
0003D198 <internal_commands.ab3@2205> INCLUDE "internal_commands.ab3"
0003D19A <internal_commands.ab3@2206> INCLUDE "internal_commands.ab3"
0003D19E <internal_commands.ab3@2207> INCLUDE "internal_commands.ab3"
0003D1A0 <internal_commands.ab3@2208> INCLUDE "internal_commands.ab3"
0003D1A4 <internal_commands.ab3@2212> INCLUDE "internal_commands.ab3"
0003D1A6 <internal_commands.ab3@2213> INCLUDE "internal_commands.ab3"
0003D1AA <internal_commands.ab3@2214> INCLUDE "internal_commands.ab3"
0003D1AB <internal_commands.ab3@2215> INCLUDE "internal_commands.ab3"
0003D1AC <internal_commands.ab3@2216> INCLUDE "internal_commands.ab3"
0003D1AE <internal_commands.ab3@2218> INCLUDE "internal_commands.ab3"
0003D1B2 <internal_commands.ab3@2219> INCLUDE "internal_commands.ab3"
0003D1B4 <internal_commands.ab3@2220> INCLUDE "internal_commands.ab3"
0003D1B6 <internal_commands.ab3@2221> INCLUDE "internal_commands.ab3"
0003D1BA <internal_commands.ab3@2222> INCLUDE "internal_commands.ab3"
0003D1BC <internal_commands.ab3@2223> INCLUDE "internal_commands.ab3"
0003D1C0 <internal_commands.ab3@2227> INCLUDE "internal_commands.ab3"
0003D1C2 <internal_commands.ab3@2228> INCLUDE "internal_commands.ab3"
0003D1C7 <internal_commands.ab3@2229> INCLUDE "internal_commands.ab3"
0003D1C8 <internal_commands.ab3@2230> INCLUDE "internal_commands.ab3"
0003D1CA <internal_commands.ab3@2233> INCLUDE "internal_commands.ab3"
0003D1CE <internal_commands.ab3@2234> INCLUDE "internal_commands.ab3"
0003D1D0 <internal_commands.ab3@2235> INCLUDE "internal_commands.ab3"
0003D1D2 <internal_commands.ab3@2236> INCLUDE "internal_commands.ab3"
0003D1D6 <internal_commands.ab3@2237> INCLUDE "internal_commands.ab3"
0003D1D8 <internal_commands.ab3@2238> INCLUDE "internal_commands.ab3"
0003D1DC <internal_commands.ab3@2242> INCLUDE "internal_commands.ab3"
0003D1DE <internal_commands.ab3@2243> INCLUDE "internal_commands.ab3"
0003D1E4 <internal_commands.ab3@2244> INCLUDE "internal_commands.ab3"
0003D1E5 <internal_commands.ab3@2245> INCLUDE "internal_commands.ab3"
0003D1E6 <internal_commands.ab3@2246> INCLUDE "internal_commands.ab3"
0003D1E8 <internal_commands.ab3@2248> INCLUDE "internal_commands.ab3"
0003D1EC <internal_commands.ab3@2249> INCLUDE "internal_commands.ab3"
0003D1EE <internal_commands.ab3@2250> INCLUDE "internal_commands.ab3"
0003D1F0 <internal_commands.ab3@2251> INCLUDE "internal_commands.ab3"
0003D1F4 <internal_commands.ab3@2252> INCLUDE "internal_commands.ab3"
0003D1F6 <internal_commands.ab3@2253> INCLUDE "internal_commands.ab3"
0003D1FA <internal_commands.ab3@2257> INCLUDE "internal_commands.ab3"
0003D1FC <internal_commands.ab3@2258> INCLUDE "internal_commands.ab3"
0003D200 <internal_commands.ab3@2259> INCLUDE "internal_commands.ab3"
0003D201 <internal_commands.ab3@2260> INCLUDE "internal_commands.ab3"
0003D202 <internal_commands.ab3@2261> INCLUDE "internal_commands.ab3"
0003D204 <internal_commands.ab3@2263> INCLUDE "internal_commands.ab3"
0003D208 <internal_commands.ab3@2264> INCLUDE "internal_commands.ab3"
0003D20A <internal_commands.ab3@2265> INCLUDE "internal_commands.ab3"
0003D20C <internal_commands.ab3@2266> INCLUDE "internal_commands.ab3"
0003D210 <internal_commands.ab3@2267> INCLUDE "internal_commands.ab3"
0003D212 <internal_commands.ab3@2268> INCLUDE "internal_commands.ab3"
0003D216 <internal_commands.ab3@2272> INCLUDE "internal_commands.ab3"
0003D218 <internal_commands.ab3@2273> INCLUDE "internal_commands.ab3"
0003D21D <internal_commands.ab3@2274> INCLUDE "internal_commands.ab3"
0003D21E <internal_commands.ab3@2275> INCLUDE "internal_commands.ab3"
0003D220 <internal_commands.ab3@2278> INCLUDE "internal_commands.ab3"
0003D224 <internal_commands.ab3@2279> INCLUDE "internal_commands.ab3"
0003D226 <internal_commands.ab3@2280> INCLUDE "internal_commands.ab3"
0003D228 <internal_commands.ab3@2281> INCLUDE "internal_commands.ab3"
0003D22C <internal_commands.ab3@2282> INCLUDE "internal_commands.ab3"
0003D22E <internal_commands.ab3@2283> INCLUDE "internal_commands.ab3"
0003D232 <internal_commands.ab3@2288> INCLUDE "internal_commands.ab3"
0003D234 <internal_commands.ab3@2289> INCLUDE "internal_commands.ab3"
0003D23B <internal_commands.ab3@2290> INCLUDE "internal_commands.ab3"
0003D23C <internal_commands.ab3@2291> INCLUDE "internal_commands.ab3"
0003D23E <internal_commands.ab3@2310> INCLUDE "internal_commands.ab3"
0003D240 <internal_commands.ab3@2311> INCLUDE "internal_commands.ab3"
0003D242 <internal_commands.ab3@2315> INCLUDE "internal_commands.ab3"
0003D244 <internal_commands.ab3@2316> INCLUDE "internal_commands.ab3"
0003D246 <internal_commands.ab3@2320> INCLUDE "internal_commands.ab3"
0003D248 <internal_commands.ab3@2321> INCLUDE "internal_commands.ab3"
0003D24A <internal_commands.ab3@2325> INCLUDE "internal_commands.ab3"
0003D24C <internal_commands.ab3@2326> INCLUDE "internal_commands.ab3"
0003D24E <internal_commands.ab3@2332> INCLUDE "internal_commands.ab3"
0003D252 <internal_commands.ab3@2333> INCLUDE "internal_commands.ab3"
0003D254 <internal_commands.ab3@2334> INCLUDE "internal_commands.ab3"
0003D256 <internal_commands.ab3@2335> INCLUDE "internal_commands.ab3"
0003D258 <internal_commands.ab3@2336> INCLUDE "internal_commands.ab3"
0003D25A <internal_commands.ab3@2337> INCLUDE "internal_commands.ab3"
0003D25E <internal_commands.ab3@2338> INCLUDE "internal_commands.ab3"
0003D264 <internal_commands.ab3@2341> INCLUDE "internal_commands.ab3"
0003D268 <internal_commands.ab3@2342> INCLUDE "internal_commands.ab3"
0003D26A <internal_commands.ab3@2343> INCLUDE "internal_commands.ab3"
0003D26C <internal_commands.ab3@2344> INCLUDE "internal_commands.ab3"
0003D26E <internal_commands.ab3@2345> INCLUDE "internal_commands.ab3"
0003D270 <internal_commands.ab3@2346> INCLUDE "internal_commands.ab3"
0003D272 <internal_commands.ab3@2347> INCLUDE "internal_commands.ab3"
0003D274 <internal_commands.ab3@2354> INCLUDE "internal_commands.ab3"
0003D278 <internal_commands.ab3@2355> INCLUDE "internal_commands.ab3"
0003D27C <internal_commands.ab3@2356> INCLUDE "internal_commands.ab3"
0003D280 <internal_commands.ab3@2357> INCLUDE "internal_commands.ab3"
0003D284 <internal_commands.ab3@2358> INCLUDE "internal_commands.ab3"
0003D288 <internal_commands.ab3@2359> INCLUDE "internal_commands.ab3"
0003D28A <internal_commands.ab3@2362> INCLUDE "internal_commands.ab3"
0003D28C <internal_commands.ab3@2363> INCLUDE "internal_commands.ab3"
0003D290 <internal_commands.ab3@2364> INCLUDE "internal_commands.ab3"
0003D294 <internal_commands.ab3@2365> INCLUDE "internal_commands.ab3"
0003D298 <internal_commands.ab3@2366> INCLUDE "internal_commands.ab3"
0003D29C <internal_commands.ab3@2367> INCLUDE "internal_commands.ab3"
0003D29E <internal_commands.ab3@2370> INCLUDE "internal_commands.ab3"
0003D2A0 <internal_commands.ab3@2371> INCLUDE "internal_commands.ab3"
0003D2A4 <internal_commands.ab3@2372> INCLUDE "internal_commands.ab3"
0003D2A8 <internal_commands.ab3@2373> INCLUDE "internal_commands.ab3"
0003D2AC <internal_commands.ab3@2374> INCLUDE "internal_commands.ab3"
0003D2B0 <internal_commands.ab3@2375> INCLUDE "internal_commands.ab3"
0003D2B2 <internal_commands.ab3@2376> INCLUDE "internal_commands.ab3"
0003D2B4 <internal_commands.ab3@2379> INCLUDE "internal_commands.ab3"
0003D2B6 <internal_commands.ab3@2380> INCLUDE "internal_commands.ab3"
0003D2BA <internal_commands.ab3@2381> INCLUDE "internal_commands.ab3"
0003D2BC <internal_commands.ab3@2383> INCLUDE "internal_commands.ab3"
0003D2C0 <internal_commands.ab3@2384> INCLUDE "internal_commands.ab3"
0003D2C2 <internal_commands.ab3@2388> INCLUDE "internal_commands.ab3"
0003D2C6 <internal_commands.ab3@2389> INCLUDE "internal_commands.ab3"
0003D2C8 <internal_commands.ab3@2390> INCLUDE "internal_commands.ab3"
0003D2CC <internal_commands.ab3@2391> INCLUDE "internal_commands.ab3"
0003D2D0 <internal_commands.ab3@2392> INCLUDE "internal_commands.ab3"
0003D2D4 <internal_commands.ab3@2393> INCLUDE "internal_commands.ab3"
0003D2D8 <internal_commands.ab3@2397> INCLUDE "internal_commands.ab3"
0003D2DC <internal_commands.ab3@2398> INCLUDE "internal_commands.ab3"
0003D2E0 <internal_commands.ab3@2400> INCLUDE "internal_commands.ab3"
0003D2E4 <internal_commands.ab3@2401> INCLUDE "internal_commands.ab3"
0003D2E8 <internal_commands.ab3@2402> INCLUDE "internal_commands.ab3"
0003D2EC <internal_commands.ab3@2403> INCLUDE "internal_commands.ab3"
0003D2F0 <internal_commands.ab3@2404> INCLUDE "internal_commands.ab3"
0003D2F4 <internal_commands.ab3@2405> INCLUDE "internal_commands.ab3"
0003D2F8 <internal_commands.ab3@2406> INCLUDE "internal_commands.ab3"
0003D2FC <internal_commands.ab3@2407> INCLUDE "internal_commands.ab3"
0003D300 <internal_commands.ab3@2409> INCLUDE "internal_commands.ab3"
0003D304 <internal_commands.ab3@2412> INCLUDE "internal_commands.ab3"
0003D308 <internal_commands.ab3@2413> INCLUDE "internal_commands.ab3"
0003D30C <internal_commands.ab3@2415> INCLUDE "internal_commands.ab3"
0003D310 <internal_commands.ab3@2416> INCLUDE "internal_commands.ab3"
0003D314 <internal_commands.ab3@2417> INCLUDE "internal_commands.ab3"
0003D318 <internal_commands.ab3@2418> INCLUDE "internal_commands.ab3"
0003D31C <internal_commands.ab3@2419> INCLUDE "internal_commands.ab3"
0003D320 <internal_commands.ab3@2420> INCLUDE "internal_commands.ab3"
0003D324 <internal_commands.ab3@2421> INCLUDE "internal_commands.ab3"
0003D328 <internal_commands.ab3@2422> INCLUDE "internal_commands.ab3"
0003D32C <internal_commands.ab3@2424> INCLUDE "internal_commands.ab3"
0003D330 <internal_commands.ab3@2427> INCLUDE "internal_commands.ab3"
0003D332 <internal_commands.ab3@2428> INCLUDE "internal_commands.ab3"
0003D336 <internal_commands.ab3@2429> INCLUDE "internal_commands.ab3"
0003D33A <internal_commands.ab3@2430> INCLUDE "internal_commands.ab3"
0003D33E <internal_commands.ab3@2431> INCLUDE "internal_commands.ab3"
0003D342 <internal_commands.ab3@2432> INCLUDE "internal_commands.ab3"
0003D346 <internal_commands.ab3@2433> INCLUDE "internal_commands.ab3"
0003D34A <internal_commands.ab3@2434> INCLUDE "internal_commands.ab3"
0003D34E <internal_commands.ab3@2437> INCLUDE "internal_commands.ab3"
0003D352 <internal_commands.ab3@2438> INCLUDE "internal_commands.ab3"
0003D356 <internal_commands.ab3@2439> INCLUDE "internal_commands.ab3"
0003D358 <internal_commands.ab3@2440> INCLUDE "internal_commands.ab3"
0003D35A <internal_commands.ab3@2443> INCLUDE "internal_commands.ab3"
0003D35C <internal_commands.ab3@2444> INCLUDE "internal_commands.ab3"
0003D35E <internal_commands.ab3@2445> INCLUDE "internal_commands.ab3"
0003D360 <internal_commands.ab3@2446> INCLUDE "internal_commands.ab3"
0003D364 <internal_commands.ab3@2447> INCLUDE "internal_commands.ab3"
0003D368 <internal_commands.ab3@2450> INCLUDE "internal_commands.ab3"
0003D36C <internal_commands.ab3@2451> INCLUDE "internal_commands.ab3"
0003D370 <internal_commands.ab3@2452> INCLUDE "internal_commands.ab3"
0003D372 <internal_commands.ab3@2453> INCLUDE "internal_commands.ab3"
0003D376 <internal_commands.ab3@2454> INCLUDE "internal_commands.ab3"
0003D37A <internal_commands.ab3@2458> INCLUDE "internal_commands.ab3"
0003D37E <internal_commands.ab3@2461> INCLUDE "internal_commands.ab3"
0003D382 <internal_commands.ab3@2462> INCLUDE "internal_commands.ab3"
0003D384 <internal_commands.ab3@2463> INCLUDE "internal_commands.ab3"
0003D386 <internal_commands.ab3@2464> INCLUDE "internal_commands.ab3"
0003D38A <internal_commands.ab3@2465> INCLUDE "internal_commands.ab3"
0003D38E <internal_commands.ab3@2468> INCLUDE "internal_commands.ab3"
0003D392 <internal_commands.ab3@2469> INCLUDE "internal_commands.ab3"
0003D396 <internal_commands.ab3@2473> INCLUDE "internal_commands.ab3"
0003D39A <internal_commands.ab3@2476> INCLUDE "internal_commands.ab3"
0003D39E <internal_commands.ab3@2477> INCLUDE "internal_commands.ab3"
0003D3A0 <internal_commands.ab3@2478> INCLUDE "internal_commands.ab3"
0003D3A2 <internal_commands.ab3@2479> INCLUDE "internal_commands.ab3"
0003D3A6 <internal_commands.ab3@2480> INCLUDE "internal_commands.ab3"
0003D3AA <internal_commands.ab3@2483> INCLUDE "internal_commands.ab3"
0003D3AE <internal_commands.ab3@2484> INCLUDE "internal_commands.ab3"
0003D3B0 <internal_commands.ab3@2488> INCLUDE "internal_commands.ab3"
0003D3B4 <internal_commands.ab3@2489> INCLUDE "internal_commands.ab3"
0003D3B8 <internal_commands.ab3@2490> INCLUDE "internal_commands.ab3"
0003D3BA <internal_commands.ab3@2491> INCLUDE "internal_commands.ab3"
0003D3BE <internal_commands.ab3@2492> INCLUDE "internal_commands.ab3"
0003D3C2 <internal_commands.ab3@2493> INCLUDE "internal_commands.ab3"
0003D3C4 <internal_commands.ab3@2496> INCLUDE "internal_commands.ab3"
0003D3C8 <internal_commands.ab3@2497> INCLUDE "internal_commands.ab3"
0003D3CC <internal_commands.ab3@2498> INCLUDE "internal_commands.ab3"
0003D3D0 <internal_commands.ab3@2499> INCLUDE "internal_commands.ab3"
0003D3D4 <internal_commands.ab3@2502> INCLUDE "internal_commands.ab3"
0003D3D8 <internal_commands.ab3@2503> INCLUDE "internal_commands.ab3"
0003D3DA <internal_commands.ab3@2507> INCLUDE "internal_commands.ab3"
0003D3DE <internal_commands.ab3@2508> INCLUDE "internal_commands.ab3"
0003D3E0 <internal_commands.ab3@2509> INCLUDE "internal_commands.ab3"
0003D3E2 <internal_commands.ab3@2510> INCLUDE "internal_commands.ab3"
0003D3E4 <internal_commands.ab3@2511> INCLUDE "internal_commands.ab3"
0003D3E8 <internal_commands.ab3@2512> INCLUDE "internal_commands.ab3"
0003D3EC <internal_commands.ab3@2515> INCLUDE "internal_commands.ab3"
0003D3F0 <internal_commands.ab3@2516> INCLUDE "internal_commands.ab3"
0003D3F4 <internal_commands.ab3@2517> INCLUDE "internal_commands.ab3"
0003D3F8 <internal_commands.ab3@2518> INCLUDE "internal_commands.ab3"
0003D3FC <internal_commands.ab3@2522> INCLUDE "internal_commands.ab3"
0003D400 <internal_commands.ab3@2523> INCLUDE "internal_commands.ab3"
0003D404 <internal_commands.ab3@2527> INCLUDE "internal_commands.ab3"
0003D408 <internal_commands.ab3@2528> INCLUDE "internal_commands.ab3"
0003D40C <internal_commands.ab3@2532> INCLUDE "internal_commands.ab3"
0003D410 <internal_commands.ab3@2533> INCLUDE "internal_commands.ab3"
0003D414 <internal_commands.ab3@2537> INCLUDE "internal_commands.ab3"
0003D416 <internal_commands.ab3@2540> INCLUDE "internal_commands.ab3"
0003D41A <internal_commands.ab3@2541> INCLUDE "internal_commands.ab3"
0003D41E <internal_commands.ab3@2542> INCLUDE "internal_commands.ab3"
0003D420 <internal_commands.ab3@2543> INCLUDE "internal_commands.ab3"
0003D422 <internal_commands.ab3@2544> INCLUDE "internal_commands.ab3"
0003D424 <internal_commands.ab3@2545> INCLUDE "internal_commands.ab3"
0003D428 <internal_commands.ab3@2546> INCLUDE "internal_commands.ab3"
0003D42C <internal_commands.ab3@2547> INCLUDE "internal_commands.ab3"
0003D42E <internal_commands.ab3@2548> INCLUDE "internal_commands.ab3"
0003D432 <internal_commands.ab3@2549> INCLUDE "internal_commands.ab3"
0003D434 <internal_commands.ab3@2550> INCLUDE "internal_commands.ab3"
0003D436 <internal_commands.ab3@2551> INCLUDE "internal_commands.ab3"
0003D438 <internal_commands.ab3@2552> INCLUDE "internal_commands.ab3"
0003D43C <internal_commands.ab3@2553> INCLUDE "internal_commands.ab3"
0003D440 <internal_commands.ab3@2554> INCLUDE "internal_commands.ab3"
0003D442 <internal_commands.ab3@2557> INCLUDE "internal_commands.ab3"
0003D444 <internal_commands.ab3@2558> INCLUDE "internal_commands.ab3"
0003D448 <internal_commands.ab3@2559> INCLUDE "internal_commands.ab3"
0003D44C <internal_commands.ab3@2560> INCLUDE "internal_commands.ab3"
0003D450 <internal_commands.ab3@2561> INCLUDE "internal_commands.ab3"
0003D454 <internal_commands.ab3@2562> INCLUDE "internal_commands.ab3"
0003D456 <internal_commands.ab3@2563> INCLUDE "internal_commands.ab3"
0003D45A <internal_commands.ab3@2564> INCLUDE "internal_commands.ab3"
0003D45E <internal_commands.ab3@2565> INCLUDE "internal_commands.ab3"
0003D462 <internal_commands.ab3@2566> INCLUDE "internal_commands.ab3"
0003D464 <internal_commands.ab3@2567> INCLUDE "internal_commands.ab3"
0003D466 <internal_commands.ab3@2568> INCLUDE "internal_commands.ab3"
0003D468 <internal_commands.ab3@2569> INCLUDE "internal_commands.ab3"
0003D46A <internal_commands.ab3@2572> INCLUDE "internal_commands.ab3"
0003D46C <internal_commands.ab3@2573> INCLUDE "internal_commands.ab3"
0003D46E <internal_commands.ab3@2574> INCLUDE "internal_commands.ab3"
0003D472 <internal_commands.ab3@2575> INCLUDE "internal_commands.ab3"
0003D476 <internal_commands.ab3@2576> INCLUDE "internal_commands.ab3"
0003D478 <internal_commands.ab3@2580> INCLUDE "internal_commands.ab3"
0003D47C <internal_commands.ab3@2581> INCLUDE "internal_commands.ab3"
0003D47E <internal_commands.ab3@2582> INCLUDE "internal_commands.ab3"
0003D482 <internal_commands.ab3@2583> INCLUDE "internal_commands.ab3"
0003D486 <internal_commands.ab3@2584> INCLUDE "internal_commands.ab3"
0003D488 <internal_commands.ab3@2585> INCLUDE "internal_commands.ab3"
0003D48A <internal_commands.ab3@2588> INCLUDE "internal_commands.ab3"
0003D48C <internal_commands.ab3@2592> INCLUDE "internal_commands.ab3"
0003D490 <internal_commands.ab3@2593> INCLUDE "internal_commands.ab3"
0003D492 <internal_commands.ab3@2594> INCLUDE "internal_commands.ab3"
0003D496 <internal_commands.ab3@2595> INCLUDE "internal_commands.ab3"
0003D49A <internal_commands.ab3@2596> INCLUDE "internal_commands.ab3"
0003D49E <internal_commands.ab3@2597> INCLUDE "internal_commands.ab3"
0003D4A0 <internal_commands.ab3@2600> INCLUDE "internal_commands.ab3"
0003D4A4 <internal_commands.ab3@2604> INCLUDE "internal_commands.ab3"
0003D4A8 <internal_commands.ab3@2605> INCLUDE "internal_commands.ab3"
0003D4AA <internal_commands.ab3@2606> INCLUDE "internal_commands.ab3"
0003D4AE <internal_commands.ab3@2607> INCLUDE "internal_commands.ab3"
0003D4B2 <internal_commands.ab3@2608> INCLUDE "internal_commands.ab3"
0003D4B6 <internal_commands.ab3@2611> INCLUDE "internal_commands.ab3"
0003D4BA <internal_commands.ab3@2612> INCLUDE "internal_commands.ab3"
0003D4BE <internal_commands.ab3@2613> INCLUDE "internal_commands.ab3"
0003D4C2 <internal_commands.ab3@2614> INCLUDE "internal_commands.ab3"
0003D4C6 <internal_commands.ab3@2615> INCLUDE "internal_commands.ab3"
0003D4CA <internal_commands.ab3@2624> INCLUDE "internal_commands.ab3"
0003D4CC <internal_commands.ab3@2625> INCLUDE "internal_commands.ab3"
0003D4D1 <internal_commands.ab3@2626> INCLUDE "internal_commands.ab3"
0003D4D2 <internal_commands.ab3@2627> INCLUDE "internal_commands.ab3"
0003D4D6 <internal_commands.ab3@2631> INCLUDE "internal_commands.ab3"
0003D4D8 <internal_commands.ab3@2632> INCLUDE "internal_commands.ab3"
0003D4DF <internal_commands.ab3@2633> INCLUDE "internal_commands.ab3"
0003D4E0 <internal_commands.ab3@2634> INCLUDE "internal_commands.ab3"
0003D4E4 <internal_commands.ab3@2638> INCLUDE "internal_commands.ab3"
0003D4E6 <internal_commands.ab3@2639> INCLUDE "internal_commands.ab3"
0003D4ED <internal_commands.ab3@2640> INCLUDE "internal_commands.ab3"
0003D4EE <internal_commands.ab3@2641> INCLUDE "internal_commands.ab3"
0003D4F2 <internal_commands.ab3@2651> INCLUDE "internal_commands.ab3"
0003D4F4 <internal_commands.ab3@2652> INCLUDE "internal_commands.ab3"
0003D4FC <internal_commands.ab3@2653> INCLUDE "internal_commands.ab3"
0003D4FD <internal_commands.ab3@2654> INCLUDE "internal_commands.ab3"
0003D4FE <internal_commands.ab3@2655> INCLUDE "internal_commands.ab3"
0003D502 <internal_commands.ab3@2658> INCLUDE "internal_commands.ab3"
0003D504 <internal_commands.ab3@2659> INCLUDE "internal_commands.ab3"
0003D509 <internal_commands.ab3@2660> INCLUDE "internal_commands.ab3"
0003D51D <internal_commands.ab3@2661> INCLUDE "internal_commands.ab3"
0003D51E <internal_commands.ab3@2662> INCLUDE "internal_commands.ab3"
0003D522 <internal_commands.ab3@2665> INCLUDE "internal_commands.ab3"
0003D524 <internal_commands.ab3@2666> INCLUDE "internal_commands.ab3"
0003D528 <internal_commands.ab3@2667> INCLUDE "internal_commands.ab3"
0003D529 <internal_commands.ab3@2668> INCLUDE "internal_commands.ab3"
0003D52A <internal_commands.ab3@2669> INCLUDE "internal_commands.ab3"
0003D52E <internal_commands.ab3@2672> INCLUDE "internal_commands.ab3"
0003D530 <internal_commands.ab3@2673> INCLUDE "internal_commands.ab3"
0003D533 <internal_commands.ab3@2674> INCLUDE "internal_commands.ab3"
0003D534 <internal_commands.ab3@2675> INCLUDE "internal_commands.ab3"
0003D538 <internal_commands.ab3@2679> INCLUDE "internal_commands.ab3"
0003D53A <internal_commands.ab3@2680> INCLUDE "internal_commands.ab3"
0003D541 <internal_commands.ab3@2681> INCLUDE "internal_commands.ab3"
0003D542 <internal_commands.ab3@2682> INCLUDE "internal_commands.ab3"
0003D546 <internal_commands.ab3@2686> INCLUDE "internal_commands.ab3"
0003D548 <internal_commands.ab3@2687> INCLUDE "internal_commands.ab3"
0003D54E <internal_commands.ab3@2688> INCLUDE "internal_commands.ab3"
0003D55B <internal_commands.ab3@2689> INCLUDE "internal_commands.ab3"
0003D55C <internal_commands.ab3@2690> INCLUDE "internal_commands.ab3"
0003D560 <internal_commands.ab3@2693> INCLUDE "internal_commands.ab3"
0003D562 <internal_commands.ab3@2694> INCLUDE "internal_commands.ab3"
0003D569 <internal_commands.ab3@2695> INCLUDE "internal_commands.ab3"
0003D581 <internal_commands.ab3@2696> INCLUDE "internal_commands.ab3"
0003D582 <internal_commands.ab3@2697> INCLUDE "internal_commands.ab3"
0003D586 <internal_commands.ab3@2700> INCLUDE "internal_commands.ab3"
0003D588 <internal_commands.ab3@2701> INCLUDE "internal_commands.ab3"
0003D58C <internal_commands.ab3@2702> INCLUDE "internal_commands.ab3"
0003D5AF <internal_commands.ab3@2703> INCLUDE "internal_commands.ab3"
0003D5B0 <internal_commands.ab3@2704> INCLUDE "internal_commands.ab3"
0003D5B4 <internal_commands.ab3@2707> INCLUDE "internal_commands.ab3"
0003D5B6 <internal_commands.ab3@2708> INCLUDE "internal_commands.ab3"
0003D5BD <internal_commands.ab3@2709> INCLUDE "internal_commands.ab3"
0003D5C8 <internal_commands.ab3@2710> INCLUDE "internal_commands.ab3"
0003D5CC <internal_commands.ab3@2714> INCLUDE "internal_commands.ab3"
0003D5CE <internal_commands.ab3@2715> INCLUDE "internal_commands.ab3"
0003D5D4 <internal_commands.ab3@2716> INCLUDE "internal_commands.ab3"
0003D5D5 <internal_commands.ab3@2717> INCLUDE "internal_commands.ab3"
0003D5D6 <internal_commands.ab3@2718> INCLUDE "internal_commands.ab3"
0003D5DA <internal_commands.ab3@2721> INCLUDE "internal_commands.ab3"
0003D5DC <internal_commands.ab3@2722> INCLUDE "internal_commands.ab3"
0003D5E1 <internal_commands.ab3@2723> INCLUDE "internal_commands.ab3"
0003D5E2 <internal_commands.ab3@2724> INCLUDE "internal_commands.ab3"
0003D5E6 <internal_commands.ab3@2728> INCLUDE "internal_commands.ab3"
0003D5E8 <internal_commands.ab3@2729> INCLUDE "internal_commands.ab3"
0003D5EF <internal_commands.ab3@2730> INCLUDE "internal_commands.ab3"
0003D601 <internal_commands.ab3@2731> INCLUDE "internal_commands.ab3"
0003D602 <internal_commands.ab3@2732> INCLUDE "internal_commands.ab3"
0003D606 <internal_commands.ab3@2735> INCLUDE "internal_commands.ab3"
0003D608 <internal_commands.ab3@2736> INCLUDE "internal_commands.ab3"
0003D612 <internal_commands.ab3@2737> INCLUDE "internal_commands.ab3"
0003D613 <internal_commands.ab3@2738> INCLUDE "internal_commands.ab3"
0003D614 <internal_commands.ab3@2739> INCLUDE "internal_commands.ab3"
0003D618 <internal_commands.ab3@2742> INCLUDE "internal_commands.ab3"
0003D61A <internal_commands.ab3@2743> INCLUDE "internal_commands.ab3"
0003D622 <internal_commands.ab3@2744> INCLUDE "internal_commands.ab3"
0003D62F <internal_commands.ab3@2745> INCLUDE "internal_commands.ab3"
0003D630 <internal_commands.ab3@2746> INCLUDE "internal_commands.ab3"
0003D634 <internal_commands.ab3@2749> INCLUDE "internal_commands.ab3"
0003D636 <internal_commands.ab3@2750> INCLUDE "internal_commands.ab3"
0003D639 <internal_commands.ab3@2751> INCLUDE "internal_commands.ab3"
0003D674 <internal_commands.ab3@2752> INCLUDE "internal_commands.ab3"
0003D678 <internal_commands.ab3@2756> INCLUDE "internal_commands.ab3"
0003D67A <internal_commands.ab3@2757> INCLUDE "internal_commands.ab3"
0003D67E <internal_commands.ab3@2758> INCLUDE "internal_commands.ab3"
0003D67F <internal_commands.ab3@2759> INCLUDE "internal_commands.ab3"
0003D680 <internal_commands.ab3@2760> INCLUDE "internal_commands.ab3"
0003D684 <internal_commands.ab3@2763> INCLUDE "internal_commands.ab3"
0003D686 <internal_commands.ab3@2764> INCLUDE "internal_commands.ab3"
0003D68E <internal_commands.ab3@2765> INCLUDE "internal_commands.ab3"
0003D68F <internal_commands.ab3@2766> INCLUDE "internal_commands.ab3"
0003D690 <internal_commands.ab3@2767> INCLUDE "internal_commands.ab3"
0003D694 <internal_commands.ab3@2770> INCLUDE "internal_commands.ab3"
0003D696 <internal_commands.ab3@2771> INCLUDE "internal_commands.ab3"
0003D69E <internal_commands.ab3@2772> INCLUDE "internal_commands.ab3"
0003D6AE <internal_commands.ab3@2773> INCLUDE "internal_commands.ab3"
0003D6B2 <internal_commands.ab3@2777> INCLUDE "internal_commands.ab3"
0003D6B4 <internal_commands.ab3@2778> INCLUDE "internal_commands.ab3"
0003D6BD <internal_commands.ab3@2779> INCLUDE "internal_commands.ab3"
0003D6C5 <internal_commands.ab3@2780> INCLUDE "internal_commands.ab3"
0003D6C6 <internal_commands.ab3@2781> INCLUDE "internal_commands.ab3"
0003D6CA <internal_commands.ab3@2784> INCLUDE "internal_commands.ab3"
0003D6CC <internal_commands.ab3@2785> INCLUDE "internal_commands.ab3"
0003D6D4 <internal_commands.ab3@2786> INCLUDE "internal_commands.ab3"
0003D6DD <internal_commands.ab3@2787> INCLUDE "internal_commands.ab3"
0003D6DE <internal_commands.ab3@2788> INCLUDE "internal_commands.ab3"
0003D6E2 <internal_commands.ab3@2791> INCLUDE "internal_commands.ab3"
0003D6E4 <internal_commands.ab3@2792> INCLUDE "internal_commands.ab3"
0003D6EC <internal_commands.ab3@2793> INCLUDE "internal_commands.ab3"
0003D6ED <internal_commands.ab3@2794> INCLUDE "internal_commands.ab3"
0003D6EE <internal_commands.ab3@2795> INCLUDE "internal_commands.ab3"
0003D6F2 <internal_commands.ab3@2798> INCLUDE "internal_commands.ab3"
0003D6F4 <internal_commands.ab3@2799> INCLUDE "internal_commands.ab3"
0003D6FA <internal_commands.ab3@2800> INCLUDE "internal_commands.ab3"
0003D6FB <internal_commands.ab3@2801> INCLUDE "internal_commands.ab3"
0003D6FC <internal_commands.ab3@2802> INCLUDE "internal_commands.ab3"
0003D700 <internal_commands.ab3@2805> INCLUDE "internal_commands.ab3"
0003D702 <internal_commands.ab3@2806> INCLUDE "internal_commands.ab3"
0003D709 <internal_commands.ab3@2807> INCLUDE "internal_commands.ab3"
0003D70A <internal_commands.ab3@2808> INCLUDE "internal_commands.ab3"
0003D70E <internal_commands.ab3@2812> INCLUDE "internal_commands.ab3"
0003D710 <internal_commands.ab3@2813> INCLUDE "internal_commands.ab3"
0003D717 <internal_commands.ab3@2814> INCLUDE "internal_commands.ab3"
0003D718 <internal_commands.ab3@2815> INCLUDE "internal_commands.ab3"
0003D71C <internal_commands.ab3@2819> INCLUDE "internal_commands.ab3"
0003D71E <internal_commands.ab3@2820> INCLUDE "internal_commands.ab3"
0003D725 <internal_commands.ab3@2821> INCLUDE "internal_commands.ab3"
0003D726 <internal_commands.ab3@2822> INCLUDE "internal_commands.ab3"
0003D72A <internal_commands.ab3@2826> INCLUDE "internal_commands.ab3"
0003D72C <internal_commands.ab3@2827> INCLUDE "internal_commands.ab3"
0003D733 <internal_commands.ab3@2828> INCLUDE "internal_commands.ab3"
0003D734 <internal_commands.ab3@2829> INCLUDE "internal_commands.ab3"
0003D738 <internal_commands.ab3@2833> INCLUDE "internal_commands.ab3"
0003D73A <internal_commands.ab3@2834> INCLUDE "internal_commands.ab3"
0003D73F <internal_commands.ab3@2835> INCLUDE "internal_commands.ab3"
0003D755 <internal_commands.ab3@2836> INCLUDE "internal_commands.ab3"
0003D756 <internal_commands.ab3@2837> INCLUDE "internal_commands.ab3"
0003D75A <internal_commands.ab3@2840> INCLUDE "internal_commands.ab3"
0003D75C <internal_commands.ab3@2841> INCLUDE "internal_commands.ab3"
0003D766 <internal_commands.ab3@2842> INCLUDE "internal_commands.ab3"
0003D767 <internal_commands.ab3@2843> INCLUDE "internal_commands.ab3"
0003D768 <internal_commands.ab3@2844> INCLUDE "internal_commands.ab3"
0003D76C <internal_commands.ab3@2847> INCLUDE "internal_commands.ab3"
0003D76E <internal_commands.ab3@2848> INCLUDE "internal_commands.ab3"
0003D779 <internal_commands.ab3@2849> INCLUDE "internal_commands.ab3"
0003D77A <internal_commands.ab3@2850> INCLUDE "internal_commands.ab3"
0003D77E <internal_commands.ab3@2854> INCLUDE "internal_commands.ab3"
0003D780 <internal_commands.ab3@2855> INCLUDE "internal_commands.ab3"
0003D78C <internal_commands.ab3@2856> INCLUDE "internal_commands.ab3"
0003D7B9 <internal_commands.ab3@2857> INCLUDE "internal_commands.ab3"
0003D7BA <internal_commands.ab3@2858> INCLUDE "internal_commands.ab3"
0003D7BE <internal_commands.ab3@2861> INCLUDE "internal_commands.ab3"
0003D7C0 <internal_commands.ab3@2862> INCLUDE "internal_commands.ab3"
0003D7C8 <internal_commands.ab3@2863> INCLUDE "internal_commands.ab3"
0003D7FF <internal_commands.ab3@2864> INCLUDE "internal_commands.ab3"
0003D800 <internal_commands.ab3@2865> INCLUDE "internal_commands.ab3"
0003D804 <internal_commands.ab3@2868> INCLUDE "internal_commands.ab3"
0003D806 <internal_commands.ab3@2869> INCLUDE "internal_commands.ab3"
0003D80E <internal_commands.ab3@2870> INCLUDE "internal_commands.ab3"
0003D82D <internal_commands.ab3@2871> INCLUDE "internal_commands.ab3"
0003D82E <internal_commands.ab3@2872> INCLUDE "internal_commands.ab3"
0003D832 <internal_commands.ab3@2875> INCLUDE "internal_commands.ab3"
0003D834 <internal_commands.ab3@2876> INCLUDE "internal_commands.ab3"
0003D83B <internal_commands.ab3@2877> INCLUDE "internal_commands.ab3"
0003D871 <internal_commands.ab3@2878> INCLUDE "internal_commands.ab3"
0003D872 <internal_commands.ab3@2879> INCLUDE "internal_commands.ab3"
0003D876 <internal_commands.ab3@2882> INCLUDE "internal_commands.ab3"
0003D878 <internal_commands.ab3@2883> INCLUDE "internal_commands.ab3"
0003D881 <internal_commands.ab3@2884> INCLUDE "internal_commands.ab3"
0003D8B6 <internal_commands.ab3@2885> INCLUDE "internal_commands.ab3"
0003D8BA <internal_commands.ab3@2889> INCLUDE "internal_commands.ab3"
0003D8BC <internal_commands.ab3@2890> INCLUDE "internal_commands.ab3"
0003D8CC <internal_commands.ab3@2891> INCLUDE "internal_commands.ab3"
0003D903 <internal_commands.ab3@2892> INCLUDE "internal_commands.ab3"
0003D904 <internal_commands.ab3@2893> INCLUDE "internal_commands.ab3"
0003D904 <AmiBlitz3.ab3@30803> INCLUDE "internal_commands.ab3"
0003D908 <AmiBlitz3.ab3@30808>            Dc.l cif_lt                                     ;ciflt
0003D90C <AmiBlitz3.ab3@30809>            Dc.l cif_eq                                     ;cifeq
0003D910 <AmiBlitz3.ab3@30810>            Dc.l cif_gt                                     ;cifgt
0003D914 <AmiBlitz3.ab3@30811>            Ds.l 1                                          ;0
0003D918 <AmiBlitz3.ab3@30812>            Dc.l cif_le                                     ;cifle
0003D91C <AmiBlitz3.ab3@30813>            Dc.l cif_ne                                     ;cifne
0003D920 <AmiBlitz3.ab3@30814>            Dc.l cif_le                                     ;cifge
0003D924 <AmiBlitz3.ab3@30815>            Ds.l 1                                          ;0
0003D928 <AmiBlitz3.ab3@30816>            Dc.l cif_ge                                     ;cifge
0003D92C <AmiBlitz3.ab3@30817>            Dc.l cif_ne                                     ;cifne
0003D930 <AmiBlitz3.ab3@30818>            Dc.l cif_ge                                     ;cifge
0003D934 <AmiBlitz3.ab3@30819>            Ds.l 1                                          ;0
0003D938 <AmiBlitz3.ab3@30822>            Dc.l do_newtype                                 ;donewtype
0003D93C <AmiBlitz3.ab3@30823>            Dc.l do_end                                     ;doend
0003D940 <AmiBlitz3.ab3@30824>            Dc.l do_let                                     ;dolet
0003D944 <AmiBlitz3.ab3@30825>            Dc.l do_dim                                     ;dodim
0003D948 <AmiBlitz3.ab3@30826>            Dc.l do_goto                                    ;dogoto
0003D94C <AmiBlitz3.ab3@30827>            Dc.l do_gosub                                   ;dogosub
0003D950 <AmiBlitz3.ab3@30828>            Dc.l do_return                                  ;doreturn
0003D954 <AmiBlitz3.ab3@30829>            Dc.l do_statement                               ;dostate
0003D958 <AmiBlitz3.ab3@30830>            Dc.l do_function                                ;dofunc
0003D95C <AmiBlitz3.ab3@30831>            Dc.l do_mousewait                               ;domwait
0003D960 <AmiBlitz3.ab3@30832>            Dc.l do_if                                      ;doif
0003D964 <AmiBlitz3.ab3@30833>            Dc.l do_while                                   ;dowhile
0003D968 <AmiBlitz3.ab3@30834>            Dc.l do_Macro                                   ;domacro
0003D96C <AmiBlitz3.ab3@30835>            Dc.l do_select                                  ;doselect
0003D970 <AmiBlitz3.ab3@30836>            Dc.l do_case                                    ;docase
0003D974 <AmiBlitz3.ab3@30837>            Dc.l do_default                                 ;dodefault
0003D978 <AmiBlitz3.ab3@30838>            Dc.l do_AsmExit                                 ;doasmexit
0003D97C <AmiBlitz3.ab3@30839>            Dc.l do_xinclude                                ;doxinclude
0003D980 <AmiBlitz3.ab3@30840>            Dc.l do_INCLUDE                                 ;doinclude
0003D984 <AmiBlitz3.ab3@30841>            Dc.l do_syntax                                  ;syntaxerr
0003D988 <AmiBlitz3.ab3@30842>            Dc.l do_shared                                  ;doshared
0003D98C <AmiBlitz3.ab3@30843>            Dc.l do_for                                     ;dofor
0003D990 <AmiBlitz3.ab3@30844>            Dc.l do_next                                    ;donext
0003D994 <AmiBlitz3.ab3@30845>            Dc.l syntaxerr                                  ; To
0003D998 <AmiBlitz3.ab3@30846>            Dc.l syntaxerr                                  ; Step
0003D99C <AmiBlitz3.ab3@30847>            Dc.l do_data                                    ;dodata
0003D9A0 <AmiBlitz3.ab3@30848>            Dc.l do_read                                    ;doread
0003D9A4 <AmiBlitz3.ab3@30852>            Dc.l syntaxerr                                  ; CNIF
0003D9A8 <AmiBlitz3.ab3@30853>            Dc.l syntaxerr                                  ; CSIF
0003D9AC <AmiBlitz3.ab3@30854>            Dc.l syntaxerr                                  ; CELSE
0003D9B0 <AmiBlitz3.ab3@30855>            Dc.l syntaxerr                                  ; CEND
0003D9B4 <AmiBlitz3.ab3@30856>            Dc.l do_cerr                                    ;docerr
0003D9B8 <AmiBlitz3.ab3@30857>            Dc.l do_then                                    ;dothen
0003D9BC <AmiBlitz3.ab3@30858>            Dc.l do_else                                    ;doelse
0003D9C0 <AmiBlitz3.ab3@30859>            Dc.l do_even4                                   ;doeven4
0003D9C4 <AmiBlitz3.ab3@30860>            Dc.l do_even8                                   ;doeven8
0003D9C8 <AmiBlitz3.ab3@30862>            Dc.l do_dc                                      ;dodc
0003D9CC <AmiBlitz3.ab3@30863>            Dc.l do_ds                                      ;dods
0003D9D0 <AmiBlitz3.ab3@30864>            Dc.l do_even                                    ;doeven
0003D9D4 <AmiBlitz3.ab3@30865>            Dc.l do_dcb                                     ;dodcb
0003D9D8 <AmiBlitz3.ab3@30866>            Dc.l do_setreg                                  ;dosetreg
0003D9DC <AmiBlitz3.ab3@30867>            Dc.l do_IncBin                                  ;doincbin
0003D9E0 <AmiBlitz3.ab3@30868>            Dc.l do_free                                    ;dofree
0003D9E4 <AmiBlitz3.ab3@30869>            Dc.l do_use                                     ;douse
0003D9E8 <AmiBlitz3.ab3@30870>            Dc.l do_Stop                                    ;dostop
0003D9EC <AmiBlitz3.ab3@30871>            Dc.l do_Cont                                    ;docont
0003D9F0 <AmiBlitz3.ab3@30872>            Dc.l syntaxerr                                  ;syntaxeer
0003D9F4 <AmiBlitz3.ab3@30873>            Dc.l do_SetInt                                  ;dosetint
0003D9F8 <AmiBlitz3.ab3@30874>            Dc.l do_ClrInt                                  ;doclrint
0003D9FC <AmiBlitz3.ab3@30875>            Dc.l do_MaxLen                                  ;domaxlen
0003DA00 <AmiBlitz3.ab3@30876>            Dc.l do_DEFTYPE                                 ;dodeftype
0003DA04 <AmiBlitz3.ab3@30877>            Dc.l do_BLITZ                                   ;doblitz
0003DA08 <AmiBlitz3.ab3@30878>            Dc.l do_AMIGA                                   ;doamiga
0003DA0C <AmiBlitz3.ab3@30879>            Dc.l do_QAMIGA                                  ;doqamiga
0003DA10 <AmiBlitz3.ab3@30880>            Dc.l do_VWait                                   ;dovwait
0003DA14 <AmiBlitz3.ab3@30881>            Dc.l do_LibJsr                                  ;dolibjsr
0003DA18 <AmiBlitz3.ab3@30882>            Dc.l do_TokeJsr                                 ;dotokejsr
0003DA1C <AmiBlitz3.ab3@30883>            Dc.l do_BLibJsr                                 ;doblibjsr
0003DA20 <AmiBlitz3.ab3@30884>            Dc.l _extb                                      ;syntaxerr
0003DA24 <AmiBlitz3.ab3@30888>            Dc.l syntaxerr                                  ;syntaxerr      ;flash2 ; for list
0003DA28 <AmiBlitz3.ab3@30889>            Dc.l do_SetErr                                  ;doseterr
0003DA2C <AmiBlitz3.ab3@30890>            Dc.l do_ClrErr                                  ;doclrerr
0003DA30 <AmiBlitz3.ab3@30891>            Dc.l syntaxerr                                  ;syntaxerr
0003DA34 <AmiBlitz3.ab3@30892>            Dc.l do_ErrFail                                 ;doerrfail
0003DA38 <AmiBlitz3.ab3@30893>            Dc.l syntaxerr
0003DA3C <AmiBlitz3.ab3@30894>            Dc.l syntaxerr                                  ;mod
0003DA40 <AmiBlitz3.ab3@30895>            Dc.l syntaxerr                                  ;Pi
0003DA44 <AmiBlitz3.ab3@30896>            Dc.l do_Repeat                                  ;dorepeat
0003DA48 <AmiBlitz3.ab3@30897>            Dc.l do_Until                                   ;dountil
0003DA4C <AmiBlitz3.ab3@30898>            Dc.l do_PutReg                                  ;doputreg
0003DA50 <AmiBlitz3.ab3@30899>            Dc.l do_Pop                                     ;dopop
0003DA54 <AmiBlitz3.ab3@30900>            Dc.l do_INCDIR                                  ;doincdir
0003DA58 <AmiBlitz3.ab3@30901>            Dc.l mydo_Endif2                                ;mydoendif2
0003DA5C <AmiBlitz3.ab3@30902>            Dc.l do_Wend                                    ;dowend
0003DA60 <AmiBlitz3.ab3@30903>            Dc.l do_SysJsr                                  ;dosysjsr
0003DA64 <AmiBlitz3.ab3@30904>            Dc.l do_WBStartup                               ;dowbstartup
0003DA68 <AmiBlitz3.ab3@30905>            Dc.l syntaxerr
0003DA6C <AmiBlitz3.ab3@30906>            Dc.l do_Ongo                                    ;doongo
0003DA70 <AmiBlitz3.ab3@30907>            Dc.l syntaxerr
0003DA74 <AmiBlitz3.ab3@30908>            Dc.l do_Forever                                 ;doforever
0003DA78 <AmiBlitz3.ab3@30909>            Dc.l do_Restore                                 ;dorestore
0003DA7C <AmiBlitz3.ab3@30910>            Dc.l do_Exchange                                ;doexchange
0003DA80 <AmiBlitz3.ab3@30911>            Dc.l do_USEPATH                                 ;dousepath
0003DA84 <AmiBlitz3.ab3@30912>            Dc.l do_CloseEd                                 ;doclosed
0003DA88 <AmiBlitz3.ab3@30913>            Dc.l do_NoCli                                   ;donocli
0003DA8C <AmiBlitz3.ab3@30914>            Dc.l syntaxerr                                  ;syntaxerr
0003DA90 <AmiBlitz3.ab3@30915>            Dc.l syntaxerr                                  ;syntaxerr
0003DA94 <AmiBlitz3.ab3@30916>            Dc.l syntaxerr                                  ;syntaxerr
0003DA98 <AmiBlitz3.ab3@30917>            Dc.l syntaxerr                                  ;syntaxerr
0003DA9C <AmiBlitz3.ab3@30918>            Dc.l syntaxerr                                  ;syntaxerr
0003DAA0 <AmiBlitz3.ab3@30919>            Dc.l do_runerrson                               ;dorunerrson
0003DAA4 <AmiBlitz3.ab3@30920>            Dc.l do_runerrsoff                              ;dorunerrsoff
0003DAA8 <AmiBlitz3.ab3@30921>            Dc.l do_uselastpath
0003DAAC <AmiBlitz3.ab3@30922>            Dc.l do_regload
0003DAB0 <AmiBlitz3.ab3@30923>            Dc.l do_regsave
0003DAB4 <AmiBlitz3.ab3@30924>            Dc.l do_Object
0003DAB8 <AmiBlitz3.ab3@30925>            Dc.l do_usepath2
0003DABC <AmiBlitz3.ab3@30926>            Dc.l do_LastRunErrsMode
0003DAC0 <AmiBlitz3.ab3@30949> menu_items:Dc.l menu_compile_run                                ;menuadds oreg source
0003DAC4 <AmiBlitz3.ab3@30950>            Dc.l menu_run
0003DAC8 <AmiBlitz3.ab3@30951>            Dc.l menu_createexecutable
0003DACC <AmiBlitz3.ab3@30952>            Dc.l menu_dummyfunc                                  ;was menu_compileroptions
0003DAD0 <AmiBlitz3.ab3@30953>            Dc.l menu_createresidentfile
0003DAD4 <AmiBlitz3.ab3@30954> 
0003DAD8 <AmiBlitz3.ab3@30955> 
0003DADC <AmiBlitz3.ab3@30956>            Dc.l menu_dummyfunc                                  ;was menu_calculator
0003DAE0 <AmiBlitz3.ab3@30957>            Dc.l menu_reloadlibs
0003DAE4 <AmiBlitz3.ab3@30958>            Dc.l menu_loaddebugmodule
0003DAE8 <AmiBlitz3.ab3@30959>            Dc.l menu_dummyfunc
0003DAEC <AmiBlitz3.ab3@30960>            Dc.l menu_newcreate
0003DAF0 <AmiBlitz3.ab3@30961>            Dc.l menu_dummyfunc
0003DAF4 <AmiBlitz3.ab3@30962>            Dc.l menu_toggledebug
0003DAF8 <AmiBlitz3.ab3@30963> 
0003DAFC <AmiBlitz3.ab3@30964>            Dc.l menu_dummyfunc
0003DB26 <AmiBlitz3.ab3@30969>   !basic
0003DB88 <AmiBlitz3.ab3@30970>   error{!TRANS{"Invalid AmiBlitz3 menu item called!"} }
0003DBA6 <AmiBlitz3.ab3@30971>   !asm
0003DBA8 <AmiBlitz3.ab3@30972> RTS
0003DBA9 <AmiBlitz3.ab3@30978> set_autorun:               Dc.b $00
0003DBAE <AmiBlitz3.ab3@30979> autorun:                   Dc.b $80,$01,$01,$00,$01
0003DBAF <AmiBlitz3.ab3@30981> set_interruptcheck:        Dc.b $00
0003DBB4 <AmiBlitz3.ab3@30982> interruptcheck             Dc.b $80,$01,$01,$00,$01
0003DBB5 <AmiBlitz3.ab3@30984> set_assemblercheck:        Ds.b 1
0003DBBA <AmiBlitz3.ab3@30985> assemblercheck:            Dc.b $00,$01,$01,$00,$01
0003DBBB <AmiBlitz3.ab3@30987> set_overflowcheck:         Ds.b 1
0003DBC0 <AmiBlitz3.ab3@30988> overflowcheck:             Dc.b $00,$01,$01,$00,$01
0003DBC6 <AmiBlitz3.ab3@30990> default_obsolete:          Dc.b $00,$80,$01,$01,$00,$01
0003DBCC <AmiBlitz3.ab3@30991> default_interruptcheck:    Dc.b $00,$80,$01,$01,$00,$01
0003DBD2 <AmiBlitz3.ab3@30992> default_overflowcheck:     Dc.b $00,$80,$01,$01,$00,$01
0003DBD4 <AmiBlitz3.ab3@30993> Even4
0003DBE0 <AmiBlitz3.ab3@30996> tsthead:                   Dc.l $000003F3,$00000000,$00000001
0003DBE8 <AmiBlitz3.ab3@30997>                            Dc.l $00000000,$00000000
0003DBF0 <AmiBlitz3.ab3@30998> tstsize1:                  Dc.l $00000100,$000003E9
0003DBF4 <AmiBlitz3.ab3@30999> tstsize2:                  Dc.l $00000100
0003DBF8 <AmiBlitz3.ab3@31000> tstend:                    Dc.l $000003EC
0003DC00 <AmiBlitz3.ab3@31001> tstsize3:                  Ds.l 2
0003DC04 <AmiBlitz3.ab3@31002> tstdone:                   Dc.l $000003F2
0003DC08 <AmiBlitz3.ab3@31005> edstruct:                  Dc.l tokens                     ;data for ted
0003DC0C <AmiBlitz3.ab3@31009>                            Dc.l 0
0003DC10 <AmiBlitz3.ab3@31011>                            Dc.l read_xtrafile              ;load .xtra routine
0003DC14 <AmiBlitz3.ab3@31012>                            Dc.l write_xtrafile             ;save .xtra routine
0003DC18 <AmiBlitz3.ab3@31013>                            Dc.l call_menuentry             ;Menu Routine
0003DC1C <AmiBlitz3.ab3@31014>                            Ds.l 1                          ;cleanup (?)
0003DC20 <AmiBlitz3.ab3@31015>                            Dc.b ":",34,".;"
0003DD1C <AmiBlitz3.ab3@31018> 
0003DDFC <AmiBlitz3.ab3@31019>                            Ds.l 56
0003DDFE <AmiBlitz3.ab3@31024> lslimm:                    Dc.b $E1,$48                                             ;LSL.W   #8,D0
0003DE02 <AmiBlitz3.ab3@31027> use:                       Dc.b $26,$6D,$00,$00                                     ;MOVEA.L $0000(A5),A3
0003DE04 <AmiBlitz3.ab3@31028>                            Dc.b $D6,$C0                                             ;ADDA.W  D0,A3
0003DE08 <AmiBlitz3.ab3@31029>                            Dc.b $2B,$4B,$00,$00                                     ;MOVE.L  A3,$0000(A5)
0003DE0E <AmiBlitz3.ab3@31033> beginarr:                  Dc.b $20,$3C,$00,$00,$00,$00                             ;MOVE.L  #$00000000,D0
0003DE10 <AmiBlitz3.ab3@31037>                            Dc.b $C0,$C1                                             ;MULU.W  D1,D0
0003DE14 <AmiBlitz3.ab3@31040> putarr:                    Dc.b $2B,$40 :                            Dc.b $00,$00   ;MOVE.L  D0,$0000(A5)
0003DE18 <AmiBlitz3.ab3@31043> doarr:                     Dc.b $34,$3C,$00,$00                                     ;MOVE.W  #$0000,D2
0003DE1C <AmiBlitz3.ab3@31044>                            Dc.b $36,$3C,$00,$00                                     ;MOVE.W  #$0000,D3
0003DE1E <AmiBlitz3.ab3@31050>                            Dc.b $4A,$40                                             ;TST.W   D0
0003DE20 <AmiBlitz3.ab3@31054>                            Dc.b $4A,$80                                             ;TST.L   D0
0003DE22 <AmiBlitz3.ab3@31057> nops8:                     Dc.b $4E,$71                                             ;NOP
0003DE24 <AmiBlitz3.ab3@31058>                            Dc.b $4E,$71                                             ;NOP
0003DE26 <AmiBlitz3.ab3@31059>                            Dc.b $4E,$71                                             ;NOP
0003DE28 <AmiBlitz3.ab3@31060>                            Dc.b $4E,$71                                             ;NOP
0003DE2A <AmiBlitz3.ab3@31061> nops4:                     Dc.b $4E,$71                                             ;NOP
0003DE2C <AmiBlitz3.ab3@31063>                            Dc.b $4E,$71                                             ;NOP
0003DE2E <AmiBlitz3.ab3@31064>                            Dc.b $4E,$71                                             ;NOP
0003DE30 <AmiBlitz3.ab3@31065>                            Dc.b $4E,$71                                             ;NOP
0003DE34 <AmiBlitz3.ab3@31069> dataget:                   Dc.b $26,$6D :                            Dc.b $00,$00   ;MOVEA.L $0000(A5),A3
0003DE38 <AmiBlitz3.ab3@31072> dataput:                   Dc.b $2B,$4B :                            Dc.b $00,$00   ;MOVE.L  A3,$0000(A5)
0003DE3A <AmiBlitz3.ab3@31075> stlenget:                  Dc.b $2F,$1B                                             ;MOVE.L  (A3)+,-(A7)
0003DE3C <AmiBlitz3.ab3@31078> stalign:                   Dc.b $52,$4B                                             ;ADDQ.W  #1,A3
0003DE3E <AmiBlitz3.ab3@31079>                            Dc.b $C1,$8B                                             ;EXG D0,A3
0003DE42 <AmiBlitz3.ab3@31080>                            Dc.b $08,$80,$00,$00                                     ;BCLR    #0,D0
0003DE44 <AmiBlitz3.ab3@31081>                            Dc.b $C1,$8B                                             ;EXG D0,A3
0003DE46 <AmiBlitz3.ab3@31087> dataletb:                  Dc.b $52,$4B                                             ;ADDQ.W  #1,A3
0003DE4A <AmiBlitz3.ab3@31088>                            Dc.b $1B,$5B,$00,$00                                     ;MOVE.B  (A3)+,$0000(A5)
0003DE4C <AmiBlitz3.ab3@31093> dataletbl:                 Dc.b $52,$4B                                             ;ADDQ.W  #1,A3
0003DE50 <AmiBlitz3.ab3@31094>                            Dc.b $19,$5B,$00,$00                                     ;MOVE.B  (A3)+,$0000(A4)
0003DE52 <AmiBlitz3.ab3@31098> dataletb2:                 Dc.b $52,$4B                                             ;ADDQ.W  #1,A3
0003DE54 <AmiBlitz3.ab3@31099>                            Dc.b $14,$9B                                             ;MOVE.B  (A3)+,(A2)
0003DE58 <AmiBlitz3.ab3@31105> dataletw:                  Dc.b $3B,$5B,$00,$00                                     ;MOVE.W  (A3)+,$0000(A5)
0003DE5A <AmiBlitz3.ab3@31106>                            Dc.b $34,$9B                                             ;MOVE.W  (A3)+,(A2)
0003DE5E <AmiBlitz3.ab3@31107>                            Dc.b $39,$5B,$00,$00                                     ;MOVE.W  (A3)+,$0000(A4)
0003DE62 <AmiBlitz3.ab3@31111> dataletl:                  Dc.b $2B,$5B,$00,$00                                     ;MOVE.L  (A3)+,$0000(A5)
0003DE64 <AmiBlitz3.ab3@31112>                            Dc.b $24,$9B                                             ;MOVE.L  (A3)+,(A2)
0003DE68 <AmiBlitz3.ab3@31113>                            Dc.b $29,$5B,$00,$00                                     ;MOVE.L  (A3)+,$0000(A4)
0003DE6A <AmiBlitz3.ab3@31116> nextfixw:                  Dc.b $50,$4F                                             ;ADDQ.W  #8,A7
0003DE6E <AmiBlitz3.ab3@31119> nextfixw2:                 Dc.b $4F,$EF,$00,$0A                                     ;LEA $000A(A7),A7
0003DE72 <AmiBlitz3.ab3@31122> nextfixl:                  Dc.b $4F,$EF,$00,$0C                                     ;LEA $000C(A7),A7
0003DE76 <AmiBlitz3.ab3@31125> nextfixl2:                 Dc.b $4F,$EF,$00,$0E                                     ;LEA $000E(A7),A7
0003DE7A <AmiBlitz3.ab3@31129>                            Dc.b $24,$6F,$00,$04                                     ;MOVEA.L $0004(A7),A2
0003DE7C <AmiBlitz3.ab3@31130>                            Dc.b $30,$17                                             ;MOVE.W  (A7),D0
0003DE7E <AmiBlitz3.ab3@31131>                            Dc.b $D1,$12                                             ;ADD.B   D0,(A2)
0003DE82 <AmiBlitz3.ab3@31136>                            Dc.b $24,$6F,$00,$04                                     ;MOVEA.L $0004(A7),A2
0003DE84 <AmiBlitz3.ab3@31137>                            Dc.b $30,$17                                             ;MOVE.W  (A7),D0
0003DE86 <AmiBlitz3.ab3@31138>                            Dc.b $D1,$52                                             ;ADD.W   D0,(A2)
0003DE8A <AmiBlitz3.ab3@31143>                            Dc.b $24,$6F,$00,$08                                     ;MOVEA.L $0008(A7),A2
0003DE8C <AmiBlitz3.ab3@31144>                            Dc.b $20,$17                                             ;MOVE.L  (A7),D0
0003DE8E <AmiBlitz3.ab3@31145>                            Dc.b $D1,$92                                             ;ADD.L   D0,(A2)
0003DE92 <AmiBlitz3.ab3@31150>                            Dc.b $24,$6F,$00,$08                                     ;MOVEA.L $0008(A7),A2
0003DE94 <AmiBlitz3.ab3@31151>                            Dc.b $20,$12                                             ;MOVE.L  (A2),D0
0003DE96 <AmiBlitz3.ab3@31152>                            Dc.b $22,$17                                             ;MOVE.L  (A7),D1
0003DE9A <AmiBlitz3.ab3@31153>                            Dc.b $4E,$AE,$FF,$BE                                     ;JSR -$0042(A6)
0003DE9C <AmiBlitz3.ab3@31154>                            Dc.b $24,$80                                             ;MOVE.L  D0,(A2)
0003DEA0 <AmiBlitz3.ab3@31159>                            Dc.b $24,$6F,$00,$04                                     ;MOVEA.L $0004(A7),A2
0003DEA2 <AmiBlitz3.ab3@31160>                            Dc.b $10,$12                                             ;MOVE.B  (A2),D0
0003DEA6 <AmiBlitz3.ab3@31161>                            Dc.b $32,$2F,$00,$02                                     ;MOVE.W  $0002(A7),D1
0003DEA8 <AmiBlitz3.ab3@31162>                            Dc.b $4A,$57                                             ;TST.W   (A7)
0003DEAC <AmiBlitz3.ab3@31163>                            Dc.b $6A,$00,$00,$04                                     ;BPL.W   L000001         ;.skip org source
0003DEAE <AmiBlitz3.ab3@31164>                            Dc.b $C1,$41                                             ;EXG D0,D1
0003DEB0 <AmiBlitz3.ab3@31167>                            Dc.b $B0,$01                                             ;CMP.B   D1,D0
0003DEB4 <AmiBlitz3.ab3@31172>                            Dc.b $24,$6F,$00,$04                                     ;MOVEA.L $0004(A7),A2
0003DEB6 <AmiBlitz3.ab3@31173>                            Dc.b $30,$12                                             ;MOVE.W  (A2),D0
0003DEBA <AmiBlitz3.ab3@31174>                            Dc.b $32,$2F,$00,$02                                     ;MOVE.W  $0002(A7),D1
0003DEBC <AmiBlitz3.ab3@31175>                            Dc.b $4A,$57                                             ;TST.W   (A7)
0003DEC0 <AmiBlitz3.ab3@31176>                            Dc.b $6A,$00,$00,$04                                     ;BPL.W   L000002         ;.skip org source
0003DEC2 <AmiBlitz3.ab3@31177>                            Dc.b $C1,$41                                             ;EXG D0,D1
0003DEC4 <AmiBlitz3.ab3@31180>                            Dc.b $B0,$41                                             ;CMP.W   D1,D0
0003DEC8 <AmiBlitz3.ab3@31185>                            Dc.b $24,$6F,$00,$08                                     ;MOVEA.L $0008(A7),A2
0003DECA <AmiBlitz3.ab3@31186>                            Dc.b $20,$12                                             ;MOVE.L  (A2),D0
0003DECE <AmiBlitz3.ab3@31187>                            Dc.b $22,$2F,$00,$04                                     ;MOVE.L  $0004(A7),D1
0003DED0 <AmiBlitz3.ab3@31188>                            Dc.b $4A,$57                                             ;TST.W   (A7)
0003DED4 <AmiBlitz3.ab3@31189>                            Dc.b $6A,$00,$00,$04                                     ;BPL.W   L000003         ;.skip org source
0003DED6 <AmiBlitz3.ab3@31190>                            Dc.b $C1,$41                                             ;EXG D0,D1
0003DED8 <AmiBlitz3.ab3@31193>                            Dc.b $B0,$81                                             ;CMP.L   D1,D0
0003DEDC <AmiBlitz3.ab3@31198>                            Dc.b $24,$6F,$00,$08                                     ;MOVEA.L $0008(A7),A2
0003DEDE <AmiBlitz3.ab3@31199>                            Dc.b $20,$12                                             ;MOVE.L  (A2),D0
0003DEE2 <AmiBlitz3.ab3@31200>                            Dc.b $22,$2F,$00,$04                                     ;MOVE.L  $0004(A7),D1
0003DEE8 <AmiBlitz3.ab3@31201>                            Dc.b $08,$2F,$00,$07,$00,$03                             ;BTST    #7,$0003(A7)
0003DEEC <AmiBlitz3.ab3@31202>                            Dc.b $67,$00,$00,$04                                     ;BEQ.W   L000004
0003DEEE <AmiBlitz3.ab3@31203>                            Dc.b $C1,$41                                             ;EXG D0,D1
0003DEF2 <AmiBlitz3.ab3@31210>                            Dc.b $4E,$AE,$FF,$D6                                     ;JSR -$002A(A6)
0003DEF4 <AmiBlitz3.ab3@31214> swapd0:                    Dc.b $48,$40                                             ;SWAP    D0
0003DEF6 <AmiBlitz3.ab3@31217> pushindex:                 Dc.b $2F,$0A                                             ;MOVE.L  A2,-(A7)
0003DEFA <AmiBlitz3.ab3@31220> leaamp:                    Dc.b $45,$ED :                            Dc.b $00,$00   ;LEA $0000(A5),A2
0003DEFC <AmiBlitz3.ab3@31221> leaamp2:                   Dc.b $20,$0A                                             ;MOVE.L  A2,D0
0003DF00 <AmiBlitz3.ab3@31224> leaampl:                   Dc.b $45,$EC :                            Dc.b $00,$00   ;LEA $0000(A4),A2
0003DF02 <AmiBlitz3.ab3@31227> stamp:                     Dc.b $20,$12                                             ;MOVE.L  (A2),D0
0003DF06 <AmiBlitz3.ab3@31230> stamp2:                    Dc.b $24,$6D :                            Dc.b $00,$00   ;MOVEA.L $0000(A5),A2
0003DF08 <AmiBlitz3.ab3@31234>                            Dc.b $58,$4F                                             ;ADDQ.W  #4,A7
0003DF0A <AmiBlitz3.ab3@31237> pushd0wd:                  Dc.b $3F,$00                                             ;MOVE.W  D0,-(A7)
0003DF0C <AmiBlitz3.ab3@31240> pushd0l:                   Dc.b $2F,$00                                             ;MOVE.L  D0,-(A7)
0003DF10 <AmiBlitz3.ab3@31243> movenumrep:                Dc.b $3E,$3C :                            Dc.b $00,$00   ;MOVE.W  #$0000,D7
0003DF14 <AmiBlitz3.ab3@31246> preplibst:                 Dc.b $45,$EF :                            Dc.b $00,$00   ;LEA $0000(A7),A2
0003DF18 <AmiBlitz3.ab3@31249> fixlibst:                  Dc.b $4F,$EF :                            Dc.b $00,$00   ;LEA $0000(A7),A7
0003DF1A <AmiBlitz3.ab3@31252> pushdn:                    Dc.b $2F,$00                                             ;MOVE.L  D0,-(A7)
0003DF1C <AmiBlitz3.ab3@31255> movea3a7:                  Dc.b $2F,$0B                                             ;MOVE.L  A3,-(A7)
0003DF20 <AmiBlitz3.ab3@31258> movestst2:                 Dc.b $20,$2F :                            Dc.b $00,$06   ;MOVE.L  $0006(A7),D0
0003DF26 <AmiBlitz3.ab3@31259>                            Dc.b $3F,$6F,$00,$04,$00,$08                             ;MOVE.W  $0004(A7),$0008(A7)
0003DF28 <AmiBlitz3.ab3@31260>                            Dc.b $2E,$9F                                             ;MOVE.L  (A7)+,(A7)
0003DF2C <AmiBlitz3.ab3@31264> movea7dn:                  Dc.b $20,$2F :                            Dc.b $00,$04   ;MOVE.L  $0004(A7),D0
0003DF2E <AmiBlitz3.ab3@31265>                            Dc.b $2E,$9F                                             ;MOVE.L  (A7)+,(A7)
0003DF30 <AmiBlitz3.ab3@31269> moved0a3:                  Dc.b $26,$40                                             ;MOVEA.L D0,A3
0003DF34 <AmiBlitz3.ab3@31272> movestdn:                  Dc.b $20,$2D :                            Dc.b $00,$00   ;MOVE.L  $0000(A5),D0
0003DF36 <AmiBlitz3.ab3@31276>                            Dc.b $20,$0B                                             ;MOVE.L  A3,D0
0003DF38 <AmiBlitz3.ab3@31280>                            Dc.b $2F,$00                                             ;MOVE.L  D0,-(A7)
0003DF3A <AmiBlitz3.ab3@31284>                            Dc.b $20,$1F                                             ;MOVE.L  (A7)+,D0
0003DF3E <AmiBlitz3.ab3@31287> moverts:                   Dc.b $2F,$57 :                            Dc.b $00,$00   ;MOVE.L  (A7),$0000(A7)
0003DF42 <AmiBlitz3.ab3@31290> fixstack:                  Dc.b $4F,$EF :                            Dc.b $00,$00   ;LEA $0000(A7),A7
0003DF44 <AmiBlitz3.ab3@31293> fixq:                      Dc.b $50,$4F                                             ;ADDQ.W  #8,A7
0003DF46 <AmiBlitz3.ab3@31296> fix1:                      Dc.b $2E,$9F                                             ;MOVE.L  (A7)+,(A7)
0003DF48 <AmiBlitz3.ab3@31299> movedna3:                  Dc.b $26,$40                                             ;MOVEA.L D0,A3
0003DF4C <AmiBlitz3.ab3@31302> least:                     Dc.b $45,$EC :                            Dc.b $00,$00   ;LEA $0000(A4),A2
0003DF50 <AmiBlitz3.ab3@31305> funcst:                    Dc.b $2F,$2C :                            Dc.b $00,$00   ;MOVE.L  $0000(A4),-(A7)
0003DF52 <AmiBlitz3.ab3@31308> addq4a2:                   Dc.b $58,$4A                                             ;ADDQ.W  #4,A2
0003DF54 <AmiBlitz3.ab3@31312>                            Dc.b $2F,$0B                                             ;MOVE.L  A3,-(A7)
0003DF58 <AmiBlitz3.ab3@31315>                            Dc.b $2B,$4B,$00,$00                                     ;MOVE.L  A3,$0000(A5)
0003DF5A <AmiBlitz3.ab3@31321>                            Dc.b $26,$5F                                             ;MOVEA.L (A7)+,A3
0003DF5E <AmiBlitz3.ab3@31324>                            Dc.b $2B,$4B,$00,$00                                     ;MOVE.L  A3,$0000(A5)
0003DF60 <AmiBlitz3.ab3@31330>                            Dc.b $CB,$4C                                             ;EXG A5,A4
0003DF64 <AmiBlitz3.ab3@31334> linksize:                  Dc.b $4E,$54 :                            Dc.b $00,$00   ;LINK    A4,#-$0000
0003DF66 <AmiBlitz3.ab3@31337> unlinka4:                  Dc.b $4E,$5C                                             ;UNLK    A4
0003DF68 <AmiBlitz3.ab3@31341>                            Dc.b $2F,$0A                                             ;MOVE.L  A2,-(A7)
0003DF6A <AmiBlitz3.ab3@31345>                            Dc.b $24,$5F                                             ;MOVEA.L (A7)+,A2
0003DF70 <AmiBlitz3.ab3@31348> gotocode:                  Dc.b $4E,$F9,$00,$00,$00,$00                             ;JMP $00000000
0003DF76 <AmiBlitz3.ab3@31351> gosubcode:                 Dc.b $4E,$B9,$00,$00,$00,$00                             ;JSR $00000000
0003DF7E <AmiBlitz3.ab3@31355> mwait:                     Dc.b $08,$39,$00,$06,$00,$BF,$E0,$01                     ;BTST    #6,$00BFE001
0003DF82 <AmiBlitz3.ab3@31356>                            Dc.b $66,$00,$FF,$F6                                     ;BNE.W   L000005       ;mwait: org source
0003DF84 <AmiBlitz3.ab3@31360> libreg:                    Dc.b $20,$00                                             ;MOVE.L  D0,D0
0003DF88 <AmiBlitz3.ab3@31363> libbase:                   Dc.b $2C,$6D :                            Dc.b $00,$00   ;MOVEA.L $0000(A5),A6
0003DF8C <AmiBlitz3.ab3@31366> libjsr:                    Dc.b $4E,$AE :                            Dc.b $00,$00   ;JSR $0000(A6)
0003DF90 <AmiBlitz3.ab3@31369> regtransd:                 Dc.b $20,$2D,$00,$00                                     ;MOVE.L  $0000(A5),D0
0003DF94 <AmiBlitz3.ab3@31370> regtransa:                 Dc.b $20,$6D,$00,$00                                     ;MOVEA.L $0000(A5),A0
0003DF98 <AmiBlitz3.ab3@31374>                            Dc.b $26,$7C,$00,$00                                     ;MOVEA.L #$00000000,A3
0003DF9C <AmiBlitz3.ab3@31376>                            Dc.l $3F1B                                               ;MOVE.W  (A3)+,-(A7)
0003DF9E <AmiBlitz3.ab3@31379> movea2dn:                  Dc.b $20,$12                                             ;MOVE.L  (A2),D0
0003DFA2 <AmiBlitz3.ab3@31382> moved3a5dn:                Dc.b $20,$2D,$00,$00                                     ;MOVE.L  $0000(A5),D0
0003DFA4 <AmiBlitz3.ab3@31385> stvarget2:                 Dc.b $70,$00                                             ;MOVEQ   #$00,D0
0003DFA6 <AmiBlitz3.ab3@31386>                            Dc.b $2F,$00                                             ;MOVE.L  D0,-(A7)
0003DFA8 <AmiBlitz3.ab3@31387>                            Dc.b $4A,$92                                             ;TST.L   (A2)
0003DFAC <AmiBlitz3.ab3@31388> 
0003DFAE <AmiBlitz3.ab3@31389>                            Dc.b $20,$52                                             ;MOVEA.L (A2),A0
0003DFB0 <AmiBlitz3.ab3@31390>                            Dc.b $59,$48                                             ;SUBQ.W  #4,A0
0003DFB2 <AmiBlitz3.ab3@31391>                            Dc.b $2E,$98                                             ;MOVE.L  (A0)+,(A7)
0003DFB8 <AmiBlitz3.ab3@31393>                            Dc.b $4E,$B9,$00,$00,$00,$00                             ;JSR $00000000
0003DFBA <AmiBlitz3.ab3@31398> addcode:                   Dc.b $20,$1F                                             ;MOVE.L  (A7)+,D0
0003DFBC <AmiBlitz3.ab3@31399>                            Dc.b $D1,$97                                             ;ADD.L   D0,(A7)
0003DFBE <AmiBlitz3.ab3@31403> pushlen:                   Dc.b $2F,$18                                             ;MOVE.L  (A0)+,-(A7)
0003DFC2 <AmiBlitz3.ab3@31406> leaa5d3a2:                 Dc.b $45,$ED :                            Dc.b $00,$00   ;LEA $0000(A5),A2
0003DFC4 <AmiBlitz3.ab3@31409> pusha2:                    Dc.b $2F,$0A                                             ;MOVE.L  A2,-(A7)
0003DFC6 <AmiBlitz3.ab3@31413>                            Dc.b $24,$57                                             ;MOVEA.L (A7),A2
0003DFC8 <AmiBlitz3.ab3@31416> pulla2:                    Dc.b $24,$5F                                             ;MOVEA.L (A7)+,A2
0003DFCC <AmiBlitz3.ab3@31419> pulla2st:                  Dc.b $24,$6F,$00,$04                                     ;MOVEA.L $0004(A7),A2
0003DFCE <AmiBlitz3.ab3@31420>                            Dc.b $2E,$9F                                             ;MOVE.L  (A7)+,(A7)
0003DFD2 <AmiBlitz3.ab3@31424> pusha3:                    Dc.b $2F,$2D :                            Dc.b $00,$00   ;MOVE.L  $0000(A5),-(A7)
0003DFD6 <AmiBlitz3.ab3@31425> pusha32:                   Dc.b $2B,$4B :                            Dc.b $00,$00   ;MOVE.L  A3,$0000(A5)
0003DFDA <AmiBlitz3.ab3@31429> pulla3:                    Dc.b $2B,$5F :                            Dc.b $00,$00   ;MOVE.L  (A7)+,$0000(A5)
0003DFDE <AmiBlitz3.ab3@31433> geta3:                     Dc.b $26,$6D :                            Dc.b $00,$00   ;MOVEA.L $0000(A5),A3
0003DFE4 <AmiBlitz3.ab3@31437> numtoa0:                   Dc.b $20,$7C,$00,$00,$00,$00                             ;MOVEA.L #$00000000,A0
0003DFEA <AmiBlitz3.ab3@31440> numtoa2:                   Dc.b $24,$7C,$00,$00,$00,$00                             ;MOVEA.L #$00000000,A2
0003DFEE <AmiBlitz3.ab3@31444> endarray:                  Dc.b $38,$3C :                            Dc.b $00,$00   ;MOVE.W  #$0000,D4
0003DFF2 <AmiBlitz3.ab3@31448>                            Dc.b $34,$3C,$00,$00                                     ;MOVE.W  #$0000,D2
0003DFF6 <AmiBlitz3.ab3@31449>                            Dc.b $36,$3C,$00,$00                                     ;MOVE.W  #$0000,D3
0003DFFC <AmiBlitz3.ab3@31454>                            Dc.b $20,$3C,$00,$00,$00,$04                             ;MOVE.L  #$00000004,D0
0003E000 <AmiBlitz3.ab3@31459>                            Dc.b $2B,$40,$00,$00                                     ;MOVE.L  D0,$0000(A5)
0003E002 <AmiBlitz3.ab3@31464>                            Dc.b $C0,$C1                                             ;MULU.W  D1,D0
0003E006 <AmiBlitz3.ab3@31468>                            Dc.b $2B,$40,$00,$00                                     ;MOVE.L  D0,$0000(A5)
0003E008 <AmiBlitz3.ab3@31472> movea0:                    Dc.b $24,$52                                             ;MOVEA.L (A2),A2
0003E00A <AmiBlitz3.ab3@31475> adda0a0:                   Dc.b $D5,$CA                                             ;ADDA.L  A2,A2
0003E00C <AmiBlitz3.ab3@31476>                            Dc.b $D5,$CA                                             ;ADDA.L  A2,A2
0003E010 <AmiBlitz3.ab3@31480>                            Dc.b $2C,$78,$00,$04                                     ;MOVEA.L $0004,A6
0003E014 <AmiBlitz3.ab3@31484> movea5a0:                  Dc.b $24,$6D :                            Dc.b $00,$00   ;MOVEA.L $0000(A5),A2
0003E018 <AmiBlitz3.ab3@31487> movea0a0:                  Dc.b $24,$6A :                            Dc.b $00,$00   ;MOVEA.L $0000(A2),A2
0003E01A <AmiBlitz3.ab3@31490> addqa0:                    Dc.b $52,$4A                                             ;ADDQ.W  #1,A2
0003E01E <AmiBlitz3.ab3@31493> leaa0a0:                   Dc.b $45,$EA :                            Dc.b $00,$00   ;LEA $0000(A2),A2
0003E020 <AmiBlitz3.ab3@31496> addrega2:                  Dc.b $D4,$C0                                             ;ADDA.W  D0,A2
0003E029 <AmiBlitz3.ab3@31500>                            Dc.b "ram:test",0
0003E02A <AmiBlitz3.ab3@31501> Even
0003E02E <AmiBlitz3.ab3@31505>                            Dc.l  0                          ;was  Ds.w 3 org source
0003E030 <AmiBlitz3.ab3@31507>                            Dc.w  0
0003E034 <AmiBlitz3.ab3@31510> _mathffpbase:              Ds.l 1                           ;maths org source
0003E036 <AmiBlitz3.ab3@31511> regnum:                    Ds.w 1                           ;regat org source       ;register being used!
0003E038 <AmiBlitz3.ab3@31512> typelen:                   Ds.w 1
0003E03C <AmiBlitz3.ab3@31513> prevtype:                  Ds.l 1
0003E040 <AmiBlitz3.ab3@31514> lastsourcepos:             Ds.l 1                           ;prevloc org source
0003E042 <AmiBlitz3.ab3@31515> lastchar:                  Ds.w 1
0003E046 <AmiBlitz3.ab3@31516> thistype:                  Ds.l 1
0003E04A <AmiBlitz3.ab3@31517> errstack:                  Ds.l 1
0003E04E <AmiBlitz3.ab3@31518> errcont:                   Ds.l 1
0003E050 <AmiBlitz3.ab3@31519> linemode:                  Ds.w 1                          ;0 if norm, 1 if newtype
0003E052 <AmiBlitz3.ab3@31520> linesleft:                 Ds.w 1
0003E056 <AmiBlitz3.ab3@31521> sourceline:                Ds.l 1                          ;thisitem org source
0003E05A <AmiBlitz3.ab3@31522> varbase:                   Ds.l 1                          ;firstvar org source
0003E05E <AmiBlitz3.ab3@31523> alllocals:                 Ds.l 1
0003E062 <AmiBlitz3.ab3@31524> firstlocal:                Ds.l 1
0003E066 <AmiBlitz3.ab3@31525> firstglob:                 Ds.l 1
0003E068 <AmiBlitz3.ab3@31526> globalvarpointer:          Ds.w 1                          ;varoff org source
0003E06A <AmiBlitz3.ab3@31527> locvaroff:                 Ds.w 1
0003E06E <AmiBlitz3.ab3@31528> firstitem_:                 Ds.l 1
0003E070 <AmiBlitz3.ab3@31529> numlines_org:              Ds.w 1                          ;numlines org source
0003E072 <AmiBlitz3.ab3@31530> returncode_org:            Ds.w 1                          ;returncode org source
0003E076 <AmiBlitz3.ab3@31531> firstiff:                  Ds.l 1                          ;firstif org source
0003E07A <AmiBlitz3.ab3@31532> ptr_seg_ped:               Ds.l 1                          ;segadd org source
0003E27A <AmiBlitz3.ab3@31533> str_pedfile:               Ds.b #MAX_STRINGSIZE            ;segname org source
0003E28A <AmiBlitz3.ab3@31534> str_mathffpname:           Dc.b "mathffp.library",0 : Even ;mathsname org source
0003E48A <AmiBlitz3.ab3@31535> str_libfilename:           Ds.b #MAX_STRINGSIZE
0003E68A <AmiBlitz3.ab3@31536> str_path_userlibs:         Ds.b #MAX_STRINGSIZE
0003E88A <AmiBlitz3.ab3@31537> str_defaultdbug:           Ds.b #MAX_STRINGSIZE            ;debugname org source
0003E88E <AmiBlitz3.ab3@31539> ptr_seg_debugger:          Ds.l 1                          ;dseg org source
0003EA8E <AmiBlitz3.ab3@31540> str_blitz3assign:          Ds.b #MAX_STRINGSIZE            ;dpath org source
0003EC8E <AmiBlitz3.ab3@31542> str_path_acidlibs:         Ds.b #MAX_STRINGSIZE            ;acidname org source
0003EC92 <AmiBlitz3.ab3@31543> size_acidlibs:             Ds.l 1                          ;acidlibs org source
0003EE92 <AmiBlitz3.ab3@31544> str_path_deflibs:          Ds.b #MAX_STRINGSIZE            ;defname org source
0003EE96 <AmiBlitz3.ab3@31545> size_deflibs:              Ds.l 1                          ;deflibs org source
0003F096 <AmiBlitz3.ab3@31546> str_tempfilename:          Ds.b #MAX_STRINGSIZE
0003F296 <AmiBlitz3.ab3@31548> str_temp_debugmodulename:  Ds.b #MAX_STRINGSIZE            ;dname org source
0003F29A <AmiBlitz3.ab3@31549> ptr_temp_debugmodule:      Ds.l 1                          ;dname2 org source
0003F49A <AmiBlitz3.ab3@31551> str_path_includes:         Ds.b #MAX_STRINGSIZE            ;acidname org source
0003F49E <AmiBlitz3.ab3@31557>   Dc.b $E3,$10,$00,$01                                     ;icondata  
0003F4A2 <AmiBlitz3.ab3@31558>   Dc.b $00,$00,$00,$00
0003F4A6 <AmiBlitz3.ab3@31559>   Dc.b $00,$19,$00,$11
0003F4AA <AmiBlitz3.ab3@31560>   Dc.b $00,$2E,$00,$18
0003F4AE <AmiBlitz3.ab3@31561>   Dc.b $00,$04,$00,$03
0003F4B2 <AmiBlitz3.ab3@31562>   Dc.b $00,$01,$00,$22
0003F4B6 <AmiBlitz3.ab3@31563>   Dc.b $73,$68,$00,$00
0003F4BA <AmiBlitz3.ab3@31564>   Dc.b $00,$00,$00,$00
0003F4BE <AmiBlitz3.ab3@31565>   Dc.b $00,$00,$00,$00
0003F4C2 <AmiBlitz3.ab3@31566>   Dc.b $00,$00,$00,$00
0003F4C6 <AmiBlitz3.ab3@31567>   Dc.b $00,$00,$00,$00
0003F4CA <AmiBlitz3.ab3@31568>   Dc.b $00,$00,$00,$00
0003F4CE <AmiBlitz3.ab3@31569>   Dc.b $03,$22,$00,$21
0003F4D2 <AmiBlitz3.ab3@31570>   Dc.b $3C,$28,$00,$22
0003F4D6 <AmiBlitz3.ab3@31571>   Dc.b $6E,$C0,$00,$00
0003F4DA <AmiBlitz3.ab3@31572>   Dc.b $00,$12,$00,$00
0003F4DE <AmiBlitz3.ab3@31573>   Dc.b $00,$0E,$00,$00
0003F4E2 <AmiBlitz3.ab3@31574>   Dc.b $00,$00,$00,$00
0003F4E6 <AmiBlitz3.ab3@31575>   Dc.b $00,$00,$00,$00
0003F4EA <AmiBlitz3.ab3@31576>   Dc.b $00,$00,$00,$00
0003F4EE <AmiBlitz3.ab3@31577>   Dc.b $00,$00,$00,$2E
0003F4F2 <AmiBlitz3.ab3@31578>   Dc.b $00,$17,$00,$02
0003F4F6 <AmiBlitz3.ab3@31579>   Dc.b $00,$01,$8E,$80
0003F4FA <AmiBlitz3.ab3@31580>   Dc.b $03,$00,$00,$00
0003F4FE <AmiBlitz3.ab3@31581>   Dc.b $00,$00,$FF,$FF
0003F502 <AmiBlitz3.ab3@31582>   Dc.b $FF,$FF,$FF,$FC
0003F506 <AmiBlitz3.ab3@31583>   Dc.b $80,$00,$00,$00
0003F50A <AmiBlitz3.ab3@31584>   Dc.b $00,$00,$80,$00
0003F50E <AmiBlitz3.ab3@31585>   Dc.b $00,$3F,$BB,$40
0003F512 <AmiBlitz3.ab3@31586>   Dc.b $80,$1F,$C0,$00
0003F516 <AmiBlitz3.ab3@31587>   Dc.b $00,$00,$80,$3F
0003F51A <AmiBlitz3.ab3@31588>   Dc.b $C0,$0F,$BB,$40
0003F51E <AmiBlitz3.ab3@31589>   Dc.b $80,$1F,$C0,$00
0003F522 <AmiBlitz3.ab3@31590>   Dc.b $00,$00,$8E,$00
0003F526 <AmiBlitz3.ab3@31591>   Dc.b $F8,$00,$00,$00
0003F52A <AmiBlitz3.ab3@31592>   Dc.b $8F,$01,$FF,$00
0003F52E <AmiBlitz3.ab3@31593>   Dc.b $3B,$40,$81,$E3
0003F532 <AmiBlitz3.ab3@31594>   Dc.b $F7,$C0,$00,$00
0003F536 <AmiBlitz3.ab3@31595>   Dc.b $80,$7F,$F8,$70
0003F53A <AmiBlitz3.ab3@31596>   Dc.b $3B,$40,$80,$0F
0003F53E <AmiBlitz3.ab3@31597>   Dc.b $7C,$E0,$00,$00
0003F542 <AmiBlitz3.ab3@31598>   Dc.b $80,$00,$FD,$80
0003F546 <AmiBlitz3.ab3@31599>   Dc.b $00,$00,$80,$01
0003F54A <AmiBlitz3.ab3@31600>   Dc.b $F6,$00,$FB,$40
0003F54E <AmiBlitz3.ab3@31601>   Dc.b $80,$03,$EF,$00
0003F552 <AmiBlitz3.ab3@31602>   Dc.b $00,$00,$80,$07
0003F556 <AmiBlitz3.ab3@31603>   Dc.b $87,$80,$3B,$40
0003F55A <AmiBlitz3.ab3@31604>   Dc.b $80,$0F,$01,$C0
0003F55E <AmiBlitz3.ab3@31605>   Dc.b $00,$00,$80,$03
0003F562 <AmiBlitz3.ab3@31606>   Dc.b $F0,$70,$1D,$40
0003F566 <AmiBlitz3.ab3@31607>   Dc.b $80,$00,$18,$1C
0003F56A <AmiBlitz3.ab3@31608>   Dc.b $00,$00,$80,$00
0003F56E <AmiBlitz3.ab3@31609>   Dc.b $10,$06,$03,$40
0003F572 <AmiBlitz3.ab3@31610>   Dc.b $80,$00,$20,$1F
0003F576 <AmiBlitz3.ab3@31611>   Dc.b $00,$00,$80,$00
0003F57A <AmiBlitz3.ab3@31612>   Dc.b $00,$00,$01,$40
0003F57E <AmiBlitz3.ab3@31613>   Dc.b $80,$00,$00,$00
0003F582 <AmiBlitz3.ab3@31614>   Dc.b $00,$00,$80,$00
0003F586 <AmiBlitz3.ab3@31615>   Dc.b $00,$00,$00,$00
0003F58A <AmiBlitz3.ab3@31616>   Dc.b $00,$00,$00,$00
0003F58E <AmiBlitz3.ab3@31617>   Dc.b $00,$00,$00,$00
0003F592 <AmiBlitz3.ab3@31618>   Dc.b $00,$00,$00,$04
0003F596 <AmiBlitz3.ab3@31619>   Dc.b $00,$3F,$FC,$01
0003F59A <AmiBlitz3.ab3@31620>   Dc.b $BB,$44,$00,$60
0003F59E <AmiBlitz3.ab3@31621>   Dc.b $FE,$00,$00,$04
0003F5A2 <AmiBlitz3.ab3@31622>   Dc.b $00,$CF,$FF,$01
0003F5A6 <AmiBlitz3.ab3@31623>   Dc.b $BB,$44,$1F,$EF
0003F5AA <AmiBlitz3.ab3@31624>   Dc.b $FF,$00,$00,$04
0003F5AE <AmiBlitz3.ab3@31625>   Dc.b $33,$FF,$FF,$E0
0003F5B2 <AmiBlitz3.ab3@31626>   Dc.b $00,$04,$37,$FE
0003F5B6 <AmiBlitz3.ab3@31627>   Dc.b $7F,$FC,$1B,$44
0003F5BA <AmiBlitz3.ab3@31628>   Dc.b $0F,$9C,$FF,$FF
0003F5BE <AmiBlitz3.ab3@31629>   Dc.b $00,$04,$03,$E3
0003F5C2 <AmiBlitz3.ab3@31630>   Dc.b $FF,$FF,$DB,$44
0003F5C6 <AmiBlitz3.ab3@31631>   Dc.b $00,$7F,$BF,$FF
0003F5CA <AmiBlitz3.ab3@31632>   Dc.b $80,$04,$00,$0F
0003F5CE <AmiBlitz3.ab3@31633>   Dc.b $3F,$FE,$00,$04
0003F5D2 <AmiBlitz3.ab3@31634>   Dc.b $00,$06,$7F,$F8
0003F5D6 <AmiBlitz3.ab3@31635>   Dc.b $1B,$44,$00,$0C
0003F5DA <AmiBlitz3.ab3@31636>   Dc.b $F7,$FC,$00,$04
0003F5DE <AmiBlitz3.ab3@31637>   Dc.b $00,$19,$F9,$FE
0003F5E2 <AmiBlitz3.ab3@31638>   Dc.b $1B,$44,$00,$33
0003F5E6 <AmiBlitz3.ab3@31639>   Dc.b $FE,$7F,$00,$04
0003F5EA <AmiBlitz3.ab3@31640>   Dc.b $00,$0F,$FF,$BF
0003F5EE <AmiBlitz3.ab3@31641>   Dc.b $CD,$44,$00,$03
0003F5F2 <AmiBlitz3.ab3@31642>   Dc.b $EF,$EF,$F0,$04
0003F5F6 <AmiBlitz3.ab3@31643>   Dc.b $00,$00,$7F,$DF
0003F5FA <AmiBlitz3.ab3@31644>   Dc.b $FB,$44,$00,$00
0003F5FE <AmiBlitz3.ab3@31645>   Dc.b $FF,$A7,$FC,$04
0003F602 <AmiBlitz3.ab3@31646>   Dc.b $00,$00,$7E,$3F
0003F606 <AmiBlitz3.ab3@31647>   Dc.b $FD,$44,$00,$00
0003F60A <AmiBlitz3.ab3@31648>   Dc.b $00,$00,$00,$04
0003F60E <AmiBlitz3.ab3@31649>   Dc.b $7F,$FF,$FF,$FF
0003F612 <AmiBlitz3.ab3@31650>   Dc.b $FF,$FC,$00,$00
0003F616 <AmiBlitz3.ab3@31651>   Dc.b $00,$01,$00,$00
0003F619 <AmiBlitz3.ab3@31652>   Dc.b $00,$00,$04
0003F61F <AmiBlitz3.ab3@31655> str_infoextention2:  Dc.b ".info",0                           ;infoname org source
0003F677 <AmiBlitz3.ab3@31656> errorlimit_text:     Dc.b "There are too much errors, compiling is stop now. Please fix errors first and try again",0
0003F678 <AmiBlitz3.ab3@31657> Even
0003F67C <AmiBlitz3.ab3@31659> sysdebug:            Dc.l $3F0
0003F6A6 <AmiBlitz3.ab3@31664>  !basic
0003F6BA <AmiBlitz3.ab3@31665>  If OnePassCompiling = True
0003F6D8 <AmiBlitz3.ab3@31666>    maxmem.l = (AvailMem_ (#MEMF_PUBLIC) LSR 2)  ; 1/4 of the available free mem
0003F6E8 <AmiBlitz3.ab3@31667>    objectlength.l = Peek.l(?objlen)
0003F706 <AmiBlitz3.ab3@31668>    If Peek.b(?use_debugger) = 0
0003F72C <AmiBlitz3.ab3@31669>      If (objectlength < 3670056) AND (maxmem > 3670056)
0003F732 <AmiBlitz3.ab3@31670>        MOVE.l #3145727,d2     ; objectbuffersize
0003F738 <AmiBlitz3.ab3@31671>        MOVE.l  #262143,d3     ; libsbuffersize
0003F73E <AmiBlitz3.ab3@31672>        MOVE.l  #131071,d4     ; systembuffersize
0003F744 <AmiBlitz3.ab3@31673>        MOVE.l  #131071,d5     ; databuffersize
0003F74A <AmiBlitz3.ab3@31674>        JSR makeallox  ; added 40 buffer more
0003F774 <AmiBlitz3.ab3@31675>        !basic
0003F77A <AmiBlitz3.ab3@31676>      Else
0003F7A0 <AmiBlitz3.ab3@31677>        If (objectlength < 1572904) AND (maxmem > 1572904)
0003F7BE <AmiBlitz3.ab3@31678>          !asm
0003F7C4 <AmiBlitz3.ab3@31679>          MOVE.l #1310719,d2     ; objectbuffersize
0003F7CA <AmiBlitz3.ab3@31680>          MOVE.l  #131071,d3     ; libsbuffersize
0003F7D0 <AmiBlitz3.ab3@31681>          MOVE.l   #65535,d4     ; systembuffersize
0003F7D6 <AmiBlitz3.ab3@31682>          MOVE.l   #65535,d5     ; databuffersize
0003F7DC <AmiBlitz3.ab3@31683>          JSR makeallox ; added 40 buffer more
0003F806 <AmiBlitz3.ab3@31684>          !basic
0003F80C <AmiBlitz3.ab3@31687>    Else
0003F81C <AmiBlitz3.ab3@31688>      maxmem LSL 1 ; for debug test for 1/2 of the available mem
0003F842 <AmiBlitz3.ab3@31689>      If (objectlength < 12058664) AND (maxmem > 12058664)
0003F848 <AmiBlitz3.ab3@31690>        MOVE.l #5242879,d2     ; objectbuffersize
0003F84E <AmiBlitz3.ab3@31691>        MOVE.l  #262143,d3     ; libsbuffersize
0003F854 <AmiBlitz3.ab3@31692>        MOVE.l #6291455,d4     ; systembuffersize
0003F85A <AmiBlitz3.ab3@31693>        MOVE.l  #262143,d5     ; databuffersize
0003F860 <AmiBlitz3.ab3@31694>        JSR makeallox ; added 40 buffer more
0003F88A <AmiBlitz3.ab3@31695>        !basic
0003F890 <AmiBlitz3.ab3@31696>      Else
0003F8B6 <AmiBlitz3.ab3@31697>        If (objectlength < 6094888) AND (maxmem > 6094888)
0003F8D4 <AmiBlitz3.ab3@31698>          !asm
0003F8DA <AmiBlitz3.ab3@31699>          MOVE.l #2621439,d2     ; objectbuffersize
0003F8E0 <AmiBlitz3.ab3@31700>          MOVE.l  #262143,d3     ; libsbuffersize
0003F8E6 <AmiBlitz3.ab3@31701>          MOVE.l #3145727,d4     ; systembuffersize
0003F8EC <AmiBlitz3.ab3@31702>          MOVE.l   #65535,d5     ; databuffersize
0003F8F2 <AmiBlitz3.ab3@31703>          JSR makeallox ; added 40 buffer more
0003F91C <AmiBlitz3.ab3@31704>          !basic
0003F93A <AmiBlitz3.ab3@31709>  !asm
0003F93C <AmiBlitz3.ab3@31710> RTS
0003F966 <AmiBlitz3.ab3@31713>  !basic
0003F96C <AmiBlitz3.ab3@31714>    releaseexe = True                                  ; set release modus to on
0003F9AA <AmiBlitz3.ab3@31715>    !ComData_GetW{comWord_CreateDebugFile,D0}          ; get the status for creating .dbg file
0003F9AE <AmiBlitz3.ab3@31716>    releasedbg_save = PutD0                            ; save the status
0003F9E4 <AmiBlitz3.ab3@31717>    !ComData_SetW{comWord_CreateDebugFile,#0}          ; set it of so it will not create with every needed compile run
0003F9F6 <AmiBlitz3.ab3@31718>    releasemakesmall_save = Peek.b(?make_smallestcode) ; save the status of make smallest code
0003FA08 <AmiBlitz3.ab3@31719> 
0003FA46 <AmiBlitz3.ab3@31720>    !ComData_GetB{comByte_FuncOptimize,D0}             ; get the status of function optimizer
0003FA4A <AmiBlitz3.ab3@31721>    releasefuncoptimize_save = PutD0                   ; save it
0003FA80 <AmiBlitz3.ab3@31722>    !ComData_SetB{comByte_FuncOptimize,#1}             ; set it on
0003FA92 <AmiBlitz3.ab3@31723>    releasedebugger_save = Peek.b(?use_debugger)       ; save the status of the use of the debugger
0003FAA2 <AmiBlitz3.ab3@31724>    Poke.b ?use_debugger,0                             ; set if off because we create a release verion and need no debugging code
0003FAC0 <AmiBlitz3.ab3@31725>  !asm
0003FAC6 <AmiBlitz3.ab3@31726>  JSR menu_newcreate                                   ; jump to start the compiling
0003FACA <AmiBlitz3.ab3@31727>  !regs2stack                                          ; save the registers
0003FAF4 <AmiBlitz3.ab3@31728>  !basic
0003FAFA <AmiBlitz3.ab3@31729>    releaseexe = False                                 ; set creat release exe off
0003FB00 <AmiBlitz3.ab3@31730>    GetD0 releasedbg_save                              ; set the old status of create .dbg file back
0003FB34 <AmiBlitz3.ab3@31731>    !ComData_SetW{comWord_CreateDebugFile,D0}          ;                      "
0003FB46 <AmiBlitz3.ab3@31732>    Poke.b ?use_debugger,releasedebugger_save          ; set the old status of use Debugger back
0003FB4E <AmiBlitz3.ab3@31733>    GetD0 releasefuncoptimize_save                     ; set the old status of function optimizer back
0003FB82 <AmiBlitz3.ab3@31734>    !ComData_SetB{comByte_FuncOptimize,D0}             ;                       "
0003FB94 <AmiBlitz3.ab3@31735>    Poke.b ?make_smallestcode,releasemakesmall_save    ; set the old status of make smallest code back
0003FBB2 <AmiBlitz3.ab3@31736>  !asm
0003FBB6 <AmiBlitz3.ab3@31737>  !stack2regs                                          ; set registers back
0003FBB8 <AmiBlitz3.ab3@31738> RTS
0003FBBC <AmiBlitz3.ab3@31743> exelock              Ds.l 1
0003FBC0 <AmiBlitz3.ab3@31747> includesourceline    Dc.l 0
0003FBC4 <AmiBlitz3.ab3@31748> linenum              Ds.l 1
0003FBC8 <AmiBlitz3.ab3@31749> globallinecount      Ds.l 1
0003FBE6 <AmiBlitz3.ab3@31750> myversion            Dc.b "\\__VER_MAJOR.\\__VER_MINOR (\\__DATE_GER__) Build \\__VER_PATCH.\\__VER_BUILD",0 : Even
0003FBEA <AmiBlitz3.ab3@31751> calc_option          Dc.l 1
0003FBEE <AmiBlitz3.ab3@31752> versioninformation   Dc.l $00
0003FBF2 <AmiBlitz3.ab3@31753> number_of_builds     Dc.l $00
0003FBF4 <AmiBlitz3.ab3@31754> leftsideflagmask     Ds.w 1    ;this contain the flag if pointer (1) or not
0003FBF6 <AmiBlitz3.ab3@31755> rightsideflagmask    Ds.w 1
0003FBF8 <AmiBlitz3.ab3@31757> BSS
0003FBFA <AmiBlitz3.ab3@31758> debugnest            Ds.w 1
0003FBFE <AmiBlitz3.ab3@31759> instringf            Ds.l 1
0003FC02 <AmiBlitz3.ab3@31760> funcscanon           Ds.l 1
0003FC16 <AmiBlitz3.ab3@31761> storedebugmode       Ds.b 20
0003FC1A <AmiBlitz3.ab3@31762> firsttimepref        Ds.l 1
0003FC1B <AmiBlitz3.ab3@31763> funcparloop          Ds.b 1                   ; is 1 when function calling parameter are compile
0003FC1C <AmiBlitz3.ab3@31764> blitzparloop         Ds.b 1                   ; is 1 when blitzlib calling parameters are compile
0003FC1E <AmiBlitz3.ab3@31765> nostringopt          Ds.w 1
0003FC9E <AmiBlitz3.ab3@31766> path2:               Ds.l 32
0003FCA2 <AmiBlitz3.ab3@31767> typebase             Dc.l 0
0003FCA4 <AmiBlitz3.ab3@31768> doublepeek           Dc.w 0
0003FCA8 <AmiBlitz3.ab3@31769> lastoffset           Dc.l 0
0003FCAA <AmiBlitz3.ab3@31770> firsttime            Dc.w 0
0003FCAE <AmiBlitz3.ab3@31771> lastdestpointer      Dc.l 0
0003FCB2 <AmiBlitz3.ab3@31772> prevwritedat         Dc.l 0
0003FCB6 <AmiBlitz3.ab3@31773> lastsourceline       Dc.l 0
0003FCBA <AmiBlitz3.ab3@31774> lastwritedat         Dc.l 0
0003FCBC <AmiBlitz3.ab3@31775> makeexec             Dc.w 0
0003FCBE <AmiBlitz3.ab3@31776> makeexec_remember    Dc.w 0
0003FCC2 <AmiBlitz3.ab3@31777> sharebase            Ds.l 1
0003FCC6 <AmiBlitz3.ab3@31778> tempa7               Ds.l 1
0003FCC8 <AmiBlitz3.ab3@31779> incnif               Ds.w 1
0003FCCC <AmiBlitz3.ab3@31780> tempstore            Ds.l 1
0003FCD0 <AmiBlitz3.ab3@31781> result               Ds.l 1
0003FCD2 <AmiBlitz3.ab3@31782> automode             Ds.w 1
0003FCD4 <AmiBlitz3.ab3@31783> stackcorrect         Ds.w 1
0003FCD6 <AmiBlitz3.ab3@31784> formode              Ds.w 1
0003FCDA <AmiBlitz3.ab3@31785> limitregs            Ds.l 1
0003FCDC <AmiBlitz3.ab3@31786> onestep              Ds.w 1
0003FCE0 <AmiBlitz3.ab3@31787> reqmode              Ds.l 1
0003FD80 <AmiBlitz3.ab3@31788> inctab               Ds.l 40
0003FD82 <AmiBlitz3.ab3@31789> funcoptimize_deprecated  Ds.w 1 ; deprecated, see comByte_FuncOptimize ; Wanderer
0003FD86 <AmiBlitz3.ab3@31790> includeline          Ds.l 1
0003FD8A <AmiBlitz3.ab3@31791> morememadd           Ds.l 1
0003FD8C <AmiBlitz3.ab3@31792> objectcount          Ds.w 1
0003FD90 <AmiBlitz3.ab3@31793> savefuncspace        Ds.l 1
0003FD94 <AmiBlitz3.ab3@31794> lasttrap1            Ds.l 1
0003FD98 <AmiBlitz3.ab3@31795> currentfunccall      Ds.l 1
0003FD99 <AmiBlitz3.ab3@31796> skipfunc             Ds.b 1
0003FD9A <AmiBlitz3.ab3@31797> resdisable           Ds.b 1
0003FD9B <AmiBlitz3.ab3@31798> skiptoggle           Ds.b 1
0003FD9C <AmiBlitz3.ab3@31799> developobject        Ds.b 1
0003FD9E <AmiBlitz3.ab3@31800> iniffcommand         Ds.w 1
0003FDA0 <AmiBlitz3.ab3@31801> startoffsetmore      Ds.w 1
0003FDA2 <AmiBlitz3.ab3@31802> olddebugmode         Ds.w 1
0003FDA6 <AmiBlitz3.ab3@31803> fpucodeglobal        Ds.l 1
0003FDAA <AmiBlitz3.ab3@31804> fpucodelocal         Ds.l 1
0003FDAE <AmiBlitz3.ab3@31805> maxregs              Ds.l 1
0003FDB2 <AmiBlitz3.ab3@31806> fpucode              Ds.l 1
0003FDB4 <AmiBlitz3.ab3@31807> firstmline           Ds.w 1
0003FDF4 <AmiBlitz3.ab3@31808> regtable             Ds.l 16
0003FDF6 <AmiBlitz3.ab3@31809> exdebug              Ds.w 1
0003FDF8 <AmiBlitz3.ab3@31810> a2offset2            Ds.w 1
0003FDFC <AmiBlitz3.ab3@31811> parnumtemp           Ds.l 1
0003FDFD <AmiBlitz3.ab3@31812> doimmediate          Ds.b 1
0003FDFE <AmiBlitz3.ab3@31813> notypecheck          Ds.b 1
0003FE00 <AmiBlitz3.ab3@31814> vartype              Ds.w 1
0003FE01 <AmiBlitz3.ab3@31815> peekaddrsize         Ds.b 1
0003FE02 <AmiBlitz3.ab3@31816> declare2             Ds.b 1
0003FE04 <AmiBlitz3.ab3@31817> parameternum         Ds.w 1
0003FE08 <AmiBlitz3.ab3@31818> lasttoken            Ds.l 1
0003FE0A <AmiBlitz3.ab3@31819> newvariable          Ds.w 1
0003FE0B <AmiBlitz3.ab3@31820> declare              Ds.b 1
0003FE0C <AmiBlitz3.ab3@31821> typecheck            Ds.b 1
0003FE0D <AmiBlitz3.ab3@31822> nowdeclare           Ds.b 1
0003FE0E <AmiBlitz3.ab3@31823> dimkeep              Ds.b 1
0003FE0F <AmiBlitz3.ab3@31824> a4a5store            Ds.b 1
0003FE10 <AmiBlitz3.ab3@31825> ___freetouse         Ds.b 1
0003FE14 <AmiBlitz3.ab3@31826> firstiffstore        Ds.l 1
0003FE18 <AmiBlitz3.ab3@31827> destpointer2         Ds.l 1
0003FE1C <AmiBlitz3.ab3@31828> stackaddr            Ds.l 1
0003FF20 <AmiBlitz3.ab3@31829> allowtab             Ds.b 260
00040020 <AmiBlitz3.ab3@31830> templine             Ds.b 256
00040022 <AmiBlitz3.ab3@31831> thenmode             Ds.w 1
00040024 <AmiBlitz3.ab3@31832> temp                 Ds.w 1
00040026 <AmiBlitz3.ab3@31833> tempregnum           Ds.w 1
0004002A <AmiBlitz3.ab3@31835> numlines2            Ds.l 1
0004002E <AmiBlitz3.ab3@31836> numlines             Ds.l 1
00040030 <AmiBlitz3.ab3@31837> exmac                Ds.w 1
00040032 <AmiBlitz3.ab3@31838> returncode           Ds.w 1
00040036 <AmiBlitz3.ab3@31839> fp0iff               Ds.l 1
0004003A <AmiBlitz3.ab3@31840> fp0addr              Ds.l 1
0004003C <AmiBlitz3.ab3@31841> fp0mode              Ds.w 1
0004003E <AmiBlitz3.ab3@31842> fp0var               Ds.w 1
00040040 <AmiBlitz3.ab3@31843> fastfunc             Ds.w 1
00040042 <AmiBlitz3.ab3@31844> retmode              Ds.w 1
00040044 <AmiBlitz3.ab3@31845> parnum               Ds.w 1
00040046 <AmiBlitz3.ab3@31846> regmask              Ds.w 1
00040048 <AmiBlitz3.ab3@31847> regnumfunc           Ds.w 1
0004004A <AmiBlitz3.ab3@31848> libmode              Ds.w 1
0004004E <AmiBlitz3.ab3@31849> oldline              Ds.l 1
00040052 <AmiBlitz3.ab3@31850> sourceline3          Ds.l 1
0004011A <AmiBlitz3.ab3@31851> debugstore           Ds.b 200
0004011E <AmiBlitz3.ab3@31852> deststore            Ds.l 1
00040122 <AmiBlitz3.ab3@31854> loada                Ds.l 1
00040126 <AmiBlitz3.ab3@31856> currtype             Ds.l 1
0004012A <AmiBlitz3.ab3@31857> arrayoffset          Ds.l 1
0004012E <AmiBlitz3.ab3@31858> lastlabel            Ds.l 1
00040132 <AmiBlitz3.ab3@31859> curtemplabel         Ds.l 1
00040136 <AmiBlitz3.ab3@31860> sourceline2          Ds.l 1
00040236 <AmiBlitz3.ab3@31861> chartab              Ds.b 256
000403B6 <AmiBlitz3.ab3@31862> 
000C03C6 <AmiBlitz3.ab3@31863> instrtab             Ds.l 65538*2
000C83C6 <AmiBlitz3.ab3@31865> labelhash            Ds.l 8192                             ;-bssstore clear every compile pass
000E83CA <AmiBlitz3.ab3@31866> replacedat           Ds.w 65538
000F03CA <AmiBlitz3.ab3@31867> variablehash         Ds.l 8192
000F03CE <AmiBlitz3.ab3@31868> newinitaddr          Ds.l 1
000F03D2 <AmiBlitz3.ab3@31869> realbssend           Ds.l 1
000F03D4 <AmiBlitz3.ab3@31870> saved0               Ds.w 1
000F0454 <AmiBlitz3.ab3@31871> lastpath             Ds.b 128
000F04D4 <AmiBlitz3.ab3@31872> lastpath2            Ds.b 128
000F059C <AmiBlitz3.ab3@31873> fpustackbase         Ds.w 100
000F05A0 <AmiBlitz3.ab3@31874> 
000F05A2 <AmiBlitz3.ab3@31875> isconstantvalue      Dc.w 0  ; contain a type (1-7) if a constant expression is used as a Parameter or on right side of =
000F05A6 <AmiBlitz3.ab3@31876> lastfunction         Dc.l 0  ; the address of the function in the Parameter or rght side of =
000F05AA <AmiBlitz3.ab3@31877> leftsidetype         Dc.l 0  ;this contain the address of the type from the left side of the variable assign
000F05AE <AmiBlitz3.ab3@31878> rightsidetype        Dc.l 0  ; same as above but right side
000F05B2 <AmiBlitz3.ab3@31881> trap15temp           Ds.l 1
000F05B6 <AmiBlitz3.ab3@31882> trap15temp2          Ds.l 1
000F05BA <AmiBlitz3.ab3@31883> templibend           Ds.l 1
000F05BE <AmiBlitz3.ab3@31884> tempdata1start       Ds.l 1
000F05C2 <AmiBlitz3.ab3@31885> stacktrack           Ds.l 1
000F05C6 <AmiBlitz3.ab3@31886> pad                  Ds.l 1
000F06C6 <AmiBlitz3.ab3@31887> includetemp          Ds.b 256
000F10C6 <AmiBlitz3.ab3@31888> includetemp2         Ds.b 256*10
000F10C8 <AmiBlitz3.ab3@31889> funccall             Ds.w 1
000F10CC <AmiBlitz3.ab3@31892> ptr_resfile          Ds.l 1
000F10CE <AmiBlitz3.ab3@31893> CalculatorButtonBinFlag:    Ds.w 1
000F10D0 <AmiBlitz3.ab3@31894> CalculatorButtonDecFlag:    Ds.w 1
000F10D4 <AmiBlitz3.ab3@31895> ped_startup_addr:    Ds.l 1
000F10D5 <AmiBlitz3.ab3@31896> start_without_libs:  Ds.b 1
000F10D6 <AmiBlitz3.ab3@31897> skip_bytes:          Ds.b 1
000F10DA <AmiBlitz3.ab3@31898> functionreturntype   Ds.l 1  ; a temp store of it.do not read this value
000F10DE <AmiBlitz3.ab3@31899> beforeparameterfetch Ds.l 1
000F10E2 <AmiBlitz3.ab3@31900> typetocast           Ds.l 1
000F10E6 <AmiBlitz3.ab3@31901> errorcounter         Ds.l 1
000F10E7 <AmiBlitz3.ab3@31902> iserror              Ds.b 1
000F10E8 <AmiBlitz3.ab3@31903> MorphOS:             Ds.b 1 ; added to be able to select the cacheclear function 0=AOS, 1=MorphOS  tomsmart1
000F10EC <AmiBlitz3.ab3@31906> CLIMode:             Dc.l 0
000F10F0 <AmiBlitz3.ab3@31907> XTRAEndPadBytes:     Dc.l 0                             ; 4 fill/pad/termination bytes for the xtra write function  tomsmart1
000F10F4 <AmiBlitz3.ab3@31908> maxerrorcount:       Ds.l 1                             ; added to make it changeable in CLI Mode tomsmart1
