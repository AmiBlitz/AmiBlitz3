internal1(000):001 NEWTYPE .Typename
internal1(000):002 End 
internal1(000):003 Let 
internal1(000):004 Dim 
internal1(000):005 Goto 
internal1(000):006 Gosub 
internal1(000):007 Return 
internal1(000):008 Statement 
internal1(000):009 Function 
internal1(000):010 MouseWait 
internal1(000):011 If 
internal1(000):012 While 
internal1(000):013 Macro 
internal1(000):014 Select 
internal1(000):015 Case 
internal1(000):016 Default 
internal1(000):017 AsmExit 
internal1(000):018 XINCLUDE 
internal1(000):019 INCLUDE 
internal1(000):020 SYNTAX 
internal1(000):021 SHARED 
internal1(000):022 For 
internal1(000):023 Next 
internal1(000):024 To 
internal1(000):025 Step 
internal1(000):026 Data 
internal1(000):027 Read 
internal1(000):028 CNIF 
internal1(000):029 CSIF 
internal1(000):030 CELSE 
internal1(000):031 CEND 
internal1(000):032 CERR 
internal1(000):033 Then 
internal1(000):034 Else 
internal1(000):035 Even4 
internal1(000):036 Even8 
internal1(000):037 Dc 
internal1(000):038 Ds 
internal1(000):039 Even 
internal1(000):040 Dcb 
internal1(000):041 GetReg 
internal1(000):042 IncBin 
internal1(000):043 Free 
internal1(000):044 Use 
internal1(000):045 Stop 
internal1(000):046 Cont 
internal1(000):047 SizeOf 
internal1(000):048 SetInt 
internal1(000):049 ClrInt 
internal1(000):050 MaxLen 
internal1(000):051 DEFTYPE 
internal1(000):052 BLITZ 
internal1(000):053 AMIGA 
internal1(000):054 QAMIGA 
internal1(000):055 VWait 
internal1(000):056 LibJsr 
internal1(000):057 TokeJsr 
internal1(000):058 BLibJsr 
internal1(000):059 EXTB 
internal1(000):060 ABCD 
internal1(000):061 ADD 
internal1(000):062 ADDI 
internal1(000):063 ADDA 
internal1(000):064 ADDQ 
internal1(000):065 ADDX 
internal1(000):066 AND 
internal1(000):067 ANDI 
internal1(000):068 ASL 
internal1(000):069 ASR 
internal1(000):070 BCC 
internal1(000):071 BCS 
internal1(000):072 BEQ 
internal1(000):073 BGE 
internal1(000):074 BGT 
internal1(000):075 BHI 
internal1(000):076 BLE 
internal1(000):077 BLS 
internal1(000):078 BLT 
internal1(000):079 BMI 
internal1(000):080 BNE 
internal1(000):081 BPL 
internal1(000):082 BVC 
internal1(000):083 BVS 
internal1(000):084 BCHG 
internal1(000):085 BCLR 
internal1(000):086 BSET 
internal1(000):087 BTST 
internal1(000):088 BRA 
internal1(000):089 BSR 
internal1(000):090 CHK 
internal1(000):091 CLR 
internal1(000):092 CMP 
internal1(000):093 CMPI 
internal1(000):094 CMPA 
internal1(000):095 CMPM 
internal1(000):096 DBCC 
internal1(000):097 DBCS 
internal1(000):098 DBEQ 
internal1(000):099 DBGE 
internal1(000):100 DBGT 
internal1(000):101 DBHI 
internal1(000):102 DBLE 
internal1(000):103 DBLS 
internal1(000):104 DBLT 
internal1(000):105 DBMI 
internal1(000):106 DBNE 
internal1(000):107 DBPL 
internal1(000):108 DBVC 
internal1(000):109 DBVS 
internal1(000):110 DBF 
internal1(000):111 DBRA 
internal1(000):112 DBT 
internal1(000):113 DIVS 
internal1(000):114 DIVU 
internal1(000):115 EOR 
internal1(000):116 EORI 
internal1(000):117 EXG 
internal1(000):118 EXT 
internal1(000):119 ILLEGAL 
internal1(000):120 JMP 
internal1(000):121 JSR 
internal1(000):122 LEA 
internal1(000):123 LINK 
internal1(000):124 LSL 
internal1(000):125 LSR 
internal1(000):126 MOVE 
internal1(000):127 Chip 
internal2(001):000 MOVEA 
internal2(001):001 MOVEQ 
internal2(001):002 MOVEM 
internal2(001):003 MULS 
internal2(001):004 MULU 
internal2(001):005 NBCD 
internal2(001):006 NEG 
internal2(001):007 NEGX 
internal2(001):008 NOP 
internal2(001):009 NOT 
internal2(001):010 OR 
internal2(001):011 ORI 
internal2(001):012 PEA 
internal2(001):013 RESET 
internal2(001):014 ROL 
internal2(001):015 ROR 
internal2(001):016 ROXL 
internal2(001):017 ROXR 
internal2(001):018 RTE 
internal2(001):019 RTR 
internal2(001):020 RTS 
internal2(001):021 SBCD 
internal2(001):022 SCC 
internal2(001):023 SCS 
internal2(001):024 SEQ 
internal2(001):025 SGE 
internal2(001):026 SGT 
internal2(001):027 SHI 
internal2(001):028 SLE 
internal2(001):029 SLS 
internal2(001):030 SLT 
internal2(001):031 SMI 
internal2(001):032 SNE 
internal2(001):033 SPL 
internal2(001):034 SVC 
internal2(001):035 SVS 
internal2(001):036 ST 
internal2(001):037 SF 
internal2(001):038 STOP 
internal2(001):039 SUB 
internal2(001):040 SUBI 
internal2(001):041 SUBA 
internal2(001):042 SUBQ 
internal2(001):043 SUBX 
internal2(001):044 SWAP 
internal2(001):045 BSS 
internal2(001):046 TRAP 
internal2(001):047 TRAPV 
internal2(001):048 TST 
internal2(001):049 UNLK 
internal2(001):050 EndAsm 
internal2(001):051 List 
internal2(001):052 SetErr 
internal2(001):053 ClrErr 
internal2(001):055 ErrFail 
internal2(001):056 Addr Objectname(Object#)
internal2(001):057 MOD 
internal2(001):058 Pi 
internal2(001):059 Repeat 
internal2(001):060 Until 
internal2(001):061 PutReg 
internal2(001):062 Pop 
internal2(001):063 INCDIR 
internal2(001):064 EndIf 
internal2(001):065 Wend 
internal2(001):066 SysJsr 
internal2(001):067 WBStartup 
internal2(001):068 Maximum 
internal2(001):069 On 
internal2(001):070 Off 
internal2(001):071 Forever 
internal2(001):072 Restore 
internal2(001):073 Exchange 
internal2(001):074 USEPATH 
internal2(001):075 CloseEd 
internal2(001):076 NoCli 
internal2(001):077 BitTst 
internal2(001):078 BitSet 
internal2(001):079 BitClr 
internal2(001):080 BitChg 
internal2(001):081 Used 
internal2(001):082 Runerrson 
internal2(001):083 Runerrsoff 
internal2(001):084 USELASTPATH ;Uses the previous path set with usepath
internal2(001):085 RegLoad regs;load max 4 regs for faster use
internal2(001):086 RegSave store changed loaded regs
internal2(001):087 Object ;define object #developobject=1 disable it
internal2(001):089 LastRunErrsMode ; restore last error mode
Xbaudiolib.obj(004):001 XBDiskPlay Filename$,Channelmask[,Vol1[,Vol2...]]
Xbaudiolib.obj(004):002 XBDiskBuffer Bufferlen
Xbaudiolib.obj(004):003 XBLoadSound Sound#,Filename$
Xbaudiolib.obj(004):004 XBSound Sound#,Channelmask[,Vol1[,Vol2...]]
Xbaudiolib.obj(004):005 XBVolume Channelmask,Vol1[,Vol2...]
Xbaudiolib.obj(004):006 XBFilter On|Off
Xbaudiolib.obj(004):007 XBLoopSound Sound#,Channelmask[,Vol1[,Vol2...]]
Xbaudiolib.obj(004):008 XBInitSound Sound#,Length[,Period[,Repeat]]
Xbaudiolib.obj(004):009 XBSoundData Sound#,Offset,Data
Xbaudiolib.obj(004):010 XBPeekSound (Sound#,Offset)
Xbaudiolib.obj(004):011 XBDecodeSound Sound#,MemoryLocation
Xbaudiolib.obj(004):012 XBSetPeriod Sound#,Period
camd.library1(005):001 LockCAMD_ (locktype)
camd.library1(005):002 UnlockCAMD_ (lock)
camd.library1(005):003 CreateMidiA_ (name,tags)
camd.library1(005):004 DeleteMidi_ (mi)
camd.library1(005):005 SetMidiAttrsA_ (mi,tags)
camd.library1(005):006 GetMidiAttrsA_ (mi,tags)
camd.library1(005):007 NextMidi_ (mi)
camd.library1(005):008 FindMidi_ (name)
camd.library1(005):009 FlushMidi_ (mi)
camd.library1(005):010 AddMidiLinkA_ (mi,type,tags)
camd.library1(005):011 RemoveMidiLink_ (ml)
camd.library1(005):012 SetMidiLinkAttrsA_ (ml,tags)
camd.library1(005):013 GetMidiLinkAttrsA_ (ml,tags)
camd.library1(005):014 NextClusterLink_ (mc,ml,type)
camd.library1(005):015 NextMidiLink_ (mi,ml,type)
camd.library1(005):016 MidiLinkConnected_ (ml)
camd.library1(005):017 NextCluster_ (mc)
camd.library1(005):018 FindCluster_ (name)
camd.library1(005):019 PutMidi_ (ml,msgdata)
camd.library1(005):020 GetMidi_ (mi,msg)
camd.library1(005):021 WaitMidi_ (mi,msg)
camd.library1(005):022 PutSysEx_ (ml,buffer)
camd.library1(005):023 GetSysEx_ (mi,buffer,len)
camd.library1(005):024 QuerySysEx_ (mi)
camd.library1(005):025 SkipSysEx_ (mi)
camd.library1(005):026 GetMidiErr_ (mi)
camd.library1(005):027 MidiMsgType_ (msg)
camd.library1(005):028 MidiMsgLen_ (status)
camd.library1(005):029 ParseMidi_ (ml,buffer,length)
camd.library1(005):030 OpenMidiDevice_ (name)
camd.library1(005):031 CloseMidiDevice_ (mdd)
camd.library1(005):032 RethinkCAMD_ 
camd.library1(005):033 StartClusterNotify_ (node)
camd.library1(005):034 EndClusterNotify_ (node)
mpega.library1(006):001 MPEGA_open_ (filename,ctrl)
mpega.library1(006):002 MPEGA_close_ (mpds)
mpega.library1(006):003 MPEGA_decode_frame_ (mpds,pcm)
mpega.library1(006):004 MPEGA_seek_ (mpds,ms_time_position)
mpega.library1(006):005 MPEGA_time_ (mpds,ms_time_position)
mpega.library1(006):006 MPEGA_find_sync_ (buffer,buffer_size)
mpega.library1(006):007 MPEGA_scale_ (mpds,scale_percent)
LotanCP2.obj(007):001 c2p (Chunky,BitMap,Blocks)
EFMUILib.obj(008):001 MUIObject A MUI object
EFMUILib.obj(008):002 MUISetMaximumTags max
EFMUILib.obj(008):003 MUIApplicationTitle title$
EFMUILib.obj(008):004 MUIApplicationVersion ver$
EFMUILib.obj(008):005 MUIApplicationCopyright copyright$
EFMUILib.obj(008):006 MUIApplicationAuthor author$
EFMUILib.obj(008):007 MUIApplicationDescription desc$
EFMUILib.obj(008):008 MUIApplicationBase base$
EFMUILib.obj(008):009 MUIAddApplicationTags &TagList | Tag,Value [,Tag,Value...]
EFMUILib.obj(008):010 MUICreateApplication 
EFMUILib.obj(008):011 MUIRemoveApplication 
EFMUILib.obj(008):012 MUIApplicationLoc 
EFMUILib.obj(008):013 MUIApplicationObj To MUIObject#
EFMUILib.obj(008):014 MUIAddSubWindow MUIObject#
EFMUILib.obj(008):015 MUIFreeObject MUIObject#
EFMUILib.obj(008):016 MUICreateWindow MUIObject#,title$ [,id$ [,MUIObject#]]
EFMUILib.obj(008):017 MUIOpenWindow (MUIObject#)
EFMUILib.obj(008):018 MUICloseWindow MUIObject#
EFMUILib.obj(008):019 MUIAddTags MUIObject#,&TagList | MUIObject#,Tag,Value [,Tag,Value...]
EFMUILib.obj(008):020 MUINewObject MUIObject#,Class$,&TagList | MUIObject#,Class$,Tag,Value [,Tag,Value...]
EFMUILib.obj(008):021 MUIMakeObject MUIObject#,Type,&TagList | MUIObject#,Type,Tag,Value [,Tag,Value...]
EFMUILib.obj(008):022 MUIHVSpace MUIObject#
EFMUILib.obj(008):023 MUIHSpace MUIObject#,x
EFMUILib.obj(008):024 MUIVSpace MUIObject#,x
EFMUILib.obj(008):025 MUIString MUIObject#,Contents$,MaxLen
EFMUILib.obj(008):026 MUIKeyString MUIObject#,Contents$,MaxLen,ControlChar$
EFMUILib.obj(008):027 MUICheckMark MUIObject#,Selected
EFMUILib.obj(008):028 MUIKeyCheckMark MUIObject#,Selected,ControlChar$
EFMUILib.obj(008):029 MUISimpleButton MUIObject#,Name$
EFMUILib.obj(008):030 MUIKeyButton MUIObject#,Name$,Key$
EFMUILib.obj(008):031 MUICycle MUIObject#,  Entry$ [,Entry$...] | *Array
EFMUILib.obj(008):032 MUIKeyCycle MUIObject#,Key$,  Entry$ [,Entry$...] | *Array
EFMUILib.obj(008):033 MUIRadio MUIObject#,Name$,  Entry$ [,Entry$...] | *Array
EFMUILib.obj(008):034 MUIKeyRadio MUIObject#,Name$,Key$,  Entry$ [,Entry$...] | *Array
EFMUILib.obj(008):035 MUISlider MUIObject#,Min,Max,Level
EFMUILib.obj(008):036 MUIKeySlider MUIObject#,Min,Max,Level,Key$
EFMUILib.obj(008):037 MUILabel MUIObject#,Label$,Flags
EFMUILib.obj(008):038 MUIAddObjHGroup To MUIObject#,MUIObject#
EFMUILib.obj(008):039 MUICreateHGroup MUIObject#
EFMUILib.obj(008):040 MUIAddObjVGroup To MUIObject#,MUIObject#
EFMUILib.obj(008):041 MUICreateVGroup MUIObject#
EFMUILib.obj(008):042 MUISet MUIObject#,&TagList | MUIObject#,Attr,Value [,Attr,Value...]
EFMUILib.obj(008):043 MUIGet (MUIObject#,Attribute)
EFMUILib.obj(008):044 MUIDoMethod MUIObject#,Method,  Tag [,Tag...] | &TagList
EFMUILib.obj(008):045 MUINotify MUIObject#,Tag,Value,MUIObject#,  Tag [,Tag...] | &TagList
EFMUILib.obj(008):046 MUIEvent 
EFMUILib.obj(008):047 MUIWaitEvent 
EFMUILib.obj(008):048 MUINumericButton MUIObject#,Format$,Min,Max
EFMUILib.obj(008):049 MUIAddObjPage To MUIObject#,MUIObject#
EFMUILib.obj(008):050 MUICreatePage MUIObject#  ,Page1$ [,Page2$...] | &Page$(0)
EFMUILib.obj(008):051 MUIList MUIObject#,Format$,Array$()
EFMUILib.obj(008):052 MUIListView To MUIObject#,MUIObject#
EFMUILib.obj(008):053 MUIObjLoc (MUIObject#)
EFMUILib.obj(008):054 MUIRequest To MUIObject#,Flags,Title$,Gadgets$,Format$  [,Param...]
EFMUILib.obj(008):055 MUIPopButton MUIObject#,Image
EFMUILib.obj(008):056 MUIImageButton MUIObject#,Shape#
EFMUILib.obj(008):057 MUIInsertSingle MUIObject#,Position,  Entry$ [,Entry$...] | *Array
EFMUILib.obj(008):058 MUIRemoveSingle MUIObject#,Position
EFMUILib.obj(008):059 MUIRedrawSingle MUIObject#,Position
EFMUILib.obj(008):060 MUIListTitle MUIObject#,  Title$ [,Title$...] | *Array
EFMUILib.obj(008):061 MUICreateMenu MUIObject#,GTMenuList#,Flags [,TitleUData1 [,...]]
EFMUILib.obj(008):062 MUISetMenu To MUIObject#,MUIObject#
EFMUILib.obj(008):063 MUIFindUData To MUIObject#,MUIObject#,UserData
EFMUILib.obj(008):064 MUIBalanceObject MUIObject#
EFMUILib.obj(008):065 MUINotifyApp MUIObject#,Tag,Value,ReturnID
EFMUILib.obj(008):066 MUIAddObjsHGroup To MUIObject#,MUIObject# [,MUIObject# [,...]]
EFMUILib.obj(008):067 MUIAddObjsVGroup To MUIObject#,MUIObject# [,MUIObject# [,...]]
EFMUILib.obj(008):068 MUIAddObjsPage To MUIObject#,MUIObject# [,MUIObject# [,...]]
EFMUILib.obj(008):069 MUIBitmapObject MUIObject#,BitMap# [,Palette#]
EFMUILib.obj(008):070 MUIShapeObject MUIObject#,Shape# [,Palette#]
EFMUILib.obj(008):071 MUIChangeBitmap MUIObject#,BitMap# [,Palette#]
EFMUILib.obj(008):072 MUIChangeShape MUIObject#,Shape# [,Palette#]
EFMUILib.obj(008):073 MUIRedraw MUIObject#,Flags
EFMUILib.obj(008):074 MUIListHook On|Off
EFMUILib.obj(008):075 MUIChangeList MUIObject# [,Array$(),Position]
EFMUILib.obj(008):076 MUIGetCM (MUIObject#)
EFMUILib.obj(008):077 MUIGetCycle (MUIObject#)
EFMUILib.obj(008):078 MUIGetString$ (MUIObject#)
EFMUILib.obj(008):079 MUISetCM MUIObject#,Selected
EFMUILib.obj(008):080 MUISetCycle MUIObject#,Selected
EFMUILib.obj(008):081 MUISetString MUIObject#,String$
EFMUILib.obj(008):082 MUINList MUIObject#,Format$,Array$()
EFMUILib.obj(008):083 MUINListView To MUIObject#,MUIObject#
EFMUILib.obj(008):084 MUINListHook On|Off
EFMUILib.obj(008):085 MUIBetterString MUIObject#,Contents$,MaxLen
EFMUILib.obj(008):086 MUIKeyBetterString MUIObject#,Contents$,MaxLen,ControlChar$
EFMUILib.obj(008):087 MUICreateHVirtGroup MUIObject#
EFMUILib.obj(008):088 MUICreateVVirtGroup MUIObject#
EFMUILib.obj(008):089 MUIBetterBalance MUIObject#
EFMUILib.obj(008):090 MUIWeight MUIObject#,Lbs
EFMUILib.obj(008):091 MUIVertWeight MUIObject#,Lbs
EFMUILib.obj(008):092 MUIHorizWeight MUIObject#,Lbs
EFMUILib.obj(008):093 MUICycleChain MUIObject#,Chain
EFMUILib.obj(008):094 MUICycleChains Chain,MUIObject# [,MUIObject# [,...]]
EFMUILib.obj(008):095 MUIGroupSpacing MUIObject#,Pixels
EFMUILib.obj(008):096 MUIGroupVSpacing MUIObject#,Pixels
EFMUILib.obj(008):097 MUIGroupHSpacing MUIObject#,Pixels
EFMUILib.obj(008):098 MUIText MUIObject#,Contents$,SetVMax
EFMUILib.obj(008):099 MUITextContents MUIObject#,Contents$
EFMUILib.obj(008):100 MUIShortHelp MUIObject#,Help$
EFMUILib.obj(008):101 MUIHookToNList MUIObject#,Format$,*Construct,*Display,*Destruct
EFMUILib.obj(008):102 MUINListEntries (MUIObject#)
EFMUILib.obj(008):103 MUINListGetActive (MUIObject#)
EFMUILib.obj(008):104 MUINListSetActive MUIObject#,Entry
EFMUILib.obj(008):105 MUIAllocDispatcherHook (*HookTo)
EFMUILib.obj(008):106 MUINewObjectClass MUIObject#,ClassPtr,ClassID,&TagList
EFMUILib.obj(008):107 MUICreateCustomClass (Base,Supername$,SuperMCC,DataSize,DispatcherHook)
EFMUILib.obj(008):108 MUIDeleteCustomClass (*MCC)
EFMUILib.obj(008):109 MUICDoMethodA (Obj,Message)
EFMUILib.obj(008):110 MUICDoMethod (Obj,MethodID,Tag[,Tag..])
EFMUILib.obj(008):111 MUIDoSuperMethodA (Class,Obj,Message)
EFMUILib.obj(008):112 MUIDoSuperMethod (Class,Obj,MethodID,Tag[,Tag..])
EFMUILib.obj(008):113 MUICoerceMethodA (Class,Obj,Message)
EFMUILib.obj(008):114 MUICoerceMethod (Class,Obj,MethodID,Tag[,Tag..])
EFMUILib.obj(008):115 MUISetSuperAttrs (Class,Obj,Tag[,Tag..])
BDGfxLib.obj(009):001 FindColor (Pal#,Red,Green,Blue[,Tolerance])
BDGfxLib.obj(009):002 ColorGrey (Pal#,Color#)
BDGfxLib.obj(009):003 ColorToGrey (Pal#,Color#)
BDGfxLib.obj(009):004 SaveILBM BitMap#,Filename$,BtmHeader,ViewMode.l,Palette#
BDChunkyLib.obj(010):001 NChunky is a Chunky Buffer from the BDChunkyLib  ;-)
BDChunkyLib.obj(010):002 InitNChunky NChunky#,Width.l,Height.l
BDChunkyLib.obj(010):003 NChunkyToBtmA *AddrNChunky.l, *AddrBitMap.l
BDChunkyLib.obj(010):004 BtmToNChunkyA *AddrBtm.l, *AddrNChunky.l
BDChunkyLib.obj(010):005 NCPlot NChunky#, x.l, y.l, colour.b
BDChunkyLib.obj(010):006 NCPoint ( NChunky#, x.l, y.l )
BDChunkyLib.obj(010):007 NCBoxF NChunky#, x1.l, y1.l, x2.l, y2.l, colour.b
BDChunkyLib.obj(010):008 NCBox NChunky#, x1.l, y1.l, x2.l, y2.l, colour.b
BDChunkyLib.obj(010):009 CopyNChunky NChunkySrc#, NChunkyDest#
BDChunkyLib.obj(010):010 NCCls NChunky# [,colour.b ]
BDChunkyLib.obj(010):011 NChunkyToBtm NChunky#, BitMap#
BDChunkyLib.obj(010):012 BtmToNChunky BitMap#, NChunky#
BDChunkyLib.obj(010):013 InitNChunkyA ( Width.l,Height.l )
BDChunkyLib.obj(010):014 FreeNChunkyA ( *AddrNChunky )
BDChunkyLib.obj(010):015 NCPlotA *AddrNChunky.l, x.l, y.l, colour.b
BDChunkyLib.obj(010):016 NCPointA ( *AddrNChunky.l, x.l, y.l )
BDChunkyLib.obj(010):017 NCBoxFA *AddrNChunky.l ,x1.l ,y1.l ,x2.l ,y2.l ,colour.b
BDChunkyLib.obj(010):018 NCBoxA *AddrNChunky.l ,x1.l ,y1.l ,x2.l ,y2.l ,colour.b
BDChunkyLib.obj(010):019 CopyNChunkyA *AddrNChunkySrc.l ,*AddrNChunkyDest.l
BDChunkyLib.obj(010):020 NCClsA *AddrNChunky.l ,colour.b
BDChunkyLib.obj(010):021 RemapNChunkyLineA *AddrNChunky.l ,y.l ,&RemapTable.l
BDChunkyLib.obj(010):022 RemapNChunkyLine NChunky# ,y.l ,&RemapTable.l
BDChunkyLib.obj(010):023 RemapNChunkyPointA *AddrNChunky.l ,x, y.l ,&RemapTable.l
BDChunkyLib.obj(010):024 RemapNChunkyPoint NChunky# ,x.l ,y.l ,&RemapTable.l
Ricopperfxlib.obj(011):001 DoColSplit cols_adr,numlines,colour_register
Ricopperfxlib.obj(011):002 RedoColSplit cols_adr,numlines,ccoffset
Ricopperfxlib.obj(011):003 CopperReset coplist#,startline[,ccoffset]
Ricopperfxlib.obj(011):004 CopperEnd 
Ricopperfxlib.obj(011):005 CopperInfoBlock 
Ricopperfxlib.obj(011):006 CopperCommand copins1,copins2
Ricopperfxlib.obj(011):007 CopperMove register,value
Ricopperfxlib.obj(011):008 CopperWait x,y
Ricopperfxlib.obj(011):009 CopperSkip x,y
Ricopperfxlib.obj(011):010 GetCCOffset - get current custom copper offset
Ricopperfxlib.obj(011):011 CopperAGACol col#,r,g,b
Ricopperfxlib.obj(011):012 CopperResetAdr coplist#,startline
Ricopperfxlib.obj(011):013 ColSplitBplcon3 bplcon3 - low byte of bplcon 3
Risortlib.obj(013):001 StringSort list,sizeof.type[,offset] - sort from start of list
Risortlib.obj(013):002 ListBase (list)
Risortlib.obj(013):003 StringSortItem list,sizeof.type[,offset] - sort from current list item
Risortlib.obj(013):004 StringSortDir direction
Ricompactdisklib.obj(014):001 OpenCD [devicename,unit] - open a CD compatible device
Ricompactdisklib.obj(014):002 CloseCD 
Ricompactdisklib.obj(014):003 CDDoor on/off
Ricompactdisklib.obj(014):004 CDPlayTrack track#,numtracks
Ricompactdisklib.obj(014):005 CDReadTOC 
Ricompactdisklib.obj(014):006 CDStatus 
Ricompactdisklib.obj(014):007 CDStop 
Ricompactdisklib.obj(014):008 CDVolume volume,lengthoffade
Ricompactdisklib.obj(014):009 CDNumTracks 
Ricompactdisklib.obj(014):010 CDFirstTrack 
Ricompactdisklib.obj(014):011 CDLastTrack 
Ricompactdisklib.obj(014):012 CDTrackLength track#
Ricompactdisklib.obj(014):013 CDUpdateInfo - update track playing/time information
Ricompactdisklib.obj(014):014 CDFlush 
Ricompactdisklib.obj(014):015 CDPause on/off
Ricompactdisklib.obj(014):016 CDRewind 
Ricompactdisklib.obj(014):017 CDFastForward 
Ricompactdisklib.obj(014):018 CDNormalSpeed 
Ricompactdisklib.obj(014):019 CDSpeed speed
Ricompactdisklib.obj(014):020 CDTrackMins [offset] - mins for current track
Ricompactdisklib.obj(014):021 CDTrackSecs [offset] - secs for current track
Ricompactdisklib.obj(014):022 CDTrackPlaying - current track being played
Mildred.obj(015):001 MWrapXParticles CoordinateList.l,NumPoints.l ; Bring particles in from left/right edges (Not Ptr.l)
Mildred.obj(015):002 MWrapYParticles CoordinateList.l,NumPoints.l ; Bring particles in from top/bottom edges
Mildred.obj(015):003 MAddToXParticles CoordinateList.l,NumPoints.l,IncA.l[,IncB.l] ; Add X components of [two sets of] increments
Mildred.obj(015):004 MAddToYParticles CoordinateList.l,NumPoints.l,IncA.l[,IncB.l] ; Add Y components of [two sets of] increments
Mildred.obj(015):005 MAddMode ; Returns value 7 which represents `add' mode in the blit modes
Mildred.obj(015):006 Mc2pCPUmode CPU.b ; Set cpu c2p uses. Use `MProcessor' or `Processor'. <4=030-, >3=040+
Mildred.obj(015):007 Mc2pWindow c2pWindow#.w,OpWidth.w,OpHeight.w[,SourceBWidth.w[,Processor.b],PlanarWidth.w,PlanarHeight.w]
Mildred.obj(015):008 Mc2pWindowWidth [(c2pWindowNumber.w)] ; Returns width of c2pWindow
Mildred.obj(015):009 Mc2pWindowHeight [(c2pWindowNumber.w)] ; Returns height of c2pWindow
Mildred.obj(015):010 Mc2pWindowNewHeight c2pWindow#.w,NewHeight.w ; Change height of already defined c2p object
Mildred.obj(015):011 Mc2p [[c2pWindow#.w],Chunky.l],Planar.l ; Convert chunky to planar (Use Mc2pWindow first)
Mildred.obj(015):012 MReservec2pWindows [(]NumberOfWindows.w[)] ; Reserve structure-memory for c2pWindows
Mildred.obj(015):013 MReserveShapes [(]NumberOfShapes.w[,ShapeBankToUse.w][)] ; Reserve structure-memory for Shapes
Mildred.obj(015):014 MReserveBitmaps [(]NumberOfBitmaps.w[)] ; Reserve structure-memory for Bitmaps
Mildred.obj(015):015 MShape [(]ShapeNumber.w,Width.w,Height.w[)] ; Allocmem for shape data
Mildred.obj(015):016 MBitmap [(]BitmapNumber.w,Width.w,Height.w[)] ; Allocmem for bitmap data
Mildred.obj(015):017 MAutoCookie On/Off ; Autocreation of ByteForByte cookies
Mildred.obj(015):018 MAutoStencil On/Off ; Autocreation of ByteForByte stencils
Mildred.obj(015):019 MFreec2pWindow [Firstc2pWindow.w[,Lastc2pWindow.w]] ; Free a c2pWindow, range of c2pWindows or all c2pWindows
Mildred.obj(015):020 MFreeShape [FirstShape.w[,LastShape.w]] ; Free a Shape, range of shapes, or all shapes
Mildred.obj(015):021 MFreeBitmap [FirstBitmap.w[,LastBitmap.w]] ; Free a Bitmap, range of bitmaps, or all bitmaps
Mildred.obj(015):022 MShapeWidth [(ShapeNumber.w)] ; Returns width of Shape
Mildred.obj(015):023 MBitmapWidth [(BitmapNumber.w)] ; Returns width of Bitmap
Mildred.obj(015):024 MShapeHeight [(ShapeNumber.w)] ; Returns height of Shape
Mildred.obj(015):025 MBitmapHeight [(BitmapNumber.w)] ; Returns height of Bitmap
Mildred.obj(015):026 MAddrc2pWindow [(c2pWindowNumer.w)] ; Returns address of c2pWindow structure
Mildred.obj(015):027 MAddrShape [(ShapeNumber.w)] ; Returns address of Shape structure
Mildred.obj(015):028 MAddrBitmap [(BitmapNumber.w)] ; Returns address of Bitmap structure
Mildred.obj(015):029 MHandle ShapeNumber.w,XOffset.w,YOffset.w ; Set handle of Shape
Mildred.obj(015):030 MBitmapOrigin BitmapNumber.w,XOffset.w,YOffset.w ; Set origin of Bitmap
Mildred.obj(015):031 MUsec2pWindow Mainc2pWindowNum.w[,Secondc2pWindowNum.w[,Thirdc2pWindowNum.w]] ; Current to use
Mildred.obj(015):032 MUseShape MainShapeNum.w[,SecondShapeNum.w[,ThirdShapeNum.w]] ; Current Shape(s) to use
Mildred.obj(015):033 MUseBitmap MainBitmapNum.w[,SecondBitmapNum.w[,ThirdBitmapNum.w]] ; Current Bitmap(s) to use
Mildred.obj(015):034 MUsedc2pWindow  ; Returns currently used c2pWindow
Mildred.obj(015):035 MUsedShape  ; Returns currently used Shape
Mildred.obj(015):036 MUsedBitmap  ; Returns currently used Bitmap
Mildred.obj(015):037 MCludgeShape ShapeNumber.w,Width.w,Height.w,Memory.l ; Cludge shape from existing mem
Mildred.obj(015):038 MCludgeBitmap BitmapNumber.w,Width.w,Height.w,Memory.l ; Cludge bitmap from existing mem
Mildred.obj(015):039 MAutoUsec2pWindows True/False ; Automatically `use' new c2pWindows. <>0=True
Mildred.obj(015):040 MAutoUseShapes True/False ; Automatically `use' new shapes. <>0=True
Mildred.obj(015):041 MAutoUseBitmaps True/False ; Automatically `use' new bitmaps. <>0=True
Mildred.obj(015):042 MMakeCookie [FirstShape.w[,LastShape.w]] ; Make a cookie for a shape, range of shapes, or all shapes
Mildred.obj(015):043 MMakeStencil [FirstBitmap.w[,LastBitmap.w]] ; Make a stencil for a bitmap, range of bitmaps, or all bitmaps
Mildred.obj(015):044 MFreeCookie [FirstShape.w[,LastShape.w]] ; Free a Shape's cookie, a range of Shape's cookies, or all cookies
Mildred.obj(015):045 MFreeStencil [FirstBitmap.w[,LastBitmap.w]] ; Free's a Bitmap's stencil, a range of stencils or all stencils
Mildred.obj(015):046 MAutoShapeWrap On/Off ; Auto X&Y Handle-wrapping for Shapes
Mildred.obj(015):047 MAutoBitmapWrap On/Off ; Auto X&Y Handle-Wrapingp for Bitmaps
Mildred.obj(015):048 MShapeWrap ShapeNumber.w,On/Off ; De/Activate X&Y Handle-Wrap for Shape
Mildred.obj(015):049 MBitmapWrap BitmapNumber.w,On/Off ; De/Activate X&Y Handle-Wrap for Bitmap
Mildred.obj(015):050 MCludgeShapeStruct [(]SourceShape.w,DestShape.w[)] ; Copy definition-data only
Mildred.obj(015):051 MCludgeBitmapStruct [(]SourceBitmap.w,DestBitmap.w[)] ; Copy definition-data only
Mildred.obj(015):052 MCopyc2pWindow Sourcec2pWindow.w,Destc2pWindow.w ; Copy definition-data only
Mildred.obj(015):053 MShapeWindow [(]SourceShape.w,DestShape.w,X.w,Y.w,Width.w,Height.w[)] ; Cludge Shape within a Shape
Mildred.obj(015):054 MBitmapWindow [(]SourceBitmap.w,DestBitmap.w,X.w,Y.w,Width.w,Height.w[)] ; Cludge Bitmap within a Bitmap
Mildred.obj(015):055 MBitmapShape [(]SourceBitmap.w,DestShape.w[)] ; Copy definition-data only
Mildred.obj(015):056 MShapesBitmap [(]SourceShape.w,DestBitmap.w[)] ; Copy definition-data only
Mildred.obj(015):057 MAutoCookieXFlip On/Off ; Auto X-Flip for Shape's cookie
Mildred.obj(015):058 MAutoCookieYFlip On/Off ; Auto Y-Flip for Shape's cookie
Mildred.obj(015):059 MAutoStencilXFlip On/Off ; Auto X-Flip for Bitmap's stencil
Mildred.obj(015):060 MAutoStencilYFlip On/Off ; Auto Y-Flip for Bitmap's stencil
Mildred.obj(015):061 MAutoCookieFlip On/Off ; Auto X&Y Cookie-Flip for Shapes
Mildred.obj(015):062 MAutoStencilFlip On/Off ; Auto X&Y Stencil-Flip for Bitmaps
Mildred.obj(015):063 MShapeXFlip ShapeNumber.w ; Horizontally flip a Shape (see MAutoCookieFlip)
Mildred.obj(015):064 MShapeYFlip ShapeNumber.w ; Vertically flip a Shape (see MAutoCookieFlip)
Mildred.obj(015):065 MBitmapXFlip BitmapNumber.w ; Horizontally flip a Bitmap (see MAutoStencilFlip)
Mildred.obj(015):066 MBitmapYFlip BitmapNumber.w ; Vertically flip a Bitmap (see MAutoStencilFlip)
Mildred.obj(015):067 MCookieXFlip ShapeNumber.w ; Horizontally flip a Shape's cookie
Mildred.obj(015):068 MCookieYFlip ShapeNumber.w ; Vertically flip a Shape's cookie
Mildred.obj(015):069 MStencilXFlip BitmapNumber.w ; Horizontally flip a Bitmap's stencil
Mildred.obj(015):070 MStencilYFlip BitmapNumber.w ; Vertically flip a Bitmap's stencil
Mildred.obj(015):071 MAutoShapeClip Status.b ; Auto-clip new Shapes. On/Off
Mildred.obj(015):072 MAutoBitmapClip Status.b ; Auto-clip new Bitmaps. On/Off
Mildred.obj(015):073 MShapeClip ShapeNumber.w[,X.w,Y.w,Width.w,Height.w][,Active] ; Active=On/Off. Define Shape's clip window
Mildred.obj(015):074 MBitmapClip BitmapNumber.w[,X.w,Y.w,Width.w,Height.w][,Active] ; Active=On/Off. Define Bitmap's clip window
Mildred.obj(015):075 MGetaShape ShapeNumber.w,X.w,Y.w,Width.w,Height.w[,Block?,StencilIsCookie?] ; Grab shape from bitmap
Mildred.obj(015):076 MGetaBitmap BitmapNumber.w,X.w,Y.w,Width.w,Height.w[,Block?,CookieIsStencil?] ; Grab bitmap from shape
Mildred.obj(015):077 MScroll X1.w,Y1.w,Width.w,Height.w,X2.w,Y2.w[,SourceBitmapNum.w[,CustomOffsets.l]] ; Copy graphic
Mildred.obj(015):078 MScrollShape X1.w,Y1.w,Width.w,Height.w,X2.w,Y2.w[,SourceShapeNum.w[,CustomOffsets.l]] ; Copy graphic
Mildred.obj(015):079 MScrollStencil X1.w,Y1.w,Width.w,Height.w,X2.w,Y2.w[,SourceBitmapNum.w[,CustomOffsets.l]] ; Copy sten to sten
Mildred.obj(015):080 MScrollCookie X1.w,Y1.w,Width.w,Height.w,X2.w,Y2.w[,SourceShapeNum.w[,CustomOffsets.l]] ;Copy cook to cook
Mildred.obj(015):081 MMaskScroll X1.w,Y1.w,Width.w,Height.w,X2.w,Y2.w[,SourceBitmapNum.w] ; Copy bitmap graphic with stencil-cut
Mildred.obj(015):082 MMaskScrollShape X1.w,Y1.w,Width.w,Height.w,X2.w,Y2.w[,SourceShapeNum.w] ; Copy shape graphic with cookie-cut
Mildred.obj(015):083 MMaskScrollStencil X1.w,Y1.w,Width.w,Height.w,X2.w,Y2.w[,SourceBitmapNum.w];Copy stencil2stencil & stencil-cut
Mildred.obj(015):084 MMaskScrollCookie X1.w,Y1.w,Width.w,Height.w,X2.w,Y2.w[,SourceShapeNum.w] ; Copy cookie to cookie & cookie-cut
Mildred.obj(015):085 MScrollBitmapToShape X1.w,Y1.w,Width.w,Height.w,X2.w,Y2.w[,SourceBitmapNum.w[,CustomOffsets.l]];bitmap 2 shape
Mildred.obj(015):086 MScrollShapeToBitmap X1.w,Y1.w,Width.w,Height.w,X2.w,Y2.w[,SourceShapeNum.w[,CustomOffsets.l]] ;shape 2 bitmap
Mildred.obj(015):087 MScrollStencilToCookie X1.w,Y1.w,Width.w,Height.w,X2.w,Y2.w[,SourceBitmapNum.w[,CustomOffsets.l]]; sten2cookie
Mildred.obj(015):088 MScrollCookieToStencil X1.w,Y1.w,Width.w,Height.w,X2.w,Y2.w[,SourceShapeNum.w[,CustomOffsets.l]] ; cookie2sten
Mildred.obj(015):089 MMaskScrollBitmapToShape X1.w,Y1.w,Width.w,Height.w,X2.w,Y2.w[,SourceBitmapNum.w] ; Copy bitmap to shape & cut
Mildred.obj(015):090 MMaskScrollShapeToBitmap X1.w,Y1.w,Width.w,Height.w,X2.w,Y2.w[,SourceShapeNum.w] ; Copy shape to bitmap & cut
Mildred.obj(015):091 MMaskScrollStencilToCookie X1.w,Y1.w,Width.w,Height.w,X2.w,Y2.w[,SourceBitmapNum.w] ;Copy stencil2cookie & cut
Mildred.obj(015):092 MMaskScrollCookieToStencil X1.w,Y1.w,Width.w,Height.w,X2.w,Y2.w[,SourceShapeNum.w] ; Copy cookie2stencil & cut
Mildred.obj(015):093 MBlockScroll X1.w,Y1.w,Width.w,Height.w,X2.w,Y2.w[,SourceBitmapNum.w] ; BlockCopy graphic
Mildred.obj(015):094 MBlockScrollShape X1.w,Y1.w,Width.w,Height.w,X2.w,Y2.w[,SourceShapeNum.w] ; BlockCopy graphic
Mildred.obj(015):095 MBlockScrollStencil X1.w,Y1.w,Width.w,Height.w,X2.w,Y2.w[,SourceBitmapNum.w] ; BlockCopy stencil to stencil
Mildred.obj(015):096 MBlockScrollCookie X1.w,Y1.w,Width.w,Height.w,X2.w,Y2.w[,SourceShapeNum.w] ; BlockCopy cookie to cookie
Mildred.obj(015):097 MBlockScrollBitmapToShape X1.w,Y1.w,Width.w,Height.w,X2.w,Y2.w[,SourceBitmapNum.w] ; BlockCopy bitmap to shape
Mildred.obj(015):098 MBlockScrollShapeToBitmap X1.w,Y1.w,Width.w,Height.w,X2.w,Y2.w[,SourceShapeNum.w] ; BlockCopy shape to bitmap
Mildred.obj(015):099 MBlockScrollStencilToCookie X1.w,Y1.w,Width.w,Height.w,X2.w,Y2.w[,SourceBitmapNum.w];BlockCopy stencil2cookie
Mildred.obj(015):100 MBlockScrollCookieToStencil X1.w,Y1.w,Width.w,Height.w,X2.w,Y2.w[,SourceShapeNum.w] ; BlockCopy cookie2stencil
Mildred.obj(015):101 MCPU Processor.b ; Set cpu routines allowed to use. CAREFUL!! Try using `MProcessor' or `Processor'
Mildred.obj(015):102 MCls [Colour] Clear a bitmap to colour 0 or the specified colour (in DrawingMode)
Mildred.obj(015):103 MClsShape [Colour] Clear a shape to colour 0 or the specified colour (in DrawingMode)
Mildred.obj(015):104 MClsStencil [Colour] Clear a stencil to colour 0 or the specified colour (in DrawingMode)
Mildred.obj(015):105 MClsCookie [Colour] Clear a cookie to colour 0 or the specified colour (in DrawingMode)
Mildred.obj(015):106 MPlot Xpos.w,Ypos.w[,Colour] ; Plot a single pixel in the bitmap in DrawingMode 
Mildred.obj(015):107 MPlotShape Xpos.w,Ypos.w[,Colour] ; Plot a single pixel in the shape in DrawingMode
Mildred.obj(015):108 MPlotStencil Xpos.w,Ypos.w[,Colour] ;Plot a single pixel in the stencil to *represent* DrawingMode
Mildred.obj(015):109 MPlotCookie Xpos.w,Ypos.w[,Colour] ; Plot a single pixel in the cookie to *represent* DrawingMode
Mildred.obj(015):110 MPoint (Xpos.w,Ypos.w[,BitmapToRead.w]) ; Return the colour of a single pixel in a bitmap
Mildred.obj(015):111 MPointShape (Xpos.w,Ypos.w[,ShapeToRead.w]) ; Return the colour of a single pixel in a shape
Mildred.obj(015):112 MPointStencil (Xpos.w,Ypos.w[,BitmapToRead.w]) ;Return the status of a pixel in stencil. -1=Data, 0=Background
Mildred.obj(015):113 MPointCookie (Xpos.w,Ypos.w[,ShapeToRead.w]) ; Return the status of a pixel in cookie. -1=Data, 0=Background
Mildred.obj(015):114 MSScroll X1.w,Y1.w,Width.w,Height.w,X2.w,Y2.w[,SourceBitmapNum.w[,CustomOffsets.l]] ; Copy bm 2 bm and st 2 st
Mildred.obj(015):115 MSScrollShape X1.w,Y1.w,Width.w,Height.w,X2.w,Y2.w[,SourceShapeNum.w[,CustomOffsets.l]] ; Copy sh2sh and ck2ck
Mildred.obj(015):116 MSScrollBitmapToShape X1.w,Y1.w,Width.w,Height.w,X2.w,Y2.w[,SourceBitmapNum.w[,CustomOffsets.l]];bm2shandst2ck
Mildred.obj(015):117 MSScrollShapeToBitmap X1.w,Y1.w,Width.w,Height.w,X2.w,Y2.w[,SourceShapeNum.w[,CustomOffsets.l]]; sh2bmandck2st
Mildred.obj(015):118 MSMaskScroll X1.w,Y1.w,Width.w,Height.w,X2.w,Y2.w[,SourceBitmapNum.w] ; Stencil-Copy bm 2 bm and st 2 st
Mildred.obj(015):119 MSMaskScrollShape X1.w,Y1.w,Width.w,Height.w,X2.w,Y2.w[,SourceShapeNum.w] ; Cookie-Copy sh2sh and ck2ck
Mildred.obj(015):120 MSMaskScrollBitmapToShape X1.w,Y1.w,Width.w,Height.w,X2.w,Y2.w[,SourceBitmapNum.w] ;Sten-Copy bm2sh&st2ck
Mildred.obj(015):121 MSMaskScrollShapeToBitmap X1.w,Y1.w,Width.w,Height.w,X2.w,Y2.w[,SourceShapeNum.w] ; Cook-Copy sh2bm&ck2st
Mildred.obj(015):122 MSBlockScroll X1.w,Y1.w,Width.w,Height.w,X2.w,Y2.w[,SourceBitmapNum.w] ; Block-Copy bm 2 bm and st 2 st
Mildred.obj(015):123 MSBlockScrollShape X1.w,Y1.w,Width.w,Height.w,X2.w,Y2.w[,SourceShapeNum.w] ; Block-Copy sh2sh and ck2ck
Mildred.obj(015):124 MSBlockScrollBitmapToShape X1.w,Y1.w,Width.w,Height.w,X2.w,Y2.w[,SourceBitmapNum.w];BlockCopy bm2sh&st2ck
Mildred.obj(015):125 MSBlockScrollShapeToBitmap X1.w,Y1.w,Width.w,Height.w,X2.w,Y2.w[,SourceShapeNum.w];BlockCopy sh2bm&ck2st
Mildred.obj(015):126 MSScrollCut On/Off ; 0=Paste stencil/cookie, <>0=Cut using stencil/cookie
Mildred.obj(015):127 MUseShapeBank BankNumber.w ; Current shape bank, 0..31
Ristonecrackerlib.obj(017):001 STCLength address   -- returns unpacked size
Ristonecrackerlib.obj(017):002 STCStart address   -- returns address of unpacked data
Ristonecrackerlib.obj(017):003 STCSafeLen address   -- safe unpack buffer size
Ristonecrackerlib.obj(017):004 STCLoad filename$,address
Ristcdecrunchlib.obj(018):001 STCDecrunch source[,dest]
agl.library(019):001 Stormmesa 
agl.library(019):002 AmigaMesaCreateContext_ amesa_context= (tagListptr)
agl.library(019):003 AmigaMesaDestroyContext_ amesa_context
agl.library(019):004 glClearColor_ red,green,blue,alpha
agl.library(019):005 glShadeModel_ GL_FLAT or GL_SMOOTH
agl.library(019):006 glEnable_ tag
agl.library(019):007 glDisable_ tag
agl.library(019):008 glClearDepth_ depth
agl.library(019):009 glDepthFunc_ tag  ;example:GL_LEQUAL
agl.library(019):010 glLoadIdentity_   ;Reset the Matrix
agl.library(019):011 glTranslatef_  x,y,z
agl.library(019):012 glScalef_  x,y,z
agl.library(019):013 glRotatef_ angle,x,y,z
agl.library(019):014 glClear_ bitfield ;GL_COLOR_BUFFER_BIT | GL_DEPTH_BUFFER_BIT
agl.library(019):015 glBindTexture_ target,texturenum ;target example GL_TEXTURE_2D
agl.library(019):016 glBegin_ mode ;GL_TRIANGLE or GL_QUAD
agl.library(019):017 glEnd_  ;end a glBegin
agl.library(019):018 glTexCoord2f_ s,t
agl.library(019):019 glVertex3f_ x,y,z
agl.library(019):020 glViewport_ x,y,width,height
agl.library(019):021 glMatrixMode_ mode ;GL_PROJECTION or GL_MODELVIEW
agl.library(019):022 gluPerspective_ fovy,aspect,znear,zfar
agl.library(019):023 glColor3b_ red,green,blue
agl.library(019):024 AmigaMesaSwapBuffers_ mesacontext
agl.library(019):025 AmigaMesaMakeCurrent_ mesacontext,buffer
agl.library(019):026 glTexParameteri_ target,pname,param
agl.library(019):027 glTexGeni_ coord,pname,param
agl.library(019):028 glTexEnvi_ target,pname,param
agl.library(019):029 glHint_ target,mode
agl.library(019):030 glMaterialfv_ face,pname,ptrparams
agl.library(019):031 glLightfv_ light,pname,ptrparams
agl.library(019):032 glGenTextures_ # of texture to create,addr of texture name array
agl.library(019):033 gluBuild2DMipmaps_ # of texture to create,addr of texture name array
agl.library(019):034 glDeleteTextures_ # of texture to delete,addr of texture name array
agl.library(019):035 glTexEnvf_ target,pname,param; set texture parameters in float
agl.library(019):036 glColor4f_ red,green,blue,alpha; pars in float 0-1
agl.library(019):037 glColor4i_ red,green,blue,alpha; pars in int 0-255
agl.library(019):038 glPushMatrix_ 
agl.library(019):039 glPopMatrix_ 
agl.library(019):040 glOrtho_ left,right,bottom,top,near_val,far_val)
agl.library(019):041 glTexImage2D_ target,level,components,width,height,border,format,type,ptr_pixels)
agl.library(019):042 gluLookAt_ eyex,eyey,eyez,centerx,centery,centerz,upx,upy,upz)
agl.library(019):043 glNormal3f_ x,y,z
agl.library(019):044 glVertex2f_ x,y
agl.library(019):045 glCopyTexImage2D_ target,level,internalformat,x,y,size,width,border)
agl.library(019):046 glBlendFunc_ 
agl.library(019):047 glFlush_ 
agl.library(019):048 glMateriali_ 
agl.library(019):049 glLightModelfv_ 
agl.library(019):050 glLightf_ 
agl.library(019):051 gluNewQuadric_ Make a handle for a new quadric
agl.library(019):052 gluDeleteQuadric_ *quadric_ptr
agl.library(019):053 gluSphere_ *quadric_ptr,size,slices,stacks
agl.library(019):054 glNewList_ listnum,mode ;mode=#GL_COMPILE
agl.library(019):055 glEndList_ 
agl.library(019):056 glDeleteLists_ listnum,range; range >1 for more than 1 list to delete
agl.library(019):057 glCallList_ listnum ; draw the list
agl.library(019):058 gluQuadricTexture_ *quadric_ptr,mode;mode 1= on 0= off
agl.library(019):059 gluCylinder_ *quadric_ptr,baseradius,topradius,height,slices,stacks
agl.library(019):060 gluDisk_ *quadric_ptr,innerradius,outerradius,slices,stacks
agl.library(019):061 glFogi_ pname,param
agl.library(019):062 glFogf_ pname,float param
agl.library(019):063 glFogfv_ pname,pointer to float array
agl.library(019):064 glLightModeli_ pname,value in int ;#GL_LIGHT_MODEL_TWO_SIDE
agl.library(019):065 glFrontFace_ value; #GL_CCW 
LotanString.obj(022):001 StrLen (Str)|(Addr)
LotanString.obj(022):002 StrLeft (Str,Len[,Pad])
LotanString.obj(022):003 StrRight (Str,Len[,Pad])
LotanString.obj(022):004 StrUpper (Str)
LotanString.obj(022):005 StrLower (Str)
LotanString.obj(022):006 StrFlip (Str)
LotanString.obj(022):007 StrPack (Str[,Table])
LotanString.obj(022):008 StrClone (Str,Num)
LotanString.obj(022):009 StrRange (Start[,End]) - Returns all characters between Start and END
LotanString.obj(022):010 StrChg (Str,OldStr,NewStr) - Replace all OldStr by NewStr in Str
LotanString.obj(022):011 StrSub (Str,Pos[,Len[,Pad]]) - Returns a sub-string in Str
LotanString.obj(022):012 StrTrans (Str,OutTable,InTable[,Pad])
Rwemathlib.obj(023):001 UPeek (ad.l); returns a word equal to unsigned value of byte at ad
Rwemathlib.obj(023):002 DotProduct &N.Vector_Type,&L.Vector_Type
Rwemathlib.obj(023):003 ApplyMatrix &M.Matrix_Type,&V.Vector_Type,&R.Vector_Type
Rwemathlib.obj(023):004 VectorMagnitude (&V.Vector_Type) returns quick
Rwemathlib.obj(023):005 VectorAngle (&N.Vector_Type,&L.Vector_Type), returns quick
Rwemathlib.obj(023):006 UnitVector &N.Vector_Type
Rwemathlib.obj(023):007 CrossProduct &N.Vector_Type,&L.Vector_Type,&Result.Vector_Type
Rwemathlib.obj(023):008 SubtractVectors &N.Vector_Type,&L.Vector_Type,&Result.Vector_Type
Rwemathlib.obj(023):009 MakeVector x.w,y.w,z.w,&V.Vector_Type
Rwemathlib.obj(023):010 DepthSort &Index.q,&Assoc1.l,&Assoc2.l,items.l
Rwemathlib.obj(023):011 ShellSort &array.l,items.l
Rwemathlib.obj(023):012 QMULS (v1.q,v2.q) Fast 020 quick multiply
Rwemathlib.obj(023):013 FastApply &M.Matrix_Type,&V.Vector_Type,&R.Vector_Type
Rwemathlib.obj(023):014 FastVectorAngle (&N.Vector_Type,&L.Vector_Type), returns quick
Rwemathlib.obj(023):015 FastUnitVector &N.Vector_Type
Rwemathlib.obj(023):016 ShellDepthSort &array.l,items.l
Rwemathlib.obj(023):017 CInitDraw Addr Chunky Object.l
Rwemathlib.obj(023):018 CHLine x1,x2,y,c.b
Rwemathlib.obj(023):019 CDrawDone 
Rwemathlib.obj(023):020 CLine x1,y1,x2,y2,c
Rwemathlib.obj(023):021 CCls colour mask
Rwemathlib.obj(023):022 CVirtualBuffers RWE PRIVATE
Rwemathlib.obj(023):023 CTriangle &pointlist,color.b
Rwemathlib.obj(023):024 CTrianglef &pointlist,color.b
Ridatatypeslib.obj(025):001 DataTypeOpen filename$
Ridatatypeslib.obj(025):002 DataTypeClose 
Ridatatypeslib.obj(025):003 DataTypeName 
Ridatatypeslib.obj(025):004 DataTypeBaseName 
Ridatatypeslib.obj(025):005 DataTypeID 
Ridatatypeslib.obj(025):006 DataTypeCreate [&taglist]
Ridatatypeslib.obj(025):007 AttachDataType window,id[,x,y,width,height] | window,id,&taglist
Ridatatypeslib.obj(025):008 DetachDataType 
Ridatatypeslib.obj(025):009 DataTypeSuper 
Ridatatypeslib.obj(025):010 DataTypeBitmap 
Ridatatypeslib.obj(025):011 DataTypesPalette palette#
Ridatatypeslib.obj(025):012 DataTypeWidth 
Ridatatypeslib.obj(025):013 DataTypeHeight 
Ridatatypeslib.obj(025):014 DataTypeDepth 
Ridatatypeslib.obj(025):015 DataTypeReady 
Ridatatypeslib.obj(025):016 SetDataTypeAttr &taglist / attr,data[,attr,data..]
Ridatatypeslib.obj(025):017 GetDataTypeAttr attribute
Ridatatypeslib.obj(025):018 DataTypeModeID [taglist]]
Ridatatypeslib.obj(025):019 DataTypeGroup 
bsdsocket.library1(026):001 socket_ (domain, type, protocol)
bsdsocket.library1(026):002 bind_ (s, name, namelen)
bsdsocket.library1(026):003 listen_ (s, backlog)
bsdsocket.library1(026):004 accept_ (s, addr, addrlen)
bsdsocket.library1(026):005 connect_ (s, name, namelen)
bsdsocket.library1(026):006 sendto_ (s, msg, len, flags, to, tolen)
bsdsocket.library1(026):007 send_ (s, msg, len, flags)
bsdsocket.library1(026):008 recvfrom_ (s, buf, len, flags, from, fromlen)
bsdsocket.library1(026):009 recv_ (s, buf, len, flags)
bsdsocket.library1(026):010 shutdown_ (s, how)
bsdsocket.library1(026):011 setsockopt_ (s, level, optname, optval, optlen)
bsdsocket.library1(026):012 getsockopt_ (s, level, optname, optval, optlen)
bsdsocket.library1(026):013 getsockname_ (s, hostname, namelen)
bsdsocket.library1(026):014 getpeername_ (s, hostname, namelen)
bsdsocket.library1(026):015 IoctlSocket_ (d, request, argp)
bsdsocket.library1(026):016 CloseSocket_ (d)
bsdsocket.library1(026):017 WaitSelect_ (nfds, readfds, writefds, execptfds, timeout, maskp)
bsdsocket.library1(026):018 SetSocketSignals_ (SIGINTR, SIGIO, SIGURG)
bsdsocket.library1(026):019 getdtablesize_ 
bsdsocket.library1(026):020 ObtainSocket_ (id, domain, type, protocol)
bsdsocket.library1(026):021 ReleaseSocket_ (fd, id)
bsdsocket.library1(026):022 ReleaseCopyOfSocket_ (fd, id)
bsdsocket.library1(026):023 Errno_ 
bsdsocket.library1(026):024 SetErrnoPtr_ (errno_p, size)
bsdsocket.library1(026):025 Inet_NtoA_ (in)
bsdsocket.library1(026):026 inet_addr_ (cp)
bsdsocket.library1(026):027 Inet_LnaOf_ (in)
bsdsocket.library1(026):028 Inet_NetOf_ (in)
bsdsocket.library1(026):029 Inet_MakeAddr_ (net, host)
bsdsocket.library1(026):030 inet_network_ (cp)
bsdsocket.library1(026):031 gethostbyname_ (name)
bsdsocket.library1(026):032 gethostbyaddr_ (addr, len, type)
bsdsocket.library1(026):033 getnetbyname_ (name)
bsdsocket.library1(026):034 getnetbyaddr_ (net, type)
bsdsocket.library1(026):035 getservbyname_ (name, proto)
bsdsocket.library1(026):036 getservbyport_ (port, proto)
bsdsocket.library1(026):037 getprotobyname_ (name)
bsdsocket.library1(026):038 getprotobynumber_ (proto)
bsdsocket.library1(026):039 vsyslog_ (level, format, ap)
bsdsocket.library1(026):040 Dup2Socket_ (fd1, fd2)
bsdsocket.library1(026):041 sendmsg_ (s, msg, flags)
bsdsocket.library1(026):042 recvmsg_ (s, msg, flags)
bsdsocket.library1(026):043 gethostname_ (hostname, size)
bsdsocket.library1(026):044 gethostid_ 
bsdsocket.library1(026):045 SocketBaseTagList_ (taglist)
bsdsocket.library1(026):046 GetSocketEvents_ (eventmaskp)
RILVCallHook.obj(027):001 RetrieveCallHook 
ttengine.library1(028):001 TT_OpenFontA_ (taglist)
ttengine.library1(028):002 TT_SetFont_ (rp,font)
ttengine.library1(028):003 TT_CloseFont_ (font)
ttengine.library1(028):004 TT_Text_ (rp,string,count 
ttengine.library1(028):005 TT_SetAttrsA_ (rp,taglist)
ttengine.library1(028):006 TT_GetAttrsA_ (rp,taglist)
ttengine.library1(028):007 TT_TextLength_ (rp,string,count)
ttengine.library1(028):008 TT_TextExtent_ (rp,string,count,te)
ttengine.library1(028):009 TT_TextFit_ (rp,string,count,te,tec,dir,cwidth,cheight)
ttengine.library1(028):010 TT_GetPixmapA_ (font,string,count,taglist)
ttengine.library1(028):011 TT_FreePixmap_ (pixmap)
ttengine.library1(028):012 TT_DoneRastPort_ (rp)
ttengine.library1(028):013 TT_AllocRequest_ 
ttengine.library1(028):014 TT_RequestA_ (request,taglist)
ttengine.library1(028):015 TT_Request_ (request,tag1)
ttengine.library1(028):016 TT_FreeRequest_ (request)
zlib.library1(029):001 GZ_Open_ (filename,openmode,strategy,level)
zlib.library1(029):002 GZ_OpenFromFH_ (fh,openmode,strategy,level)
zlib.library1(029):003 GZ_Close_ (handle)
zlib.library1(029):004 GZ_Read_ (handle,buf,len)
zlib.library1(029):005 GZ_FGetS_ (handle,buf,len)
zlib.library1(029):006 GZ_FGetC_ (handle)
zlib.library1(029):007 GZ_Write_ (handle,buf,len)
zlib.library1(029):008 PPCGZ_Open_ 
zlib.library1(029):009 PPCGZ_OpenFromFH_ 
zlib.library1(029):010 PPCGZ_Close_ 
zlib.library1(029):011 PPCGZ_Read_ 
zlib.library1(029):012 PPCGZ_FGetS_ 
zlib.library1(029):013 PPCGZ_FGetC_ 
zlib.library1(029):014 PPCGZ_Write_ 
zlib.library1(029):015 GZ_CompressMem_ (srcbuf,srclen,destbuf,destlen,strategy,level,poutlen)
zlib.library1(029):016 GZ_DecompressMem_ (srcbuf,srclen,destbuf,destlen)
zlib.library1(029):017 PPCGZ_CompressMem_ 
zlib.library1(029):018 PPCGZ_DecompressMem_ 
zlib.library1(029):019 GZ_FileLength_ (handle)
zlib.library1(029):020 PPCGZ_FileLength_ 
asyncio.library1(030):001 OpenAsync_ (fileName,mode,bufferSize)
asyncio.library1(030):002 OpenAsyncFromFH_ (handle,mode,bufferSize)
asyncio.library1(030):003 CloseAsync_ (file)
asyncio.library1(030):004 SeekAsync_ (file,position,mode)
asyncio.library1(030):005 ReadAsync_ (file,buffer,bytes)
asyncio.library1(030):006 WriteAsync_ (file,buffer,bytes)
asyncio.library1(030):007 ReadCharAsync_ (file)
asyncio.library1(030):008 WriteCharAsync_ (file,ch)
asyncio.library1(030):009 ReadLineAsync_ (file,buf,bytes)
asyncio.library1(030):010 WriteLineAsync_ (file,buf)
asyncio.library1(030):011 FGetsAsync_ (file,buf,bytes)
asyncio.library1(030):012 FGetsLenAsync_ (file,buf,bytes,length)
asyncio.library1(030):013 PeekAsync_ (file,buffer,bytes)
xpkmaster.library1(031):001 XpkExamine_ (fib,tags)
xpkmaster.library1(031):002 XpkPack_ (tags)
xpkmaster.library1(031):003 XpkUnpack_ (tags)
xpkmaster.library1(031):004 XpkOpen_ (xbuf,tags)
xpkmaster.library1(031):005 XpkRead_ (xbuf,buf,len)
xpkmaster.library1(031):006 XpkWrite_ (xbuf,buf,len)
xpkmaster.library1(031):007 XpkSeek_ (xbuf,len,mode)
xpkmaster.library1(031):008 XpkClose_ (xbuf)
xpkmaster.library1(031):009 XpkQuery_ (tags)
xpkmaster.library1(031):010 XpkAllocObject_ (type,tags)
xpkmaster.library1(031):011 XpkFreeObject_ (type,object)
xpkmaster.library1(031):012 XpkPrintFault_ (code,header)
xpkmaster.library1(031):013 XpkFault_ (code,header,buffer,size)
xpkmaster.library1(031):014 XpkPassRequest_ (tags)
renderlib.library1(032):001 CreateRMHandlerA_ (taglist)
renderlib.library1(032):002 DeleteRMHandler_ (rmh)
renderlib.library1(032):003 AllocRenderMem_ (rendermemhandler,size)
renderlib.library1(032):004 FreeRenderMem_ (rendermemhandler,mem,size)
renderlib.library1(032):005 AllocRenderVec_ (rendermemhandler,size)
renderlib.library1(032):006 FreeRenderVec_ (mem)
renderlib.library1(032):007 CreateHistogramA_ (taglist)
renderlib.library1(032):008 DeleteHistogram_ (histogram)
renderlib.library1(032):009 QueryHistogram_ (histogram,tag)
renderlib.library1(032):010 AddRGB_ (histogram,RGB,count)
renderlib.library1(032):011 AddRGBImageA_ (histogram,rgb,width,height,taglist)
renderlib.library1(032):012 AddChunkyImageA_ (histogram,chunky,width,height,palette,taglist)
renderlib.library1(032):013 ExtractPaletteA_ (histogram,palette,numcolors,taglist)
renderlib.library1(032):014 RenderA_ (rgb,width,height,chunky,palette,taglist)
renderlib.library1(032):015 Planar2ChunkyA_ (planetab,bytewidth,height,depth,bytesperrow,chunky,taglist)
renderlib.library1(032):016 Chunky2RGBA_ (chunky,width,height,rgb,palette,taglist)
renderlib.library1(032):017 Chunky2BitMapA_ (chunky,sx,sy,width,height,bitmap,dx,dy,taglist)
renderlib.library1(032):018 CreateScaleEngineA_ (sourcewidth,sourceheight,destwidth,destheight,taglist)
renderlib.library1(032):019 DeleteScaleEngine_ (engine)
renderlib.library1(032):020 ScaleA_ (engine,source,dest,taglist)
renderlib.library1(032):021 ConvertChunkyA_ (source,oldpalette,width,height,dest,newpalette,taglist)
renderlib.library1(032):022 CreatePenTableA_ (chunky,oldpalette,width,height,newpalette,convtab,taglist)
renderlib.library1(032):023 CreatePaletteA_ (taglist)
renderlib.library1(032):024 DeletePalette_ (palette)
renderlib.library1(032):025 ImportPaletteA_ (palette,coltab,numcols,taglist)
renderlib.library1(032):026 ExportPaletteA_ (palette,coltab,taglist)
renderlib.library1(032):027 CountRGB_ (histogram,rgb)
renderlib.library1(032):028 BestPen_ (palette,rgb)
renderlib.library1(032):029 FlushPalette_ (palette)
renderlib.library1(032):030 SortPaletteA_ (palette,mode,taglist)
renderlib.library1(032):031 AddHistogramA_ (histogram1,histogram2,taglist)
renderlib.library1(032):032 ScaleOrdinate_ (source,dest,ordinate)
renderlib.library1(032):033 CreateMapEngineA_ (palette,taglist)
renderlib.library1(032):034 DeleteMapEngine_ (engine)
renderlib.library1(032):035 MapRGBArrayA_ (engine,rgb,width,height,chunky,taglist)
renderlib.library1(032):036 RGBArrayDiversityA_ (rgb,width,height,taglist)
renderlib.library1(032):037 ChunkyArrayDiversityA_ (chunky,palette,width,height,taglist)
renderlib.library1(032):038 MapChunkyArrayA_ (engine,source,palette,width,height,dest,taglist)
renderlib.library1(032):039 InsertAlphaChannelA_ (maskarray,width,height,rgbarray,taglist)
renderlib.library1(032):040 ExtractAlphaChannelA_ (rgbarray,width,height,chunkyarray,taglist)
renderlib.library1(032):041 ApplyAlphaChannelA_ (sourcearray,width,height,destarray,taglist)
renderlib.library1(032):042 MixRGBArrayA_ (sourcearray,width,height,destarray,ratio,taglist)
renderlib.library1(032):043 AllocRenderVecClear_ (rendermemhandler,size)
renderlib.library1(032):044 CreateAlphaArrayA_ (rgbarray,width,height,taglist)
renderlib.library1(032):045 MixAlphaChannelA_ (source1,source2,width,height,dest,taglist)
renderlib.library1(032):046 TintRGBArrayA_ (source,width,height,RGB,ratio,dest,taglist)
Ridoslib.obj(033):001 AddNotify idno,filespec$
Ridoslib.obj(033):002 RemNotify notify#
Ridoslib.obj(033):003 CheckNotify 
Ridoslib.obj(033):004 WaitNotify 
Ridoslib.obj(033):005 GetDeviceList flags
Ridoslib.obj(033):006 NextDevice 
Ridoslib.obj(033):007 FreeDeviceList 
Ridoslib.obj(033):008 NotifyPort 
Ridoslib.obj(033):009 GetFileName filepath$
Ridoslib.obj(033):010 GetPathName filepath$
Ridoslib.obj(033):011 DeviceEntryType     -- dev=0,dir=1,vol=2,late=3,nonbind=4
Rinonvolatilelib.obj(035):001 IsNonvolatile -- returns true if library is open
Rinonvolatilelib.obj(035):002 StoreNVData AppName,ItemName,data,byte_length
Rinonvolatilelib.obj(035):003 GetCopyNV AppName,ItemName
Rinonvolatilelib.obj(035):004 FreeNVData APTR
Rinonvolatilelib.obj(035):005 GetNVList appname
Rifastseriallib.obj(036):001 InitSerialIO baud,numbytes,inbuf,outbuf
Rifastseriallib.obj(036):002 FinitSerialIO 
Rifastseriallib.obj(036):003 SetSerialMode mode   -- determine master/slave
Rifastseriallib.obj(036):004 EndSerialIO - disable serial read/write
Rifastseriallib.obj(036):005 PutSerial address,bytes | byte
Rifastseriallib.obj(036):006 GetSerial [address,bytes]
Rifastseriallib.obj(036):007 FlushSerialIO - make sure serial port is empty
Rifastseriallib.obj(036):008 SyncSerial syncbyte
Rifastseriallib.obj(036):009 DoSerialIO [numbytes-1]
Rifastseriallib.obj(036):010 SetIOBuffers inbuf,outbuf
Rifastseriallib.obj(036):011 SetIOSpeed baudrate
Rifastseriallib.obj(036):012 SetIOSize bytes
Rifastseriallib.obj(036):013 CheckSerial 
Rifastseriallib.obj(036):014 SyncPut address,bytes
Rifastseriallib.obj(036):015 SyncGet address,bytes
Rigtmenulib.obj(037):001 GTMenuList List of GT Menus
Rigtmenulib.obj(037):002 CreateMenuStrip GTMenuList#
Rigtmenulib.obj(037):003 GTSetMenu GTMenuList#
Rigtmenulib.obj(037):004 GTUnSetMenu - removes the gtmenulist from the current window
Rigtmenulib.obj(037):005 GTMenuTitle GTMenuList#,menu,title$
Rigtmenulib.obj(037):006 GTMenuItem GTMenuList#,flags,menu,item[,itemtext$[,shortcut$[,mutualexclude[,UserData]]
Rigtmenulib.obj(037):007 GTMenuState GTMenuList#[,Menu[,Item[,Subitem]]],On|Off
Rigtmenulib.obj(037):008 GTSubItem GTMenuList#,flags,menu,item,subitem[,itemtext$[,shortcut$[,mutualexclude[,UserData]]]]
Rigtmenulib.obj(037):009 GTMenuChecked (GTMenuList#,Menu,Item[,Subitem])
Rigtmenulib.obj(037):010 GTSetMenuChecked GTMenuList#,Menu,Item[,Subitem],Off|On
Rigtmenulib.obj(037):011 GTFreeMenu GTMenuList#,Menu[,Item[,Subitem]]
Rigtmenulib.obj(037):012 GTGetUserData (GTMenuList#,Menu,Item[,Subitem])
jpeg.library(038):001 AllocJPEGDecompressA_ ( jph, taglist )
jpeg.library(038):002 FreeJPEGDecompress_ ( jph )
jpeg.library(038):003 DecompressJPEGA_ ( jph, taglist )
jpeg.library(038):004 AllocJPEGCompressA_ ( jph, taglist )
jpeg.library(038):005 FreeJPEGCompress_ ( jph )
jpeg.library(038):006 CompressJPEGA_ ( jph, taglist )
jpeg.library(038):007 AllocBufferFromJPEGA_ ( jph, taglist )
jpeg.library(038):008 FreeJPEGBuffer_ ( buffer )
jpeg.library(038):009 GetJPEGInfoA_ ( jph, taglist )
jpeg.library(038):010 GetJPEGMarkerA_ ( jph, taglist )
cybergraphics.obj(039):001 IsCyberModeID_ (displayID)
cybergraphics.obj(039):002 BestCModeIDTagList_ (BestModeIDTags)
cybergraphics.obj(039):003 CModeRequestTagList_ (ModeRequest,ModeRequestTags)
cybergraphics.obj(039):004 AllocCModeListTagList_ (ModeListTags)
cybergraphics.obj(039):005 FreeCModeList_ (ModeList)
cybergraphics.obj(039):006 ScalePixelArray_ (srcRect,SrcW,SrcH,SrcMod,RastPort,DestX,DestY,DestW,DestH,SrcFormat)
cybergraphics.obj(039):007 GetCyberMapAttr_ (CyberGfxBitmap,CyberAttrTag)
cybergraphics.obj(039):008 GetCyberIDAttr_ (CyberIDAttr,CyberDisplayModeID)
cybergraphics.obj(039):009 ReadRGBPixel_ (RastPort,x,y)
cybergraphics.obj(039):010 WriteRGBPixel_ (RastPort,x,y,argb)
cybergraphics.obj(039):011 ReadPixelArray_ (destRect,destX,destY,destMod,RastPort,SrcX,SrcY,SizeX,SizeY,DestFormat)
cybergraphics.obj(039):012 WritePixelArray_ (srcRect,SrcX,SrcY,SrcMod,RastPort,DestX,DestY,SizeX,SizeY,SrcFormat)
cybergraphics.obj(039):013 MovePixelArray_ (SrcX,SrcY,RastPort,DestX,DestY,SizeX,SizeY)
cybergraphics.obj(039):014 InvertPixelArray_ (RastPort,DestX,DestY,SizeX,SizeY)
cybergraphics.obj(039):015 FillPixelArray_ (RastPort,DestX,DestY,SizeX,SizeY,ARGB)
cybergraphics.obj(039):016 DoCDrawMethodTagList_ (Hook,RastPort,TagList)
cybergraphics.obj(039):017 CVideoCtrlTagList_ (ViewPort,TagList)
cybergraphics.obj(039):018 LockBitMapTagList_ (BitMap,TagList)
cybergraphics.obj(039):019 UnLockBitMap_ (Handle)
cybergraphics.obj(039):020 UnLockBitMapTagList_ (Handle,TagList)
cybergraphics.obj(039):021 ExtractColor_ (RastPort,BitMap,Colour,SrcX,SrcY,Width,Height)
cybergraphics.obj(039):022 WriteLUTPixelArray_ (srcRect,SrcX,SrcY,SrcMod,RastPort,ColorTab,DestX,DestY,SizeX,SizeY,CTFormat)
strport.obj(040):001 LED_On turn Power-LED on.
strport.obj(040):002 LED_Off turn Power-LED off.
strport.obj(040):003 LED_Toggle toggle PowerLED.
strport.obj(040):004 LED_Status  0=off, -1=on
strport.obj(040):005 PotGo  ;starts up ADs (need 300ms to run)
strport.obj(040):006 ReadPot (AD) ;0=P0-X, 1=P0-Y, 2=P1-X, 3=P1-Y
strport.obj(040):007 AKey  ;n.b=AKey, Code of !ALL! Keys
strport.obj(040):008 LMBD  ;wait until Left-Mouse-Button-Down
strport.obj(040):009 RMBD  ;wait until Right-Mouse-Button-Down
strport.obj(040):010 LMBU  ;wait until Left-Mouse-Button-Up
strport.obj(040):011 RMBU  ;wait until Right-Mouse-Button-Up
strport.obj(040):012 ReadParPort  ;n.b=ReadParPort
strport.obj(040):013 WriteParPort BitSet ;0-255
strport.obj(040):014 SetParDDR BitSet ;0-255
strport.obj(040):015 GetParDDR  ;n.b=GetParDDR
nfile.obj(041):001 NOpenFile 
nfile.obj(041):002 NReadFile 
nfile.obj(041):003 NCreateFile 
nfile.obj(041):004 NCloseFile 
nfile.obj(041):005 NEof 
nfile.obj(041):006 NReadLong 
nfile.obj(041):007 NReadWord 
nfile.obj(041):008 NReadByte 
nfile.obj(041):009 NWriteLong 
nfile.obj(041):010 NWriteWord 
nfile.obj(041):011 NWriteByte 
nfile.obj(041):012 NWriteStringN 
nfile.obj(041):013 NReadString 
nfile.obj(041):014 NInitFile 
nfile.obj(041):015 NUseFile 
nfile.obj(041):016 NFreeFiles 
wizard1.library(042):001 WZ_OpenSurfaceA_ (name,memaddr,tagptr)
wizard1.library(042):002 WZ_CloseSurface_ (surface)
wizard1.library(042):003 WZ_AllocWindowHandleA_ (screen,user_sizeof,surface,tagptr)
wizard1.library(042):004 WZ_CreateWindowObjA_ (winhandle,id,tagptr)
wizard1.library(042):005 WZ_OpenWindowA_ (winhandle,newwin,tagptr)
wizard1.library(042):006 WZ_CloseWindow_ (winhandle)
wizard1.library(042):007 WZ_FreeWindowHandle_ (winhandle)
wizard1.library(042):008 WZ_LockWindow_ (winhandle)
wizard1.library(042):009 WZ_UnlockWindow_ (winhandle)
wizard1.library(042):010 WZ_LockWindows_ (surface)
wizard1.library(042):011 WZ_UnlockWindows_ (surface)
wizard1.library(042):012 WZ_GadgetHelp_ (windowhandle,sfgadget)
wizard1.library(042):013 WZ_GadgetConfig_ (windowhandle,sfgadget)
wizard1.library(042):014 WZ_MenuHelp_ (windowhandle,menucode)
wizard1.library(042):015 WZ_MenuConfig_ (windowhandle,menucode)
wizard1.library(042):016 WZ_InitEasyStruct_ (surface,easystruct,id,size)
wizard1.library(042):017 WZ_SnapShotA_ (surface,tagptr)
wizard1.library(042):018 WZ_GadgetKey_ (windowhandle,code,Qualifier,tags)
wizard1.library(042):019 WZ_DrawVImageA_ (vimage,x,y,w,h,type,rp,drinfo,tagptr)
wizard1.library(042):020 WZ_EasyRequestArgs_ (surface,window,id,args)
wizard1.library(042):021 WZ_GetNode_ (minlist,nr)
wizard1.library(042):022 WZ_ListCount_ (list)
wizard1.library(042):023 WZ_NewObjectA_ (surface,class,tagptr)
wizard1.library(042):024 WZ_GadgetHelpMsg_ (winhandle,winhaddress,iaddress,MouseX,MouseY,flags)
wizard1.library(042):025 WZ_ObjectID_ (Surface,id,Objectname)
wizard1.library(042):026 WZ_InitNodeA_ (wizardnode,entrys,tagptr)
wizard1.library(042):027 WZ_InitNodeEntryA_ (wizardnode,entry,tagptr)
wizard1.library(042):028 WZ_CreateImageBitMap_ (TransPen,DrInfo,newimage,screen,reg)
wizard1.library(042):029 WZ_DeleteImageBitMap_ (bm,newimage,screen,reg)
wizard1.library(042):030 WZ_GetDataAddress_ (surface,Type,ID)
OpenURL.library1(043):001 URL_OpenA_ (url,tags)
OpenURL.library1(043):002 URL_OldGetPrefs_ 
OpenURL.library1(043):003 URL_OldFreePrefs_ (up)
OpenURL.library1(043):004 URL_OldSetPrefs_ (up, permanent)
OpenURL.library1(043):005 URL_OldGetDefaultPrefs_ 
OpenURL.library1(043):006 URL_OldLaunchPrefsApp_ 
OpenURL.library1(043):007 DoFunction_ (rxmsg)
OpenURL.library1(043):008 URL_GetPrefsA_ (tags)
OpenURL.library1(043):009 URL_FreePrefsA_ (prefs,tags)
OpenURL.library1(043):010 URL_SetPrefsA_ (up,tags)
OpenURL.library1(043):011 URL_LaunchPrefsAppA_ (tags)
OpenURL.library1(043):012 URL_GetAttr_ (attr,storage)
Risoundlib.obj(045):001 CludgeSound sound#,address
Rishapeslib.obj(046):001 CludgeShapes shape#,numshapes,address
Rishapeslib.obj(046):002 SafeToBlit shape,x,y
Rishapeslib.obj(046):003 LELoadShapes shape#[,shape#],filename$[,palette#]
Rishapeslib.obj(046):004 LESaveShapes shape#,shape#,filename$[,palette#]
Rishapeslib.obj(046):005 LECompressShapes True|False
Rishapeslib.obj(046):006 LECludgeShapes shape#,shape#,address,palette#[,copymemflag]
Rishapeslib.obj(046):007 LEInitShape shape#,width,height,depth
Rishapeslib.obj(046):008 LEScanShapes startshape#,endshape#
Rishapeslib.obj(046):009 LEMaxShapeWidth 
Rishapeslib.obj(046):010 LEMaxShapeHeight 
Rishapeslib.obj(046):011 LEMaxShapeDepth 
Rimisclib.obj(047):001 TimerReset 
Rimisclib.obj(047):002 PortSigBit msgport
Rimisclib.obj(047):003 WorkbenchHere 
Rimisclib.obj(047):004 EZRequest [title$,]body$[,gadget$] | title$,body$,gadget$[,var..]
Rimisclib.obj(047):005 Flip$ (String$)
Rimisclib.obj(047):006 InitArgParse parameter$ ;stringlen max of 1010 chars allowed
Rimisclib.obj(047):007 NextArg$ - get next parameter
Rimisclib.obj(047):008 EZOutput [win#]
Rimisclib.obj(047):009 EZRequestArgs args..
Rimisclib.obj(047):010 EZSeparator char
Rimisclib.obj(047):011 ClickWait 
Rimisclib.obj(047):012 ProgPath$ 
Rimisclib.obj(047):013 ProgDir$ 
Rimisclib.obj(047):014 ProgName$ 
Rimisclib.obj(047):015 FromBlitz 
Rimisclib.obj(047):016 LtoS (longword) -- convert LONG to STRING
Rimisclib.obj(047):017 ASCRaw (rawkey)
Rimisclib.obj(047):018 RawASC (char)
Rimisclib.obj(047):019 OpenFontPrefs [filename$]
Rimisclib.obj(047):020 CloseFontPrefs 
Rimisclib.obj(047):021 DefaultFontHeight fonttype  (0=Icon,1=System,2=Screen)
Rimisclib.obj(047):022 DefaultFontName fonttype  (0=Icon,1=System,2=Screen)
Rimisclib.obj(047):023 NextArgChar$ char[,disablestr,enablestr] - get next parameter up until char
Rimisclib.obj(047):024 BInstr (String$,Findstring$)
Rilesdebuglib.obj(049):001 D_FindVolume (volumename)
Rilesdebuglib.obj(049):002 D_GetSR buffer,SR
Rilesdebuglib.obj(049):003 D_HexWord source,address,num
Rilesdebuglib.obj(049):004 D_CheckNMove source_address,dest_address[,count]
Rilesdebuglib.obj(049):005 D_FindStringPtr areg5,lookfor
Rilesdebuglib.obj(049):006 GetCopIns$ copdata
Rilesdebuglib.obj(049):007 FLocate x,y
Rilesdebuglib.obj(049):008 FPrint a$
Rilesdebuglib.obj(049):009 FNPrint a$
Rilesdebuglib.obj(049):010 FInverse inversemode
Rilesdebuglib.obj(049):011 GetProgMode mode,buffer
Rilesdebuglib.obj(049):012 FYOffset pixel_offset - offset from vertical y cursor to print at
Rilesdebuglib.obj(049):013 SearchMem type,value,start_ad,end_ad
Rilesdebuglib.obj(049):014 SearchMemFound 
Rilesdebuglib.obj(049):015 PeekMax$ (address,max_chars)
Rilesdebuglib.obj(049):016 D_CheckNMoveWord source_address,dest_address[,count]
Rilesdebuglib.obj(049):017 GetHex$ value,mode  (1=byte, 2=word, 3=longword)
Rilesdebuglib.obj(049):018 GetHexAdr$ *value,mode  (1=byte, 2=word, 3=longword)
Rilesdebuglib.obj(049):019 GetCustomReg address
Rilesdebuglib.obj(049):020 GetCustomRegAdr name$
Rilesdebuglib.obj(049):021 FPrintDetoke tokenised_string,cio,typ,lineoffset
Rilesdebuglib.obj(049):022 SetupLESDebug token_addr,tokenise
Rilesdebuglib.obj(049):023 ExtractLabel label_string
Rilesdebuglib.obj(049):024 OutText x,y,rastport,address/string
Rilesdebuglib.obj(049):025 D_CheckNMoveA source_address,dest_address[,count]
Rilesdebuglib.obj(049):026 OutTextPen rastport,pen
Rilesdebuglib.obj(049):027 D_InitParse string
Rilesdebuglib.obj(049):028 D_NextArg$ - get next parameter
Rilesdebuglib.obj(049):029 ProcessString string
Rilesdebuglib.obj(049):030 AddProcessPtr character,string
Rilesdebuglib.obj(049):031 ClearProcessPtrs -- reset process string pointers
Ridisasm.obj(050):001 DisAssemble$ (address.l)
Ridisasm.obj(050):002 InstrSize - returns size of last instruction disassembled
Ridebuglib.obj(051):001 AddVarTrace variable,string$,output - add a variable trace
Ridebuglib.obj(051):002 DelVarTrace variable$ - remove a trace on a named variable
Ridebuglib.obj(051):003 VarTraceWindow - open the variable trace window on the debugger screen
Ridebuglib.obj(051):004 DisAsmWindow [address] - open the disassembly window on the debugger screen
Ridebuglib.obj(051):005 CopperTrace address,[,offset] - offset<>0 for CopList objects
Ridebuglib.obj(051):006 ProcControl [On/Off]
Ridebuglib.obj(051):007 MemoryWindow num#,address - open a memory window on the debugger screen
Riencryptlib.obj(052):001 Encrypt memadr,length[,wheel1,wheel2,wheel3]
Riencryptlib.obj(052):002 Decrypt memadr,length,wheel1,wheel2,wheel3[,mode]
Riencryptlib.obj(052):003 GetWheel wheel#
FuzziesReqLib.obj(053):001 Req Lib Req Library
FuzziesReqLib.obj(053):002 ColourRequest Colour#
FuzziesReqLib.obj(053):003 TextRequest (Text,Title,Left Text[,[Middle Text,]Right Text])
FuzziesReqLib.obj(053):004 FileReqSize Lines High,File Length,Device Length,
FuzziesReqLib.obj(053):005 ReqFileRequest$ (Title$,File$,Path$,Flags)
FuzziesReqLib.obj(053):006 FileFilter Show$,Hide$
FuzziesReqLib.obj(053):007 TextTimeout Timeout Seconds
FuzziesReqLib.obj(053):008 ReqColours Text,Detail,Block[,File,Dir,Device[,GadText,GadBox,StringName,StringBox,Frame]]
FuzziesReqLib.obj(053):009 GetString$ (Title$,Default$,Visable size,Max length)
FuzziesReqLib.obj(053):010 FileStructure Pointer to file requester structor
FuzziesReqLib.obj(053):011 NextFile$ Returns next file form MaxSelect$
FuzziesReqLib.obj(053):012 MaxSelect$ Path$=(Title$,File$,Path$,Flags,number of files)
FuzziesReqLib.obj(053):013 ReqFontSize Returns font size
FuzziesReqLib.obj(053):014 Req_Base Returns pointer to req.library
FuzziesReqLib.obj(053):015 Dos_Base Returns pointer to dos.library
FuzziesReqLib.obj(053):016 Int_Base Returns pointer to intuition.library
FuzziesReqLib.obj(053):017 Gfx_Base Returns pointer to graphics.library
FuzziesReqLib.obj(053):018 Rex_Base Returns pointer to RexxSys.library ?
FuzziesReqLib.obj(053):019 Con_Base Returns pointer to console.device
NeilsReqToolsLib.obj(054):001 RTEZRequest (Title$,BodyText$,GadgetText$ [,ReqPosition [,DefaultResponse,Flags]])
NeilsReqToolsLib.obj(054):002 RTEZLoadFile (Title$,Filename$)
NeilsReqToolsLib.obj(054):003 RTEZFontRequest (Title$)
NeilsReqToolsLib.obj(054):004 RTEZScreenModeRequest (Title$ [,DisplayFlags])
NeilsReqToolsLib.obj(054):005 RTEZPaletteRequest (Title$,FirstColour)
NeilsReqToolsLib.obj(054):006 RTEZGetLong (Title$,BodyText$ [,DefaultValue])
NeilsReqToolsLib.obj(054):007 RTEZGetLongRange (Title$,BodyText$,Min,Max [,DefaultValue])
NeilsReqToolsLib.obj(054):008 RTEZGetString (Title$,BodyText$,MaxChars [,DefaultString])
NeilsReqToolsLib.obj(054):009 RTEZSaveFile (Title$,Filename$)
NeilsReqToolsLib.obj(054):010 RTEZSetDefaultDirectory Requester#,Directory$
NeilsReqToolsLib.obj(054):011 RTEZPathRequest (Title$)
NeilsReqToolsLib.obj(054):012 RTLockWindow (Window#)
NeilsReqToolsLib.obj(054):013 RTUnlockWindow Window#,Lock
NeilsReqToolsLib.obj(054):014 RTEZSetPattern Requester#,Pattern$
NeilsReqToolsLib.obj(054):015 RTEZFreePattern Requester#
NeilsReqToolsLib.obj(054):016 RTEZFlagsRequest (Title$,BodyText$,GadgetText$,IDCMPFlags [,ReqPosition])
NeilsReqToolsLib.obj(054):017 RTRequest (BodyText$,GadgetText$,TagList)
NeilsReqToolsLib.obj(054):018 RTFileRequest (Title$,FileName$,TagList)
NeilsReqToolsLib.obj(054):019 RTEZMultiLoadFile (Title$)
NeilsReqToolsLib.obj(054):020 RTNextPathEntry 
NeilsReqToolsLib.obj(054):021 RTASyncRequest (Title$,BodyText$,GadgetText$)
NeilsReqToolsLib.obj(054):022 RTCheckASyncRequest 
NeilsReqToolsLib.obj(054):023 RTEndASyncRequest 
NeilsReqToolsLib.obj(054):024 RTVersion 
NeilsReqToolsLib.obj(054):025 RTRevision 
NeilsReqToolsLib.obj(054):026 IsReqToolsActive 
NeilsReqToolsLib.obj(054):027 RTASyncPaletteRequest (Title$,FirstColour)
NeilsReqToolsLib.obj(054):028 RTCheckASyncPaletteRequest 
NeilsReqToolsLib.obj(054):029 RTEndASyncPaletteRequest 
NeilsIndicatorLib.obj(055):001 PICreateRequest (Title$,Min,Max [,NoGagdet])
NeilsIndicatorLib.obj(055):002 PIEndRequest 
NeilsIndicatorLib.obj(055):003 PIUpdateRequest (Value)
Xbciatrackerlib.obj(056):001 LoadTrackerModule (TrackerModule#,Name)
Xbciatrackerlib.obj(056):002 StartTracker (TrackerModule#)
Xbciatrackerlib.obj(056):003 StopTracker Stops module from playing
Xbciatrackerlib.obj(056):004 DecodeModule TrackerModule#,ModuleAddress
Xbciatrackerlib.obj(056):005 GetTrackerSize (TrackerModule#)
Xbciatrackerlib.obj(056):006 GetTrackerLocation (TrackerModule#)
Xbciatrackerlib.obj(056):007 FreeTrackerModule TrackerModule#
Xbciatrackerlib.obj(056):008 GetTrackerEvent 
Xbciatrackerlib.obj(056):009 CheckTrackerEvent 
Xbciatrackerlib.obj(056):010 WaitTrackerEvent 
Xbciatrackerlib.obj(056):011 CheckTrackerID (TrackerModule#)
Xbciatrackerlib.obj(056):012 GetModuleName$ (TrackerModule#)
Xbciatrackerlib.obj(056):013 PauseModule 
Xbciatrackerlib.obj(056):014 ChangeTrackerVBlank 
Xbciatrackerlib.obj(056):015 PlayTracker 
Xbciatrackerlib.obj(056):016 TrackerVolume (Volume Range: 0-64)
Xbciatrackerlib.obj(056):017 ChangeTrackerMask Channel Mask
Xbciatrackerlib.obj(056):018 ModulePatterns (Module #)
Xbciatrackerlib.obj(056):019 ModuleSampleName$ (Module#,Sample#[0-30])
Xbciatrackerlib.obj(056):020 GetPatternPosition 
Xbciatrackerlib.obj(056):021 SetSongPatternPosition Pattern#,Position#
Xbciatrackerlib.obj(056):022 GetTrackerVolume (TrackerChannel#)
Xbciatrackerlib.obj(056):023 GetTrackerNote (TrackerChannel#)
Xbciatrackerlib.obj(056):024 SetTrackerTempo Tempo
Xbciatrackerlib.obj(056):025 GetTrackerInstrument (TrackerChannel#)
Xbciatrackerlib.obj(056):026 GetSongPosition 
Xbciatrackerlib.obj(056):027 GetSongLength 
Xbciatrackerlib.obj(056):028 StartTrackerPatPos (TrackerModule#,Pattern#,Position#)
Xbciatrackerlib.obj(056):029 GetSampleLocation (Sample#)
Xbciatrackerlib.obj(056):030 GetSampleLength (Sample#)
Xbciatrackerlib.obj(056):031 GetSampleName$ (Sample#)
Xbciatrackerlib.obj(056):032 BuildNoteTable 
Xbciatrackerlib.obj(056):033 GetTrackerNoteNumber (TrackerChannel#)
Xbciatrackerlib.obj(056):034 TrackerPlayLoop (Continuous play.)
Xbciatrackerlib.obj(056):035 TrackerPlayOnce (Play module once then stop.)
Xbciatrackerlib.obj(056):036 TrackerModuleEnd (TRUE if module has finished playing.)
Xbciatrackerlib.obj(056):037 TrackerDeInitialise (De-Allocates CIA timers.)
Xbciatrackerlib.obj(056):038 TrackerReInitialise (Re-Allocates CIA timers.)
Xbciatrackerlib.obj(056):039 AllocatePatternMem (Allocates 1024byte buffer)
Xbciatrackerlib.obj(056):040 GetChannelInfo (Pattern#,Channel#)
Xbciatrackerlib.obj(056):041 TrackerPatternToMem Pattern #
Rianimlib.obj(057):001 RIAnimInit (address,bitmap#,palette# [,xy_offset]|[,x,y])
Rianimlib.obj(057):002 RINextAnimFrame (bitmap#)
Rianimlib.obj(057):003 AnimLoop On|Off
Rianimlib.obj(057):004 RIAnimFrameCount 
Rianimlib.obj(057):005 RIAnimDepth address -- address of your animation file
Rianimlib.obj(057):006 RIAnimWidth address -- address of your animation file
Rianimlib.obj(057):007 RIAnimHeight address -- address of your animation file
Ritooltypeslib.obj(059):001 GetIconObject (filename$)
Ritooltypeslib.obj(059):002 FindToolValue (tooltype$)
Ritooltypeslib.obj(059):003 SetToolValue (tooltype$,value$[,status])
Ritooltypeslib.obj(059):004 PutIconObject (filename$[,icontype])
Ritooltypeslib.obj(059):005 FreeIconObject  - free the disk object of a icon
Ritooltypeslib.obj(059):006 MatchToolValue (tooltype$,value$)
Ritooltypeslib.obj(059):007 NewToolType (tooltype$,value$[,status])
Ritooltypeslib.obj(059):008 FindToolNumber (tooltype#)
Ritooltypeslib.obj(059):009 ClearToolTypes 
Ritooltypeslib.obj(059):010 SetIconHit width,height
Ritooltypeslib.obj(059):011 ShapeToIcon shape[,shape]
Ritooltypeslib.obj(059):012 SetIconType object_type
Ritooltypeslib.obj(059):013 IconRender render_flags
Ritooltypeslib.obj(059):014 IconDefTool tool$
Ritooltypeslib.obj(059):015 FindToolType (tooltype$[,bracket_check])
Ritooltypeslib.obj(059):016 IconToShape shape[,shape]
EMLLib.obj(060):001 PlayPTModule PTModule#[,position]
EMLLib.obj(060):002 StopPTModule 
EMLLib.obj(060):003 GetPTSongPos 
EMLLib.obj(060):004 GetPTPatternPos 
EMLLib.obj(060):005 SetPTVolume volume
EMLLib.obj(060):006 GetPTVoicePeriod (voice)
EMLLib.obj(060):007 GetPTVoiceInstrument (voice)
EMLLib.obj(060):008 SetPTMask voicebitmap
EMLLib.obj(060):009 GetPTMask 
EMLLib.obj(060):010 SetPTSongLoop on|off
EMLLib.obj(060):011 SetPTPatLoop on|off|once
EMLLib.obj(060):012 Once 
EMLLib.obj(060):013 GetPTModuleLen (PTModule#)
EMLLib.obj(060):014 GetPTPosPattern (PTModule#,position)
EMLLib.obj(060):015 GetPTVuLevel (voice)
EMLLib.obj(060):016 GetPTStat 
EMLLib.obj(060):017 SetPTVoiceToggle voice
EMLLib.obj(060):018 SetPTVoiceOn voice
EMLLib.obj(060):019 SetPTVoiceOff voice
EMLLib.obj(060):020 GetPTVoiceStat (voice)
EMLLib.obj(060):021 SetPTCiaInt interrupttype
EMLLib.obj(060):022 SetPTCiaPri interruptpriority
EMLLib.obj(060):023 SetPTCia 
EMLLib.obj(060):024 SetPTVbl 
EMLLib.obj(060):025 SetPTZeroSpeed on|off
EMLLib.obj(060):026 PausePTModule 
EMLLib.obj(060):027 ContPTModule 
EMLLib.obj(060):028 SetPTSpeed speed
EMLLib.obj(060):029 GetPTModuleName$ (PTModule#)
EMLLib.obj(060):030 GetPTInstrumentName$ (PTModule#,instrumentnumber)
EMLLib.obj(060):031 GetPTInstrumentAddr (PTModule#,instrumentnumber)
EMLLib.obj(060):032 GetPTInstrumentLen (PTModule#,instrumentnumber)
EMLLib.obj(060):033 GetPTInstrumentRepeatStart (PTModule#,instrumentnumber)
EMLLib.obj(060):034 GetPTInstrumentRepLen (PTModule#,instrumentnumber)
EMLLib.obj(060):035 GetPTInstrumentVol (PTModule#,instrumentnumber)
EMLLib.obj(060):036 PTInt 
EMLLib.obj(060):037 SetPTNoInt 
EMLLib.obj(060):038 PTModule 
EMLLib.obj(060):039 LoadPTModule (PTModule#,filename$)
EMLLib.obj(060):040 SavePTModule (PTModule#,filename$)
EMLLib.obj(060):041 SetPTTempo ciatempo
EMLLib.obj(060):042 GetPTSpeed 
EMLLib.obj(060):043 GetPTTempo 
EMLLib.obj(060):044 SetPTVoiceVolume Voice,Volume
EMLLib.obj(060):045 GetPTVoiceVolume (Voice)
EMLLib.obj(060):046 GetPTVoiceNote (Voice)
EMLLib.obj(060):047 GetPTRealLevel (voice)
Riapplib.obj(061):001 AddAppWindow (windownumber)
Riapplib.obj(061):002 DelAppWindow (windownumber)
Riapplib.obj(061):003 AddAppMenu (id,text$)
Riapplib.obj(061):004 DelAppMenu (id)
Riapplib.obj(061):005 AddAppIcon (id,text$,filename$[,x,y])
Riapplib.obj(061):006 DelAppIcon (id)
Riapplib.obj(061):007 AppEvent 
Riapplib.obj(061):008 AppEventType 
Riapplib.obj(061):009 AppEventID 
Riapplib.obj(061):010 NextAppFile 
Riapplib.obj(061):011 AppFile (num)
Riapplib.obj(061):012 AppNumFiles 
Riapplib.obj(061):013 AppLock 
Riapplib.obj(061):014 AppMessage 
Riapplib.obj(061):015 AppMsgPort 
Riapplib.obj(061):016 AppEventIDCMP 
AaronsIconLib.obj(062):001 IconInfo 
AaronsIconLib.obj(062):002 GetIconInfo   success.w=GetIconInfo(Info#,filename$)  -1=ok, 0=fail
AaronsIconLib.obj(062):003 IconTool$   tool$=IconTool$(Info#,type$)  Empty string=NOT FOUND.
AaronsIconLib.obj(062):004 IconType   type.w=IconType(Info#)  Returns the icon type. #WBDRAWER,#WBTOOL etc..
AaronsIconLib.obj(062):005 IconDefTool$   deftool$=IconDefTool$(Info#)  Returns the icons default tool.
AaronsIconLib.obj(062):006 IconStack   stackSize.l=IconType(Info#)  Returns the stack size set in the icon.
AaronsIconLib.obj(062):007 IconSubTool$   boolean.w=IconSubTool$(type$,sub$) -1=Found  0=Not found.
Rizonejoylib.obj(064):001 ZoneInit [zone_num#]|[#start_num,#end_num] - intialize zones
Rizonejoylib.obj(064):002 SetZone num,x1,y1[,x2,y2]|[,radius]
Rizonejoylib.obj(064):003 Zone (x,y)
Rizonejoylib.obj(064):004 ZoneTest (start_num[,end_num],x,y)
Rizonejoylib.obj(064):005 ZoneTable - returns address of the current zone table
Rizonejoylib.obj(064):006 JFire (port)
Rizonejoylib.obj(064):007 JVert (port)
Rizonejoylib.obj(064):008 JHoriz (port)
Rizonejoylib.obj(064):009 AllFire ([joybits])
Rizonejoylib.obj(064):010 ZoneTableSize - returns size of the current zone table
Rizonejoylib.obj(064):011 NewZoneTable table#,num_zones
Rizonejoylib.obj(064):012 UseZoneTable  - select a zone table for use
Rizonejoylib.obj(064):013 FreeZoneTable table#
Rizonejoylib.obj(064):014 ZoneTableNumber - returns the number of the current zone table
Rizonejoylib.obj(064):015 ZoneMode  - returns -1 for 68020 mode or 0 for 68000 mode
Rizonejoylib.obj(064):016 SetZoneMode mode
Rizonejoylib.obj(064):017 JAdaptorStatus On/Off - status of four player adaptor reading
Rizonejoylib.obj(064):018 GetZoneX1 (zone) - returns the start x pos of a zone
Rizonejoylib.obj(064):019 GetZoneY1 (zone) - returns the start y pos of a zone
Rizonejoylib.obj(064):020 GetZoneX2 (zone) - returns the end x pos of a zone
Rizonejoylib.obj(064):021 GetZoneY2 (zone) - returns the end pos of a zone
Rizonejoylib.obj(064):022 ReadJoyPad port#      --B,R,Y,G,FF,RW,PL,0
Rigfxlib.obj(065):001 PalRed (colour#)
Rigfxlib.obj(065):002 PalGreen (colour#)
Rigfxlib.obj(065):003 PalBlue (colour#)
Rigfxlib.obj(065):004 PaletteInfo palette#
Rigfxlib.obj(065):005 AGAPalRed (colour#)
Rigfxlib.obj(065):006 AGAPalGreen (colour#)
Rigfxlib.obj(065):007 AGAPalBlue (colour#)
Rigfxlib.obj(065):008 PalAdjust palette#,ratio.q[,start_col,end_col]
Rigfxlib.obj(065):009 FillPalette palette#,r,g,b[,start_col,end_col] - fill palette with r,g,b values
Rigfxlib.obj(065):010 AGAFillPalette palette#,r,g,b[,start_col,end_col] - fill palette with AGA r,g,b values
Rigfxlib.obj(065):011 CopyColour sourcepal#,destpal#,colsource#,coldest#
Rigfxlib.obj(065):012 CPUCls bitmap#
Rigfxlib.obj(065):013 SaveCMAP palette#,filename$
Rigfxlib.obj(065):014 MergeBitplanes srcbitmap,srcbitmap,destbitmap,numplanes
Rifxlib.obj(066):001 ClearBitmap bitmap#,delay[,height,offset]
Rifxlib.obj(066):002 FadeInBitmap bitmapsource#,bitmapdest#,delay[,height,offset1,offset2]
Rifxlib.obj(066):003 ZoomX4 source#,dest#,sourceadd,destadd,width,height[,xy_select]
Rifxlib.obj(066):004 Derez source#,dest#,sourceadd,destadd,derez_value,height
Rifxlib.obj(066):005 ZoomXY xzoom,yzoom,height
Rifxlib.obj(066):006 InitZoomXY source#,dest#,sourceadd,destadd
Rifxlib.obj(066):007 ZoomX2 source#,dest#,sourceadd,destadd,width,height
Rifxlib.obj(066):008 GetZoomTables - return pointer to array of tables
Rifxlib.obj(066):009 ZoomX8 source#,dest#,sourceadd,destadd,width,height
Rifxlib.obj(066):010 ADDValue (bitmap#,x,y)
Rifxlib.obj(066):011 ReduceX2 source#,dest#,sourceadd,destadd,width,height
Rifxlib.obj(066):012 ZoomyZoom bitmap#
RomulusConsoleLib.obj(067):001 Console 
RomulusConsoleLib.obj(067):002 OpenConsole #Window,#Console
RomulusConsoleLib.obj(067):003 PrintCon Console#,Expression
RomulusConsoleLib.obj(067):004 NPrintCon Console#,Expression
RomulusConsoleLib.obj(067):005 CloseConsole Console#
RomulusLocaleLib.obj(068):001 IsLocale <>0 if locale exists
RomulusLocaleLib.obj(068):002 UseCatalog Catalogname
RomulusLocaleLib.obj(068):003 FreeCatalog 
RomulusLocaleLib.obj(068):004 GetLocaleStr (#StringNumber,DefaultString$)
RomulusRequestLib.obj(069):001 AsyncReq EasyReqLib Version 2.10 (15/10/2003)
RomulusRequestLib.obj(069):002 GGG 
RomulusRequestLib.obj(069):003 GGGB �
RomulusRequestLib.obj(069):004 OpenEasyReq ( title$, text$, gadgets$ [, window# ] )
RomulusRequestLib.obj(069):005 SetEasyIDCMP IDCMP.l
RomulusRequestLib.obj(069):006 GetEasyIDCMP 
RomulusRequestLib.obj(069):007 GGG 
RomulusRequestLib.obj(069):008 GGGB 
RomulusRequestLib.obj(069):009 OpenAsyncReq ( req#, title$, text$, gadgets$ [, window# ] )
RomulusRequestLib.obj(069):010 CloseAsyncReq [( req# )]
RomulusRequestLib.obj(069):011 SetAsyncIDCMP req#, IDCMP.l
RomulusRequestLib.obj(069):012 GetAsyncIDCMP ( req# )
RomulusRequestLib.obj(069):013 AsyncReqEvent [( req# )]
RomulusRequestLib.obj(069):014 AsyncReqId 
RomulusPrtLib.obj(070):001 PrtText String
RomulusPrtLib.obj(070):002 Hardcopy Screen#,X,Y,Width,Height,PtrWidth,PrtHeight,Flags
RomulusPrtLib.obj(070):003 PrtCommand Command,Para1,Para2,Para3,Para4
RomulusPrtLib.obj(070):004 CheckPrt -1=Printer Off|-3=Printer Offline|-4=Printer On
SdsTCPSocketlib.obj(071):001 TCPSock A sockit object.
SdsTCPSocketlib.obj(071):002 TCPClose 
SdsTCPSocketlib.obj(071):003 TCPAvail 
SdsTCPSocketlib.obj(071):004 BSDSocket (Domain,Type,Protocol)
SdsTCPSocketlib.obj(071):005 BSDBind ([s]ock,*Name,NameLen)
SdsTCPSocketlib.obj(071):006 BSDListen ([s]ock,BackLog)
SdsTCPSocketlib.obj(071):007 BSDAccept ([s]ock,*Addr,*AddrLen)
SdsTCPSocketlib.obj(071):008 BSDConnect ([s]ock,*Name,*NameLen)
SdsTCPSocketlib.obj(071):009 BSDSendTo ([s]ock,*Buf,Len,Flags,*To,ToLen)
SdsTCPSocketlib.obj(071):010 BSDSend ([s]ock,*Buf,Len,Flags)
SdsTCPSocketlib.obj(071):011 BSDRecvFrom ([s]ock,*Buf,Len,Flags,*Addr,*AddrLen)
SdsTCPSocketlib.obj(071):012 BSDRecv ([s]ock,*Buf,Len,Flags)
SdsTCPSocketlib.obj(071):013 BSDShutDown ([s]ock,How)
SdsTCPSocketlib.obj(071):014 BSDSetSockOpt ([s]ock,Level,OptName,*OptVal,OptLen)
SdsTCPSocketlib.obj(071):015 BSDGetSockOpt ([s]ock,Level,OptName,*OptVal,*OptLen)
SdsTCPSocketlib.obj(071):016 BSDGetSockName ([s]ock,*Name,*NameLen)
SdsTCPSocketlib.obj(071):017 BSDGetPeerName ([s]ock,*Name,*NameLen)
SdsTCPSocketlib.obj(071):018 BSDIoctlSocket ([s]ock,Req,*ArgP)
SdsTCPSocketlib.obj(071):019 BSDCloseSocket ([s]ock)
SdsTCPSocketlib.obj(071):020 BSDWaitSelect (nFDS,*ReadFDS,*WriteFDS,*ExceptFDS,*TimeOut,*Signal)
SdsTCPSocketlib.obj(071):021 BSDSetSocketSignals (IntMask,IOMask,UrgentMask)
SdsTCPSocketlib.obj(071):022 BSDGetDTableSize 
SdsTCPSocketlib.obj(071):023 BSDObtainSocket (ID,Domain,Type,Protocol)
SdsTCPSocketlib.obj(071):024 BSDReleaseSocket ([s]ock,ID)
SdsTCPSocketlib.obj(071):025 BSDReleaseCopyOfSocket ([s]ock,ID)
SdsTCPSocketlib.obj(071):026 BSDErrNo 
SdsTCPSocketlib.obj(071):027 BSDSetErrnoPtr (*ErrNoP,Size)
SdsTCPSocketlib.obj(071):028 BSDINet_NToA (IP)
SdsTCPSocketlib.obj(071):029 BSDINet_Addr (*CP)
SdsTCPSocketlib.obj(071):030 BSDINet_LnaOf (,In)
SdsTCPSocketlib.obj(071):031 BSDINet_NetOf (In)
SdsTCPSocketlib.obj(071):032 BSDINet_MakeAddr (Net,Host)
SdsTCPSocketlib.obj(071):033 BSDINet_Network (*CP)
SdsTCPSocketlib.obj(071):034 BSDGetHostByAddr (*Addr,Len,Type)
SdsTCPSocketlib.obj(071):035 BSDGetNetByName (*Name)
SdsTCPSocketlib.obj(071):036 BSDGetNetByAddr (Net,Type)
SdsTCPSocketlib.obj(071):037 BSDGetServByName (*Name,*Proto)
SdsTCPSocketlib.obj(071):038 BSDGetServByPort (Port,*Proto)
SdsTCPSocketlib.obj(071):039 BSDGetProtoByName (*Name)
SdsTCPSocketlib.obj(071):040 BSDGetProtoByNumber (ID)
SdsTCPSocketlib.obj(071):041 BSDVSysLog (Pri,*Msg,Args)
SdsTCPSocketlib.obj(071):042 BSDDup2Socket (Olds,News)
SdsTCPSocketlib.obj(071):043 BSDSendMsg ([s]ock,*Msg,Flags)
SdsTCPSocketlib.obj(071):044 BSDRecvMsg ([s]ock,*Msg,Flags)
SdsTCPSocketlib.obj(071):045 BSDGetHostName (*Name,NameLen)
SdsTCPSocketlib.obj(071):046 BSDGetHostID 
SdsTCPSocketlib.obj(071):047 BSDSocketBaseTagList (*Tags)
SdsTCPSocketlib.obj(071):048 BSDGetSocketEvents (*EventSP)
SdsTCPSocketlib.obj(071):049 BSDGetHostByName (*Name)
SdsTCPSocketlib.obj(071):050 TCPFillMemB *Address,FillByte,Length
SdsTCPSocketlib.obj(071):051 TCPOpen 
SdsTCPSocketlib.obj(071):052 TCPFillMemL *Address,FillLong,Length
SdsTCPSocketlib.obj(071):053 TCPFDSet SockBit,*FDAddress
SdsTCPSocketlib.obj(071):054 TCPFDClear SockBit,*FDAddress
SdsTCPSocketlib.obj(071):055 TCPCreateSocket (TCPSock#,BlockingOnOff,SocketRW,TSecs,TMicros)
SdsTCPSocketlib.obj(071):056 TCPRemoveSocket (TCPSock#)
SdsTCPSocketlib.obj(071):057 TCPFDIsSet (SockBit,*FDAddress)
SdsTCPSocketlib.obj(071):058 TCPFDWriteLoc 
SdsTCPSocketlib.obj(071):059 TCPFDReadLoc 
SdsTCPSocketlib.obj(071):060 TCPConnectSocket (TCPSock#,Host$,Port)
SdsTCPSocketlib.obj(071):061 TCPEvent 
SdsTCPSocketlib.obj(071):062 TCPShutSocket (TCPSock#,How)
SdsTCPSocketlib.obj(071):063 TCPFDIntHighLoc 
SdsTCPSocketlib.obj(071):064 TCPHighest 
SdsTCPSocketlib.obj(071):065 TCPRescanHighest 
SdsTCPSocketlib.obj(071):066 TCPSetStates (TCPSock#,States)
SdsTCPSocketlib.obj(071):067 TCPWrite TCPSock#,*DataAddress,DataLength
SdsTCPSocketlib.obj(071):068 TCPPrint TCPSock#,Data$
SdsTCPSocketlib.obj(071):069 TCPNPrint TCPSock#,Data$
SdsTCPSocketlib.obj(071):070 TCPSetReceiveBuffer (Size)
SdsTCPSocketlib.obj(071):071 TCPReadSocket$ (TCPSock#)
SdsTCPSocketlib.obj(071):072 TCPIsReadEvent (TCPSock#)
SdsTCPSocketlib.obj(071):073 TCPIsWriteEvent (TCPSock#)
SdsTCPSocketlib.obj(071):074 TCPFreeReceiveBuffer 
SdsTCPSocketlib.obj(071):075 TCPBufferAddress 
SdsTCPSocketlib.obj(071):076 TCPFDTempWriteLoc 
SdsTCPSocketlib.obj(071):077 TCPFDTempReadLoc 
SdsTCPSocketlib.obj(071):078 TCPLastReadSize 
SdsTCPSocketlib.obj(071):079 TCPSocketNumber (TCPSock#)
SdsTCPSocketlib.obj(071):080 TCPSocketError (TCPSock#)
SdsTCPSocketlib.obj(071):081 TCPErrorString$ 
SdsTCPSocketlib.obj(071):082 TCPListenSocket (TCPSock#,QueueBacklog)
SdsTCPSocketlib.obj(071):083 TCPGetOwnHostName$ (MaxLength)
SdsTCPSocketlib.obj(071):084 TCPGetIPStr$ (IPAddress.l)
SdsTCPSocketlib.obj(071):085 TCPGetIPClass (IPAddress.l,Class) - Class: 0-3
SdsTCPSocketlib.obj(071):086 TCPExamineHostEntry (Host$)
SdsTCPSocketlib.obj(071):087 TCPHostIPStr$ (Entry)
SdsTCPSocketlib.obj(071):088 TCPHostIP (Entry)
SdsTCPSocketlib.obj(071):089 TCPExamineAddrEntry (IPAddress.l)
SdsTCPSocketlib.obj(071):090 TCPCanonicalName$ 
SdsTCPSocketlib.obj(071):091 TCPSlapSocketIn (Socket,TCPSock#)
SdsTCPSocketlib.obj(071):092 TCPPullSocketOut (TCPSock#)
SdsTCPSocketlib.obj(071):093 TCPGetOwnHostIP 
chunkylib.obj(072):001 Chunky 
chunkylib.obj(072):002 InitChunky Chunky#,width,height,flags (1=24bit 2=8bit)
chunkylib.obj(072):003 FreeChunky Chunky#
chunkylib.obj(072):004 LoadChunky Chunky#,IFFfilename$
chunkylib.obj(072):005 SaveChunky Chunky#,IFFfilename$
chunkylib.obj(072):006 ReadChunky Chunky#,rawfilename$
chunkylib.obj(072):007 WriteChunky Chunky#,rawfilename$
chunkylib.obj(072):008 ProcessChunky chunky#,contrast
chunkylib.obj(072):009 AdjustChunky chunky#,DeltaRed,DeltaGreen,DeltaBlue,
chunkylib.obj(072):010 ScaleChunkyX srcchunky#,destchunky#,newwidth
chunkylib.obj(072):011 ScaleChunkyY srcchunky#,destchunky#,newheight
chunkylib.obj(072):012 CopyChunky srcchunky#,destchunky#,[sx,sy,w,h,dx,dy]
chunkylib.obj(072):013 GreyChunky chunky#
chunkylib.obj(072):014 KillGreyChunky chunky#
chunkylib.obj(072):015 ColorChunky chunky#
chunkylib.obj(072):016 ChunkyLoc chunky#
chunkylib.obj(072):017 ChunkyConvert chunky#[,palette]|[,array.l(),numcols]
chunkylib.obj(072):018 ChunkyToBitMap Chunky#,Bitmap#
chunkylib.obj(072):019 CPlot Chunky#,x,y[,color.l],[red.b,green.b,blue.b]
chunkylib.obj(072):020 GPlot Chunky#,x,y,color.b
chunkylib.obj(072):021 CPoint (Chunky#,x,y)
chunkylib.obj(072):022 GPoint (Chunky#,x,y)
chunkylib.obj(072):023 Col8 (array.l(),numcols,rgb.l)
Ripacklib.obj(073):001 PackPBM sourceaddr,destaddr,length
Ripacklib.obj(073):002 UnpackIFF (sourceaddr,bitmap#[,numlines,xy_offset])
Ripacklib.obj(073):003 ILBMPalette (sourceaddr,palette#[,#offset)
Ripacklib.obj(073):004 ILBMGrab sourceaddr,bitmap#,palette#
Ripacklib.obj(073):005 LoadIFF (filename$,bitmap[,palette])
Ripacklib.obj(073):006 ChunkHeader (a$)
Ripacklib.obj(073):007 UnPackPBM sourceaddr,destaddr,length
Ripacklib.obj(073):008 IFFDepth address -- address of your ILBM IFF file
Ripacklib.obj(073):009 IFFWidth address -- address of your ILBM IFF file
Ripacklib.obj(073):010 IFFHeight address -- address of your ILBM IFF file
Ripacklib.obj(073):011 IFFViewmode address -- address of your ILBM IFF file
RomulusCrunchLib.obj(074):001 Implode Error/CrunchedLen=Bufferadr,DataLen,?Callback
RomulusCrunchLib.obj(074):002 Deplode Success=Startadr
RomulusCrunchLib.obj(074):003 CrMDecrunch Bufferadr [,Destinationadr]
RomulusCrunchLib.obj(074):004 PPDecrunch Bufferadr,Bufferend,Destinationadr
RIAmosFuncLib.obj(075):001 CachesOn bitmask
RIAmosFuncLib.obj(075):002 Reboot  -- performs a cold reboot
RIAmosFuncLib.obj(075):003 Lisa  -- returns Lisa chip version
RIAmosFuncLib.obj(075):004 MakeDir (dirname$)
RIAmosFuncLib.obj(075):005 Rename (oldfilename$,newfilename$)
RIAmosFuncLib.obj(075):006 MemFree 
RIAmosFuncLib.obj(075):007 GTTagValue ([tagvalue])
RIAmosFuncLib.obj(075):008 Timer 
RIAmosFuncLib.obj(075):009 Min (a,b)
RIAmosFuncLib.obj(075):010 CopyByte sourceaddr,destaddr,bytes
RIAmosFuncLib.obj(075):011 CopyWord sourceaddr,destaddr,words
RIAmosFuncLib.obj(075):012 CopyLong sourceaddr,destaddr,longs
RIAmosFuncLib.obj(075):013 Max (a,b)
RIAmosFuncLib.obj(075):014 FileSize (filename$)
RIAmosFuncLib.obj(075):015 BLoad (filename$,[address,[,length,[offset,[memtype]]]])
RIAmosFuncLib.obj(075):016 BSave (filename$,address/bank[,length])
RIAmosFuncLib.obj(075):017 Start (bank)
RIAmosFuncLib.obj(075):018 Length (bank)
RIAmosFuncLib.obj(075):019 Erase bank
RIAmosFuncLib.obj(075):020 EraseAll 
RIAmosFuncLib.obj(075):021 Reserve (length)|(bank,length[,requirements])
RIAmosFuncLib.obj(075):022 NextBank [startbank]
RIAmosFuncLib.obj(075):023 CachesOff bitmask
RIAmosFuncLib.obj(075):024 FillMem address,length[,value]
RIAmosFuncLib.obj(075):025 KeyCode 
RIAmosFuncLib.obj(075):026 BlitterDone 
RIAmosFuncLib.obj(075):027 WaitBlitter 
RIAmosFuncLib.obj(075):028 FindVolume (volumename)
RIAmosFuncLib.obj(075):029 SwapBank (sourcebank,destbank)
RIAmosFuncLib.obj(075):030 DeviceName$ (volumename$)
RIAmosFuncLib.obj(075):031 ChangeDir dir$
RIAmosFuncLib.obj(075):032 BankLimit [numbanks]
RIAmosFuncLib.obj(075):033 SaveExec filename$,list()
banklib.obj(076):001 Bank (bank#)  ;returns location of bank, 0 if not in use
banklib.obj(076):002 InitBank bank#,size,memtype ;0=fast 2=chip 65536=clrmem
banklib.obj(076):003 FreeBank bank#
banklib.obj(076):004 LoadBank bank#,filename$[,memtype]
banklib.obj(076):005 SaveBank bank#,filename$
banklib.obj(076):006 BankLoc (bank#)
banklib.obj(076):007 BankSize (bank#)
banklib.obj(076):008 AllocMem (size,memtype) memtype: 0=fast 2=chip 65536=clrmem
banklib.obj(076):009 FreeMem address,size
datelib.obj(078):001 SystemDate Returns system date as number of days since 1/1/1978
datelib.obj(078):002 Date$ days.l ;converts days since 1/1/1978 to date string
datelib.obj(078):003 NumDays date$ ;converts dd/mm/yyyy to days since 1/1/1978
datelib.obj(078):004 DateFormat 0=dd/mm/yyyy 1=mm/dd/yyyy
datelib.obj(078):005 Days  ;returns day calculated in last call to date$
datelib.obj(078):006 Months  ;returns month calculated in last call to date$
datelib.obj(078):007 Years  ;returns year calculated in last call to date$
datelib.obj(078):008 WeekDay  ;returns day of week calculated in last call to date$
datelib.obj(078):009 Hours  ;gets system time and returns hour of day
datelib.obj(078):010 Mins  ;returns minutes calculated at last call to hour
datelib.obj(078):011 Secs  ;returns seconds calculated at last call to hour
RIReqLib.obj(079):001 ReqFileRequest ([title$][,flags])
RIReqLib.obj(079):002 ReqFileLoc 
RIReqLib.obj(079):003 ReqOutput windowptr
RIReqLib.obj(079):004 ReqFlags flags
RIReqLib.obj(079):005 ReqColour (colour)
myasllib.obj(080):001 ASLFileRequest$ Title$,Pathname$,Filename$ [,Pattern$] [,x,y,w,h]
myasllib.obj(080):002 ASLFontRequest enable flags (1=pen 2=bckgrnd 4=style 8=drawmode 16=fixedsize)
myasllib.obj(080):003 ASLScreenRequest enable flags (1=width 2=height 4=depth 8=overscan 16=scroll)
myasllib.obj(080):004 ASLPathRequest$ Title$,Pathname$ [,x,y,w,h]
myasllib.obj(080):005 ASLMultiSelect Title$,Pathname$,Filename$[,x,y,w,h]
myasllib.obj(080):006 ASLGetFile (argnum)
myasllib.obj(080):007 ASLNextFile 
myasllib.obj(080):008 ASLFreeRequest 
myasllib.obj(080):009 ASLNumFiles 
medlib.obj(082):001 LoadMedModule MedModule#,Name
medlib.obj(082):002 StartMedModule MedModule#
medlib.obj(082):003 PlayMed 
medlib.obj(082):004 StopMed 
medlib.obj(082):005 JumpMed Pattern#
medlib.obj(082):006 SetMedVolume Volume
medlib.obj(082):007 GetMedVolume Channel
medlib.obj(082):008 GetMedNote Channel
medlib.obj(082):009 GetMedInstr Channel
medlib.obj(082):010 SetMedMask Channel Mask
medlib.obj(082):011 DecodeMedModule MedModule#,MemoryLocation
medlib.obj(082):012 MedModule 
methodbblib.obj(083):001 DoMethodA (Obj,Message)
methodbblib.obj(083):002 DoMethod (Obj,MethodID,Tag[,Tag..])
methodbblib.obj(083):003 DoSuperMethodA (Class,Obj,Message)
methodbblib.obj(083):004 DoSuperMethod (Class,Obj,MethodID,Tag[,Tag..])
methodbblib.obj(083):005 CoerceMethodA (Class,Obj,Message)
methodbblib.obj(083):006 CoerceMethod (Class,Obj,MethodID,Tag[,Tag..])
methodbblib.obj(083):007 SetSuperAttrs (Class,Obj,Tag[,Tag..])
methodbblib.obj(083):008 VarArgs (Tag[,Tag..])
renderlib.obj(087):001 ChunkyCLS color
renderlib.obj(087):002 ChunkyPlot x,y,color,[,CLIP]
renderlib.obj(087):003 ChunkyVlin x,y1,y2,color,[,CLIP]
renderlib.obj(087):004 ChunkyPoly numpts,*coords.w,color[,noblitter]
renderlib.obj(087):005 BitMapPoly numpts,*coords.w,color[,ditherbitmap]
renderlib.obj(087):006 RenderToBitmap BitMap#[,DitherBitMap#]
renderlib.obj(087):007 RenderToChunky CopList#[,split]
renderlib.obj(087):008 RenderPoly numpts,*coords.w,color
speaklib.obj(088):001 Speak string
speaklib.obj(088):002 SetVoice rate(150),pitch(110),expression(1),sex,volume(64),freq(22200)
speaklib.obj(088):003 Translate$ returns phoneme translation of a string
speaklib.obj(088):004 PhoneticSpeak phonetic string
speaklib.obj(088):005 VoiceLoc returns location of newvoice struct
Ricommoditieslib.obj(089):001 MakeCommodity (name$,title$,description$
Ricommoditieslib.obj(089):002 SetHotKey (hotkeynum,hotkey$)
Ricommoditieslib.obj(089):003 HotKeyHit 
Ricommoditieslib.obj(089):004 WaitCommodity 
Ricommoditieslib.obj(089):005 CommodityEvent 
Ricommoditieslib.obj(089):006 ExchangeMessage 
Ricommoditieslib.obj(089):007 ExchangeDisable 
Ricommoditieslib.obj(089):008 ExchangeEnable 
Ricommoditieslib.obj(089):009 ExchangeAppear 
Ricommoditieslib.obj(089):010 ExchangeDisAppear 
Ricommoditieslib.obj(089):011 ExchangeKill 
Ricommoditieslib.obj(089):012 ExchangeListChange 
Ricommoditieslib.obj(089):013 ExchangeUnique 
Ricommoditieslib.obj(089):014 CxDisable 
Ricommoditieslib.obj(089):015 CxEnable 
Ricommoditieslib.obj(089):016 CxAppear 
Ricommoditieslib.obj(089):017 CxDisAppear 
Ricommoditieslib.obj(089):018 CxKill 
Ricommoditieslib.obj(089):019 CxListChange 
Ricommoditieslib.obj(089):020 CxUnique 
Ricommoditieslib.obj(089):021 SetCxStatus on|off
Ricommoditieslib.obj(089):022 CommodityMsgPort   -- returns the message port address
seriallib.obj(090):001 OpenSerial device$,unit#,baud,io_serflags
seriallib.obj(090):002 WriteSerial unit#,byte
seriallib.obj(090):003 WriteSerialString unit#,string[,Flags 1=DoIO 2=TrueString] 
seriallib.obj(090):004 ReadSerial (unit#[,flags 1=wait on])  returns -1 if nothing waiting
seriallib.obj(090):005 ReadSerialString (unit#)  returns null if nothing waiting
seriallib.obj(090):006 CloseSerial unit#
seriallib.obj(090):007 SetSerialBuffer unit#,bufferlength
seriallib.obj(090):008 SetSerialLens unit#,readlen,writelen,stopbits
seriallib.obj(090):009 SetSerialParams unit#
seriallib.obj(090):010 SerialEvent (unit#)
seriallib.obj(090):011 ReadSerialMem unit#,Address,Length
seriallib.obj(090):012 WriteSerialMem unit#,Address,Length
Ritrackdisklib.obj(091):001 OpenDisk unit#[,devicename$]
Ritrackdisklib.obj(091):002 MotorOn unit#
Ritrackdisklib.obj(091):003 CloseDisk unit#
Ritrackdisklib.obj(091):004 ReadSector unit#,sector#,buffer[,numsectors]
Ritrackdisklib.obj(091):005 MotorOff unit#
Ritrackdisklib.obj(091):006 WriteSector unit#,sector#,buffer[,numsectors]
Ritrackdisklib.obj(091):007 FormatTrack unit#,track#,buffer[,numtracks]
Ritrackdisklib.obj(091):008 WriteBoot unit#[,bootdata]
Ritrackdisklib.obj(091):009 DiskStatus unit#
Ritrackdisklib.obj(091):010 DiskIO unit#
Ritrackdisklib.obj(091):011 BootProg unit#,memoryaddress
Ritrackdisklib.obj(091):012 DiskMotor   ; Returns -1 if motor is on
arexxlib.obj(092):001 CreateRexxMsg MsgPtr=CreateRexxMsg(ReplyPort,Exten,Host)
arexxlib.obj(092):002 DeleteRexxMsg rexxmsg.l
arexxlib.obj(092):003 FillRexxMsg rexxmsg,&FillStruct
arexxlib.obj(092):004 ClearRexxMsg rexxmsg
arexxlib.obj(092):005 CreateArgString ArgString=CreateArgString(String)
arexxlib.obj(092):006 DeleteArgString argstring
arexxlib.obj(092):007 SendRexxCommand rexxmsg,CommandString,ActionCodes
arexxlib.obj(092):008 ReplyRexxMsg rexxmsg,Result1,Result2,ResultString
arexxlib.obj(092):009 GetRexxResult Result=GetRexxResult(rexxmsg,ResultNum)
arexxlib.obj(092):010 GetRexxCommand String=GetRexxCommand(rexxmsg,ARGNum)
arexxlib.obj(092):011 GetResultString String=GetResultString(rexxmsg)
arexxlib.obj(092):012 RexxEvent rexxmsg=RexxEvent(PortAddress)
arexxlib.obj(092):013 IsRexxMsg Boolean=IsRexxMsg(rexxmsg)
arexxlib.obj(092):014 RexxError ErrorString=RexxError(ErrorCode)
Rifnslib.obj(093):001 FNSPrint fontnum,x,y,a$/string_address[,prefs,colour]
Rifnslib.obj(093):002 InstallFNS (fontnum,address)
Rifnslib.obj(093):003 FNSOutput bitmap[,clip_update (On|Off)]
Rifnslib.obj(093):004 FNSInk colour
Rifnslib.obj(093):005 FNSPrefs prefs[,colour]
Rifnslib.obj(093):006 FNSHeight (fontnum)
Rifnslib.obj(093):007 FNSClip xmin,ymin,xmax,ymax
Rifnslib.obj(093):008 FNSClipOutput - set clipping zone to output bitmap size
Rifnslib.obj(093):009 RemoveFNS fontnum
Rifnslib.obj(093):010 FNSUnderline (fontnum)
Rifnslib.obj(093):011 FNSLength (fontnum,a$[,prefs])
Rifnslib.obj(093):012 FNSVersion - returns quick, lastest version=1.1
Rifnslib.obj(093):013 FNSOrigin [x,y]
Rifnslib.obj(093):014 FNSWidth (fontnum)
Rifnslib.obj(093):015 FNSLoad (fontname$,fontslot)
Rifnslib.obj(093):016 FNSSlot 
Rifnslib.obj(093):017 FNSUnload fontslot
Rifnslib.obj(093):018 FNSSetTab tab_size - set tab size in pixels
Rifnslib.obj(093):019 FNSShadowPrint fontnum,x,y,a$/string_address,[prefs,colour[,shadow]]
animlib.obj(094):001 Anim - IFF Anim
animlib.obj(094):002 LoadAnim Anim#,Filename$[,Palette#]
animlib.obj(094):003 InitAnim Anim#[,BitMap#]
animlib.obj(094):004 NextFrame Anim#
animlib.obj(094):005 Frames (Anim#)
trackerlib.obj(096):001 Module A Sound or Noise tracker module
trackerlib.obj(096):002 LoadModule Module#,Filename$
trackerlib.obj(096):003 PlayModule Module#
trackerlib.obj(096):004 StopModule 
blitzkeyslib.obj(098):001 BlitzKeys On|Off
blitzkeyslib.obj(098):002 RawStatus (Rawkey)
blitzkeyslib.obj(098):003 BlitzRepeat Delay,Speed
blitzkeyslib.obj(098):004 BlitzQualifier 
blitzkeyslib.obj(098):005 HandleRawKey 
blitzkeyslib.obj(098):006 BlitzKey ;same as inkey$ after a bitmapinput
Xbsoundsystemlib.obj(099):001 SSLoadModule (Module#,Name)
Xbsoundsystemlib.obj(099):002 SSFreeModule (Module#)
Xbsoundsystemlib.obj(099):003 SSInitMedLibrary (Returns TRUE if no errors occured.)
Xbsoundsystemlib.obj(099):004 SSDeInitMedLibrary (Returns TRUE if no errors occured.)
Xbsoundsystemlib.obj(099):005 SSPlayMedModule (Module#)
Xbsoundsystemlib.obj(099):006 SSContinueMedModule (Module#)
Xbsoundsystemlib.obj(099):007 SSStopMedModule 
Xbsoundsystemlib.obj(099):008 SSSetMedTempo (Tempo value)
Xbsoundsystemlib.obj(099):009 SSSetMedModuleNum (Song#) Multi-Modules only!
Xbsoundsystemlib.obj(099):010 SSInitOctaMEDLibrary (Returns TRUE if no errors occured.)
Xbsoundsystemlib.obj(099):011 SSDeInitOctaMEDLibrary (Returns TRUE if no errors occured.)
Xbsoundsystemlib.obj(099):012 SSPlayOctaMEDModule (Module#)
Xbsoundsystemlib.obj(099):013 SSContinueOctaMEDModule (Module#)
Xbsoundsystemlib.obj(099):014 SSStopOctaMEDModule 
Xbsoundsystemlib.obj(099):015 SSSetOctaMEDModuleNum (Song#) Multi-Modules only!
Xbsoundsystemlib.obj(099):016 SSInitSidLibrary (Returns TRUE if no errors occured.)
Xbsoundsystemlib.obj(099):017 SSDeInitSidLibrary (Returns TRUE if no errors occured.)
Xbsoundsystemlib.obj(099):018 SSPlaySidSong (Module#,Tune#)
Xbsoundsystemlib.obj(099):019 SSStopSidSong 
Xbsoundsystemlib.obj(099):020 SSPauseSidSong (Use SSContinueSidSong to unpause.)
Xbsoundsystemlib.obj(099):021 SSContinueSidSong 
Xbsoundsystemlib.obj(099):022 SSFastForwardSidSong (Rate)
Xbsoundsystemlib.obj(099):023 SSRewindSidSong (Rate)
Xbsoundsystemlib.obj(099):024 SSDecodeSidSong (Module#,Address,Length)
Xbsoundsystemlib.obj(099):025 SSSetSidFrequency Freq: 50/60
scrolllib.obj(100):001 Scroll X1,Y1,Width,Height,X2,Y2[,BitMap#]
scrolllib.obj(100):002 Plot X,Y,Colour
scrolllib.obj(100):003 Point X,Y,Colour
scrolllib.obj(100):004 Cls [Colour]
scrolllib.obj(100):005 BlockScroll X1,Y1,Width,Height,X2,Y2[,BitMap#]
ElmoreFuncsLib.obj(101):001 Index List() ;Returns index +1 from top of LIST
ElmoreFuncsLib.obj(101):002 SPACE$ (number of spaces)
ElmoreFuncsLib.obj(101):003 Checksum (String$) ;Returns a unique checksum for a given string
ElmoreFuncsLib.obj(101):004 CharCount (String$,byte) ;Returns no. occurances of 'byte' in 'string$'
ElmoreFuncsLib.obj(101):005 SearchEnd (String$,byte,# from End) ;Searches string backwards for Nth byte
ElmoreFuncsLib.obj(101):006 SearchBegin (String$,byte,# from Begin) ;Searches string for Nth byte
ElmoreFuncsLib.obj(101):007 Cipher$ (String$) ;Create/Unencrypt a Cipher$() string
ElmoreFuncsLib.obj(101):008 Repeats (String$) ;Returns # repetitive characters at front of string
ElmoreFuncsLib.obj(101):009 FLen (String$) ; fast way to get the stringlen
elmorehardwarelib.obj(103):001 Freq Channelmask,period
elmorehardwarelib.obj(103):002 Quiet ChannelMask ;Stops specified currently playing sounds
elmorehardwarelib.obj(103):003 VWaitPos RasterLine
elmorehardwarelib.obj(103):004 Ticks  ;'ticks' since last ResetTimer (1/50 secs. PAL, 1/60 NTSC)
elmorehardwarelib.obj(103):005 ResetTimer  ;Resets timer to zero 'Ticks.'
elmorehardwarelib.obj(103):006 JoyC (Port)  ;For 2-button controllers:  Detects buttons pressed
elmorehardwarelib.obj(103):007 CheckAGA  ;Returns 'TRUE' for AGA machines, otherwise returns 'FALSE'
elmorehardwarelib.obj(103):008 PeekTo$ (Address,byte)  ;Reads memory into string upto specified byte
elmorehardwarelib.obj(103):009 ForcePAL  ;Forces screen mode to PAL (50hz)
elmorehardwarelib.obj(103):010 ForceNTSC  ;Forces screen mode to NTSC (60hz)
elmorehardwarelib.obj(103):011 Depth (Bitmap#) ;Returns DEPTH of specified bitmap
elmorehardwarelib.obj(103):012 ClickMouse  ;Waits for left mouse button to be CLICKED
collslib.obj(104):001 SetCollOdd 
collslib.obj(104):002 SetColl Colour,Bitplanes[,Playfield 1=front, 2=back]
collslib.obj(104):003 SetCollHi Bitplanes
collslib.obj(104):004 ShapesHit (Shape#,X,Y,Shape#,X,Y)
collslib.obj(104):005 ShapeSpriteHit (Shape#,X,Y,Sprite#,X,Y)
collslib.obj(104):006 SpritesHit (Sprite#,X,Y,Sprite#,X,Y)
collslib.obj(104):007 RectsHit (X1,Y1,Width1,Height1,X2,Y2,Width2,Height2)
collslib.obj(104):008 SColl (Sprite Channel,Sprite Channel)
collslib.obj(104):009 PColl (Sprite Channel)
collslib.obj(104):010 DoColl 
ElmoreMathLib.obj(105):001 Xor (expression,expression) ;Returns Exclusive OR of two expressions
ElmoreMathLib.obj(105):002 Largest.l (Long Integer1,Long Integer2)
ElmoreMathLib.obj(105):003 Smallest.l (Long Integer1,Long Integer2)
ElmoreMathLib.obj(105):004 Largest.q (Quick1,Quick2)
ElmoreMathLib.obj(105):005 Smallest.q (Quick1,Quick2)
ElmoreMathLib.obj(105):006 Largest (Integer1,Integer2)
ElmoreMathLib.obj(105):007 Smallest (Integer1,Integer2)
ElmoreMathLib.obj(105):008 Avg.l (Long Integer 1,Long Integer 2)
ElmoreMathLib.obj(105):009 Avg.q (Quick1,Quick2)
ElmoreMathLib.obj(105):010 Avg (Integer1,Integer2)
ElmoreMathLib.obj(105):011 RRandomize Seed
ElmoreMathLib.obj(105):012 RRnd (Low,High)
ElmoreMathLib.obj(105):013 Hex #
ElmoreMathLib.obj(105):014 HexString$) ;Converts hexadecimal (in string) value to decimal 
ElmoreMathLib.obj(105):015 Bin #
ElmoreMathLib.obj(105):016 BinString$) ;Converts binary value (in string) to decimal �
cliargslib.obj(106):001 NumPars   pars.w=NumPars  Number of paramters passed to program.
cliargslib.obj(106):002 Par$   parameter$=Par$(Paramter#)   Returns the string value of a parameter.
cliargslib.obj(106):003 FromCLI   result=FromCLI   0=Run from WorkBench, -1=Run from CLI
cliargslib.obj(106):004 ParPath$   path$=ParPath$(Par#,#type)  Full/Dir path of WB arg. (v36+ only!)
ElmoreSysLib.obj(107):001 GetGlobalStrAddr (String$) ;Returns address of null-termed string
ElmoreSysLib.obj(107):002 ChipFree ;Returns largest block of free CHIP memory
ElmoreSysLib.obj(107):003 FastFree ;Returns largest block of free FAST memory
ElmoreSysLib.obj(107):004 LargestFree ;Returns largest block of memory available
ElmoreSysLib.obj(107):005 IntuitionBase  ;Returns Intuition Library base
ElmoreSysLib.obj(107):006 DosBase  ;Returns DOS Library base
ElmoreSysLib.obj(107):007 GraphicsBase  ;Returns Graphics Library base
ElmoreSysLib.obj(107):008 FFPBase  ;Returns FFP Math Library base
ElmoreSysLib.obj(107):009 DiskFontBase  ;Returns DiskFont Library base
ElmoreSysLib.obj(107):010 CommoditiesBase  ;Returns Commodities Library base
ElmoreSysLib.obj(107):011 IconBase  ;Returns Icon Library base
ElmoreSysLib.obj(107):012 RexxSysBase  ;Returns RexxSys Library base
ElmoreSysLib.obj(107):013 Request (Title$,text$,button$) ;OS 2.0 & above System Requester
ElmoreSysLib.obj(107):014 ActiveScreen  ;Returns ADDRESS of current Intuition screen
ElmoreSysLib.obj(107):015 ScreenWidth  ;Returns width in pixels of active screen
ElmoreSysLib.obj(107):016 ScreenHeight  ;Returns height in pixels of active screen
ElmoreSysLib.obj(107):017 ActiveWindow  ;Returns ADDRESS of current Intuition window
ElmoreSysLib.obj(107):018 WaitFor (IDCMP Code)  ;Delays until specified Intuition event occurs
ElmoreSysLib.obj(107):019 ShowRequesters [0=Cancel] [1=On Workbench Screen] [2=In Current Window]
ElmoreSysLib.obj(107):020 Null ; 0
mouselib.obj(108):001 Mouse On|Off
mouselib.obj(108):002 Pointer Sprite#,Sprite Channel
mouselib.obj(108):003 MouseArea Minx,Miny,Maxx,Maxy
mouselib.obj(108):004 MouseX 
mouselib.obj(108):005 MouseY 
mouselib.obj(108):006 MouseXSpeed 
mouselib.obj(108):007 MouseYSpeed 
mouselib.obj(108):008 PositionMouse x,y
ElmoreDosLib.obj(109):001 ChDir (Path$) ;Change directory: Function version returns FALSE for failure
ElmoreDosLib.obj(109):002 PathLock ;Returns lock of current path
ElmoreDosLib.obj(109):003 MoreEntries ;TRUE=Another entry was read:  FALSE=No more entries
ElmoreDosLib.obj(109):004 EntryName$ ;Filename of current directory entry
ElmoreDosLib.obj(109):005 EntryDIR ;Returns TRUE if entry is a sub-directory, FALSE for files
ElmoreDosLib.obj(109):006 EntryBits$ ;Returns protection-bits for directory entry [HSARWED]
ElmoreDosLib.obj(109):007 EntrySize ;Returns size in bytes of current directory entry
ElmoreDosLib.obj(109):008 EntryDate ;Returns entry date as number of days since 1/1/1978
ElmoreDosLib.obj(109):009 EntryHour ;Returns hour (0-23) entry was last changed
ElmoreDosLib.obj(109):010 EntryMins ;Returns minutes (0-59) entry was last changed
ElmoreDosLib.obj(109):011 EntrySecs ;Returns seconds (0-59) entry was last changed
ElmoreDosLib.obj(109):012 EntryComment$ ;Returns comment-string associated with entry
ElmoreDosLib.obj(109):013 CopyFile (File1$,File2$) ;Returns TRUE if file was copied successfully
ElmoreDosLib.obj(109):014 SetCopyBuffer 256+  ;Set disk buffer for 'CopyFile'
ElmoreDosLib.obj(109):015 NameFile (OldName$,NewName$) ;Returns TRUE if file could be renamed
ElmoreDosLib.obj(109):016 MakeDir (PathName$) ;Returns TRUE if directory could be created
ElmoreDosLib.obj(109):017 AnalyzeDisk (DriveName$) ;Returns TRUE if device name is valid
ElmoreDosLib.obj(109):018 DiskUnit ;Returns unit# of last drive analyzed
ElmoreDosLib.obj(109):019 DiskErrors ;Number of soft errors on last drive analyzed
ElmoreDosLib.obj(109):020 DiskCapacity ;Capacity in bytes of last drive analyzed
ElmoreDosLib.obj(109):021 DiskUsed ;No. bytes used of last analyzed drive
ElmoreDosLib.obj(109):022 DiskBlocks ;Bytes per block of last drive analyzed
ElmoreDosLib.obj(109):023 DiskFree ;No. free bytes on last analyzed disk
ElmoreDosLib.obj(109):024 XXXXX (File1$,File2$) ;Returns TRUE if file was moved successfully
ElmoreDosLib.obj(109):025 GetAssigns  types ;types are 0=devices 1=directory 2=volumes
ElmoreDosLib.obj(109):026 Assign$ ;Returns assign-string Null-string is end of list
sortlib.obj(110):001 Sort Arrayname()
sortlib.obj(110):002 SortUp 
sortlib.obj(110):003 SortDown 
sortlib.obj(110):004 By 
ElmoreIncLib.obj(111):001 IncSound Success=IncSound(SOUND#,?LABEL or ADDRESS)
ElmoreIncLib.obj(111):002 IncBitmap Success=IncBitmap(BITMAP#,?LABEL or ADDRESS)
ElmoreIncLib.obj(111):003 IncMod Success=IncMod(TRACKER-MODULE#,?LABEL or ADDRESS)
ElmoreIncLib.obj(111):004 IncMed Success=IncMed(MED-MODULE#,?LABEL or ADDRESS)
ElmoreIncLib.obj(111):005 IncShape Success=IncShape(SHAPE#,?LABEL or ADDRESS [,Cookiecut?])
ElmoreIncLib.obj(111):006 IncNextShape Success=IncNextShape [(Cookiecut?)] ;*MUST* use with IncShape(...)
ElmoreIncLib.obj(111):007 IncDataABS Bytes=IncDataABS(?LABEL or ADDRESS,DESTINATION ADDRESS)
ElmoreIncLib.obj(111):008 IncData Address=IncData(?LABEL or ADDRESS,MEMTYPE) ;0=fast 2=chip 65536=clearmem
ElmoreIncLib.obj(111):009 FreeIncData SIZE,ADDRESS ;As returned from IncSize(...) and IncData(...)
ElmoreIncLib.obj(111):010 SaveIncData Success=SaveIncData(Filename$,?LABEL or ADDRESS)
ElmoreIncLib.obj(111):011 IncText$ n$=IncText$(?LABEL or ADDRESS[,max length])
ElmoreIncLib.obj(111):012 IncSize bytes=IncSize(?LABEL OR ADDRESS)
spriteslib.obj(112):001 GetaSprite Sprite#,Shape#
spriteslib.obj(112):002 ShowSprite Sprite#,X,Y,Sprite Channel
spriteslib.obj(112):003 InFront Sprite Channel
spriteslib.obj(112):004 InFrontF Sprite Channel
spriteslib.obj(112):005 InFrontB Sprite Channel
spriteslib.obj(112):006 SaveSprites Sprite#,Sprite#,Filename$
spriteslib.obj(112):007 LoadSprites Sprite#[,Sprite#],Filename$
spriteslib.obj(112):008 SpriteMode 0=16 1=32 2=64
spriteslib.obj(112):009 Sprite 
cd32lib.obj(113):001 WriteCD32Mem (AppName$,FileName$,Address,Length/10)
cd32lib.obj(113):002 ReadCD32Mem (AppName$,FileName$,Address,Length/10)
cd32lib.obj(113):003 InitCD32 ;returns true if ok, false if fails
cd32lib.obj(113):004 ExamineCD32 ;-1=programdisk 0=nodisk n=number of tracks
cd32lib.obj(113):005 PlayCD32 track#[,numtracks]
cd32lib.obj(113):006 StopCD32 
cd32lib.obj(113):007 ControlCD32 ;0=play 1=pause 2=ffwd 3=rewind
cd32lib.obj(113):008 TocCD32 ;returns location of the toc read by Examine
cd32lib.obj(113):009 ConfigCD32 [&TagList] ;can return &currentconfig
cd32lib.obj(113):010 ReadCD32 (CD_Offset,Address,Length)
iffmakelib.obj(114):001 SaveBitmap BitMap#,Filename$[,Palette#]
iffmakelib.obj(114):002 SaveScreen Screen#,Filename$
iffmakelib.obj(114):003 SaveShape Shape#,Filename$[,Palette#]
iffmakelib.obj(114):004 SavePalette Palette#,Filename$
audiolib.obj(116):001 DiskPlay Filename$,Channelmask[,Vol1[,Vol2...]]
audiolib.obj(116):002 DiskBuffer Bufferlen
audiolib.obj(116):003 LoadSound Sound#,Filename$
audiolib.obj(116):004 Sound Sound#,Channelmask[,Vol1[,Vol2...]]
audiolib.obj(116):005 Volume Channelmask,Vol1[,Vol2...]
audiolib.obj(116):006 Filter On|Off
audiolib.obj(116):007 LoopSound Sound#,Channelmask[,Vol1[,Vol2...]]
audiolib.obj(116):008 InitSound Sound#,Length[,Period[,Repeat]]
audiolib.obj(116):009 SoundData Sound#,Offset,Data
audiolib.obj(116):010 PeekSound (Sound#,Offset)
audiolib.obj(116):011 DecodeSound Sound#,MemoryLocation
audiolib.obj(116):012 SetPeriod Sound#,Period
blitzoslib.obj(117):001 Page 
blitzoslib.obj(117):002 InitPage Page#,BitMap#,NumBoxes
blitzoslib.obj(117):003 FreePage Page#
blitzoslib.obj(117):004 AddBox Page#,Box#,x,y,w,h,type[,text$]|[,shape,shape]
blitzoslib.obj(117):005 RedrawPage 
blitzoslib.obj(117):006 RedrawBox Box#
blitzoslib.obj(117):007 SelectBox [Box#]|[x+,y+][0,x,y] ;deselects previously selected
blitzoslib.obj(117):008 DeSelectBox 
blitzoslib.obj(117):009 ActivateSelectedBox 
blitzoslib.obj(117):010 SetBox Box#[,Value]|[xprop,yprop]
blitzoslib.obj(117):011 BoxValue (Box#)|(Page#,Box#)
blitzoslib.obj(117):012 SetBoxString Box#,String$
blitzoslib.obj(117):013 BoxString (Box#)|(Page#,Box#)
blitzoslib.obj(117):014 BoxShow Box#[,Bitmap#,x,y]|[dx,dy]
blitzoslib.obj(117):015 BoxSelected 
blitzoslib.obj(117):016 BoxPrint Box#[,String$]|[Bank#,Line]
blitzoslib.obj(117):017 SetBoxColor Box#,color
blitzoslib.obj(117):018 BlitzEvent ;handles user input and returns event
blitzoslib.obj(117):019 SetBoxTitle Box#,String$
blitzoslib.obj(117):020 DisableBox Box#
blitzoslib.obj(117):021 EnableBox Box#
blitzoslib.obj(117):022 MouseEnabled 
blitzoslib.obj(117):023 SetPagePens Page#,c0,c1,c2,c3 (defaults: 3,1,2,3)
blitzoslib.obj(117):024 BoxPropX Box#
blitzoslib.obj(117):025 BoxPropY Box#
blitzoslib.obj(117):026 ChangeBox Page#,Box#,Value
blitzoslib.obj(117):027 ToggleBox Box#
blitzoslib.obj(117):028 SpotBox ; returns box that mouse is over
shapetrixlib.obj(118):001 Scale Shape#,X Ratio,Y Ratio[,Palette#]
shapetrixlib.obj(118):002 XFlip Shape#
shapetrixlib.obj(118):003 YFlip Shape#
shapetrixlib.obj(118):004 Rotate Shape#,Angle Ratio
sis2dlib.obj(119):001 Circle x,y,rx[,ry],color
sis2dlib.obj(119):002 Circlef x,y,rx[,ry],color
sis2dlib.obj(119):003 Box x1,y1,x2,y2,color
sis2dlib.obj(119):004 Boxf x1,y1,x2,y2,color
sis2dlib.obj(119):005 Line [x1,y1,]x2,y2,color[,width]
sis2dlib.obj(119):006 FreeFill frees memory allocated for 2d fill routines
sis2dlib.obj(119):007 AllocFill for internal use only (polylib.obj)
sis2dlib.obj(119):008 ReMap colour# to replace,destination colour# [,BitMap destintion
sis2dlib.obj(119):009 FloodFill x,y,colour [,border colour]
sis2dlib.obj(119):010 Poly numpts,*coords.w,color
sis2dlib.obj(119):011 Polyf numpts,*coords.w,color[,color2]
sis2dlib.obj(119):012 BitPlanesBitMap srcbitmap,destbitmap,planepick
sis2dlib.obj(119):013 ClipBlit Shape#,X,Y,[Excess]
sis2dlib.obj(119):014 ClipBlitMode BPLCON0
sis2dlib.obj(119):015 BitMapWindow srcbitmap,destbitmap,x,y,w,h
sis2dlib.obj(119):016 BitMapOrigin BitMap#,x,y
vallib.obj(120):001 Val (String$)
vallib.obj(120):002 Int (Expression)
vallib.obj(120):003 Sgn (Expression)
vallib.obj(120):004 Frac (Expression)
vallib.obj(120):005 QFrac (Quick)
vallib.obj(120):006 QWrap (Quick,Low,High)
vallib.obj(120):007 Rnd [(Range)]
vallib.obj(120):008 QAbs (Quick)
vallib.obj(120):009 Abs (Expression)
vallib.obj(120):010 QLimit (Quick,Low,High)
vallib.obj(120):011 NTSC 
vallib.obj(120):012 DispHeight 
vallib.obj(120):013 VPos 
vallib.obj(120):014 True 
vallib.obj(120):015 False 
vallib.obj(120):016 QAngle (Src X,Src Y,Dest X,Dest Y)New
vallib.obj(120):017 Vallong (String$)
vallib.obj(120):018 RndSeed value ;set start value for random generator
Rievallib.obj(121):001 ConvToPostFix string,buffer
Rievallib.obj(121):002 PFEvaluate (string)
Rievallib.obj(121):003 PFRegisters *registerblock - pointer to registers
Rievallib.obj(121):004 PFErrorType - returns error number or 0 for none
Rievallib.obj(121):005 PFErrorText - returns error text corresponding to error
Rievallib.obj(121):006 PFIndirectAddr - returns last indirect lookup
stencillib.obj(122):001 Stencil Stencil#,BitMap#
stencillib.obj(122):002 SBlit Stencil#,Shape#,X,Y[,Excessonoff]
stencillib.obj(122):003 SBlitMode BLTCON0
guigfx.library(123):001 MakePictureA_ (array,width,height,tags)
guigfx.library(123):002 LoadPictureA_ (filename,tags)
guigfx.library(123):003 ReadPictureA_ (rastport,colormap,x,y,width,height,tags)
guigfx.library(123):004 ClonePictureA_ (pic,tags)
guigfx.library(123):005 DeletePicture_ (pic)
guigfx.library(123):006 UpdatePicture_ (pic)
guigfx.library(123):007 AddPictureA_ (psm,pic,tags)
guigfx.library(123):008 AddPaletteA_ (psm,palette,tags)
guigfx.library(123):009 AddPixelArrayA_ (psm,array,width,height,tags)
guigfx.library(123):010 RemColorHandle_ (colorhandle)
guigfx.library(123):011 CreatePenShareMapA_ (tags)
guigfx.library(123):012 DeletePenShareMap_ (psm)
guigfx.library(123):013 ObtainDrawHandleA_ (psm,rastport,cm,tags)
guigfx.library(123):014 ReleaseDrawHandle_ (drawhandle)
guigfx.library(123):015 DrawPictureA_ (drawhandle,pic,x,y,tags)
guigfx.library(123):016 MapPaletteA_ (drawhandle,palette,pentab,tags)
guigfx.library(123):017 MapPenA_ (drawhandle,rgb,tags)
guigfx.library(123):018 CreatePictureBitMapA_ (drawhandle,pic,tags)
guigfx.library(123):019 DoPictureMethodA_ (pic,method,arguments)
guigfx.library(123):020 GetPictureAttrsA_ (pic,tags)
guigfx.library(123):021 LockPictureA_ (pic,mode,args)
guigfx.library(123):022 UnLockPicture_ (pic,mode)
guigfx.library(123):023 IsPictureA_ (filename,tags)
guigfx.library(123):024 CreateDirectDrawHandleA_ (drawhandle,sw,sh,dw,dh,tags)
guigfx.library(123):025 DeleteDirectDrawHandle_ (ddh)
guigfx.library(123):026 DirectDrawTrueColorA_ (ddh,array,x,y,tags)
guigfx.library(123):027 CreatePictureMaskA_ (pic,mask,maskwidth,tags)
fileiolib.obj(124):001 OpenFile (File#,Filename$)
fileiolib.obj(124):002 CloseFile File#
fileiolib.obj(124):003 KillFile Filename$
fileiolib.obj(124):004 Fields File#,Var1[,Var2...]
fileiolib.obj(124):005 Put File#,Record
fileiolib.obj(124):006 Get File#,Record
fileiolib.obj(124):007 FileOutput File#
fileiolib.obj(124):008 FileInput File#
fileiolib.obj(124):009 Lof (File#)
fileiolib.obj(124):010 FileSeek File#,Position
fileiolib.obj(124):011 Loc (File#)
fileiolib.obj(124):012 Eof (File#)
fileiolib.obj(124):013 DosBuffLen Bytes
fileiolib.obj(124):014 File 
fileiolib.obj(124):015 ReadFile (File#,Filename$)
fileiolib.obj(124):016 WriteFile (File#,Filename$)
fileiolib.obj(124):017 WriteMem File#,Address,Length
fileiolib.obj(124):018 ReadMem File#,Address,Length
fileiolib.obj(124):019 Exists (Filename$)
fileiolib.obj(124):020 WriteType File#,Variable ;write a whole type (strings too)
fileiolib.obj(124):021 ReadType File#,Variable ;read a whole type (strings too)
fileiolib.obj(124):022 CopyType srctype,dsttype ;copy a whole type (strings too) to another
fileiolib.obj(124):023 ClearType type; clear a whole type (strings too)
LotanCompare.obj(125):001 FindByte (Str,Byte)|(Addr,Byte,Len) - Finds a Byte in memory.
LotanCompare.obj(125):002 FindLong (Str,Long)|(Addr,Long,Len) - Finds a Long in memory.
LotanCompare.obj(125):003 FindStrg (FindStr,Str)
LotanCompare.obj(125):004 FindWord (Str,Word)|(Addr,Word,Len) - Finds a Word in memory.
LotanCompare.obj(125):005 CountByte (Str,Byte)|(Addr,Byte,Len)
LotanCompare.obj(125):006 CountWord (Str,Word)|(Addr,Word,Len)
LotanCompare.obj(125):007 CountLong (Str,Long)|(Addr,Long,Len)
LotanCompare.obj(125):008 Big (Int,Int) - Returns biggest
LotanCompare.obj(125):009 Low (Int,Int) - Returns Lowest
LotanIntuition.obj(126):001 OpenS (Width,Height,Depth,ScrRes,Title[,Tags])
LotanIntuition.obj(126):002 OpenW (X,Y,Width,Height,IDCMP,Flags,Title[,Scr[,Gads[,Tags]]])
LotanIntuition.obj(126):003 CloseS Scr - Used to close a screen
LotanIntuition.obj(126):004 CloseW Win - Used to close a window
LotanIntuition.obj(126):005 GetICode (Win) - Used to get event code
LotanIntuition.obj(126):006 GetIClass (Win) - Used to get event class
LotanIntuition.obj(126):007 WaitIMsg (Win) - Waits for a message from Intuition
LotanIntuition.obj(126):008 WaitICode Win,Code - Waits for Code(s)
LotanIntuition.obj(126):009 WaitIClass Win,Class - Waits for Class(es)
LotanIntuition.obj(126):010 MsgAddr - Last IntuiMessage structure
LotanIntuition.obj(126):011 MsgCode - Code part of the last IntuiMessage
LotanIntuition.obj(126):012 MsgClass - Class part of the last IntuiMessage
LotanIntuition.obj(126):013 MsgQualifier - Qualifier part of the last IntuiMessage
LotanIntuition.obj(126):014 AcScreen - Used to get the pointer of the active screen
LotanIntuition.obj(126):015 AcWindow - Used to get the pointer of the active window
LotanIntuition.obj(126):016 ScrMseX [(Scr)] - Returns X position of the mouse pointer relative to a screen
LotanIntuition.obj(126):017 ScrMseY [(Scr)] - Returns Y position of the mouse pointer relative to a screen
LotanIntuition.obj(126):018 WinMseX [(Win)] - Returns X position of the mouse pointer relative to a window
LotanIntuition.obj(126):019 WinMseY [(Win)] - Returns Y position of the mouse pointer relative to a window
LotanIntuition.obj(126):020 BBBB �
LotanIntuition.obj(126):021 BBBB 
LotanIntuition.obj(126):022 ScrMseIn ([Scr,]x1,y1,x2,y2)
LotanIntuition.obj(126):023 BBBB �
LotanIntuition.obj(126):024 BBBB 
LotanIntuition.obj(126):025 WinMseIn ([Win,]x1,y1,x2,y2)
LotanIntuition.obj(126):026 NoMoreWin [(Scr)] - Used to check if there are windows on a screen
LotanIntuition.obj(126):027 WaitNoMoreWin [(Scr)] - Waits while windows are still opened on a screen
LotanIntuition.obj(126):028 intuitionbase - Returns pointer to Intuition library base
LotanConvert.obj(127):001 d2b (Int[,Len]) - Returns Bin representation.
LotanConvert.obj(127):002 d2c (Int[,Len]) - Returns Asc representation.
LotanConvert.obj(127):003 d2s (Int[,Len]) - Returns Str representation.
LotanConvert.obj(127):004 d2x (Int[,Len]) - Returns Hex representation.
LotanConvert.obj(127):005 c2b 
LotanConvert.obj(127):006 c2d (Str[,Len]) - Returns Dec representation.
LotanConvert.obj(127):007 c2x (Str[,Len]) - Returns Hex representation.
LotanConvert.obj(127):008 s2d (Str) - Convert in Dec.
LotanConvert.obj(127):009 x2d (Str) - Convert Hex in a string in Dec.
LotanConvert.obj(127):010 b2d (Str[,Len] - Convert a BinStr in Dec.
linklistlib.obj(128):001 FirstItem (Arrayname())
linklistlib.obj(128):002 AddItem (N Arrayname())
linklistlib.obj(128):003 NextItem (Arrayname())
linklistlib.obj(128):004 ResetList Arrayname()
linklistlib.obj(128):005 KillItem Arrayname()
linklistlib.obj(128):006 AddFirst (Arrayname())
linklistlib.obj(128):007 ClearList Arrayname()
linklistlib.obj(128):008 AddLast (Arrayname())
linklistlib.obj(128):009 PushItem Arrayname()
linklistlib.obj(128):010 PopItem Arrayname()
linklistlib.obj(128):011 PrevItem Arrayname()
linklistlib.obj(128):012 LastItem Arrayname()
linklistlib.obj(128):013 ItemStackSize Max Items
linklistlib.obj(128):014 SortList Arrayname(),sizeof .type\offset
linklistlib.obj(128):015 SetItem Arrayname(),&Item
linklistlib.obj(128):016 CountList (Arrayname())
linklistlib.obj(128):017 CountItem (Arrayname())
linklistlib.obj(128):018 NextItemFast (Arrayname());same as nextitem but need manual task/Interrupt blocking 
linklistlib.obj(128):019 FillArray array(),value -- only byte/word/long arrays!
wzlib.obj(129):001 Wizard Wizards Lib
wzlib.obj(129):002 BBBBC �
wzlib.obj(129):003 WZWindow window#,address or fname need on first call,max gadgets[,x,y,w,h,wzid]
wzlib.obj(129):004 WZCloseWindow Window#
wzlib.obj(129):005 WZGadHit ;Current Gadgetnum
wzlib.obj(129):006 WZInput [gadget];Current (or spezified Gadget)Slider etc. Value
wzlib.obj(129):007 WZHandle ;Current Windowhandleaddress
wzlib.obj(129):008 WZWindowAddr ;Current Windowaddress
wzlib.obj(129):009 WZSurface  ;Address of Surface
wzlib.obj(129):010 WZTags Tag,Value [,Tag,Value...]
wzlib.obj(129):011 WZGadAddr GadgetId; Returns Gadget Addr
wzlib.obj(129):012 WZGadHelp  ;Returns Gadgethelpstring
wzlib.obj(129):013 WZMenuHelp ;Returns Menuhelpstring
wzlib.obj(129):014 WZPrint Id or Name,Value (noFloat),[.];Set Gadget Parameter
wzlib.obj(129):015 WZGadName  ;Returns Gadget Name
wzlib.obj(129):016 WZMenuName ;Returns Menu Name
wzlib.obj(129):017 WZListAdd Listbase.List,string$[,Num,Data.l];Add Entry for Listview
wzlib.obj(129):018 WZListRemove Listbase.List[,Num];Remove Entry for Listview
wzlib.obj(129):019 WZListString Listbase.List,Item[,Mode];Returns Item String Mode=1 all Mode=2 clear select
wzlib.obj(129):020 WZListAddr Listbase.List,Item;Adress of Listview
wzlib.obj(129):021 WZEnable Gadnum;Enable Wizard Gadget
wzlib.obj(129):022 WZDisable Gadnum;Disable Wizard Gadget
wzlib.obj(129):023 WZListItems Listbase ;Returns Number of Listviewitems
wzlib.obj(129):024 WZMenuOff Menuname;
wzlib.obj(129):025 WZMenuOn Menuname;
wzlib.obj(129):026 WZMenuSet Menuname,Status;Set Toggle Status
wzlib.obj(129):027 WZMenuGet Menuname;Get Toggle Status
wzlib.obj(129):028 WZDoubleClick ;Returns Gadnumber for Doubleclick
wzlib.obj(129):029 WZYFontsize ;Return y Fontheight
wzlib.obj(129):030 WZXFontsize ;Return x Fontheight
wzlib.obj(129):031 WZPutMsg Put Message in Reg d0 to Blitz Port for use with Event
wzlib.obj(129):032 GetD0 Variable,..;Put Variables to d0-d2 a2 =Newtypeaddr
wzlib.obj(129):033 PutD0 Put d0 to Variable var=PutD0
wzlib.obj(129):034 WZWaitEvent (IntuiMsg if one exists);
wzlib.obj(129):035 PushD0 Variable,..;Put Register d0 to Stack
wzlib.obj(129):036 PowerPCBase Returns Address of powerpc.library
wzlib.obj(129):037 RunPPc ?CodeAddr,[d1,d2,a1,a5]
wzlib.obj(129):038 WZListData Listbase.List,Item;Content of Listview userdata 
wzlib.obj(129):039 WZListPos Name or id;pos=Listviewpos 1. visible entry
wzlib.obj(129):040 WZGetString Name or id;string$=String in Stringgadget
wzlib.obj(129):041 LockBasic ;Lock Basic for Subtask
wzlib.obj(129):042 UnLockBasic Unlock Basic for Subtask
wzlib.obj(129):043 Tags Tag,Value [,Tag,Value...]
wzlib.obj(129):044 WZInputstr ;Current Gadget String
wzlib.obj(129):045 WZListNum Name or id;pos=give number of sel entry
wzlib.obj(129):046 WZListAddTree Listbase.List,string$[,Parent Node[,num.l[,child list[,UserData];Add Entry for Hierachy
wzlib.obj(129):047 WZGetNode (WizardNode);pos=give the selected Hierachy Node
wzlib.obj(129):048 WZID (Object Name);Returns the ID num of a given name
wzlib.obj(129):049 WZLoadGUI pointer to a incbin file or filename.wizard
wzlib.obj(129):050 WZHandlenocheck ;Current Windowhandleaddress
nSort.obj(131):001 NSortUp (Array(), Start, End) - Sort the portion of the array
nSort.obj(131):002 NSortDown (Array(), Start, End) - Sort the portion of the array
brexxlib.obj(132):001 Record [Tape#]
brexxlib.obj(132):002 PlayBack [Tape#]
brexxlib.obj(132):003 SaveTape Tape#,Filename$
brexxlib.obj(132):004 LoadTape Tape#,filename$
brexxlib.obj(132):005 AbsMouse X,Y
brexxlib.obj(132):006 RelMouse X Offset,Y Offset
brexxlib.obj(132):007 MouseButton Button,On|Off : 0=Left
brexxlib.obj(132):008 ClickButton Button : 0=Left
brexxlib.obj(132):009 MacroKey Tape#,Rawkey,Qualifier
brexxlib.obj(132):010 TapeTrap [Tape#]
brexxlib.obj(132):011 QuietTrap On|Off
brexxlib.obj(132):012 Type String$[,QUILIFIER
brexxlib.obj(132):013 QuickPlay On|Off
brexxlib.obj(132):014 XStatus 
brexxlib.obj(132):015 PlayWait 
brexxlib.obj(132):016 RawKeyState (rawkeynum) ;press =-1 or rel= 0 of the rawkey
brexxlib.obj(132):017 RawQualifier 
brexxlib.obj(132):018 Tape A BREXX Macro
brexxlib.obj(132):019 FreeMacroKey Rawkey,Qualifier
Riarexxlib.obj(133):001 RXCreatePort (name$)
Riarexxlib.obj(133):002 RXDeletePort 
Riarexxlib.obj(133):003 RXReadPort 
Riarexxlib.obj(133):004 RXWaitPort 
Riarexxlib.obj(133):005 RXReplyMsg errcode[,result$]
Riarexxlib.obj(133):006 RXRunCommand [portname$,]command$
Riarexxlib.obj(133):007 RXSendersName 
Riarexxlib.obj(133):008 RXGetResult 
Riarexxlib.obj(133):009 RXWaitResult 
Riarexxlib.obj(133):010 RXSendCommand [portname$,]command$
Riarexxlib.obj(133):011 RXNumArgs 
Riarexxlib.obj(133):012 RXWaitReplies 
Riarexxlib.obj(133):013 RXComResult 
Riarexxlib.obj(133):014 RXGetArg argnum
Riarexxlib.obj(133):015 RXCreateMsg 
Riarexxlib.obj(133):016 RXSendMsg [rexxmsg,]port$
Riarexxlib.obj(133):017 RXExecuteScript scriptname$
Riarexxlib.obj(133):018 RXRunScript scriptname$
Riarexxlib.obj(133):019 RXSetMsgType [msg,]type
Riarexxlib.obj(133):020 RXSetArg [msg,]argnum,string$
Riarexxlib.obj(133):021 RXResults On|Off
Riarexxlib.obj(133):022 RXPriority priority
Riarexxlib.obj(133):023 RXDefaultPort portname$
Riarexxlib.obj(133):024 RXErrorCode [msg]
Riarexxlib.obj(133):025 RXNextArg argnum
Riarexxlib.obj(133):026 RXReturnCode 
intuifontlib.obj(134):001 LoadFont IntuiFont#,Fontname.font$,Y size [,style]
intuifontlib.obj(134):002 IntuiFont A Font for use by intuition
menuslib.obj(136):001 MenuTitle MenuList#,Menu,Title$
menuslib.obj(136):002 SetMenu Menulist#
menuslib.obj(136):003 MenuItem MenuList#,Flags,Menu,Item,Itemtext$[,Shortcut$]
menuslib.obj(136):004 SubItem MenuList#,Flags,Menu,Item,Subitem,Subitemtext$[,Shortcut$]
menuslib.obj(136):005 ShapeItem MenuList#,Flags,Menu,Item,Shape#
menuslib.obj(136):006 ShapeSub MenuList#,Flags,Menu,Item,Subitem,Shape#
menuslib.obj(136):007 MenuGap X Gap,Y Gap
menuslib.obj(136):008 SubItemOff X Offset,Y Offset
menuslib.obj(136):009 MenuState MenuList#[,Menu[,Item[,Subitem]]],On|Off
menuslib.obj(136):010 MenuColour Colour
menuslib.obj(136):011 MenuChecked (MenuList#,Menu,Item[,Subitem])
menuslib.obj(136):012 MenuList List of Menus
nLocale.obj(137):001 NInitLocale  - Initialize locale for use
nLocale.obj(137):002 NOpenCatalog (CatalogName$, TagList) - Open a specified catalog file
nLocale.obj(137):003 NCloseCatalog  - Close the opened catalog
nLocale.obj(137):004 NGetCatalogString (String number) - Get a text from an opened catalog
windowslib.obj(138):001 Window Window#,X,Y,Width,Height,Flags,Title$,Dpen,Bpen[,GadgetList#]
windowslib.obj(138):002 WaitEvent 
windowslib.obj(138):003 Event 
windowslib.obj(138):004 GadgetHit 
windowslib.obj(138):005 EventWindow 
windowslib.obj(138):006 DefaultIDCMP IDCMP_Flags
windowslib.obj(138):007 MenuHit 
windowslib.obj(138):008 ItemHit 
windowslib.obj(138):009 SubHit 
windowslib.obj(138):010 WindowFont IntuiFont# [,SoftStyle] ;work as function too with return ifont Addr
windowslib.obj(138):011 WPlot X,Y,Colour
windowslib.obj(138):012 WBox X1,Y1,X2,Y2,Colour
windowslib.obj(138):013 WCircle X,Y,Radius,Colour
windowslib.obj(138):014 WEllipse X,Y,X Radius,Y Radius,Colour
windowslib.obj(138):015 WCls [Colour]
windowslib.obj(138):016 WLocate Cursor x,Cursor y
windowslib.obj(138):017 WindowInput Window#
windowslib.obj(138):018 WindowOutput Window#
windowslib.obj(138):019 Qualifier 
windowslib.obj(138):020 RawKey 
windowslib.obj(138):021 Cursor Thickness : <0 - block, >=0 - underline thickness
windowslib.obj(138):022 Editat 
windowslib.obj(138):023 EditFrom [Characterpos]
windowslib.obj(138):024 EditExit 
windowslib.obj(138):025 WScroll X1,Y1,X2,Y2,Delta X,Delta Y[,colour]
windowslib.obj(138):026 WMouseX 
windowslib.obj(138):027 WMouseY 
windowslib.obj(138):028 WColour Foreground Colour[,Background Colour]
windowslib.obj(138):029 WJam Jammode
windowslib.obj(138):030 Wline X1,Y1,X2,Y3[,Xn,Yn...],Colour
windowslib.obj(138):031 Activate Window#
windowslib.obj(138):032 WindowX 
windowslib.obj(138):033 WindowY 
windowslib.obj(138):034 MButtons 
windowslib.obj(138):035 Menus On|Off
windowslib.obj(138):036 WCursX 
windowslib.obj(138):037 WCursY 
windowslib.obj(138):038 WPointer Shape#
windowslib.obj(138):039 MenusOn 
windowslib.obj(138):040 MenusOff 
windowslib.obj(138):041 WMove X,Y
windowslib.obj(138):042 WSize Width,Height
windowslib.obj(138):043 WindowWidth 
windowslib.obj(138):044 WindowHeight 
windowslib.obj(138):045 InnerWidth 
windowslib.obj(138):046 InnerHeight 
windowslib.obj(138):047 InnerCls [Colour]
windowslib.obj(138):048 WTopOff 
windowslib.obj(138):049 WLeftOff 
windowslib.obj(138):050 SizeLimits Min Width,Min Height,Max Width,Max Height
windowslib.obj(138):051 EMouseX 
windowslib.obj(138):052 EMouseY 
windowslib.obj(138):053 AddIDCMP IDCMP_Flags
windowslib.obj(138):054 SubIDCMP IDCMP_Flags
windowslib.obj(138):055 FlushEvents [IDCMP_Flag]
windowslib.obj(138):056 CatchDosErrs 
windowslib.obj(138):057 RastPort [(Window#)]
windowslib.obj(138):058 SetEventFilter preprocess,postprocess
windowslib.obj(138):059 WTitle windowtitle$[,screentitle$]
windowslib.obj(138):060 CloseWindow Window#
windowslib.obj(138):061 WPrintScroll 
windowslib.obj(138):062 WBlit Shape#,x,y
windowslib.obj(138):063 BitMaptoWindow Bitmap#,Window#[,srcx,srcy,destx,desty,wid,height]
windowslib.obj(138):064 EventCode 
windowslib.obj(138):065 EventQualifier 
windowslib.obj(138):066 PositionSuperBitMap x,y
windowslib.obj(138):067 GetSuperBitMap 
windowslib.obj(138):068 PutSuperBitMap 
windowslib.obj(138):069 WindowTags Window#,Flags,Title$ [,&TagList] or [[,Tag,Data]...]
windowslib.obj(138):070 AddWaitEvent bitnumber,returncode.l
windowslib.obj(138):071 DelWaitEvent bitnumber
windowslib.obj(138):072 EventiAddress Return Intui IAddress 
windowslib.obj(138):073 WaitEventSigBits return the sig recieved from WaitEvent
windowslib.obj(138):074 EventSeconds 
windowslib.obj(138):075 EventMicros 
windowslib.obj(138):076 WaitEventMask Signalmask ; sets the signalmask for waitevent
windowslib.obj(138):077 BlitzMsgPort Return the adress of the Eventx Messageport
windowslib.obj(138):078 EventDoubleclick Return true if a doubleclick occur
windowslib.obj(138):079 WindowBackFillHook Adress of the function[,Hook number (max 19)]
windowslib.obj(138):080 EventTest read the next event but do not remove from list
windowslib.obj(138):081 EventRawKey give real rawkey and keyoff 
windowslib.obj(138):082 TextFit (string,xwith);give the number of chars that fit in this pixel width
windowslib.obj(138):083 WinFontHeight give fontsize of a window 
windowslib.obj(138):084 SetMenuVerifyHandler Address of the Handler for verify if a menu should show no menu *msg\Code=#MENUCANCEL
windowslib.obj(138):085 EventVanillaKey return the translatet rawkey event 
nPalette.obj(139):001 NUsePalette (#Palette)
nPalette.obj(139):002 NPalRgb (ColorIndex, R, G, B)
nPalette.obj(139):003 NDisplayPalette (#Palette, ScreenID)
nPalette.obj(139):004 NRed (ColorIndex) - Get the Red value -
nPalette.obj(139):005 NGreen (ColorIndex) - Get the Green value -
nPalette.obj(139):006 NBlue (ColorIndex) - Get the Blue value -
nPalette.obj(139):007 NGetScreenPalette (#Palette, ScreenID) - Get the palette from screen -
nPalette.obj(139):008 NCreatePalette (#Palette, NbColors) - Create an empty palette -
nPalette.obj(139):009 NRgb (ScreenID, ColourIndex, R, G, B)
nPalette.obj(139):010 NFadeOut (#Palette, Step, NbLoop, ScreenID) - FadeOut the screen
nPalette.obj(139):011 NFreePalette (#Palette) - Free the specified palette -
nPalette.obj(139):012 NInitPalette (#MaxNumPalette) - Init Palette environnement -
nPalette.obj(139):013 NGetPicturePalette (#Palette, PictureID) - Create a new palette take from picture -
nPalette.obj(139):014 NFade (#Palette1, #Palette2, Step, NbLoop, ScreenID)
nPalette.obj(139):015 NNbColour - Return the number of colour of the current palette -
nPalette.obj(139):016 NASyncFade (#Palette1, #Palette2, Step, NbLoop, ScreenID)
nPalette.obj(139):017 NASyncFadeStatus - Return -1 if the fade is running, 0 else -
gadgetslib.obj(140):001 TextGadget GadgetList#,X,Y,Flags,Id,Text$
gadgetslib.obj(140):002 StringGadget GadgetList#,X,Y,Flags,Id,Maxlen,Width
gadgetslib.obj(140):003 PropGadget GadgetList#,X,Y,Flags,Id,Width,Height,[propflags,propactivation[,typemask]]
gadgetslib.obj(140):004 ShapeGadget GadgetList#,X,Y,Flags,Id,Shape#[,Shape#]
gadgetslib.obj(140):005 SetHProp GadgetList#,Id,Pot,Body
gadgetslib.obj(140):006 SetVProp GadgetList#,Id,Pot,Body
gadgetslib.obj(140):007 HPropPot (GadgetList#,Id)
gadgetslib.obj(140):008 HPropBody (GadgetList#,Id)
gadgetslib.obj(140):009 VPropPot (GadgetList#,Id)
gadgetslib.obj(140):010 VPropBody (GadgetList#,Id)
gadgetslib.obj(140):011 Redraw Window#[,Id]
gadgetslib.obj(140):012 Toggle GadgetList#,Id [,On|Off]
gadgetslib.obj(140):013 GadgetBorder X,Y,Width,Height
gadgetslib.obj(140):014 Borders [On|Off]|[Width,Height]
gadgetslib.obj(140):015 ActivateString Window#,Id
gadgetslib.obj(140):016 ResetString GadgetList#,Id
gadgetslib.obj(140):017 StringText$ (GadgetList#,Id)
gadgetslib.obj(140):018 ClearString GadgetList#,Id
gadgetslib.obj(140):019 GadgetList List of Gadgets
gadgetslib.obj(140):020 GadgetPens Foreground Colour[,Background Colour]
gadgetslib.obj(140):021 BorderPens Highlight Colour,Shadow Colour
gadgetslib.obj(140):022 GadgetJam Jammode
gadgetslib.obj(140):023 SelectMode 1=Box, 0=Inverse
gadgetslib.obj(140):024 SetString GadgetList#,Id,String$
gadgetslib.obj(140):025 ButtonGroup Group
gadgetslib.obj(140):026 GadgetStatus (GadgetList#,Id)
gadgetslib.obj(140):027 ButtonId (GadgetList#,ButtonGroup)
gadgetslib.obj(140):028 Enable (GadgetList#,Id)
gadgetslib.obj(140):029 Disable (GadgetList#,Id)
gadgetslib.obj(140):030 SetGadgetStatus (GadgetList#,Id,Value)
gadgetslib.obj(140):031 SetPropInfo GadgetList#,Id,visible,total[,current]
gadgetslib.obj(140):032 MoveProp GadgetList#,Id,current[,window_redraw]
gadgetslib.obj(140):033 GetPropCurrent GadgetList#,Id
gadgetslib.obj(140):034 ArrowGadget GadgetList#,Id,direction,x,y,relativity[,special_flags]
bbgtlib.obj(141):001 GTList A GadTools GadgetList (13.08.2004)
bbgtlib.obj(141):002 GTButton GTList#,id.w,x.w,y.w,w.w,h.w,Text$,flags.l[,UserData.l]
bbgtlib.obj(141):003 GTCheckBox GTList#,id,x,y,w,h,Text$,flags
bbgtlib.obj(141):004 GTCycle GTList#,id,x,y,w,h,Text$,flags,Options$[,active]
bbgtlib.obj(141):005 GTInteger GTList#,id,x,y,w,h,Text$,flags,default
bbgtlib.obj(141):006 GTListView GTList#,id,x,y,w,h,Text$,flags,list()[,selected[,top]]
bbgtlib.obj(141):007 GTMX GTList#,id,x,y,w,h,Text$,flags,Options$[,active]
bbgtlib.obj(141):008 GTNumber GTList#,id,x,y,w,h,Text$,flags,value
bbgtlib.obj(141):009 GTPalette GTList#,id,x,y,w,h,Text$,flags,depth[,Color]
bbgtlib.obj(141):010 GTScroller GTList#,id,x,y,w,h,Text$,flags,Visible,Total[,Top]
bbgtlib.obj(141):011 GTSlider GTList#,id,x,y,w,h,Text$,flags,Min,Max[,Level]
bbgtlib.obj(141):012 GTString GTList#,id,x,y,w,h,Text$,flags,MaxChars [,default$]
bbgtlib.obj(141):013 GTText GTList#,id,x,y,w,h,Text$,flags,Display$
bbgtlib.obj(141):014 AttachGTList GTList#,Window#
bbgtlib.obj(141):015 GTTags Tag,Value [,Tag,Value...]
bbgtlib.obj(141):016 GTGadPtr (GTList#,id)
bbgtlib.obj(141):017 GTBevelBox GTList#,x.l,y.l,w.l,h.l,flags.l[,type.l]
bbgtlib.obj(141):018 GTChangeList GTList#,id [ ,List() ]
bbgtlib.obj(141):019 GTSetAttrs GTList#,id [,Tag,Value...]
bbgtlib.obj(141):020 GTSetString GTList#,id,string$
bbgtlib.obj(141):021 GTSetInteger GTList#,id,value
bbgtlib.obj(141):022 GTGetString GTList#,id
bbgtlib.obj(141):023 GTGetInteger GTList#,id
bbgtlib.obj(141):024 GTShape GTList#,id,x,y,flags,Shape#[,Shape#]
bbgtlib.obj(141):025 GTGetAttrs (GTList#,id,Tag)
bbgtlib.obj(141):026 GTEnable GTList#,Id
bbgtlib.obj(141):027 GTDisable GTList#,Id
bbgtlib.obj(141):028 GTToggle GTList#,Id [,On|Off]
bbgtlib.obj(141):029 GTStatus GTList#,Id
bbgtlib.obj(141):030 GTArrowSize size
bbgtlib.obj(141):031 DetachGTList GTList# - Removes a GTList from a window
bbgtlib.obj(141):032 GTGZZPosition On/Off - Turn on/off adding of window borders to gadget positions
bbgtlib.obj(141):033 GTSetHighlight GTList#,id,value - Set highlighted item in GTListview
bbgtlib.obj(141):034 GTFreeGadget [(]GTList#,id[)]
bbgtlib.obj(141):035 GTActivateGadget GTList#,id - Activates a string/custom gadget
bbgtlib.obj(141):036 GTNewLookProp [Mode=On/Off] or [GTList,ID,On/Off]
bbgtlib.obj(141):037 GTListAddress (List())  Returns address of List header structure
bbgtlib.obj(141):038 GTUserData UserData.l - Set userdata for next gadget created
bbgtlib.obj(141):039 GTChangeCycle [(]GTList.w,ID.w,Option$[)] - Change contents of GTCycle gadget
bbgtlib.obj(141):040 GTGetInternal Returns pointer to internal list of memory allocations
bbgtlib.obj(141):041 GTUnderscore char.w - Sets the ASCII code of the character to use as the underscore indicator
bbgtlib.obj(141):042 GTEventSeconds - Tells you the seconds at which the last event occurred
bbgtlib.obj(141):043 GTEventMicros - Tells you the microseconds at which the last event occurred
fontlib.obj(142):001 LoadBlitzFont BlitzFont#,Fontname.font$
fontlib.obj(142):002 BitMapOutput Bitmap#
fontlib.obj(142):003 Colour Foreground Colour[,Background Colour]
fontlib.obj(142):004 Locate X,Y
fontlib.obj(142):005 CursX 
fontlib.obj(142):006 CursY 
fontlib.obj(142):007 BitMapInput 
fontlib.obj(142):008 BlitzFont 
displaylib.obj(143):001 CopList 
displaylib.obj(143):002 InitCopList CopList#[,type]|[,ypos,height,type,sprites,colors,numcustoms]
displaylib.obj(143):003 CreateDisplay CopList#[,CopList#..]
displaylib.obj(143):004 DisplayBitMap CopList#,bmap[,x,y] [,bmap[,x,y]]
displaylib.obj(143):005 DisplaySprite CopList#,Sprite#,X,Y,Sprite Channel
displaylib.obj(143):006 DisplayPalette CopList#,Palette# [,coloroffset] [,coloroffset,bankoffset]
displaylib.obj(143):007 DisplayControls CopList#,BPLCON2,BPLCON3,BPLCON4
displaylib.obj(143):008 DisplayAdjust CopList#,fetchwid,ddfstrt,ddfstop,diwstrt,diwstop
displaylib.obj(143):009 CustomColors CopList#,CCOffset,YPos,Palette,startcol,numcols[,thru256flag]  ;ecs=2+n aga=2+n+n+n/16
displaylib.obj(143):010 CustomString CopList#,CCOffset,YPos,Copper$  ;2+n {n=len(a$)/4}
displaylib.obj(143):011 DisplayDblScan CopList#,Mode[,copoffset]   ;2
displaylib.obj(143):012 DisplayRainbow CopList#,Register,Palette[,copoffset] ;ecs=1 aga=4
displaylib.obj(143):013 DisplayRGB CopList#,Register,line,r,g,b[,copoffset] ;ecs=1 aga=4
displaylib.obj(143):014 DisplayUser CopList#,Line,String[,Offset]
displaylib.obj(143):015 DisplayScroll CopList#,&xpos.q(n),&xpos.q(n)[,Offset]   ;3
displaylib.obj(143):016 CustomSprites CopList#,CCOffset,YPos,NumSprites ;4n+2
displaylib.obj(143):017 CustomChunky CopList#,CCOffset,YPos,width,height,res[,splitpos] ;4n+2
displaylib.obj(143):018 CustomChunkySize width,height
displaylib.obj(143):019 DisplayGenlock BPLCON0     ;2=use external sync 4=interlace
blitzcoplib.obj(144):001 Slice [Slice#,Y,Flags]|[Slice#,Y,Width,Hite,Flgs,Bitplns,Sprts,Colrs,Fscrnw,Bscrnw]
blitzcoplib.obj(144):002 CopLoc 
blitzcoplib.obj(144):003 CustomCop Copins$,Y
blitzcoplib.obj(144):004 Show Bitmap#[,X,Y]
blitzcoplib.obj(144):005 ShowF Bitmap#[,X,Y[,ShowB X]]
blitzcoplib.obj(144):006 ShowB Bitmap#[,X,Y[,ShowF X]]
blitzcoplib.obj(144):007 CopLen 
blitzcoplib.obj(144):008 ColSplit Colour Register,Red,Green,Blue,Y
blitzcoplib.obj(144):009 ShowBlitz 
blitzcoplib.obj(144):010 FreeSlices 
blitzcoplib.obj(144):011 DisplayOff 
blitzcoplib.obj(144):012 DisplayOn 
blitzcoplib.obj(144):013 SetBPLCON0 BPLCON0 Default
blitzcoplib.obj(144):014 SetBLWait Wait move for line 256 (eg:$ffe1fffe
nOS.obj(145):001 NExecBase - Return the exec.library base pointer -
nOS.obj(145):002 NDosBase - Return the dos.library base pointer -
nOS.obj(145):003 NIntuitionBase - Return the intuition.library base pointer -
nOS.obj(145):004 NGraphicsBase - Return the graphics.library base pointer -
bblitlib.obj(146):001 Buffer Buffer#,Memorylen
bblitlib.obj(146):002 BBlit Buffer#,Shape#,X,Y[,Excessonoff]
bblitlib.obj(146):003 UnBuffer Buffer#
bblitlib.obj(146):004 BBlitMode BLTCON0
bblitlib.obj(146):005 ShowStencil Buffer#,Stencil#
bblitlib.obj(146):006 FlushBuffer Buffer#
LotanSystem.obj(147):001 CtrlC  - Returns True if a CTRL/C has been received
LotanSystem.obj(147):002 New (Size[,Type]) - Allocates Memory
LotanSystem.obj(147):003 Dispose (Addr) - Deallocates previously allocated memory
LotanSystem.obj(147):004 KickVersion [(Ver)] - Used to Check/Get Kickstart version.
LotanSystem.obj(147):005 execbase - Returns pointer to Exec library base.
qblitlib.obj(148):001 Queue Queue#,Max Items
qblitlib.obj(148):002 QBlit Queue#,Shape#,X,Y[,Excessonoff]
qblitlib.obj(148):003 UnQueue Queue#[,BitMap#]
qblitlib.obj(148):004 QBlitMode BLTCON0
qblitlib.obj(148):005 FlushQueue Queue#
nTagList.obj(149):001 NInitTagList (#NumMaxTags) - Initialize the Tag lib for use -
nTagList.obj(149):002 NFreeTagList  - Free the memory took by the taglist -
nTagList.obj(149):003 NAddTag (#TAG_ITEM, #TAG_DATA) - Add the tag to the current taglist -
nTagList.obj(149):004 NResetTagList #TAG_ITEM, #TAG_DATA) - Clear the taglist and add the value -
nTagList.obj(149):005 NTagListID - Return the taglist location -
nTagList.obj(149):006 NChangeTag Position, #TAG_ITEM, #TAG_DATA) - change the given the tag value -
blitlib.obj(150):001 Blit Shape#,X,Y[,Excessonoff]
blitlib.obj(150):002 BlitMode BLTCON0
blitlib.obj(150):003 CookieMode 
blitlib.obj(150):004 EraseMode 
blitlib.obj(150):005 InvMode 
blitlib.obj(150):006 SolidMode 
blitlib.obj(150):007 Block Shape#,X,Y
blitlib.obj(150):008 BlitColl (Shape#,x,y)
nToolType.obj(151):001 NInitToolType (Objects.l, *WBStartup)
nToolType.obj(151):002 NReadToolType (#Object.w, IconName$)
nToolType.obj(151):003 NWriteToolType (#Object.w, Array(), IconName$)
nToolType.obj(151):004 NFreeToolType #Object.w
nToolType.obj(151):005 NGetNumberOfToolType (#Object.w)
nToolType.obj(151):006 NGetNextToolTypeString (#Object.w)
nToolType.obj(151):007 NFindToolType (#Object.w, ToolName$)
nToolType.obj(151):008 NMatchToolTypeValue (ToolType.l, Value$)
nToolType.obj(151):009 NCheckToolTypeString (ToolType$, ToolTypeString$)
freqlib.obj(152):001 FileRequest$ Title$,Pathname$,Filename$
nCommodities.obj(153):001 NCreateCommodity (Objects.l, Name$, Title$, Description$, Priority.b, Flag.b)
nCommodities.obj(153):002 NActivateCommodity Status.l
nCommodities.obj(153):003 NCommodityActivateTranslater #Object.l, Status.l
nCommodities.obj(153):004 NCommodityActivateObject #Object.l, Status.l
nCommodities.obj(153):005 NWaitCommodityEvent 
nCommodities.obj(153):006 NCommodityEvent 
nCommodities.obj(153):007 NCommodityType 
nCommodities.obj(153):008 NCommodityID 
nCommodities.obj(153):009 NCommodityCtrlCSignal 
nCommodities.obj(153):010 NCommodityObjectSignal 
nCommodities.obj(153):011 NCommodityCreateObject (#Object.l, Filter$, *InputEvent)
nCommodities.obj(153):012 NCommodityDeleteObject #Object.l
nCommodities.obj(153):013 NCommodityAddInputEvent *InputEvent
nCommodities.obj(153):014 NCommodityChangeTranslater #Object.l, *InputEvent
nCommodities.obj(153):015 NCommodityIXChangeFilter (#Object.l, *InputXpression)
nCommodities.obj(153):016 NCommodityChangeFilter (#Object.l, Filter$)
shapeslib.obj(154):001 LoadShape Shape#,Filename$[,Palette#]
shapeslib.obj(154):002 MakeCookie Shape#
shapeslib.obj(154):003 ShapeWidth (Shape#)
shapeslib.obj(154):004 ShapeHeight (Shape#)
shapeslib.obj(154):005 Handle Shape#,X,Y
shapeslib.obj(154):006 AutoCookie On|Off
shapeslib.obj(154):007 CopyShape Shape#,Shape#
shapeslib.obj(154):008 GetaShape Shape#,X,Y,Width,Height
shapeslib.obj(154):009 SaveShapes Shape#,Shape#,Filename$
shapeslib.obj(154):010 LoadShapes Shape#[,Shape#],Filename$
shapeslib.obj(154):011 Shape - image
shapeslib.obj(154):012 MidHandle Shape#
shapeslib.obj(154):013 DecodeShapes Shape#[,Shape#],MemoryLocation
shapeslib.obj(154):014 InitShape Shape#,Width,Height,Depth
nApp.obj(155):001 NInitApp (#NumMaxAppID) - Initialize App library for use -
nApp.obj(155):002 NAddAppWindow (#AppID, WindowID) - Transform a window into AppWindow -
nApp.obj(155):003 NRemoveAppWindow (#AppID) - Remove the App feature -
nApp.obj(155):004 NAddAppMenu (#AppID, &Title$) - Add a menu in the 'Tools' menu -
nApp.obj(155):005 NRemoveAppMenu (#AppID) - Remove the App menu -
nApp.obj(155):006 NAppEvent - Return -1 if nothing or the #AppID -
nApp.obj(155):007 NAppNumFiles - Return number of file dropped on the window -
nApp.obj(155):008 NNextAppFile - Return the next filename -
palettelib.obj(156):001 LoadPalette Palette#,Filename$[,Palette Offset]
palettelib.obj(156):002 Cycle Palette#
palettelib.obj(156):003 RGB Colour Register,Red,Green,Blue
palettelib.obj(156):004 Red (Colour Register)
palettelib.obj(156):005 Green (Colour Register)
palettelib.obj(156):006 Blue (Colour Register)
palettelib.obj(156):007 Palette colour and cycling information
palettelib.obj(156):008 PalRGB Palette#,Colour Register,Red,Green,Blue
palettelib.obj(156):009 SetCycle Palette#,Cycle,Low Colour,High Colour[,Speed]
palettelib.obj(156):010 StopCycle 
palettelib.obj(156):011 AGARGB Colour Register,Red,Green,Blue
palettelib.obj(156):012 AGAPalRGB Palette#,Colour Register,Red,Green,Blue
palettelib.obj(156):013 AGARed (Colour Register)
palettelib.obj(156):014 AGAGreen (Colour Register)
palettelib.obj(156):015 AGABlue (Colour Register)
palettelib.obj(156):016 ShowPalette Palette#
palettelib.obj(156):017 NewPaletteMode On|Off
palettelib.obj(156):018 CyclePalette Palette#
palettelib.obj(156):019 FadePalette SrcPalette#,DestPalette#,Brightness.q
palettelib.obj(156):020 InitPalette Palette#,NumColors
palettelib.obj(156):021 PaletteRange Palette#,StartCol,EndCol,r0,g0,b0,r1,g1,b1
palettelib.obj(156):022 DuplicatePalette SrcPalette#,DestPalette#
palettelib.obj(156):023 DecodePalette Palette#,MemoryLocation[,Palette Offset]
palettelib.obj(156):024 MixPalette Palette#,Palette#,DestPalette#,fraction
fadelib.obj(157):001 FadeIn Palette#[,Rate[,Low Colour,High Colour]]
fadelib.obj(157):002 FadeOut Palette#[,Rate[,Low Colour,High Colour]]
fadelib.obj(157):003 ASyncFade On|Off
fadelib.obj(157):004 DoFade 
fadelib.obj(157):005 FadeStatus 
screenslib.obj(158):001 Screen [Screen#,Mode[,Title$]]|[Screen#,X,Y,W,H,D,Viewmode,Title$,Dpen,Bpen[,BitMap#]
screenslib.obj(158):002 WbToScreen Screen#
screenslib.obj(158):003 LoadScreen Screen#,Filename$[,Palette#]
screenslib.obj(158):004 FindScreen Screen#[,Title$]
screenslib.obj(158):005 SMouseX 
screenslib.obj(158):006 SMouseY 
screenslib.obj(158):007 ShowScreen Screen#
screenslib.obj(158):008 ScreenPens Text,Shine,Shadow,Fill,FillText,Background,HighLight
screenslib.obj(158):009 ViewPort (Screen#)
screenslib.obj(158):010 ShowBitMap [BitMap#]
screenslib.obj(158):011 CloseScreen Screen# or ret=CloseScreen (screen#)
screenslib.obj(158):012 HideScreen Screen#
screenslib.obj(158):013 BeepScreen Screen#
screenslib.obj(158):014 MoveScreen Screen#,deltax,deltay
screenslib.obj(158):015 ScreenTags Screen#,Title$ [&TagList] or [[,Tag,Data]...]
screenslib.obj(158):016 FrontScreen 
screenslib.obj(158):017 NewCloseScreen Screen#
screenslib.obj(158):018 GetPubScreen Screen#[,Title$]
screenslib.obj(158):019 ReleasePubScreen Screen#[,Title$]
screenslib.obj(158):020 ScreenPens2 background,par1,par2,par2,par3
LotanArray.obj(159):001 ArNew (Num[,Kind]) - Used to create a new Array
LotanArray.obj(159):002 ArDispose Array - Frees memory used by the Array
LotanArray.obj(159):003 ArLen (Array) - Returns the length of the Array
LotanArray.obj(159):004 ArItm (Array) - Returns the number of items in the Array
LotanArray.obj(159):005 ArGet (Array,Item) - Used to get an Item form an Array
LotanArray.obj(159):006 ArSet (Array,Item,Data[,Data...] - Sets one or more items
LotanArray.obj(159):007 ArStr (Array,Item) - Used to get a String from an Array
LotanArray.obj(159):008 ArOfByte (Byte[,Byte...]) - Creates an array of Bytes
LotanArray.obj(159):009 ArOfWord (Word[,Word...]) - Creates an array of Words
LotanArray.obj(159):010 ArOfLong (Long[,Long...]) - Creates an array of Longs
LotanArray.obj(159):011 ArOfStrg (Strg[,Strg...]) - Creates an array of Strings
bitmaplib.obj(160):001 BitMap BitMap#,Width,Height,Depth
bitmaplib.obj(160):002 LoadBitMap BitMap#,Filename$[,Palette#]
bitmaplib.obj(160):003 ScreensBitMap Screen#,BitMap#
bitmaplib.obj(160):004 CopyBitMap Src BitMap#,Dest BitMap#
bitmaplib.obj(160):005 ShapesBitMap Shape#,BitMap#
bitmaplib.obj(160):006 CludgeBitMap BitMap#,Width,Height,Depth,Memory
ilbmifflib.obj(161):001 ILBMInfo Filename$
ilbmifflib.obj(161):002 ILBMWidth 
ilbmifflib.obj(161):003 ILBMHeight 
ilbmifflib.obj(161):004 ILBMDepth 
ilbmifflib.obj(161):005 ILBMViewMode 
ilbmifflib.obj(161):006 DecodeILBM Bitmap#,MemoryLocation
nClipBoard.obj(163):001 NSetClipText (String$) - Change the clipboard text -
nClipBoard.obj(163):002 NGetClipText [(max size)];- Return clipboard mak sure stringbuffer is 2* larger max size
inputoutputlib.obj(164):001 DefaultInput 
inputoutputlib.obj(164):002 DefaultOutput 
inputoutputlib.obj(164):003 PopInput 
inputoutputlib.obj(164):004 PopOutput 
nMemory.obj(165):001 NPokeB  Adress, Byte
nMemory.obj(165):002 NPokeW  Adress, Word
nMemory.obj(165):003 NPokeL  Adress, Long
nMemory.obj(165):004 NPeekB (Address)
nMemory.obj(165):005 NPeekW (Address)
nMemory.obj(165):006 NPeekL (Address)
nMemory.obj(165):007 NPeek$ (Address)
nMemory.obj(165):008 NPeekString (Address)
nMemory.obj(165):009 NPokeS  Adress, String
nString.obj(166):001 NAsc (String$) - Return the first ASCII value of the string$
nString.obj(166):002 NLen (String$) - Return the length of the string$
nString.obj(166):003 NChr$ (Ascii)
nString.obj(166):004 NTrim$ (String$, Value)
nString.obj(166):005 NRight$ (String$, Length)
nString.obj(166):006 NLeft$ (String$, Length)
nString.obj(166):007 NUCase$ (String$)
nString.obj(166):008 NLCase$ (String$)
nString.obj(166):009 NMki$ (Word)
nString.obj(166):010 NMkl$ (Long)
nString.obj(166):011 NCvi (String$)
nString.obj(166):012 NCvl (String$)
nMisc.obj(167):001 NVWait  - Wait until next Vertical Blank
nMisc.obj(167):002 NMouseWait  - Wait until a mouse press
nMisc.obj(167):003 NFalse  - Set variable type to False -
nMisc.obj(167):004 NTrue  - Set variable type to True -
nMisc.obj(167):005 NOff  - Set variable type to Off -
nMisc.obj(167):006 NOn  - Set variable type to On -
nMisc.obj(167):007 NProgramPriority (New Priority) - Set the program priority -
nMisc.obj(167):008 NArrayAddr (Array()) - Get the array addr
nWindow.obj(168):001 NWindow (#Window, x, y, Width, Height, TagList) - Open a new window -
nWindow.obj(168):002 NWindowEvent - Return the window events
nWindow.obj(168):003 NBusyPointer ( On/Off ) - Change the mouse pointer to busy -
nWindow.obj(168):004 NWaitWindowEvent - Wait for a window event
nWindow.obj(168):005 NWindowWidth - Return the window width -
nWindow.obj(168):006 NWindowHeight - Return the window height -
nWindow.obj(168):007 NWindowX - Return the X window position -
nWindow.obj(168):008 NWindowY - Return the Y window position -
nWindow.obj(168):009 NWMouseX - Return the Mouse X position -
nWindow.obj(168):010 NWMouseY - Return the Mouse Y position -
nWindow.obj(168):011 NWindowRastPort - Return the window rastport -
nWindow.obj(168):012 NWInnerHeight - Return the window inner height -
nWindow.obj(168):013 NWInnerWidth - Return the window inner width -
nWindow.obj(168):014 NDetachGadgetList - Detach the current window's agdgetlist -
nWindow.obj(168):015 NWindowEventID - Return the window number which has got the last event
nWindow.obj(168):016 NWMove (X,Y) - Move the window to X-Y -
nWindow.obj(168):017 NWSize (Width,Heigth) - Size the window to new dimentions -
nWindow.obj(168):018 NUseWindow (#Window) - Set the specified window as default window -
nWindow.obj(168):019 NActivate - Activate the used window -
nWindow.obj(168):020 NCloseWindow (#Window) - Close the specified window -
nWindow.obj(168):021 NInitWindow (#MaxNumWindow) - Init Window environnement -
nWindow.obj(168):022 NWindowID - Return the used window pointer -
nWindow.obj(168):023 NDetachMenu - Detach the current window menu -
nWindow.obj(168):024 NGadgetCode - Return the last GadgetCode event...
nWindow.obj(168):025 NEventID - Return the last EventID value...
nWindow.obj(168):026 NQualifier - Return the last Qualifier event...
nScreen.obj(169):001 NWbToScreen (#Screen) - Try to find the Workbench Screen -
nScreen.obj(169):002 NFindScreen (#Screen, Name$) - Seek the screen name or take the default public screen -
nScreen.obj(169):003 NScreen (#Screen, Width, Height, Depth, TagList) - Open a new screen -
nScreen.obj(169):004 NSMouseY - Return the MouseY Position on the screen
nScreen.obj(169):005 NSMouseX - Return the Mouse X Position on the screen
nScreen.obj(169):006 NScreenWidth - Return the Width of the screen
nScreen.obj(169):007 NScreenHeight - Return the Height of the screen
nScreen.obj(169):008 NShowScreen - Show the screen
nScreen.obj(169):009 NHideScreen - Hide the screen -
nScreen.obj(169):010 NUseScreen (#Screen) - Set the specified screen as used -
nScreen.obj(169):011 NCloseScreen (#Screen) - Close the specified screen -
nScreen.obj(169):012 NInitScreen (#NumScreenMax) - Init Screen Environenement -
nScreen.obj(169):013 NScreenID - Return the intuition screen pointer -
nScreen.obj(169):014 NScreenRastPort - Return the used screen rastport pointer -
nScreen.obj(169):015 NViewPort - Return the used screen viewport address -
nScreen.obj(169):016 NObtainBestPen (r, g, b, precision) - Return the most near colour of the screen -
nScreen.obj(169):017 NReleasePen (Colour Index) - release the pen -
nScreen.obj(169):018 NWBorderTop - Return the window bar height (with title) -
nScreen.obj(169):019 NWBorderLeft - Return the window border left length -
nScreen.obj(169):020 NWBorderRight - Return the window border right length -
nScreen.obj(169):021 NWBorderBottom - Return the window border bottom length -
nScreen.obj(169):022 NSBarHeight - Return the screen bar height -
nScreen.obj(169):023 NSFontHeight - Return the actual screen font height -
nScreen.obj(169):024 NFindFrontScreen (#Screen) - Take the front most screen -
nScreen.obj(169):025 NScreenDepth - Return the depth of the current screen -
nFont.obj(170):001 NLoadFont (#Font, FontName$, YSize) - Return a FontID
nFont.obj(170):002 NUseFont (#Font) - Change the used font
nFont.obj(170):003 NCloseFont (#Font) - Close the specified font
nFont.obj(170):004 NInitFont (#NumFontMax) - Initialize Font for use
nFont.obj(170):005 NFontID - Return the used intuifont pointer -
LotanPrint.obj(171):001 Printf Str[,Datas...]
LotanPrint.obj(171):002 Stringf Str[,Datas...]
LotanPrint.obj(171):003 PrintBuf 
LotanMem.obj(172):001 PeekB (Addr) - Reads a Byte from memory.
LotanMem.obj(172):002 PeekW (Addr) - Reads a Word from memory.
LotanMem.obj(172):003 PeekL (Addr) - Reads a Long from memory.
LotanMem.obj(172):004 PokeB Addr,Byte - Writes a Byte in memory.
LotanMem.obj(172):005 PokeW Addr,Word - Writes a Word in memory.
LotanMem.obj(172):006 PokeL Addr,Long - Writes a Long in memory.
LotanMem.obj(172):007 PeekS (Addr[,Len]) - Reads a String form memory.
LotanMem.obj(172):008 PokeS Addr,Str[,Len] - Writes a String in memory.
LotanMem.obj(172):009 PeekT (Addr,Byte) - Reads memory into a String from Addr upto Byte.
LotanMem.obj(172):010 MPokeL Addr,Long[,Long...] - Writes multiple Longs.
LotanMem.obj(172):011 MemCls Addr,Len[,Byte] - Fills memory.
LotanMemExt.obj(173):001 FlipWord (Word) - Flips a Word.
LotanMemExt.obj(173):002 FlipLong (Long) - Flips a Long.
LotanMemExt.obj(173):003 FPeekW (Addr) - Returns and Flips a Word from Addr.
LotanMemExt.obj(173):004 FPeekL (Addr) - Returns and Flips a Long from Addr.
LotanMemExt.obj(173):005 UPeekB (Addr) - Returns an unsigned Byte from Addr.
LotanMemExt.obj(173):006 UPeekW (Addr) - Returns an unsigned Word from Addr.
LotanMemExt.obj(173):007 SaveMem (FileName,Addr,Len) - Saves memory in a file.
LotanMemExt.obj(173):008 LoadMem (FileName,Addr,Len) - Loads a file in memory.
nDos.obj(174):001 NRenameFile (OldName, NewName)
nDos.obj(174):002 NDeleteFile (FileName)
nDos.obj(174):003 Essais (#long)
nDos.obj(174):004 NCommentFile (FileName, Comment
nChunky.obj(175):001 NChunkyBuffer (#Buffer, Width, Height) - Allocate a chunky buffer
nChunky.obj(175):002 NChunkyBlit (ShapeWidth, ShapeHeight, ShapeAddress, X, Y)
nChunky.obj(175):003 NChunkyBlock (ShapeWidth, ShapeHeight, ShapeAddress, X, Y)
nChunky.obj(175):004 NChunkyCls (Colour)
nChunky.obj(175):005 NChunkyPlot (X, Y, Colour)
nChunky.obj(175):006 NUseChunkyBuffer (#Buffer)
nChunky.obj(175):007 NInitChunky (#NumObjectMax)
nChunky.obj(175):008 NFreeChunkyBuffer (#Buffer)
nChunky.obj(175):009 NChunkyID - Return the chunkybuffer memory pointer
nC2P.obj(176):001 c2p040_320_200 (ChunkyBufferAdress, BitmapAdress)
nC2P.obj(176):002 c2p040_320_256 (ChunkyBufferAdress, BitmapAdress)
nAsl.obj(177):001 NASLFileRequest (TagList)
nAsl.obj(177):002 NASLFontRequest (TagList)
nAsl.obj(177):003 NASLScreenRequest (TagList)
nAsl.obj(177):004 NASLPosX - Return the last opened ASL requester X pos -
nAsl.obj(177):005 NASLPosY - Return the last opened ASL requester Y pos-
nAsl.obj(177):006 NASLWidth - Return the last opened ASL requester width -
nAsl.obj(177):007 NASLHeight - Return the last opened ASL requester height -
nAsl.obj(177):008 NInitASL - Initialize ASL for use -
nXpk.obj(178):001 NUnPackFile (&SourceFile$, &DestFile$, &Password$)
nXpk.obj(178):002 NPackFile (&SourceFile$, &DestFile$, &PackerName$, &Password$)
nXpk.obj(178):003 NPackMemToFile (*MemAddr, MemLen, &DestFilename$, &Packer$, &Pass$)
nXpk.obj(178):004 NUnPackFileToMem (&SourceName, MemType, &Pass$)
nXpk.obj(178):005 NXpkFileLength - Return the decompressed File Length
nXpk.obj(178):006 NXpkBufferLength - Return the allocated buffer length
nXpk.obj(178):007 NPackerInfo (&PackerName$, Efficiency)
nXpk.obj(178):008 NPackerName - Return the info packer name
nXpk.obj(178):009 NPackerLongName - Return the info packer long name
nXpk.obj(178):010 NPackerDescription - Return the info packer description
nXpk.obj(178):011 NScanPackersList - Scan the packers list...
nXpk.obj(178):012 NGetPackerNumber - Return the number of Xpk packers
nXpk.obj(178):013 NGetNextPacker - Return the next packer name
nXpk.obj(178):014 NInitXpk - Initialize Xpk Environnement
nXpk.obj(178):015 NUnPackTagList (TagList)
nGadTools.obj(179):001 NButtonGadget (#Gadget, x, y, Width, Height, Text$, TagList)
nGadTools.obj(179):002 NCheckBoxGadget (#Gadget, x, y, Width, Height, Text$, TagList)
nGadTools.obj(179):003 NIntegerGadget (#Gadget, x, y, Width, Height, Text$, TagList)
nGadTools.obj(179):004 NListViewGadget (#Gadget, x, y, Width, Height, Text$, TagList)
nGadTools.obj(179):005 NNumberGadget (#Gadget, x, y, Width, Height, Text$, TagList)
nGadTools.obj(179):006 NCycleGadget (#Gadget, x, y, Width, Height, Text$, TagList)
nGadTools.obj(179):007 NPaletteGadget (#Gadget, x, y, Width, Height, Text$, TagList)
nGadTools.obj(179):008 NScrollerGadget (#Gadget, x, y, Width, Height, Text$, TagList)
nGadTools.obj(179):009 NSliderGadget (#Gadget, x, y, Width, Height, Text$, TagList)
nGadTools.obj(179):010 NStringGadget (#Gadget, x, y, Width, Height, Text$, TagList)
nGadTools.obj(179):011 NTextGadget (#Gadget, x, y, Width, Height, Text$, TagList)
nGadTools.obj(179):012 NSetGadgetFont &FontAttr structure !
nGadTools.obj(179):013 NSetGadgetFlags Flags
nGadTools.obj(179):014 NGadgetAttrs #Gadget, #TAG_ITEM, #TAG_DATA
nGadTools.obj(179):015 NGetStringText (#Gadget)
nGadTools.obj(179):016 NUnused1 
nGadTools.obj(179):017 NUseGadgetList #GadgetList
nGadTools.obj(179):018 NCreateGadgetList (#GadgetList, ScreenID)
nGadTools.obj(179):019 NAttachGadgetList #GadgetList, WindowID
nGadTools.obj(179):020 NUnused6 
nGadTools.obj(179):021 NUnused7 
nGadTools.obj(179):022 NUnused8 
nGadTools.obj(179):023 NUnused9 
nGadTools.obj(179):024 NUnused10 
nGadTools.obj(179):025 NUnused11 
nGadTools.obj(179):026 NUnused12 
nGadTools.obj(179):027 NUnused13 
nGadTools.obj(179):028 NUnused4 
nGadTools.obj(179):029 NUnused3 
nGadTools.obj(179):030 NInitGadget (NumMaxGadgetLists)
nGadTools.obj(179):031 NOptionGadget (#Gadget, x, y, Width, Height, Text$, TagList)
nGadTools.obj(179):032 NUnused2 
nGadTools.obj(179):033 NDisableGadget #Gadget, State
nGadTools.obj(179):034 NActivateGadget #Gadget
nGadTools.obj(179):035 NRefreshGadget #Gadget
nGadTools.obj(179):036 NNoGadgetBorder #Gadget
nGadTools.obj(179):037 NFreeGadgetList #GadgetList
nGadTools.obj(179):038 NSetStringText #Gadget, Text$
nGadTools.obj(179):039 NRefreshGadgetList - Refresh the current gadget list.
nGadTools.obj(179):040 NUnused14 
memacclib.obj(180):001 Poke [.Type] Address,Data
memacclib.obj(180):002 Peek [.Type](Address)
memacclib.obj(180):003 Peeks$ (Address,Length)
memacclib.obj(180):004 Call Address
memacclib.obj(180):005 PeekUB (addr);Read unsigned byte at address
memacclib.obj(180):006 PeekUW (addr);Read unsigned word at address
nMenu.obj(181):001 NMenuTitle (&Title$)
nMenu.obj(181):002 NMenuItem (#Item, &Title$, &CommandKey$)
nMenu.obj(181):003 NMenuSubItem (#Item, &Title$, &CommandKey$)
nMenu.obj(181):004 NMenuBar - Create a menu separator bar
nMenu.obj(181):005 NMenuSubBar - Create a submenu separator bar
nMenu.obj(181):006 NCreateMenu (#Menu, ScreenID)
nMenu.obj(181):007 NAttachMenu (#Menu, WindowID)
nMenu.obj(181):008 NSetMenuColour (Colour)
nMenu.obj(181):009 NInitMenu (NumMaxMenus, MaximumMenuItems)
nMenu.obj(181):010 NFreeMenu (#Menu) - Free the specified menu -
nMenu.obj(181):011 NMenuCheckItem (#Item, &Title$, &CommandKey$, State)
nMenu.obj(181):012 NMenuCheckSubItem (#Item, &Title$, &CommandKey$, State)
nMenu.obj(181):013 NMenuToggleItem (#Item, &Title$, &CommandKey$, State)
nMenu.obj(181):014 NMenuToggleSubItem (#Item, &Title$, &CommandKey$, State)
LotanLinked.obj(182):001 LnkAdd (Header,Size) - Create linked list / Add an item
LotanLinked.obj(182):002 LnkDel Header,Item - Remove Item from linked list
nPicture.obj(183):001 NInitPicture (#MaxPicture)
nPicture.obj(183):002 NFreePicture (#Picture) - Remove the specified picture from memory
nPicture.obj(183):003 NUsePicture (#Picture) - Change the used picture
nPicture.obj(183):004 NLoadPicture (#Picture, Filename$)
nPicture.obj(183):005 NPictureWidth - Return the used picture width
nPicture.obj(183):006 NPictureHeight - Return the used picture height
nPicture.obj(183):007 NPictureDepth - Return the used picture depth
nPicture.obj(183):008 NPictureToBitmap (#Picture, BitmapID)
nPicture.obj(183):009 NPictureID  - Return the used picture pointer -
nPicture.obj(183):010 NDecodePicture (*PictureAddr, BitmapID)
nBitMap.obj(184):001 NUseBitMap (#BitMap)
nBitMap.obj(184):002 NBitMap (#BitMap, Width, Height, Depth) - Allocate a new bitmap -
nBitMap.obj(184):003 NBitMapRastPort  - Return the used bitmap rastport -
nBitMap.obj(184):004 NShowBitMap (#BitMap, ScreenID, x, y)
nBitMap.obj(184):005 NFreeBitMap (#BitMap) - Free the specified bitmap -
nBitMap.obj(184):006 NInitBitMap (#MaxNumBitMaps) - Init BitMap environnement -
nBitMap.obj(184):007 NBitMapID  - Return the used bitmap pointer -
stringfunclib.obj(185):001 Left$ (String$,Length)
stringfunclib.obj(185):002 Right$ (String$,Length)
stringfunclib.obj(185):003 Mid$ (String$,Startchar[,Length][,Replace$])
stringfunclib.obj(185):004 Hex$ (Expression)
stringfunclib.obj(185):005 Bin$ (Expression)
stringfunclib.obj(185):006 Chr$ (Expression)
stringfunclib.obj(185):007 Asc (String$)
stringfunclib.obj(185):008 String$ (String$,Repeats)
stringfunclib.obj(185):009 Instr (String$,Findstring$[,Startpos])
stringfunclib.obj(185):010 Replace$ (String$,Findstring$,Replacestring$)
stringfunclib.obj(185):011 Mki$ (Integer)
stringfunclib.obj(185):012 Mkl$ (Long)
stringfunclib.obj(185):013 Cvi (String$)
stringfunclib.obj(185):014 Cvl (String$)
stringfunclib.obj(185):015 Len (String$)
stringfunclib.obj(185):016 UnLeft$ (String$,Length)
stringfunclib.obj(185):017 UnRight$ (String$,Length)
stringfunclib.obj(185):018 StripLead$ (String$,Ascii)
stringfunclib.obj(185):019 StripTrail$ (String$,Ascii)
stringfunclib.obj(185):020 LSet$ (String$,Characters)
stringfunclib.obj(185):021 RSet$ (String$,Characters)
stringfunclib.obj(185):022 Centre$ (String$,Characters)
stringfunclib.obj(185):023 LCase$ (String$)
stringfunclib.obj(185):024 UCase$ (String$)
stringfunclib.obj(185):025 CaseSense On|Off
stringfunclib.obj(185):026 Mkq$ (Quick)
stringfunclib.obj(185):027 Cvq (String$)
stringfunclib.obj(185):028 Hexb$ (Expression)
stringfunclib.obj(185):029 Hexw$ (Expression)
stringfunclib.obj(185):030 Binb$ (Expression)
stringfunclib.obj(185):031 Binw$ (Expression)
stringfunclib.obj(185):032 PeekMax$ addr,maxchars
editlib.obj(186):001 Edit$ ([DefaultString$,]Characters)
editlib.obj(186):002 Inkey$ [(Characters)]
editlib.obj(186):003 Edit ([DefaultValue,]Characters)
editlib.obj(186):004 ReadLine$ ;read fast a string until $0 is reach or max 2000 chars
editlib.obj(186):005 GetRegD0 Variable,..;Put Variables to d0-d2 a2 =Newtypeaddr
editlib.obj(186):006 PutRegD0 Put d0 to Variable var=PutD0
printlib.obj(187):001 Print Expression[,Expression...]
printlib.obj(187):002 NPrint Expression[,Expression...]
printlib.obj(187):003 Str$ (Expression)
printlib.obj(187):004 Format FormatString
printlib.obj(187):005 FloatMode Mode : -1=standard, 0=guess, 1=exp
printlib.obj(187):006 UStr$ (Expression)
printlib.obj(187):007 UPrint Expression[,Expression...]
printlib.obj(187):008 UNPrint Expression[,Expression...]
nDrawing.obj(188):001 NBoxFill (x1, y1, x2, y2) - Draw a filled box on the current OutPut -
nDrawing.obj(188):002 NPlot (x, y) - Draw a plot on the current OutPut -
nDrawing.obj(188):003 NLine (x1, y1, x2, y2) - Draw a line on the current OutPut -
nDrawing.obj(188):004 NCircle (x, y, Radius) - Draw a circle on the current OutPut -
nDrawing.obj(188):005 NEllipse (x, y, RadiusX, RadiusY) - Draw an ellipse on the current OutPut -
nDrawing.obj(188):006 NFrontColour (Colour) - Change the front colour of the current OutPut -
nDrawing.obj(188):007 NBackColour (Colour) - Change the back colour of the current OutPut -
nDrawing.obj(188):008 NDrawingMode (DrawMode) - Change the draw mode of the current OutPut -
nDrawing.obj(188):009 NDrawingOutput (RastPort) - Change the current OutPut -
nDrawing.obj(188):010 NCopybitMap (BitMapID, SourceX, SourceY, DestX, DestY, Width, Height) - Copy the specified bitmap to Output -
nDrawing.obj(188):011 NCls (Colour) - Clear the current output with given colour -
nDrawing.obj(188):012 NLocate (x, y) - Set the cursor position for text output -
nDrawing.obj(188):013 NDPrint (Text$) - Print the specified text -
nDrawing.obj(188):014 NTextStyle (Style) - 1=Underline, 2=Bold, 4=Italic -
nDrawing.obj(188):015 NDrawingFont (FontID) - Change the current font -
nDrawing.obj(188):016 NTextLength (String$) - Return the length in pixel of the string -
nDrawing.obj(188):017 NPoint (x, y) - Return the pixel colour at position (x,y) -
nDrawing.obj(188):018 NDrawingRastPort  - Return the current Drawing RastPort -
nDrawing.obj(188):019 NCursX - Return the current cursor X position -
nDrawing.obj(188):020 NCursY - Return the current cursor Y position -
LotanIO.obj(189):001 OpenF (Name[,Mode]) - Opens a file
LotanIO.obj(189):002 CloseF [File] - Closes a file
LotanIO.obj(189):003 ReadLN [(File)] - Reads a line from a file
LotanIO.obj(189):004 ReadCH ([File,]Len) - Reads characters from a file
LotanIO.obj(189):005 WriteLN [File,]Str - Write a line to a file
LotanIO.obj(189):006 WriteCH [File,]Str - Write characters to a file
LotanIO.obj(189):007 WriteNM [File,]Num,Frm - Write a number to a file
LotanIO.obj(189):008 IOFile [File] - Used to Set or Get the working file
LotanIO.obj(189):009 EOFile [(File)] - Used to check the end of a file
LotanIO.obj(189):010 FSeek [File,]Pos,OffSet - Moves the 'file cursor' inside a file
LotanIO.obj(189):011 FSize [(File)] - Returns the size of a file in bytes
gameiolib.obj(190):001 Joyx (Port)
gameiolib.obj(190):002 Joyy (Port)
gameiolib.obj(190):003 Joyr (Port)
gameiolib.obj(190):004 Joyb (Port)
gameiolib.obj(190):005 Gameb (Port)
algebralib.obj(191):001 Random1 num1.q,num2.q
algebralib.obj(191):002 Random2 num1.q,num2.q
algebralib.obj(191):003 Random3 num1.q,num2.q
algebralib.obj(191):004 ADM *mat.matrix,row,col
algebralib.obj(191):005 Elt *mat.matrix,row,col
algebralib.obj(191):006 SetElt *mat.matrix,row,col,value.q
algebralib.obj(191):007 Transp *mat.matrix
algebralib.obj(191):008 SwapRow *mat.matrix,row,row
algebralib.obj(191):009 Recipacc quick
algebralib.obj(191):010 Recipapx quick
mathtranslib.obj(192):001 ACos (Float)
mathtranslib.obj(192):002 ASin (Float)
mathtranslib.obj(192):003 ATan (Float)
mathtranslib.obj(192):004 Cos (Float)
mathtranslib.obj(192):005 HCos (Float)
mathtranslib.obj(192):006 Exp (Float)
mathtranslib.obj(192):007 Log10 (Float)
mathtranslib.obj(192):008 Log (Float)
mathtranslib.obj(192):009 Sin (Float)
mathtranslib.obj(192):010 HSin (Float)
mathtranslib.obj(192):011 Sqr (Float)
mathtranslib.obj(192):012 Tan (Float)
mathtranslib.obj(192):013 HTan (Float)
environlib.obj(193):001 WBWidth 
environlib.obj(193):002 WBHeight 
environlib.obj(193):003 WBDepth 
environlib.obj(193):004 WBViewMode 
environlib.obj(193):005 Processor 0=68000,1=68010,2=68020,3=68030,4=68040,5=68060
environlib.obj(193):006 cr_vbr 
environlib.obj(193):007 ExecVersion 
environlib.obj(193):008 WBExtViewMode 
utillib.obj(194):001 CreateMsgPort  *UserPort.port=CreateMsgPort(PortName$)
utillib.obj(194):002 DeleteMsgPort  *UserPort
utillib.obj(194):003 Wait 
utillib.obj(194):004 TaskName$ task
LotanArgs.obj(195):001 wbmessage - Returns location of WBStartup message
LotanArgs.obj(195):002 WBArgs - Returns the number of arguments passed by the Workbench
LotanArgs.obj(195):003 wArg (Num) - Used to get WB args
LotanArgs.obj(195):004 ReadArgs (Template) - Used to parse CLI args
LotanArgs.obj(195):005 cArg (Num) - Used to get CLI args
LotanWord.obj(196):001 Word (Str[,Num])
LotanWord.obj(196):002 Words (Str)
LotanWord.obj(196):003 WordIndex (Str,Num)
LotanDraw.obj(197):001 DrPort [RastPort] - Sets the RastPort to draw in
LotanDraw.obj(197):002 DrPlot x,y[,Pen] - Changes the color of a pixel in the current RastPort
LotanDraw.obj(197):003 DrBox x1,y1,x2,y2[,Pen] - Draws a box in the current RastPort
LotanDraw.obj(197):004 DrBoxf x1,y1,x2,y2[,Pen] - Draws a filled box in the current RastPort
LotanDraw.obj(197):005 DrLine x1,y1,x2,y2[,xn,yn...][,Pen] - Draws a series of lines on the current RastPort
LotanDraw.obj(197):006 DrBevel x2,y1,x2,y2,Pen1,Pen2 - Draws a bevel box on the current RastPort
LotanDraw.obj(197):007 DrText Text,x,y,Pen[,Len] - Prints Text on the current RastPort
LotanDraw.obj(197):008 DrTextLen (Str[,Len]) - Returns size of Str in pixels
LotanDraw.obj(197):009 DrTextMax (x1,x2,Str) - Returns the number of characters able to fit between x1 and x2
LotanDraw.obj(197):010 DrTextStl Style
LotanDraw.obj(197):011 DrCls Pen - Clears the current RastPort
LotanDraw.obj(197):012 DrFont (Font) - Sets RastPort font
LotanDraw.obj(197):013 DrMode Mode - Sets RastPort drawing mode
LotanDraw.obj(197):014 DrEllipse x,y,xRad,yRad[,Pen] - Used to Draw an outlined ellipse
LotanDraw.obj(197):015 DrCircle x,y,Rad[,Pen] - Used to Draw an outlined circle
LotanDraw.obj(197):016 DrBlit BitMap,xSrc,ySrc,xDest,yDest,Width,Height[,MinTerm]
LotanDraw.obj(197):017 DrTopaz Size - Sets Topaz font
LotanDraw.obj(197):018 DrPen Pen - SET drawing pen
identify.library1(198):001 IdExpansion_ (TagList)
identify.library1(198):002 IdHardware_ (Type,TagList)
identify.library1(198):003 IdAlert_ (ID,TagList)
identify.library1(198):004 IdFunction_ (LibName,Offset,TagList)
identify.library1(198):005 IdHardwareNum_ (Type,TagList)
identify.library1(198):006 IdHardwareUpdate_ 
identify.library1(198):007 IdFormatString_ (String,Buffer,Length,Tags)
identify.library1(198):008 IdEstimateFormatSize_ (String,Tags)
nWbStartup.obj(199):001 NWbStartup  - Allow the program to be start from WB
wbstart.library1(200):001 WBStartTagList_ (tags)
muimaster.library1(201):001 MUI_NewObjectA_ (class,tags)
muimaster.library1(201):002 MUI_DisposeObject_ (obj)
muimaster.library1(201):003 MUI_RequestA_ (app,win,flags,title,gadgets,format,params)
muimaster.library1(201):004 MUI_AllocAslRequest_ (type,tags)
muimaster.library1(201):005 MUI_AslRequest_ (req,tags)
muimaster.library1(201):006 MUI_FreeAslRequest_ (req)
muimaster.library1(201):007 MUI_Error_ 
muimaster.library1(201):008 MUI_SetError_ (errnum)
muimaster.library1(201):009 MUI_GetClass_ (name)
muimaster.library1(201):010 MUI_FreeClass_ (cl)
muimaster.library1(201):011 MUI_RequestIDCMP_ (obj,flags)
muimaster.library1(201):012 MUI_RejectIDCMP_ (obj,flags)
muimaster.library1(201):013 MUI_Redraw_ (obj,flags)
muimaster.library1(201):014 MUI_CreateCustomClass_ (base,supername,supermcc,datasize,dispatcher)
muimaster.library1(201):015 MUI_DeleteCustomClass_ (mcc)
muimaster.library1(201):016 MUI_MakeObjectA_ (type,params)
muimaster.library1(201):017 MUI_Layout_ (obj,l,t,w,h,flags)
muimaster.library1(201):018 MUI_ObtainPen_ (mri,spec,flags)
muimaster.library1(201):019 MUI_ReleasePen_ (mri,pen)
muimaster.library1(201):020 MUI_AddClipping_ (mri,l,t,w,h)
muimaster.library1(201):021 MUI_RemoveClipping_ (mri,h)
muimaster.library1(201):022 MUI_AddClipRegion_ (mri,region)
muimaster.library1(201):023 MUI_RemoveClipRegion_ (mri,region)
muimaster.library1(201):024 MUI_BeginRefresh_ (mri,flags)
muimaster.library1(201):025 MUI_EndRefresh_ (mri,flags)
bfbplaymaster.library1(204):001 BFBCheckModule_ (taglist)
bfbplaymaster.library1(204):002 BFBLoadModule_ (taglist)
bfbplaymaster.library1(204):003 BFBUnLoadModule_ (ModInfo)
bfbplaymaster.library1(204):004 BFBForceLoadModule_ (taglist)
bfbplaymaster.library1(204):005 BFBPlayModule_ (ModInfo)
bfbplaymaster.library1(204):006 BFBStopModule_ (ModInfo)
bfbplaymaster.library1(204):007 BFBContModule_ (ModInfo)
bfbplaymaster.library1(204):008 BFBNextPage_ (ModInfo)
bfbplaymaster.library1(204):009 BFBPreviousPage_ (ModInfo)
bfbplaymaster.library1(204):010 BFBChangeModule_ (SongNum,ModInfo)
bfbplaymaster.library1(204):011 BFBGetSamplenames_ (ModInfo)
bfbplaymaster.library1(204):012 BFBAuthorInfo_ (ModInfo)
bfbplaymaster.library1(204):013 BFBGetError_ (errorcode)
bfbplaymaster.library1(204):014 BFBAllocChannels_ 
bfbplaymaster.library1(204):015 BFBFreeChannels_ 
newicon.library1(208):001 GetNewDiskObject_ (name)
newicon.library1(208):002 PutNewDiskObject_ (name,newdiskobj)
newicon.library1(208):003 FreeNewDiskObject_ (newdiskobj)
newicon.library1(208):004 RemapChunkyImage_ (chunkyimage,screen)
newicon.library1(208):005 FreeRemappedImage_ (image,screen)
newicon.library1(208):006 GetDefNewDiskObject_ (def_type)
thxplay.library1(209):001 thxInit_ (module)
thxplay.library1(209):002 thxFree_ 
thxplay.library1(209):003 thxPlay_ 
thxplay.library1(209):004 thxStop_ 
thxplay.library1(209):005 thxPause_ 
thxplay.library1(209):006 thxWind_ (direction)
thxplay.library1(209):007 thxGetVolume_ 
thxplay.library1(209):008 thxSetVolume_ (volume)
thxplay.library1(209):009 thxGetNumSongs_ 
thxplay.library1(209):010 thxSetSong_ (song)
thxplay.library1(209):011 thxPlayNote_ (channel,note,instrument)
thxplay.library1(209):012 thxStopNote_ (channel)
thxplay.library1(209):013 thxNoteFX_ (channel,effect,parameter)
thxplay.library1(209):014 thxSignalEnd_ (task,signalset)
thxplay.library1(209):015 thxSongEnded_ 
thxplay.library1(209):016 thxSyncByte_ 
thxplay.library1(209):017 thxPlaytime_ 
preferences.library1(210):001 AllocPrefsHandle_ (name)
preferences.library1(210):002 FreePrefsHandle_ (PrefsHandle)
preferences.library1(210):003 SetPreferences_ (PrefsHandle,ID,Tag,Struct,Struct_Size)
preferences.library1(210):004 GetPreferences_ (PrefsHandle,ID,Tag,Struct,Struct_Size)
preferences.library1(210):005 ReadPrefsHandle_ (PrefsHandle,Filename)
preferences.library1(210):006 WritePrefsHandle_ (PrefsHandle,Filename)
preferences.library1(210):007 FindPreferences_ (PrefsHandle,ID,Tag)
preferences.library1(210):008 SetEntry_ (PrefsHandle,ID,Tag,Struct,Struct_Size,Entry)
preferences.library1(210):009 GetEntry_ (PrefsHandle,ID,Tag,Struct,Struct_Size,Entry)
preferences.library1(210):010 RemEntry_ (PrefsHandle,ID,Tag,Entry)
disassembler.library1(211):001 Disassemble_ (data)
disassembler.library1(211):002 FindStartPosition_ (startpc,min,max)
FileID.library1(213):001 FIAllocFileInfo_ 
FileID.library1(213):002 FIFreeFileInfo_ (FileInfo)
FileID.library1(213):003 FIIdentify_ (Address,FileInfo)
FileID.library1(213):004 FIIdentifyFromName_ (FileInfo,Name)
FileID.library1(213):005 FIGetHighID_ 
FileID.library1(213):006 FIGetIDString_ (Number)
translator.library1(214):001 Translate_ (inputString,inputLength,outputBuffer,bufferSize)
reqtools.library1(215):001 rtAllocRequestA_ (type,taglist)
reqtools.library1(215):002 rtFreeRequest_ (req)
reqtools.library1(215):003 rtFreeReqBuffer_ (req)
reqtools.library1(215):004 rtChangeReqAttrA_ (req,taglist)
reqtools.library1(215):005 rtFileRequestA_ (filereq,file,title,taglist)
reqtools.library1(215):006 rtFreeFileList_ (filelist)
reqtools.library1(215):007 rtEZRequestA_ (bodyfmt,gadfmt,reqinfo,argarray,taglist)
reqtools.library1(215):008 rtGetStringA_ (buffer,maxchars,title,reqinfo,taglist)
reqtools.library1(215):009 rtGetLongA_ (longptr,title,reqinfo,taglist)
reqtools.library1(215):010 rtFontRequestA_ (fontreq,title,taglist)
reqtools.library1(215):011 rtPaletteRequestA_ (title,reqinfo,taglist)
reqtools.library1(215):012 rtReqHandlerA_ (handlerinfo,sigs,taglist)
reqtools.library1(215):013 rtSetWaitPointer_ (window)
reqtools.library1(215):014 rtGetVScreenSize_ (screen,widthptr,heightptr)
reqtools.library1(215):015 rtSetReqPosition_ (reqpos,newwindow,screen,window)
reqtools.library1(215):016 rtSpread_ (posarray,sizearray,length,min,max,num)
reqtools.library1(215):017 rtScreenToFrontSafely_ (screen)
reqtools.library1(215):018 rtScreenModeRequestA_ (screenmodereq,title,taglist)
reqtools.library1(215):019 rtCloseWindowSafely_ (win)
reqtools.library1(215):020 rtLockWindow_ (win)
reqtools.library1(215):021 rtUnlockWindow_ (win,winlock)
ted.library1(216):001 TEDSetLabelList_ (&mouselist) (a0)-30
ted.library1(216):002 TEDSetLabelCount_ (&mousecount) (a0)-36
ted.library1(216):003 TEDGetLabelList_  ()-42
ted.library1(216):004 TEDGetLabelCount_  ()-48
ted.library1(216):005 TEDSetJumpTable_  ()-54
ted.library1(216):006 TEDGetJumpTable_  ()-60
ted.library1(216):007 TEDError_ (bodytext) (a0)-66
ted.library1(216):008 TEDSetFirstLine_ (&firstline) (a0)-72
ted.library1(216):009 TEDSetCurrentLine_ (&currentline) (a0)-78
ted.library1(216):010 TEDGetFirstLine_  ()-84
ted.library1(216):011 TEDGetCurrentLine_  ()-90
ted.library1(216):012 TEDDetoke_ (sourceline) (a0)-96
ted.library1(216):013 TEDGetFilename_  ()-102
fpulib.obj(217):001 Lib 
fpulib.obj(217):002 fmove offs(ax),dest;floatmove
fpulib.obj(217):003 fsub source,dest
fpulib.obj(217):004 fadd source,dest
fpulib.obj(217):005 fmul source,dest
fpulib.obj(217):006 fdiv source,dest
fpulib.obj(217):007 fcmp source,dest
fpulib.obj(217):008 fneg source
fpulib.obj(217):009 UsePPC Use PPC Assembler
fpulib.obj(217):010 UseNoPPC Use 68k Assembler only if switch to ppc
fpulib.obj(217):011 mullw (.)rd,ra,rb
fpulib.obj(217):012 lbz rd,offs(ra)
fpulib.obj(217):013 addis rd,ra,imm
fpulib.obj(217):014 add 
fpulib.obj(217):015 addi 
fpulib.obj(217):016 cmpw [CR0-7],ra,rb Compare ra-rb
fpulib.obj(217):017 cmpwi [CR0-7],ra,16bit Value Compare ra-rb
fpulib.obj(217):018 fcmpo 0-7,fra,frb
fpulib.obj(217):019 bne 
fpulib.obj(217):020 beq 
fpulib.obj(217):021 blt 
fpulib.obj(217):022 ble 
fpulib.obj(217):023 bge 
fpulib.obj(217):024 bgt 
fpulib.obj(217):025 bnl 
fpulib.obj(217):026 bng 
fpulib.obj(217):027 bso 
fpulib.obj(217):028 bns 
fpulib.obj(217):029 bun 
fpulib.obj(217):030 bnu 
fpulib.obj(217):031 mulli 
fpulib.obj(217):032 addic 
fpulib.obj(217):033 subfic 
fpulib.obj(217):034 cmplwi 
fpulib.obj(217):035 mtctr 
fpulib.obj(217):036 mtlr 
fpulib.obj(217):037 mflr 
fpulib.obj(217):038 mfctr 
fpulib.obj(217):039 bdnz 
fpulib.obj(217):040 b_ 
fpulib.obj(217):041 bl 
fpulib.obj(217):042 blr 
fpulib.obj(217):043 rlwimi [.] s,a,sh,mb,me
fpulib.obj(217):044 rlwinm [.] s,a,sh,mb,me
fpulib.obj(217):045 rlwnm [.] s,a,b,mb,me
fpulib.obj(217):046 ori 
fpulib.obj(217):047 oris 
fpulib.obj(217):048 andi 
fpulib.obj(217):049 andis 
fpulib.obj(217):050 xori s,a,imm
fpulib.obj(217):051 xoris s,a,imm
fpulib.obj(217):052 subfc [.] rd,ra-rb
fpulib.obj(217):053 addc [.] rd,ra+rb
fpulib.obj(217):054 lwarx rd,Offs(rb)
fpulib.obj(217):055 lwzx rd,ra,rb
fpulib.obj(217):056 slw [.]rd,ra,rb
fpulib.obj(217):057 and [.]rd,ra,rb
fpulib.obj(217):058 subf [.]rd,ra,rb
fpulib.obj(217):059 cmplw [CR0-7],ra,rb
fpulib.obj(217):060 lwzux rd,ra,rb
fpulib.obj(217):061 mulhw [.] rd,ra,rb
fpulib.obj(217):062 lbzx rd,ra,rb
fpulib.obj(217):063 neg [.] rd,ra
fpulib.obj(217):064 lbzux rd,ra,rb
fpulib.obj(217):065 nor [.] rd,ra,rb
fpulib.obj(217):066 subfe [.] rd,ra,rb
fpulib.obj(217):067 adde [.] rd,ra,rb
fpulib.obj(217):068 stwx  rd,ra,rb
fpulib.obj(217):069 stwux  rd,ra,rb
fpulib.obj(217):070 stbx rd,ra,rb
fpulib.obj(217):071 stbux rd,ra,rb
fpulib.obj(217):072 lhzx rd,ra,rb
fpulib.obj(217):073 lhax rd,ra,rb
fpulib.obj(217):074 lhaux rd,ra,rb
fpulib.obj(217):075 sthx rd,ra,rb
fpulib.obj(217):076 fdiv rd,ra,rb
fpulib.obj(217):077 sthux rd,ra,rb
fpulib.obj(217):078 or [.]rd,ra,rb
fpulib.obj(217):079 divwu [.]rd,ra,rb
fpulib.obj(217):080 divw [.]rd,ra,rb
fpulib.obj(217):081 lfsx rd,ra,rb
fpulib.obj(217):082 srw [.]rd,ra,rb
fpulib.obj(217):083 lfdx rd,ra,rb
fpulib.obj(217):084 lfdux rd,ra,rb
fpulib.obj(217):085 lfsux rd,ra,rb
fpulib.obj(217):086 stfsx rd,ra,rb
fpulib.obj(217):087 stfsux rd,ra,rb
fpulib.obj(217):088 stfdx rd,ra,rb
fpulib.obj(217):089 stfdux rd,ra,rb
fpulib.obj(217):090 sraw [.] rd,ra,rb
fpulib.obj(217):091 srawi [.] rd,ra,sh
fpulib.obj(217):092 extsh [.] rd,rah
fpulib.obj(217):093 extsb [.] rd,ra
fpulib.obj(217):094 lwz rd,Offs(ra)
fpulib.obj(217):095 lwzu rd,Offs(ra)
fpulib.obj(217):096 lbzu rd,Offs(ra)
fpulib.obj(217):097 stw rd,Offs(ra)
fpulib.obj(217):098 stwu rd,Offs(ra)
fpulib.obj(217):099 stb rd,Offs(ra)
fpulib.obj(217):100 stbu rd,Offs(ra)
fpulib.obj(217):101 lhz rd,Offs(ra)
fpulib.obj(217):102 lhzu rd,Offs(ra)
fpulib.obj(217):103 lha rd,Offs(ra)
fpulib.obj(217):104 lhau rd,Offs(ra)
fpulib.obj(217):105 sth rd,Offs(ra)
fpulib.obj(217):106 sthu rd,Offs(ra)
fpulib.obj(217):107 lfs rd,Offs(ra)
fpulib.obj(217):108 lfsu rd,Offs(ra)
fpulib.obj(217):109 lfd rd,Offs(ra)
fpulib.obj(217):110 lfdu rd,Offs(ra)
fpulib.obj(217):111 stfs rd,Offs(ra)
fpulib.obj(217):112 stfsu rd,Offs(ra)
fpulib.obj(217):113 stfd rd,Offs(ra)
fpulib.obj(217):114 stfdu rd,Offs(ra)
fpulib.obj(217):115 fsub rd,ra,rb
fpulib.obj(217):116 fadd rd,ra,rb
fpulib.obj(217):117 frsp rd,ra
fpulib.obj(217):118 fctiw rd,ra
fpulib.obj(217):119 fsqrt rd,ra
fpulib.obj(217):120 fsel rd,ra,rb,rc
fpulib.obj(217):121 fmul rd,ra,rb
fpulib.obj(217):122 fcmpu [CR0-7] ra,rb
fpulib.obj(217):123 fmsub rd,ra,rb,rc rd=ra*rb-rc
fpulib.obj(217):124 fmadd rd,ra,rb,rc rd=ra*rb+rc
fpulib.obj(217):125 fnmsub rd,ra,rb,rc
fpulib.obj(217):126 fnmadd rd,ra,rb,rc
fpulib.obj(217):127 fneg rd,ra
workbench.library1(220):001 AddAppWindowA_ (id,userdata,window,msgport,taglist)
workbench.library1(220):002 RemoveAppWindow_ (appWindow)
workbench.library1(220):003 AddAppIconA_ (id,userdata,text,msgport,lock,diskobj,taglist)
workbench.library1(220):004 RemoveAppIcon_ (appIcon)
workbench.library1(220):005 AddAppMenuItemA_ (id,userdata,text,msgport,taglist)
workbench.library1(220):006 RemoveAppMenuItem_ (appMenuItem)
workbench.library1(220):007 WBInfo_ (lock,name,screen)
workbench.library1(220):008 OpenWorkbenchObjectA_ (name,tags)
workbench.library1(220):009 CloseWorkbenchObjectA_ (name,tags)
workbench.library1(220):010 WorkbenchControlA_ (name,tags)
workbench.library1(220):011 AddAppWindowDropZoneA_ (aw,id,userdata,tags)
workbench.library1(220):012 RemoveAppWindowDropZone_ (aw,dropZone)
workbench.library1(220):013 ChangeWorkbenchSelectionA_ (name,hook,tags)
workbench.library1(220):014 MakeWorkbenchObjectVisibleA_ (name,tags)
utility.library1(221):001 FindTagItem_ (tagVal,tagList)
utility.library1(221):002 GetTagData_ (tagValue,defaultVal,tagList)
utility.library1(221):003 PackBoolTags_ (initialFlags,tagList,boolMap)
utility.library1(221):004 NextTagItem_ (tagListPtr)
utility.library1(221):005 FilterTagChanges_ (changeList,originalList,apply)
utility.library1(221):006 MapTags_ (tagList,mapList,mapType)
utility.library1(221):007 AllocateTagItems_ (numTags)
utility.library1(221):008 CloneTagItems_ (tagList)
utility.library1(221):009 FreeTagItems_ (tagList)
utility.library1(221):010 RefreshTagItemClones_ (clone,original)
utility.library1(221):011 TagInArray_ (tagValue,tagArray)
utility.library1(221):012 FilterTagItems_ (tagList,filterArray,logic)
utility.library1(221):013 CallHookPkt_ (hook,object,paramPacket)
utility.library1(221):014 Amiga2Date_ (seconds,result)
utility.library1(221):015 Date2Amiga_ (date)
utility.library1(221):016 CheckDate_ (date)
utility.library1(221):017 SMult32_ (arg1,arg2)
utility.library1(221):018 UMult32_ (arg1,arg2)
utility.library1(221):019 SDivMod32_ (dividend,divisor)
utility.library1(221):020 UDivMod32_ (dividend,divisor)
utility.library1(221):021 Stricmp_ (string1,string2)
utility.library1(221):022 Strnicmp_ (string1,string2,length)
utility.library1(221):023 ToUpper_ (character)
utility.library1(221):024 ToLower_ (character)
utility.library1(221):025 ApplyTagChanges_ (list,changeList)
utility.library1(221):026 SMult64_ (arg1,arg2)
utility.library1(221):027 UMult64_ (arg1,arg2)
utility.library1(221):028 PackStructureTags_ (pack,packTable,tagList)
utility.library1(221):029 UnpackStructureTags_ (pack,packTable,tagList)
utility.library1(221):030 AddNamedObject_ (nameSpace,object)
utility.library1(221):031 AllocNamedObjectA_ (name,tagList)
utility.library1(221):032 AttemptRemNamedObject_ (object)
utility.library1(221):033 FindNamedObject_ (nameSpace,name,lastObject)
utility.library1(221):034 FreeNamedObject_ (object)
utility.library1(221):035 NamedObjectName_ (object)
utility.library1(221):036 ReleaseNamedObject_ (object)
utility.library1(221):037 RemNamedObject_ (object,message)
utility.library1(221):038 GetUniqueID_ 
rexxsyslib.library1(222):001 CreateArgstring_ (string,length)
rexxsyslib.library1(222):002 DeleteArgstring_ (argstring)
rexxsyslib.library1(222):003 LengthArgstring_ (argstring)
rexxsyslib.library1(222):004 CreateRexxMsg_ (port,extension,host)
rexxsyslib.library1(222):005 DeleteRexxMsg_ (packet)
rexxsyslib.library1(222):006 ClearRexxMsg_ (msgptr,count)
rexxsyslib.library1(222):007 FillRexxMsg_ (msgptr,count,mask)
rexxsyslib.library1(222):008 IsRexxMsg_ (msgptr)
rexxsyslib.library1(222):009 LockRexxBase_ (resource)
rexxsyslib.library1(222):010 UnlockRexxBase_ (resource)
potgo.resource1(223):001 AllocPotBits_ (bits)
potgo.resource1(223):002 FreePotBits_ (bits)
potgo.resource1(223):003 WritePotgo_ (word,mask)
misc.resource1(224):001 AllocMiscResource_ (unitNum,name)
misc.resource1(224):002 FreeMiscResource_ (unitNum)
mathtrans.library1(225):001 SPAtan_ (parm)
mathtrans.library1(225):002 SPSin_ (parm)
mathtrans.library1(225):003 SPCos_ (parm)
mathtrans.library1(225):004 SPTan_ (parm)
mathtrans.library1(225):005 SPSincos_ (cosResult,parm)
mathtrans.library1(225):006 SPSinh_ (parm)
mathtrans.library1(225):007 SPCosh_ (parm)
mathtrans.library1(225):008 SPTanh_ (parm)
mathtrans.library1(225):009 SPExp_ (parm)
mathtrans.library1(225):010 SPLog_ (parm)
mathtrans.library1(225):011 SPPow_ (power,arg)
mathtrans.library1(225):012 SPSqrt_ (parm)
mathtrans.library1(225):013 SPTieee_ (parm)
mathtrans.library1(225):014 SPFieee_ (parm)
mathtrans.library1(225):015 SPAsin_ (parm)
mathtrans.library1(225):016 SPAcos_ (parm)
mathtrans.library1(225):017 SPLog10_ (parm)
mathieeesingtrans.library1(226):001 IEEESPAtan_ (parm)
mathieeesingtrans.library1(226):002 IEEESPSin_ (parm)
mathieeesingtrans.library1(226):003 IEEESPCos_ (parm)
mathieeesingtrans.library1(226):004 IEEESPTan_ (parm)
mathieeesingtrans.library1(226):005 IEEESPSincos_ (cosptr,parm)
mathieeesingtrans.library1(226):006 IEEESPSinh_ (parm)
mathieeesingtrans.library1(226):007 IEEESPCosh_ (parm)
mathieeesingtrans.library1(226):008 IEEESPTanh_ (parm)
mathieeesingtrans.library1(226):009 IEEESPExp_ (parm)
mathieeesingtrans.library1(226):010 IEEESPLog_ (parm)
mathieeesingtrans.library1(226):011 IEEESPPow_ (exp,arg)
mathieeesingtrans.library1(226):012 IEEESPSqrt_ (parm)
mathieeesingtrans.library1(226):013 IEEESPTieee_ (parm)
mathieeesingtrans.library1(226):014 IEEESPFieee_ (parm)
mathieeesingtrans.library1(226):015 IEEESPAsin_ (parm)
mathieeesingtrans.library1(226):016 IEEESPAcos_ (parm)
mathieeesingtrans.library1(226):017 IEEESPLog10_ (parm)
mathieeesingbas.library1(227):001 IEEESPFix_ (parm)
mathieeesingbas.library1(227):002 IEEESPFlt_ (integer)
mathieeesingbas.library1(227):003 IEEESPCmp_ (leftParm,rightParm)
mathieeesingbas.library1(227):004 IEEESPTst_ (parm)
mathieeesingbas.library1(227):005 IEEESPAbs_ (parm)
mathieeesingbas.library1(227):006 IEEESPNeg_ (parm)
mathieeesingbas.library1(227):007 IEEESPAdd_ (leftParm,rightParm)
mathieeesingbas.library1(227):008 IEEESPSub_ (leftParm,rightParm)
mathieeesingbas.library1(227):009 IEEESPMul_ (leftParm,rightParm)
mathieeesingbas.library1(227):010 IEEESPDiv_ (dividend,divisor)
mathieeesingbas.library1(227):011 IEEESPFloor_ (parm)
mathieeesingbas.library1(227):012 IEEESPCeil_ (parm)
mathieeedoubtrans.library1(228):001 IEEEDPAtan_ (parm)
mathieeedoubtrans.library1(228):002 IEEEDPSin_ (parm)
mathieeedoubtrans.library1(228):003 IEEEDPCos_ (parm)
mathieeedoubtrans.library1(228):004 IEEEDPTan_ (parm)
mathieeedoubtrans.library1(228):005 IEEEDPSincos_ (pf2,parm)
mathieeedoubtrans.library1(228):006 IEEEDPSinh_ (parm)
mathieeedoubtrans.library1(228):007 IEEEDPCosh_ (parm)
mathieeedoubtrans.library1(228):008 IEEEDPTanh_ (parm)
mathieeedoubtrans.library1(228):009 IEEEDPExp_ (parm)
mathieeedoubtrans.library1(228):010 IEEEDPLog_ (parm)
mathieeedoubtrans.library1(228):011 IEEEDPPow_ (exp,arg)
mathieeedoubtrans.library1(228):012 IEEEDPSqrt_ (parm)
mathieeedoubtrans.library1(228):013 IEEEDPTieee_ (parm)
mathieeedoubtrans.library1(228):014 IEEEDPFieee_ (single)
mathieeedoubtrans.library1(228):015 IEEEDPAsin_ (parm)
mathieeedoubtrans.library1(228):016 IEEEDPAcos_ (parm)
mathieeedoubtrans.library1(228):017 IEEEDPLog10_ (parm)
mathieeedoubbas.library1(229):001 IEEEDPFix_ (parm)
mathieeedoubbas.library1(229):002 IEEEDPFlt_ (integer)
mathieeedoubbas.library1(229):003 IEEEDPCmp_ (leftParm,rightParm)
mathieeedoubbas.library1(229):004 IEEEDPTst_ (parm)
mathieeedoubbas.library1(229):005 IEEEDPAbs_ (parm)
mathieeedoubbas.library1(229):006 IEEEDPNeg_ (parm)
mathieeedoubbas.library1(229):007 IEEEDPAdd_ (leftParm,rightParm)
mathieeedoubbas.library1(229):008 IEEEDPSub_ (leftParm,rightParm)
mathieeedoubbas.library1(229):009 IEEEDPMul_ (factor1,factor2)
mathieeedoubbas.library1(229):010 IEEEDPDiv_ (dividend,divisor)
mathieeedoubbas.library1(229):011 IEEEDPFloor_ (parm)
mathieeedoubbas.library1(229):012 IEEEDPCeil_ (parm)
mathffp.library1(230):001 SPFix_ (parm)
mathffp.library1(230):002 SPFlt_ (integer)
mathffp.library1(230):003 SPCmp_ (leftParm,rightParm)
mathffp.library1(230):004 SPTst_ (parm)
mathffp.library1(230):005 SPAbs_ (parm)
mathffp.library1(230):006 SPNeg_ (parm)
mathffp.library1(230):007 SPAdd_ (leftParm,rightParm)
mathffp.library1(230):008 SPSub_ (leftParm,rightParm)
mathffp.library1(230):009 SPMul_ (leftParm,rightParm)
mathffp.library1(230):010 SPDiv_ (leftParm,rightParm)
mathffp.library1(230):011 SPFloor_ (parm)
mathffp.library1(230):012 SPCeil_ (parm)
locale.library1(231):001 CloseCatalog_ (catalog)
locale.library1(231):002 CloseLocale_ (locale)
locale.library1(231):003 ConvToLower_ (locale,character)
locale.library1(231):004 ConvToUpper_ (locale,character)
locale.library1(231):005 FormatDate_ (locale,fmtTemplate,date,putCharFunc)
locale.library1(231):006 FormatString_ (locale,fmtTemplate,dataStream,putCharFunc)
locale.library1(231):007 GetCatalogStr_ (catalog,stringNum,defaultString)
locale.library1(231):008 GetLocaleStr_ (locale,stringNum)
locale.library1(231):009 IsAlNum_ (locale,character)
locale.library1(231):010 IsAlpha_ (locale,character)
locale.library1(231):011 IsCntrl_ (locale,character)
locale.library1(231):012 IsDigit_ (locale,character)
locale.library1(231):013 IsGraph_ (locale,character)
locale.library1(231):014 IsLower_ (locale,character)
locale.library1(231):015 IsPrint_ (locale,character)
locale.library1(231):016 IsPunct_ (locale,character)
locale.library1(231):017 IsSpace_ (locale,character)
locale.library1(231):018 IsUpper_ (locale,character)
locale.library1(231):019 IsXDigit_ (locale,character)
locale.library1(231):020 OpenCatalogA_ (locale,name,tags)
locale.library1(231):021 OpenLocale_ (name)
locale.library1(231):022 ParseDate_ (locale,date,fmtTemplate,getCharFunc)
locale.library1(231):023 StrConvert_ (locale,string,buffer,bufferSize,type)
locale.library1(231):024 StrnCmp_ (locale,string1,string2,length,type)
layers.library1(232):001 InitLayers_ (li)
layers.library1(232):002 CreateUpfrontLayer_ (li,bm,x0,y0,x1,y1,flags,bm2)
layers.library1(232):003 CreateBehindLayer_ (li,bm,x0,y0,x1,y1,flags,bm2)
layers.library1(232):004 UpfrontLayer_ (dummy,layer)
layers.library1(232):005 BehindLayer_ (dummy,layer)
layers.library1(232):006 MoveLayer_ (dummy,layer,dx,dy)
layers.library1(232):007 SizeLayer_ (dummy,layer,dx,dy)
layers.library1(232):008 ScrollLayer_ (dummy,layer,dx,dy)
layers.library1(232):009 BeginUpdate_ (l)
layers.library1(232):010 EndUpdate_ (layer,flag)
layers.library1(232):011 DeleteLayer_ (dummy,layer)
layers.library1(232):012 LockLayer_ (dummy,layer)
layers.library1(232):013 UnlockLayer_ (layer)
layers.library1(232):014 LockLayers_ (li)
layers.library1(232):015 UnlockLayers_ (li)
layers.library1(232):016 LockLayerInfo_ (li)
layers.library1(232):017 SwapBitsRastPortClipRect_ (rp,cr)
layers.library1(232):018 WhichLayer_ (li,x,y)
layers.library1(232):019 UnlockLayerInfo_ (li)
layers.library1(232):020 NewLayerInfo_ 
layers.library1(232):021 DisposeLayerInfo_ (li)
layers.library1(232):022 FattenLayerInfo_ (li)
layers.library1(232):023 ThinLayerInfo_ (li)
layers.library1(232):024 MoveLayerInFrontOf_ (layer_to_move,other_layer)
layers.library1(232):025 InstallClipRegion_ (layer,region)
layers.library1(232):026 MoveSizeLayer_ (layer,dx,dy,dw,dh)
layers.library1(232):027 CreateUpfrontHookLayer_ (li,bm,x0,y0,x1,y1,flags,hook,bm2)
layers.library1(232):028 CreateBehindHookLayer_ (li,bm,x0,y0,x1,y1,flags,hook,bm2)
layers.library1(232):029 InstallLayerHook_ (layer,hook)
layers.library1(232):030 InstallLayerInfoHook_ (li,hook)
layers.library1(232):031 SortLayerCR_ (layer,dx,dy)
layers.library1(232):032 DoHookClipRects_ (hook,rport,rect)
keymap.library1(233):001 SetKeyMapDefault_ (keyMap)
keymap.library1(233):002 AskKeyMapDefault_ 
keymap.library1(233):003 MapRawKey_ (event,buffer,length,keyMap)
keymap.library1(233):004 MapANSI_ (string,count,buffer,length,keyMap)
iffparse.library1(234):001 AllocIFF_ 
iffparse.library1(234):002 OpenIFF_ (iff,rwMode)
iffparse.library1(234):003 ParseIFF_ (iff,control)
iffparse.library1(234):004 CloseIFF_ (iff)
iffparse.library1(234):005 FreeIFF_ (iff)
iffparse.library1(234):006 ReadChunkBytes_ (iff,buf,numBytes)
iffparse.library1(234):007 WriteChunkBytes_ (iff,buf,numBytes)
iffparse.library1(234):008 ReadChunkRecords_ (iff,buf,bytesPerRecord,numRecords)
iffparse.library1(234):009 WriteChunkRecords_ (iff,buf,bytesPerRecord,numRecords)
iffparse.library1(234):010 PushChunk_ (iff,type,id,size)
iffparse.library1(234):011 PopChunk_ (iff)
iffparse.library1(234):012 EntryHandler_ (iff,type,id,position,handler,object)
iffparse.library1(234):013 ExitHandler_ (iff,type,id,position,handler,object)
iffparse.library1(234):014 PropChunk_ (iff,type,id)
iffparse.library1(234):015 PropChunks_ (iff,propArray,numPairs)
iffparse.library1(234):016 StopChunk_ (iff,type,id)
iffparse.library1(234):017 StopChunks_ (iff,propArray,numPairs)
iffparse.library1(234):018 CollectionChunk_ (iff,type,id)
iffparse.library1(234):019 CollectionChunks_ (iff,propArray,numPairs)
iffparse.library1(234):020 StopOnExit_ (iff,type,id)
iffparse.library1(234):021 FindProp_ (iff,type,id)
iffparse.library1(234):022 FindCollection_ (iff,type,id)
iffparse.library1(234):023 FindPropContext_ (iff)
iffparse.library1(234):024 CurrentChunk_ (iff)
iffparse.library1(234):025 ParentChunk_ (contextNode)
iffparse.library1(234):026 AllocLocalItem_ (type,id,ident,dataSize)
iffparse.library1(234):027 LocalItemData_ (localItem)
iffparse.library1(234):028 SetLocalItemPurge_ (localItem,purgeHook)
iffparse.library1(234):029 FreeLocalItem_ (localItem)
iffparse.library1(234):030 FindLocalItem_ (iff,type,id,ident)
iffparse.library1(234):031 StoreLocalItem_ (iff,localItem,position)
iffparse.library1(234):032 StoreItemInContext_ (iff,localItem,contextNode)
iffparse.library1(234):033 InitIFF_ (iff,flags,streamHook)
iffparse.library1(234):034 InitIFFasDOS_ (iff)
iffparse.library1(234):035 InitIFFasClip_ (iff)
iffparse.library1(234):036 OpenClipboard_ (unitNumber)
iffparse.library1(234):037 CloseClipboard_ (clipHandle)
iffparse.library1(234):038 GoodID_ (id)
iffparse.library1(234):039 GoodType_ (type)
iffparse.library1(234):040 IDtoStr_ (id,buf)
icon.library1(235):001 FreeFreeList_ (freelist)
icon.library1(235):002 AddFreeList_ (freelist,mem,size)
icon.library1(235):003 GetDiskObject_ (name)
icon.library1(235):004 PutDiskObject_ (name,diskobj)
icon.library1(235):005 FreeDiskObject_ (diskobj)
icon.library1(235):006 FindToolType_ (toolTypeArray,typeName)
icon.library1(235):007 MatchToolValue_ (typeString,value)
icon.library1(235):008 BumpRevision_ (newname,oldname)
icon.library1(235):009 GetDefDiskObject_ (type)
icon.library1(235):010 PutDefDiskObject_ (diskObject)
icon.library1(235):011 GetDiskObjectNew_ (name)
icon.library1(235):012 DeleteDiskObject_ (name)
icon.library1(235):013 DupDiskObjectA_ (diskObject,tags)
icon.library1(235):014 IconControlA_ (icon,tags)
icon.library1(235):015 DrawIconStateA_ (rp,icon,label,leftOffset,topOffset,state,tags)
icon.library1(235):016 GetIconRectangleA_ (rp,icon,label,rect,tags)
icon.library1(235):017 NewDiskObject_ (type)
icon.library1(235):018 GetIconTagList_ (name,tags)
icon.library1(235):019 PutIconTagList_ (name,icon,tags)
icon.library1(235):020 LayoutIconA_ (icon,screen,tags)
icon.library1(235):021 ChangeToSelectedIconColor_ (cr)
gadtools.library1(236):001 CreateGadgetA_ (kind,gad,ng,taglist)
gadtools.library1(236):002 FreeGadgets_ (gad)
gadtools.library1(236):003 GT_SetGadgetAttrsA_ (gad,win,req,taglist)
gadtools.library1(236):004 CreateMenusA_ (newmenu,taglist)
gadtools.library1(236):005 FreeMenus_ (menu)
gadtools.library1(236):006 LayoutMenuItemsA_ (firstitem,vi,taglist)
gadtools.library1(236):007 LayoutMenusA_ (firstmenu,vi,taglist)
gadtools.library1(236):008 GT_GetIMsg_ (iport)
gadtools.library1(236):009 GT_ReplyIMsg_ (imsg)
gadtools.library1(236):010 GT_RefreshWindow_ (win,req)
gadtools.library1(236):011 GT_BeginRefresh_ (win)
gadtools.library1(236):012 GT_EndRefresh_ (win,complete)
gadtools.library1(236):013 GT_FilterIMsg_ (imsg)
gadtools.library1(236):014 GT_PostFilterIMsg_ (imsg)
gadtools.library1(236):015 CreateContext_ (glistptr)
gadtools.library1(236):016 DrawBevelBoxA_ (rport,left,top,width,height,taglist)
gadtools.library1(236):017 GetVisualInfoA_ (screen,taglist)
gadtools.library1(236):018 FreeVisualInfo_ (vi)
gadtools.library1(236):019 GT_GetGadgetAttrsA_ (gad,win,req,taglist)
expansion.library1(237):001 AddConfigDev_ (configDev)
expansion.library1(237):002 AddBootNode_ (bootPri,flags,deviceNode,configDev)
expansion.library1(237):003 AllocBoardMem_ (slotSpec)
expansion.library1(237):004 AllocConfigDev_ 
expansion.library1(237):005 AllocExpansionMem_ (numSlots,slotAlign)
expansion.library1(237):006 ConfigBoard_ (board,configDev)
expansion.library1(237):007 ConfigChain_ (baseAddr)
expansion.library1(237):008 FindConfigDev_ (oldConfigDev,manufacturer,product)
expansion.library1(237):009 FreeBoardMem_ (startSlot,slotSpec)
expansion.library1(237):010 FreeConfigDev_ (configDev)
expansion.library1(237):011 FreeExpansionMem_ (startSlot,numSlots)
expansion.library1(237):012 ReadExpansionByte_ (board,offset)
expansion.library1(237):013 ReadExpansionRom_ (board,configDev)
expansion.library1(237):014 RemConfigDev_ (configDev)
expansion.library1(237):015 WriteExpansionByte_ (board,offset,byte)
expansion.library1(237):016 ObtainConfigBinding_ 
expansion.library1(237):017 ReleaseConfigBinding_ 
expansion.library1(237):018 SetCurrentBinding_ (currentBinding,bindingSize)
expansion.library1(237):019 GetCurrentBinding_ (currentBinding,bindingSize)
expansion.library1(237):020 MakeDosNode_ (parmPacket)
expansion.library1(237):021 AddDosNode_ (bootPri,flags,deviceNode)
disk.resource1(238):001 AllocUnit_ (unitNum)
disk.resource1(238):002 FreeUnit_ (unitNum)
disk.resource1(238):003 GetUnit_ (unitPointer)
disk.resource1(238):004 GiveUnit_ 
disk.resource1(238):005 GetUnitID_ (unitNum)
disk.resource1(238):006 ReadUnitID_ (unitNum)
datatypes.library1(239):001 ObtainDataTypeA_ (type,handle,attrs)
datatypes.library1(239):002 ReleaseDataType_ (dt)
datatypes.library1(239):003 NewDTObjectA_ (name,attrs)
datatypes.library1(239):004 DisposeDTObject_ (o)
datatypes.library1(239):005 SetDTAttrsA_ (o,win,req,attrs)
datatypes.library1(239):006 GetDTAttrsA_ (o,attrs)
datatypes.library1(239):007 AddDTObject_ (win,req,o,pos)
datatypes.library1(239):008 RefreshDTObjectA_ (o,win,req,attrs)
datatypes.library1(239):009 DoAsyncLayout_ (o,gpl)
datatypes.library1(239):010 DoDTMethodA_ (o,win,req,msg)
datatypes.library1(239):011 RemoveDTObject_ (win,o)
datatypes.library1(239):012 GetDTMethods_ (object)
datatypes.library1(239):013 GetDTTriggerMethods_ (object)
datatypes.library1(239):014 PrintDTObjectA_ (o,w,r,msg)
datatypes.library1(239):015 GetDTString_ (id)
commodities.library1(240):001 CreateCxObj_ (type,arg1,arg2)
commodities.library1(240):002 CxBroker_ (nb,error)
commodities.library1(240):003 ActivateCxObj_ (co,true)
commodities.library1(240):004 DeleteCxObj_ (co)
commodities.library1(240):005 DeleteCxObjAll_ (co)
commodities.library1(240):006 CxObjType_ (co)
commodities.library1(240):007 CxObjError_ (co)
commodities.library1(240):008 ClearCxObjError_ (co)
commodities.library1(240):009 SetCxObjPri_ (co,pri)
commodities.library1(240):010 AttachCxObj_ (headObj,co)
commodities.library1(240):011 EnqueueCxObj_ (headObj,co)
commodities.library1(240):012 InsertCxObj_ (headObj,co,pred)
commodities.library1(240):013 RemoveCxObj_ (co)
commodities.library1(240):014 SetTranslate_ (translator,events)
commodities.library1(240):015 SetFilter_ (filter,text)
commodities.library1(240):016 SetFilterIX_ (filter,ix)
commodities.library1(240):017 ParseIX_ (description,ix)
commodities.library1(240):018 CxMsgType_ (cxm)
commodities.library1(240):019 CxMsgData_ (cxm)
commodities.library1(240):020 CxMsgID_ (cxm)
commodities.library1(240):021 DivertCxMsg_ (cxm,headObj,returnObj)
commodities.library1(240):022 RouteCxMsg_ (cxm,co)
commodities.library1(240):023 DisposeCxMsg_ (cxm)
commodities.library1(240):024 InvertKeyMap_ (ansiCode,event,km)
commodities.library1(240):025 AddIEvents_ (events)
commodities.library1(240):026 MatchIX_ (event,ix)
ciab.resource1(241):001 AddICRVector_b (resource,iCRBit,interrupt)
ciab.resource1(241):002 RemICRVector_b (resource,iCRBit,interrupt)
ciab.resource1(241):003 AbleICR_b (resource,mask)
ciab.resource1(241):004 SetICR_b (resource,mask)
ciaa.resource1(242):001 AddICRVector_a (resource,iCRBit,interrupt)
ciaa.resource1(242):002 RemICRVector_a (resource,iCRBit,interrupt)
ciaa.resource1(242):003 AbleICR_a (resource,mask)
ciaa.resource1(242):004 SetICR_a (resource,mask)
card.resource1(243):001 OwnCard_ (handle)
card.resource1(243):002 ReleaseCard_ (handle,flags)
card.resource1(243):003 GetCardMap_ 
card.resource1(243):004 BeginCardAccess_ (handle)
card.resource1(243):005 EndCardAccess_ (handle)
card.resource1(243):006 ReadCardStatus_ 
card.resource1(243):007 CardResetRemove_ (handle,flag)
card.resource1(243):008 CardMiscControl_ (handle,control_bits)
card.resource1(243):009 CardAccessSpeed_ (handle,nanoseconds)
card.resource1(243):010 CardProgramVoltage_ (handle,voltage)
card.resource1(243):011 CardResetCard_ (handle)
card.resource1(243):012 CopyTuple_ (handle,buffer,tuplecode,size)
card.resource1(243):013 DeviceTuple_ (tuple_data,storage)
card.resource1(243):014 IfAmigaXIP_ (handle)
card.resource1(243):015 CardForceChange_ 
card.resource1(243):016 CardChangeCount_ 
card.resource1(243):017 CardInterface_ 
bullet.library1(244):001 OpenEngine_ 
bullet.library1(244):002 CloseEngine_ (glyphEngine)
bullet.library1(244):003 SetInfoA_ (glyphEngine,tagList)
bullet.library1(244):004 ObtainInfoA_ (glyphEngine,tagList)
bullet.library1(244):005 ReleaseInfoA_ (glyphEngine,tagList)
battmem.resource1(245):001 ObtainBattSemaphore_ 
battmem.resource1(245):002 ReleaseBattSemaphore_ 
battmem.resource1(245):003 ReadBattMem_ (buffer,offset,length)
battmem.resource1(245):004 WriteBattMem_ (buffer,offset,length)
battclock.resource1(246):001 ResetBattClock_ 
battclock.resource1(246):002 ReadBattClock_ 
battclock.resource1(246):003 WriteBattClock_ (time)
asl.library1(247):001 AllocFileRequest_ 
asl.library1(247):002 FreeFileRequest_ (fileReq)
asl.library1(247):003 RequestFile_ (fileReq)
asl.library1(247):004 AllocAslRequest_ (reqType,tagList)
asl.library1(247):005 FreeAslRequest_ (requester)
asl.library1(247):006 AslRequest_ (requester,tagList)
amigaguide.library1(248):001 LockAmigaGuideBase_ (handle)
amigaguide.library1(248):002 UnlockAmigaGuideBase_ (key)
amigaguide.library1(248):003 OpenAmigaGuideA_ (nag,*)
amigaguide.library1(248):004 OpenAmigaGuideAsyncA_ (nag,attrs)
amigaguide.library1(248):005 CloseAmigaGuide_ (cl)
amigaguide.library1(248):006 AmigaGuideSignal_ (cl)
amigaguide.library1(248):007 GetAmigaGuideMsg_ (cl)
amigaguide.library1(248):008 ReplyAmigaGuideMsg_ (amsg)
amigaguide.library1(248):009 SetAmigaGuideContextA_ (cl,id,attrs)
amigaguide.library1(248):010 SendAmigaGuideContextA_ (cl,attrs)
amigaguide.library1(248):011 SendAmigaGuideCmdA_ (cl,cmd,attrs)
amigaguide.library1(248):012 SetAmigaGuideAttrsA_ (cl,attrs)
amigaguide.library1(248):013 GetAmigaGuideAttr_ (tag,cl,storage)
amigaguide.library1(248):014 LoadXRef_ (lock,name)
amigaguide.library1(248):015 ExpungeXRef_ 
amigaguide.library1(248):016 AddAmigaGuideHostA_ (h,name,attrs)
amigaguide.library1(248):017 RemoveAmigaGuideHostA_ (hh,attrs)
amigaguide.library1(248):018 GetAmigaGuideString_ (id)
dos.library2(249):001 ReadItem_ (name,maxchars,cSource)
dos.library2(249):002 StrToLong_ (string,value)
dos.library2(249):003 MatchFirst_ (pat,anchor)
dos.library2(249):004 MatchNext_ (anchor)
dos.library2(249):005 MatchEnd_ (anchor)
dos.library2(249):006 ParsePattern_ (pat,buf,buflen)
dos.library2(249):007 MatchPattern_ (pat,str)
dos.library2(249):008 FreeArgs_ (args)
dos.library2(249):009 FilePart_ (path)
dos.library2(249):010 PathPart_ (path)
dos.library2(249):011 AddPart_ (dirname,filename,size)
dos.library2(249):012 StartNotify_ (notify)
dos.library2(249):013 EndNotify_ (notify)
dos.library2(249):014 SetVar_ (name,buffer,size,flags)
dos.library2(249):015 GetVar_ (name,buffer,size,flags)
dos.library2(249):016 DeleteVar_ (name,flags)
dos.library2(249):017 FindVar_ (name,type)
dos.library2(249):018 CliInitNewcli_ (dp)
dos.library2(249):019 CliInitRun_ (dp)
dos.library2(249):020 WriteChars_ (buf,buflen)
dos.library2(249):021 PutStr_ (str)
dos.library2(249):022 VPrintf_ (format,argarray)
dos.library2(249):023 ParsePatternNoCase_ (pat,buf,buflen)
dos.library2(249):024 MatchPatternNoCase_ (pat,str)
dos.library2(249):025 SameDevice_ (lock1,lock2)
dos.library2(249):026 ExAllEnd_ (lock,buffer,size,data,control)
dos.library2(249):027 SetOwner_ (name,owner_info)
graphics.library2(250):001 StripFont_ (font)
graphics.library2(250):002 CalcIVG_ (v,vp)
graphics.library2(250):003 AttachPalExtra_ (cm,vp)
graphics.library2(250):004 ObtainBestPenA_ (cm,r,g,b,tags)
graphics.library2(250):005 SetRGB32_ (vp,n,r,g,b)
graphics.library2(250):006 GetAPen_ (rp)
graphics.library2(250):007 GetBPen_ (rp)
graphics.library2(250):008 GetDrMd_ (rp)
graphics.library2(250):009 GetOutlinePen_ (rp)
graphics.library2(250):010 LoadRGB32_ (vp,table)
graphics.library2(250):011 SetChipRev_ (want)
graphics.library2(250):012 SetABPenDrMd_ (rp,apen,bpen,drawmode)
graphics.library2(250):013 GetRGB32_ (cm,firstcolor,ncolors,table)
graphics.library2(250):014 AllocBitMap_ (sizex,sizey,depth,flags,friend_bitmap)
graphics.library2(250):015 FreeBitMap_ (bm)
graphics.library2(250):016 GetExtSpriteA_ (ss,tags)
graphics.library2(250):017 CoerceMode_ (vp,monitorid,flags)
graphics.library2(250):018 ChangeVPBitMap_ (vp,bm,db)
graphics.library2(250):019 ReleasePen_ (cm,n)
graphics.library2(250):020 ObtainPen_ (cm,n,r,g,b,f)
graphics.library2(250):021 GetBitMapAttr_ (bm,attrnum)
graphics.library2(250):022 AllocDBufInfo_ (vp)
graphics.library2(250):023 FreeDBufInfo_ (dbi)
graphics.library2(250):024 SetOutlinePen_ (rp,pen)
graphics.library2(250):025 SetWriteMask_ (rp,msk)
graphics.library2(250):026 SetMaxPen_ (rp,maxpen)
graphics.library2(250):027 SetRGB32CM_ (cm,n,r,g,b)
graphics.library2(250):028 ScrollRasterBF_ (rp,dx,dy,xMin,yMin,xMax,yMax)
graphics.library2(250):029 FindColor_ (cm,r,g,b,maxcolor)
graphics.library2(250):030 AllocSpriteDataA_ (bm,tags)
graphics.library2(250):031 ChangeExtSpriteA_ (vp,oldsprite,newsprite,tags)
graphics.library2(250):032 FreeSpriteData_ (sp)
graphics.library2(250):033 SetRPAttrsA_ (rp,tags)
graphics.library2(250):034 GetRPAttrsA_ (rp,tags)
graphics.library2(250):035 BestModeIDA_ (tags)
graphics.library2(250):036 WriteChunkyPixels_ (rp,xstart,ystart,xstop,ystop,array,bytesperrow)
diskfont.library1(251):001 OpenDiskFont_ (textAttr)
diskfont.library1(251):002 AvailFonts_ (buffer,bufBytes,flags)
diskfont.library1(251):003 NewFontContents_ (fontsLock,fontName)
diskfont.library1(251):004 DisposeFontContents_ (fontContentsHeader)
diskfont.library1(251):005 NewScaledDiskFont_ (sourceFont,destTextAttr)
dos.library1(252):001 Open_ (name,accessMode)
dos.library1(252):002 Close_ (file)
dos.library1(252):003 Read_ (file,buffer,length)
dos.library1(252):004 Write_ (file,buffer,length)
dos.library1(252):005 Input_ 
dos.library1(252):006 Output_ 
dos.library1(252):007 Seek_ (file,position,offset)
dos.library1(252):008 DeleteFile_ (name)
dos.library1(252):009 Rename_ (oldName,newName)
dos.library1(252):010 Lock_ (name,type)
dos.library1(252):011 UnLock_ (lock)
dos.library1(252):012 DupLock_ (lock)
dos.library1(252):013 Examine_ (lock,fileInfoBlock)
dos.library1(252):014 ExNext_ (lock,fileInfoBlock)
dos.library1(252):015 Info_ (lock,parameterBlock)
dos.library1(252):016 CreateDir_ (name)
dos.library1(252):017 CurrentDir_ (lock)
dos.library1(252):018 IoErr_ 
dos.library1(252):019 CreateProc_ (name,pri,segList,stackSize)
dos.library1(252):020 Exit_ (returnCode)
dos.library1(252):021 LoadSeg_ (name)
dos.library1(252):022 UnLoadSeg_ (seglist)
dos.library1(252):023 DeviceProc_ (name)
dos.library1(252):024 SetComment_ (name,comment)
dos.library1(252):025 SetProtection_ (name,protect)
dos.library1(252):026 DateStamp_ (date)
dos.library1(252):027 Delay_ (timeout)
dos.library1(252):028 WaitForChar_ (file,timeout)
dos.library1(252):029 ParentDir_ (lock)
dos.library1(252):030 IsInteractive_ (file)
dos.library1(252):031 Execute_ (string,file,file2)
dos.library1(252):032 AllocDosObject_ (type,tags)
dos.library1(252):033 FreeDosObject_ (type,ptr)
dos.library1(252):034 DoPkt_ (port,action,arg1,arg2,arg3,arg4,arg5)
dos.library1(252):035 SendPkt_ (dp,port,replyport)
dos.library1(252):036 WaitPkt_ 
dos.library1(252):037 ReplyPkt_ (dp,res1,res2)
dos.library1(252):038 AbortPkt_ (port,pkt)
dos.library1(252):039 LockRecord_ (fh,offset,length,mode,timeout)
dos.library1(252):040 LockRecords_ (recArray,timeout)
dos.library1(252):041 UnLockRecord_ (fh,offset,length)
dos.library1(252):042 UnLockRecords_ (recArray)
dos.library1(252):043 SelectInput_ (fh)
dos.library1(252):044 SelectOutput_ (fh)
dos.library1(252):045 FGetC_ (fh)
dos.library1(252):046 FPutC_ (fh,ch)
dos.library1(252):047 UnGetC_ (fh,character)
dos.library1(252):048 FRead_ (fh,block,blocklen,number)
dos.library1(252):049 FWrite_ (fh,block,blocklen,number)
dos.library1(252):050 FGets_ (fh,buf,buflen)
dos.library1(252):051 FPuts_ (fh,str)
dos.library1(252):052 VFWritef_ (fh,format,argarray)
dos.library1(252):053 VFPrintf_ (fh,format,argarray)
dos.library1(252):054 Flush_ (fh)
dos.library1(252):055 SetVBuf_ (fh,buff,type,size)
dos.library1(252):056 DupLockFromFH_ (fh)
dos.library1(252):057 OpenFromLock_ (lock)
dos.library1(252):058 ParentOfFH_ (fh)
dos.library1(252):059 ExamineFH_ (fh,fib)
dos.library1(252):060 SetFileDate_ (name,date)
dos.library1(252):061 NameFromLock_ (lock,buffer,len)
dos.library1(252):062 NameFromFH_ (fh,buffer,len)
dos.library1(252):063 SplitName_ (name,seperator,buf,oldpos,size)
dos.library1(252):064 SameLock_ (lock1,lock2)
dos.library1(252):065 SetMode_ (fh,mode)
dos.library1(252):066 ExAll_ (lock,buffer,size,data,control)
dos.library1(252):067 ReadLink_ (port,lock,path,buffer,size)
dos.library1(252):068 MakeLink_ (name,dest,soft)
dos.library1(252):069 ChangeMode_ (type,fh,newmode)
dos.library1(252):070 SetFileSize_ (fh,pos,mode)
dos.library1(252):071 SetIoErr_ (result)
dos.library1(252):072 Fault_ (code,header,buffer,len)
dos.library1(252):073 PrintFault_ (code,header)
dos.library1(252):074 ErrorReport_ (code,type,arg1,device)
dos.library1(252):075 Cli_ 
dos.library1(252):076 CreateNewProc_ (tags)
dos.library1(252):077 RunCommand_ (seg,stack,paramptr,paramlen)
dos.library1(252):078 GetConsoleTask_ 
dos.library1(252):079 SetConsoleTask_ (task)
dos.library1(252):080 GetFileSysTask_ 
dos.library1(252):081 SetFileSysTask_ (task)
dos.library1(252):082 GetArgStr_ 
dos.library1(252):083 SetArgStr_ (string)
dos.library1(252):084 FindCliProc_ (num)
dos.library1(252):085 MaxCli_ 
dos.library1(252):086 SetCurrentDirName_ (name)
dos.library1(252):087 GetCurrentDirName_ (buf,len)
dos.library1(252):088 SetProgramName_ (name)
dos.library1(252):089 GetProgramName_ (buf,len)
dos.library1(252):090 SetPrompt_ (name)
dos.library1(252):091 GetPrompt_ (buf,len)
dos.library1(252):092 SetProgramDir_ (lock)
dos.library1(252):093 GetProgramDir_ 
dos.library1(252):094 SystemTagList_ (command,tags)
dos.library1(252):095 AssignLock_ (name,lock)
dos.library1(252):096 AssignLate_ (name,path)
dos.library1(252):097 AssignPath_ (name,path)
dos.library1(252):098 AssignAdd_ (name,lock)
dos.library1(252):099 RemAssignList_ (name,lock)
dos.library1(252):100 GetDeviceProc_ (name,dp)
dos.library1(252):101 FreeDeviceProc_ (dp)
dos.library1(252):102 LockDosList_ (flags)
dos.library1(252):103 UnLockDosList_ (flags)
dos.library1(252):104 AttemptLockDosList_ (flags)
dos.library1(252):105 RemDosEntry_ (dlist)
dos.library1(252):106 AddDosEntry_ (dlist)
dos.library1(252):107 FindDosEntry_ (dlist,name,flags)
dos.library1(252):108 NextDosEntry_ (dlist,flags)
dos.library1(252):109 MakeDosEntry_ (name,type)
dos.library1(252):110 FreeDosEntry_ (dlist)
dos.library1(252):111 IsFileSystem_ (name)
dos.library1(252):112 Format_ (filesystem,volumename,dostype)
dos.library1(252):113 Relabel_ (drive,newname)
dos.library1(252):114 Inhibit_ (name,onoff)
dos.library1(252):115 AddBuffers_ (name,number)
dos.library1(252):116 CompareDates_ (date1,date2)
dos.library1(252):117 DateToStr_ (datetime)
dos.library1(252):118 StrToDate_ (datetime)
dos.library1(252):119 InternalLoadSeg_ (fh,table,funcarray,stack)
dos.library1(252):120 InternalUnLoadSeg_ (seglist,freefunc)
dos.library1(252):121 NewLoadSeg_ (file,tags)
dos.library1(252):122 AddSegment_ (name,seg,system)
dos.library1(252):123 FindSegment_ (name,seg,system)
dos.library1(252):124 RemSegment_ (seg)
dos.library1(252):125 CheckSignal_ (mask)
dos.library1(252):126 ReadArgs_ (arg_template,array,args)
dos.library1(252):127 FindArg_ (keyword,arg_template)
exec.library1(253):001 Supervisor_ (userFunction)
exec.library1(253):002 InitCode_ (startClass,version)
exec.library1(253):003 InitStruct_ (initTable,memory,size)
exec.library1(253):004 MakeLibrary_ (funcInit,structInit,libInit,dataSize,segList)
exec.library1(253):005 MakeFunctions_ (target,functionArray,funcDispBase)
exec.library1(253):006 FindResident_ (name)
exec.library1(253):007 InitResident_ (resident,segList)
exec.library1(253):008 Alert_ (alertNum)
exec.library1(253):009 Debug_ (flags)
exec.library1(253):010 Disable_ 
exec.library1(253):011 Enable_ 
exec.library1(253):012 Forbid_ 
exec.library1(253):013 Permit_ 
exec.library1(253):014 SetSR_ (newSR,mask)
exec.library1(253):015 SuperState_ 
exec.library1(253):016 UserState_ (sysStack)
exec.library1(253):017 SetIntVector_ (intNumber,interrupt)
exec.library1(253):018 AddIntServer_ (intNumber,interrupt)
exec.library1(253):019 RemIntServer_ (intNumber,interrupt)
exec.library1(253):020 Cause_ (interrupt)
exec.library1(253):021 Allocate_ (freeList,byteSize)
exec.library1(253):022 Deallocate_ (freeList,memoryBlock,byteSize)
exec.library1(253):023 AllocMem_ (byteSize,requirements)
exec.library1(253):024 AllocAbs_ (byteSize,location)
exec.library1(253):025 FreeMem_ (memoryBlock,byteSize)
exec.library1(253):026 AvailMem_ (requirements)
exec.library1(253):027 AllocEntry_ (entry)
exec.library1(253):028 FreeEntry_ (entry)
exec.library1(253):029 Insert_ (list,node,pred)
exec.library1(253):030 AddHead_ (list,node)
exec.library1(253):031 AddTail_ (list,node)
exec.library1(253):032 Remove_ (node)
exec.library1(253):033 RemHead_ (list)
exec.library1(253):034 RemTail_ (list)
exec.library1(253):035 Enqueue_ (list,node)
exec.library1(253):036 FindName_ (list,name)
exec.library1(253):037 AddTask_ (task,initPC,finalPC)
exec.library1(253):038 RemTask_ (task)
exec.library1(253):039 FindTask_ (name)
exec.library1(253):040 SetTaskPri_ (task,priority)
exec.library1(253):041 SetSignal_ (newSignals,signalSet)
exec.library1(253):042 SetExcept_ (newSignals,signalSet)
exec.library1(253):043 Wait_ (signalSet)
exec.library1(253):044 Signal_ (task,signalSet)
exec.library1(253):045 AllocSignal_ (signalNum)
exec.library1(253):046 FreeSignal_ (signalNum)
exec.library1(253):047 AllocTrap_ (trapNum)
exec.library1(253):048 FreeTrap_ (trapNum)
exec.library1(253):049 AddPort_ (port)
exec.library1(253):050 RemPort_ (port)
exec.library1(253):051 PutMsg_ (port,message)
exec.library1(253):052 GetMsg_ (port)
exec.library1(253):053 ReplyMsg_ (message)
exec.library1(253):054 WaitPort_ (port)
exec.library1(253):055 FindPort_ (name)
exec.library1(253):056 AddLibrary_ (library)
exec.library1(253):057 RemLibrary_ (library)
exec.library1(253):058 OldOpenLibrary_ (libName)
exec.library1(253):059 CloseLibrary_ (library)
exec.library1(253):060 SetFunction_ (library,funcOffset,newFunction)
exec.library1(253):061 SumLibrary_ (library)
exec.library1(253):062 AddDevice_ (device)
exec.library1(253):063 RemDevice_ (device)
exec.library1(253):064 OpenDevice_ (devName,unit,ioRequest,flags)
exec.library1(253):065 CloseDevice_ (ioRequest)
exec.library1(253):066 DoIO_ (ioRequest)
exec.library1(253):067 SendIO_ (ioRequest)
exec.library1(253):068 CheckIO_ (ioRequest)
exec.library1(253):069 WaitIO_ (ioRequest)
exec.library1(253):070 AbortIO_ (ioRequest)
exec.library1(253):071 AddResource_ (resource)
exec.library1(253):072 RemResource_ (resource)
exec.library1(253):073 OpenResource_ (resName)
exec.library1(253):074 RawDoFmt_ (formatString,dataStream,putChProc,putChData)
exec.library1(253):075 GetCC_ 
exec.library1(253):076 TypeOfMem_ (address)
exec.library1(253):077 Procure_ (sigSem,bidMsg)
exec.library1(253):078 Vacate_ (sigSem,bidMsg)
exec.library1(253):079 OpenLibrary_ (libName,version)
exec.library1(253):080 InitSemaphore_ (sigSem)
exec.library1(253):081 ObtainSemaphore_ (sigSem)
exec.library1(253):082 ReleaseSemaphore_ (sigSem)
exec.library1(253):083 AttemptSemaphore_ (sigSem)
exec.library1(253):084 ObtainSemaphoreList_ (sigSem)
exec.library1(253):085 ReleaseSemaphoreList_ (sigSem)
exec.library1(253):086 FindSemaphore_ (sigSem)
exec.library1(253):087 AddSemaphore_ (sigSem)
exec.library1(253):088 RemSemaphore_ (sigSem)
exec.library1(253):089 SumKickData_ 
exec.library1(253):090 AddMemList_ (size,attributes,pri,base,name)
exec.library1(253):091 CopyMem_ (source,dest,size)
exec.library1(253):092 CopyMemQuick_ (source,dest,size)
exec.library1(253):093 CacheClearU_ 
exec.library1(253):094 CacheClearE_ (address,length,caches)
exec.library1(253):095 CacheControl_ (cacheBits,cacheMask)
exec.library1(253):096 CreateIORequest_ (port,size)
exec.library1(253):097 DeleteIORequest_ (iorequest)
exec.library1(253):098 CreateMsgPort_ 
exec.library1(253):099 DeleteMsgPort_ (port)
exec.library1(253):100 ObtainSemaphoreShared_ (sigSem)
exec.library1(253):101 AllocVec_ (byteSize,requirements)
exec.library1(253):102 FreeVec_ (memoryBlock)
exec.library1(253):103 CreatePool_ (requirements,puddleSize,threshSize)
exec.library1(253):104 DeletePool_ (poolHeader)
exec.library1(253):105 AllocPooled_ (poolHeader,memSize)
exec.library1(253):106 FreePooled_ (poolHeader,memory,memSize)
exec.library1(253):107 AttemptSemaphoreShared_ (sigSem)
exec.library1(253):108 ColdReboot_ 
exec.library1(253):109 StackSwap_ (newStack)
exec.library1(253):110 ChildFree_ (tid)
exec.library1(253):111 ChildOrphan_ (tid)
exec.library1(253):112 ChildStatus_ (tid)
exec.library1(253):113 ChildWait_ (tid)
exec.library1(253):114 CachePreDMA_ (address,length,flags)
exec.library1(253):115 CachePostDMA_ (address,length,flags)
exec.library1(253):116 AddMemHandler_ (memhand)
exec.library1(253):117 RemMemHandler_ (memhand)
exec.library1(253):118 ObtainQuickVector_ (interruptCode)
graphics.library1(254):001 BltBitMap_ (srcBitMap,xSrc,ySrc,destBitMap,xDest,yDest,xSize,ySize,minterm,mask,tempA)
graphics.library1(254):002 BltTemplate_ (source,xSrc,srcMod,destRP,xDest,yDest,xSize,ySize)
graphics.library1(254):003 ClearEOL_ (rp)
graphics.library1(254):004 ClearScreen_ (rp)
graphics.library1(254):005 TextLength_ (rp,string,count)
graphics.library1(254):006 Text_ (rp,string,count)
graphics.library1(254):007 SetFont_ (rp,textFont)
graphics.library1(254):008 OpenFont_ (textAttr)
graphics.library1(254):009 CloseFont_ (textFont)
graphics.library1(254):010 AskSoftStyle_ (rp)
graphics.library1(254):011 SetSoftStyle_ (rp,style,enable)
graphics.library1(254):012 AddBob_ (bob,rp)
graphics.library1(254):013 AddVSprite_ (vSprite,rp)
graphics.library1(254):014 DoCollision_ (rp)
graphics.library1(254):015 DrawGList_ (rp,vp)
graphics.library1(254):016 InitGels_ (head,tail,gelsInfo)
graphics.library1(254):017 InitMasks_ (vSprite)
graphics.library1(254):018 RemIBob_ (bob,rp,vp)
graphics.library1(254):019 RemVSprite_ (vSprite)
graphics.library1(254):020 SetCollision_ (num,routine,gelsInfo)
graphics.library1(254):021 SortGList_ (rp)
graphics.library1(254):022 AddAnimOb_ (anOb,anKey,rp)
graphics.library1(254):023 Animate_ (anKey,rp)
graphics.library1(254):024 GetGBuffers_ (anOb,rp,flag)
graphics.library1(254):025 InitGMasks_ (anOb)
graphics.library1(254):026 DrawEllipse_ (rp,xCenter,yCenter,a,b)
graphics.library1(254):027 AreaEllipse_ (rp,xCenter,yCenter,a,b)
graphics.library1(254):028 LoadRGB4_ (vp,colors,count)
graphics.library1(254):029 InitRastPort_ (rp)
graphics.library1(254):030 InitVPort_ (vp)
graphics.library1(254):031 MrgCop_ (view)
graphics.library1(254):032 MakeVPort_ (view,vp)
graphics.library1(254):033 LoadView_ (view)
graphics.library1(254):034 WaitBlit_ 
graphics.library1(254):035 SetRast_ (rp,pen)
graphics.library1(254):036 Move_ (rp,x,y)
graphics.library1(254):037 Draw_ (rp,x,y)
graphics.library1(254):038 AreaMove_ (rp,x,y)
graphics.library1(254):039 AreaDraw_ (rp,x,y)
graphics.library1(254):040 AreaEnd_ (rp)
graphics.library1(254):041 WaitTOF_ 
graphics.library1(254):042 QBlit_ (blit)
graphics.library1(254):043 InitArea_ (areaInfo,vectorBuffer,maxVectors)
graphics.library1(254):044 SetRGB4_ (vp,index,red,green,blue)
graphics.library1(254):045 QBSBlit_ (blit)
graphics.library1(254):046 BltClear_ (memBlock,byteCount,flags)
graphics.library1(254):047 RectFill_ (rp,xMin,yMin,xMax,yMax)
graphics.library1(254):048 BltPattern_ (rp,mask,xMin,yMin,xMax,yMax,maskBPR)
graphics.library1(254):049 ReadPixel_ (rp,x,y)
graphics.library1(254):050 WritePixel_ (rp,x,y)
graphics.library1(254):051 Flood_ (rp,mode,x,y)
graphics.library1(254):052 PolyDraw_ (rp,count,polyTable)
graphics.library1(254):053 SetAPen_ (rp,pen)
graphics.library1(254):054 SetBPen_ (rp,pen)
graphics.library1(254):055 SetDrMd_ (rp,drawMode)
graphics.library1(254):056 InitView_ (view)
graphics.library1(254):057 CBump_ (copList)
graphics.library1(254):058 CMove_ (copList,destination,data)
graphics.library1(254):059 CWait_ (copList,v,h)
graphics.library1(254):060 VBeamPos_ 
graphics.library1(254):061 InitBitMap_ (bitMap,depth,width,height)
graphics.library1(254):062 ScrollRaster_ (rp,dx,dy,xMin,yMin,xMax,yMax)
graphics.library1(254):063 WaitBOVP_ (vp)
graphics.library1(254):064 GetSprite_ (sprite,num)
graphics.library1(254):065 FreeSprite_ (num)
graphics.library1(254):066 ChangeSprite_ (vp,sprite,newData)
graphics.library1(254):067 MoveSprite_ (vp,sprite,x,y)
graphics.library1(254):068 LockLayerRom_ (layer)
graphics.library1(254):069 UnlockLayerRom_ (layer)
graphics.library1(254):070 SyncSBitMap_ (layer)
graphics.library1(254):071 CopySBitMap_ (layer)
graphics.library1(254):072 OwnBlitter_ 
graphics.library1(254):073 DisownBlitter_ 
graphics.library1(254):074 InitTmpRas_ (tmpRas,buffer,size)
graphics.library1(254):075 AskFont_ (rp,textAttr)
graphics.library1(254):076 AddFont_ (textFont)
graphics.library1(254):077 RemFont_ (textFont)
graphics.library1(254):078 AllocRaster_ (width,height)
graphics.library1(254):079 FreeRaster_ (p,width,height)
graphics.library1(254):080 AndRectRegion_ (region,rectangle)
graphics.library1(254):081 OrRectRegion_ (region,rectangle)
graphics.library1(254):082 NewRegion_ 
graphics.library1(254):083 ClearRectRegion_ (region,rectangle)
graphics.library1(254):084 ClearRegion_ (region)
graphics.library1(254):085 DisposeRegion_ (region)
graphics.library1(254):086 FreeVPortCopLists_ (vp)
graphics.library1(254):087 FreeCopList_ (copList)
graphics.library1(254):088 ClipBlit_ (srcRP,xSrc,ySrc,destRP,xDest,yDest,xSize,ySize,minterm)
graphics.library1(254):089 XorRectRegion_ (region,rectangle)
graphics.library1(254):090 FreeCprList_ (cprList)
graphics.library1(254):091 GetColorMap_ (entries)
graphics.library1(254):092 FreeColorMap_ (colorMap)
graphics.library1(254):093 GetRGB4_ (colorMap,entry)
graphics.library1(254):094 ScrollVPort_ (vp)
graphics.library1(254):095 UCopperListInit_ (uCopList,n)
graphics.library1(254):096 FreeGBuffers_ (anOb,rp,flag)
graphics.library1(254):097 BltBitMapRastPort_ (srcBitMap,xSrc,ySrc,destRP,xDest,yDest,xSize,ySize,minterm)
graphics.library1(254):098 OrRegionRegion_ (srcRegion,destRegion)
graphics.library1(254):099 XorRegionRegion_ (srcRegion,destRegion)
graphics.library1(254):100 AndRegionRegion_ (srcRegion,destRegion)
graphics.library1(254):101 SetRGB4CM_ (colorMap,index,red,green,blue)
graphics.library1(254):102 BltMaskBitMapRastPort_ (srcBitMap,xSrc,ySrc,destRP,xDest,yDest,xSize,ySize,minterm,bltMask)
graphics.library1(254):103 AttemptLockLayerRom_ (layer)
graphics.library1(254):104 GfxNew_ (gfxNodeType)
graphics.library1(254):105 GfxFree_ (gfxNodePtr)
graphics.library1(254):106 GfxAssociate_ (associateNode,gfxNodePtr)
graphics.library1(254):107 BitMapScale_ (bitScaleArgs)
graphics.library1(254):108 ScalerDiv_ (factor,numerator,denominator)
graphics.library1(254):109 TextExtent_ (rp,string,count,textExtent)
graphics.library1(254):110 TextFit_ (rp,string,strLen,textExtent,constrainingExtent,strDirection,constrainingBitWidth,constrainingBitHeight)
graphics.library1(254):111 GfxLookUp_ (associateNode)
graphics.library1(254):112 VideoControl_ (colorMap,tagarray)
graphics.library1(254):113 OpenMonitor_ (monitorName,displayID)
graphics.library1(254):114 CloseMonitor_ (monitorSpec)
graphics.library1(254):115 FindDisplayInfo_ (displayID)
graphics.library1(254):116 NextDisplayInfo_ (displayID)
graphics.library1(254):117 GetDisplayInfoData_ (handle,buf,size,tagID,displayID)
graphics.library1(254):118 FontExtent_ (font,fontExtent)
graphics.library1(254):119 ReadPixelLine8_ (rp,xstart,ystart,width,array,tempRP)
graphics.library1(254):120 WritePixelLine8_ (rp,xstart,ystart,width,array,tempRP)
graphics.library1(254):121 ReadPixelArray8_ (rp,xstart,ystart,xstop,ystop,array,temprp)
graphics.library1(254):122 WritePixelArray8_ (rp,xstart,ystart,xstop,ystop,array,temprp)
graphics.library1(254):123 GetVPModeID_ (vp)
graphics.library1(254):124 ModeNotAvailable_ (modeID)
graphics.library1(254):125 WeighTAMatch_ (reqTextAttr,targetTextAttr,targetTags)
graphics.library1(254):126 EraseRect_ (rp,xMin,yMin,xMax,yMax)
graphics.library1(254):127 ExtendFont_ (font,fontTags)
intuition.library1(255):001 OpenIntuition_ 
intuition.library1(255):002 Intuition_ (iEvent)
intuition.library1(255):003 AddGadget_ (window,gadget,position)
intuition.library1(255):004 ClearDMRequest_ (window)
intuition.library1(255):005 ClearMenuStrip_ (window)
intuition.library1(255):006 ClearPointer_ (window)
intuition.library1(255):007 CloseScreen_ (screen)
intuition.library1(255):008 CloseWindow_ (window)
intuition.library1(255):009 CloseWorkBench_ 
intuition.library1(255):010 CurrentTime_ (seconds,micros)
intuition.library1(255):011 DisplayAlert_ (alertNumber,string,height)
intuition.library1(255):012 DisplayBeep_ (screen)
intuition.library1(255):013 DoubleClick_ (sSeconds,sMicros,cSeconds,cMicros)
intuition.library1(255):014 DrawBorder_ (rp,border,leftOffset,topOffset)
intuition.library1(255):015 DrawImage_ (rp,image,leftOffset,topOffset)
intuition.library1(255):016 EndRequest_ (requester,window)
intuition.library1(255):017 GetDefPrefs_ (preferences,size)
intuition.library1(255):018 GetPrefs_ (preferences,size)
intuition.library1(255):019 InitRequester_ (requester)
intuition.library1(255):020 ItemAddress_ (menuStrip,menuNumber)
intuition.library1(255):021 ModifyIDCMP_ (window,flags)
intuition.library1(255):022 ModifyProp_ (gadget,window,requester,flags,horizPot,vertPot,horizBody,vertBody)
intuition.library1(255):023 MoveScreen_ (screen,dx,dy)
intuition.library1(255):024 MoveWindow_ (window,dx,dy)
intuition.library1(255):025 OffGadget_ (gadget,window,requester)
intuition.library1(255):026 OffMenu_ (window,menuNumber)
intuition.library1(255):027 OnGadget_ (gadget,window,requester)
intuition.library1(255):028 OnMenu_ (window,menuNumber)
intuition.library1(255):029 OpenScreen_ (newScreen)
intuition.library1(255):030 OpenWindow_ (newWindow)
intuition.library1(255):031 OpenWorkBench_ 
intuition.library1(255):032 PrintIText_ (rp,iText,left,top)
intuition.library1(255):033 RefreshGadgets_ (gadgets,window,requester)
intuition.library1(255):034 RemoveGadget_ (window,gadget)
intuition.library1(255):035 ReportMouse_ (flag,window)
intuition.library1(255):036 Request_ (requester,window)
intuition.library1(255):037 ScreenToBack_ (screen)
intuition.library1(255):038 ScreenToFront_ (screen)
intuition.library1(255):039 SetDMRequest_ (window,requester)
intuition.library1(255):040 SetMenuStrip_ (window,menu)
intuition.library1(255):041 SetPointer_ (window,pointer,height,width,xOffset,yOffset)
intuition.library1(255):042 SetWindowTitles_ (window,windowTitle,screenTitle)
intuition.library1(255):043 ShowTitle_ (screen,showIt)
intuition.library1(255):044 SizeWindow_ (window,dx,dy)
intuition.library1(255):045 ViewAddress_ 
intuition.library1(255):046 ViewPortAddress_ (window)
intuition.library1(255):047 WindowToBack_ (window)
intuition.library1(255):048 WindowToFront_ (window)
intuition.library1(255):049 WindowLimits_ (window,widthMin,heightMin,widthMax,heightMax)
intuition.library1(255):050 SetPrefs_ (preferences,size,inform)
intuition.library1(255):051 IntuiTextLength_ (iText)
intuition.library1(255):052 WBenchToBack_ 
intuition.library1(255):053 WBenchToFront_ 
intuition.library1(255):054 AutoRequest_ (window,body,posText,negText,pFlag,nFlag,width,height)
intuition.library1(255):055 BeginRefresh_ (window)
intuition.library1(255):056 BuildSysRequest_ (window,body,posText,negText,flags,width,height)
intuition.library1(255):057 EndRefresh_ (window,complete)
intuition.library1(255):058 FreeSysRequest_ (window)
intuition.library1(255):059 MakeScreen_ (screen)
intuition.library1(255):060 RemakeDisplay_ 
intuition.library1(255):061 RethinkDisplay_ 
intuition.library1(255):062 AllocRemember_ (rememberKey,size,flags)
intuition.library1(255):063 AlohaWorkbench_ (wbport)
intuition.library1(255):064 FreeRemember_ (rememberKey,reallyForget)
intuition.library1(255):065 LockIBase_ (dontknow)
intuition.library1(255):066 UnlockIBase_ (ibLock)
intuition.library1(255):067 GetScreenData_ (buffer,size,type,screen)
intuition.library1(255):068 RefreshGList_ (gadgets,window,requester,numGad)
intuition.library1(255):069 AddGList_ (window,gadget,position,numGad,requester)
intuition.library1(255):070 RemoveGList_ (remPtr,gadget,numGad)
intuition.library1(255):071 ActivateWindow_ (window)
intuition.library1(255):072 RefreshWindowFrame_ (window)
intuition.library1(255):073 ActivateGadget_ (gadgets,window,requester)
intuition.library1(255):074 NewModifyProp_ (gadget,window,requester,flags,horizPot,vertPot,horizBody,vertBody,numGad)
intuition.library1(255):075 QueryOverscan_ (displayID,rect,oScanType)
intuition.library1(255):076 MoveWindowInFrontOf_ (window,behindWindow)
intuition.library1(255):077 ChangeWindowBox_ (window,left,top,width,height)
intuition.library1(255):078 SetEditHook_ (hook)
intuition.library1(255):079 SetMouseQueue_ (window,queueLength)
intuition.library1(255):080 ZipWindow_ (window)
intuition.library1(255):081 LockPubScreen_ (name)
intuition.library1(255):082 UnlockPubScreen_ (name,screen)
intuition.library1(255):083 LockPubScreenList_ 
intuition.library1(255):084 UnlockPubScreenList_ 
intuition.library1(255):085 NextPubScreen_ (screen,namebuf)
intuition.library1(255):086 SetDefaultPubScreen_ (name)
intuition.library1(255):087 SetPubScreenModes_ (modes)
intuition.library1(255):088 PubScreenStatus_ (screen,statusFlags)
intuition.library1(255):089 ObtainGIRPort_ (gInfo)
intuition.library1(255):090 ReleaseGIRPort_ (rp)
intuition.library1(255):091 GadgetMouse_ (gadget,gInfo,mousePoint)
intuition.library1(255):092 GetDefaultPubScreen_ (nameBuffer)
intuition.library1(255):093 EasyRequestArgs_ (window,easyStruct,idcmpPtr,args)
intuition.library1(255):094 BuildEasyRequestArgs_ (window,easyStruct,idcmp,args)
intuition.library1(255):095 SysReqHandler_ (window,idcmpPtr,waitInput)
intuition.library1(255):096 OpenWindowTagList_ (newWindow,tagList)
intuition.library1(255):097 OpenScreenTagList_ (newScreen,tagList)
intuition.library1(255):098 DrawImageState_ (rp,image,leftOffset,topOffset,state,drawInfo)
intuition.library1(255):099 PointInImage_ (point,image)
intuition.library1(255):100 EraseImage_ (rp,image,leftOffset,topOffset)
intuition.library1(255):101 NewObjectA_ (classPtr,classID,tagList)
intuition.library1(255):102 DisposeObject_ (object)
intuition.library1(255):103 SetAttrsA_ (object,tagList)
intuition.library1(255):104 GetAttr_ (attrID,object,storagePtr)
intuition.library1(255):105 SetGadgetAttrsA_ (gadget,window,requester,tagList)
intuition.library1(255):106 NextObject_ (objectPtrPtr)
intuition.library1(255):107 MakeClass_ (classID,superClassID,superClassPtr,instanceSize,flags)
intuition.library1(255):108 AddClass_ (classPtr)
intuition.library1(255):109 GetScreenDrawInfo_ (screen)
intuition.library1(255):110 FreeScreenDrawInfo_ (screen,drawInfo)
intuition.library1(255):111 ResetMenuStrip_ (window,menu)
intuition.library1(255):112 RemoveClass_ (classPtr)
intuition.library1(255):113 FreeClass_ (classPtr)
intuition.library1(255):114 AllocScreenBuffer_ (sc,bm,flags)
intuition.library1(255):115 FreeScreenBuffer_ (sc,sb)
intuition.library1(255):116 ChangeScreenBuffer_ (sc,sb)
intuition.library1(255):117 ScreenDepth_ (screen,flags,reserved)
intuition.library1(255):118 ScreenPosition_ (screen,flags,x1,y1,x2,y2)
intuition.library1(255):119 ScrollWindowRaster_ (win,dx,dy,xMin,yMin,xMax,yMax)
intuition.library1(255):120 LendMenus_ (fromwindow,towindow)
intuition.library1(255):121 DoGadgetMethodA_ (gad,win,req,message)
intuition.library1(255):122 SetWindowPointerA_ (win,taglist)
intuition.library1(255):123 TimedDisplayAlert_ (alertNumber,string,height,time)
intuition.library1(255):124 HelpControl_ (win,flags)
