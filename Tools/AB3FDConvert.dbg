00000008 <AB3FDConvert.ab3@0> 
00000030 <AB3FDConvert.ab3@45> v$="$VER: NewFDConvert v1.2 (02/12/2014) ACID/JLB/DM"
00000038 <AB3FDConvert.ab3@49> WBenchToFront_
00000054 <AB3FDConvert.ab3@50> FindScreen 0        ;grab the WB screen
0000006A <AB3FDConvert.ab3@52> MaxLen p$    = 192
00000080 <AB3FDConvert.ab3@53> MaxLen f$    = 192
00000096 <AB3FDConvert.ab3@54> MaxLen fdpa$ = 192
000000AC <AB3FDConvert.ab3@55> MaxLen lib$  = 192  ;for file requesters
000000D4 <AB3FDConvert.ab3@57> lib$="LIBS:"        ;default path to actual libraries
000000F8 <AB3FDConvert.ab3@59> Dim usedlibs.w(255) ;is this lib number in use?
0000010C <AB3FDConvert.ab3@60> usedlibs(202) = 1   ; reserved for quicklib
00000120 <AB3FDConvert.ab3@61> usedlibs(203) = 1   ; reserved for ppaintlib
00000134 <AB3FDConvert.ab3@62> usedlibs(217) = 1   ; mark the AB3 libs 217-219 as reserved
00000148 <AB3FDConvert.ab3@63> usedlibs(218) = 1
0000015C <AB3FDConvert.ab3@64> usedlibs(219) = 1
00000180 <AB3FDConvert.ab3@65> bar$ = Chr$(10)     ;for the RT requesters
000001A8 <AB3FDConvert.ab3@67> cq$ = "Continue|  Quit  "
000001CC <AB3FDConvert.ab3@69> Dim d$(3)                               ;the directories to be scanned  2014 changed to use 3 entrys
000001FE <AB3FDConvert.ab3@70> d$(1) = "BlitzLibs:Userlibs/AmigaLibs/" ;for Blitz libraries
00000230 <AB3FDConvert.ab3@72> d$(2) = "Blitzlibs:UserLibs/"           ;and "Blitzlibs:" assign!
00000262 <AB3FDConvert.ab3@73> d$(3) = "Blitzlibs:UserLibs/userlibs/"  ;and "Blitzlibs:" assign!
00000278 <AB3FDConvert.ab3@78> Function.s MakeFreeList{}
0000029C <AB3FDConvert.ab3@81>   Format "000"
000002CC <AB3FDConvert.ab3@82>   For i.w = 1 To 255
000002EC <AB3FDConvert.ab3@83>     If usedlibs(i) = 0         ;ah, a free library number!
0000035A <AB3FDConvert.ab3@84>       ret$ = ret$+Str$(i)+" "
0000036A <AB3FDConvert.ab3@85>       curlen.w+4
0000037E <AB3FDConvert.ab3@86>       If curlen > 60
000003D0 <AB3FDConvert.ab3@87>         ret$+bar$
000003D8 <AB3FDConvert.ab3@88>         curlen = 0
000003E6 <AB3FDConvert.ab3@91>   Next
0000040A <AB3FDConvert.ab3@92>   Format ""
00000434 <AB3FDConvert.ab3@93>   Function Return ret$
0000044C <AB3FDConvert.ab3@94> End Function
00000462 <AB3FDConvert.ab3@97> Statement align{}
00000498 <AB3FDConvert.ab3@100>   l.q = Len(co$)
00000532 <AB3FDConvert.ab3@101>   If l/2 <> Int(l/2) Then co$+Chr$(0)
00000544 <AB3FDConvert.ab3@102> End Statement
0000055E <AB3FDConvert.ab3@105> Statement fillin{src.l} ;src=source to change
0000063E <AB3FDConvert.ab3@108>   co$ = Left$(co$,src)+Mkl$(Len(co$))+Mid$(co$,src+5)
00000650 <AB3FDConvert.ab3@109> End Statement
00000666 <AB3FDConvert.ab3@112> Statement dir{}                     ;scans directories for free library
0000066E <AB3FDConvert.ab3@115>   libnr.w = 0
0000069E <AB3FDConvert.ab3@116>   For d.b = 1 To 4
000006DE <AB3FDConvert.ab3@117>     dev$ = d$(d)
00000700 <AB3FDConvert.ab3@119>     lock.l = Lock_(&dev$,-2)
0000070A <AB3FDConvert.ab3@120>     If lock
00000718 <AB3FDConvert.ab3@121>       WColour 2,0
00000784 <AB3FDConvert.ab3@122>       NPrint " Checking ",dev$
00000792 <AB3FDConvert.ab3@123>       WPrintScroll
000007A0 <AB3FDConvert.ab3@124>       WColour 1,0
000007C0 <AB3FDConvert.ab3@125>       infoadr.l = AllocMem_(260,0)
000007CA <AB3FDConvert.ab3@126>       If infoadr
000007E6 <AB3FDConvert.ab3@127>         ok.b = Examine_(lock,infoadr)
00000802 <AB3FDConvert.ab3@129>           ok = ExNext_(lock,infoadr)
000008B0 <AB3FDConvert.ab3@130>           If ok AND Peek.l(infoadr+4) = -3 AND Instr(UCase$(Peek$(infoadr+8)),".INFO") = 0
00000908 <AB3FDConvert.ab3@131>               rfile$ = dev$+Peek$(infoadr+8)
00000928 <AB3FDConvert.ab3@132>               fh.l = Open_(&rfile$,1005)
00000932 <AB3FDConvert.ab3@133>               If fh
00000956 <AB3FDConvert.ab3@134>                 Seek_ fh,36,#OFFSET_CURRENT ;36 & 86
0000097A <AB3FDConvert.ab3@135>                 Read_ fh,&libnr,2
0000098E <AB3FDConvert.ab3@136>                 usedlibs(libnr) = 1
0000099E <AB3FDConvert.ab3@137>                 Close_ fh
000009B4 <AB3FDConvert.ab3@140>         Until ok = 0
000009CE <AB3FDConvert.ab3@141>         FreeMem_ infoadr,260
000009DE <AB3FDConvert.ab3@143>       UnLock_(lock)
000009E2 <AB3FDConvert.ab3@144>     Else
000009FA <AB3FDConvert.ab3@145>       BeepScreen 0
00000A08 <AB3FDConvert.ab3@146>       WColour 3,0
00000A74 <AB3FDConvert.ab3@147>       NPrint " Can't locate ",dev$
00000A82 <AB3FDConvert.ab3@148>       WPrintScroll
00000A90 <AB3FDConvert.ab3@149>       WColour 1,0
00000A9E <AB3FDConvert.ab3@151>   Next d
00000AD6 <AB3FDConvert.ab3@152>   NPrint" "
00000AE4 <AB3FDConvert.ab3@153>   WPrintScroll
00000AF6 <AB3FDConvert.ab3@154> End Statement
00000B20 <AB3FDConvert.ab3@157> Function$ ReadTtype{TT$}       ;read the tooltype if found
00000B58 <AB3FDConvert.ab3@159>   If FindToolType(TT$)
00000BA4 <AB3FDConvert.ab3@160>     tl$ = FindToolValue(TT$)
00000BA8 <AB3FDConvert.ab3@161>   Else
00000BD0 <AB3FDConvert.ab3@162>     tl$ = "0"
00000BFA <AB3FDConvert.ab3@164>   Function Return tl$
00000C18 <AB3FDConvert.ab3@165> End Function
00000C32 <AB3FDConvert.ab3@170> *SC.Screen       = Peek.l(Addr Screen(0))         ; get a pointer to screen
00000C40 <AB3FDConvert.ab3@171> *SCFONT.TextAttr = *SC.Screen\Font                ; and to the screen's font
00000C4E <AB3FDConvert.ab3@172> HEIGHT_WBFONT.b  = (*SCFONT.TextAttr\ta_YSize)    ; get font height
00000C78 <AB3FDConvert.ab3@173> fname$           = Peek$(*SCFONT.TextAttr\ta_Name); and font name
00000CC8 <AB3FDConvert.ab3@175> LoadFont 0,fname$,HEIGHT_WBFONT         ; load font name,font height
00000CD0 <AB3FDConvert.ab3@177> ww.w = 520                              ; width of window
00000CD8 <AB3FDConvert.ab3@178> wh.w = 160                              ; height of window
00000CFC <AB3FDConvert.ab3@179> wx.w = ScreenWidth/2-ww/2               ; centre...
00000D12 <AB3FDConvert.ab3@181> wy    = HEIGHT_WBFONT+5                 ;put it just below WB title bar
00000D8E <AB3FDConvert.ab3@183> If Window (0,wx,wy,ww,wh,$400|$1|$4|$20," NewFDConvert",1,0)=0
00000DE8 <AB3FDConvert.ab3@184>   dummy.b=RTEZRequest ("NewFDConvert","Failed to open window!","END")
00000DEE <AB3FDConvert.ab3@185>   End                                 ; quit if window can't open
00000E18 <AB3FDConvert.ab3@189> If GetIconObject("NewFdConvert")
00000E64 <AB3FDConvert.ab3@190>   cmd$   = ReadTtype{"COMMAND"}       ;the command
00000EB0 <AB3FDConvert.ab3@191>   pth$   = ReadTtype{"PATH"}          ;path to the command
00000EFC <AB3FDConvert.ab3@192>   param$ = ReadTtype{"PARAM"}         ;optional parameters
00000F38 <AB3FDConvert.ab3@195> If cmd$ = "0"
00000F6C <AB3FDConvert.ab3@196>   btn$ = cq$
00000F70 <AB3FDConvert.ab3@197> Else
00000FE0 <AB3FDConvert.ab3@198>   If pth$ <> "0" Then exe$ = pth$
00001032 <AB3FDConvert.ab3@199>   exe$+cmd$
000010D2 <AB3FDConvert.ab3@200>   If param$ <> "0" Then exe$+" "+param$
0000112A <AB3FDConvert.ab3@201>   btn$ = "Continue|"+cmd$+"|  Quit  "
00001176 <AB3FDConvert.ab3@204> dp$ = ReadTtype{"FD_PATH"}          ;set default path to fd files
000011B2 <AB3FDConvert.ab3@205> If dp$ <> "0"
000011E6 <AB3FDConvert.ab3@206>   fdpa$ = dp$
000011EA <AB3FDConvert.ab3@207> Else
00001212 <AB3FDConvert.ab3@208>   fdpa$ = "RAM:"
0000121C <AB3FDConvert.ab3@212> CatchDosErrs
00001254 <AB3FDConvert.ab3@214> NPrint " **       NewFDConvert        **"
00001262 <AB3FDConvert.ab3@215> WPrintScroll
0000129A <AB3FDConvert.ab3@216> NPrint " "
000012A8 <AB3FDConvert.ab3@217> WPrintScroll
000012E0 <AB3FDConvert.ab3@218> NPrint " v1.0         by James L Boyd"
000012EE <AB3FDConvert.ab3@219> WPrintScroll
00001326 <AB3FDConvert.ab3@220> NPrint " v1.1 mods    by Curt Esser"
00001334 <AB3FDConvert.ab3@221> WPrintScroll
0000136C <AB3FDConvert.ab3@222> NPrint "      - based on:"
0000137A <AB3FDConvert.ab3@223> WPrintScroll
000013B2 <AB3FDConvert.ab3@224> NPrint " FDConv       by Mark Sibly"
000013C0 <AB3FDConvert.ab3@225> WPrintScroll
000013F8 <AB3FDConvert.ab3@226> NPrint " FDConv v2.0  by Andre Bergmann"
00001406 <AB3FDConvert.ab3@227> WPrintScroll
0000143E <AB3FDConvert.ab3@229> NPrint " "
0000144C <AB3FDConvert.ab3@230> WPrintScroll
00001474 <AB3FDConvert.ab3@239>   f$ = ""
000014DC <AB3FDConvert.ab3@240>   fd$ = ASLFileRequest$("Select .fd file",fdpa$,f$,"#?.fd")
00001552 <AB3FDConvert.ab3@241>   If fd$ = "" OR f$ = "" Then End
0000157A <AB3FDConvert.ab3@242>   f$ = ""
000015A2 <AB3FDConvert.ab3@243>   dest$ = "blitz3:Userlibs/"
000015BA <AB3FDConvert.ab3@245>   Activate 0
0000164A <AB3FDConvert.ab3@247>   Dim n$(1000),h$(1000),p$(1000),o.w(1000)
00001692 <AB3FDConvert.ab3@248>   Dim l$(10),ln(10) ;max libs split-up
000016DA <AB3FDConvert.ab3@250>   If ReadFile(0,fd$)
00001712 <AB3FDConvert.ab3@251>     NPrint " Examining FD File..."
00001720 <AB3FDConvert.ab3@252>     WPrintScroll
00001768 <AB3FDConvert.ab3@253>     FileInput 0 : Gosub sussfd : CloseFile 0 : Use Window 0
0000176E <AB3FDConvert.ab3@257>     Gosub makelib
00001784 <AB3FDConvert.ab3@259>     If userabort.b = 0
000017FA <AB3FDConvert.ab3@260>       rq$ = li_$+" saved!"+bar$+"Don't forget to restart Amiblitz"
0000186C <AB3FDConvert.ab3@261>       answer.b = RTEZRequest (" Library done!",rq$,btn$)
00001870 <AB3FDConvert.ab3@262>     Else
00001898 <AB3FDConvert.ab3@263>       rq$ = "Library conversion aborted"
000018A0 <AB3FDConvert.ab3@264>       userabort = 0
00001912 <AB3FDConvert.ab3@265>       answer = RTEZRequest (" NewFdConvert",rq$,cq$)
00001928 <AB3FDConvert.ab3@268>     If answer = 2                    ;run "button" command
0000196E <AB3FDConvert.ab3@269>       Execute_ exe$,0,0
000019D4 <AB3FDConvert.ab3@270>       answer = RTEZRequest (" NewFdConvert","-- Ready --",cq$)
000019D8 <AB3FDConvert.ab3@272>   Else
00001A3E <AB3FDConvert.ab3@273>     answer = RTEZRequest("ERROR","Couldn't read .fd file",cq$)
00001A54 <AB3FDConvert.ab3@276>   If answer <> 0
00001A6A <AB3FDConvert.ab3@277>     Use Window 0
00001A9E <AB3FDConvert.ab3@278>     For i = 1 To 10
00001AD6 <AB3FDConvert.ab3@279>       NPrint " "
00001AE4 <AB3FDConvert.ab3@280>       WPrintScroll
00001AF4 <AB3FDConvert.ab3@281>     Next
00001B02 <AB3FDConvert.ab3@282>     WColour 2,0
00001B3A <AB3FDConvert.ab3@283>     NPrint " -------  READY  --------"
00001B6E <AB3FDConvert.ab3@284>     For i = 1 To 3
00001BA6 <AB3FDConvert.ab3@285>       NPrint " "
00001BB4 <AB3FDConvert.ab3@286>       WPrintScroll
00001BC4 <AB3FDConvert.ab3@287>     Next
00001BD2 <AB3FDConvert.ab3@288>     WColour 1,0
00001BE8 <AB3FDConvert.ab3@291> Until answer = 0   ;quit selected on one of the requesters
00001BEE <AB3FDConvert.ab3@293> End
00001C0E <AB3FDConvert.ab3@298> ll.l = OpenLibrary_(&li_$,0)
00001C18 <AB3FDConvert.ab3@299> If ll
00001C34 <AB3FDConvert.ab3@300>   CloseLibrary_ ll : islib = -1
00001C38 <AB3FDConvert.ab3@301> Else
00001C4E <AB3FDConvert.ab3@302>   ll.l = OpenResource_(&li_$)
00001C58 <AB3FDConvert.ab3@303>   If ll
00001C62 <AB3FDConvert.ab3@304>     islib = 0
00001C66 <AB3FDConvert.ab3@305>   Else
00001CCE <AB3FDConvert.ab3@306>     li_$ = ASLFileRequest$("Library name",lib$,f$,"#?.library")
00001D02 <AB3FDConvert.ab3@307>     li_$ = f$
00001D3E <AB3FDConvert.ab3@308>     If li_$ = ""
00001D46 <AB3FDConvert.ab3@309>       userabort = 1
00001D48 <AB3FDConvert.ab3@310>       Return
00001D4E <AB3FDConvert.ab3@312>     Goto here0
00001D72 <AB3FDConvert.ab3@317> nl = (n-1)/127+1  ;how many libs to make
00001DB4 <AB3FDConvert.ab3@318> Print " Library will require ",nl
00001DEC <AB3FDConvert.ab3@319> Print " Amigalibs file"
00001E3A <AB3FDConvert.ab3@320> If nl > 1 Then Print "s"
00001E72 <AB3FDConvert.ab3@321> NPrint "..."
00001E80 <AB3FDConvert.ab3@322> WPrintScroll
00001EB8 <AB3FDConvert.ab3@323> NPrint " "
00001EC6 <AB3FDConvert.ab3@324> WPrintScroll
00001EF8 <AB3FDConvert.ab3@326> For k = 1 To nl   ;this bit determines the library numbers...
00001F7E <AB3FDConvert.ab3@328>   fh.l = Open_(dest$+li_$+Str$(k),#MODE_OLDFILE)
00001F88 <AB3FDConvert.ab3@329>   If fh
00001FAC <AB3FDConvert.ab3@330>     Seek_ fh,36,#OFFSET_CURRENT ;36 & 86
00001FD0 <AB3FDConvert.ab3@331>     Read_ fh,&libnr.w,2
00001FE0 <AB3FDConvert.ab3@332>     Close_ fh
00001FF6 <AB3FDConvert.ab3@334>     If k = 1       ;only do this if first one of >1 part library!
0000203C <AB3FDConvert.ab3@336>       rq$ = "WARNING - Library already exists!"+bar$
000020E6 <AB3FDConvert.ab3@337>       rq$ = rq$+dest$+li_$+" id#:"+Str$(libnr)
0000214C <AB3FDConvert.ab3@338>       answer.b = RTEZRequest ("NewFDConvert",rq$,"OverWrite|Cancel")
00002162 <AB3FDConvert.ab3@339>       If answer = 0
00002166 <AB3FDConvert.ab3@341>         Pop For
0000216E <AB3FDConvert.ab3@342>         userabort.b = 1
00002170 <AB3FDConvert.ab3@343>         Return
000021E8 <AB3FDConvert.ab3@348>     DeleteFile_(dest$+li_$+Str$(k))
000021F0 <AB3FDConvert.ab3@349>     didhave.w = libnr
00002204 <AB3FDConvert.ab3@350>     usedlibs(didhave) = 0
00002212 <AB3FDConvert.ab3@351>     WColour 3,0
000022CA <AB3FDConvert.ab3@352>     NPrint " Existing ",li_$+Str$(k)," deleted!"
000022D8 <AB3FDConvert.ab3@353>     WPrintScroll
00002310 <AB3FDConvert.ab3@354>     NPrint " "
0000231E <AB3FDConvert.ab3@355>     WPrintScroll
0000232C <AB3FDConvert.ab3@356>     WColour 1,0
00002336 <AB3FDConvert.ab3@358>   If didhave              ;if an overwrite, always use same lib #(s)
0000234A <AB3FDConvert.ab3@359>     ln(k) = didhave
00002352 <AB3FDConvert.ab3@360>     didhave = 0
00002356 <AB3FDConvert.ab3@361>   Else
0000235C <AB3FDConvert.ab3@362>     dir{}                 ;check numbers of existing libraries
00002396 <AB3FDConvert.ab3@363>     For i = 255 To 1 Step -1
000023B4 <AB3FDConvert.ab3@364>       If usedlibs(i) = 0
000023BC <AB3FDConvert.ab3@365>         bestlibnr = i
000023C6 <AB3FDConvert.ab3@366>         i = 1
000023D6 <AB3FDConvert.ab3@368>     Next
000023FE <AB3FDConvert.ab3@369>     error$ = ""
00002486 <AB3FDConvert.ab3@371>     r$ = error$+"Available Library numbers:"+bar$+ MakeFreeList{}
000024EA <AB3FDConvert.ab3@372>     r$+bar$+"Enter new library number:"
0000254E <AB3FDConvert.ab3@373>     ln(k) = RTEZGetLongRange("NewFDConvert",r$,1,bestlibnr,bestlibnr)
0000256E <AB3FDConvert.ab3@374>     If ln(k) = 0
00002574 <AB3FDConvert.ab3@375>       End
000025B0 <AB3FDConvert.ab3@377>     If ln(k) > 255 OR ln(k) < 1
000025F6 <AB3FDConvert.ab3@378>       error$ = "ERROR: Out of range!"+bar$
000025FC <AB3FDConvert.ab3@379>       Goto here
00002624 <AB3FDConvert.ab3@381>     If usedlibs(ln(k))=1
000026AE <AB3FDConvert.ab3@382>       error$ = "ERROR: Library number "+Str$(ln(k))+" already used!"+bar$
000026B4 <AB3FDConvert.ab3@383>       Goto here
000026C4 <AB3FDConvert.ab3@386> Next
000026D8 <AB3FDConvert.ab3@388> ln   = ln(1)
0000270C <AB3FDConvert.ab3@389> li2$ = li_$
000027C0 <AB3FDConvert.ab3@390> .clearup  : k = Instr(li2$,":") : If k Then li2$ = Mid$(li2$,k+1) : Goto clearup
00002874 <AB3FDConvert.ab3@391> .clearup2 : k = Instr(li2$,"/") : If k Then li2$ = Mid$(li2$,k+1) : Goto clearup
00002888 <AB3FDConvert.ab3@393> nn = 127 : li_ = 0
000028BA <AB3FDConvert.ab3@395> For tk = 1 To n
000028CA <AB3FDConvert.ab3@396>   nn+1
000028E0 <AB3FDConvert.ab3@397>   If nn = 128
000028F0 <AB3FDConvert.ab3@398>     If li_ Then Gosub libdone
00002900 <AB3FDConvert.ab3@399>     li_+1
00002998 <AB3FDConvert.ab3@400>     If WriteFile(0,dest$+li2$+Str$(li_)) = 0
00002A26 <AB3FDConvert.ab3@401>       dummy = RTEZRequest("Error creating File",li_$+Str$(li_),"DAMN!")
00002A2A <AB3FDConvert.ab3@402>       Pop For
00002A2C <AB3FDConvert.ab3@403>       Return
00002AAE <AB3FDConvert.ab3@406>     co$ = Mkl$(0)+Mki$(ln(li_))+String$(Chr$(0),20)
00002B68 <AB3FDConvert.ab3@407>     If li_ = 1 Then co$+Mki$(1) Else co$+Mki$(0)
00002BD2 <AB3FDConvert.ab3@408>     co$+String$(Chr$(0),20)
00002BDC <AB3FDConvert.ab3@409>     nn = 1
00002BEA <AB3FDConvert.ab3@410>     WColour 2,0
00002C22 <AB3FDConvert.ab3@411>     NPrint "-------------------------------"
00002C30 <AB3FDConvert.ab3@412>     WPrintScroll
00002C3E <AB3FDConvert.ab3@413>     WColour 3,0
00002CAA <AB3FDConvert.ab3@414>     NPrint " Creating ",li_$
00002CB8 <AB3FDConvert.ab3@415>     WPrintScroll
00002CF0 <AB3FDConvert.ab3@416>     NPrint" "
00002CFE <AB3FDConvert.ab3@417>     WPrintScroll
00002D0C <AB3FDConvert.ab3@418>     WColour 1,0
00002EA4 <AB3FDConvert.ab3@421>   NPrint " CREATING : ",n$(tk),"_",suf$," ",h$(tk)," ",p$(tk)
00002EB2 <AB3FDConvert.ab3@422>   WPrintScroll
00002F6A <AB3FDConvert.ab3@423>   co$+Mki$(6)+Mkl$(0)+Mki$(ln(1))+Mki$(o(tk)) ;type and link
00002FC4 <AB3FDConvert.ab3@425>   p$ = Mid$(p$(tk),2)
0000307A <AB3FDConvert.ab3@426>   While Left$(p$,1) = "a" OR Left$(p$,1) = "d"
000030D4 <AB3FDConvert.ab3@427>     If Left$(p$,1) = "a"
00003182 <AB3FDConvert.ab3@428>       co$+Chr$(Val(Mid$(p$,2,1))+16)
00003186 <AB3FDConvert.ab3@429>     Else
0000322A <AB3FDConvert.ab3@430>       co$+Chr$(Val(Mid$(p$,2,1)))
0000327C <AB3FDConvert.ab3@432>     p$ = Mid$(p$,4)
00003280 <AB3FDConvert.ab3@433>   Wend
000032CE <AB3FDConvert.ab3@435>   co$+Chr$(-1)
000032D4 <AB3FDConvert.ab3@436>   align{}
000033EC <AB3FDConvert.ab3@437>   co$+Mkl$(0)+Mki$(0)+n$(tk)+"_"+suf$+Chr$(0)+h$(tk)+Chr$(0)
000033F2 <AB3FDConvert.ab3@438>   align{}
00003402 <AB3FDConvert.ab3@439> Next
00003432 <AB3FDConvert.ab3@441> If co$ Then Gosub libdone
00003434 <AB3FDConvert.ab3@442> Return
0000344A <AB3FDConvert.ab3@446> If li_=1 ;first one - create 'openlibrary' stuff!
00003456 <AB3FDConvert.ab3@449>   fillin{$16}
000034F2 <AB3FDConvert.ab3@450>   co$+String$(Chr$(0),12) : iat = Len(co$)
0000355E <AB3FDConvert.ab3@451>   co$+Mkl$(0)+Mkl$(0)
0000356A <AB3FDConvert.ab3@454>   fillin{$1c}
00003632 <AB3FDConvert.ab3@455>   co$+String$(Chr$(0),6)+Mki$(ln(1))+Mki$($1100)+Mki$(0)
000036B4 <AB3FDConvert.ab3@456>   co$+Mkl$(0) : fat = Len(co$)
00003720 <AB3FDConvert.ab3@457>   co$+Mkl$(0)+Mkl$(0)
0000378E <AB3FDConvert.ab3@458>   co$+Mki$(-1)+Mkl$(0)
00003798 <AB3FDConvert.ab3@461>   fillin{iat}
000037E8 <AB3FDConvert.ab3@462>   co$+Mkl$($2c780004)         ;     move.l   4.w,a6
000037F2 <AB3FDConvert.ab3@463>   If islib
00003842 <AB3FDConvert.ab3@464>     co$+Mkl$($43fa0022)         ;loop lea      libname(pc),a1
00003846 <AB3FDConvert.ab3@465>   Else
00003896 <AB3FDConvert.ab3@466>     co$+Mkl$($43fa001d)
000038E6 <AB3FDConvert.ab3@468>   co$+Mki$($7000)             ;     moveq    #0,d0
00003936 <AB3FDConvert.ab3@469>   co$+Mki$($4eae)
00003940 <AB3FDConvert.ab3@470>   If islib
00003992 <AB3FDConvert.ab3@471>     co$+Mki$(-552)            ;     jsr      openlibrary(a6)
00003996 <AB3FDConvert.ab3@472>   Else
000039E8 <AB3FDConvert.ab3@473>     co$+Mki$(-498)            ;     jsr      openresource(a6)
00003A38 <AB3FDConvert.ab3@477>   co$+Mki$($4e75)             ;     rts
00003A42 <AB3FDConvert.ab3@480>   fillin{fat}
00003A4C <AB3FDConvert.ab3@481>   If islib
00003A9C <AB3FDConvert.ab3@494>     co$+Mkl$($20094A80)
00003AEC <AB3FDConvert.ab3@495>     co$+Mkl$($6700000C)
00003B3C <AB3FDConvert.ab3@496>     co$+Mkl$($2C790000)
00003B8C <AB3FDConvert.ab3@497>     co$+Mkl$($00044EAE)
00003BDC <AB3FDConvert.ab3@498>     co$+Mkl$($FE624E75)
00003C2C <AB3FDConvert.ab3@499>     co$+Mkl$($70004E75)
00003C30 <AB3FDConvert.ab3@500>   Else
00003C80 <AB3FDConvert.ab3@501>     co$+Mki$($4e75)
00003CEA <AB3FDConvert.ab3@505>   co$+li_$+Chr$(0)
00003D82 <AB3FDConvert.ab3@507>   re$ = Mkl$($3ec)+Mkl$(4)+Mkl$(0)+Mkl$($16)+Mkl$($1c)
00003E06 <AB3FDConvert.ab3@508>   re$+Mkl$(iat)+Mkl$(fat)+Mkl$(0)
00003E0A <AB3FDConvert.ab3@509> Else
00003E78 <AB3FDConvert.ab3@510>   co$+Mki$(-1)+Mkl$(0)
00003EB4 <AB3FDConvert.ab3@513> While (Len(co$) AND 3)
00003F00 <AB3FDConvert.ab3@514>   co$+Chr$(0)
00003F04 <AB3FDConvert.ab3@515> Wend
00003F42 <AB3FDConvert.ab3@518> cl  = Len(co$)/4
00003FDA <AB3FDConvert.ab3@519> in$ =Mkl$($3f3)+Mkl$(0)+Mkl$(1)+Mkl$(0)+Mkl$(0)
0000405E <AB3FDConvert.ab3@520> in$+Mkl$(cl)+Mkl$($3e9)+Mkl$(cl)
00004072 <AB3FDConvert.ab3@522> FileOutput 0
00004146 <AB3FDConvert.ab3@523> Print in$,co$,re$,Mkl$($3f2)
00004164 <AB3FDConvert.ab3@524> CloseFile 0 : DefaultOutput
000041B6 <AB3FDConvert.ab3@526> co$ = "" : re$ = "" : Return
00004200 <AB3FDConvert.ab3@529> n = 0 : bi = -30 : li_$ = "" : gen = -1
00004220 <AB3FDConvert.ab3@530> While NOT Eof(0)
00004248 <AB3FDConvert.ab3@531>   l$ = Edit$(256)
000042A2 <AB3FDConvert.ab3@532>   If Left$(l$,1) <> "*"
000042FC <AB3FDConvert.ab3@533>     If Left$(l$,2) = "##"
000043B6 <AB3FDConvert.ab3@534>       c$=LCase$(Mid$(l$,3)) : c$ = StripLead$(c$,32)
0000441C <AB3FDConvert.ab3@535>       If Left$(c$,6) = "public" Then gen = -1
00004480 <AB3FDConvert.ab3@536>       If Left$(c$,7) = "private" Then gen = 0
000044DC <AB3FDConvert.ab3@537>       If Left$(c$,3) = "end" Then Return
00004594 <AB3FDConvert.ab3@538>       If Left$(c$,4) = "bias" Then bi = -Val(Mid$(c$,5))
00004598 <AB3FDConvert.ab3@539>     Else
000045A2 <AB3FDConvert.ab3@540>       If gen
000045EE <AB3FDConvert.ab3@541>         b1 = Instr(l$,"(")     ;first bracket
00004646 <AB3FDConvert.ab3@542>         b2 = Instr(l$,"(",b1+1) ;second bracket
0000466E <AB3FDConvert.ab3@543>         If b1 > 0 AND b2 > 0
0000467E <AB3FDConvert.ab3@544>           n+1
00004690 <AB3FDConvert.ab3@545>           o(n) = bi
000046F0 <AB3FDConvert.ab3@546>           n$(n) = Left$(l$,b1-1)
000047C6 <AB3FDConvert.ab3@547>           h$(n) = Mid$(l$,b1,b2-b1) : If h$(n) = "()" Then h$(n) = ""
00004836 <AB3FDConvert.ab3@548>           p$(n) = LCase$(Mid$(l$,b2))
0000483A <AB3FDConvert.ab3@549>         Else
00004872 <AB3FDConvert.ab3@550>           NPrint "Error in file :"
00004880 <AB3FDConvert.ab3@551>           WPrintScroll
000048C4 <AB3FDConvert.ab3@552>           NPrint l$
000048D2 <AB3FDConvert.ab3@553>           WPrintScroll
000048E2 <AB3FDConvert.ab3@556>       bi-6
000048E6 <AB3FDConvert.ab3@558>   Else
00004988 <AB3FDConvert.ab3@559>     n$ = Mid$(l$,2) : n$ = StripLead$(n$,32)
000049E8 <AB3FDConvert.ab3@560>     If Left$(n$,1) = Chr$(34)
00004A48 <AB3FDConvert.ab3@561>       n2 = Instr(n$,Chr$(34),2)-2
00004A5E <AB3FDConvert.ab3@562>       If n2 > 0
00004AB4 <AB3FDConvert.ab3@563>         li_$ = Mid$(n$,2,n2)
00004AB8 <AB3FDConvert.ab3@567> Wend
00004ABA <AB3FDConvert.ab3@568> Return
